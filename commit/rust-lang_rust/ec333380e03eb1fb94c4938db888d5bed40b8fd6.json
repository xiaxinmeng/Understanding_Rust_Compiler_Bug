{"sha": "ec333380e03eb1fb94c4938db888d5bed40b8fd6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjMzMzMzgwZTAzZWIxZmI5NGM0OTM4ZGI4ODhkNWJlZDQwYjhmZDY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-06-12T17:49:39Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-06-18T17:51:31Z"}, "message": "Fix libstd tests", "tree": {"sha": "d61a76778a5f1b0bb2de0f754e033f09234e70da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d61a76778a5f1b0bb2de0f754e033f09234e70da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec333380e03eb1fb94c4938db888d5bed40b8fd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec333380e03eb1fb94c4938db888d5bed40b8fd6", "html_url": "https://github.com/rust-lang/rust/commit/ec333380e03eb1fb94c4938db888d5bed40b8fd6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec333380e03eb1fb94c4938db888d5bed40b8fd6/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "913c2273eba32c7a33e068a5ac68007d7f8419d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/913c2273eba32c7a33e068a5ac68007d7f8419d1", "html_url": "https://github.com/rust-lang/rust/commit/913c2273eba32c7a33e068a5ac68007d7f8419d1"}], "stats": {"total": 27, "additions": 12, "deletions": 15}, "files": [{"sha": "bb7e95cd4ae44d7eb4db5f05c0c62d4953a35286", "filename": "src/librustc_trans/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ec333380e03eb1fb94c4938db888d5bed40b8fd6/src%2Flibrustc_trans%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec333380e03eb1fb94c4938db888d5bed40b8fd6/src%2Flibrustc_trans%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Flib.rs?ref=ec333380e03eb1fb94c4938db888d5bed40b8fd6", "patch": "@@ -28,7 +28,6 @@\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n #![feature(const_fn)]\n-#![feature(fs)]\n #![feature(iter_cmp)]\n #![feature(iter_arith)]\n #![feature(libc)]"}, {"sha": "7519cd05195695fe2f2799c8919d112b0608d6cb", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ec333380e03eb1fb94c4938db888d5bed40b8fd6/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec333380e03eb1fb94c4938db888d5bed40b8fd6/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=ec333380e03eb1fb94c4938db888d5bed40b8fd6", "patch": "@@ -75,6 +75,7 @@ This API is completely unstable and subject to change.\n \n #![allow(non_camel_case_types)]\n \n+#![feature(append)]\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n #![feature(drain)]"}, {"sha": "e5242c5bf861ad03f7d63ad49b3360280fe6afa1", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ec333380e03eb1fb94c4938db888d5bed40b8fd6/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec333380e03eb1fb94c4938db888d5bed40b8fd6/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=ec333380e03eb1fb94c4938db888d5bed40b8fd6", "patch": "@@ -106,6 +106,7 @@\n #![feature(alloc)]\n #![feature(allow_internal_unstable)]\n #![feature(associated_consts)]\n+#![feature(borrow_state)]\n #![feature(box_raw)]\n #![feature(box_syntax)]\n #![feature(char_internals)]\n@@ -130,7 +131,6 @@\n #![feature(slice_concat_ext)]\n #![feature(slice_position_elem)]\n #![feature(no_std)]\n-#![feature(num_bits_bytes)]\n #![feature(oom)]\n #![feature(optin_builtin_traits)]\n #![feature(rand)]\n@@ -148,6 +148,9 @@\n #![feature(vec_push_all)]\n #![feature(wrapping)]\n #![feature(zero_one)]\n+#![cfg_attr(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\")),\n+            feature(num_bits_bytes))]\n+#![cfg_attr(windows, feature(str_utf16))]\n #![cfg_attr(test, feature(float_from_str_radix, range_inclusive, float_extras))]\n #![cfg_attr(test, feature(test, rustc_private, float_consts))]\n "}, {"sha": "5002de559884d0f52773fd9fa75f914e9a2b0e76", "filename": "src/libstd/sys/windows/thread_local.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ec333380e03eb1fb94c4938db888d5bed40b8fd6/src%2Flibstd%2Fsys%2Fwindows%2Fthread_local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec333380e03eb1fb94c4938db888d5bed40b8fd6/src%2Flibstd%2Fsys%2Fwindows%2Fthread_local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fthread_local.rs?ref=ec333380e03eb1fb94c4938db888d5bed40b8fd6", "patch": "@@ -12,7 +12,6 @@ use prelude::v1::*;\n \n use libc::types::os::arch::extra::{DWORD, LPVOID, BOOL};\n \n-use boxed;\n use ptr;\n use rt;\n use sys_common::mutex::Mutex;\n@@ -143,7 +142,7 @@ unsafe fn init_dtors() {\n         DTOR_LOCK.unlock();\n     });\n     if res.is_ok() {\n-        DTORS = boxed::into_raw(dtors);\n+        DTORS = Box::into_raw(dtors);\n     } else {\n         DTORS = 1 as *mut _;\n     }"}, {"sha": "60563340d10210c372210ad6fae89836648b9ce4", "filename": "src/libstd/thread/local.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ec333380e03eb1fb94c4938db888d5bed40b8fd6/src%2Flibstd%2Fthread%2Flocal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec333380e03eb1fb94c4938db888d5bed40b8fd6/src%2Flibstd%2Fthread%2Flocal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Flocal.rs?ref=ec333380e03eb1fb94c4938db888d5bed40b8fd6", "patch": "@@ -405,7 +405,6 @@ mod imp {\n mod imp {\n     use prelude::v1::*;\n \n-    use alloc::boxed;\n     use cell::{Cell, UnsafeCell};\n     use marker;\n     use ptr;\n@@ -447,7 +446,7 @@ mod imp {\n                 key: self,\n                 value: UnsafeCell::new(None),\n             };\n-            let ptr = boxed::into_raw(ptr);\n+            let ptr = Box::into_raw(ptr);\n             self.os.set(ptr as *mut u8);\n             Some(&(*ptr).value)\n         }"}, {"sha": "2e03a9a7244202b118f00158df8a5dc464e6e06d", "filename": "src/test/run-pass/issue-13259-windows-tcb-trash.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec333380e03eb1fb94c4938db888d5bed40b8fd6/src%2Ftest%2Frun-pass%2Fissue-13259-windows-tcb-trash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec333380e03eb1fb94c4938db888d5bed40b8fd6/src%2Ftest%2Frun-pass%2Fissue-13259-windows-tcb-trash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-13259-windows-tcb-trash.rs?ref=ec333380e03eb1fb94c4938db888d5bed40b8fd6", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// pretty-expanded FIXME #23616\n-\n #![feature(libc, std_misc)]\n \n extern crate libc;"}, {"sha": "d76bf89d0539680f8178922e5f04ecaa8ab7e024", "filename": "src/test/run-pass/sync-send-iterators-in-libcore.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ec333380e03eb1fb94c4938db888d5bed40b8fd6/src%2Ftest%2Frun-pass%2Fsync-send-iterators-in-libcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec333380e03eb1fb94c4938db888d5bed40b8fd6/src%2Ftest%2Frun-pass%2Fsync-send-iterators-in-libcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsync-send-iterators-in-libcore.rs?ref=ec333380e03eb1fb94c4938db888d5bed40b8fd6", "patch": "@@ -10,15 +10,15 @@\n \n // pretty-expanded FIXME #23616\n \n-#![allow(unused_mut)]\n-#![feature(core)]\n-#![feature(collections)]\n-#![feature(step_by)]\n+#![allow(warnings)]\n #![feature(iter_empty)]\n #![feature(iter_once)]\n+#![feature(iter_unfold)]\n+#![feature(range_inclusive)]\n+#![feature(step_by)]\n+#![feature(str_escape)]\n \n use std::iter::{empty, once, range_inclusive, repeat, Unfold};\n->>>>>>> Fallout in tests and docs from feature renamings\n \n fn is_sync<T>(_: T) where T: Sync {}\n fn is_send<T>(_: T) where T: Send {}"}, {"sha": "c9742b0645e1da9e3a65479df800f32004cacdb6", "filename": "src/test/run-pass/x86stdcall2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec333380e03eb1fb94c4938db888d5bed40b8fd6/src%2Ftest%2Frun-pass%2Fx86stdcall2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec333380e03eb1fb94c4938db888d5bed40b8fd6/src%2Ftest%2Frun-pass%2Fx86stdcall2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fx86stdcall2.rs?ref=ec333380e03eb1fb94c4938db888d5bed40b8fd6", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// pretty-expanded FIXME #23616\n-\n #![feature(std_misc)]\n \n pub type HANDLE = u32;"}]}