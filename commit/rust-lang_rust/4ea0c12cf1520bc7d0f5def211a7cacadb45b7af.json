{"sha": "4ea0c12cf1520bc7d0f5def211a7cacadb45b7af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlYTBjMTJjZjE1MjBiYzdkMGY1ZGVmMjExYTdjYWNhZGI0NWI3YWY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-04T12:22:32Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-04T12:22:32Z"}, "message": "Make sure that newly created nodes are the root of the tree", "tree": {"sha": "edd9e8254a4223d719940f44f99addc0a2920fba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edd9e8254a4223d719940f44f99addc0a2920fba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ea0c12cf1520bc7d0f5def211a7cacadb45b7af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ea0c12cf1520bc7d0f5def211a7cacadb45b7af", "html_url": "https://github.com/rust-lang/rust/commit/4ea0c12cf1520bc7d0f5def211a7cacadb45b7af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ea0c12cf1520bc7d0f5def211a7cacadb45b7af/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1a06499fa5f9a40750cbfc30a7d399228a5fab0", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1a06499fa5f9a40750cbfc30a7d399228a5fab0", "html_url": "https://github.com/rust-lang/rust/commit/c1a06499fa5f9a40750cbfc30a7d399228a5fab0"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "38c0e9a666631c10db5a8b932a58761d78c61d98", "filename": "crates/ra_syntax/src/ast/make.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4ea0c12cf1520bc7d0f5def211a7cacadb45b7af/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ea0c12cf1520bc7d0f5def211a7cacadb45b7af/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs?ref=4ea0c12cf1520bc7d0f5def211a7cacadb45b7af", "patch": "@@ -2,7 +2,7 @@\n //! of smaller pieces.\n use itertools::Itertools;\n \n-use crate::{ast, AstNode, SourceFile, SyntaxKind, SyntaxToken};\n+use crate::{ast, AstNode, SourceFile, SyntaxKind, SyntaxNode, SyntaxToken};\n \n pub fn name(text: &str) -> ast::Name {\n     ast_from_text(&format!(\"mod {};\", text))\n@@ -179,7 +179,16 @@ pub fn token(kind: SyntaxKind) -> SyntaxToken {\n \n fn ast_from_text<N: AstNode>(text: &str) -> N {\n     let parse = SourceFile::parse(text);\n-    parse.tree().syntax().descendants().find_map(N::cast).unwrap()\n+    let node = parse.tree().syntax().descendants().find_map(N::cast).unwrap();\n+    let node = node.syntax().clone();\n+    let node = unroot(node);\n+    let node = N::cast(node).unwrap();\n+    assert_eq!(node.syntax().text_range().start(), 0.into());\n+    node\n+}\n+\n+fn unroot(n: SyntaxNode) -> SyntaxNode {\n+    SyntaxNode::new_root(n.green().clone())\n }\n \n pub mod tokens {"}]}