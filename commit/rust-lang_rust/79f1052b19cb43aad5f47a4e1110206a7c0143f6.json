{"sha": "79f1052b19cb43aad5f47a4e1110206a7c0143f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5ZjEwNTJiMTljYjQzYWFkNWY0N2E0ZTExMTAyMDZhN2MwMTQzZjY=", "commit": {"author": {"name": "Do Nhat Minh", "email": "mrordinaire@gmail.com", "date": "2013-07-28T03:21:39Z"}, "committer": {"name": "Do Nhat Minh", "email": "mrordinaire@gmail.com", "date": "2013-07-29T12:34:01Z"}, "message": "Added %p directive to fmt!, which expects *T as argument", "tree": {"sha": "74cf1b991dda2d769f996d2232104911e71ccc93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74cf1b991dda2d769f996d2232104911e71ccc93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79f1052b19cb43aad5f47a4e1110206a7c0143f6", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79f1052b19cb43aad5f47a4e1110206a7c0143f6", "html_url": "https://github.com/rust-lang/rust/commit/79f1052b19cb43aad5f47a4e1110206a7c0143f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79f1052b19cb43aad5f47a4e1110206a7c0143f6/comments", "author": null, "committer": null, "parents": [{"sha": "5c4cd30f80273ba573df048b6295ea6e543df599", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c4cd30f80273ba573df048b6295ea6e543df599", "html_url": "https://github.com/rust-lang/rust/commit/5c4cd30f80273ba573df048b6295ea6e543df599"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "1a136bbaa3774c95e7084a1e92a3ea5045b7f7cb", "filename": "src/libstd/unstable/extfmt.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/79f1052b19cb43aad5f47a4e1110206a7c0143f6/src%2Flibstd%2Funstable%2Fextfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79f1052b19cb43aad5f47a4e1110206a7c0143f6/src%2Flibstd%2Funstable%2Fextfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fextfmt.rs?ref=79f1052b19cb43aad5f47a4e1110206a7c0143f6", "patch": "@@ -114,6 +114,7 @@ pub mod ct {\n         TyHex(Caseness),\n         TyOctal,\n         TyFloat,\n+        TyPointer,\n         TyPoly,\n     }\n \n@@ -325,6 +326,7 @@ pub mod ct {\n             't' => TyBits,\n             'o' => TyOctal,\n             'f' => TyFloat,\n+            'p' => TyPointer,\n             '?' => TyPoly,\n             _ => err(fmt!(\"unknown type in conversion: %c\", s.char_at(i)))\n         };\n@@ -434,6 +436,7 @@ pub mod ct {\n         assert!(test(\"t\", TyBits));\n         assert!(test(\"x\", TyHex(CaseLower)));\n         assert!(test(\"X\", TyHex(CaseUpper)));\n+        assert!(test(\"p\", TyPointer));\n         assert!(test(\"?\", TyPoly));\n     }\n \n@@ -573,6 +576,10 @@ pub mod rt {\n         } else { None };\n         pad(cv, s, head, PadFloat, buf);\n     }\n+    pub fn conv_pointer<T>(cv: Conv, ptr: *T, buf: &mut ~str) {\n+        let s = ~\"0x\" + uint_to_str_prec(ptr as uint, 16, 1u);\n+        pad(cv, s, None, PadNozero, buf);\n+    }\n     pub fn conv_poly<T>(cv: Conv, v: &T, buf: &mut ~str) {\n         let s = sys::log_str(v);\n         conv_str(cv, s, buf);"}, {"sha": "855cf47111ae9fb59a21632f4610ba5cb6fda069", "filename": "src/libsyntax/ext/fmt.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79f1052b19cb43aad5f47a4e1110206a7c0143f6/src%2Flibsyntax%2Fext%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79f1052b19cb43aad5f47a4e1110206a7c0143f6/src%2Flibsyntax%2Fext%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ffmt.rs?ref=79f1052b19cb43aad5f47a4e1110206a7c0143f6", "patch": "@@ -191,6 +191,7 @@ fn pieces_to_expr(cx: @ExtCtxt, sp: span,\n             TyChar => (\"char\", arg),\n             TyBits | TyOctal | TyHex(_) | TyInt(Unsigned) => (\"uint\", arg),\n             TyFloat => (\"float\", arg),\n+            TyPointer => (\"pointer\", arg),\n             TyPoly => (\"poly\", cx.expr_addr_of(sp, arg))\n         };\n         return make_conv_call(cx, arg.span, name, cnv, actual_arg,\n@@ -242,6 +243,7 @@ fn pieces_to_expr(cx: @ExtCtxt, sp: span,\n           },\n           TyOctal => debug!(\"type: octal\"),\n           TyFloat => debug!(\"type: float\"),\n+          TyPointer => debug!(\"type: pointer\"),\n           TyPoly => debug!(\"type: poly\")\n         }\n     }"}, {"sha": "513bc078e7f91db2346b5f7ee1e2038f263dd712", "filename": "src/test/run-pass/syntax-extension-fmt.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/79f1052b19cb43aad5f47a4e1110206a7c0143f6/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79f1052b19cb43aad5f47a4e1110206a7c0143f6/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt.rs?ref=79f1052b19cb43aad5f47a4e1110206a7c0143f6", "patch": "@@ -32,6 +32,7 @@ pub fn main() {\n     part6();\n     percent();\n     more_floats();\n+    pointer();\n }\n \n fn part1() {\n@@ -263,3 +264,13 @@ fn more_floats() {\n     assert_eq!(~\"7.0000\", fmt!(\"%.4f\", 6.999999999));\n     assert_eq!(~\"3.141590000\", fmt!(\"%.9f\", 3.14159));\n }\n+\n+fn pointer() {\n+    for 10.times {\n+        let x: uint = ::std::rand::random();\n+        assert_eq!(fmt!(\"%p\", x as *uint), fmt!(\"0x%x\", x));\n+    }\n+\n+    let i = &1;\n+    assert_eq!(fmt!(\"%p\", i), fmt!(\"0x%x\", i as *uint as uint));\n+}"}]}