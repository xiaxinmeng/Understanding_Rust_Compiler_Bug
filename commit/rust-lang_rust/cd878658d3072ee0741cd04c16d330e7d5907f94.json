{"sha": "cd878658d3072ee0741cd04c16d330e7d5907f94", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkODc4NjU4ZDMwNzJlZTA3NDFjZDA0YzE2ZDMzMGU3ZDU5MDdmOTQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-04T17:07:25Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-05T09:36:38Z"}, "message": "Introduce modules_from_source fn", "tree": {"sha": "74367519b1bf6f48ef7d795684e2418c6aefb706", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74367519b1bf6f48ef7d795684e2418c6aefb706"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd878658d3072ee0741cd04c16d330e7d5907f94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd878658d3072ee0741cd04c16d330e7d5907f94", "html_url": "https://github.com/rust-lang/rust/commit/cd878658d3072ee0741cd04c16d330e7d5907f94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd878658d3072ee0741cd04c16d330e7d5907f94/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6502bd2c966d57bdb8fbba7f43da9ddd004d87d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6502bd2c966d57bdb8fbba7f43da9ddd004d87d3", "html_url": "https://github.com/rust-lang/rust/commit/6502bd2c966d57bdb8fbba7f43da9ddd004d87d3"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "4e871d16da54fa18743526babb5fe57e914abda2", "filename": "crates/ra_analysis/src/descriptors/module/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cd878658d3072ee0741cd04c16d330e7d5907f94/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd878658d3072ee0741cd04c16d330e7d5907f94/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fmod.rs?ref=cd878658d3072ee0741cd04c16d330e7d5907f94", "patch": "@@ -25,15 +25,19 @@ pub(crate) struct ModuleTree {\n }\n \n impl ModuleTree {\n-    pub(crate) fn modules_for_file(&self, file_id: FileId) -> Vec<ModuleId> {\n+    pub(crate) fn modules_for_source(&self, source: ModuleSource) -> Vec<ModuleId> {\n         self.mods\n             .iter()\n             .enumerate()\n-            .filter(|(_idx, it)| it.source.is_file(file_id))\n+            .filter(|(_idx, it)| it.source == source)\n             .map(|(idx, _)| ModuleId(idx as u32))\n             .collect()\n     }\n \n+    pub(crate) fn modules_for_file(&self, file_id: FileId) -> Vec<ModuleId> {\n+        self.modules_for_source(ModuleSource::File(file_id))\n+    }\n+\n     pub(crate) fn any_module_for_file(&self, file_id: FileId) -> Option<ModuleId> {\n         self.modules_for_file(file_id).pop()\n     }\n@@ -178,10 +182,6 @@ impl ModuleSource {\n             }\n         }\n     }\n-\n-    fn is_file(self, file_id: FileId) -> bool {\n-        self.as_file() == Some(file_id)\n-    }\n }\n \n #[derive(Hash, Debug, PartialEq, Eq)]"}]}