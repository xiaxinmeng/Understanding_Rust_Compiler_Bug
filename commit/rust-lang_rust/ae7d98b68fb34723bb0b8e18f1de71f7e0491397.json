{"sha": "ae7d98b68fb34723bb0b8e18f1de71f7e0491397", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlN2Q5OGI2OGZiMzQ3MjNiYjBiOGUxOGYxZGU3MWY3ZTA0OTEzOTc=", "commit": {"author": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-02-19T00:06:33Z"}, "committer": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-02-19T00:06:33Z"}, "message": "Extract constant for minimum fd", "tree": {"sha": "0e3e6717f2ecc731964e0abef84b6697649b16da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e3e6717f2ecc731964e0abef84b6697649b16da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae7d98b68fb34723bb0b8e18f1de71f7e0491397", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae7d98b68fb34723bb0b8e18f1de71f7e0491397", "html_url": "https://github.com/rust-lang/rust/commit/ae7d98b68fb34723bb0b8e18f1de71f7e0491397", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae7d98b68fb34723bb0b8e18f1de71f7e0491397/comments", "author": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "committer": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0933314bffefdd6dcec2705a157d8228acf6fb49", "url": "https://api.github.com/repos/rust-lang/rust/commits/0933314bffefdd6dcec2705a157d8228acf6fb49", "html_url": "https://github.com/rust-lang/rust/commit/0933314bffefdd6dcec2705a157d8228acf6fb49"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "e5ed22634db9ecfa50c9ddb03ef4222eaecb3dbf", "filename": "src/shims/fs.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ae7d98b68fb34723bb0b8e18f1de71f7e0491397/src%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae7d98b68fb34723bb0b8e18f1de71f7e0491397/src%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ffs.rs?ref=ae7d98b68fb34723bb0b8e18f1de71f7e0491397", "patch": "@@ -23,13 +23,16 @@ pub struct FileHandler {\n     handles: BTreeMap<i32, FileHandle>,\n }\n \n+// fd numbers 0, 1, and 2 are reserved for stdin, stdout, and stderr\n+const MIN_NORMAL_FILE_FD: i32 = 3;\n+\n impl FileHandler {\n     fn insert_fd(&mut self, file_handle: FileHandle) -> i32 {\n-        self.insert_fd_with_min_fd(file_handle, 3)\n+        self.insert_fd_with_min_fd(file_handle, 0)\n     }\n \n     fn insert_fd_with_min_fd(&mut self, file_handle: FileHandle, min_fd: i32) -> i32 {\n-        let min_fd = std::cmp::max(min_fd, 3);\n+        let min_fd = std::cmp::max(min_fd, MIN_NORMAL_FILE_FD);\n \n         // Find the lowest unused FD, starting from min_fd. If the first such unused FD is in\n         // between used FDs, the find_map combinator will return it. If the first such unused FD\n@@ -171,7 +174,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             // because exec() isn't supported. The F_DUPFD and F_DUPFD_CLOEXEC commands only\n             // differ in whether the FD_CLOEXEC flag is pre-set on the new file descriptor,\n             // thus they can share the same implementation here.\n-            if fd <= 2 {\n+            if fd < MIN_NORMAL_FILE_FD {\n                 throw_unsup_format!(\"Duplicating file descriptors for stdin, stdout, or stderr is not supported\")\n             }\n             let start_op = start_op.ok_or_else(|| {"}]}