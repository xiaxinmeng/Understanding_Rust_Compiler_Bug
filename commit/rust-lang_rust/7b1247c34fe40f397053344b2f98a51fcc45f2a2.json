{"sha": "7b1247c34fe40f397053344b2f98a51fcc45f2a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiMTI0N2MzNGZlNDBmMzk3MDUzMzQ0YjJmOThhNTFmY2M0NWYyYTI=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-14T20:19:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-14T20:19:30Z"}, "message": "Rollup merge of #74271 - lzutao:cmdbytes, r=LukasKalbertodt\n\nprocess_unix: prefer i32::*_be_bytes over manually shifting bytes\n\nThis PR makes it more clear about the intend of the code.", "tree": {"sha": "8cb5e3a78f95a9067f9bb036e2efbb46f4f8e2ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8cb5e3a78f95a9067f9bb036e2efbb46f4f8e2ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b1247c34fe40f397053344b2f98a51fcc45f2a2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfDhNSCRBK7hj4Ov3rIwAAdHIIABLmYCg/3g09ZUAsaG2KFg5P\nzcq8mWNa9ywcKkKLRcRv+qVtBEGJEGyzkPNPCFIlDpA2T28L8J9CcWy76CgY3Ull\nQvL1EVhB2L1cqAAl79nCgqB3Uj+lLmMOm9V0NtYWRYeVByaJ+W+Jc96kd+9GWyD4\n6wgu1apUjwGtWLqLThMkc2yUA5yZgU4dDL5DSMfw0RZAetsrGIE8MZoTpoc/Sy5K\nOZHraPizqzU3UkR6Y3VW6FgsRgjI3by5zAOwFRxQjXsV+FSCZ/APhYRFWEoxVVIJ\nprT41glFIxfgtFRlVzRJTVVR/oRbQxcCRpXRX2jcPiwvMweaBq73kJzyI3yyxc8=\n=C7+C\n-----END PGP SIGNATURE-----\n", "payload": "tree 8cb5e3a78f95a9067f9bb036e2efbb46f4f8e2ae\nparent fadd91c630bb4cf606f7ef3ec68d7b6cbcb363b5\nparent 879afd5116a77baea6cdb76029e878bb24eba203\nauthor Manish Goregaokar <manishsmail@gmail.com> 1594757970 -0700\ncommitter GitHub <noreply@github.com> 1594757970 -0700\n\nRollup merge of #74271 - lzutao:cmdbytes, r=LukasKalbertodt\n\nprocess_unix: prefer i32::*_be_bytes over manually shifting bytes\n\nThis PR makes it more clear about the intend of the code.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b1247c34fe40f397053344b2f98a51fcc45f2a2", "html_url": "https://github.com/rust-lang/rust/commit/7b1247c34fe40f397053344b2f98a51fcc45f2a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b1247c34fe40f397053344b2f98a51fcc45f2a2/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fadd91c630bb4cf606f7ef3ec68d7b6cbcb363b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/fadd91c630bb4cf606f7ef3ec68d7b6cbcb363b5", "html_url": "https://github.com/rust-lang/rust/commit/fadd91c630bb4cf606f7ef3ec68d7b6cbcb363b5"}, {"sha": "879afd5116a77baea6cdb76029e878bb24eba203", "url": "https://api.github.com/repos/rust-lang/rust/commits/879afd5116a77baea6cdb76029e878bb24eba203", "html_url": "https://github.com/rust-lang/rust/commit/879afd5116a77baea6cdb76029e878bb24eba203"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "de35fe0521d03a8a3cefc8597732868048eca5b7", "filename": "src/libstd/sys/unix/process/process_unix.rs", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/7b1247c34fe40f397053344b2f98a51fcc45f2a2/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b1247c34fe40f397053344b2f98a51fcc45f2a2/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs?ref=7b1247c34fe40f397053344b2f98a51fcc45f2a2", "patch": "@@ -1,3 +1,4 @@\n+use crate::convert::TryInto;\n use crate::fmt;\n use crate::io::{self, Error, ErrorKind};\n use crate::ptr;\n@@ -17,7 +18,7 @@ impl Command {\n         default: Stdio,\n         needs_stdin: bool,\n     ) -> io::Result<(Process, StdioPipes)> {\n-        const CLOEXEC_MSG_FOOTER: &[u8] = b\"NOEX\";\n+        const CLOEXEC_MSG_FOOTER: [u8; 4] = *b\"NOEX\";\n \n         let envp = self.capture_env();\n \n@@ -52,11 +53,12 @@ impl Command {\n                     drop(input);\n                     let Err(err) = self.do_exec(theirs, envp.as_ref());\n                     let errno = err.raw_os_error().unwrap_or(libc::EINVAL) as u32;\n+                    let errno = errno.to_be_bytes();\n                     let bytes = [\n-                        (errno >> 24) as u8,\n-                        (errno >> 16) as u8,\n-                        (errno >> 8) as u8,\n-                        (errno >> 0) as u8,\n+                        errno[0],\n+                        errno[1],\n+                        errno[2],\n+                        errno[3],\n                         CLOEXEC_MSG_FOOTER[0],\n                         CLOEXEC_MSG_FOOTER[1],\n                         CLOEXEC_MSG_FOOTER[2],\n@@ -81,12 +83,13 @@ impl Command {\n             match input.read(&mut bytes) {\n                 Ok(0) => return Ok((p, ours)),\n                 Ok(8) => {\n+                    let (errno, footer) = bytes.split_at(4);\n                     assert!(\n-                        combine(CLOEXEC_MSG_FOOTER) == combine(&bytes[4..8]),\n+                        combine(CLOEXEC_MSG_FOOTER) == combine(footer.try_into().unwrap()),\n                         \"Validation on the CLOEXEC pipe failed: {:?}\",\n                         bytes\n                     );\n-                    let errno = combine(&bytes[0..4]);\n+                    let errno = combine(errno.try_into().unwrap());\n                     assert!(p.wait().is_ok(), \"wait() should either return Ok or panic\");\n                     return Err(Error::from_raw_os_error(errno));\n                 }\n@@ -103,13 +106,8 @@ impl Command {\n             }\n         }\n \n-        fn combine(arr: &[u8]) -> i32 {\n-            let a = arr[0] as u32;\n-            let b = arr[1] as u32;\n-            let c = arr[2] as u32;\n-            let d = arr[3] as u32;\n-\n-            ((a << 24) | (b << 16) | (c << 8) | (d << 0)) as i32\n+        fn combine(arr: [u8; 4]) -> i32 {\n+            i32::from_be_bytes(arr)\n         }\n     }\n "}]}