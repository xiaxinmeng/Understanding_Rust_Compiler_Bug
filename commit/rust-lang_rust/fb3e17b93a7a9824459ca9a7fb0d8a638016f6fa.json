{"sha": "fb3e17b93a7a9824459ca9a7fb0d8a638016f6fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiM2UxN2I5M2E3YTk4MjQ0NTljYTlhN2ZiMGQ4YTYzODAxNmY2ZmE=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@gmail", "date": "2013-06-24T15:47:21Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@gmail", "date": "2013-06-27T17:28:37Z"}, "message": "debuginfo: Added test cases for region pointers into heap boxes for basic types.", "tree": {"sha": "11c80b4a2a53ba4d14b2a326fafe79f79898c323", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11c80b4a2a53ba4d14b2a326fafe79f79898c323"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb3e17b93a7a9824459ca9a7fb0d8a638016f6fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb3e17b93a7a9824459ca9a7fb0d8a638016f6fa", "html_url": "https://github.com/rust-lang/rust/commit/fb3e17b93a7a9824459ca9a7fb0d8a638016f6fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb3e17b93a7a9824459ca9a7fb0d8a638016f6fa/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "751f0fba6fe9df4003cd18e95c8438e2cf742f9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/751f0fba6fe9df4003cd18e95c8438e2cf742f9a", "html_url": "https://github.com/rust-lang/rust/commit/751f0fba6fe9df4003cd18e95c8438e2cf742f9a"}], "stats": {"total": 230, "additions": 230, "deletions": 0}, "files": [{"sha": "b93b2cee2d27341d6400fb5195306912446bd20d", "filename": "src/test/debug-info/reference-to-managed-basic.rs", "status": "added", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/fb3e17b93a7a9824459ca9a7fb0d8a638016f6fa/src%2Ftest%2Fdebug-info%2Freference-to-managed-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb3e17b93a7a9824459ca9a7fb0d8a638016f6fa/src%2Ftest%2Fdebug-info%2Freference-to-managed-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Freference-to-managed-basic.rs?ref=fb3e17b93a7a9824459ca9a7fb0d8a638016f6fa", "patch": "@@ -0,0 +1,115 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-win32 Broken because of LLVM bug: http://llvm.org/bugs/show_bug.cgi?id=16249\n+\n+// Gdb doesn't know\n+// about UTF-32 character encoding and will print a rust char as only\n+// its numerical value.\n+\n+// compile-flags:-Z extra-debug-info\n+// debugger:break zzz\n+// debugger:run\n+// debugger:finish\n+// debugger:print *bool_ref\n+// check:$1 = true\n+\n+// debugger:print *int_ref\n+// check:$2 = -1\n+\n+// debugger:print *char_ref\n+// check:$3 = 97\n+\n+// debugger:print/d *i8_ref\n+// check:$4 = 68\n+\n+// debugger:print *i16_ref\n+// check:$5 = -16\n+\n+// debugger:print *i32_ref\n+// check:$6 = -32\n+\n+// debugger:print *i64_ref\n+// check:$7 = -64\n+\n+// debugger:print *uint_ref\n+// check:$8 = 1\n+\n+// debugger:print/d *u8_ref\n+// check:$9 = 100\n+\n+// debugger:print *u16_ref\n+// check:$10 = 16\n+\n+// debugger:print *u32_ref\n+// check:$11 = 32\n+\n+// debugger:print *u64_ref\n+// check:$12 = 64\n+\n+// debugger:print *float_ref\n+// check:$13 = 1.5\n+\n+// debugger:print *f32_ref\n+// check:$14 = 2.5\n+\n+// debugger:print *f64_ref\n+// check:$15 = 3.5\n+\n+\n+fn main() {\n+    let bool_box: @bool = @true;\n+    let bool_ref : &bool = bool_box;\n+\n+    let int_box: @int = @-1;\n+    let int_ref : &int = int_box;\n+\n+    let char_box: @char = @'a';\n+    let char_ref : &char = char_box;\n+\n+    let i8_box: @i8 = @68;\n+    let i8_ref : &i8 = i8_box;\n+\n+    let i16_box: @i16 = @-16;\n+    let i16_ref : &i16 = i16_box;\n+\n+    let i32_box: @i32 = @-32;\n+    let i32_ref : &i32 = i32_box;\n+\n+    let i64_box: @i64 = @-64;\n+    let i64_ref : &i64 = i64_box;\n+\n+    let uint_box: @uint = @1;\n+    let uint_ref : &uint = uint_box;\n+\n+    let u8_box: @u8 = @100;\n+    let u8_ref : &u8 = u8_box;\n+\n+    let u16_box: @u16 = @16;\n+    let u16_ref : &u16 = u16_box;\n+\n+    let u32_box: @u32 = @32;\n+    let u32_ref : &u32 = u32_box;\n+\n+    let u64_box: @u64 = @64;\n+    let u64_ref : &u64 = u64_box;\n+\n+    let float_box: @float = @1.5;\n+    let float_ref : &float = float_box;\n+\n+    let f32_box: @f32 = @2.5;\n+    let f32_ref : &f32 = f32_box;\n+\n+    let f64_box: @f64 = @3.5;\n+    let f64_ref : &f64 = f64_box;\n+    zzz();\n+}\n+\n+fn zzz() {()}\n\\ No newline at end of file"}, {"sha": "ce5b50459f660c5dcba3f32d469d8421c65de0a9", "filename": "src/test/debug-info/reference-to-unique-basic.rs", "status": "added", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/fb3e17b93a7a9824459ca9a7fb0d8a638016f6fa/src%2Ftest%2Fdebug-info%2Freference-to-unique-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb3e17b93a7a9824459ca9a7fb0d8a638016f6fa/src%2Ftest%2Fdebug-info%2Freference-to-unique-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Freference-to-unique-basic.rs?ref=fb3e17b93a7a9824459ca9a7fb0d8a638016f6fa", "patch": "@@ -0,0 +1,115 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-win32 Broken because of LLVM bug: http://llvm.org/bugs/show_bug.cgi?id=16249\n+\n+// Gdb doesn't know\n+// about UTF-32 character encoding and will print a rust char as only\n+// its numerical value.\n+\n+// compile-flags:-Z extra-debug-info\n+// debugger:break zzz\n+// debugger:run\n+// debugger:finish\n+// debugger:print *bool_ref\n+// check:$1 = true\n+\n+// debugger:print *int_ref\n+// check:$2 = -1\n+\n+// debugger:print *char_ref\n+// check:$3 = 97\n+\n+// debugger:print/d *i8_ref\n+// check:$4 = 68\n+\n+// debugger:print *i16_ref\n+// check:$5 = -16\n+\n+// debugger:print *i32_ref\n+// check:$6 = -32\n+\n+// debugger:print *i64_ref\n+// check:$7 = -64\n+\n+// debugger:print *uint_ref\n+// check:$8 = 1\n+\n+// debugger:print/d *u8_ref\n+// check:$9 = 100\n+\n+// debugger:print *u16_ref\n+// check:$10 = 16\n+\n+// debugger:print *u32_ref\n+// check:$11 = 32\n+\n+// debugger:print *u64_ref\n+// check:$12 = 64\n+\n+// debugger:print *float_ref\n+// check:$13 = 1.5\n+\n+// debugger:print *f32_ref\n+// check:$14 = 2.5\n+\n+// debugger:print *f64_ref\n+// check:$15 = 3.5\n+\n+\n+fn main() {\n+    let bool_box: ~bool = ~true;\n+    let bool_ref : &bool = bool_box;\n+\n+    let int_box: ~int = ~-1;\n+    let int_ref : &int = int_box;\n+\n+    let char_box: ~char = ~'a';\n+    let char_ref : &char = char_box;\n+\n+    let i8_box: ~i8 = ~68;\n+    let i8_ref : &i8 = i8_box;\n+\n+    let i16_box: ~i16 = ~-16;\n+    let i16_ref : &i16 = i16_box;\n+\n+    let i32_box: ~i32 = ~-32;\n+    let i32_ref : &i32 = i32_box;\n+\n+    let i64_box: ~i64 = ~-64;\n+    let i64_ref : &i64 = i64_box;\n+\n+    let uint_box: ~uint = ~1;\n+    let uint_ref : &uint = uint_box;\n+\n+    let u8_box: ~u8 = ~100;\n+    let u8_ref : &u8 = u8_box;\n+\n+    let u16_box: ~u16 = ~16;\n+    let u16_ref : &u16 = u16_box;\n+\n+    let u32_box: ~u32 = ~32;\n+    let u32_ref : &u32 = u32_box;\n+\n+    let u64_box: ~u64 = ~64;\n+    let u64_ref : &u64 = u64_box;\n+\n+    let float_box: ~float = ~1.5;\n+    let float_ref : &float = float_box;\n+\n+    let f32_box: ~f32 = ~2.5;\n+    let f32_ref : &f32 = f32_box;\n+\n+    let f64_box: ~f64 = ~3.5;\n+    let f64_ref : &f64 = f64_box;\n+    zzz();\n+}\n+\n+fn zzz() {()}\n\\ No newline at end of file"}]}