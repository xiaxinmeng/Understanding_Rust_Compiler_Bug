{"sha": "469c620bded61d265ef020b2442b1f639b2d8c10", "node_id": "C_kwDOAAsO6NoAKDQ2OWM2MjBiZGVkNjFkMjY1ZWYwMjBiMjQ0MmIxZjYzOWIyZDhjMTA", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2022-10-22T01:43:48Z"}, "committer": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2022-10-29T15:55:01Z"}, "message": "Account for pointer metadata in pointer bounds", "tree": {"sha": "c02f45aaf659af4710b1fd194b71018ee73b996f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c02f45aaf659af4710b1fd194b71018ee73b996f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/469c620bded61d265ef020b2442b1f639b2d8c10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/469c620bded61d265ef020b2442b1f639b2d8c10", "html_url": "https://github.com/rust-lang/rust/commit/469c620bded61d265ef020b2442b1f639b2d8c10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/469c620bded61d265ef020b2442b1f639b2d8c10/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "078cb58e766c20a2705f22f7a6f9bc0cf451e16d", "url": "https://api.github.com/repos/rust-lang/rust/commits/078cb58e766c20a2705f22f7a6f9bc0cf451e16d", "html_url": "https://github.com/rust-lang/rust/commit/078cb58e766c20a2705f22f7a6f9bc0cf451e16d"}], "stats": {"total": 42, "additions": 32, "deletions": 10}, "files": [{"sha": "65a3f845ffca74022127bf319ffccf5c77bacf38", "filename": "crates/core_simd/src/cast.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/469c620bded61d265ef020b2442b1f639b2d8c10/crates%2Fcore_simd%2Fsrc%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/469c620bded61d265ef020b2442b1f639b2d8c10/crates%2Fcore_simd%2Fsrc%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fcast.rs?ref=469c620bded61d265ef020b2442b1f639b2d8c10", "patch": "@@ -37,9 +37,19 @@ unsafe impl SimdCast for f64 {}\n /// # Safety\n /// Implementing this trait asserts that the type is a valid vector element for the `simd_cast_ptr`\n /// intrinsic.\n-pub unsafe trait SimdCastPtr: SimdElement {}\n+pub unsafe trait SimdCastPtr<T> {}\n \n // Safety: pointers can be cast to other pointer types\n-unsafe impl<T> SimdCastPtr for *const T {}\n+unsafe impl<T, U> SimdCastPtr<T> for *const U\n+where\n+    U: core::ptr::Pointee,\n+    T: core::ptr::Pointee<Metadata = U::Metadata>,\n+{\n+}\n // Safety: pointers can be cast to other pointer types\n-unsafe impl<T> SimdCastPtr for *mut T {}\n+unsafe impl<T, U> SimdCastPtr<T> for *mut U\n+where\n+    U: core::ptr::Pointee,\n+    T: core::ptr::Pointee<Metadata = U::Metadata>,\n+{\n+}"}, {"sha": "828731629692cdf1dfb1845db8c41e7cb9698ea8", "filename": "crates/core_simd/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/469c620bded61d265ef020b2442b1f639b2d8c10/crates%2Fcore_simd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/469c620bded61d265ef020b2442b1f639b2d8c10/crates%2Fcore_simd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Flib.rs?ref=469c620bded61d265ef020b2442b1f639b2d8c10", "patch": "@@ -8,7 +8,8 @@\n     simd_ffi,\n     staged_api,\n     stdsimd,\n-    strict_provenance\n+    strict_provenance,\n+    ptr_metadata\n )]\n #![cfg_attr(feature = \"generic_const_exprs\", feature(generic_const_exprs))]\n #![cfg_attr(feature = \"generic_const_exprs\", allow(incomplete_features))]"}, {"sha": "c5d68f1b921f2a91e79ea301a79bbbd39a0eeb13", "filename": "crates/core_simd/src/vector.rs", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/469c620bded61d265ef020b2442b1f639b2d8c10/crates%2Fcore_simd%2Fsrc%2Fvector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/469c620bded61d265ef020b2442b1f639b2d8c10/crates%2Fcore_simd%2Fsrc%2Fvector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvector.rs?ref=469c620bded61d265ef020b2442b1f639b2d8c10", "patch": "@@ -220,9 +220,10 @@ where\n     /// Lanewise casts pointers to another pointer type.\n     #[must_use]\n     #[inline]\n-    pub fn cast_ptr<U: SimdCastPtr>(self) -> Simd<U, LANES>\n+    pub fn cast_ptr<U>(self) -> Simd<U, LANES>\n     where\n-        T: SimdCastPtr,\n+        T: SimdCastPtr<U>,\n+        U: SimdElement,\n     {\n         // Safety: supported types are guaranteed by SimdCastPtr\n         unsafe { intrinsics::simd_cast_ptr(self) }\n@@ -753,14 +754,24 @@ unsafe impl SimdElement for f64 {\n \n impl<T> Sealed for *const T {}\n \n-// Safety: const pointers are valid SIMD element types, and are supported by this API\n-unsafe impl<T> SimdElement for *const T {\n+// Safety: (thin) const pointers are valid SIMD element types, and are supported by this API\n+//\n+// Fat pointers may be supported in the future.\n+unsafe impl<T> SimdElement for *const T\n+where\n+    T: core::ptr::Pointee<Metadata = ()>,\n+{\n     type Mask = isize;\n }\n \n impl<T> Sealed for *mut T {}\n \n-// Safety: mut pointers are valid SIMD element types, and are supported by this API\n-unsafe impl<T> SimdElement for *mut T {\n+// Safety: (thin) mut pointers are valid SIMD element types, and are supported by this API\n+//\n+// Fat pointers may be supported in the future.\n+unsafe impl<T> SimdElement for *mut T\n+where\n+    T: core::ptr::Pointee<Metadata = ()>,\n+{\n     type Mask = isize;\n }"}]}