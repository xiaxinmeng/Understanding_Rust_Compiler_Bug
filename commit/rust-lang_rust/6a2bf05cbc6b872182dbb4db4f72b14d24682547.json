{"sha": "6a2bf05cbc6b872182dbb4db4f72b14d24682547", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhMmJmMDVjYmM2Yjg3MjE4MmRiYjRkYjRmNzJiMTRkMjQ2ODI1NDc=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-05-19T20:16:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-19T20:16:20Z"}, "message": "Rollup merge of #42070 - tshepang:env-misc, r=BurntSushi\n\nmisc doc improvements for std::env", "tree": {"sha": "e70468efcdf8db8d3c2e454aec7352950ce523f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e70468efcdf8db8d3c2e454aec7352950ce523f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a2bf05cbc6b872182dbb4db4f72b14d24682547", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a2bf05cbc6b872182dbb4db4f72b14d24682547", "html_url": "https://github.com/rust-lang/rust/commit/6a2bf05cbc6b872182dbb4db4f72b14d24682547", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a2bf05cbc6b872182dbb4db4f72b14d24682547/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abd1a000eed3fa252ce7ff0dc431d3561fbe840d", "url": "https://api.github.com/repos/rust-lang/rust/commits/abd1a000eed3fa252ce7ff0dc431d3561fbe840d", "html_url": "https://github.com/rust-lang/rust/commit/abd1a000eed3fa252ce7ff0dc431d3561fbe840d"}, {"sha": "b9552963d1269ac6008dceda3c2cca65a2d746dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9552963d1269ac6008dceda3c2cca65a2d746dc", "html_url": "https://github.com/rust-lang/rust/commit/b9552963d1269ac6008dceda3c2cca65a2d746dc"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "96c10c5d10d1aa9349b966c48c5f54bfd561a251", "filename": "src/libstd/env.rs", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6a2bf05cbc6b872182dbb4db4f72b14d24682547/src%2Flibstd%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a2bf05cbc6b872182dbb4db4f72b14d24682547/src%2Flibstd%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fenv.rs?ref=6a2bf05cbc6b872182dbb4db4f72b14d24682547", "patch": "@@ -43,16 +43,19 @@ use sys::os as os_imp;\n /// use std::env;\n ///\n /// // We assume that we are in a valid directory.\n-/// let p = env::current_dir().unwrap();\n-/// println!(\"The current directory is {}\", p.display());\n+/// let path = env::current_dir().unwrap();\n+/// println!(\"The current directory is {}\", path.display());\n /// ```\n #[stable(feature = \"env\", since = \"1.0.0\")]\n pub fn current_dir() -> io::Result<PathBuf> {\n     os_imp::getcwd()\n }\n \n-/// Changes the current working directory to the specified path, returning\n-/// whether the change was completed successfully or not.\n+/// Changes the current working directory to the specified path.\n+///\n+/// Returns an [`Err`] if the operation fails.\n+///\n+/// [`Err`]: ../../std/result/enum.Result.html#method.err\n ///\n /// # Examples\n ///\n@@ -65,8 +68,8 @@ pub fn current_dir() -> io::Result<PathBuf> {\n /// println!(\"Successfully changed working directory to {}!\", root.display());\n /// ```\n #[stable(feature = \"env\", since = \"1.0.0\")]\n-pub fn set_current_dir<P: AsRef<Path>>(p: P) -> io::Result<()> {\n-    os_imp::chdir(p.as_ref())\n+pub fn set_current_dir<P: AsRef<Path>>(path: P) -> io::Result<()> {\n+    os_imp::chdir(path.as_ref())\n }\n \n /// An iterator over a snapshot of the environment variables of this process.\n@@ -175,10 +178,10 @@ impl fmt::Debug for VarsOs {\n ///\n /// The returned result is [`Ok(s)`] if the environment variable is present and is\n /// valid unicode. If the environment variable is not present, or it is not\n-/// valid unicode, then [`Err`] will be returned.\n+/// valid unicode, then [`VarError`] will be returned.\n ///\n /// [`Ok(s)`]: ../result/enum.Result.html#variant.Ok\n-/// [`Err`]: ../result/enum.Result.html#variant.Err\n+/// [`VarError`]: enum.VarError.html\n ///\n /// # Examples\n ///\n@@ -199,7 +202,7 @@ pub fn var<K: AsRef<OsStr>>(key: K) -> Result<String, VarError> {\n fn _var(key: &OsStr) -> Result<String, VarError> {\n     match var_os(key) {\n         Some(s) => s.into_string().map_err(VarError::NotUnicode),\n-        None => Err(VarError::NotPresent)\n+        None => Err(VarError::NotPresent),\n     }\n }\n "}]}