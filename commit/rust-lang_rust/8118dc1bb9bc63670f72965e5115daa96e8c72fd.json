{"sha": "8118dc1bb9bc63670f72965e5115daa96e8c72fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxMThkYzFiYjliYzYzNjcwZjcyOTY1ZTUxMTVkYWE5NmU4YzcyZmQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-27T08:48:40Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-27T08:53:09Z"}, "message": "use more consistent naming\n\nI think this is the first time I use global rename for rust-analyzer\nitself :-)", "tree": {"sha": "3f470ea1e7f737e3d846eb77b006dc75023652ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f470ea1e7f737e3d846eb77b006dc75023652ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8118dc1bb9bc63670f72965e5115daa96e8c72fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8118dc1bb9bc63670f72965e5115daa96e8c72fd", "html_url": "https://github.com/rust-lang/rust/commit/8118dc1bb9bc63670f72965e5115daa96e8c72fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8118dc1bb9bc63670f72965e5115daa96e8c72fd/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61349a3d18353ddfbd992a3bf51a88f5f0cfcddd", "url": "https://api.github.com/repos/rust-lang/rust/commits/61349a3d18353ddfbd992a3bf51a88f5f0cfcddd", "html_url": "https://github.com/rust-lang/rust/commit/61349a3d18353ddfbd992a3bf51a88f5f0cfcddd"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "5f85f20e24c85f071667b65634f1c4570e1bcc4b", "filename": "crates/ra_assists/src/assist_ctx.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassist_ctx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassist_ctx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassist_ctx.rs?ref=8118dc1bb9bc63670f72965e5115daa96e8c72fd", "patch": "@@ -115,7 +115,7 @@ impl<'a, DB: HirDatabase> AssistCtx<'a, DB> {\n         self.token_at_offset().find(|it| it.kind() == kind)\n     }\n \n-    pub(crate) fn node_at_offset<N: AstNode>(&self) -> Option<N> {\n+    pub(crate) fn find_node_at_offset<N: AstNode>(&self) -> Option<N> {\n         find_node_at_offset(self.source_file.syntax(), self.frange.range.start())\n     }\n     pub(crate) fn covering_element(&self) -> SyntaxElement {"}, {"sha": "d1e925b71f201d0897b2040fed645db279eeec13", "filename": "crates/ra_assists/src/assists/add_derive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fadd_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fadd_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fadd_derive.rs?ref=8118dc1bb9bc63670f72965e5115daa96e8c72fd", "patch": "@@ -26,7 +26,7 @@ use crate::{Assist, AssistCtx, AssistId};\n // }\n // ```\n pub(crate) fn add_derive(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n-    let nominal = ctx.node_at_offset::<ast::NominalDef>()?;\n+    let nominal = ctx.find_node_at_offset::<ast::NominalDef>()?;\n     let node_start = derive_insertion_offset(&nominal)?;\n     ctx.add_action(AssistId(\"add_derive\"), \"add `#[derive]`\", |edit| {\n         let derive_attr = nominal"}, {"sha": "ffbdc0b6294aab09d8bc60222b39684cf2512163", "filename": "crates/ra_assists/src/assists/add_explicit_type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fadd_explicit_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fadd_explicit_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fadd_explicit_type.rs?ref=8118dc1bb9bc63670f72965e5115daa96e8c72fd", "patch": "@@ -22,7 +22,7 @@ use crate::{Assist, AssistCtx, AssistId};\n // }\n // ```\n pub(crate) fn add_explicit_type(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n-    let stmt = ctx.node_at_offset::<LetStmt>()?;\n+    let stmt = ctx.find_node_at_offset::<LetStmt>()?;\n     let expr = stmt.initializer()?;\n     let pat = stmt.pat()?;\n     // Must be a binding"}, {"sha": "fd3588d2496784dac2fb9a3b68d025cf7d17397f", "filename": "crates/ra_assists/src/assists/add_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fadd_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fadd_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fadd_impl.rs?ref=8118dc1bb9bc63670f72965e5115daa96e8c72fd", "patch": "@@ -28,7 +28,7 @@ use crate::{Assist, AssistCtx, AssistId};\n // }\n // ```\n pub(crate) fn add_impl(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n-    let nominal = ctx.node_at_offset::<ast::NominalDef>()?;\n+    let nominal = ctx.find_node_at_offset::<ast::NominalDef>()?;\n     let name = nominal.name()?;\n     ctx.add_action(AssistId(\"add_impl\"), \"add impl\", |edit| {\n         edit.target(nominal.syntax().text_range());"}, {"sha": "2585f3045426a0f7277ca506426b5a161b78f730", "filename": "crates/ra_assists/src/assists/add_missing_impl_members.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fadd_missing_impl_members.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fadd_missing_impl_members.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fadd_missing_impl_members.rs?ref=8118dc1bb9bc63670f72965e5115daa96e8c72fd", "patch": "@@ -96,7 +96,7 @@ fn add_missing_impl_members_inner(\n     assist_id: &'static str,\n     label: &'static str,\n ) -> Option<Assist> {\n-    let impl_node = ctx.node_at_offset::<ast::ImplBlock>()?;\n+    let impl_node = ctx.find_node_at_offset::<ast::ImplBlock>()?;\n     let impl_item_list = impl_node.item_list()?;\n \n     let trait_def = {"}, {"sha": "8d5984a583ada2baa652d90f0ab11f565c85767e", "filename": "crates/ra_assists/src/assists/apply_demorgan.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fapply_demorgan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fapply_demorgan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fapply_demorgan.rs?ref=8118dc1bb9bc63670f72965e5115daa96e8c72fd", "patch": "@@ -24,7 +24,7 @@ use crate::{Assist, AssistCtx, AssistId};\n // }\n // ```\n pub(crate) fn apply_demorgan(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n-    let expr = ctx.node_at_offset::<ast::BinExpr>()?;\n+    let expr = ctx.find_node_at_offset::<ast::BinExpr>()?;\n     let op = expr.op_kind()?;\n     let op_range = expr.op_token()?.text_range();\n     let opposite_op = opposite_logic_op(op)?;"}, {"sha": "a1c2aaa7299a8cd4695bf1a0d2f5696913f4891a", "filename": "crates/ra_assists/src/assists/auto_import.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fauto_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fauto_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fauto_import.rs?ref=8118dc1bb9bc63670f72965e5115daa96e8c72fd", "patch": "@@ -547,7 +547,7 @@ pub fn auto_import_text_edit(\n }\n \n pub(crate) fn auto_import(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n-    let path: ast::Path = ctx.node_at_offset()?;\n+    let path: ast::Path = ctx.find_node_at_offset()?;\n     // We don't want to mess with use statements\n     if path.syntax().ancestors().find_map(ast::UseItem::cast).is_some() {\n         return None;"}, {"sha": "770ea04fa3a6b32ff9e92d0a6dfb2edac5c8ba09", "filename": "crates/ra_assists/src/assists/change_visibility.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fchange_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fchange_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fchange_visibility.rs?ref=8118dc1bb9bc63670f72965e5115daa96e8c72fd", "patch": "@@ -23,7 +23,7 @@ use crate::{Assist, AssistCtx, AssistId};\n // pub(crate) fn frobnicate() {}\n // ```\n pub(crate) fn change_visibility(ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n-    if let Some(vis) = ctx.node_at_offset::<ast::Visibility>() {\n+    if let Some(vis) = ctx.find_node_at_offset::<ast::Visibility>() {\n         return change_vis(ctx, vis);\n     }\n     add_vis(ctx)"}, {"sha": "75822dc65a5605989bc5cc300c092d9d01a83fc1", "filename": "crates/ra_assists/src/assists/early_return.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fearly_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fearly_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fearly_return.rs?ref=8118dc1bb9bc63670f72965e5115daa96e8c72fd", "patch": "@@ -36,7 +36,7 @@ use crate::{\n // }\n // ```\n pub(crate) fn convert_to_guarded_return(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n-    let if_expr: ast::IfExpr = ctx.node_at_offset()?;\n+    let if_expr: ast::IfExpr = ctx.find_node_at_offset()?;\n     let expr = if_expr.condition()?.expr()?;\n     let then_block = if_expr.then_branch()?.block()?;\n     if if_expr.else_branch().is_some() {"}, {"sha": "c62c0efbefd68361561786e2a882542381758cfd", "filename": "crates/ra_assists/src/assists/fill_match_arms.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Ffill_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Ffill_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Ffill_match_arms.rs?ref=8118dc1bb9bc63670f72965e5115daa96e8c72fd", "patch": "@@ -32,7 +32,7 @@ use crate::{Assist, AssistCtx, AssistId};\n // }\n // ```\n pub(crate) fn fill_match_arms(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n-    let match_expr = ctx.node_at_offset::<ast::MatchExpr>()?;\n+    let match_expr = ctx.find_node_at_offset::<ast::MatchExpr>()?;\n     let match_arm_list = match_expr.match_arm_list()?;\n \n     // We already have some match arms, so we don't provide any assists."}, {"sha": "9765d5dddc0895962ffca42b6c77e627c71591fd", "filename": "crates/ra_assists/src/assists/flip_binexpr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fflip_binexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fflip_binexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fflip_binexpr.rs?ref=8118dc1bb9bc63670f72965e5115daa96e8c72fd", "patch": "@@ -19,7 +19,7 @@ use crate::{Assist, AssistCtx, AssistId};\n // }\n // ```\n pub(crate) fn flip_binexpr(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n-    let expr = ctx.node_at_offset::<BinExpr>()?;\n+    let expr = ctx.find_node_at_offset::<BinExpr>()?;\n     let lhs = expr.lhs()?.syntax().clone();\n     let rhs = expr.rhs()?.syntax().clone();\n     let op_range = expr.op_token()?.text_range();"}, {"sha": "fe8fa2a868dde7fa02caa3a7abbedee6ed65cc3d", "filename": "crates/ra_assists/src/assists/inline_local_variable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Finline_local_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Finline_local_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Finline_local_variable.rs?ref=8118dc1bb9bc63670f72965e5115daa96e8c72fd", "patch": "@@ -24,7 +24,7 @@ use crate::{Assist, AssistCtx, AssistId};\n // }\n // ```\n pub(crate) fn inline_local_varialbe(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n-    let let_stmt = ctx.node_at_offset::<ast::LetStmt>()?;\n+    let let_stmt = ctx.find_node_at_offset::<ast::LetStmt>()?;\n     let bind_pat = match let_stmt.pat()? {\n         ast::Pat::BindPat(pat) => pat,\n         _ => return None,"}, {"sha": "b0c4ee78b59e56a4b5274bb254080a4d53009eea", "filename": "crates/ra_assists/src/assists/merge_match_arms.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fmerge_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fmerge_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fmerge_match_arms.rs?ref=8118dc1bb9bc63670f72965e5115daa96e8c72fd", "patch": "@@ -27,7 +27,7 @@ use ra_syntax::ast::{AstNode, MatchArm};\n // }\n // ```\n pub(crate) fn merge_match_arms(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n-    let current_arm = ctx.node_at_offset::<MatchArm>()?;\n+    let current_arm = ctx.find_node_at_offset::<MatchArm>()?;\n \n     // We check if the following match arm matches this one. We could, but don't,\n     // compare to the previous match arm as well."}, {"sha": "edf2897c6ce2e2b36c40d20acd4367f216a9f92f", "filename": "crates/ra_assists/src/assists/move_bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fmove_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fmove_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fmove_bounds.rs?ref=8118dc1bb9bc63670f72965e5115daa96e8c72fd", "patch": "@@ -23,7 +23,7 @@ use crate::{Assist, AssistCtx, AssistId};\n // }\n // ```\n pub(crate) fn move_bounds_to_where_clause(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n-    let type_param_list = ctx.node_at_offset::<ast::TypeParamList>()?;\n+    let type_param_list = ctx.find_node_at_offset::<ast::TypeParamList>()?;\n \n     let mut type_params = type_param_list.type_params();\n     if type_params.all(|p| p.type_bound_list().is_none()) {"}, {"sha": "e820a73c8d904c323475e67ae7cee34137eee980", "filename": "crates/ra_assists/src/assists/move_guard.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fmove_guard.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fmove_guard.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fmove_guard.rs?ref=8118dc1bb9bc63670f72965e5115daa96e8c72fd", "patch": "@@ -33,7 +33,7 @@ use crate::{Assist, AssistCtx, AssistId};\n // }\n // ```\n pub(crate) fn move_guard_to_arm_body(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n-    let match_arm = ctx.node_at_offset::<MatchArm>()?;\n+    let match_arm = ctx.find_node_at_offset::<MatchArm>()?;\n     let guard = match_arm.guard()?;\n     let space_before_guard = guard.syntax().prev_sibling_or_token();\n \n@@ -91,7 +91,7 @@ pub(crate) fn move_guard_to_arm_body(mut ctx: AssistCtx<impl HirDatabase>) -> Op\n // }\n // ```\n pub(crate) fn move_arm_cond_to_match_guard(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n-    let match_arm: MatchArm = ctx.node_at_offset::<MatchArm>()?;\n+    let match_arm: MatchArm = ctx.find_node_at_offset::<MatchArm>()?;\n     let last_match_pat = match_arm.pats().last()?;\n \n     let arm_body = match_arm.expr()?;"}, {"sha": "ac2c43e1adca3826023d92cf8e070387a9603b05", "filename": "crates/ra_assists/src/assists/remove_dbg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fremove_dbg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Fremove_dbg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fremove_dbg.rs?ref=8118dc1bb9bc63670f72965e5115daa96e8c72fd", "patch": "@@ -8,7 +8,7 @@ use ra_syntax::{\n };\n \n pub(crate) fn remove_dbg(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n-    let macro_call = ctx.node_at_offset::<ast::MacroCall>()?;\n+    let macro_call = ctx.find_node_at_offset::<ast::MacroCall>()?;\n \n     if !is_valid_macrocall(&macro_call, \"dbg\")? {\n         return None;"}, {"sha": "da276e47bf4ec494f905db892df76066dc6fa560", "filename": "crates/ra_assists/src/assists/replace_if_let_with_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Freplace_if_let_with_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8118dc1bb9bc63670f72965e5115daa96e8c72fd/crates%2Fra_assists%2Fsrc%2Fassists%2Freplace_if_let_with_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Freplace_if_let_with_match.rs?ref=8118dc1bb9bc63670f72965e5115daa96e8c72fd", "patch": "@@ -8,7 +8,7 @@ use ra_syntax::{ast, AstNode};\n use crate::{Assist, AssistCtx, AssistId};\n \n pub(crate) fn replace_if_let_with_match(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n-    let if_expr: ast::IfExpr = ctx.node_at_offset()?;\n+    let if_expr: ast::IfExpr = ctx.find_node_at_offset()?;\n     let cond = if_expr.condition()?;\n     let pat = cond.pat()?;\n     let expr = cond.expr()?;"}]}