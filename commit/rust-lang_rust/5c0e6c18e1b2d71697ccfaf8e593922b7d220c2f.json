{"sha": "5c0e6c18e1b2d71697ccfaf8e593922b7d220c2f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjMGU2YzE4ZTFiMmQ3MTY5N2NjZmFmOGU1OTM5MjJiN2QyMjBjMmY=", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-09-01T22:26:07Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-09-03T21:34:58Z"}, "message": "rustdoc: Box `GenericArg::Const` to reduce enum size", "tree": {"sha": "b5949549b7e784968b26ae1ee85494812a25b273", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5949549b7e784968b26ae1ee85494812a25b273"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c0e6c18e1b2d71697ccfaf8e593922b7d220c2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c0e6c18e1b2d71697ccfaf8e593922b7d220c2f", "html_url": "https://github.com/rust-lang/rust/commit/5c0e6c18e1b2d71697ccfaf8e593922b7d220c2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c0e6c18e1b2d71697ccfaf8e593922b7d220c2f/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fcce644119cf4e8e36001368e514bb5ed67cb855", "url": "https://api.github.com/repos/rust-lang/rust/commits/fcce644119cf4e8e36001368e514bb5ed67cb855", "html_url": "https://github.com/rust-lang/rust/commit/fcce644119cf4e8e36001368e514bb5ed67cb855"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "b018ef405c0895a36eff130f99a68d31ff628489", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c0e6c18e1b2d71697ccfaf8e593922b7d220c2f/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c0e6c18e1b2d71697ccfaf8e593922b7d220c2f/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=5c0e6c18e1b2d71697ccfaf8e593922b7d220c2f", "patch": "@@ -1787,7 +1787,7 @@ impl Clean<GenericArgs> for hir::GenericArgs<'_> {\n                         }\n                         hir::GenericArg::Lifetime(_) => GenericArg::Lifetime(Lifetime::elided()),\n                         hir::GenericArg::Type(ty) => GenericArg::Type(ty.clean(cx)),\n-                        hir::GenericArg::Const(ct) => GenericArg::Const(ct.clean(cx)),\n+                        hir::GenericArg::Const(ct) => GenericArg::Const(Box::new(ct.clean(cx))),\n                         hir::GenericArg::Infer(_inf) => GenericArg::Infer,\n                     })\n                     .collect(),"}, {"sha": "47176070f657a8267efa8c246ede7cc809fc23ea", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5c0e6c18e1b2d71697ccfaf8e593922b7d220c2f/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c0e6c18e1b2d71697ccfaf8e593922b7d220c2f/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=5c0e6c18e1b2d71697ccfaf8e593922b7d220c2f", "patch": "@@ -2012,10 +2012,15 @@ impl Path {\n crate enum GenericArg {\n     Lifetime(Lifetime),\n     Type(Type),\n-    Const(Constant),\n+    Const(Box<Constant>),\n     Infer,\n }\n \n+// `GenericArg` can occur many times in a single `Path`, so make sure it\n+// doesn't increase in size unexpectedly.\n+#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n+rustc_data_structures::static_assert_size!(GenericArg, 80);\n+\n #[derive(Clone, PartialEq, Eq, Debug, Hash)]\n crate enum GenericArgs {\n     AngleBracketed { args: Vec<GenericArg>, bindings: Vec<TypeBinding> },"}, {"sha": "de2cd60d2edcd048cca1cc1d4151c7ecea0aba2d", "filename": "src/librustdoc/clean/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c0e6c18e1b2d71697ccfaf8e593922b7d220c2f/src%2Flibrustdoc%2Fclean%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c0e6c18e1b2d71697ccfaf8e593922b7d220c2f/src%2Flibrustdoc%2Fclean%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Futils.rs?ref=5c0e6c18e1b2d71697ccfaf8e593922b7d220c2f", "patch": "@@ -121,7 +121,7 @@ fn external_generic_args(\n                 ty_kind = Some(ty.kind());\n                 Some(GenericArg::Type(ty.clean(cx)))\n             }\n-            GenericArgKind::Const(ct) => Some(GenericArg::Const(ct.clean(cx))),\n+            GenericArgKind::Const(ct) => Some(GenericArg::Const(Box::new(ct.clean(cx)))),\n         })\n         .collect();\n "}, {"sha": "46eeee8e3a4904c65d15548172fb4fc6aa0476af", "filename": "src/librustdoc/json/conversions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c0e6c18e1b2d71697ccfaf8e593922b7d220c2f/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c0e6c18e1b2d71697ccfaf8e593922b7d220c2f/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fconversions.rs?ref=5c0e6c18e1b2d71697ccfaf8e593922b7d220c2f", "patch": "@@ -139,7 +139,7 @@ impl FromWithTcx<clean::GenericArg> for GenericArg {\n         match arg {\n             Lifetime(l) => GenericArg::Lifetime(l.0.to_string()),\n             Type(t) => GenericArg::Type(t.into_tcx(tcx)),\n-            Const(c) => GenericArg::Const(c.into_tcx(tcx)),\n+            Const(box c) => GenericArg::Const(c.into_tcx(tcx)),\n             Infer => GenericArg::Infer,\n         }\n     }"}]}