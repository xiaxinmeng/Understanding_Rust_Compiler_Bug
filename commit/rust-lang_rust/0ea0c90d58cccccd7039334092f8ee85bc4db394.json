{"sha": "0ea0c90d58cccccd7039334092f8ee85bc4db394", "node_id": "C_kwDOAAsO6NoAKDBlYTBjOTBkNThjY2NjY2Q3MDM5MzM0MDkyZjhlZTg1YmM0ZGIzOTQ", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2023-02-12T15:30:37Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2023-02-12T15:30:37Z"}, "message": "fix UB in ancient test", "tree": {"sha": "f66dfe924c997a298e48c5698c46d119351480e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f66dfe924c997a298e48c5698c46d119351480e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ea0c90d58cccccd7039334092f8ee85bc4db394", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ea0c90d58cccccd7039334092f8ee85bc4db394", "html_url": "https://github.com/rust-lang/rust/commit/0ea0c90d58cccccd7039334092f8ee85bc4db394", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ea0c90d58cccccd7039334092f8ee85bc4db394/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "adb4bfd25d3c1190b0e7433ef945221d8aeea427", "url": "https://api.github.com/repos/rust-lang/rust/commits/adb4bfd25d3c1190b0e7433ef945221d8aeea427", "html_url": "https://github.com/rust-lang/rust/commit/adb4bfd25d3c1190b0e7433ef945221d8aeea427"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "d5c93f81fd84d9446d3704b204f59446a7a1193c", "filename": "tests/ui/regions/regions-mock-codegen.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0ea0c90d58cccccd7039334092f8ee85bc4db394/tests%2Fui%2Fregions%2Fregions-mock-codegen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ea0c90d58cccccd7039334092f8ee85bc4db394/tests%2Fui%2Fregions%2Fregions-mock-codegen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fregions%2Fregions-mock-codegen.rs?ref=0ea0c90d58cccccd7039334092f8ee85bc4db394", "patch": "@@ -22,23 +22,23 @@ struct Ccx {\n     x: isize,\n }\n \n-fn allocate(_bcx: &arena) -> &Bcx<'_> {\n+fn allocate(_bcx: &arena) -> &mut Bcx<'_> {\n     unsafe {\n         let layout = Layout::new::<Bcx>();\n         let ptr = Global.allocate(layout).unwrap_or_else(|_| handle_alloc_error(layout));\n-        &*(ptr.as_ptr() as *const _)\n+        &mut *ptr.as_ptr().cast()\n     }\n }\n \n-fn h<'a>(bcx: &'a Bcx<'a>) -> &'a Bcx<'a> {\n+fn h<'a>(bcx: &'a Bcx<'a>) -> &'a mut Bcx<'a> {\n     return allocate(bcx.fcx.arena);\n }\n \n fn g(fcx: &Fcx) {\n     let bcx = Bcx { fcx };\n     let bcx2 = h(&bcx);\n     unsafe {\n-        Global.deallocate(NonNull::new_unchecked(bcx2 as *const _ as *mut _), Layout::new::<Bcx>());\n+        Global.deallocate(NonNull::new_unchecked(bcx2 as *mut _ as *mut _), Layout::new::<Bcx>());\n     }\n }\n "}]}