{"sha": "5ff7e1ad2cc438bd1ecb29f6b4414d368115ca31", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmZjdlMWFkMmNjNDM4YmQxZWNiMjlmNmI0NDE0ZDM2ODExNWNhMzE=", "commit": {"author": {"name": "Teddy_Wang", "email": "wangtheo662@gmail.com", "date": "2020-07-13T04:47:09Z"}, "committer": {"name": "Teddy_Wang", "email": "wangtheo662@gmail.com", "date": "2020-07-13T04:47:09Z"}, "message": "Added ui tests for volatile and nearby intrinsics", "tree": {"sha": "6a9d169c6747998e3ae5385c82e17c9174503b60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a9d169c6747998e3ae5385c82e17c9174503b60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ff7e1ad2cc438bd1ecb29f6b4414d368115ca31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ff7e1ad2cc438bd1ecb29f6b4414d368115ca31", "html_url": "https://github.com/rust-lang/rust/commit/5ff7e1ad2cc438bd1ecb29f6b4414d368115ca31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ff7e1ad2cc438bd1ecb29f6b4414d368115ca31/comments", "author": {"login": "theo-lw", "id": 28904678, "node_id": "MDQ6VXNlcjI4OTA0Njc4", "avatar_url": "https://avatars.githubusercontent.com/u/28904678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theo-lw", "html_url": "https://github.com/theo-lw", "followers_url": "https://api.github.com/users/theo-lw/followers", "following_url": "https://api.github.com/users/theo-lw/following{/other_user}", "gists_url": "https://api.github.com/users/theo-lw/gists{/gist_id}", "starred_url": "https://api.github.com/users/theo-lw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theo-lw/subscriptions", "organizations_url": "https://api.github.com/users/theo-lw/orgs", "repos_url": "https://api.github.com/users/theo-lw/repos", "events_url": "https://api.github.com/users/theo-lw/events{/privacy}", "received_events_url": "https://api.github.com/users/theo-lw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "theo-lw", "id": 28904678, "node_id": "MDQ6VXNlcjI4OTA0Njc4", "avatar_url": "https://avatars.githubusercontent.com/u/28904678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theo-lw", "html_url": "https://github.com/theo-lw", "followers_url": "https://api.github.com/users/theo-lw/followers", "following_url": "https://api.github.com/users/theo-lw/following{/other_user}", "gists_url": "https://api.github.com/users/theo-lw/gists{/gist_id}", "starred_url": "https://api.github.com/users/theo-lw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theo-lw/subscriptions", "organizations_url": "https://api.github.com/users/theo-lw/orgs", "repos_url": "https://api.github.com/users/theo-lw/repos", "events_url": "https://api.github.com/users/theo-lw/events{/privacy}", "received_events_url": "https://api.github.com/users/theo-lw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a3a31a153be84b9be33859a25b56be9cab8177d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a3a31a153be84b9be33859a25b56be9cab8177d", "html_url": "https://github.com/rust-lang/rust/commit/9a3a31a153be84b9be33859a25b56be9cab8177d"}], "stats": {"total": 72, "additions": 72, "deletions": 0}, "files": [{"sha": "29331219ba6ee121e5a6273f332dad98f93ffd41", "filename": "src/test/codegen/intrinsics/volatile_order.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5ff7e1ad2cc438bd1ecb29f6b4414d368115ca31/src%2Ftest%2Fcodegen%2Fintrinsics%2Fvolatile_order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ff7e1ad2cc438bd1ecb29f6b4414d368115ca31/src%2Ftest%2Fcodegen%2Fintrinsics%2Fvolatile_order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fintrinsics%2Fvolatile_order.rs?ref=5ff7e1ad2cc438bd1ecb29f6b4414d368115ca31", "patch": "@@ -0,0 +1,18 @@\n+#![crate_type = \"lib\"]\n+#![feature(core_intrinsics)]\n+\n+use std::intrinsics::*;\n+\n+pub unsafe fn test_volatile_order() {\n+    let mut a: Box<u8> = Box::new(0);\n+    // CHECK: load volatile\n+    let x = volatile_load(&*a);\n+    // CHECK: load volatile\n+    let x = volatile_load(&*a);\n+    // CHECK: store volatile\n+    volatile_store(&mut *a, 12);\n+    // CHECK: store volatile\n+    unaligned_volatile_store(&mut *a, 12);\n+    // CHECK: llvm.memset.p0i8\n+    volatile_set_memory(&mut *a, 12, 1)\n+}"}, {"sha": "7b1d1eeaadbd0d69fe6e314f2402901fcc790ee2", "filename": "src/test/ui/intrinsics/intrinsic-nearby.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5ff7e1ad2cc438bd1ecb29f6b4414d368115ca31/src%2Ftest%2Fui%2Fintrinsics%2Fintrinsic-nearby.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ff7e1ad2cc438bd1ecb29f6b4414d368115ca31/src%2Ftest%2Fui%2Fintrinsics%2Fintrinsic-nearby.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fintrinsics%2Fintrinsic-nearby.rs?ref=5ff7e1ad2cc438bd1ecb29f6b4414d368115ca31", "patch": "@@ -0,0 +1,11 @@\n+// run-pass\n+#![feature(core_intrinsics)]\n+\n+use std::intrinsics::*;\n+\n+fn main() {\n+    unsafe {\n+        assert_eq!(nearbyintf32(5.234f32), 5f32);\n+        assert_eq!(nearbyintf64(6.777f64), 7f64);\n+    }\n+}"}, {"sha": "45bfe5ee3066d49b02ed0fe00c9c50e3768a8666", "filename": "src/test/ui/intrinsics/intrinsic-volatile.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/5ff7e1ad2cc438bd1ecb29f6b4414d368115ca31/src%2Ftest%2Fui%2Fintrinsics%2Fintrinsic-volatile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ff7e1ad2cc438bd1ecb29f6b4414d368115ca31/src%2Ftest%2Fui%2Fintrinsics%2Fintrinsic-volatile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fintrinsics%2Fintrinsic-volatile.rs?ref=5ff7e1ad2cc438bd1ecb29f6b4414d368115ca31", "patch": "@@ -0,0 +1,43 @@\n+// run-pass\n+#![feature(core_intrinsics)]\n+\n+use std::intrinsics::*;\n+\n+pub fn main() {\n+    unsafe {\n+        let mut x: Box<u8> = Box::new(0);\n+        let mut y: Box<u8> = Box::new(0);\n+\n+        // test volatile load\n+        assert_eq!(volatile_load(&*x), 0);\n+        *x = 1;\n+        assert_eq!(volatile_load(&*x), 1);\n+\n+        // test volatile store\n+        volatile_store(&mut *x, 2);\n+        assert_eq!(*x, 2);\n+\n+        // test volatile copy memory\n+        volatile_copy_memory(&mut *y, &*x, 1);\n+        assert_eq!(*y, 2);\n+\n+        // test volatile copy non-overlapping memory\n+        *x = 3;\n+        volatile_copy_nonoverlapping_memory(&mut *y, &*x, 1);\n+        assert_eq!(*y, 3);\n+\n+        // test volatile set memory\n+        volatile_set_memory(&mut *x, 4, 1);\n+        assert_eq!(*x, 4);\n+\n+        // test unaligned volatile load\n+        let arr: [u8; 3] = [1, 2, 3];\n+        let ptr = arr[1..].as_ptr() as *const u16;\n+        assert_eq!(unaligned_volatile_load(ptr), u16::from_ne_bytes([arr[1], arr[2]]));\n+        \n+        // test unaligned volatile store\n+        let ptr = arr[1..].as_ptr() as *mut u16;\n+        unaligned_volatile_store(ptr, 0);\n+        assert_eq!(arr, [1, 0, 0]);\n+    }\n+}"}]}