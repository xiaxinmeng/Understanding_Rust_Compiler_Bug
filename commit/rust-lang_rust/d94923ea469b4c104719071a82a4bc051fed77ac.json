{"sha": "d94923ea469b4c104719071a82a4bc051fed77ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5NDkyM2VhNDY5YjRjMTA0NzE5MDcxYTgyYTRiYzA1MWZlZDc3YWM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-23T12:51:50Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-25T13:43:13Z"}, "message": "Format and more tracing", "tree": {"sha": "aab0fa3ac1ce68bea08ca05440ad9295d97b8977", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aab0fa3ac1ce68bea08ca05440ad9295d97b8977"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d94923ea469b4c104719071a82a4bc051fed77ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d94923ea469b4c104719071a82a4bc051fed77ac", "html_url": "https://github.com/rust-lang/rust/commit/d94923ea469b4c104719071a82a4bc051fed77ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d94923ea469b4c104719071a82a4bc051fed77ac/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8f80334872cf63412b0fe2e79b87505af2ba6a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8f80334872cf63412b0fe2e79b87505af2ba6a1", "html_url": "https://github.com/rust-lang/rust/commit/f8f80334872cf63412b0fe2e79b87505af2ba6a1"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "d46e6e387f508c16f25921c2dbea8c7fbff10663", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d94923ea469b4c104719071a82a4bc051fed77ac/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d94923ea469b4c104719071a82a4bc051fed77ac/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=d94923ea469b4c104719071a82a4bc051fed77ac", "patch": "@@ -642,6 +642,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             }\n             _ => bug!(\"multiple variants for non-adt non-generator\"),\n         };\n+        trace!(\"discriminant type: {:?}\", discr_ty);\n \n         // Figure out which discriminant and variant this corresponds to.\n         Ok(match *tag_kind {\n@@ -651,8 +652,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                     .map_err(|_| err_ub!(InvalidDiscriminant(tag_val.erase_tag())))?;\n                 // Cast bits from tag layout to discriminant layout.\n                 let discr_layout = self.layout_of(discr_ty)?;\n-                let discr_val_cast =\n-                    self.cast_from_scalar(tag_bits, tag_layout, discr_ty);\n+                let discr_val_cast = self.cast_from_scalar(tag_bits, tag_layout, discr_ty);\n                 let discr_bits = discr_val_cast.assert_bits(discr_layout.size);\n                 // Convert discriminant to variant index, and catch invalid discriminants.\n                 let index = match rval.layout.ty.kind {"}]}