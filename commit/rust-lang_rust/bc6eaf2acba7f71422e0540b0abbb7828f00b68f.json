{"sha": "bc6eaf2acba7f71422e0540b0abbb7828f00b68f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjNmVhZjJhY2JhN2Y3MTQyMmUwNTQwYjBhYmJiNzgyOGYwMGI2OGY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-08-14T00:41:45Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-08-14T02:08:02Z"}, "message": "More core mode forbidding.", "tree": {"sha": "17e0e0a12e1736cdf6eb295a70792a72db68ddac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17e0e0a12e1736cdf6eb295a70792a72db68ddac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc6eaf2acba7f71422e0540b0abbb7828f00b68f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc6eaf2acba7f71422e0540b0abbb7828f00b68f", "html_url": "https://github.com/rust-lang/rust/commit/bc6eaf2acba7f71422e0540b0abbb7828f00b68f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc6eaf2acba7f71422e0540b0abbb7828f00b68f/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5394e34aa43687e36fb94656faf075b125c43bb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/5394e34aa43687e36fb94656faf075b125c43bb5", "html_url": "https://github.com/rust-lang/rust/commit/5394e34aa43687e36fb94656faf075b125c43bb5"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "81eacbb6462e01a210ee94bdb74b7b33fddae7d9", "filename": "src/libcore/f32.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc6eaf2acba7f71422e0540b0abbb7828f00b68f/src%2Flibcore%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc6eaf2acba7f71422e0540b0abbb7828f00b68f/src%2Flibcore%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ff32.rs?ref=bc6eaf2acba7f71422e0540b0abbb7828f00b68f", "patch": "@@ -1,3 +1,7 @@\n+// NB: transitionary, de-mode-ing.\n+#[forbid(deprecated_mode)];\n+#[forbid(deprecated_pattern)];\n+\n //! Operations and constants for `f32`\n \n // PORT"}, {"sha": "5b2d7daaa150d96bbffabd08ef21d4436593ef17", "filename": "src/libcore/f64.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc6eaf2acba7f71422e0540b0abbb7828f00b68f/src%2Flibcore%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc6eaf2acba7f71422e0540b0abbb7828f00b68f/src%2Flibcore%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ff64.rs?ref=bc6eaf2acba7f71422e0540b0abbb7828f00b68f", "patch": "@@ -1,3 +1,7 @@\n+// NB: transitionary, de-mode-ing.\n+#[forbid(deprecated_mode)];\n+#[forbid(deprecated_pattern)];\n+\n //! Operations and constants for `f64`\n \n // PORT"}, {"sha": "79e89714728c380e3da775c7ca605a67b968f781", "filename": "src/libcore/float.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/bc6eaf2acba7f71422e0540b0abbb7828f00b68f/src%2Flibcore%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc6eaf2acba7f71422e0540b0abbb7828f00b68f/src%2Flibcore%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffloat.rs?ref=bc6eaf2acba7f71422e0540b0abbb7828f00b68f", "patch": "@@ -1,3 +1,7 @@\n+// NB: transitionary, de-mode-ing.\n+#[forbid(deprecated_mode)];\n+#[forbid(deprecated_pattern)];\n+\n //! Operations and constants for `float`\n \n // Even though this module exports everything defined in it,\n@@ -238,12 +242,12 @@ fn to_str(num: float, digits: uint) -> ~str {\n  * `none` if the string did not represent a valid number.  Otherwise,\n  * `some(n)` where `n` is the floating-point number represented by `[num]`.\n  */\n-fn from_str(num: ~str) -> option<float> {\n-   if num == ~\"inf\" {\n+fn from_str(num: &str) -> option<float> {\n+   if num == \"inf\" {\n        return some(infinity as float);\n-   } else if num == ~\"-inf\" {\n+   } else if num == \"-inf\" {\n        return some(neg_infinity as float);\n-   } else if num == ~\"NaN\" {\n+   } else if num == \"NaN\" {\n        return some(NaN as float);\n    }\n \n@@ -516,7 +520,7 @@ fn test_to_str_inf() {\n \n #[test]\n fn test_traits() {\n-    fn test<U:num::Num>(ten: U) {\n+    fn test<U:num::Num>(ten: &U) {\n         assert (ten.to_int() == 10);\n \n         let two = ten.from_int(2);\n@@ -529,7 +533,7 @@ fn test_traits() {\n         assert (ten.modulo(two) == ten.from_int(0));\n     }\n \n-    test(10.0);\n+    test(&10.0);\n }\n \n "}]}