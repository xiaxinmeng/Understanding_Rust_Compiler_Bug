{"sha": "3eae7f6291677fea37bcf91fd42e435803eabebf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlYWU3ZjYyOTE2NzdmZWEzN2JjZjkxZmQ0MmU0MzU4MDNlYWJlYmY=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-20T01:23:47Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-20T01:24:30Z"}, "message": "Upgrade to ena-0.13.1 and use the new `inlined_probe_value` function.\n\nThis is a big speed win for `keccak` and `inflate`.", "tree": {"sha": "96698f24e32c90dd68afbacbfb6984fe1c0016e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96698f24e32c90dd68afbacbfb6984fe1c0016e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3eae7f6291677fea37bcf91fd42e435803eabebf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3eae7f6291677fea37bcf91fd42e435803eabebf", "html_url": "https://github.com/rust-lang/rust/commit/3eae7f6291677fea37bcf91fd42e435803eabebf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3eae7f6291677fea37bcf91fd42e435803eabebf/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acf7d4dcdba4046917c61aab141c1dec25669ce9", "url": "https://api.github.com/repos/rust-lang/rust/commits/acf7d4dcdba4046917c61aab141c1dec25669ce9", "html_url": "https://github.com/rust-lang/rust/commit/acf7d4dcdba4046917c61aab141c1dec25669ce9"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "78de3af2631d20cbf77c3536ec2b07c44502935d", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3eae7f6291677fea37bcf91fd42e435803eabebf/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/3eae7f6291677fea37bcf91fd42e435803eabebf/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=3eae7f6291677fea37bcf91fd42e435803eabebf", "patch": "@@ -910,9 +910,9 @@ dependencies = [\n \n [[package]]\n name = \"ena\"\n-version = \"0.13.0\"\n+version = \"0.13.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"3dc01d68e08ca384955a3aeba9217102ca1aa85b6e168639bf27739f1d749d87\"\n+checksum = \"8944dc8fa28ce4a38f778bd46bf7d923fe73eed5a439398507246c8e017e6f36\"\n dependencies = [\n  \"log\",\n ]"}, {"sha": "5d556485c15f3b6bfbddd6729781ec04aba469ad", "filename": "src/librustc/infer/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3eae7f6291677fea37bcf91fd42e435803eabebf/src%2Flibrustc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eae7f6291677fea37bcf91fd42e435803eabebf/src%2Flibrustc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fmod.rs?ref=3eae7f6291677fea37bcf91fd42e435803eabebf", "patch": "@@ -1609,20 +1609,21 @@ impl<'a, 'tcx> ShallowResolver<'a, 'tcx> {\n                 use self::type_variable::TypeVariableValue;\n \n                 // See the comment in `shallow_resolve()`.\n-                match self.infcx.type_variables.borrow_mut().probe(v) {\n+                match self.infcx.type_variables.borrow_mut().inlined_probe(v) {\n                     TypeVariableValue::Known { value: t } => self.fold_ty(t) != typ,\n                     TypeVariableValue::Unknown { .. } => false,\n                 }\n             }\n \n             ty::Infer(ty::IntVar(v)) => {\n-                match self.infcx.int_unification_table.borrow_mut().probe_value(v) {\n+                match self.infcx.int_unification_table.borrow_mut().inlined_probe_value(v) {\n                     Some(v) => v.to_type(self.infcx.tcx) != typ,\n                     None => false,\n                 }\n             }\n \n             ty::Infer(ty::FloatVar(v)) => {\n+                // Not `inlined_probe_value(v)` because this call site is colder.\n                 match self.infcx.float_unification_table.borrow_mut().probe_value(v) {\n                     Some(v) => v.to_type(self.infcx.tcx) != typ,\n                     None => false,"}, {"sha": "dd09e9a8f58a40a7608dd5978d5537fddcdf8dea", "filename": "src/librustc/infer/type_variable.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3eae7f6291677fea37bcf91fd42e435803eabebf/src%2Flibrustc%2Finfer%2Ftype_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eae7f6291677fea37bcf91fd42e435803eabebf/src%2Flibrustc%2Finfer%2Ftype_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ftype_variable.rs?ref=3eae7f6291677fea37bcf91fd42e435803eabebf", "patch": "@@ -234,7 +234,13 @@ impl<'tcx> TypeVariableTable<'tcx> {\n     /// Retrieves the type to which `vid` has been instantiated, if\n     /// any.\n     pub fn probe(&mut self, vid: ty::TyVid) -> TypeVariableValue<'tcx> {\n-        self.eq_relations.probe_value(vid)\n+        self.inlined_probe(vid)\n+    }\n+\n+    /// An always-inlined variant of `probe`, for very hot call sites.\n+    #[inline(always)]\n+    pub fn inlined_probe(&mut self, vid: ty::TyVid) -> TypeVariableValue<'tcx> {\n+        self.eq_relations.inlined_probe_value(vid)\n     }\n \n     /// If `t` is a type-inference variable, and it has been"}, {"sha": "ae3403cf0ce9f6955b148f0fe10ede6d5300ecc2", "filename": "src/librustc_data_structures/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3eae7f6291677fea37bcf91fd42e435803eabebf/src%2Flibrustc_data_structures%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/3eae7f6291677fea37bcf91fd42e435803eabebf/src%2Flibrustc_data_structures%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2FCargo.toml?ref=3eae7f6291677fea37bcf91fd42e435803eabebf", "patch": "@@ -10,7 +10,7 @@ path = \"lib.rs\"\n doctest = false\n \n [dependencies]\n-ena = \"0.13\"\n+ena = \"0.13.1\"\n indexmap = \"1\"\n log = \"0.4\"\n jobserver_crate = { version = \"0.1.13\", package = \"jobserver\" }"}]}