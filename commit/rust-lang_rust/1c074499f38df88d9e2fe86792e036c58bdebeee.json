{"sha": "1c074499f38df88d9e2fe86792e036c58bdebeee", "node_id": "C_kwDOAAsO6NoAKDFjMDc0NDk5ZjM4ZGY4OGQ5ZTJmZTg2NzkyZTAzNmM1OGJkZWJlZWU", "commit": {"author": {"name": "Moritz Vetter", "email": "mv@3yourmind.com", "date": "2022-02-13T03:05:52Z"}, "committer": {"name": "Moritz Vetter", "email": "mv@3yourmind.com", "date": "2022-02-24T17:58:14Z"}, "message": "add some breaking tests (TDD - style)", "tree": {"sha": "11e80eef8bac042f4f58316c2ad5ac4241e05567", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11e80eef8bac042f4f58316c2ad5ac4241e05567"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c074499f38df88d9e2fe86792e036c58bdebeee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c074499f38df88d9e2fe86792e036c58bdebeee", "html_url": "https://github.com/rust-lang/rust/commit/1c074499f38df88d9e2fe86792e036c58bdebeee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c074499f38df88d9e2fe86792e036c58bdebeee/comments", "author": null, "committer": null, "parents": [{"sha": "90f7899903238930633b8de620a12e8bfbafa8d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/90f7899903238930633b8de620a12e8bfbafa8d7", "html_url": "https://github.com/rust-lang/rust/commit/90f7899903238930633b8de620a12e8bfbafa8d7"}], "stats": {"total": 109, "additions": 109, "deletions": 0}, "files": [{"sha": "a445d713cd9865175c3587de87fb5691908afcfc", "filename": "crates/ide/src/highlight_related.rs", "status": "modified", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/rust-lang/rust/blob/1c074499f38df88d9e2fe86792e036c58bdebeee/crates%2Fide%2Fsrc%2Fhighlight_related.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c074499f38df88d9e2fe86792e036c58bdebeee/crates%2Fide%2Fsrc%2Fhighlight_related.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhighlight_related.rs?ref=1c074499f38df88d9e2fe86792e036c58bdebeee", "patch": "@@ -804,6 +804,115 @@ fn foo() {\n         );\n     }\n \n+    #[test]\n+    fn test_hl_break_for_but_not_continue() {\n+        check(\n+            r#\"\n+fn foo() {\n+    'outer: for _ in () {\n+ // ^^^^^^^^^^^\n+        break;\n+     // ^^^^^\n+        continue;\n+        'inner: for _ in () {\n+            break;\n+            continue;\n+            'innermost: for _ in () {\n+                continue 'outer;\n+                break 'outer;\n+             // ^^^^^^^^^^^^\n+                continue 'inner;\n+                break 'inner;\n+            }\n+            break$0 'outer;\n+         // ^^^^^^^^^^^^\n+            continue 'outer;\n+            break;\n+            continue;\n+        }\n+        break;\n+     // ^^^^^\n+        continue;\n+    }\n+}\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn test_hl_continue_for_but_not_break() {\n+        check(\n+            r#\"\n+fn foo() {\n+    'outer: for _ in () {\n+ // ^^^^^^^^^^^\n+        break;\n+        continue;\n+     // ^^^^^^^^\n+        'inner: for _ in () {\n+            break;\n+            continue;\n+            'innermost: for _ in () {\n+                continue 'outer;\n+             // ^^^^^^^^^^^^^^^\n+                break 'outer;\n+                continue 'inner;\n+                break 'inner;\n+            }\n+            break 'outer;\n+            continue$0 'outer;\n+         // ^^^^^^^^^^^^^^^\n+            break;\n+            continue;\n+        }\n+        break;\n+        continue;\n+     // ^^^^^^^^\n+    }\n+}\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn test_hl_break_and_continue() {\n+        check(\n+            r#\"\n+fn foo() {\n+    'outer$0: for _ in () {\n+ // ^^^^^^^^^^^\n+        break;\n+     // ^^^^^\n+        continue;\n+     // ^^^^^^^^\n+        'inner: for _ in () {\n+            break;\n+            continue;\n+            'innermost: for _ in () {\n+                continue 'outer;\n+             // ^^^^^^^^^^^^^^^\n+                break 'outer;\n+             // ^^^^^^^^^^^^\n+                continue 'inner;\n+                break 'inner;\n+            }\n+            break 'outer;\n+         // ^^^^^^^^^^^^\n+            continue 'outer;\n+         // ^^^^^^^^^^^^^^^\n+            break;\n+            continue;\n+        }\n+        break;\n+     // ^^^^^\n+        continue;\n+     // ^^^^^^^^\n+    }\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn test_hl_break_while() {\n         check("}]}