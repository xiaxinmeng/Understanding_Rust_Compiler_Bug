{"sha": "a211a82b3c7e450edd99ff6d3cf77a0cedae0d2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyMTFhODJiM2M3ZTQ1MGVkZDk5ZmY2ZDNjZjc3YTBjZWRhZTBkMmU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-02-24T14:22:46Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-02-24T15:22:01Z"}, "message": "Address review comment", "tree": {"sha": "5a9c254d7b337086d334f4e1d39c185e0dbf0e21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a9c254d7b337086d334f4e1d39c185e0dbf0e21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a211a82b3c7e450edd99ff6d3cf77a0cedae0d2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a211a82b3c7e450edd99ff6d3cf77a0cedae0d2e", "html_url": "https://github.com/rust-lang/rust/commit/a211a82b3c7e450edd99ff6d3cf77a0cedae0d2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a211a82b3c7e450edd99ff6d3cf77a0cedae0d2e/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f85b0c456f763a70a8eae0e4a9daf6a4005ef87a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f85b0c456f763a70a8eae0e4a9daf6a4005ef87a", "html_url": "https://github.com/rust-lang/rust/commit/f85b0c456f763a70a8eae0e4a9daf6a4005ef87a"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "22df31cc526d6fda917e5d6c4b750989510d4b22", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a211a82b3c7e450edd99ff6d3cf77a0cedae0d2e/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a211a82b3c7e450edd99ff6d3cf77a0cedae0d2e/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=a211a82b3c7e450edd99ff6d3cf77a0cedae0d2e", "patch": "@@ -533,17 +533,17 @@ impl<'l, 'tcx> SaveContext<'l, 'tcx> {\n                 match self.tables.expr_ty_adjusted(&hir_node).kind {\n                     ty::Adt(def, _) if !def.is_enum() => {\n                         let variant = &def.non_enum_variant();\n-                        if let Some(index) = self.tcx.find_field_index(ident, variant) {\n-                            filter!(self.span_utils, ident.span);\n-                            let span = self.span_from_span(ident.span);\n-                            return Some(Data::RefData(Ref {\n-                                kind: RefKind::Variable,\n-                                span,\n-                                ref_id: id_from_def_id(variant.fields[index].did),\n-                            }));\n-                        }\n-\n-                        None\n+                        filter!(self.span_utils, ident.span);\n+                        let span = self.span_from_span(ident.span);\n+                        return Some(Data::RefData(Ref {\n+                            kind: RefKind::Variable,\n+                            span,\n+                            ref_id: self\n+                                .tcx\n+                                .find_field_index(ident, variant)\n+                                .map(|index| id_from_def_id(variant.fields[index].did))\n+                                .unwrap_or_else(|| null_id()),\n+                        }));\n                     }\n                     ty::Tuple(..) => None,\n                     _ => {"}]}