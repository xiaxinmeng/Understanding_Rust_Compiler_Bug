{"sha": "b9fd6734e8ce315f0825157c0bf3aad67521e664", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5ZmQ2NzM0ZThjZTMxNWYwODI1MTU3YzBiZjNhYWQ2NzUyMWU2NjQ=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-08-01T18:07:28Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-09-05T02:51:29Z"}, "message": "Add tests for array_chunks_mut", "tree": {"sha": "e77aa33946b1f1daacc5a4297f25f2aa8b05027f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e77aa33946b1f1daacc5a4297f25f2aa8b05027f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9fd6734e8ce315f0825157c0bf3aad67521e664", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9fd6734e8ce315f0825157c0bf3aad67521e664", "html_url": "https://github.com/rust-lang/rust/commit/b9fd6734e8ce315f0825157c0bf3aad67521e664", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9fd6734e8ce315f0825157c0bf3aad67521e664/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6a6d2fef6c090806e961acb89817be8329f8208", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6a6d2fef6c090806e961acb89817be8329f8208", "html_url": "https://github.com/rust-lang/rust/commit/f6a6d2fef6c090806e961acb89817be8329f8208"}], "stats": {"total": 93, "additions": 93, "deletions": 0}, "files": [{"sha": "9b31e532a6a9fc2f6d8f41d7f070faf0757c2463", "filename": "library/core/tests/slice.rs", "status": "modified", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/rust-lang/rust/blob/b9fd6734e8ce315f0825157c0bf3aad67521e664/library%2Fcore%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9fd6734e8ce315f0825157c0bf3aad67521e664/library%2Fcore%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fslice.rs?ref=b9fd6734e8ce315f0825157c0bf3aad67521e664", "patch": "@@ -564,6 +564,99 @@ fn test_array_chunks_zip() {\n     assert_eq!(res, vec![14, 22]);\n }\n \n+#[test]\n+fn test_array_chunks_mut_infer() {\n+    let v: &mut [i32] = &mut [0, 1, 2, 3, 4, 5, 6];\n+    for a in v.array_chunks_mut() {\n+        let sum = a.iter().sum::<i32>();\n+        *a = [sum; 3];\n+    }\n+    assert_eq!(v, &[3, 3, 3, 12, 12, 12, 6]);\n+\n+    let v2: &mut [i32] = &mut [0, 1, 2, 3, 4, 5, 6];\n+    v2.array_chunks_mut().for_each(|[a, b]| core::mem::swap(a, b));\n+    assert_eq!(v2, &[1, 0, 3, 2, 5, 4, 6]);\n+}\n+\n+#[test]\n+fn test_array_chunks_mut_count() {\n+    let v: &mut [i32] = &mut [0, 1, 2, 3, 4, 5];\n+    let c = v.array_chunks_mut::<3>();\n+    assert_eq!(c.count(), 2);\n+\n+    let v2: &mut [i32] = &mut [0, 1, 2, 3, 4];\n+    let c2 = v2.array_chunks_mut::<2>();\n+    assert_eq!(c2.count(), 2);\n+\n+    let v3: &mut [i32] = &mut [];\n+    let c3 = v3.array_chunks_mut::<2>();\n+    assert_eq!(c3.count(), 0);\n+}\n+\n+#[test]\n+fn test_array_chunks_mut_nth() {\n+    let v: &mut [i32] = &mut [0, 1, 2, 3, 4, 5];\n+    let mut c = v.array_chunks_mut::<2>();\n+    assert_eq!(c.nth(1).unwrap(), &[2, 3]);\n+    assert_eq!(c.next().unwrap(), &[4, 5]);\n+\n+    let v2: &mut [i32] = &mut [0, 1, 2, 3, 4, 5, 6];\n+    let mut c2 = v2.array_chunks_mut::<3>();\n+    assert_eq!(c2.nth(1).unwrap(), &[3, 4, 5]);\n+    assert_eq!(c2.next(), None);\n+}\n+\n+#[test]\n+fn test_array_chunks_mut_nth_back() {\n+    let v: &mut [i32] = &mut [0, 1, 2, 3, 4, 5];\n+    let mut c = v.array_chunks_mut::<2>();\n+    assert_eq!(c.nth_back(1).unwrap(), &[2, 3]);\n+    assert_eq!(c.next().unwrap(), &[0, 1]);\n+    assert_eq!(c.next(), None);\n+\n+    let v2: &mut [i32] = &mut [0, 1, 2, 3, 4];\n+    let mut c2 = v2.array_chunks_mut::<3>();\n+    assert_eq!(c2.nth_back(0).unwrap(), &[0, 1, 2]);\n+    assert_eq!(c2.next(), None);\n+    assert_eq!(c2.next_back(), None);\n+\n+    let v3: &mut [i32] = &mut [0, 1, 2, 3, 4];\n+    let mut c3 = v3.array_chunks_mut::<10>();\n+    assert_eq!(c3.nth_back(0), None);\n+}\n+\n+#[test]\n+fn test_array_chunks_mut_last() {\n+    let v: &mut [i32] = &mut [0, 1, 2, 3, 4, 5];\n+    let c = v.array_chunks_mut::<2>();\n+    assert_eq!(c.last().unwrap(), &[4, 5]);\n+\n+    let v2: &mut [i32] = &mut [0, 1, 2, 3, 4];\n+    let c2 = v2.array_chunks_mut::<2>();\n+    assert_eq!(c2.last().unwrap(), &[2, 3]);\n+}\n+\n+#[test]\n+fn test_array_chunks_mut_remainder() {\n+    let v: &mut [i32] = &mut [0, 1, 2, 3, 4];\n+    let c = v.array_chunks_mut::<2>();\n+    assert_eq!(c.into_remainder(), &[4]);\n+}\n+\n+#[test]\n+fn test_array_chunks_mut_zip() {\n+    let v1: &mut [i32] = &mut [0, 1, 2, 3, 4];\n+    let v2: &[i32] = &[6, 7, 8, 9, 10];\n+\n+    for (a, b) in v1.array_chunks_mut::<2>().zip(v2.array_chunks::<2>()) {\n+        let sum = b.iter().sum::<i32>();\n+        for v in a {\n+            *v += sum;\n+        }\n+    }\n+    assert_eq!(v1, [13, 14, 19, 20, 4]);\n+}\n+\n #[test]\n fn test_rchunks_count() {\n     let v: &[i32] = &[0, 1, 2, 3, 4, 5];"}]}