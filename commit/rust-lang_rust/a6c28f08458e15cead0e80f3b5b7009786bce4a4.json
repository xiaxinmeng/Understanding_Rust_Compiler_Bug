{"sha": "a6c28f08458e15cead0e80f3b5b7009786bce4a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2YzI4ZjA4NDU4ZTE1Y2VhZDBlODBmM2I1YjcwMDk3ODZiY2U0YTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-05-24T12:48:12Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-05-24T12:48:12Z"}, "message": "Auto merge of #1426 - RalfJung:no-wrapper, r=RalfJung\n\nunset RUSTC_WRAPPER for xargo invocation\n\nFixes https://github.com/rust-lang/miri/issues/1421\n\n@bjorn3 @oli-obk do you think that is a reasonable way to solve this issue?", "tree": {"sha": "ece49e60cb64016bffbbee6b8d9df1fdcb57a6f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ece49e60cb64016bffbbee6b8d9df1fdcb57a6f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6c28f08458e15cead0e80f3b5b7009786bce4a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6c28f08458e15cead0e80f3b5b7009786bce4a4", "html_url": "https://github.com/rust-lang/rust/commit/a6c28f08458e15cead0e80f3b5b7009786bce4a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6c28f08458e15cead0e80f3b5b7009786bce4a4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de9a0ad51f3bf68f0b7d45d260fb5c5e4168ed3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/de9a0ad51f3bf68f0b7d45d260fb5c5e4168ed3a", "html_url": "https://github.com/rust-lang/rust/commit/de9a0ad51f3bf68f0b7d45d260fb5c5e4168ed3a"}, {"sha": "cf7d88fd91046f1f851a3d0687188d9cd283a162", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf7d88fd91046f1f851a3d0687188d9cd283a162", "html_url": "https://github.com/rust-lang/rust/commit/cf7d88fd91046f1f851a3d0687188d9cd283a162"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "2e2d4ce956b13dd218be871d1aadcc7092c97b13", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a6c28f08458e15cead0e80f3b5b7009786bce4a4/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6c28f08458e15cead0e80f3b5b7009786bce4a4/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=a6c28f08458e15cead0e80f3b5b7009786bce4a4", "patch": "@@ -335,7 +335,6 @@ path = \"lib.rs\"\n     command.current_dir(&dir);\n     command.env(\"XARGO_HOME\", &dir);\n     command.env(\"XARGO_RUST_SRC\", &rust_src);\n-    command.env_remove(\"RUSTFLAGS\"); // Make sure external `RUSTFLAGS` do not influence the build.\n     // Use Miri as rustc to build a libstd compatible with us (and use the right flags).\n     // However, when we are running in bootstrap, we cannot just overwrite `RUSTC`,\n     // because we still need bootstrap to distinguish between host and target crates.\n@@ -347,6 +346,12 @@ path = \"lib.rs\"\n         command.env(\"RUSTC\", find_miri());\n     }\n     command.env(\"MIRI_BE_RUSTC\", \"1\");\n+    // Make sure there are no other wrappers or flags getting in our way\n+    // (Cc https://github.com/rust-lang/miri/issues/1421).\n+    // This is consistent with normal `cargo build` that does not apply `RUSTFLAGS`\n+    // to the sysroot either.\n+    command.env_remove(\"RUSTC_WRAPPER\");\n+    command.env_remove(\"RUSTFLAGS\");\n     // Finally run it!\n     if command.status().expect(\"failed to run xargo\").success().not() {\n         show_error(format!(\"Failed to run xargo\"));\n@@ -446,6 +451,9 @@ fn in_cargo_miri() {\n         // Set `RUSTC_WRAPPER` to ourselves.  Cargo will prepend that binary to its usual invocation,\n         // i.e., the first argument is `rustc` -- which is what we use in `main` to distinguish\n         // the two codepaths. (That extra argument is why we prefer this over setting `RUSTC`.)\n+        if env::var_os(\"RUSTC_WRAPPER\").is_some() {\n+            println!(\"WARNING: Ignoring existing `RUSTC_WRAPPER` environment variable, Miri does not support wrapping.\");\n+        }\n         let path = std::env::current_exe().expect(\"current executable path invalid\");\n         cmd.env(\"RUSTC_WRAPPER\", path);\n         if verbose {"}]}