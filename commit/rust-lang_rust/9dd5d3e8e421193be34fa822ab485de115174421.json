{"sha": "9dd5d3e8e421193be34fa822ab485de115174421", "node_id": "C_kwDOAAsO6NoAKDlkZDVkM2U4ZTQyMTE5M2JlMzRmYTgyMmFiNDg1ZGUxMTUxNzQ0MjE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-15T21:31:04Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-02-02T06:10:02Z"}, "message": "Recover _ as .. in field pattern", "tree": {"sha": "674d0f71601cd8e5a4e5dd4b5ccaa656534c1cba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/674d0f71601cd8e5a4e5dd4b5ccaa656534c1cba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9dd5d3e8e421193be34fa822ab485de115174421", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9dd5d3e8e421193be34fa822ab485de115174421", "html_url": "https://github.com/rust-lang/rust/commit/9dd5d3e8e421193be34fa822ab485de115174421", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9dd5d3e8e421193be34fa822ab485de115174421/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "131f0c6df6777800aa884963bdba0739299cd31f", "url": "https://api.github.com/repos/rust-lang/rust/commits/131f0c6df6777800aa884963bdba0739299cd31f", "html_url": "https://github.com/rust-lang/rust/commit/131f0c6df6777800aa884963bdba0739299cd31f"}], "stats": {"total": 74, "additions": 42, "deletions": 32}, "files": [{"sha": "6752f05b044ee211bbfcf78d7d84e80885b9a1ce", "filename": "compiler/rustc_error_messages/locales/en-US/parse.ftl", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9dd5d3e8e421193be34fa822ab485de115174421/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparse.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/9dd5d3e8e421193be34fa822ab485de115174421/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparse.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparse.ftl?ref=9dd5d3e8e421193be34fa822ab485de115174421", "patch": "@@ -535,8 +535,8 @@ parse_dot_dot_dot_range_to_pattern_not_allowed = range-to patterns with `...` ar\n \n parse_enum_pattern_instead_of_identifier = expected identifier, found enum pattern\n \n-parse_dot_dot_dot_for_remaining_fields = expected field pattern, found `...`\n-    .suggestion = to omit remaining fields, use one fewer `.`\n+parse_dot_dot_dot_for_remaining_fields = expected field pattern, found `{$token_str}`\n+    .suggestion = to omit remaining fields, use `..`\n \n parse_expected_comma_after_pattern_field = expected `,`\n "}, {"sha": "20da8ce5b6e76a0965874007c86cf4b60f615dba", "filename": "compiler/rustc_parse/src/errors.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9dd5d3e8e421193be34fa822ab485de115174421/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dd5d3e8e421193be34fa822ab485de115174421/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs?ref=9dd5d3e8e421193be34fa822ab485de115174421", "patch": "@@ -1,3 +1,5 @@\n+use std::borrow::Cow;\n+\n use rustc_ast::token::Token;\n use rustc_ast::{Path, Visibility};\n use rustc_errors::{fluent, AddToDiagnostic, Applicability, EmissionGuarantee, IntoDiagnostic};\n@@ -1802,8 +1804,9 @@ pub(crate) struct EnumPatternInsteadOfIdentifier {\n #[diag(parse_dot_dot_dot_for_remaining_fields)]\n pub(crate) struct DotDotDotForRemainingFields {\n     #[primary_span]\n-    #[suggestion(code = \"..\", applicability = \"machine-applicable\")]\n+    #[suggestion(code = \"..\", style = \"verbose\", applicability = \"machine-applicable\")]\n     pub span: Span,\n+    pub token_str: Cow<'static, str>,\n }\n \n #[derive(Diagnostic)]"}, {"sha": "c982d7f99a91be44f1f519b58bc33d9a846a6acd", "filename": "compiler/rustc_parse/src/parser/pat.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9dd5d3e8e421193be34fa822ab485de115174421/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dd5d3e8e421193be34fa822ab485de115174421/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpat.rs?ref=9dd5d3e8e421193be34fa822ab485de115174421", "patch": "@@ -963,12 +963,15 @@ impl<'a> Parser<'a> {\n             }\n             ate_comma = false;\n \n-            if self.check(&token::DotDot) || self.token == token::DotDotDot {\n+            if self.check(&token::DotDot)\n+                || self.check_noexpect(&token::DotDotDot)\n+                || self.check_keyword(kw::Underscore)\n+            {\n                 etc = true;\n                 let mut etc_sp = self.token.span;\n \n-                self.recover_one_fewer_dotdot();\n-                self.bump(); // `..` || `...`\n+                self.recover_bad_dot_dot();\n+                self.bump(); // `..` || `...` || `_`\n \n                 if self.token == token::CloseDelim(Delimiter::Brace) {\n                     etc_span = Some(etc_sp);\n@@ -1061,14 +1064,15 @@ impl<'a> Parser<'a> {\n         Ok((fields, etc))\n     }\n \n-    /// Recover on `...` as if it were `..` to avoid further errors.\n+    /// Recover on `...` or `_` as if it were `..` to avoid further errors.\n     /// See issue #46718.\n-    fn recover_one_fewer_dotdot(&self) {\n-        if self.token != token::DotDotDot {\n+    fn recover_bad_dot_dot(&self) {\n+        if self.token == token::DotDot {\n             return;\n         }\n \n-        self.sess.emit_err(DotDotDotForRemainingFields { span: self.token.span });\n+        let token_str = pprust::token_to_string(&self.token);\n+        self.sess.emit_err(DotDotDotForRemainingFields { span: self.token.span, token_str });\n     }\n \n     fn parse_pat_field(&mut self, lo: Span, attrs: AttrVec) -> PResult<'a, PatField> {"}, {"sha": "589b2c3784926dc5a35ef647a26f02be58708b96", "filename": "tests/ui/did_you_mean/issue-46718-struct-pattern-dotdotdot.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9dd5d3e8e421193be34fa822ab485de115174421/tests%2Fui%2Fdid_you_mean%2Fissue-46718-struct-pattern-dotdotdot.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dd5d3e8e421193be34fa822ab485de115174421/tests%2Fui%2Fdid_you_mean%2Fissue-46718-struct-pattern-dotdotdot.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdid_you_mean%2Fissue-46718-struct-pattern-dotdotdot.stderr?ref=9dd5d3e8e421193be34fa822ab485de115174421", "patch": "@@ -2,7 +2,12 @@ error: expected field pattern, found `...`\n   --> $DIR/issue-46718-struct-pattern-dotdotdot.rs:11:55\n    |\n LL |             PersonalityInventory { expressivity: exp, ... } => exp\n-   |                                                       ^^^ help: to omit remaining fields, use one fewer `.`: `..`\n+   |                                                       ^^^\n+   |\n+help: to omit remaining fields, use `..`\n+   |\n+LL |             PersonalityInventory { expressivity: exp, .. } => exp\n+   |                                                       ~~\n \n error: aborting due to previous error\n "}, {"sha": "ba8174a823b2a30991c0179edbc664a6c8f4e202", "filename": "tests/ui/parser/issue-102806.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9dd5d3e8e421193be34fa822ab485de115174421/tests%2Fui%2Fparser%2Fissue-102806.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dd5d3e8e421193be34fa822ab485de115174421/tests%2Fui%2Fparser%2Fissue-102806.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Fissue-102806.stderr?ref=9dd5d3e8e421193be34fa822ab485de115174421", "patch": "@@ -32,7 +32,12 @@ error: expected field pattern, found `...`\n   --> $DIR/issue-102806.rs:21:22\n    |\n LL |     let V3 { z: val, ... } = v;\n-   |                      ^^^ help: to omit remaining fields, use one fewer `.`: `..`\n+   |                      ^^^\n+   |\n+help: to omit remaining fields, use `..`\n+   |\n+LL |     let V3 { z: val, .. } = v;\n+   |                      ~~\n \n error[E0063]: missing fields `x` and `y` in initializer of `V3`\n   --> $DIR/issue-102806.rs:17:13"}, {"sha": "e0dc356d5467bb996d9c9db592bf4dc0859e411d", "filename": "tests/ui/parser/issues/issue-63135.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9dd5d3e8e421193be34fa822ab485de115174421/tests%2Fui%2Fparser%2Fissues%2Fissue-63135.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dd5d3e8e421193be34fa822ab485de115174421/tests%2Fui%2Fparser%2Fissues%2Fissue-63135.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Fissues%2Fissue-63135.stderr?ref=9dd5d3e8e421193be34fa822ab485de115174421", "patch": "@@ -20,7 +20,12 @@ error: expected field pattern, found `...`\n   --> $DIR/issue-63135.rs:3:8\n    |\n LL | fn i(n{...,f #\n-   |        ^^^ help: to omit remaining fields, use one fewer `.`: `..`\n+   |        ^^^\n+   |\n+help: to omit remaining fields, use `..`\n+   |\n+LL | fn i(n{..,f #\n+   |        ~~\n \n error: expected `}`, found `,`\n   --> $DIR/issue-63135.rs:3:11"}, {"sha": "b569993c6143edeff75e58bcf35395ba12bcee61", "filename": "tests/ui/structs-enums/struct-enum-ignoring-field-with-underscore.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9dd5d3e8e421193be34fa822ab485de115174421/tests%2Fui%2Fstructs-enums%2Fstruct-enum-ignoring-field-with-underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dd5d3e8e421193be34fa822ab485de115174421/tests%2Fui%2Fstructs-enums%2Fstruct-enum-ignoring-field-with-underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstructs-enums%2Fstruct-enum-ignoring-field-with-underscore.rs?ref=9dd5d3e8e421193be34fa822ab485de115174421", "patch": "@@ -7,6 +7,5 @@ fn main() {\n     let foo = Some(Foo::Other);\n \n     if let Some(Foo::Bar {_}) = foo {}\n-    //~^ ERROR expected identifier, found reserved identifier `_`\n-    //~| ERROR pattern does not mention field `bar` [E0027]\n+    //~^ ERROR expected field pattern, found `_`\n }"}, {"sha": "2f3a150e5cba92566aadd814edcbad3e2fb000a4", "filename": "tests/ui/structs-enums/struct-enum-ignoring-field-with-underscore.stderr", "status": "modified", "additions": 6, "deletions": 17, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/9dd5d3e8e421193be34fa822ab485de115174421/tests%2Fui%2Fstructs-enums%2Fstruct-enum-ignoring-field-with-underscore.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dd5d3e8e421193be34fa822ab485de115174421/tests%2Fui%2Fstructs-enums%2Fstruct-enum-ignoring-field-with-underscore.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstructs-enums%2Fstruct-enum-ignoring-field-with-underscore.stderr?ref=9dd5d3e8e421193be34fa822ab485de115174421", "patch": "@@ -1,24 +1,13 @@\n-error: expected identifier, found reserved identifier `_`\n+error: expected field pattern, found `_`\n   --> $DIR/struct-enum-ignoring-field-with-underscore.rs:9:27\n    |\n LL |     if let Some(Foo::Bar {_}) = foo {}\n-   |                           ^ expected identifier, found reserved identifier\n-\n-error[E0027]: pattern does not mention field `bar`\n-  --> $DIR/struct-enum-ignoring-field-with-underscore.rs:9:17\n-   |\n-LL |     if let Some(Foo::Bar {_}) = foo {}\n-   |                 ^^^^^^^^^^^^ missing field `bar`\n-   |\n-help: include the missing field in the pattern\n+   |                           ^\n    |\n-LL |     if let Some(Foo::Bar {_, bar }) = foo {}\n-   |                            ~~~~~~~\n-help: if you don't care about this missing field, you can explicitly ignore it\n+help: to omit remaining fields, use `..`\n    |\n-LL |     if let Some(Foo::Bar {_, .. }) = foo {}\n-   |                            ~~~~~~\n+LL |     if let Some(Foo::Bar {..}) = foo {}\n+   |                           ~~\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0027`."}]}