{"sha": "0512475fdab549182e73a42c2cd02df0cb710ebf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1MTI0NzVmZGFiNTQ5MTgyZTczYTQyYzJjZDAyZGYwY2I3MTBlYmY=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-07-07T07:54:41Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-08-04T20:32:41Z"}, "message": "extra: make sure time::match_digits does not read past the end of the str", "tree": {"sha": "5a8267135c01ffe6a3b9b6b10067c3a6e00b60cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a8267135c01ffe6a3b9b6b10067c3a6e00b60cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0512475fdab549182e73a42c2cd02df0cb710ebf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0512475fdab549182e73a42c2cd02df0cb710ebf", "html_url": "https://github.com/rust-lang/rust/commit/0512475fdab549182e73a42c2cd02df0cb710ebf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0512475fdab549182e73a42c2cd02df0cb710ebf/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb5bf7c3e0f82328e5be5235a92d20bf01bc9915", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb5bf7c3e0f82328e5be5235a92d20bf01bc9915", "html_url": "https://github.com/rust-lang/rust/commit/bb5bf7c3e0f82328e5be5235a92d20bf01bc9915"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "9cc5d3ba6cca73b70cede4f5909aa33ae28b5adf", "filename": "src/libextra/time.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0512475fdab549182e73a42c2cd02df0cb710ebf/src%2Flibextra%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0512475fdab549182e73a42c2cd02df0cb710ebf/src%2Flibextra%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftime.rs?ref=0512475fdab549182e73a42c2cd02df0cb710ebf", "patch": "@@ -287,10 +287,14 @@ priv fn do_strptime(s: &str, format: &str) -> Result<Tm, ~str> {\n     fn match_digits(ss: &str, pos: uint, digits: uint, ws: bool)\n       -> Option<(i32, uint)> {\n         let mut pos = pos;\n+        let len = ss.len();\n         let mut value = 0_i32;\n \n         let mut i = 0u;\n         while i < digits {\n+            if pos >= len {\n+                return None;\n+            }\n             let range = ss.char_range_at(pos);\n             pos = range.next;\n \n@@ -856,7 +860,7 @@ priv fn do_strftime(format: &str, tm: &Tm) -> ~str {\n \n #[cfg(test)]\n mod tests {\n-    use time::*;\n+    use super::*;\n \n     use std::float;\n     use std::os;\n@@ -904,7 +908,7 @@ mod tests {\n         os::setenv(\"TZ\", \"America/Los_Angeles\");\n         tzset();\n \n-        let time = ::time::Timespec::new(1234567890, 54321);\n+        let time = Timespec::new(1234567890, 54321);\n         let utc = at_utc(time);\n \n         assert!(utc.tm_sec == 30_i32);\n@@ -925,7 +929,7 @@ mod tests {\n         os::setenv(\"TZ\", \"America/Los_Angeles\");\n         tzset();\n \n-        let time = ::time::Timespec::new(1234567890, 54321);\n+        let time = Timespec::new(1234567890, 54321);\n         let local = at(time);\n \n         error!(\"time_at: %?\", local);\n@@ -953,7 +957,7 @@ mod tests {\n         os::setenv(\"TZ\", \"America/Los_Angeles\");\n         tzset();\n \n-        let time = ::time::Timespec::new(1234567890, 54321);\n+        let time = Timespec::new(1234567890, 54321);\n         let utc = at_utc(time);\n \n         assert_eq!(utc.to_timespec(), time);\n@@ -964,7 +968,7 @@ mod tests {\n         os::setenv(\"TZ\", \"America/Los_Angeles\");\n         tzset();\n \n-        let time = ::time::Timespec::new(1234567890, 54321);\n+        let time = Timespec::new(1234567890, 54321);\n         let utc = at_utc(time);\n         let local = at(time);\n \n@@ -1145,7 +1149,7 @@ mod tests {\n         os::setenv(\"TZ\", \"America/Los_Angeles\");\n         tzset();\n \n-        let time = ::time::Timespec::new(1234567890, 54321);\n+        let time = Timespec::new(1234567890, 54321);\n         let utc   = at_utc(time);\n         let local = at(time);\n \n@@ -1159,7 +1163,7 @@ mod tests {\n         os::setenv(\"TZ\", \"America/Los_Angeles\");\n         tzset();\n \n-        let time = ::time::Timespec::new(1234567890, 54321);\n+        let time = Timespec::new(1234567890, 54321);\n         let utc = at_utc(time);\n         let local = at(time);\n "}]}