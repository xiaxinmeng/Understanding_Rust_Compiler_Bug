{"sha": "7a2b87db734162f02f554f7876f3ae0f21a36a60", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhMmI4N2RiNzM0MTYyZjAyZjU1NGY3ODc2ZjNhZTBmMjFhMzZhNjA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-01-29T10:24:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-29T10:24:08Z"}, "message": "Merge #2934\n\n2934: Complain loudly if the main loop is blocked r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "10f01bd26fba1fdc05424443141b87639030875a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10f01bd26fba1fdc05424443141b87639030875a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a2b87db734162f02f554f7876f3ae0f21a36a60", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeMV1ICRBK7hj4Ov3rIwAAdHIIAFEXPV6pB+vMrJMdATzp7Ri5\nFBKIX+YcpDL3/9mcF+cZJETpHbtOhNZmUVSYb1KU559KTclvv5K6hFhiv2v3q3Aw\njXvF7ixoHAtqnKz7BjU7h9Lu2lAEvpmXHhU0mC2GYCCsGSaCzoiIuQCQUO5d61/I\nxqIM7b9MDWa5k4QMY5fnZCHOmAaZocEUdvY4kzWA5rpqC9+0aIjmeFY16hP8VvVk\nfUGHXY7vuYBO5wyxUfZ1xXhqFSFUUFROc7nAASZSwMX7LC9AMrS+hMepqGRdvIsA\nRHAH7dOhgli54QgoBQIC1ZiGwCLt6DIX9GHdDRRqgdniUUOsQ3JfwkNvWYcdKrE=\n=IPWB\n-----END PGP SIGNATURE-----\n", "payload": "tree 10f01bd26fba1fdc05424443141b87639030875a\nparent 3ea8940d94b4b8af7f7fcdf9b92faa025d9f99de\nparent 9753eb98ccbe4c5abefacde2fc60e919cf3c5645\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1580293448 +0000\ncommitter GitHub <noreply@github.com> 1580293448 +0000\n\nMerge #2934\n\n2934: Complain loudly if the main loop is blocked r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a2b87db734162f02f554f7876f3ae0f21a36a60", "html_url": "https://github.com/rust-lang/rust/commit/7a2b87db734162f02f554f7876f3ae0f21a36a60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a2b87db734162f02f554f7876f3ae0f21a36a60/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ea8940d94b4b8af7f7fcdf9b92faa025d9f99de", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ea8940d94b4b8af7f7fcdf9b92faa025d9f99de", "html_url": "https://github.com/rust-lang/rust/commit/3ea8940d94b4b8af7f7fcdf9b92faa025d9f99de"}, {"sha": "9753eb98ccbe4c5abefacde2fc60e919cf3c5645", "url": "https://api.github.com/repos/rust-lang/rust/commits/9753eb98ccbe4c5abefacde2fc60e919cf3c5645", "html_url": "https://github.com/rust-lang/rust/commit/9753eb98ccbe4c5abefacde2fc60e919cf3c5645"}], "stats": {"total": 36, "additions": 28, "deletions": 8}, "files": [{"sha": "9901fe93158d3eb3afaa3e0c24b3eb4623666939", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 28, "deletions": 8, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/7a2b87db734162f02f554f7876f3ae0f21a36a60/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a2b87db734162f02f554f7876f3ae0f21a36a60/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=7a2b87db734162f02f554f7876f3ae0f21a36a60", "patch": "@@ -5,7 +5,14 @@ mod handlers;\n mod subscriptions;\n pub(crate) mod pending_requests;\n \n-use std::{error::Error, fmt, panic, path::PathBuf, sync::Arc, time::Instant};\n+use std::{\n+    env,\n+    error::Error,\n+    fmt, panic,\n+    path::PathBuf,\n+    sync::Arc,\n+    time::{Duration, Instant},\n+};\n \n use crossbeam_channel::{select, unbounded, RecvError, Sender};\n use lsp_server::{Connection, ErrorCode, Message, Notification, Request, RequestId, Response};\n@@ -425,6 +432,19 @@ fn loop_turn(\n             loop_state.subscriptions.subscriptions(),\n         )\n     }\n+\n+    let loop_duration = loop_start.elapsed();\n+    if loop_duration > Duration::from_millis(10) {\n+        log::error!(\"overly long loop turn: {:?}\", loop_duration);\n+        if env::var(\"RA_PROFILE\").is_ok() {\n+            show_message(\n+                req::MessageType::Error,\n+                format!(\"overly long loop turn: {:?}\", loop_duration),\n+                &connection.sender,\n+            );\n+        }\n+    }\n+\n     Ok(())\n }\n \n@@ -452,7 +472,7 @@ fn on_request(\n     world: &mut WorldState,\n     pending_requests: &mut PendingRequests,\n     pool: &ThreadPool,\n-    sender: &Sender<Task>,\n+    task_sender: &Sender<Task>,\n     msg_sender: &Sender<Message>,\n     request_received: Instant,\n     req: Request,\n@@ -461,7 +481,7 @@ fn on_request(\n         req: Some(req),\n         pool,\n         world,\n-        sender,\n+        task_sender,\n         msg_sender,\n         pending_requests,\n         request_received,\n@@ -661,7 +681,7 @@ struct PoolDispatcher<'a> {\n     world: &'a mut WorldState,\n     pending_requests: &'a mut PendingRequests,\n     msg_sender: &'a Sender<Message>,\n-    sender: &'a Sender<Task>,\n+    task_sender: &'a Sender<Task>,\n     request_received: Instant,\n }\n \n@@ -708,7 +728,7 @@ impl<'a> PoolDispatcher<'a> {\n \n         self.pool.execute({\n             let world = self.world.snapshot();\n-            let sender = self.sender.clone();\n+            let sender = self.task_sender.clone();\n             move || {\n                 let result = f(world, params);\n                 let task = result_to_task::<R>(id, result);\n@@ -786,7 +806,7 @@ fn update_file_notifications_on_threadpool(\n     pool: &ThreadPool,\n     world: WorldSnapshot,\n     publish_decorations: bool,\n-    sender: Sender<Task>,\n+    task_sender: Sender<Task>,\n     subscriptions: Vec<FileId>,\n ) {\n     log::trace!(\"updating notifications for {:?}\", subscriptions);\n@@ -802,7 +822,7 @@ fn update_file_notifications_on_threadpool(\n                     }\n                     Ok(params) => {\n                         let not = notification_new::<req::PublishDiagnostics>(params);\n-                        sender.send(Task::Notify(not)).unwrap();\n+                        task_sender.send(Task::Notify(not)).unwrap();\n                     }\n                 }\n             }\n@@ -815,7 +835,7 @@ fn update_file_notifications_on_threadpool(\n                     }\n                     Ok(params) => {\n                         let not = notification_new::<req::PublishDecorations>(params);\n-                        sender.send(Task::Notify(not)).unwrap();\n+                        task_sender.send(Task::Notify(not)).unwrap();\n                     }\n                 }\n             }"}]}