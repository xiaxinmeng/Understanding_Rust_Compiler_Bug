{"sha": "a586e7d857e9f2acee86cb25d42fb3ca3fbc1813", "node_id": "C_kwDOAAsO6NoAKGE1ODZlN2Q4NTdlOWYyYWNlZTg2Y2IyNWQ0MmZiM2NhM2ZiYzE4MTM", "commit": {"author": {"name": "PFPoitras", "email": "patrick.f.poitras@gmail.com", "date": "2021-12-14T13:26:57Z"}, "committer": {"name": "PFPoitras", "email": "patrick.f.poitras@gmail.com", "date": "2021-12-14T13:26:57Z"}, "message": "Make suggestions from @jackh726; run fmt", "tree": {"sha": "eedaab3070223745d8d6d5be38ec6d9b06cbc968", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eedaab3070223745d8d6d5be38ec6d9b06cbc968"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a586e7d857e9f2acee86cb25d42fb3ca3fbc1813", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a586e7d857e9f2acee86cb25d42fb3ca3fbc1813", "html_url": "https://github.com/rust-lang/rust/commit/a586e7d857e9f2acee86cb25d42fb3ca3fbc1813", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a586e7d857e9f2acee86cb25d42fb3ca3fbc1813/comments", "author": {"login": "Patrick-Poitras", "id": 42386710, "node_id": "MDQ6VXNlcjQyMzg2NzEw", "avatar_url": "https://avatars.githubusercontent.com/u/42386710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Patrick-Poitras", "html_url": "https://github.com/Patrick-Poitras", "followers_url": "https://api.github.com/users/Patrick-Poitras/followers", "following_url": "https://api.github.com/users/Patrick-Poitras/following{/other_user}", "gists_url": "https://api.github.com/users/Patrick-Poitras/gists{/gist_id}", "starred_url": "https://api.github.com/users/Patrick-Poitras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Patrick-Poitras/subscriptions", "organizations_url": "https://api.github.com/users/Patrick-Poitras/orgs", "repos_url": "https://api.github.com/users/Patrick-Poitras/repos", "events_url": "https://api.github.com/users/Patrick-Poitras/events{/privacy}", "received_events_url": "https://api.github.com/users/Patrick-Poitras/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Patrick-Poitras", "id": 42386710, "node_id": "MDQ6VXNlcjQyMzg2NzEw", "avatar_url": "https://avatars.githubusercontent.com/u/42386710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Patrick-Poitras", "html_url": "https://github.com/Patrick-Poitras", "followers_url": "https://api.github.com/users/Patrick-Poitras/followers", "following_url": "https://api.github.com/users/Patrick-Poitras/following{/other_user}", "gists_url": "https://api.github.com/users/Patrick-Poitras/gists{/gist_id}", "starred_url": "https://api.github.com/users/Patrick-Poitras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Patrick-Poitras/subscriptions", "organizations_url": "https://api.github.com/users/Patrick-Poitras/orgs", "repos_url": "https://api.github.com/users/Patrick-Poitras/repos", "events_url": "https://api.github.com/users/Patrick-Poitras/events{/privacy}", "received_events_url": "https://api.github.com/users/Patrick-Poitras/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae21dd00ace34974a8337195c885c250f402d8cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae21dd00ace34974a8337195c885c250f402d8cf", "html_url": "https://github.com/rust-lang/rust/commit/ae21dd00ace34974a8337195c885c250f402d8cf"}], "stats": {"total": 37, "additions": 20, "deletions": 17}, "files": [{"sha": "b6ffef8d1b3d1f7a8044977c39293cc3fff4bcf1", "filename": "compiler/rustc_typeck/src/check/wfcheck.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a586e7d857e9f2acee86cb25d42fb3ca3fbc1813/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a586e7d857e9f2acee86cb25d42fb3ca3fbc1813/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs?ref=a586e7d857e9f2acee86cb25d42fb3ca3fbc1813", "patch": "@@ -1450,7 +1450,7 @@ fn check_method_receiver<'fcx, 'tcx>(\n     }\n }\n \n-fn e0307<'fcx, 'tcx> (fcx: &FnCtxt<'fcx, 'tcx>, span: Span, receiver_ty: Ty<'_>) {\n+fn e0307<'tcx>(fcx: &FnCtxt<'_, 'tcx>, span: Span, receiver_ty: Ty<'_>) {\n     struct_span_err!(\n         fcx.tcx.sess.diagnostic(),\n         span,\n@@ -1696,8 +1696,8 @@ pub struct CheckTypeWellFormedVisitor<'tcx> {\n     tcx: TyCtxt<'tcx>,\n }\n \n-impl CheckTypeWellFormedVisitor<'_> {\n-    pub fn new(tcx: TyCtxt<'_>) -> CheckTypeWellFormedVisitor<'_> {\n+impl<'tcx> CheckTypeWellFormedVisitor<'tcx> {\n+    pub fn new(tcx: TyCtxt<'tcx>) -> CheckTypeWellFormedVisitor<'tcx> {\n         CheckTypeWellFormedVisitor { tcx }\n     }\n }"}, {"sha": "f45cd3ed68948655ec3304aeec7ddc3d9413f2b1", "filename": "compiler/rustc_typeck/src/check_unused.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a586e7d857e9f2acee86cb25d42fb3ca3fbc1813/compiler%2Frustc_typeck%2Fsrc%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a586e7d857e9f2acee86cb25d42fb3ca3fbc1813/compiler%2Frustc_typeck%2Fsrc%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck_unused.rs?ref=a586e7d857e9f2acee86cb25d42fb3ca3fbc1813", "patch": "@@ -21,7 +21,7 @@ pub fn check_crate(tcx: TyCtxt<'_>) {\n     unused_crates_lint(tcx);\n }\n \n-impl <'v, 'tcx> ItemLikeVisitor<'v> for CheckVisitor<'tcx> {\n+impl<'tcx> ItemLikeVisitor<'_> for CheckVisitor<'tcx> {\n     fn visit_item(&mut self, item: &hir::Item<'_>) {\n         if item.vis.node.is_pub() || item.span.is_dummy() {\n             return;"}, {"sha": "d5494c5a6854847a48f571a844a6719ecbf7bca7", "filename": "compiler/rustc_typeck/src/coherence/builtin.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a586e7d857e9f2acee86cb25d42fb3ca3fbc1813/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a586e7d857e9f2acee86cb25d42fb3ca3fbc1813/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Fbuiltin.rs?ref=a586e7d857e9f2acee86cb25d42fb3ca3fbc1813", "patch": "@@ -108,7 +108,7 @@ fn visit_implementation_of_copy(tcx: TyCtxt<'_>, impl_did: LocalDefId) {\n     }\n }\n \n-fn visit_implementation_of_coerce_unsized(tcx: TyCtxt<'_>, impl_did: LocalDefId) {\n+fn visit_implementation_of_coerce_unsized<'tcx>(tcx: TyCtxt<'tcx>, impl_did: LocalDefId) {\n     debug!(\"visit_implementation_of_coerce_unsized: impl_did={:?}\", impl_did);\n \n     // Just compute this for the side-effects, in particular reporting\n@@ -118,7 +118,7 @@ fn visit_implementation_of_coerce_unsized(tcx: TyCtxt<'_>, impl_did: LocalDefId)\n     tcx.at(span).coerce_unsized_info(impl_did);\n }\n \n-fn visit_implementation_of_dispatch_from_dyn(tcx: TyCtxt<'_>, impl_did: LocalDefId) {\n+fn visit_implementation_of_dispatch_from_dyn<'tcx>(tcx: TyCtxt<'tcx>, impl_did: LocalDefId) {\n     debug!(\"visit_implementation_of_dispatch_from_dyn: impl_did={:?}\", impl_did);\n \n     let impl_hir_id = tcx.hir().local_def_id_to_hir_id(impl_did);"}, {"sha": "f4e5cce0129c9109d7932836f408c0bf7c22ffaa", "filename": "compiler/rustc_typeck/src/coherence/inherent_impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a586e7d857e9f2acee86cb25d42fb3ca3fbc1813/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Finherent_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a586e7d857e9f2acee86cb25d42fb3ca3fbc1813/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Finherent_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Finherent_impls.rs?ref=a586e7d857e9f2acee86cb25d42fb3ca3fbc1813", "patch": "@@ -38,7 +38,7 @@ struct InherentCollect<'tcx> {\n     impls_map: CrateInherentImpls,\n }\n \n-impl<'v, 'tcx> ItemLikeVisitor<'v> for InherentCollect<'tcx> {\n+impl<'tcx> ItemLikeVisitor<'_> for InherentCollect<'tcx> {\n     fn visit_item(&mut self, item: &hir::Item<'_>) {\n         let (ty, assoc_items) = match item.kind {\n             hir::ItemKind::Impl(hir::Impl { of_trait: None, ref self_ty, items, .. }) => {"}, {"sha": "59f211bd2c36c9ec82b50d9de3fdeb3701c264a5", "filename": "compiler/rustc_typeck/src/coherence/inherent_impls_overlap.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a586e7d857e9f2acee86cb25d42fb3ca3fbc1813/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Finherent_impls_overlap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a586e7d857e9f2acee86cb25d42fb3ca3fbc1813/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Finherent_impls_overlap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Finherent_impls_overlap.rs?ref=a586e7d857e9f2acee86cb25d42fb3ca3fbc1813", "patch": "@@ -115,8 +115,8 @@ impl<'tcx> InherentOverlapChecker<'tcx> {\n     }\n }\n \n-impl<'v, 'tcx> ItemLikeVisitor<'v> for InherentOverlapChecker<'tcx> {\n-    fn visit_item(&mut self, item: &'v hir::Item<'v>) {\n+impl<'tcx> ItemLikeVisitor<'_> for InherentOverlapChecker<'tcx> {\n+    fn visit_item(&mut self, item: &hir::Item<'_>) {\n         match item.kind {\n             hir::ItemKind::Enum(..)\n             | hir::ItemKind::Struct(..)\n@@ -300,9 +300,9 @@ impl<'v, 'tcx> ItemLikeVisitor<'v> for InherentOverlapChecker<'tcx> {\n         }\n     }\n \n-    fn visit_trait_item(&mut self, _trait_item: &hir::TraitItem<'v>) {}\n+    fn visit_trait_item(&mut self, _trait_item: &hir::TraitItem<'_>) {}\n \n-    fn visit_impl_item(&mut self, _impl_item: &hir::ImplItem<'v>) {}\n+    fn visit_impl_item(&mut self, _impl_item: &hir::ImplItem<'_>) {}\n \n-    fn visit_foreign_item(&mut self, _foreign_item: &hir::ForeignItem<'v>) {}\n+    fn visit_foreign_item(&mut self, _foreign_item: &hir::ForeignItem<'_>) {}\n }"}, {"sha": "f7aabf2406f371f19bab0d828924050e8d308752", "filename": "compiler/rustc_typeck/src/coherence/unsafety.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a586e7d857e9f2acee86cb25d42fb3ca3fbc1813/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Funsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a586e7d857e9f2acee86cb25d42fb3ca3fbc1813/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Funsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Funsafety.rs?ref=a586e7d857e9f2acee86cb25d42fb3ca3fbc1813", "patch": "@@ -17,9 +17,9 @@ struct UnsafetyChecker<'tcx> {\n }\n \n impl<'tcx> UnsafetyChecker<'tcx> {\n-    fn check_unsafety_coherence<'v>(\n+    fn check_unsafety_coherence(\n         &mut self,\n-        item: &'v hir::Item<'v>,\n+        item: &hir::Item<'_>,\n         impl_generics: Option<&hir::Generics<'_>>,\n         unsafety: hir::Unsafety,\n         polarity: hir::ImplPolarity,\n@@ -83,8 +83,8 @@ impl<'tcx> UnsafetyChecker<'tcx> {\n     }\n }\n \n-impl<'v, 'tcx> ItemLikeVisitor<'v> for UnsafetyChecker<'tcx> {\n-    fn visit_item(&mut self, item: &'v hir::Item<'v>) {\n+impl<'tcx> ItemLikeVisitor<'_> for UnsafetyChecker<'tcx> {\n+    fn visit_item(&mut self, item: &hir::Item<'_>) {\n         if let hir::ItemKind::Impl(ref impl_) = item.kind {\n             self.check_unsafety_coherence(\n                 item,"}, {"sha": "b96a5b158a2682a035b6a1e528e65d3b8a6dfb45", "filename": "compiler/rustc_typeck/src/collect.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a586e7d857e9f2acee86cb25d42fb3ca3fbc1813/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a586e7d857e9f2acee86cb25d42fb3ca3fbc1813/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs?ref=a586e7d857e9f2acee86cb25d42fb3ca3fbc1813", "patch": "@@ -223,7 +223,10 @@ crate fn placeholder_type_error<'tcx>(\n     err.emit();\n }\n \n-fn reject_placeholder_type_signatures_in_item<'tcx>(tcx: TyCtxt<'tcx>, item: &'tcx hir::Item<'tcx>) {\n+fn reject_placeholder_type_signatures_in_item<'tcx>(\n+    tcx: TyCtxt<'tcx>,\n+    item: &'tcx hir::Item<'tcx>,\n+) {\n     let (generics, suggest) = match &item.kind {\n         hir::ItemKind::Union(_, generics)\n         | hir::ItemKind::Enum(_, generics)"}]}