{"sha": "50fcd454c71084cb682f4d908b06cdd3eddacaf9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwZmNkNDU0YzcxMDg0Y2I2ODJmNGQ5MDhiMDZjZGQzZWRkYWNhZjk=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2021-08-02T22:46:10Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2021-08-03T01:10:10Z"}, "message": "Make columns 1 based", "tree": {"sha": "f0144c0433bb73626cf5f38a6fb73adc1761b960", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0144c0433bb73626cf5f38a6fb73adc1761b960"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50fcd454c71084cb682f4d908b06cdd3eddacaf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50fcd454c71084cb682f4d908b06cdd3eddacaf9", "html_url": "https://github.com/rust-lang/rust/commit/50fcd454c71084cb682f4d908b06cdd3eddacaf9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50fcd454c71084cb682f4d908b06cdd3eddacaf9/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4a85dafda05adfb2eef3f13277ce3f52db4b23e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4a85dafda05adfb2eef3f13277ce3f52db4b23e", "html_url": "https://github.com/rust-lang/rust/commit/b4a85dafda05adfb2eef3f13277ce3f52db4b23e"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "793d35a28a2c063dcb73b9f2762f135296e879fd", "filename": "library/proc_macro/src/lib.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/50fcd454c71084cb682f4d908b06cdd3eddacaf9/library%2Fproc_macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50fcd454c71084cb682f4d908b06cdd3eddacaf9/library%2Fproc_macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fproc_macro%2Fsrc%2Flib.rs?ref=50fcd454c71084cb682f4d908b06cdd3eddacaf9", "patch": "@@ -348,13 +348,13 @@ impl Span {\n     /// Gets the starting line/column in the source file for this span.\n     #[unstable(feature = \"proc_macro_span\", issue = \"54725\")]\n     pub fn start(&self) -> LineColumn {\n-        self.0.start()\n+        self.0.start().add_1_to_column()\n     }\n \n     /// Gets the ending line/column in the source file for this span.\n     #[unstable(feature = \"proc_macro_span\", issue = \"54725\")]\n     pub fn end(&self) -> LineColumn {\n-        self.0.end()\n+        self.0.end().add_1_to_column()\n     }\n \n     /// Creates a new span encompassing `self` and `other`.\n@@ -432,12 +432,18 @@ pub struct LineColumn {\n     /// The 1-indexed line in the source file on which the span starts or ends (inclusive).\n     #[unstable(feature = \"proc_macro_span\", issue = \"54725\")]\n     pub line: usize,\n-    /// The 0-indexed column (in UTF-8 characters) in the source file on which\n+    /// The 1-indexed column (in UTF-8 characters) in the source file on which\n     /// the span starts or ends (inclusive).\n     #[unstable(feature = \"proc_macro_span\", issue = \"54725\")]\n     pub column: usize,\n }\n \n+impl LineColumn {\n+    fn add_1_to_column(self) -> Self {\n+        LineColumn { line: self.line, column: self.column + 1 }\n+    }\n+}\n+\n #[unstable(feature = \"proc_macro_span\", issue = \"54725\")]\n impl !Send for LineColumn {}\n #[unstable(feature = \"proc_macro_span\", issue = \"54725\")]"}]}