{"sha": "cbc396fdfb411b4963131889aeae5c675f4512a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiYzM5NmZkZmI0MTFiNDk2MzEzMTg4OWFlYWU1YzY3NWY0NTEyYTI=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-09-03T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-09-04T17:36:45Z"}, "message": "inliner: Check for target features compatibility", "tree": {"sha": "f5b0cba4e2c49e3d77a794c832e4456206d31c11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5b0cba4e2c49e3d77a794c832e4456206d31c11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbc396fdfb411b4963131889aeae5c675f4512a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbc396fdfb411b4963131889aeae5c675f4512a2", "html_url": "https://github.com/rust-lang/rust/commit/cbc396fdfb411b4963131889aeae5c675f4512a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbc396fdfb411b4963131889aeae5c675f4512a2/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80cacd77954b39a6bc205213faa8c82c97eb0055", "url": "https://api.github.com/repos/rust-lang/rust/commits/80cacd77954b39a6bc205213faa8c82c97eb0055", "html_url": "https://github.com/rust-lang/rust/commit/80cacd77954b39a6bc205213faa8c82c97eb0055"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "0fe0169e2c88ce69adfdfd7b3f41c8e703f8740a", "filename": "compiler/rustc_mir/src/transform/inline.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/cbc396fdfb411b4963131889aeae5c675f4512a2/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbc396fdfb411b4963131889aeae5c675f4512a2/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs?ref=cbc396fdfb411b4963131889aeae5c675f4512a2", "patch": "@@ -4,7 +4,7 @@ use rustc_attr as attr;\n use rustc_hir::def_id::DefId;\n use rustc_index::bit_set::BitSet;\n use rustc_index::vec::{Idx, IndexVec};\n-use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n+use rustc_middle::middle::codegen_fn_attrs::{CodegenFnAttrFlags, CodegenFnAttrs};\n use rustc_middle::mir::visit::*;\n use rustc_middle::mir::*;\n use rustc_middle::ty::subst::{Subst, SubstsRef};\n@@ -45,7 +45,8 @@ impl<'tcx> MirPass<'tcx> for Inline {\n                 // based function.\n                 debug!(\"function inlining is disabled when compiling with `instrument_coverage`\");\n             } else {\n-                Inliner { tcx, source }.run_pass(body);\n+                Inliner { tcx, source, codegen_fn_attrs: tcx.codegen_fn_attrs(source.def_id()) }\n+                    .run_pass(body);\n             }\n         }\n     }\n@@ -54,6 +55,7 @@ impl<'tcx> MirPass<'tcx> for Inline {\n struct Inliner<'tcx> {\n     tcx: TyCtxt<'tcx>,\n     source: MirSource<'tcx>,\n+    codegen_fn_attrs: &'tcx CodegenFnAttrs,\n }\n \n impl Inliner<'tcx> {\n@@ -242,6 +244,13 @@ impl Inliner<'tcx> {\n             return false;\n         }\n \n+        let self_features = &self.codegen_fn_attrs.target_features;\n+        let callee_features = &codegen_fn_attrs.target_features;\n+        if callee_features.iter().any(|feature| !self_features.contains(feature)) {\n+            debug!(\"`callee has extra target features - not inlining\");\n+            return false;\n+        }\n+\n         // Avoid inlining functions marked as no_sanitize if sanitizer is enabled,\n         // since instrumentation might be enabled and performed on the caller.\n         if self.tcx.sess.opts.debugging_opts.sanitizer.intersects(codegen_fn_attrs.no_sanitize) {"}]}