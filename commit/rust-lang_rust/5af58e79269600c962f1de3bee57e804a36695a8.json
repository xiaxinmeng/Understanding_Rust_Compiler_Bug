{"sha": "5af58e79269600c962f1de3bee57e804a36695a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhZjU4ZTc5MjY5NjAwYzk2MmYxZGUzYmVlNTdlODA0YTM2Njk1YTg=", "commit": {"author": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-05-09T00:33:48Z"}, "committer": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-05-10T21:21:04Z"}, "message": "Removed all 4 uses of `do ... while` in the codebase.", "tree": {"sha": "81b48609a3f88973f369344c7d99aebeb9507f6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81b48609a3f88973f369344c7d99aebeb9507f6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5af58e79269600c962f1de3bee57e804a36695a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5af58e79269600c962f1de3bee57e804a36695a8", "html_url": "https://github.com/rust-lang/rust/commit/5af58e79269600c962f1de3bee57e804a36695a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5af58e79269600c962f1de3bee57e804a36695a8/comments", "author": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa6c18e0149c9e31a69c9084c416ea5c7cd363dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa6c18e0149c9e31a69c9084c416ea5c7cd363dd", "html_url": "https://github.com/rust-lang/rust/commit/fa6c18e0149c9e31a69c9084c416ea5c7cd363dd"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "75ca4cb035e39d611e031eaf43dd1a3dcd92c4ab", "filename": "src/libcore/path.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5af58e79269600c962f1de3bee57e804a36695a8/src%2Flibcore%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5af58e79269600c962f1de3bee57e804a36695a8/src%2Flibcore%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpath.rs?ref=5af58e79269600c962f1de3bee57e804a36695a8", "patch": "@@ -251,7 +251,7 @@ fn normalize(p: path) -> path {\n         let mut t = [];\n         let mut i = vec::len(s);\n         let mut skip = 0;\n-        do {\n+        while i != 0u {\n             i -= 1u;\n             if s[i] == \"..\" {\n                 skip += 1;\n@@ -262,7 +262,7 @@ fn normalize(p: path) -> path {\n                     skip -= 1;\n                 }\n             }\n-        } while i != 0u;\n+        }\n         let mut t = vec::reversed(t);\n         while skip > 0 {\n             t += [\"..\"];"}, {"sha": "dbdb8137b8a9e897111fdac1d115f3765fdb518f", "filename": "src/rustc/metadata/tydecode.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5af58e79269600c962f1de3bee57e804a36695a8/src%2Frustc%2Fmetadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5af58e79269600c962f1de3bee57e804a36695a8/src%2Frustc%2Fmetadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Ftydecode.rs?ref=5af58e79269600c962f1de3bee57e804a36695a8", "patch": "@@ -69,10 +69,11 @@ fn parse_constrs(st: @pstate, conv: conv_did) -> [@ty::constr] {\n     let mut rslt: [@ty::constr] = [];\n     alt peek(st) {\n       ':' {\n-        do  {\n+        loop {\n             next(st);\n             rslt += [parse_constr(st, conv, parse_constr_arg)];\n-        } while peek(st) == ';'\n+            if peek(st) != ';' { break; }\n+        }\n       }\n       _ { }\n     }\n@@ -84,10 +85,11 @@ fn parse_ty_constrs(st: @pstate, conv: conv_did) -> [@ty::type_constr] {\n     let mut rslt: [@ty::type_constr] = [];\n     alt peek(st) {\n       ':' {\n-        do  {\n+        loop {\n             next(st);\n             rslt += [parse_constr(st, conv, parse_ty_constr_arg)];\n-        } while peek(st) == ';'\n+            if peek(st) != ';' { break; }\n+        }\n       }\n       _ { }\n     }\n@@ -154,12 +156,13 @@ fn parse_constr<T: copy>(st: @pstate, conv: conv_did,\n     assert (ignore == '(');\n     let def = parse_def(st, conv);\n     let mut an_arg: constr_arg_general_<T>;\n-    do  {\n+    loop {\n         an_arg = pser(st);\n         // FIXME use a real span\n         args += [@respan(sp, an_arg)];\n         ignore = next(st);\n-    } while ignore == ';'\n+        if ignore != ';' { break; }\n+    }\n     assert (ignore == ')');\n     ret @respan(sp, {path: pth, args: args, id: def});\n }"}]}