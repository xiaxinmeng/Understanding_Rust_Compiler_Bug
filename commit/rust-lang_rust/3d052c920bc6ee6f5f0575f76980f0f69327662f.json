{"sha": "3d052c920bc6ee6f5f0575f76980f0f69327662f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkMDUyYzkyMGJjNmVlNmY1ZjA1NzVmNzY5ODBmMGY2OTMyNzY2MmY=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-12-14T09:48:41Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-12-14T09:48:41Z"}, "message": "format: inline one-liners related to parse_expr", "tree": {"sha": "d319594c516bde73dc13e0ce1b3b2a43a116e39b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d319594c516bde73dc13e0ce1b3b2a43a116e39b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d052c920bc6ee6f5f0575f76980f0f69327662f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d052c920bc6ee6f5f0575f76980f0f69327662f", "html_url": "https://github.com/rust-lang/rust/commit/3d052c920bc6ee6f5f0575f76980f0f69327662f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d052c920bc6ee6f5f0575f76980f0f69327662f/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37a3b7c80e3ceb31aa73640506501cca4b973647", "url": "https://api.github.com/repos/rust-lang/rust/commits/37a3b7c80e3ceb31aa73640506501cca4b973647", "html_url": "https://github.com/rust-lang/rust/commit/37a3b7c80e3ceb31aa73640506501cca4b973647"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "071d18945c5d8597caecbb189df9d3889a288a38", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3d052c920bc6ee6f5f0575f76980f0f69327662f/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d052c920bc6ee6f5f0575f76980f0f69327662f/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=3d052c920bc6ee6f5f0575f76980f0f69327662f", "patch": "@@ -3051,6 +3051,7 @@ impl<'a> Parser<'a> {\n     ///\n     /// This parses an expression accounting for associativity and precedence of the operators in\n     /// the expression.\n+    #[inline]\n     fn parse_assoc_expr(&mut self,\n                             already_parsed_attrs: Option<ThinVec<Attribute>>)\n                             -> PResult<'a, P<Expr>> {\n@@ -3711,6 +3712,7 @@ impl<'a> Parser<'a> {\n     }\n \n     /// Parse an expression\n+    #[inline]\n     pub fn parse_expr(&mut self) -> PResult<'a, P<Expr>> {\n         self.parse_expr_res(Restrictions::empty(), None)\n     }\n@@ -3730,6 +3732,7 @@ impl<'a> Parser<'a> {\n     }\n \n     /// Parse an expression, subject to the given restrictions\n+    #[inline]\n     fn parse_expr_res(&mut self, r: Restrictions,\n                           already_parsed_attrs: Option<ThinVec<Attribute>>)\n                           -> PResult<'a, P<Expr>> {"}]}