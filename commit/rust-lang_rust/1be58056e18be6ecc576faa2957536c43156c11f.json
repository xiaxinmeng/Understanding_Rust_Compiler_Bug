{"sha": "1be58056e18be6ecc576faa2957536c43156c11f", "node_id": "C_kwDOAAsO6NoAKDFiZTU4MDU2ZTE4YmU2ZWNjNTc2ZmFhMjk1NzUzNmM0MzE1NmMxMWY", "commit": {"author": {"name": "Yoshiki Matsuda", "email": "myskjp@gmail.com", "date": "2022-04-29T07:54:27Z"}, "committer": {"name": "Yoshiki Matsuda", "email": "myskjp@gmail.com", "date": "2022-07-02T13:51:42Z"}, "message": "use BufReader for counting zero bytes", "tree": {"sha": "050fb00fa17921cbf94676f06cc7aeab015bed2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/050fb00fa17921cbf94676f06cc7aeab015bed2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1be58056e18be6ecc576faa2957536c43156c11f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1be58056e18be6ecc576faa2957536c43156c11f", "html_url": "https://github.com/rust-lang/rust/commit/1be58056e18be6ecc576faa2957536c43156c11f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1be58056e18be6ecc576faa2957536c43156c11f/comments", "author": {"login": "m-ysk", "id": 47472854, "node_id": "MDQ6VXNlcjQ3NDcyODU0", "avatar_url": "https://avatars.githubusercontent.com/u/47472854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ysk", "html_url": "https://github.com/m-ysk", "followers_url": "https://api.github.com/users/m-ysk/followers", "following_url": "https://api.github.com/users/m-ysk/following{/other_user}", "gists_url": "https://api.github.com/users/m-ysk/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ysk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ysk/subscriptions", "organizations_url": "https://api.github.com/users/m-ysk/orgs", "repos_url": "https://api.github.com/users/m-ysk/repos", "events_url": "https://api.github.com/users/m-ysk/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ysk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ysk", "id": 47472854, "node_id": "MDQ6VXNlcjQ3NDcyODU0", "avatar_url": "https://avatars.githubusercontent.com/u/47472854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ysk", "html_url": "https://github.com/m-ysk", "followers_url": "https://api.github.com/users/m-ysk/followers", "following_url": "https://api.github.com/users/m-ysk/following{/other_user}", "gists_url": "https://api.github.com/users/m-ysk/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ysk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ysk/subscriptions", "organizations_url": "https://api.github.com/users/m-ysk/orgs", "repos_url": "https://api.github.com/users/m-ysk/repos", "events_url": "https://api.github.com/users/m-ysk/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ysk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34f888941ecd7385d2751158dbad0a623a8e29cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/34f888941ecd7385d2751158dbad0a623a8e29cf", "html_url": "https://github.com/rust-lang/rust/commit/34f888941ecd7385d2751158dbad0a623a8e29cf"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "3bd7b6115aef53466a29d7a8f5c7aae1a20f0da6", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1be58056e18be6ecc576faa2957536c43156c11f/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1be58056e18be6ecc576faa2957536c43156c11f/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=1be58056e18be6ecc576faa2957536c43156c11f", "patch": "@@ -40,7 +40,7 @@ use rustc_span::{\n use rustc_target::abi::VariantIdx;\n use std::borrow::Borrow;\n use std::hash::Hash;\n-use std::io::{Seek, Write};\n+use std::io::{Read, Seek, Write};\n use std::iter;\n use std::num::NonZeroUsize;\n use std::path::{Path, PathBuf};\n@@ -734,26 +734,26 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n         assert_eq!(total_bytes, computed_total_bytes);\n \n         if tcx.sess.meta_stats() {\n-            // let mut zero_bytes = 0;\n-            // for e in self.opaque.data.iter() {\n-            //     if *e == 0 {\n-            //         zero_bytes += 1;\n-            //     }\n-            // }\n+            let mut zero_bytes = 0;\n+            let file = std::io::BufReader::new(self.opaque.file());\n+            for e in file.bytes() {\n+                if e.unwrap() == 0 {\n+                    zero_bytes += 1;\n+                }\n+            }\n \n             let perc = |bytes| (bytes * 100) as f64 / total_bytes as f64;\n             let p = |label, bytes| {\n                 eprintln!(\"{:>21}: {:>8} bytes ({:4.1}%)\", label, bytes, perc(bytes));\n             };\n \n             eprintln!(\"\");\n-            // FIXME print zero bytes\n-            //eprintln!(\n-            //    \"{} metadata bytes, of which {} bytes ({:.1}%) are zero\",\n-            //    total_bytes,\n-            //    zero_bytes,\n-            //    perc(zero_bytes)\n-            //);\n+            eprintln!(\n+                \"{} metadata bytes, of which {} bytes ({:.1}%) are zero\",\n+                total_bytes,\n+                zero_bytes,\n+                perc(zero_bytes)\n+            );\n             p(\"preamble\", preamble_bytes);\n             p(\"dep\", dep_bytes);\n             p(\"lib feature\", lib_feature_bytes);"}, {"sha": "5c17ef6ace2d50344173bf9a41de8502aec971bc", "filename": "compiler/rustc_serialize/src/opaque.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1be58056e18be6ecc576faa2957536c43156c11f/compiler%2Frustc_serialize%2Fsrc%2Fopaque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1be58056e18be6ecc576faa2957536c43156c11f/compiler%2Frustc_serialize%2Fsrc%2Fopaque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_serialize%2Fsrc%2Fopaque.rs?ref=1be58056e18be6ecc576faa2957536c43156c11f", "patch": "@@ -297,6 +297,10 @@ impl FileEncoder {\n         }\n     }\n \n+    pub fn file(&self) -> &File {\n+        &self.file\n+    }\n+\n     #[inline]\n     fn capacity(&self) -> usize {\n         self.buf.len()"}]}