{"sha": "f6ea2ea55104038f27c5b22f52ac3239552c918e", "node_id": "C_kwDOAAsO6NoAKGY2ZWEyZWE1NTEwNDAzOGYyN2M1YjIyZjUyYWMzMjM5NTUyYzkxOGU", "commit": {"author": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2022-08-05T19:08:53Z"}, "committer": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2023-01-29T12:01:06Z"}, "message": "Upgrade mingw-w64 on CI", "tree": {"sha": "719c4f2b30e0de0a3e7fcf067f28c6150d7ae257", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/719c4f2b30e0de0a3e7fcf067f28c6150d7ae257"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6ea2ea55104038f27c5b22f52ac3239552c918e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6ea2ea55104038f27c5b22f52ac3239552c918e", "html_url": "https://github.com/rust-lang/rust/commit/f6ea2ea55104038f27c5b22f52ac3239552c918e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6ea2ea55104038f27c5b22f52ac3239552c918e/comments", "author": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "226b2496fc3ef997fa1cccf84259539203f82375", "url": "https://api.github.com/repos/rust-lang/rust/commits/226b2496fc3ef997fa1cccf84259539203f82375", "html_url": "https://github.com/rust-lang/rust/commit/226b2496fc3ef997fa1cccf84259539203f82375"}], "stats": {"total": 75, "additions": 34, "deletions": 41}, "files": [{"sha": "75302d917bbc6e8cc3625e48f916ed9173e718b8", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f6ea2ea55104038f27c5b22f52ac3239552c918e/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/f6ea2ea55104038f27c5b22f52ac3239552c918e/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=f6ea2ea55104038f27c5b22f52ac3239552c918e", "patch": "@@ -418,29 +418,29 @@ jobs:\n             os: windows-latest-xl\n           - name: i686-mingw-1\n             env:\n-              RUST_CONFIGURE_ARGS: \"--build=i686-pc-windows-gnu --set llvm.allow-old-toolchain\"\n+              RUST_CONFIGURE_ARGS: \"--build=i686-pc-windows-gnu\"\n               SCRIPT: make ci-mingw-subset-1\n               NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n             os: windows-latest-xl\n           - name: i686-mingw-2\n             env:\n-              RUST_CONFIGURE_ARGS: \"--build=i686-pc-windows-gnu --set llvm.allow-old-toolchain\"\n+              RUST_CONFIGURE_ARGS: \"--build=i686-pc-windows-gnu\"\n               SCRIPT: make ci-mingw-subset-2\n               NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n             os: windows-latest-xl\n           - name: x86_64-mingw-1\n             env:\n               SCRIPT: make ci-mingw-subset-1\n-              RUST_CONFIGURE_ARGS: \"--build=x86_64-pc-windows-gnu --enable-profiler --set llvm.allow-old-toolchain\"\n+              RUST_CONFIGURE_ARGS: \"--build=x86_64-pc-windows-gnu --enable-profiler\"\n               NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n             os: windows-latest-xl\n           - name: x86_64-mingw-2\n             env:\n               SCRIPT: make ci-mingw-subset-2\n-              RUST_CONFIGURE_ARGS: \"--build=x86_64-pc-windows-gnu --enable-profiler --set llvm.allow-old-toolchain\"\n+              RUST_CONFIGURE_ARGS: \"--build=x86_64-pc-windows-gnu --enable-profiler\"\n               NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n             os: windows-latest-xl\n@@ -465,7 +465,7 @@ jobs:\n             os: windows-latest-xl\n           - name: dist-i686-mingw\n             env:\n-              RUST_CONFIGURE_ARGS: \"--build=i686-pc-windows-gnu --enable-full-tools --enable-profiler --set llvm.allow-old-toolchain\"\n+              RUST_CONFIGURE_ARGS: \"--build=i686-pc-windows-gnu --enable-full-tools --enable-profiler\"\n               NO_DOWNLOAD_CI_LLVM: 1\n               SCRIPT: python x.py dist bootstrap --include-default-paths\n               CUSTOM_MINGW: 1\n@@ -474,7 +474,7 @@ jobs:\n           - name: dist-x86_64-mingw\n             env:\n               SCRIPT: python x.py dist bootstrap --include-default-paths\n-              RUST_CONFIGURE_ARGS: \"--build=x86_64-pc-windows-gnu --enable-full-tools --enable-profiler --set llvm.allow-old-toolchain\"\n+              RUST_CONFIGURE_ARGS: \"--build=x86_64-pc-windows-gnu --enable-full-tools --enable-profiler\"\n               NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n               DIST_REQUIRE_ALL_TOOLS: 1"}, {"sha": "70b5a9d301b62aff6545b16e8d62bf29732ee90b", "filename": "src/ci/github-actions/ci.yml", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f6ea2ea55104038f27c5b22f52ac3239552c918e/src%2Fci%2Fgithub-actions%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/f6ea2ea55104038f27c5b22f52ac3239552c918e/src%2Fci%2Fgithub-actions%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fgithub-actions%2Fci.yml?ref=f6ea2ea55104038f27c5b22f52ac3239552c918e", "patch": "@@ -629,9 +629,7 @@ jobs:\n \n           - name: i686-mingw-1\n             env:\n-              RUST_CONFIGURE_ARGS: >-\n-                --build=i686-pc-windows-gnu\n-                --set llvm.allow-old-toolchain\n+              RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu\n               SCRIPT: make ci-mingw-subset-1\n               # We are intentionally allowing an old toolchain on this builder (and that's\n               # incompatible with LLVM downloads today).\n@@ -641,9 +639,7 @@ jobs:\n \n           - name: i686-mingw-2\n             env:\n-              RUST_CONFIGURE_ARGS: >-\n-                --build=i686-pc-windows-gnu\n-                --set llvm.allow-old-toolchain\n+              RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu\n               SCRIPT: make ci-mingw-subset-2\n               # We are intentionally allowing an old toolchain on this builder (and that's\n               # incompatible with LLVM downloads today).\n@@ -657,7 +653,6 @@ jobs:\n               RUST_CONFIGURE_ARGS: >-\n                 --build=x86_64-pc-windows-gnu\n                 --enable-profiler\n-                --set llvm.allow-old-toolchain\n               # We are intentionally allowing an old toolchain on this builder (and that's\n               # incompatible with LLVM downloads today).\n               NO_DOWNLOAD_CI_LLVM: 1\n@@ -670,7 +665,6 @@ jobs:\n               RUST_CONFIGURE_ARGS: >-\n                 --build=x86_64-pc-windows-gnu\n                 --enable-profiler\n-                --set llvm.allow-old-toolchain\n               # We are intentionally allowing an old toolchain on this builder (and that's\n               # incompatible with LLVM downloads today).\n               NO_DOWNLOAD_CI_LLVM: 1\n@@ -722,7 +716,6 @@ jobs:\n                 --build=i686-pc-windows-gnu\n                 --enable-full-tools\n                 --enable-profiler\n-                --set llvm.allow-old-toolchain\n               # We are intentionally allowing an old toolchain on this builder (and that's\n               # incompatible with LLVM downloads today).\n               NO_DOWNLOAD_CI_LLVM: 1\n@@ -738,7 +731,6 @@ jobs:\n                 --build=x86_64-pc-windows-gnu\n                 --enable-full-tools\n                 --enable-profiler\n-                --set llvm.allow-old-toolchain\n               # We are intentionally allowing an old toolchain on this builder (and that's\n               # incompatible with LLVM downloads today).\n               NO_DOWNLOAD_CI_LLVM: 1"}, {"sha": "7eccb9b86502cdfec0743b2adedaf433827f543c", "filename": "src/ci/scripts/install-mingw.sh", "status": "modified", "additions": 2, "deletions": 21, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/f6ea2ea55104038f27c5b22f52ac3239552c918e/src%2Fci%2Fscripts%2Finstall-mingw.sh", "raw_url": "https://github.com/rust-lang/rust/raw/f6ea2ea55104038f27c5b22f52ac3239552c918e/src%2Fci%2Fscripts%2Finstall-mingw.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Finstall-mingw.sh?ref=f6ea2ea55104038f27c5b22f52ac3239552c918e", "patch": "@@ -2,33 +2,15 @@\n # If we need to download a custom MinGW, do so here and set the path\n # appropriately.\n #\n-# Here we also do a pretty heinous thing which is to mangle the MinGW\n-# installation we just downloaded. Currently, as of this writing, we're using\n-# MinGW-w64 builds of gcc, and that's currently at 6.3.0. We use 6.3.0 as it\n-# appears to be the first version which contains a fix for #40546, builds\n-# randomly failing during LLVM due to ar.exe/ranlib.exe failures.\n-#\n-# Unfortunately, though, 6.3.0 *also* is the first version of MinGW-w64 builds\n-# to contain a regression in gdb (#40184). As a result if we were to use the\n-# gdb provided (7.11.1) then we would fail all debuginfo tests.\n-#\n-# In order to fix spurious failures (pretty high priority) we use 6.3.0. To\n-# avoid disabling gdb tests we download an *old* version of gdb, specifically\n-# that found inside the 6.2.0 distribution. We then overwrite the 6.3.0 gdb\n-# with the 6.2.0 gdb to get tests passing.\n-#\n-# Note that we don't literally overwrite the gdb.exe binary because it appears\n-# to just use gdborig.exe, so that's the binary we deal with instead.\n-#\n # Otherwise install MinGW through `pacman`\n \n set -euo pipefail\n IFS=$'\\n\\t'\n \n source \"$(cd \"$(dirname \"$0\")\" && pwd)/../shared.sh\"\n \n-MINGW_ARCHIVE_32=\"i686-6.3.0-release-posix-dwarf-rt_v5-rev2.7z\"\n-MINGW_ARCHIVE_64=\"x86_64-6.3.0-release-posix-seh-rt_v5-rev2.7z\"\n+MINGW_ARCHIVE_32=\"i686-12.2.0-release-posix-dwarf-rt_v10-rev0.7z\"\n+MINGW_ARCHIVE_64=\"x86_64-12.2.0-release-posix-seh-rt_v10-rev0.7z\"\n \n if isWindows; then\n     case \"${CI_JOB_NAME}\" in\n@@ -66,7 +48,6 @@ if isWindows; then\n \n         curl -o mingw.7z \"${MIRRORS_BASE}/${mingw_archive}\"\n         7z x -y mingw.7z > /dev/null\n-        curl -o \"${mingw_dir}/bin/gdborig.exe\" \"${MIRRORS_BASE}/2017-04-20-${bits}bit-gdborig.exe\"\n         ciCommandAddPath \"$(pwd)/${mingw_dir}/bin\"\n     fi\n fi"}, {"sha": "2898e75e0ee367696eac4cecf9533dfd6fd97643", "filename": "tests/debuginfo/embedded-visualizer.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f6ea2ea55104038f27c5b22f52ac3239552c918e/tests%2Fdebuginfo%2Fembedded-visualizer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6ea2ea55104038f27c5b22f52ac3239552c918e/tests%2Fdebuginfo%2Fembedded-visualizer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdebuginfo%2Fembedded-visualizer.rs?ref=f6ea2ea55104038f27c5b22f52ac3239552c918e", "patch": "@@ -1,6 +1,7 @@\n // compile-flags:-g\n // min-gdb-version: 8.1\n // ignore-lldb\n+// ignore-windows-gnu // emit_debug_gdb_scripts is disabled on Windows\n \n // === CDB TESTS ==================================================================================\n "}, {"sha": "c122112e6c77a339dd4b17ac229899b523cbe1e7", "filename": "tests/debuginfo/numeric-types.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f6ea2ea55104038f27c5b22f52ac3239552c918e/tests%2Fdebuginfo%2Fnumeric-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6ea2ea55104038f27c5b22f52ac3239552c918e/tests%2Fdebuginfo%2Fnumeric-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdebuginfo%2Fnumeric-types.rs?ref=f6ea2ea55104038f27c5b22f52ac3239552c918e", "patch": "@@ -1,6 +1,7 @@\n // compile-flags:-g\n \n // min-gdb-version: 8.1\n+// ignore-windows-gnu // emit_debug_gdb_scripts is disabled on Windows\n \n // Tests the visualizations for `NonZero{I,U}{8,16,32,64,128,size}`, `Wrapping<T>` and\n // `Atomic{Bool,I8,I16,I32,I64,Isize,U8,U16,U32,U64,Usize}` located in `libcore.natvis`."}, {"sha": "de4099a7f50cb174f5cd8862b8bdd9cba7a02cee", "filename": "tests/debuginfo/vec-slices.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f6ea2ea55104038f27c5b22f52ac3239552c918e/tests%2Fdebuginfo%2Fvec-slices.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6ea2ea55104038f27c5b22f52ac3239552c918e/tests%2Fdebuginfo%2Fvec-slices.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdebuginfo%2Fvec-slices.rs?ref=f6ea2ea55104038f27c5b22f52ac3239552c918e", "patch": "@@ -1,4 +1,3 @@\n-// ignore-windows\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "e8a1121bfcd975c1023de411450ab6f200e0bc40", "filename": "tests/run-make/native-link-modifier-bundle/Makefile", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f6ea2ea55104038f27c5b22f52ac3239552c918e/tests%2Frun-make%2Fnative-link-modifier-bundle%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/f6ea2ea55104038f27c5b22f52ac3239552c918e/tests%2Frun-make%2Fnative-link-modifier-bundle%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-make%2Fnative-link-modifier-bundle%2FMakefile?ref=f6ea2ea55104038f27c5b22f52ac3239552c918e", "patch": "@@ -5,7 +5,12 @@ include ../../run-make-fulldeps/tools.mk\n \n # We're using the llvm-nm instead of the system nm to ensure it is compatible\n # with the LLVM bitcode generated by rustc.\n+# Except on Windows where piping/IO redirection under MSYS2 is wonky with llvm-nm.\n+ifndef IS_WINDOWS\n NM = \"$(LLVM_BIN_DIR)\"/llvm-nm\n+else\n+NM = nm\n+endif\n \n all: $(call NATIVE_STATICLIB,native-staticlib)\n \t# Build a staticlib and a rlib, the `native_func` symbol will be bundled into them"}, {"sha": "722a49b02cb3bc499d8da6512e3f7a1a7a91babb", "filename": "tests/run-make/raw-dylib-inline-cross-dylib/Makefile", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f6ea2ea55104038f27c5b22f52ac3239552c918e/tests%2Frun-make%2Fraw-dylib-inline-cross-dylib%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/f6ea2ea55104038f27c5b22f52ac3239552c918e/tests%2Frun-make%2Fraw-dylib-inline-cross-dylib%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-make%2Fraw-dylib-inline-cross-dylib%2FMakefile?ref=f6ea2ea55104038f27c5b22f52ac3239552c918e", "patch": "@@ -4,15 +4,19 @@\n \n include ../../run-make-fulldeps/tools.mk\n \n+# We'd be using the llvm-objdump instead of the system objdump to ensure compatibility\n+# with the LLVM bitcode generated by rustc but on Windows  piping/IO redirection under MSYS2 is wonky with llvm-objdump.\n+OBJDUMP = objdump\n+\n all:\n \t$(RUSTC) --crate-type dylib --crate-name raw_dylib_test lib.rs -C prefer-dynamic\n \t$(RUSTC) --crate-type dylib --crate-name raw_dylib_test_wrapper lib_wrapper.rs -C prefer-dynamic\n \t$(RUSTC) --crate-type bin driver.rs -L \"$(TMPDIR)\" -C prefer-dynamic\n \t# Make sure we don't find an import to the functions we expect to be inlined.\n-\t\"$(LLVM_BIN_DIR)\"/llvm-objdump -p $(TMPDIR)/driver.exe | $(CGREP) -v -e \"inline_library_function\"\n-\t\"$(LLVM_BIN_DIR)\"/llvm-objdump -p $(TMPDIR)/driver.exe | $(CGREP) -v -e \"inline_library_function_calls_inline\"\n+\t$(OBJDUMP) -p $(TMPDIR)/driver.exe | $(CGREP) -v -e \"inline_library_function\"\n+\t$(OBJDUMP) -p $(TMPDIR)/driver.exe | $(CGREP) -v -e \"inline_library_function_calls_inline\"\n \t# Make sure we do find an import to the functions we expect to be imported.\n-\t\"$(LLVM_BIN_DIR)\"/llvm-objdump -p $(TMPDIR)/driver.exe | $(CGREP) -e \"library_function\"\n+\t$(OBJDUMP) -p $(TMPDIR)/driver.exe | $(CGREP) -e \"library_function\"\n \t$(call COMPILE_OBJ,\"$(TMPDIR)\"/extern_1.obj,extern_1.c)\n \t$(call COMPILE_OBJ,\"$(TMPDIR)\"/extern_2.obj,extern_2.c)\n ifdef IS_MSVC"}, {"sha": "37b8d809a27423d910c25532380894eeb53780d7", "filename": "tests/run-make/rlib-format-packed-bundled-libs-2/Makefile", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f6ea2ea55104038f27c5b22f52ac3239552c918e/tests%2Frun-make%2Frlib-format-packed-bundled-libs-2%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/f6ea2ea55104038f27c5b22f52ac3239552c918e/tests%2Frun-make%2Frlib-format-packed-bundled-libs-2%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-make%2Frlib-format-packed-bundled-libs-2%2FMakefile?ref=f6ea2ea55104038f27c5b22f52ac3239552c918e", "patch": "@@ -6,7 +6,12 @@\n \n # We're using the llvm-nm instead of the system nm to ensure it is compatible\n # with the LLVM bitcode generated by rustc.\n+# Except on Windows where piping/IO redirection under MSYS2 is wonky with llvm-nm.\n+ifndef IS_WINDOWS\n NM = \"$(LLVM_BIN_DIR)\"/llvm-nm\n+else\n+NM = nm\n+endif\n \n all:\n \t# Build strange-named dep."}, {"sha": "7fb6ce8d1e4110db9227c636f2e76a1b11a43eb4", "filename": "tests/run-make/rlib-format-packed-bundled-libs/Makefile", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f6ea2ea55104038f27c5b22f52ac3239552c918e/tests%2Frun-make%2Frlib-format-packed-bundled-libs%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/f6ea2ea55104038f27c5b22f52ac3239552c918e/tests%2Frun-make%2Frlib-format-packed-bundled-libs%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-make%2Frlib-format-packed-bundled-libs%2FMakefile?ref=f6ea2ea55104038f27c5b22f52ac3239552c918e", "patch": "@@ -6,7 +6,12 @@\n \n # We're using the llvm-nm instead of the system nm to ensure it is compatible\n # with the LLVM bitcode generated by rustc.\n+# Except on Windows where piping/IO redirection under MSYS2 is wonky with llvm-nm.\n+ifndef IS_WINDOWS\n NM = \"$(LLVM_BIN_DIR)\"/llvm-nm\n+else\n+NM = nm\n+endif\n \n all: $(call NATIVE_STATICLIB,native_dep_1) $(call NATIVE_STATICLIB,native_dep_2) $(call NATIVE_STATICLIB,native_dep_3)\n \t$(RUSTC) rust_dep_up.rs --crate-type=rlib -Zpacked_bundled_libs"}]}