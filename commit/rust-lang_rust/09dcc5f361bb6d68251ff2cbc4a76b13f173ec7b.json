{"sha": "09dcc5f361bb6d68251ff2cbc4a76b13f173ec7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5ZGNjNWYzNjFiYjZkNjgyNTFmZjJjYmM0YTc2YjEzZjE3M2VjN2I=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-11-20T20:50:05Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-11-20T20:53:19Z"}, "message": "Display negative traits implementation", "tree": {"sha": "70b98526262647b822ba0af2bd365cbd48ab0109", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70b98526262647b822ba0af2bd365cbd48ab0109"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09dcc5f361bb6d68251ff2cbc4a76b13f173ec7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09dcc5f361bb6d68251ff2cbc4a76b13f173ec7b", "html_url": "https://github.com/rust-lang/rust/commit/09dcc5f361bb6d68251ff2cbc4a76b13f173ec7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09dcc5f361bb6d68251ff2cbc4a76b13f173ec7b/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e06138338f78cd2695f857855e685e9e50a2486b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e06138338f78cd2695f857855e685e9e50a2486b", "html_url": "https://github.com/rust-lang/rust/commit/e06138338f78cd2695f857855e685e9e50a2486b"}], "stats": {"total": 47, "additions": 38, "deletions": 9}, "files": [{"sha": "c1402e00272029735cfda50ba3ccf60f4528d43e", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/09dcc5f361bb6d68251ff2cbc4a76b13f173ec7b/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09dcc5f361bb6d68251ff2cbc4a76b13f173ec7b/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=09dcc5f361bb6d68251ff2cbc4a76b13f173ec7b", "patch": "@@ -3613,18 +3613,24 @@ fn sidebar_assoc_items(it: &clean::Item) -> String {\n             }\n             let mut links = HashSet::new();\n             let ret = v.iter()\n-                       .filter_map(|i| if let Some(ref i) = i.inner_impl().trait_ {\n-                           let i_display = format!(\"{:#}\", i);\n-                           let out = Escape(&i_display);\n-                           let encoded = small_url_encode(&format!(\"{:#}\", i));\n-                           let generated = format!(\"<a href=\\\"#impl-{}\\\">{}</a>\", encoded, out);\n-                           if !links.contains(&generated) && links.insert(generated.clone()) {\n-                               Some(generated)\n+                       .filter_map(|i| {\n+                           let is_negative_impl = is_negative_impl(i.inner_impl());\n+                           if let Some(ref i) = i.inner_impl().trait_ {\n+                               let i_display = format!(\"{:#}\", i);\n+                               let out = Escape(&i_display);\n+                               let encoded = small_url_encode(&format!(\"{:#}\", i));\n+                               let generated = format!(\"<a href=\\\"#impl-{}\\\">{}{}</a>\",\n+                                                       encoded,\n+                                                       if is_negative_impl { \"!\" } else { \"\" },\n+                                                       out);\n+                               if !links.contains(&generated) && links.insert(generated.clone()) {\n+                                   Some(generated)\n+                               } else {\n+                                   None\n+                               }\n                            } else {\n                                None\n                            }\n-                       } else {\n-                           None\n                        })\n                        .collect::<String>();\n             if !ret.is_empty() {\n@@ -3671,6 +3677,10 @@ fn extract_for_impl_name(item: &clean::Item) -> Option<(String, String)> {\n     }\n }\n \n+fn is_negative_impl(i: &clean::Impl) -> bool {\n+    i.polarity == Some(clean::ImplPolarity::Negative)\n+}\n+\n fn sidebar_trait(fmt: &mut fmt::Formatter, it: &clean::Item,\n                  t: &clean::Trait) -> fmt::Result {\n     let mut sidebar = String::new();"}, {"sha": "dc27b26241d59d97b6a1d14ab12dd227bd2ed82d", "filename": "src/test/rustdoc/negative-impl-sidebar.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/09dcc5f361bb6d68251ff2cbc4a76b13f173ec7b/src%2Ftest%2Frustdoc%2Fnegative-impl-sidebar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09dcc5f361bb6d68251ff2cbc4a76b13f173ec7b/src%2Ftest%2Frustdoc%2Fnegative-impl-sidebar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fnegative-impl-sidebar.rs?ref=09dcc5f361bb6d68251ff2cbc4a76b13f173ec7b", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(optin_builtin_traits)]\n+#![crate_name = \"foo\"]\n+\n+pub struct Foo;\n+\n+// @has foo/struct.Foo.html\n+// @has - '//*[@class=\"sidebar-title\"][@href=\"#implementations\"]' 'Trait Implementations'\n+// @has - '//*[@class=\"sidebar-links\"]/a' '!Sync'\n+impl !Sync for Foo {}"}]}