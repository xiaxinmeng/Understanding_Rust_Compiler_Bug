{"sha": "357982fae4ac7be0f6e0065399606f2d78618aaf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1Nzk4MmZhZTRhYzdiZTBmNmUwMDY1Mzk5NjA2ZjJkNzg2MThhYWY=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2015-09-13T22:24:27Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2015-09-17T11:13:13Z"}, "message": "Workaround for imports with empty braces", "tree": {"sha": "89dc7fc6e4b4d80d1dcba57bc114ea63e6352eb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89dc7fc6e4b4d80d1dcba57bc114ea63e6352eb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/357982fae4ac7be0f6e0065399606f2d78618aaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/357982fae4ac7be0f6e0065399606f2d78618aaf", "html_url": "https://github.com/rust-lang/rust/commit/357982fae4ac7be0f6e0065399606f2d78618aaf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/357982fae4ac7be0f6e0065399606f2d78618aaf/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50e42ea9f70361ccd71682070c01ea808891f0ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/50e42ea9f70361ccd71682070c01ea808891f0ce", "html_url": "https://github.com/rust-lang/rust/commit/50e42ea9f70361ccd71682070c01ea808891f0ce"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "12a20a8d21f49de6d46e935aa05eb21ae8487e3c", "filename": "src/librustc_front/visit.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/357982fae4ac7be0f6e0065399606f2d78618aaf/src%2Flibrustc_front%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/357982fae4ac7be0f6e0065399606f2d78618aaf/src%2Flibrustc_front%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_front%2Fvisit.rs?ref=357982fae4ac7be0f6e0065399606f2d78618aaf", "patch": "@@ -218,8 +218,8 @@ pub fn walk_item<'v, V: Visitor<'v>>(visitor: &mut V, item: &'v Item) {\n                             visitor.visit_path_list_item(prefix, item)\n                         }\n                     } else {\n-                        // FIXME: uncomment this and fix the resulting ICE\n-                        // visitor.visit_path(prefix, item.id);\n+                        // FIXME(#28388) visit_path should be used instead of walk_path\n+                        walk_path(visitor, prefix);\n                     }\n                 }\n             }"}, {"sha": "817fd9847089967d85b0f90f3e92c3143ad25a62", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/357982fae4ac7be0f6e0065399606f2d78618aaf/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/357982fae4ac7be0f6e0065399606f2d78618aaf/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=357982fae4ac7be0f6e0065399606f2d78618aaf", "patch": "@@ -980,15 +980,19 @@ impl<'a, 'tcx, 'v> Visitor<'v> for PrivacyVisitor<'a, 'tcx> {\n     }\n \n     fn visit_path(&mut self, path: &hir::Path, id: ast::NodeId) {\n-        self.check_path(path.span, id, path.segments.last().unwrap().identifier.name);\n-        visit::walk_path(self, path);\n+        if !path.segments.is_empty() {\n+            self.check_path(path.span, id, path.segments.last().unwrap().identifier.name);\n+            visit::walk_path(self, path);\n+        }\n     }\n \n     fn visit_path_list_item(&mut self, prefix: &hir::Path, item: &hir::PathListItem) {\n         let name = if let hir::PathListIdent { name, .. } = item.node {\n             name.name\n-        } else {\n+        } else if !prefix.segments.is_empty() {\n             prefix.segments.last().unwrap().identifier.name\n+        } else {\n+            self.tcx.sess.bug(\"`self` import in an import list with empty prefix\");\n         };\n         self.check_path(item.span, item.node.id(), name);\n         visit::walk_path_list_item(self, prefix, item);"}, {"sha": "774d13966bd6b4d2624b93996911c9bebcc32c90", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/357982fae4ac7be0f6e0065399606f2d78618aaf/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/357982fae4ac7be0f6e0065399606f2d78618aaf/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=357982fae4ac7be0f6e0065399606f2d78618aaf", "patch": "@@ -201,7 +201,6 @@\n \n #![feature(alloc)]\n #![feature(allow_internal_unstable)]\n-#![feature(arc_weak)]\n #![feature(associated_consts)]\n #![feature(borrow_state)]\n #![feature(box_syntax)]"}, {"sha": "cda750c5cda7e118efb7e466196ddd9bef5126c2", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/357982fae4ac7be0f6e0065399606f2d78618aaf/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/357982fae4ac7be0f6e0065399606f2d78618aaf/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=357982fae4ac7be0f6e0065399606f2d78618aaf", "patch": "@@ -224,8 +224,8 @@ pub fn walk_item<'v, V: Visitor<'v>>(visitor: &mut V, item: &'v Item) {\n                             visitor.visit_path_list_item(prefix, item)\n                         }\n                     } else {\n-                        // FIXME: uncomment this and fix the resulting ICE\n-                        // visitor.visit_path(prefix, item.id);\n+                        // FIXME(#28388) visit_path should be used instead of walk_path\n+                        walk_path(visitor, prefix);\n                     }\n                 }\n             }"}, {"sha": "7e9dfcf3ccb8f743b8ae9cf4dfffd916c97e4123", "filename": "src/test/compile-fail/issue-28075.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/357982fae4ac7be0f6e0065399606f2d78618aaf/src%2Ftest%2Fcompile-fail%2Fissue-28075.rs", "raw_url": "https://github.com/rust-lang/rust/raw/357982fae4ac7be0f6e0065399606f2d78618aaf/src%2Ftest%2Fcompile-fail%2Fissue-28075.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-28075.rs?ref=357982fae4ac7be0f6e0065399606f2d78618aaf", "patch": "@@ -12,11 +12,10 @@\n \n #![allow(unused_imports)]\n \n-use std::thread::{catch_panic, sleep}; //~ ERROR use of unstable library feature 'catch_panic'\n-//~^ ERROR use of unstable library feature 'thread_sleep'\n+use std::thread::{catch_panic, ScopedKey}; //~ ERROR use of unstable library feature 'catch_panic'\n+//~^ ERROR use of unstable library feature 'scoped_tls'\n \n use std::rt::{self}; //~ ERROR use of unstable library feature 'rt'\n-use std::rt::{};\n \n fn main() {\n }"}]}