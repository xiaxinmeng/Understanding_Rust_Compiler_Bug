{"sha": "a0b5d3813e5793caed9a6cf973851d40b75bf7b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwYjVkMzgxM2U1NzkzY2FlZDlhNmNmOTczODUxZDQwYjc1YmY3Yjk=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-04-12T11:09:47Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-05-21T17:57:54Z"}, "message": "Download unicode data files in directory of unicode.py", "tree": {"sha": "8bf4b24cc83f4f7dcd2d9d0ee8f12218881d81e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bf4b24cc83f4f7dcd2d9d0ee8f12218881d81e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0b5d3813e5793caed9a6cf973851d40b75bf7b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0b5d3813e5793caed9a6cf973851d40b75bf7b9", "html_url": "https://github.com/rust-lang/rust/commit/a0b5d3813e5793caed9a6cf973851d40b75bf7b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0b5d3813e5793caed9a6cf973851d40b75bf7b9/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f53022f88d1820a1a8b2991f661e4373329d317f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f53022f88d1820a1a8b2991f661e4373329d317f", "html_url": "https://github.com/rust-lang/rust/commit/f53022f88d1820a1a8b2991f661e4373329d317f"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "2527c1c103e9d1b38d4e83aabc95476f888069ff", "filename": "src/libcore/unicode/unicode.py", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a0b5d3813e5793caed9a6cf973851d40b75bf7b9/src%2Flibcore%2Funicode%2Funicode.py", "raw_url": "https://github.com/rust-lang/rust/raw/a0b5d3813e5793caed9a6cf973851d40b75bf7b9/src%2Flibcore%2Funicode%2Funicode.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funicode%2Funicode.py?ref=a0b5d3813e5793caed9a6cf973851d40b75bf7b9", "patch": "@@ -25,6 +25,9 @@\n \n import fileinput, re, os, sys, operator, math\n \n+# The directory in which this file resides.\n+fdir = os.path.dirname(os.path.realpath(__file__)) + \"/\"\n+\n preamble = '''// Copyright 2012-2016 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n@@ -61,11 +64,12 @@\n surrogate_codepoints = (0xd800, 0xdfff)\n \n def fetch(f):\n-    if not os.path.exists(os.path.basename(f)):\n+    path = fdir + os.path.basename(f)\n+    if not os.path.exists(path):\n         os.system(\"curl -O http://www.unicode.org/Public/UNIDATA/%s\"\n                   % f)\n \n-    if not os.path.exists(os.path.basename(f)):\n+    if not os.path.exists(path):\n         sys.stderr.write(\"cannot load %s\" % f)\n         exit(1)\n \n@@ -84,7 +88,7 @@ def load_unicode_data(f):\n \n     udict = {}\n     range_start = -1\n-    for line in fileinput.input(f):\n+    for line in fileinput.input(fdir + f):\n         data = line.split(';')\n         if len(data) != 15:\n             continue\n@@ -156,7 +160,7 @@ def load_unicode_data(f):\n \n def load_special_casing(f, to_upper, to_lower, to_title):\n     fetch(f)\n-    for line in fileinput.input(f):\n+    for line in fileinput.input(fdir + f):\n         data = line.split('#')[0].split(';')\n         if len(data) == 5:\n             code, lower, title, upper, _comment = data\n@@ -243,7 +247,7 @@ def load_properties(f, interestingprops):\n     re1 = re.compile(\"^ *([0-9A-F]+) *; *(\\w+)\")\n     re2 = re.compile(\"^ *([0-9A-F]+)\\.\\.([0-9A-F]+) *; *(\\w+)\")\n \n-    for line in fileinput.input(os.path.basename(f)):\n+    for line in fileinput.input(fdir + os.path.basename(f)):\n         prop = None\n         d_lo = 0\n         d_hi = 0\n@@ -456,7 +460,7 @@ def emit_norm_module(f, canon, compat, combine, norm_props):\n     canon_comp_keys = sorted(canon_comp.keys())\n \n if __name__ == \"__main__\":\n-    r = \"tables.rs\"\n+    r = fdir + \"tables.rs\"\n     if os.path.exists(r):\n         os.remove(r)\n     with open(r, \"w\") as rf:\n@@ -465,7 +469,7 @@ def emit_norm_module(f, canon, compat, combine, norm_props):\n \n         # download and parse all the data\n         fetch(\"ReadMe.txt\")\n-        with open(\"ReadMe.txt\") as readme:\n+        with open(fdir + \"ReadMe.txt\") as readme:\n             pattern = \"for Version (\\d+)\\.(\\d+)\\.(\\d+) of the Unicode\"\n             unicode_version = re.search(pattern, readme.read()).groups()\n         rf.write(\"\"\""}]}