{"sha": "dd3ac9058aa9684179415d0a6d36d23fba0d9bd1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkM2FjOTA1OGFhOTY4NDE3OTQxNWQwYTZkMzZkMjNmYmEwZDliZDE=", "commit": {"author": {"name": "Alisdair Owens", "email": "awo101@zepler.net", "date": "2015-07-22T12:52:48Z"}, "committer": {"name": "Alisdair Owens", "email": "awo101@zepler.net", "date": "2015-07-22T12:52:48Z"}, "message": "Add long diagnostics for E0223 and E0225", "tree": {"sha": "bce494604c6017f46283289e977104183abc9f49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bce494604c6017f46283289e977104183abc9f49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd3ac9058aa9684179415d0a6d36d23fba0d9bd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd3ac9058aa9684179415d0a6d36d23fba0d9bd1", "html_url": "https://github.com/rust-lang/rust/commit/dd3ac9058aa9684179415d0a6d36d23fba0d9bd1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd3ac9058aa9684179415d0a6d36d23fba0d9bd1/comments", "author": {"login": "AlisdairO", "id": 6296622, "node_id": "MDQ6VXNlcjYyOTY2MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6296622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlisdairO", "html_url": "https://github.com/AlisdairO", "followers_url": "https://api.github.com/users/AlisdairO/followers", "following_url": "https://api.github.com/users/AlisdairO/following{/other_user}", "gists_url": "https://api.github.com/users/AlisdairO/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlisdairO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlisdairO/subscriptions", "organizations_url": "https://api.github.com/users/AlisdairO/orgs", "repos_url": "https://api.github.com/users/AlisdairO/repos", "events_url": "https://api.github.com/users/AlisdairO/events{/privacy}", "received_events_url": "https://api.github.com/users/AlisdairO/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AlisdairO", "id": 6296622, "node_id": "MDQ6VXNlcjYyOTY2MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6296622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlisdairO", "html_url": "https://github.com/AlisdairO", "followers_url": "https://api.github.com/users/AlisdairO/followers", "following_url": "https://api.github.com/users/AlisdairO/following{/other_user}", "gists_url": "https://api.github.com/users/AlisdairO/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlisdairO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlisdairO/subscriptions", "organizations_url": "https://api.github.com/users/AlisdairO/orgs", "repos_url": "https://api.github.com/users/AlisdairO/repos", "events_url": "https://api.github.com/users/AlisdairO/events{/privacy}", "received_events_url": "https://api.github.com/users/AlisdairO/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90904204d6218ecb4bdfb36015759ade77b10f4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/90904204d6218ecb4bdfb36015759ade77b10f4b", "html_url": "https://github.com/rust-lang/rust/commit/90904204d6218ecb4bdfb36015759ade77b10f4b"}], "stats": {"total": 58, "additions": 56, "deletions": 2}, "files": [{"sha": "aa3219e589a31077899aec0640abc8b95d04019b", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 56, "deletions": 2, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/dd3ac9058aa9684179415d0a6d36d23fba0d9bd1/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd3ac9058aa9684179415d0a6d36d23fba0d9bd1/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=dd3ac9058aa9684179415d0a6d36d23fba0d9bd1", "patch": "@@ -1886,6 +1886,62 @@ type Foo = Trait<Bar=i32>; // ok!\n ```\n \"##,\n \n+E0223: r##\"\n+An attempt was made to retrieve an associated type, but the type was ambiguous.\n+For example:\n+\n+```\n+trait MyTrait {type X; }\n+\n+fn main() {\n+    let foo: MyTrait::X;\n+}\n+```\n+\n+The problem here is that we're attempting to take the type of X from MyTrait.\n+Unfortunately, the type of X is not defined, because it's only made concrete in\n+implementations of the trait. A working version of this code might look like:\n+\n+```\n+trait MyTrait {type X; }\n+struct MyStruct;\n+\n+impl MyTrait for MyStruct {\n+    type X = u32;\n+}\n+\n+fn main() {\n+    let foo: <MyStruct as MyTrait>::X;\n+}\n+```\n+\n+This syntax specifies that we want the X type from MyTrait, as made concrete in\n+MyStruct. The reason that we cannot simply use `MyStruct::X` is that MyStruct\n+might implement two different traits with identically-named associated types.\n+This syntax allows disambiguation between the two.\n+\"##,\n+\n+E0225: r##\"\n+You attempted to use multiple types as bounds for a closure or trait object.\n+Rust does not currently support this. A simple example that causes this error:\n+\n+```\n+fn main() {\n+    let _: Box<std::io::Read+std::io::Write>;\n+}\n+```\n+\n+Builtin traits are an exception to this rule: it's possible to have bounds of\n+one non-builtin type, plus any number of builtin types. For example, the\n+following compiles correctly:\n+\n+```\n+fn main() {\n+    let _: Box<std::io::Read+Copy+Sync>;\n+}\n+```\n+\"##,\n+\n E0232: r##\"\n The attribute must have a value. Erroneous code example:\n \n@@ -2225,9 +2281,7 @@ register_diagnostics! {\n     E0221, // ambiguous associated type in bounds\n     //E0222, // Error code E0045 (variadic function must have C calling\n              // convention) duplicate\n-    E0223, // ambiguous associated type\n     E0224, // at least one non-builtin train is required for an object type\n-    E0225, // only the builtin traits can be used as closure or object bounds\n     E0226, // only a single explicit lifetime bound is permitted\n     E0227, // ambiguous lifetime bound, explicit lifetime bound required\n     E0228, // explicit lifetime bound required"}]}