{"sha": "adce3ef96666d0f2e142980e293fe4e14fc17faf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkY2UzZWY5NjY2NmQwZjJlMTQyOTgwZTI5M2ZlNGUxNGZjMTdmYWY=", "commit": {"author": {"name": "Grzegorz Bartoszek", "email": "grzegorz.bartoszek@thaumatec.com", "date": "2019-01-20T15:15:00Z"}, "committer": {"name": "Grzegorz Bartoszek", "email": "grzegorz.bartoszek@thaumatec.com", "date": "2019-01-20T15:15:00Z"}, "message": "needless bool lint suggestion is wrapped in brackets if it is an \"else\" clause of an \"if-else\" statement", "tree": {"sha": "4b3db9281706e623c8612211d834ed9ce8f098d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b3db9281706e623c8612211d834ed9ce8f098d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adce3ef96666d0f2e142980e293fe4e14fc17faf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adce3ef96666d0f2e142980e293fe4e14fc17faf", "html_url": "https://github.com/rust-lang/rust/commit/adce3ef96666d0f2e142980e293fe4e14fc17faf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adce3ef96666d0f2e142980e293fe4e14fc17faf/comments", "author": null, "committer": null, "parents": [{"sha": "e648adf0866a1cea7db6ce2d33ea86e442f25377", "url": "https://api.github.com/repos/rust-lang/rust/commits/e648adf0866a1cea7db6ce2d33ea86e442f25377", "html_url": "https://github.com/rust-lang/rust/commit/e648adf0866a1cea7db6ce2d33ea86e442f25377"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "38879fcda95419a92052f96a5e05159c2f313210", "filename": "clippy_lints/src/needless_bool.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/adce3ef96666d0f2e142980e293fe4e14fc17faf/clippy_lints%2Fsrc%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adce3ef96666d0f2e142980e293fe4e14fc17faf/clippy_lints%2Fsrc%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_bool.rs?ref=adce3ef96666d0f2e142980e293fe4e14fc17faf", "patch": "@@ -67,17 +67,22 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessBool {\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, e: &'tcx Expr) {\n         use self::Expression::*;\n         if let ExprKind::If(ref pred, ref then_block, Some(ref else_expr)) = e.node {\n+\n             let reduce = |ret, not| {\n                 let mut applicability = Applicability::MachineApplicable;\n                 let snip = Sugg::hir_with_applicability(cx, pred, \"<predicate>\", &mut applicability);\n                 let snip = if not { !snip } else { snip };\n \n-                let hint = if ret {\n+                let mut hint = if ret {\n                     format!(\"return {}\", snip)\n                 } else {\n                     snip.to_string()\n                 };\n \n+                if parent_node_is_if_expr(&e, &cx) {\n+                    hint = format!(\"{{ {} }}\", hint);\n+                }\n+\n                 span_lint_and_sugg(\n                     cx,\n                     NEEDLESS_BOOL,\n@@ -119,6 +124,19 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessBool {\n     }\n }\n \n+fn parent_node_is_if_expr<'a, 'b>(expr: &Expr, cx: &LateContext<'a, 'b>) -> bool {\n+    let parent_id = cx.tcx.hir().get_parent_node(expr.id);\n+    let parent_node = cx.tcx.hir().get(parent_id);\n+\n+    if let rustc::hir::Node::Expr(e) = parent_node {\n+        if let ExprKind::If(_,_,_) = e.node {\n+           return true;\n+        }\n+    }\n+\n+    false\n+}\n+\n #[derive(Copy, Clone)]\n pub struct BoolComparison;\n "}, {"sha": "75705525790191c551f88cb7591b992aaa26a3e5", "filename": "tests/ui/needless_bool.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/adce3ef96666d0f2e142980e293fe4e14fc17faf/tests%2Fui%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adce3ef96666d0f2e142980e293fe4e14fc17faf/tests%2Fui%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_bool.rs?ref=adce3ef96666d0f2e142980e293fe4e14fc17faf", "patch": "@@ -141,3 +141,16 @@ fn needless_bool3(x: bool) {\n     if x == true {};\n     if x == false {};\n }\n+\n+fn needless_bool_in_the_suggestion_wraps_the_predicate_of_if_else_statement_in_brackets() {\n+    let b = false;\n+    let returns_bool = || false;\n+\n+    let x = if b {\n+        true\n+    } else if returns_bool() {\n+        false\n+    } else {\n+        true\n+    };\n+}"}, {"sha": "46734ea07a50ac24208b57432a3ed0bfbdb4f686", "filename": "tests/ui/needless_bool.stderr", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/adce3ef96666d0f2e142980e293fe4e14fc17faf/tests%2Fui%2Fneedless_bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adce3ef96666d0f2e142980e293fe4e14fc17faf/tests%2Fui%2Fneedless_bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_bool.stderr?ref=adce3ef96666d0f2e142980e293fe4e14fc17faf", "patch": "@@ -136,5 +136,16 @@ error: equality checks against false can be replaced by a negation\n LL |     if x == false {};\n    |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n-error: aborting due to 15 previous errors\n+error: this if-then-else expression returns a bool literal\n+  --> $DIR/needless_bool.rs:151:12\n+   |\n+LL |       } else if returns_bool() {\n+   |  ____________^\n+LL | |         false\n+LL | |     } else {\n+LL | |         true\n+LL | |     };\n+   | |_____^ help: you can reduce it to: `{ !returns_bool() }`\n+\n+error: aborting due to 16 previous errors\n "}]}