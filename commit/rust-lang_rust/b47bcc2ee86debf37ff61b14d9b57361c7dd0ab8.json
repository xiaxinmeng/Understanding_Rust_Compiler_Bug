{"sha": "b47bcc2ee86debf37ff61b14d9b57361c7dd0ab8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0N2JjYzJlZTg2ZGViZjM3ZmY2MWIxNGQ5YjU3MzYxYzdkZDBhYjg=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-08-21T11:26:33Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-08-21T11:26:33Z"}, "message": "fix other cases of registering obligations in a snapshot\n\nNo test cases for these ones, but they would all ICE if they ever run\nwith a non-empty set of obligations.", "tree": {"sha": "735bd9aa6707238ecd58108f2f49c081aaf669b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/735bd9aa6707238ecd58108f2f49c081aaf669b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b47bcc2ee86debf37ff61b14d9b57361c7dd0ab8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b47bcc2ee86debf37ff61b14d9b57361c7dd0ab8", "html_url": "https://github.com/rust-lang/rust/commit/b47bcc2ee86debf37ff61b14d9b57361c7dd0ab8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b47bcc2ee86debf37ff61b14d9b57361c7dd0ab8/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e00263438c95e1e31eb76548b1e08b81e5f50a4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e00263438c95e1e31eb76548b1e08b81e5f50a4a", "html_url": "https://github.com/rust-lang/rust/commit/e00263438c95e1e31eb76548b1e08b81e5f50a4a"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "e406ce845a6d11d4770dfca6483acfb26712fe20", "filename": "src/librustc_typeck/check/coercion.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b47bcc2ee86debf37ff61b14d9b57361c7dd0ab8/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47bcc2ee86debf37ff61b14d9b57361c7dd0ab8/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs?ref=b47bcc2ee86debf37ff61b14d9b57361c7dd0ab8", "patch": "@@ -883,8 +883,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                 return self.commit_if_ok(|_| {\n                     self.at(cause, self.param_env)\n                         .lub(prev_ty, new_ty)\n-                        .map(|ok| self.register_infer_ok_obligations(ok))\n-                });\n+                }).map(|ok| self.register_infer_ok_obligations(ok));\n             }\n         }\n \n@@ -897,8 +896,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                     self.commit_if_ok(|_| {\n                         self.at(cause, self.param_env)\n                             .lub(prev_ty, new_ty)\n-                            .map(|ok| self.register_infer_ok_obligations(ok))\n-                    })\n+                    }).map(|ok| self.register_infer_ok_obligations(ok))\n                 }\n             }\n             Ok(ok) => {"}, {"sha": "1a61b8e29f231994dd26dba916e90d952cc7955e", "filename": "src/librustc_typeck/check/regionck.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b47bcc2ee86debf37ff61b14d9b57361c7dd0ab8/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47bcc2ee86debf37ff61b14d9b57361c7dd0ab8/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs?ref=b47bcc2ee86debf37ff61b14d9b57361c7dd0ab8", "patch": "@@ -1815,12 +1815,12 @@ impl<'a, 'gcx, 'tcx> RegionCtxt<'a, 'gcx, 'tcx> {\n                     // check whether this predicate applies to our current projection\n                     let cause = self.fcx.misc(span);\n                     match self.at(&cause, self.fcx.param_env).eq(outlives.0, ty) {\n-                        Ok(ok) => {\n-                            self.register_infer_ok_obligations(ok);\n-                            Ok(outlives.1)\n-                        }\n-                        Err(_) => { Err(()) }\n+                        Ok(ok) => Ok((ok, outlives.1)),\n+                        Err(_) => Err(())\n                     }\n+                }).map(|(ok, result)| {\n+                    self.register_infer_ok_obligations(ok);\n+                    result\n                 });\n \n                 debug!(\"projection_bounds: region_result={:?}\","}]}