{"sha": "9ae329232b368c6ca7352d403de9e34a71debc4b", "node_id": "C_kwDOAAsO6NoAKDlhZTMyOTIzMmIzNjhjNmNhNzM1MmQ0MDNkZTllMzRhNzFkZWJjNGI", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-09-05T08:45:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-05T08:45:51Z"}, "message": "Rollup merge of #101142 - nnethercote:improve-hir-stats, r=davidtwco\n\nImprove HIR stats\n\n#100398 improve the AST stats collection done by `-Zhir-stats`. This PR does the same for HIR stats collection.\n\nr? `@davidtwco`", "tree": {"sha": "12c894911cb1bdf1fadda1074df575649ae6dbc1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12c894911cb1bdf1fadda1074df575649ae6dbc1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ae329232b368c6ca7352d403de9e34a71debc4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ae329232b368c6ca7352d403de9e34a71debc4b", "html_url": "https://github.com/rust-lang/rust/commit/9ae329232b368c6ca7352d403de9e34a71debc4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ae329232b368c6ca7352d403de9e34a71debc4b/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b784f8ed2610709a5e46641281d610e6c173180", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b784f8ed2610709a5e46641281d610e6c173180", "html_url": "https://github.com/rust-lang/rust/commit/5b784f8ed2610709a5e46641281d610e6c173180"}, {"sha": "3ce109e12da7f4ee9392be7feef56e158f72914b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ce109e12da7f4ee9392be7feef56e158f72914b", "html_url": "https://github.com/rust-lang/rust/commit/3ce109e12da7f4ee9392be7feef56e158f72914b"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "5448360049d2e2bd62c8faabf7552ff0f8acbee4", "filename": "clippy_lints/src/loops/never_loop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9ae329232b368c6ca7352d403de9e34a71debc4b/clippy_lints%2Fsrc%2Floops%2Fnever_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ae329232b368c6ca7352d403de9e34a71debc4b/clippy_lints%2Fsrc%2Floops%2Fnever_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fnever_loop.rs?ref=9ae329232b368c6ca7352d403de9e34a71debc4b", "patch": "@@ -178,9 +178,9 @@ fn never_loop_expr(expr: &Expr<'_>, main_loop_id: HirId) -> NeverLoopResult {\n                 InlineAsmOperand::In { expr, .. } | InlineAsmOperand::InOut { expr, .. } => {\n                     never_loop_expr(expr, main_loop_id)\n                 },\n-                InlineAsmOperand::Out { expr, .. } => never_loop_expr_all(&mut expr.iter(), main_loop_id),\n+                InlineAsmOperand::Out { expr, .. } => never_loop_expr_all(&mut expr.iter().copied(), main_loop_id),\n                 InlineAsmOperand::SplitInOut { in_expr, out_expr, .. } => {\n-                    never_loop_expr_all(&mut once(in_expr).chain(out_expr.iter()), main_loop_id)\n+                    never_loop_expr_all(&mut once(*in_expr).chain(out_expr.iter().copied()), main_loop_id)\n                 },\n                 InlineAsmOperand::Const { .. }\n                 | InlineAsmOperand::SymFn { .. }"}, {"sha": "940601a44fb072c370e82e1d435c8acde6bc6dbf", "filename": "clippy_lints/src/manual_bits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9ae329232b368c6ca7352d403de9e34a71debc4b/clippy_lints%2Fsrc%2Fmanual_bits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ae329232b368c6ca7352d403de9e34a71debc4b/clippy_lints%2Fsrc%2Fmanual_bits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_bits.rs?ref=9ae329232b368c6ca7352d403de9e34a71debc4b", "patch": "@@ -105,7 +105,7 @@ fn get_size_of_ty<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) -> Option<\n         if let Some(def_id) = cx.qpath_res(count_func_qpath, count_func.hir_id).opt_def_id();\n         if cx.tcx.is_diagnostic_item(sym::mem_size_of, def_id);\n         then {\n-            cx.typeck_results().node_substs(count_func.hir_id).types().next().map(|resolved_ty| (real_ty, resolved_ty))\n+            cx.typeck_results().node_substs(count_func.hir_id).types().next().map(|resolved_ty| (*real_ty, resolved_ty))\n         } else {\n             None\n         }"}, {"sha": "3ffcaa90af3e57dd3b37cc97cfc65a882a6d282a", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9ae329232b368c6ca7352d403de9e34a71debc4b/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ae329232b368c6ca7352d403de9e34a71debc4b/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=9ae329232b368c6ca7352d403de9e34a71debc4b", "patch": "@@ -595,7 +595,7 @@ impl<'a, 'tcx> PrintVisitor<'a, 'tcx> {\n     }\n \n     fn body(&self, body_id: &Binding<hir::BodyId>) {\n-        let expr = &self.cx.tcx.hir().body(body_id.value).value;\n+        let expr = self.cx.tcx.hir().body(body_id.value).value;\n         bind!(self, expr);\n         out!(\"let {expr} = &cx.tcx.hir().body({body_id}).value;\");\n         self.expr(expr);"}, {"sha": "f3a08e98688e9dbae1a120d20d7eeaf48f02d26a", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9ae329232b368c6ca7352d403de9e34a71debc4b/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ae329232b368c6ca7352d403de9e34a71debc4b/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=9ae329232b368c6ca7352d403de9e34a71debc4b", "patch": "@@ -337,7 +337,7 @@ pub fn qpath_generic_tys<'tcx>(qpath: &QPath<'tcx>) -> impl Iterator<Item = &'tc\n         .map_or(&[][..], |a| a.args)\n         .iter()\n         .filter_map(|a| match a {\n-            hir::GenericArg::Type(ty) => Some(ty),\n+            hir::GenericArg::Type(ty) => Some(*ty),\n             _ => None,\n         })\n }\n@@ -1812,7 +1812,7 @@ pub fn is_expr_identity_function(cx: &LateContext<'_>, expr: &Expr<'_>) -> bool\n             }\n         };\n \n-        let mut expr = &func.value;\n+        let mut expr = func.value;\n         loop {\n             match expr.kind {\n                 #[rustfmt::skip]"}]}