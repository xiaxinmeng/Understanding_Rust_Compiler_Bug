{"sha": "c195145f565159c84e61b2f2c6f4ef2bebd5b66f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxOTUxNDVmNTY1MTU5Yzg0ZTYxYjJmMmM2ZjRlZjJiZWJkNWI2NmY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-05T01:59:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-05T01:59:47Z"}, "message": "Rollup merge of #64123 - danielhenrymantilla:add_comment_about_uninit_integers, r=Centril\n\nAdded warning around code with reference to uninit bytes\n\nOfficially, uninitialized integers, and therefore, Rust references to them are _invalid_ (note that this may evolve into official defined behavior (_c.f._, https://github.com/rust-lang/unsafe-code-guidelines/issues/71)).\n\nHowever, `::std` uses references to uninitialized integers when working with the `Read::initializer` feature (#42788), since it relies on this unstably having defined behavior with the current implementation of the compiler (IIUC).\n\nHence the comment to disincentivize people from using this pattern outside the standard library.", "tree": {"sha": "da1869c326cb19d956e93b0121beab5674a338bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da1869c326cb19d956e93b0121beab5674a338bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c195145f565159c84e61b2f2c6f4ef2bebd5b66f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdcGwTCRBK7hj4Ov3rIwAAdHIIACwjK7TI4pwtxYQHELORQlA6\n14BXTVR0O3u6zWrtpGjStuiwn73cBSEBBPvGBOh3Dcofw4A5K86ASBCyWPCe+urh\nR88AtDunSF7pR6k4Ihrfi8XRGlUgvUQ/C/HGX8vxt+uGzMfblJ06EZEwsBWkGAGG\nJQopkVcXUMwPLZnzey9aVphkTQ0d2iYBxZCEhr2xf3jLHLiuLFpeZzL7JDVS+Ni0\nYmDjqMNwZJ3MWwdQssL39d52XZQP8x7NdgwdGgCYLXQvqXvAUREeGINGNKedzWpi\nzW8UT1lIwlktsHJE/Pv/cD37n9BZ7/z+ea1g+R9jXIWllQOxjd9Vei2/VhyTqIg=\n=ig/H\n-----END PGP SIGNATURE-----\n", "payload": "tree da1869c326cb19d956e93b0121beab5674a338bb\nparent 24f0778341691661121d093d4767a937fdb8ebed\nparent b03d3dc478ba13f405cf9a877a4894de096a1cc1\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1567648787 +0200\ncommitter GitHub <noreply@github.com> 1567648787 +0200\n\nRollup merge of #64123 - danielhenrymantilla:add_comment_about_uninit_integers, r=Centril\n\nAdded warning around code with reference to uninit bytes\n\nOfficially, uninitialized integers, and therefore, Rust references to them are _invalid_ (note that this may evolve into official defined behavior (_c.f._, https://github.com/rust-lang/unsafe-code-guidelines/issues/71)).\n\nHowever, `::std` uses references to uninitialized integers when working with the `Read::initializer` feature (#42788), since it relies on this unstably having defined behavior with the current implementation of the compiler (IIUC).\n\nHence the comment to disincentivize people from using this pattern outside the standard library.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c195145f565159c84e61b2f2c6f4ef2bebd5b66f", "html_url": "https://github.com/rust-lang/rust/commit/c195145f565159c84e61b2f2c6f4ef2bebd5b66f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c195145f565159c84e61b2f2c6f4ef2bebd5b66f/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24f0778341691661121d093d4767a937fdb8ebed", "url": "https://api.github.com/repos/rust-lang/rust/commits/24f0778341691661121d093d4767a937fdb8ebed", "html_url": "https://github.com/rust-lang/rust/commit/24f0778341691661121d093d4767a937fdb8ebed"}, {"sha": "b03d3dc478ba13f405cf9a877a4894de096a1cc1", "url": "https://api.github.com/repos/rust-lang/rust/commits/b03d3dc478ba13f405cf9a877a4894de096a1cc1", "html_url": "https://github.com/rust-lang/rust/commit/b03d3dc478ba13f405cf9a877a4894de096a1cc1"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "0386dbd490d0301dc50606a3a7af8c4620265cf3", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c195145f565159c84e61b2f2c6f4ef2bebd5b66f/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c195145f565159c84e61b2f2c6f4ef2bebd5b66f/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=c195145f565159c84e61b2f2c6f4ef2bebd5b66f", "patch": "@@ -371,6 +371,14 @@ where\n     loop {\n         if g.len == g.buf.len() {\n             unsafe {\n+                // FIXME(danielhenrymantilla): #42788\n+                //\n+                //   - This creates a (mut) reference to a slice of\n+                //     _uninitialized_ integers, which is **undefined behavior**\n+                //\n+                //   - Only the standard library gets to soundly \"ignore\" this,\n+                //     based on its privileged knowledge of unstable rustc\n+                //     internals;\n                 g.buf.reserve(reservation_size(r));\n                 let capacity = g.buf.capacity();\n                 g.buf.set_len(capacity);"}]}