{"sha": "2d7b4cc548a5b72c8b268a774444a59dd1ce669e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkN2I0Y2M1NDhhNWI3MmM4YjI2OGE3NzQ0NDRhNTlkZDFjZTY2OWU=", "commit": {"author": {"name": "Jeremy Kolb", "email": "kjeremy@gmail.com", "date": "2019-01-14T01:08:33Z"}, "committer": {"name": "Jeremy Kolb", "email": "kjeremy@gmail.com", "date": "2019-01-14T01:08:33Z"}, "message": "Add visibility to hover", "tree": {"sha": "7ada3ac191c2f3f17e2f62ebf34cb9cdd8ee0e71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ada3ac191c2f3f17e2f62ebf34cb9cdd8ee0e71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d7b4cc548a5b72c8b268a774444a59dd1ce669e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d7b4cc548a5b72c8b268a774444a59dd1ce669e", "html_url": "https://github.com/rust-lang/rust/commit/2d7b4cc548a5b72c8b268a774444a59dd1ce669e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d7b4cc548a5b72c8b268a774444a59dd1ce669e/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a901cb4f342b0a784e716e29934999cc036dc835", "url": "https://api.github.com/repos/rust-lang/rust/commits/a901cb4f342b0a784e716e29934999cc036dc835", "html_url": "https://github.com/rust-lang/rust/commit/a901cb4f342b0a784e716e29934999cc036dc835"}], "stats": {"total": 50, "additions": 41, "deletions": 9}, "files": [{"sha": "4dafefa2c0d9ac046c9806f343afcf713937d3b1", "filename": "crates/ra_ide_api/src/hover.rs", "status": "modified", "additions": 41, "deletions": 9, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/2d7b4cc548a5b72c8b268a774444a59dd1ce669e/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d7b4cc548a5b72c8b268a774444a59dd1ce669e/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fhover.rs?ref=2d7b4cc548a5b72c8b268a774444a59dd1ce669e", "patch": "@@ -1,7 +1,7 @@\n use ra_db::{Cancelable, SyntaxDatabase};\n use ra_syntax::{\n     AstNode, SyntaxNode, TreeArc,\n-    ast::{self, NameOwner},\n+    ast::{self, NameOwner, VisibilityOwner},\n     algo::{find_covering_node, find_node_at_offset, find_leaf_at_offset, visit::{visitor, Visitor}},\n };\n \n@@ -140,42 +140,74 @@ impl NavigationTarget {\n         // TODO: Refactor to be have less repetition\n         visitor()\n             .visit(|node: &ast::FnDef| {\n-                let mut string = \"fn \".to_string();\n+                let mut string = node\n+                    .visibility()\n+                    .map(|v| format!(\"{} \", v.syntax().text()))\n+                    .unwrap_or_default();\n+                string.push_str(\"fn \");\n                 node.name()?.syntax().text().push_to(&mut string);\n                 Some(string)\n             })\n             .visit(|node: &ast::StructDef| {\n-                let mut string = \"struct \".to_string();\n+                let mut string = node\n+                    .visibility()\n+                    .map(|v| format!(\"{} \", v.syntax().text()))\n+                    .unwrap_or_default();\n+                string.push_str(\"struct \");\n                 node.name()?.syntax().text().push_to(&mut string);\n                 Some(string)\n             })\n             .visit(|node: &ast::EnumDef| {\n-                let mut string = \"enum \".to_string();\n+                let mut string = node\n+                    .visibility()\n+                    .map(|v| format!(\"{} \", v.syntax().text()))\n+                    .unwrap_or_default();\n+                string.push_str(\"enum \");\n                 node.name()?.syntax().text().push_to(&mut string);\n                 Some(string)\n             })\n             .visit(|node: &ast::TraitDef| {\n-                let mut string = \"trait \".to_string();\n+                let mut string = node\n+                    .visibility()\n+                    .map(|v| format!(\"{} \", v.syntax().text()))\n+                    .unwrap_or_default();\n+                string.push_str(\"trait \");\n                 node.name()?.syntax().text().push_to(&mut string);\n                 Some(string)\n             })\n             .visit(|node: &ast::Module| {\n-                let mut string = \"mod \".to_string();\n+                let mut string = node\n+                    .visibility()\n+                    .map(|v| format!(\"{} \", v.syntax().text()))\n+                    .unwrap_or_default();\n+                string.push_str(\"mod \");\n                 node.name()?.syntax().text().push_to(&mut string);\n                 Some(string)\n             })\n             .visit(|node: &ast::TypeDef| {\n-                let mut string = \"type \".to_string();\n+                let mut string = node\n+                    .visibility()\n+                    .map(|v| format!(\"{} \", v.syntax().text()))\n+                    .unwrap_or_default();\n+                string.push_str(\"type \");\n                 node.name()?.syntax().text().push_to(&mut string);\n                 Some(string)\n             })\n             .visit(|node: &ast::ConstDef| {\n-                let mut string = \"const \".to_string();\n+                let mut string = node\n+                    .visibility()\n+                    .map(|v| format!(\"{} \", v.syntax().text()))\n+                    .unwrap_or_default();\n+                string.push_str(\"const \");\n                 node.name()?.syntax().text().push_to(&mut string);\n                 Some(string)\n             })\n             .visit(|node: &ast::StaticDef| {\n-                let mut string = \"static \".to_string();\n+                let mut string = node\n+                    .visibility()\n+                    .map(|v| format!(\"{} \", v.syntax().text()))\n+                    .unwrap_or_default();\n+                string.push_str(\"static \");\n                 node.name()?.syntax().text().push_to(&mut string);\n                 Some(string)\n             })"}]}