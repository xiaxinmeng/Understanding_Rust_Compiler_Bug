{"sha": "0bf6394801c9699d1e699f99d3ac62a019d4b1ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiZjYzOTQ4MDFjOTY5OWQxZTY5OWY5OWQzYWM2MmEwMTlkNGIxYWQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-16T09:07:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-16T09:07:37Z"}, "message": "Auto merge of #31669 - frewsxcv:llvm-function-pass-rmake-test, r=alexcrichton\n\nPart of https://github.com/rust-lang/rust/issues/31185.\n\nSimilar to https://github.com/rust-lang/rust/pull/31391.", "tree": {"sha": "32ba1d16ad4b4e8d3db005ffde74917052e41f2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32ba1d16ad4b4e8d3db005ffde74917052e41f2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0bf6394801c9699d1e699f99d3ac62a019d4b1ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0bf6394801c9699d1e699f99d3ac62a019d4b1ad", "html_url": "https://github.com/rust-lang/rust/commit/0bf6394801c9699d1e699f99d3ac62a019d4b1ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0bf6394801c9699d1e699f99d3ac62a019d4b1ad/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28bcafa4565f8676325c20dd2e700dfa7f08d4e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/28bcafa4565f8676325c20dd2e700dfa7f08d4e1", "html_url": "https://github.com/rust-lang/rust/commit/28bcafa4565f8676325c20dd2e700dfa7f08d4e1"}, {"sha": "a60ec05fdc1bf51c6d96fa60876be2c8e2aa1b1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a60ec05fdc1bf51c6d96fa60876be2c8e2aa1b1e", "html_url": "https://github.com/rust-lang/rust/commit/a60ec05fdc1bf51c6d96fa60876be2c8e2aa1b1e"}], "stats": {"total": 95, "additions": 78, "deletions": 17}, "files": [{"sha": "93c7c4f5001423db63b91d72a6b25b89213dbdc7", "filename": "src/test/run-make/llvm-module-pass/Makefile", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/28bcafa4565f8676325c20dd2e700dfa7f08d4e1/src%2Ftest%2Frun-make%2Fllvm-module-pass%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/28bcafa4565f8676325c20dd2e700dfa7f08d4e1/src%2Ftest%2Frun-make%2Fllvm-module-pass%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fllvm-module-pass%2FMakefile?ref=28bcafa4565f8676325c20dd2e700dfa7f08d4e1", "patch": "@@ -1,14 +0,0 @@\n--include ../tools.mk\n-\n-# Windows doesn't correctly handle include statements with escaping paths,\n-# so this test will not get run on Windows.\n-ifdef IS_WINDOWS\n-all:\n-else\n-all: $(call NATIVE_STATICLIB,llvm-pass)\n-\t$(RUSTC) plugin.rs -C prefer-dynamic\n-\t$(RUSTC) main.rs\n-\n-$(TMPDIR)/libllvm-pass.o:\n-\t$(CXX) $(CFLAGS) $(LLVM_CXXFLAGS) -c llvm-pass.so.cc -o $(TMPDIR)/libllvm-pass.o\n-endif"}, {"sha": "aab6e895f22609fb87dd8951c46b0d191a259b97", "filename": "src/test/run-make/llvm-pass/Makefile", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0bf6394801c9699d1e699f99d3ac62a019d4b1ad/src%2Ftest%2Frun-make%2Fllvm-pass%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/0bf6394801c9699d1e699f99d3ac62a019d4b1ad/src%2Ftest%2Frun-make%2Fllvm-pass%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fllvm-pass%2FMakefile?ref=0bf6394801c9699d1e699f99d3ac62a019d4b1ad", "patch": "@@ -0,0 +1,17 @@\n+-include ../tools.mk\n+\n+# Windows doesn't correctly handle include statements with escaping paths,\n+# so this test will not get run on Windows.\n+ifdef IS_WINDOWS\n+all:\n+else\n+all: $(call NATIVE_STATICLIB,llvm-function-pass) $(call NATIVE_STATICLIB,llvm-module-pass)\n+\t$(RUSTC) plugin.rs -C prefer-dynamic\n+\t$(RUSTC) main.rs\n+\n+$(TMPDIR)/libllvm-function-pass.o:\n+\t$(CXX) $(CFLAGS) $(LLVM_CXXFLAGS) -c llvm-function-pass.so.cc -o $(TMPDIR)/libllvm-function-pass.o\n+\n+$(TMPDIR)/libllvm-module-pass.o:\n+\t$(CXX) $(CFLAGS) $(LLVM_CXXFLAGS) -c llvm-module-pass.so.cc -o $(TMPDIR)/libllvm-module-pass.o\n+endif"}, {"sha": "4470c400760b872097eed1cba80aaa21c2e8f415", "filename": "src/test/run-make/llvm-pass/llvm-function-pass.so.cc", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/0bf6394801c9699d1e699f99d3ac62a019d4b1ad/src%2Ftest%2Frun-make%2Fllvm-pass%2Fllvm-function-pass.so.cc", "raw_url": "https://github.com/rust-lang/rust/raw/0bf6394801c9699d1e699f99d3ac62a019d4b1ad/src%2Ftest%2Frun-make%2Fllvm-pass%2Fllvm-function-pass.so.cc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fllvm-pass%2Fllvm-function-pass.so.cc?ref=0bf6394801c9699d1e699f99d3ac62a019d4b1ad", "patch": "@@ -0,0 +1,56 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <unistd.h>\n+\n+#include \"llvm/Pass.h\"\n+#include \"llvm/IR/Function.h\"\n+\n+using namespace llvm;\n+\n+namespace {\n+\n+  class TestLLVMPass : public FunctionPass {\n+\n+  public:\n+\n+    static char ID;\n+    TestLLVMPass() : FunctionPass(ID) { }\n+\n+    bool runOnFunction(Function &F) override;\n+\n+    const char *getPassName() const override {\n+      return \"Some LLVM pass\";\n+    }\n+\n+  };\n+\n+}\n+\n+bool TestLLVMPass::runOnFunction(Function &F) {\n+  // A couple examples of operations that previously caused segmentation faults\n+  // https://github.com/rust-lang/rust/issues/31067\n+\n+  for (auto N = F.begin(); N != F.end(); ++N) {\n+    /* code */\n+  }\n+\n+  LLVMContext &C = F.getContext();\n+  IntegerType *Int8Ty  = IntegerType::getInt8Ty(C);\n+  PointerType::get(Int8Ty, 0);\n+  return true;\n+}\n+\n+char TestLLVMPass::ID = 0;\n+\n+static RegisterPass<TestLLVMPass> RegisterAFLPass(\n+  \"some-llvm-function-pass\", \"Some LLVM pass\");"}, {"sha": "510375a5e6678136db412bf0bf7f0d8c04d51301", "filename": "src/test/run-make/llvm-pass/llvm-module-pass.so.cc", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bf6394801c9699d1e699f99d3ac62a019d4b1ad/src%2Ftest%2Frun-make%2Fllvm-pass%2Fllvm-module-pass.so.cc", "raw_url": "https://github.com/rust-lang/rust/raw/0bf6394801c9699d1e699f99d3ac62a019d4b1ad/src%2Ftest%2Frun-make%2Fllvm-pass%2Fllvm-module-pass.so.cc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fllvm-pass%2Fllvm-module-pass.so.cc?ref=0bf6394801c9699d1e699f99d3ac62a019d4b1ad", "patch": "@@ -52,4 +52,4 @@ bool TestLLVMPass::runOnModule(Module &M) {\n char TestLLVMPass::ID = 0;\n \n static RegisterPass<TestLLVMPass> RegisterAFLPass(\n-  \"some-llvm-pass\", \"Some LLVM pass\");\n+  \"some-llvm-module-pass\", \"Some LLVM pass\");", "previous_filename": "src/test/run-make/llvm-module-pass/llvm-pass.so.cc"}, {"sha": "5b5ab94bcef02c139cb8493936050b5b2c0ca5ce", "filename": "src/test/run-make/llvm-pass/main.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0bf6394801c9699d1e699f99d3ac62a019d4b1ad/src%2Ftest%2Frun-make%2Fllvm-pass%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bf6394801c9699d1e699f99d3ac62a019d4b1ad/src%2Ftest%2Frun-make%2Fllvm-pass%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fllvm-pass%2Fmain.rs?ref=0bf6394801c9699d1e699f99d3ac62a019d4b1ad", "previous_filename": "src/test/run-make/llvm-module-pass/main.rs"}, {"sha": "f77b2fca857a613e3759bb50b4fec40995186fc6", "filename": "src/test/run-make/llvm-pass/plugin.rs", "status": "renamed", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0bf6394801c9699d1e699f99d3ac62a019d4b1ad/src%2Ftest%2Frun-make%2Fllvm-pass%2Fplugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bf6394801c9699d1e699f99d3ac62a019d4b1ad/src%2Ftest%2Frun-make%2Fllvm-pass%2Fplugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fllvm-pass%2Fplugin.rs?ref=0bf6394801c9699d1e699f99d3ac62a019d4b1ad", "patch": "@@ -15,12 +15,14 @@\n extern crate rustc;\n extern crate rustc_plugin;\n \n-#[link(name = \"llvm-pass\", kind = \"static\")]\n+#[link(name = \"llvm-function-pass\", kind = \"static\")]\n+#[link(name = \"llvm-module-pass\", kind = \"static\")]\n extern {}\n \n use rustc_plugin::registry::Registry;\n \n #[plugin_registrar]\n pub fn plugin_registrar(reg: &mut Registry) {\n-    reg.register_llvm_pass(\"some-llvm-pass\");\n+    reg.register_llvm_pass(\"some-llvm-function-pass\");\n+    reg.register_llvm_pass(\"some-llvm-module-pass\");\n }", "previous_filename": "src/test/run-make/llvm-module-pass/plugin.rs"}]}