{"sha": "b18c4cfef0250eb7cc9b7e8273325878be72c242", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxOGM0Y2ZlZjAyNTBlYjdjYzliN2U4MjczMzI1ODc4YmU3MmMyNDI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-23T19:54:56Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-25T00:22:41Z"}, "message": "rustc: Always include the morestack library\n\nIt was previously assumed that the object file generated by LLVM would always\nrequire the __morestack function, but that assumption appears to be incorrect,\nas outlined in #15108. This commit forcibly tells the linker to include the\nentire archive, regardless of whether it's currently necessary or not.\n\nCloses #15108", "tree": {"sha": "314913b0cf68e76fe14a4b4e91b479f38173eac9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/314913b0cf68e76fe14a4b4e91b479f38173eac9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b18c4cfef0250eb7cc9b7e8273325878be72c242", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b18c4cfef0250eb7cc9b7e8273325878be72c242", "html_url": "https://github.com/rust-lang/rust/commit/b18c4cfef0250eb7cc9b7e8273325878be72c242", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b18c4cfef0250eb7cc9b7e8273325878be72c242/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e16a87513a9a94d86de6125a72977af50e05af65", "url": "https://api.github.com/repos/rust-lang/rust/commits/e16a87513a9a94d86de6125a72977af50e05af65", "html_url": "https://github.com/rust-lang/rust/commit/e16a87513a9a94d86de6125a72977af50e05af65"}], "stats": {"total": 54, "additions": 40, "deletions": 14}, "files": [{"sha": "7a3e912b629c40b8353779f6b50c81f631a45c2e", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 27, "deletions": 14, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/b18c4cfef0250eb7cc9b7e8273325878be72c242/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b18c4cfef0250eb7cc9b7e8273325878be72c242/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=b18c4cfef0250eb7cc9b7e8273325878be72c242", "patch": "@@ -1170,26 +1170,39 @@ fn link_args(cmd: &mut Command,\n     // The default library location, we need this to find the runtime.\n     // The location of crates will be determined as needed.\n     let lib_path = sess.target_filesearch().get_lib_path();\n-    cmd.arg(\"-L\").arg(lib_path);\n+    cmd.arg(\"-L\").arg(&lib_path);\n \n     cmd.arg(\"-o\").arg(out_filename).arg(obj_filename);\n \n     // Stack growth requires statically linking a __morestack function. Note\n-    // that this is listed *before* all other libraries, even though it may be\n-    // used to resolve symbols in other libraries. The only case that this\n-    // wouldn't be pulled in by the object file is if the object file had no\n-    // functions.\n+    // that this is listed *before* all other libraries. Due to the usage of the\n+    // --as-needed flag below, the standard library may only be useful for its\n+    // rust_stack_exhausted function. In this case, we must ensure that the\n+    // libmorestack.a file appears *before* the standard library (so we put it\n+    // at the very front).\n     //\n-    // If we're building an executable, there must be at least one function (the\n-    // main function), and if we're building a dylib then we don't need it for\n-    // later libraries because they're all dylibs (not rlibs).\n+    // Most of the time this is sufficient, except for when LLVM gets super\n+    // clever. If, for example, we have a main function `fn main() {}`, LLVM\n+    // will optimize out calls to `__morestack` entirely because the function\n+    // doesn't need any stack at all!\n     //\n-    // I'm honestly not entirely sure why this needs to come first. Apparently\n-    // the --as-needed flag above sometimes strips out libstd from the command\n-    // line, but inserting this farther to the left makes the\n-    // \"rust_stack_exhausted\" symbol an outstanding undefined symbol, which\n-    // flags libstd as a required library (or whatever provides the symbol).\n-    cmd.arg(\"-lmorestack\");\n+    // To get around this snag, we specially tell the linker to always include\n+    // all contents of this library. This way we're guaranteed that the linker\n+    // will include the __morestack symbol 100% of the time, always resolving\n+    // references to it even if the object above didn't use it.\n+    match sess.targ_cfg.os {\n+        abi::OsMacos | abi::OsiOS => {\n+            let morestack = lib_path.join(\"libmorestack.a\");\n+\n+            let mut v = \"-Wl,-force_load,\".as_bytes().to_owned();\n+            v.push_all(morestack.as_vec());\n+            cmd.arg(v.as_slice());\n+        }\n+        _ => {\n+            cmd.args([\"-Wl,--whole-archive\", \"-lmorestack\",\n+                      \"-Wl,--no-whole-archive\"]);\n+        }\n+    }\n \n     // When linking a dynamic library, we put the metadata into a section of the\n     // executable. This metadata is in a separate object file from the main"}, {"sha": "736bd6cd3ab275cb2428baea0f4b06b344fbe22b", "filename": "src/test/run-pass/issue-15108.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b18c4cfef0250eb7cc9b7e8273325878be72c242/src%2Ftest%2Frun-pass%2Fissue-15108.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b18c4cfef0250eb7cc9b7e8273325878be72c242/src%2Ftest%2Frun-pass%2Fissue-15108.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-15108.rs?ref=b18c4cfef0250eb7cc9b7e8273325878be72c242", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags:-O\n+\n+fn main() {}"}]}