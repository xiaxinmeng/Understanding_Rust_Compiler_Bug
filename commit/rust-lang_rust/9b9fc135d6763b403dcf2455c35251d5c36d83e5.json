{"sha": "9b9fc135d6763b403dcf2455c35251d5c36d83e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliOWZjMTM1ZDY3NjNiNDAzZGNmMjQ1NWMzNTI1MWQ1YzM2ZDgzZTU=", "commit": {"author": {"name": "Jeremy A. Kolb", "email": "jkolb@ara.com", "date": "2018-10-24T19:54:58Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-31T20:38:22Z"}, "message": "Simplify find_all_refs by always resolving a ast::BindPat", "tree": {"sha": "e050fff356f2f6ec75ad1524d0f16f55e464e5e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e050fff356f2f6ec75ad1524d0f16f55e464e5e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b9fc135d6763b403dcf2455c35251d5c36d83e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b9fc135d6763b403dcf2455c35251d5c36d83e5", "html_url": "https://github.com/rust-lang/rust/commit/9b9fc135d6763b403dcf2455c35251d5c36d83e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b9fc135d6763b403dcf2455c35251d5c36d83e5/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "406f366ccc8b903f457cc694dc1214794c0cfc88", "url": "https://api.github.com/repos/rust-lang/rust/commits/406f366ccc8b903f457cc694dc1214794c0cfc88", "html_url": "https://github.com/rust-lang/rust/commit/406f366ccc8b903f457cc694dc1214794c0cfc88"}], "stats": {"total": 48, "additions": 16, "deletions": 32}, "files": [{"sha": "1eb8cb9127620335c3a142797aa33125c625d244", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 16, "deletions": 32, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/9b9fc135d6763b403dcf2455c35251d5c36d83e5/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b9fc135d6763b403dcf2455c35251d5c36d83e5/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=9b9fc135d6763b403dcf2455c35251d5c36d83e5", "patch": "@@ -325,40 +325,24 @@ impl AnalysisImpl {\n         let file = self.db.file_syntax(file_id);\n         let syntax = file.syntax();\n \n-        let mut ret = vec![];\n-\n-        if let Some(binding) = find_node_at_offset::<ast::BindPat>(syntax, offset) {\n-            let decl = DeclarationDescriptor::new(binding);\n-\n-            ret.push((file_id, decl.range));\n-\n-            ret.extend(decl.find_all_refs().into_iter()\n-                .map(|ref_desc| (file_id, ref_desc.range )));\n-\n-            return ret;\n-        }\n-\n-        // Find the symbol we are looking for\n-        if let Some(name_ref) = find_node_at_offset::<ast::NameRef>(syntax, offset) {\n-\n-            // We are only handing local references for now\n-            if let Some(resolved) = resolve_local_name(&self.db, file_id, name_ref) {\n-\n-                ret.push((file_id, resolved.1));\n-\n-                if let Some(fn_def) = find_node_at_offset::<ast::FnDef>(syntax, offset) {\n+        // Find the binding associated with the offset\n+        let maybe_binding = find_node_at_offset::<ast::BindPat>(syntax, offset)\n+            .or_else(|| {\n+                let name_ref = find_node_at_offset::<ast::NameRef>(syntax, offset)?;\n+                let resolved = resolve_local_name(&self.db, file_id, name_ref)?;\n+                find_node_at_offset::<ast::BindPat>(syntax, resolved.1.end())\n+            });\n+\n+        let binding = match maybe_binding {\n+            None => return Vec::new(),\n+            Some(it) => it,\n+        };\n \n-                    let refs : Vec<_> = fn_def.syntax().descendants()\n-                        .filter_map(ast::NameRef::cast)\n-                        .filter(|&n: &ast::NameRef| resolve_local_name(&self.db, file_id, n) == Some(resolved.clone()))\n-                        .collect();\n+        let decl = DeclarationDescriptor::new(binding);\n \n-                    for r in refs {\n-                        ret.push((file_id, r.syntax().range()));\n-                    }\n-                }\n-            }\n-        }\n+        let mut ret = vec![(file_id, decl.range)];\n+        ret.extend(decl.find_all_refs().into_iter()\n+            .map(|ref_desc| (file_id, ref_desc.range )));\n \n         ret\n     }"}]}