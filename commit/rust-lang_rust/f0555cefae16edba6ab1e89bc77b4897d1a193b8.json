{"sha": "f0555cefae16edba6ab1e89bc77b4897d1a193b8", "node_id": "C_kwDOAAsO6NoAKGYwNTU1Y2VmYWUxNmVkYmE2YWIxZTg5YmM3N2I0ODk3ZDFhMTkzYjg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-15T05:44:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-15T05:44:48Z"}, "message": "Rollup merge of #89880 - adamgemmell:dev/nc-relocation, r=Amanieu\n\nUse non-checking TLS relocation in aarch64 asm! sym test.\n\nThe checking variant ensures that the offset required is not larger than 12 bits - hence we wouldn't ever need the upper 12 bits.\n\nIt's unlikely to ever fail in this small test but this is technically correct.\n\nThis was noticed incidentally when we found that LLD doesn't support the `tprel_lo12` relocation, even though LLVM can apparently generate it when using `-mtls-size=12`.", "tree": {"sha": "e24de38c04a96beb13c2fe1433dc31b56f4d049b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e24de38c04a96beb13c2fe1433dc31b56f4d049b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0555cefae16edba6ab1e89bc77b4897d1a193b8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhaRVRCRBK7hj4Ov3rIwAAbE4IAEvVr6UYkiHC+1hTYa2EDnKV\n1dqSEdFTgb9x9/LbFi4m6UKShOzCrj3zMJyLZhGmNW2r7s7fL9ktxvZU59yonvgK\nCmmmp36pGXdub0nKmHi9i9/jLsUklg0URGEeisvp0kWq7VXTC14SBwb1QQXhgtwJ\nNB9mY4MpavoBLhvf9PNS6G0HKgDbAcUW1cjr/CIa3s66s2H0C7hKw2ZGQNUHBSpS\n3mf/XgkyQPNlCwMe+OR7RGWAPAPn9NoY+UafQV3+viklMhsfvWTXskoY74oq8Ioa\nn2cWk49b8+NaEvtUN2mHTpsJ1ffLtHDZmpNgoGFKX0Yk1TH9ua4GubShWEk5Xjk=\n=Xy4q\n-----END PGP SIGNATURE-----\n", "payload": "tree e24de38c04a96beb13c2fe1433dc31b56f4d049b\nparent e2c28ad1e7c5f5fc74c6472c27c8f6adfebb5b8c\nparent af5b146324e2a20a432649723cf8d22487b1e499\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1634276688 +0200\ncommitter GitHub <noreply@github.com> 1634276688 +0200\n\nRollup merge of #89880 - adamgemmell:dev/nc-relocation, r=Amanieu\n\nUse non-checking TLS relocation in aarch64 asm! sym test.\n\nThe checking variant ensures that the offset required is not larger than 12 bits - hence we wouldn't ever need the upper 12 bits.\n\nIt's unlikely to ever fail in this small test but this is technically correct.\n\nThis was noticed incidentally when we found that LLD doesn't support the `tprel_lo12` relocation, even though LLVM can apparently generate it when using `-mtls-size=12`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0555cefae16edba6ab1e89bc77b4897d1a193b8", "html_url": "https://github.com/rust-lang/rust/commit/f0555cefae16edba6ab1e89bc77b4897d1a193b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0555cefae16edba6ab1e89bc77b4897d1a193b8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2c28ad1e7c5f5fc74c6472c27c8f6adfebb5b8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2c28ad1e7c5f5fc74c6472c27c8f6adfebb5b8c", "html_url": "https://github.com/rust-lang/rust/commit/e2c28ad1e7c5f5fc74c6472c27c8f6adfebb5b8c"}, {"sha": "af5b146324e2a20a432649723cf8d22487b1e499", "url": "https://api.github.com/repos/rust-lang/rust/commits/af5b146324e2a20a432649723cf8d22487b1e499", "html_url": "https://github.com/rust-lang/rust/commit/af5b146324e2a20a432649723cf8d22487b1e499"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6fd1192eec6e030faa4a1d4d8f24f0594f58bd68", "filename": "src/test/ui/asm/aarch64/sym.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f0555cefae16edba6ab1e89bc77b4897d1a193b8/src%2Ftest%2Fui%2Fasm%2Faarch64%2Fsym.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0555cefae16edba6ab1e89bc77b4897d1a193b8/src%2Ftest%2Fui%2Fasm%2Faarch64%2Fsym.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Faarch64%2Fsym.rs?ref=f0555cefae16edba6ab1e89bc77b4897d1a193b8", "patch": "@@ -55,7 +55,7 @@ macro_rules! static_tls_addr {\n                 // Add the top 12 bits of the symbol's offset\n                 \"add {out}, {out}, :tprel_hi12:{sym}\",\n                 // And the bottom 12 bits\n-                \"add {out}, {out}, :tprel_lo12:{sym}\",\n+                \"add {out}, {out}, :tprel_lo12_nc:{sym}\",\n                 out = out(reg) result,\n                 sym = sym $s\n             );"}]}