{"sha": "c09083c3d1b077df9adf3d6b4048677a15ba666e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwOTA4M2MzZDFiMDc3ZGY5YWRmM2Q2YjQwNDg2NzdhMTViYTY2NmU=", "commit": {"author": {"name": "Clar Charr", "email": "clar@charr.xyz", "date": "2017-03-16T04:11:44Z"}, "committer": {"name": "Clar Charr", "email": "clar@charr.xyz", "date": "2017-03-23T22:21:34Z"}, "message": "Fix for #39596: sort Trait1 before Trait2.", "tree": {"sha": "28f80059933ad1251542052b488cb9f74eaab486", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28f80059933ad1251542052b488cb9f74eaab486"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c09083c3d1b077df9adf3d6b4048677a15ba666e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c09083c3d1b077df9adf3d6b4048677a15ba666e", "html_url": "https://github.com/rust-lang/rust/commit/c09083c3d1b077df9adf3d6b4048677a15ba666e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c09083c3d1b077df9adf3d6b4048677a15ba666e/comments", "author": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "134c4a0f08a3d1f55ea8968fbe728fa935c71698", "url": "https://api.github.com/repos/rust-lang/rust/commits/134c4a0f08a3d1f55ea8968fbe728fa935c71698", "html_url": "https://github.com/rust-lang/rust/commit/134c4a0f08a3d1f55ea8968fbe728fa935c71698"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "1f891177797dc3c507590d3237a780696eb44a46", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 49, "deletions": 1, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/c09083c3d1b077df9adf3d6b4048677a15ba666e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c09083c3d1b077df9adf3d6b4048677a15ba666e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=c09083c3d1b077df9adf3d6b4048677a15ba666e", "patch": "@@ -1700,6 +1700,23 @@ fn document_stability(w: &mut fmt::Formatter, cx: &Context, item: &clean::Item)\n     Ok(())\n }\n \n+fn name_key(name: &str) -> (&str, u64, usize) {\n+    // find number at end\n+    let split = name.bytes().rposition(|b| b < b'0' || b'9' < b).map_or(0, |s| s + 1);\n+\n+    // count leading zeroes\n+    let after_zeroes =\n+        name[split..].bytes().position(|b| b != b'0').map_or(name.len(), |extra| split + extra);\n+\n+    // sort leading zeroes last\n+    let num_zeroes = after_zeroes - split;\n+\n+    match name[split..].parse() {\n+        Ok(n) => (&name[..split], n, num_zeroes),\n+        Err(_) => (name, 0, num_zeroes),\n+    }\n+}\n+\n fn item_module(w: &mut fmt::Formatter, cx: &Context,\n                item: &clean::Item, items: &[clean::Item]) -> fmt::Result {\n     document(w, cx, item)?;\n@@ -1744,7 +1761,9 @@ fn item_module(w: &mut fmt::Formatter, cx: &Context,\n             (Some(stability::Stable), Some(stability::Unstable)) => return Ordering::Less,\n             _ => {}\n         }\n-        i1.name.cmp(&i2.name)\n+        let lhs = i1.name.as_ref().map_or(\"\", |s| &**s);\n+        let rhs = i2.name.as_ref().map_or(\"\", |s| &**s);\n+        name_key(lhs).cmp(&name_key(rhs))\n     }\n \n     indices.sort_by(|&i1, &i2| cmp(&items[i1], &items[i2], i1, i2));\n@@ -3198,3 +3217,32 @@ fn test_unique_id() {\n     reset_ids(true);\n     test();\n }\n+\n+#[cfg(test)]\n+#[test]\n+fn test_name_key() {\n+    assert_eq!(name_key(\"0\"), (\"\", 0, 1));\n+    assert_eq!(name_key(\"123\"), (\"\", 123, 0));\n+    assert_eq!(name_key(\"Fruit\"), (\"Fruit\", 0, 0));\n+    assert_eq!(name_key(\"Fruit0\"), (\"Fruit\", 0, 1));\n+    assert_eq!(name_key(\"Fruit0000\"), (\"Fruit\", 0, 4));\n+    assert_eq!(name_key(\"Fruit01\"), (\"Fruit\", 1, 1));\n+    assert_eq!(name_key(\"Fruit10\"), (\"Fruit\", 10, 0));\n+    assert_eq!(name_key(\"Fruit123\"), (\"Fruit\", 123, 0));\n+}\n+\n+#[cfg(test)]\n+#[test]\n+fn test_name_sorting() {\n+    let names = [\"Apple\",\n+                 \"Banana\",\n+                 \"Fruit\", \"Fruit0\", \"Fruit00\",\n+                 \"Fruit1\", \"Fruit01\",\n+                 \"Fruit2\", \"Fruit02\",\n+                 \"Fruit20\",\n+                 \"Fruit100\",\n+                 \"Pear\"];\n+    let mut sorted = names.to_owned();\n+    sorted.sort_by_key(|&s| name_key(s));\n+    assert_eq!(names, sorted);\n+}"}]}