{"sha": "f7062162518f4dde8fa4e08df1dc93840fa99a02", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3MDYyMTYyNTE4ZjRkZGU4ZmE0ZTA4ZGYxZGM5Mzg0MGZhOTlhMDI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-02-07T13:45:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-07T13:45:51Z"}, "message": "Rollup merge of #81742 - sdroege:exact-size-iterator-correctness, r=kennytm\n\nAdd a note about the correctness and the effect on unsafe code to the `ExactSizeIterator` docs\n\nAs it is a safe trait it does not provide any guarantee that the\nreturned length is correct and as such unsafe code must not rely on it.\n\nThat's why `TrustedLen` exists.\n\nFixes https://github.com/rust-lang/rust/issues/81739", "tree": {"sha": "ed4fefe8b1e818401fc80dff6d1829eeb0fb6b63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed4fefe8b1e818401fc80dff6d1829eeb0fb6b63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7062162518f4dde8fa4e08df1dc93840fa99a02", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgH+8QCRBK7hj4Ov3rIwAAdHIIAF/YcF+K9rodvFFDkxnsmvKf\nIyXuZVq6DhSDhE1PrC6tEnjCg6RjCjKjAyrMXkQcwLfUzZqBCHSwmyLdqb5E3A7O\nrvfnBRNIMWPzzv6WbOOudXKfA8qimjoX4HF8QEd9Fe1xXLtvMR0ZjqbaMyZmBJLr\npz7qxWS/U+uANhAwJBjwOaqHPEUMTm/8nOcBDJAVA27Cx9aP/iADdygVHmnzW9a2\nSV0GbDEIqxaJd57+rQQBRjPQjj2+AbHLWzXgIIYeCTJHO33c1M1A/i8SilZkQhQZ\nLCH56RXpnkMkLymR8K9SVYH9MZfFZR2Jp/Y2Mb1YhEPRHH7T/JZ9bOg5G7eTzkU=\n=e0Wy\n-----END PGP SIGNATURE-----\n", "payload": "tree ed4fefe8b1e818401fc80dff6d1829eeb0fb6b63\nparent 6e1f7139c9bf1bb6d7087a2d7e10fb66df6efab9\nparent f436630ac85504da5c6ef802dbee658fa97a6f37\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1612705551 +0100\ncommitter GitHub <noreply@github.com> 1612705551 +0100\n\nRollup merge of #81742 - sdroege:exact-size-iterator-correctness, r=kennytm\n\nAdd a note about the correctness and the effect on unsafe code to the `ExactSizeIterator` docs\n\nAs it is a safe trait it does not provide any guarantee that the\nreturned length is correct and as such unsafe code must not rely on it.\n\nThat's why `TrustedLen` exists.\n\nFixes https://github.com/rust-lang/rust/issues/81739\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7062162518f4dde8fa4e08df1dc93840fa99a02", "html_url": "https://github.com/rust-lang/rust/commit/f7062162518f4dde8fa4e08df1dc93840fa99a02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7062162518f4dde8fa4e08df1dc93840fa99a02/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e1f7139c9bf1bb6d7087a2d7e10fb66df6efab9", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e1f7139c9bf1bb6d7087a2d7e10fb66df6efab9", "html_url": "https://github.com/rust-lang/rust/commit/6e1f7139c9bf1bb6d7087a2d7e10fb66df6efab9"}, {"sha": "f436630ac85504da5c6ef802dbee658fa97a6f37", "url": "https://api.github.com/repos/rust-lang/rust/commits/f436630ac85504da5c6ef802dbee658fa97a6f37", "html_url": "https://github.com/rust-lang/rust/commit/f436630ac85504da5c6ef802dbee658fa97a6f37"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "167db3359f240de67031851341ee8edbe1fb6dff", "filename": "library/core/src/iter/traits/exact_size.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f7062162518f4dde8fa4e08df1dc93840fa99a02/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fexact_size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7062162518f4dde8fa4e08df1dc93840fa99a02/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fexact_size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fexact_size.rs?ref=f7062162518f4dde8fa4e08df1dc93840fa99a02", "patch": "@@ -13,6 +13,12 @@\n /// implement it. However, you may be able to provide a more performant\n /// implementation than the default, so overriding it in this case makes sense.\n ///\n+/// Note that this trait is a safe trait and as such does *not* and *cannot*\n+/// guarantee that the returned length is correct. This means that `unsafe`\n+/// code **must not** rely on the correctness of [`Iterator::size_hint`]. The\n+/// unstable and unsafe [`TrustedLen`](super::marker::TrustedLen) trait gives\n+/// this additional guarantee.\n+///\n /// [`len`]: ExactSizeIterator::len\n ///\n /// # Examples"}]}