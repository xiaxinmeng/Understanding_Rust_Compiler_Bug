{"sha": "650f8fddd9ba3eb2127879a7aed04bbeb4b8045d", "node_id": "C_kwDOAAsO6NoAKDY1MGY4ZmRkZDliYTNlYjIxMjc4NzlhN2FlZDA0YmJlYjRiODA0NWQ", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-04-29T05:57:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-29T05:57:55Z"}, "message": "Rollup merge of #110932 - sameer:master, r=michaelwoerister\n\ninclude source error for LoadLibraryExW\n\nIn #107595, we added retry behavior for LoadLibraryExW on Windows. If it fails we do not print the underlying error that Windows returned. This made #110889 a little harder to debug.\n\nIn this PR I am adding the source error in the message if it is available.", "tree": {"sha": "fa5ed7026642dd42d2a78756638c39293cbbfab5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa5ed7026642dd42d2a78756638c39293cbbfab5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/650f8fddd9ba3eb2127879a7aed04bbeb4b8045d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkTLHjCRBK7hj4Ov3rIwAAjhoIACdZt0Z04JLyVBDdkhh10xOB\nUoMUcfd+N+8uQ0385yzGOGaBDvBJ2/1CCjsITGbA7GoqpYTXkJpqteJBaKPH0Jq5\nnmJb4EV48Xqpazs7WnxQavUQmPFAqN9mYQku6DBnqjd6n4fn4mQqmpwOOjoo+WRF\n+vFevdZEm6uypnGQ8S+rLhLF+LIfh+tieIcd7eaDLtHd4zbk8xJhxOQW9CMZSIeu\nR5I9hktshaED+I+ZD6z+tKU7euGiM3ysSWacv3pzxqyzK3uaaKe9gQPGRYDb1FET\n1nNhPH+XDnzG8zGF7gLID6LI2w2vSMGpH4CrUtixlaqXu2FuMTq3a3LbYoFH6sA=\n=Saiz\n-----END PGP SIGNATURE-----\n", "payload": "tree fa5ed7026642dd42d2a78756638c39293cbbfab5\nparent 55df5c80239f8af14836f9bd14f8c7e5c473bea3\nparent 24adb1f68cb5ce7fae8cb9a4b01aab728d827fa2\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1682747875 +0530\ncommitter GitHub <noreply@github.com> 1682747875 +0530\n\nRollup merge of #110932 - sameer:master, r=michaelwoerister\n\ninclude source error for LoadLibraryExW\n\nIn #107595, we added retry behavior for LoadLibraryExW on Windows. If it fails we do not print the underlying error that Windows returned. This made #110889 a little harder to debug.\n\nIn this PR I am adding the source error in the message if it is available.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/650f8fddd9ba3eb2127879a7aed04bbeb4b8045d", "html_url": "https://github.com/rust-lang/rust/commit/650f8fddd9ba3eb2127879a7aed04bbeb4b8045d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/650f8fddd9ba3eb2127879a7aed04bbeb4b8045d/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55df5c80239f8af14836f9bd14f8c7e5c473bea3", "url": "https://api.github.com/repos/rust-lang/rust/commits/55df5c80239f8af14836f9bd14f8c7e5c473bea3", "html_url": "https://github.com/rust-lang/rust/commit/55df5c80239f8af14836f9bd14f8c7e5c473bea3"}, {"sha": "24adb1f68cb5ce7fae8cb9a4b01aab728d827fa2", "url": "https://api.github.com/repos/rust-lang/rust/commits/24adb1f68cb5ce7fae8cb9a4b01aab728d827fa2", "html_url": "https://github.com/rust-lang/rust/commit/24adb1f68cb5ce7fae8cb9a4b01aab728d827fa2"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "01b69966ca92c643ba9899128031895976df6e07", "filename": "compiler/rustc_metadata/src/creader.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/650f8fddd9ba3eb2127879a7aed04bbeb4b8045d/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/650f8fddd9ba3eb2127879a7aed04bbeb4b8045d/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs?ref=650f8fddd9ba3eb2127879a7aed04bbeb4b8045d", "patch": "@@ -27,6 +27,7 @@ use rustc_span::{Span, DUMMY_SP};\n use rustc_target::spec::{PanicStrategy, TargetTriple};\n \n use proc_macro::bridge::client::ProcMacro;\n+use std::error::Error;\n use std::ops::Fn;\n use std::path::Path;\n use std::time::Duration;\n@@ -1094,5 +1095,12 @@ fn load_dylib(path: &Path, max_attempts: usize) -> Result<libloading::Library, S\n     }\n \n     debug!(\"Failed to load proc-macro `{}` even after {} attempts.\", path.display(), max_attempts);\n-    Err(format!(\"{} (retried {} times)\", last_error.unwrap(), max_attempts))\n+\n+    let last_error = last_error.unwrap();\n+    let message = if let Some(src) = last_error.source() {\n+        format!(\"{last_error} ({src}) (retried {max_attempts} times)\")\n+    } else {\n+        format!(\"{last_error} (retried {max_attempts} times)\")\n+    };\n+    Err(message)\n }"}]}