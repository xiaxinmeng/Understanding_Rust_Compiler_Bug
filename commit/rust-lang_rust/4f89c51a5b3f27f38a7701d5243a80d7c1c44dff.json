{"sha": "4f89c51a5b3f27f38a7701d5243a80d7c1c44dff", "node_id": "C_kwDOAAsO6NoAKDRmODljNTFhNWIzZjI3ZjM4YTc3MDFkNTI0M2E4MGQ3YzFjNDRkZmY", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-03-20T17:26:09Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-03-20T19:36:08Z"}, "message": "Take &mut Diagnostic in emit_diagnostic.\n\nTaking a Diagnostic by move would break the usual pattern\n`diag.label(..).emit()`.", "tree": {"sha": "f76e339eca55a798d2830bdbfd76f66eafe76af0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f76e339eca55a798d2830bdbfd76f66eafe76af0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f89c51a5b3f27f38a7701d5243a80d7c1c44dff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f89c51a5b3f27f38a7701d5243a80d7c1c44dff", "html_url": "https://github.com/rust-lang/rust/commit/4f89c51a5b3f27f38a7701d5243a80d7c1c44dff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f89c51a5b3f27f38a7701d5243a80d7c1c44dff/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cce0d50bcbf3b99726f93430f4ed9b6a250540a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/cce0d50bcbf3b99726f93430f4ed9b6a250540a4", "html_url": "https://github.com/rust-lang/rust/commit/cce0d50bcbf3b99726f93430f4ed9b6a250540a4"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "412f4434b9ead51f2ea5412ab16df06266aa11e9", "filename": "src/parse/session.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4f89c51a5b3f27f38a7701d5243a80d7c1c44dff/src%2Fparse%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f89c51a5b3f27f38a7701d5243a80d7c1c44dff/src%2Fparse%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparse%2Fsession.rs?ref=4f89c51a5b3f27f38a7701d5243a80d7c1c44dff", "patch": "@@ -225,8 +225,10 @@ impl ParseSess {\n // Methods that should be restricted within the parse module.\n impl ParseSess {\n     pub(super) fn emit_diagnostics(&self, diagnostics: Vec<Diagnostic>) {\n-        for diagnostic in diagnostics {\n-            self.parse_sess.span_diagnostic.emit_diagnostic(&diagnostic);\n+        for mut diagnostic in diagnostics {\n+            self.parse_sess\n+                .span_diagnostic\n+                .emit_diagnostic(&mut diagnostic);\n         }\n     }\n "}]}