{"sha": "31d4fe37f688f3960bb79f3cecbf233d15c4ba29", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxZDRmZTM3ZjY4OGYzOTYwYmI3OWYzY2VjYmYyMzNkMTVjNGJhMjk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-14T16:19:31Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-14T16:19:31Z"}, "message": "Revert \"Try a little harder to avoid creating new landing pads\"\n\nThis reverts commit b8e31ac46917edcf5922f0b191c5e6c4505830d2.\n\nConflicts:\n\n\tsrc/comp/middle/trans.rs", "tree": {"sha": "002883eefe2b2bd0a1c75a348bc30ac59c823f5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/002883eefe2b2bd0a1c75a348bc30ac59c823f5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31d4fe37f688f3960bb79f3cecbf233d15c4ba29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31d4fe37f688f3960bb79f3cecbf233d15c4ba29", "html_url": "https://github.com/rust-lang/rust/commit/31d4fe37f688f3960bb79f3cecbf233d15c4ba29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31d4fe37f688f3960bb79f3cecbf233d15c4ba29/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93de2f0b7498cbc6a304ba3cb80f5a3ea57b8bc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/93de2f0b7498cbc6a304ba3cb80f5a3ea57b8bc7", "html_url": "https://github.com/rust-lang/rust/commit/93de2f0b7498cbc6a304ba3cb80f5a3ea57b8bc7"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "5f89f17daf2fb3a1510eab7756a09af63377de17", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/31d4fe37f688f3960bb79f3cecbf233d15c4ba29/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31d4fe37f688f3960bb79f3cecbf233d15c4ba29/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=31d4fe37f688f3960bb79f3cecbf233d15c4ba29", "patch": "@@ -3748,11 +3748,11 @@ fn invoke_(bcx: @block_ctxt, llfn: ValueRef,\n \n fn get_landing_pad(bcx: @block_ctxt) -> BasicBlockRef {\n     let scope_bcx = find_scope_for_lpad(bcx);\n-    if scope_bcx.need_new_lpad {\n+    if scope_bcx.cleanups_dirty {\n         let unwind_bcx = new_sub_block_ctxt(bcx, \"unwind\");\n         let lpadbb = trans_landing_pad(unwind_bcx);\n         scope_bcx.lpad = some(lpadbb);\n-        scope_bcx.need_new_lpad = false;\n+        scope_bcx.cleanups_dirty = false;\n     }\n     assert option::is_some(scope_bcx.lpad);\n     ret option::get(scope_bcx.lpad);\n@@ -4566,7 +4566,7 @@ fn new_block_ctxt(cx: @fn_ctxt, parent: block_parent, kind: block_kind,\n           parent: parent,\n           kind: kind,\n           mutable cleanups: [],\n-          mutable need_new_lpad: true,\n+          mutable cleanups_dirty: true,\n           mutable lpad: option::none,\n           sp: cx.sp,\n           fcx: cx};\n@@ -4602,7 +4602,7 @@ fn new_raw_block_ctxt(fcx: @fn_ctxt, llbb: BasicBlockRef) -> @block_ctxt {\n           parent: parent_none,\n           kind: NON_SCOPE_BLOCK,\n           mutable cleanups: [],\n-          mutable need_new_lpad: true,\n+          mutable cleanups_dirty: true,\n           mutable lpad: option::none,\n           sp: fcx.sp,\n           fcx: fcx};\n@@ -4670,7 +4670,7 @@ fn llstaticallocas_block_ctxt(fcx: @fn_ctxt) -> @block_ctxt {\n           parent: parent_none,\n           kind: SCOPE_BLOCK,\n           mutable cleanups: [],\n-          mutable need_new_lpad: true,\n+          mutable cleanups_dirty: true,\n           mutable lpad: option::none,\n           sp: fcx.sp,\n           fcx: fcx};\n@@ -4682,7 +4682,7 @@ fn llderivedtydescs_block_ctxt(fcx: @fn_ctxt) -> @block_ctxt {\n           parent: parent_none,\n           kind: SCOPE_BLOCK,\n           mutable cleanups: [],\n-          mutable need_new_lpad: true,\n+          mutable cleanups_dirty: true,\n           mutable lpad: option::none,\n           sp: fcx.sp,\n           fcx: fcx};"}, {"sha": "9e9d55f19ceb8851bd0b093f0de450c6c69dda57", "filename": "src/comp/middle/trans_common.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/31d4fe37f688f3960bb79f3cecbf233d15c4ba29/src%2Fcomp%2Fmiddle%2Ftrans_common.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31d4fe37f688f3960bb79f3cecbf233d15c4ba29/src%2Fcomp%2Fmiddle%2Ftrans_common.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_common.rs?ref=31d4fe37f688f3960bb79f3cecbf233d15c4ba29", "patch": "@@ -273,6 +273,7 @@ tag cleanup {\n fn add_clean(cx: @block_ctxt, val: ValueRef, ty: ty::t) {\n     let scope_cx = find_scope_cx(cx);\n     scope_cx.cleanups += [clean(bind drop_ty(_, val, ty))];\n+    scope_cx.cleanups_dirty = true;\n }\n fn add_clean_temp(cx: @block_ctxt, val: ValueRef, ty: ty::t) {\n     fn spill_and_drop(cx: @block_ctxt, val: ValueRef, ty: ty::t) ->\n@@ -286,9 +287,7 @@ fn add_clean_temp(cx: @block_ctxt, val: ValueRef, ty: ty::t) {\n     let scope_cx = find_scope_cx(cx);\n     scope_cx.cleanups +=\n         [clean_temp(val, bind spill_and_drop(_, val, ty))];\n-    if trans::type_is_immediate(bcx_ccx(cx), ty) {\n-        scope_cx.need_new_lpad = true;\n-    }\n+    scope_cx.cleanups_dirty = true;\n }\n \n // Note that this only works for temporaries. We should, at some point, move\n@@ -322,7 +321,7 @@ fn revoke_clean(cx: @block_ctxt, val: ValueRef, t: ty::t) -> @block_ctxt {\n         std::vec::slice(sc_cx.cleanups, 0u, found as uint) +\n             std::vec::slice(sc_cx.cleanups, (found as uint) + 1u,\n                             std::vec::len(sc_cx.cleanups));\n-    sc_cx.need_new_lpad = true;\n+    sc_cx.cleanups_dirty = true;\n     ret cx;\n }\n \n@@ -394,7 +393,7 @@ type block_ctxt =\n      parent: block_parent,\n      kind: block_kind,\n      mutable cleanups: [cleanup],\n-     mutable need_new_lpad: bool,\n+     mutable cleanups_dirty: bool,\n      mutable lpad: option::t<BasicBlockRef>,\n      sp: span,\n      fcx: @fn_ctxt};"}]}