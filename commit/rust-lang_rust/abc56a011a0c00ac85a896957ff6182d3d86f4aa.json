{"sha": "abc56a011a0c00ac85a896957ff6182d3d86f4aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiYzU2YTAxMWEwYzAwYWM4NWE4OTY5NTdmZjYxODJkM2Q4NmY0YWE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2015-01-26T23:42:24Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2015-01-27T00:29:27Z"}, "message": "Make '-A warnings' apply to all warnings, including feature gate warnings", "tree": {"sha": "1fef69ab4bc5a385d29b84fa2b28b572f46bd9d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fef69ab4bc5a385d29b84fa2b28b572f46bd9d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abc56a011a0c00ac85a896957ff6182d3d86f4aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abc56a011a0c00ac85a896957ff6182d3d86f4aa", "html_url": "https://github.com/rust-lang/rust/commit/abc56a011a0c00ac85a896957ff6182d3d86f4aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abc56a011a0c00ac85a896957ff6182d3d86f4aa/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a6fb8eb98f1e8d7188100ef83f25d01f30fff9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a6fb8eb98f1e8d7188100ef83f25d01f30fff9f", "html_url": "https://github.com/rust-lang/rust/commit/5a6fb8eb98f1e8d7188100ef83f25d01f30fff9f"}], "stats": {"total": 119, "additions": 106, "deletions": 13}, "files": [{"sha": "e62f3145e5a2e5e894a5ac06bdbfaf7fc9533ce0", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=abc56a011a0c00ac85a896957ff6182d3d86f4aa", "patch": "@@ -305,9 +305,19 @@ pub fn build_session(sopts: config::Options,\n                      local_crate_source_file: Option<Path>,\n                      registry: diagnostics::registry::Registry)\n                      -> Session {\n+    // FIXME: This is not general enough to make the warning lint completely override\n+    // normal diagnostic warnings, since the warning lint can also be denied and changed\n+    // later via the source code.\n+    let can_print_warnings = sopts.lint_opts\n+        .iter()\n+        .filter(|&&(ref key, _)| *key == \"warnings\")\n+        .map(|&(_, ref level)| *level != lint::Allow)\n+        .last()\n+        .unwrap_or(true);\n+\n     let codemap = codemap::CodeMap::new();\n     let diagnostic_handler =\n-        diagnostic::default_handler(sopts.color, Some(registry));\n+        diagnostic::default_handler(sopts.color, Some(registry), can_print_warnings);\n     let span_diagnostic_handler =\n         diagnostic::mk_span_handler(diagnostic_handler, codemap);\n "}, {"sha": "dd0fa527f1727bffba990bced48aea9bff782f69", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=abc56a011a0c00ac85a896957ff6182d3d86f4aa", "patch": "@@ -223,7 +223,7 @@ impl Target {\n         // this is 1. ugly, 2. error prone.\n \n \n-        let handler = diagnostic::default_handler(diagnostic::Auto, None);\n+        let handler = diagnostic::default_handler(diagnostic::Auto, None, true);\n \n         let get_req_field = |&: name: &str| {\n             match obj.find(name)"}, {"sha": "4fd456d813a639eb4c2b75ab2807a6c30b394bfe", "filename": "src/librustc_trans/back/write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Flibrustc_trans%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Flibrustc_trans%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fwrite.rs?ref=abc56a011a0c00ac85a896957ff6182d3d86f4aa", "patch": "@@ -911,7 +911,7 @@ fn run_work_multithreaded(sess: &Session,\n         futures.push(rx);\n \n         thread::Builder::new().name(format!(\"codegen-{}\", i)).spawn(move |:| {\n-            let diag_handler = mk_handler(box diag_emitter);\n+            let diag_handler = mk_handler(true, box diag_emitter);\n \n             // Must construct cgcx inside the proc because it has non-Send\n             // fields."}, {"sha": "a4cafe88bcdbdf62d0a171a090251353f5351584", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=abc56a011a0c00ac85a896957ff6182d3d86f4aa", "patch": "@@ -108,7 +108,7 @@ pub fn run_core(search_paths: SearchPaths, cfgs: Vec<String>, externs: Externs,\n     };\n \n     let codemap = codemap::CodeMap::new();\n-    let diagnostic_handler = diagnostic::default_handler(diagnostic::Auto, None);\n+    let diagnostic_handler = diagnostic::default_handler(diagnostic::Auto, None, true);\n     let span_diagnostic_handler =\n         diagnostic::mk_span_handler(diagnostic_handler, codemap);\n "}, {"sha": "656daf6de843113e2d90f61201704ced6060afdf", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=abc56a011a0c00ac85a896957ff6182d3d86f4aa", "patch": "@@ -58,7 +58,7 @@ pub fn run(input: &str,\n     };\n \n     let codemap = CodeMap::new();\n-    let diagnostic_handler = diagnostic::default_handler(diagnostic::Auto, None);\n+    let diagnostic_handler = diagnostic::default_handler(diagnostic::Auto, None, true);\n     let span_diagnostic_handler =\n     diagnostic::mk_span_handler(diagnostic_handler, codemap);\n \n@@ -164,7 +164,7 @@ fn runtest(test: &str, cratename: &str, libs: SearchPaths,\n \n     // Compile the code\n     let codemap = CodeMap::new();\n-    let diagnostic_handler = diagnostic::mk_handler(box emitter);\n+    let diagnostic_handler = diagnostic::mk_handler(true, box emitter);\n     let span_diagnostic_handler =\n         diagnostic::mk_span_handler(diagnostic_handler, codemap);\n "}, {"sha": "01bb0e7a51c98a936b2823c6f08ff33aa5ac9918", "filename": "src/libsyntax/diagnostic.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Flibsyntax%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Flibsyntax%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostic.rs?ref=abc56a011a0c00ac85a896957ff6182d3d86f4aa", "patch": "@@ -143,6 +143,7 @@ impl SpanHandler {\n pub struct Handler {\n     err_count: Cell<usize>,\n     emit: RefCell<Box<Emitter + Send>>,\n+    pub can_emit_warnings: bool\n }\n \n impl Handler {\n@@ -195,17 +196,20 @@ impl Handler {\n                 cmsp: Option<(&codemap::CodeMap, Span)>,\n                 msg: &str,\n                 lvl: Level) {\n+        if lvl == Warning && !self.can_emit_warnings { return }\n         self.emit.borrow_mut().emit(cmsp, msg, None, lvl);\n     }\n     pub fn emit_with_code(&self,\n                           cmsp: Option<(&codemap::CodeMap, Span)>,\n                           msg: &str,\n                           code: &str,\n                           lvl: Level) {\n+        if lvl == Warning && !self.can_emit_warnings { return }\n         self.emit.borrow_mut().emit(cmsp, msg, Some(code), lvl);\n     }\n     pub fn custom_emit(&self, cm: &codemap::CodeMap,\n                        sp: RenderSpan, msg: &str, lvl: Level) {\n+        if lvl == Warning && !self.can_emit_warnings { return }\n         self.emit.borrow_mut().custom_emit(cm, sp, msg, lvl);\n     }\n }\n@@ -218,14 +222,16 @@ pub fn mk_span_handler(handler: Handler, cm: codemap::CodeMap) -> SpanHandler {\n }\n \n pub fn default_handler(color_config: ColorConfig,\n-                       registry: Option<diagnostics::registry::Registry>) -> Handler {\n-    mk_handler(box EmitterWriter::stderr(color_config, registry))\n+                       registry: Option<diagnostics::registry::Registry>,\n+                       can_emit_warnings: bool) -> Handler {\n+    mk_handler(can_emit_warnings, box EmitterWriter::stderr(color_config, registry))\n }\n \n-pub fn mk_handler(e: Box<Emitter + Send>) -> Handler {\n+pub fn mk_handler(can_emit_warnings: bool, e: Box<Emitter + Send>) -> Handler {\n     Handler {\n         err_count: Cell::new(0),\n         emit: RefCell::new(e),\n+        can_emit_warnings: can_emit_warnings\n     }\n }\n "}, {"sha": "6e797844c18c0b3cb3008ab32564553b74a64edc", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=abc56a011a0c00ac85a896957ff6182d3d86f4aa", "patch": "@@ -191,9 +191,11 @@ pub fn emit_feature_err(diag: &SpanHandler, feature: &str, span: Span, explain:\n \n pub fn emit_feature_warn(diag: &SpanHandler, feature: &str, span: Span, explain: &str) {\n     diag.span_warn(span, explain);\n-    diag.span_help(span, &format!(\"add #![feature({})] to the \\\n-                                   crate attributes to silence this warning\",\n-                                   feature)[]);\n+    if diag.handler.can_emit_warnings {\n+        diag.span_help(span, &format!(\"add #![feature({})] to the \\\n+                                       crate attributes to silence this warning\",\n+                                      feature)[]);\n+    }\n }\n \n struct MacroVisitor<'a> {"}, {"sha": "326aa1f3fc98bd001923abab06394e7bed6c238a", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=abc56a011a0c00ac85a896957ff6182d3d86f4aa", "patch": "@@ -45,7 +45,7 @@ pub struct ParseSess {\n \n pub fn new_parse_sess() -> ParseSess {\n     ParseSess {\n-        span_diagnostic: mk_span_handler(default_handler(Auto, None), CodeMap::new()),\n+        span_diagnostic: mk_span_handler(default_handler(Auto, None, true), CodeMap::new()),\n         included_mod_stack: RefCell::new(Vec::new()),\n         node_id: Cell::new(1),\n     }"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/test/run-make/allow-non-lint-warnings-cmdline/1", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Ftest%2Frun-make%2Fallow-non-lint-warnings-cmdline%2F1", "raw_url": "https://github.com/rust-lang/rust/raw/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Ftest%2Frun-make%2Fallow-non-lint-warnings-cmdline%2F1", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fallow-non-lint-warnings-cmdline%2F1?ref=abc56a011a0c00ac85a896957ff6182d3d86f4aa"}, {"sha": "961342591aa51efbb0bf060687b1c0b569ffc988", "filename": "src/test/run-make/allow-non-lint-warnings-cmdline/Makefile", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Ftest%2Frun-make%2Fallow-non-lint-warnings-cmdline%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Ftest%2Frun-make%2Fallow-non-lint-warnings-cmdline%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fallow-non-lint-warnings-cmdline%2FMakefile?ref=abc56a011a0c00ac85a896957ff6182d3d86f4aa", "patch": "@@ -0,0 +1,12 @@\n+-include ../tools.mk\n+\n+# Test that -A warnings makes the 'empty trait list for derive' warning go away\n+OUT=$(shell $(RUSTC) foo.rs -A warnings 2>&1 | grep \"warning\" )\n+\n+all: foo\n+\ttest -z '$(OUT)'\n+\n+# This is just to make sure the above command actually succeeds\n+foo:\n+\t$(RUSTC) foo.rs -A warnings\n+"}, {"sha": "19ce5d0a7ca40a60a787f82b8a6fd0fed6b1e783", "filename": "src/test/run-make/allow-non-lint-warnings-cmdline/foo.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Ftest%2Frun-make%2Fallow-non-lint-warnings-cmdline%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Ftest%2Frun-make%2Fallow-non-lint-warnings-cmdline%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fallow-non-lint-warnings-cmdline%2Ffoo.rs?ref=abc56a011a0c00ac85a896957ff6182d3d86f4aa", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[derive()]\n+#[derive(Copy)]\n+pub struct Foo;\n+\n+pub fn main() { }"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/test/run-make/allow-warnings-cmdline-stability/1", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Ftest%2Frun-make%2Fallow-warnings-cmdline-stability%2F1", "raw_url": "https://github.com/rust-lang/rust/raw/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Ftest%2Frun-make%2Fallow-warnings-cmdline-stability%2F1", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fallow-warnings-cmdline-stability%2F1?ref=abc56a011a0c00ac85a896957ff6182d3d86f4aa"}, {"sha": "64b7f58caeaf3e7e7be37dda3b90f25c82d65406", "filename": "src/test/run-make/allow-warnings-cmdline-stability/Makefile", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Ftest%2Frun-make%2Fallow-warnings-cmdline-stability%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Ftest%2Frun-make%2Fallow-warnings-cmdline-stability%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fallow-warnings-cmdline-stability%2FMakefile?ref=abc56a011a0c00ac85a896957ff6182d3d86f4aa", "patch": "@@ -0,0 +1,19 @@\n+-include ../tools.mk\n+\n+# Test that -A warnings makes the 'empty trait list for derive' warning go away\n+DEP=$(shell $(RUSTC) bar.rs)\n+OUT=$(shell $(RUSTC) foo.rs -A warnings 2>&1 | grep \"warning\" )\n+\n+all: foo bar\n+\ttest -z '$(OUT)'\n+\n+# These are just to ensure that the above commands actually work\n+bar:\n+\t$(RUSTC) bar.rs\n+\n+foo: bar\n+\t$(RUSTC) foo.rs -A warnings\n+\n+\n+\n+"}, {"sha": "6a683d96b03a046e57659af6ea976f4c12bb821a", "filename": "src/test/run-make/allow-warnings-cmdline-stability/bar.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Ftest%2Frun-make%2Fallow-warnings-cmdline-stability%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Ftest%2Frun-make%2Fallow-warnings-cmdline-stability%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fallow-warnings-cmdline-stability%2Fbar.rs?ref=abc56a011a0c00ac85a896957ff6182d3d86f4aa", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+#![feature(staged_api)]\n+#![staged_api]\n+#![unstable(feature = \"test_feature\")]\n+\n+pub fn baz() { }"}, {"sha": "fb23a214016a7ec41df3389036b118300d6d2410", "filename": "src/test/run-make/allow-warnings-cmdline-stability/foo.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Ftest%2Frun-make%2Fallow-warnings-cmdline-stability%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abc56a011a0c00ac85a896957ff6182d3d86f4aa/src%2Ftest%2Frun-make%2Fallow-warnings-cmdline-stability%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fallow-warnings-cmdline-stability%2Ffoo.rs?ref=abc56a011a0c00ac85a896957ff6182d3d86f4aa", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern crate bar;\n+\n+pub fn main() { bar::baz() }"}]}