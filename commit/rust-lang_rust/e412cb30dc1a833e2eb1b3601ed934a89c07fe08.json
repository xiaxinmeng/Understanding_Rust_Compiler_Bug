{"sha": "e412cb30dc1a833e2eb1b3601ed934a89c07fe08", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0MTJjYjMwZGMxYTgzM2UyZWIxYjM2MDFlZDkzNGE4OWMwN2ZlMDg=", "commit": {"author": {"name": "Danek Duvall", "email": "danek.duvall@oracle.com", "date": "2017-08-02T16:58:16Z"}, "committer": {"name": "Danek Duvall", "email": "danek.duvall@oracle.com", "date": "2017-08-02T16:58:16Z"}, "message": "Fix some unaligned reads on SPARC in LTO\n\nThis fixes #43593 by eliminating some undefined behavior.", "tree": {"sha": "8981888afd89a1498038fd9eae88cbbb1919ce16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8981888afd89a1498038fd9eae88cbbb1919ce16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e412cb30dc1a833e2eb1b3601ed934a89c07fe08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e412cb30dc1a833e2eb1b3601ed934a89c07fe08", "html_url": "https://github.com/rust-lang/rust/commit/e412cb30dc1a833e2eb1b3601ed934a89c07fe08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e412cb30dc1a833e2eb1b3601ed934a89c07fe08/comments", "author": null, "committer": null, "parents": [{"sha": "cd87b5d5162c7696498a5c1e17e1f7af68202eca", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd87b5d5162c7696498a5c1e17e1f7af68202eca", "html_url": "https://github.com/rust-lang/rust/commit/cd87b5d5162c7696498a5c1e17e1f7af68202eca"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "3e2d9f5c32e85fa68772d8fd12471d6f0d7c880e", "filename": "src/librustc_trans/back/lto.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e412cb30dc1a833e2eb1b3601ed934a89c07fe08/src%2Flibrustc_trans%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e412cb30dc1a833e2eb1b3601ed934a89c07fe08/src%2Flibrustc_trans%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flto.rs?ref=e412cb30dc1a833e2eb1b3601ed934a89c07fe08", "patch": "@@ -27,6 +27,7 @@ use flate2::read::DeflateDecoder;\n use std::io::Read;\n use std::ffi::CString;\n use std::path::Path;\n+use std::ptr::read_unaligned;\n \n pub fn crate_type_allows_lto(crate_type: config::CrateType) -> bool {\n     match crate_type {\n@@ -223,13 +224,13 @@ fn is_versioned_bytecode_format(bc: &[u8]) -> bool {\n fn extract_bytecode_format_version(bc: &[u8]) -> u32 {\n     let pos = link::RLIB_BYTECODE_OBJECT_VERSION_OFFSET;\n     let byte_data = &bc[pos..pos + 4];\n-    let data = unsafe { *(byte_data.as_ptr() as *const u32) };\n+    let data = unsafe { read_unaligned(byte_data.as_ptr() as *const u32) };\n     u32::from_le(data)\n }\n \n fn extract_compressed_bytecode_size_v1(bc: &[u8]) -> u64 {\n     let pos = link::RLIB_BYTECODE_OBJECT_V1_DATASIZE_OFFSET;\n     let byte_data = &bc[pos..pos + 8];\n-    let data = unsafe { *(byte_data.as_ptr() as *const u64) };\n+    let data = unsafe { read_unaligned(byte_data.as_ptr() as *const u64) };\n     u64::from_le(data)\n }"}]}