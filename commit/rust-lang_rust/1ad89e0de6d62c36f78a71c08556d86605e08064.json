{"sha": "1ad89e0de6d62c36f78a71c08556d86605e08064", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhZDg5ZTBkZTZkNjJjMzZmNzhhNzFjMDg1NTZkODY2MDVlMDgwNjQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-11-04T08:39:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-11-04T08:39:44Z"}, "message": "Auto merge of #29550 - nrc:save-root, r=alexcrichton", "tree": {"sha": "6599be74d81bccd6bfdb74d2823a9e7af3f4569f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6599be74d81bccd6bfdb74d2823a9e7af3f4569f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ad89e0de6d62c36f78a71c08556d86605e08064", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ad89e0de6d62c36f78a71c08556d86605e08064", "html_url": "https://github.com/rust-lang/rust/commit/1ad89e0de6d62c36f78a71c08556d86605e08064", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ad89e0de6d62c36f78a71c08556d86605e08064/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc403b6c33ded2c99ff75207cd2c83290942bc39", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc403b6c33ded2c99ff75207cd2c83290942bc39", "html_url": "https://github.com/rust-lang/rust/commit/cc403b6c33ded2c99ff75207cd2c83290942bc39"}, {"sha": "6252af9ce10f522dbd5b58bdbbeff1b3e8464066", "url": "https://api.github.com/repos/rust-lang/rust/commits/6252af9ce10f522dbd5b58bdbbeff1b3e8464066", "html_url": "https://github.com/rust-lang/rust/commit/6252af9ce10f522dbd5b58bdbbeff1b3e8464066"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "3ea631bd7fb67e143d42ec07f08d512d3fce0b3e", "filename": "src/librustc_trans/save/dump_csv.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1ad89e0de6d62c36f78a71c08556d86605e08064/src%2Flibrustc_trans%2Fsave%2Fdump_csv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ad89e0de6d62c36f78a71c08556d86605e08064/src%2Flibrustc_trans%2Fsave%2Fdump_csv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fsave%2Fdump_csv.rs?ref=1ad89e0de6d62c36f78a71c08556d86605e08064", "patch": "@@ -107,8 +107,17 @@ impl <'l, 'tcx> DumpCsvVisitor<'l, 'tcx> {\n     }\n \n     pub fn dump_crate_info(&mut self, name: &str, krate: &ast::Crate) {\n+        let source_file = self.tcx.sess.local_crate_source_file.as_ref();\n+        let crate_root = match source_file {\n+            Some(source_file) => match source_file.file_name() {\n+                Some(_) => source_file.parent().unwrap().display().to_string(),\n+                None => source_file.display().to_string(),\n+            },\n+            None => \"<no source>\".to_owned(),\n+        };\n+\n         // The current crate.\n-        self.fmt.crate_str(krate.span, name);\n+        self.fmt.crate_str(krate.span, name, &crate_root);\n \n         // Dump info about all the external crates referenced from this crate.\n         for c in &self.save_ctxt.get_external_crates() {"}, {"sha": "34eb1d282636ed90a7d9c3c9bdc30b650468ef32", "filename": "src/librustc_trans/save/recorder.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ad89e0de6d62c36f78a71c08556d86605e08064/src%2Flibrustc_trans%2Fsave%2Frecorder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ad89e0de6d62c36f78a71c08556d86605e08064/src%2Flibrustc_trans%2Fsave%2Frecorder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fsave%2Frecorder.rs?ref=1ad89e0de6d62c36f78a71c08556d86605e08064", "patch": "@@ -198,7 +198,7 @@ impl<'a, 'tcx: 'a> FmtStrs<'a, 'tcx> {\n                               vec!(\"name\", \"crate\", \"file_name\"),\n                               false,\n                               false),\n-            Crate => (\"crate\", vec!(\"name\"), true, false),\n+            Crate => (\"crate\", vec!(\"name\", \"crate_root\"), true, false),\n             FnCall => (\"fn_call\",\n                        vec!(\"refid\", \"refidcrate\", \"qualname\", \"scopeid\"),\n                        true,\n@@ -658,8 +658,8 @@ impl<'a, 'tcx: 'a> FmtStrs<'a, 'tcx> {\n         self.check_and_record(Typedef, span, sub_span, svec!(id, qualname, value));\n     }\n \n-    pub fn crate_str(&mut self, span: Span, name: &str) {\n-        self.record_with_span(Crate, span, span, svec!(name));\n+    pub fn crate_str(&mut self, span: Span, name: &str, crate_root: &str) {\n+        self.record_with_span(Crate, span, span, svec!(name, crate_root));\n     }\n \n     pub fn external_crate_str(&mut self, span: Span, name: &str, num: ast::CrateNum) {"}]}