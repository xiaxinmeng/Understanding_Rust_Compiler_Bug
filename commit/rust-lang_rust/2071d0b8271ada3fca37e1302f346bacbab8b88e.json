{"sha": "2071d0b8271ada3fca37e1302f346bacbab8b88e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwNzFkMGI4MjcxYWRhM2ZjYTM3ZTEzMDJmMzQ2YmFjYmFiOGI4OGU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-04-04T13:25:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-04T13:25:20Z"}, "message": "Merge #3845\n\n3845: Simplify config r=matklad a=Veetaha\n\n\n\nCo-authored-by: veetaha <veetaha2@gmail.com>", "tree": {"sha": "1ea57abab37ee4cb209a8fb96144abcb4410dbbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ea57abab37ee4cb209a8fb96144abcb4410dbbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2071d0b8271ada3fca37e1302f346bacbab8b88e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeiIrACRBK7hj4Ov3rIwAAdHIIAJMK3exyz64Cv/sszmxyndvs\nb9TX/OGmpQZimBbEf8446dMymSI8WLxoZhXCD+HkYCQHWMYvFg8COx7B9p0ZtgMc\nvIw4LV/t2iLbGRqwIVKjCsFYqTClWpDrvl9WLQj52Veh2i3iGo6aIUhpf42Y26kB\nUJN91ugyK3qvhjaufrwFd+6kffUMYQjGYfPe9Z0vxaJEd5xWrVQ5a+2mDUA78/eA\nGuBvDJVRTwMkULZVv6Ys+rU6p2FEGAnvHR7PY5cOCQGNb90uEB+WaaFuu26oAQA/\nrTjnIMhe5VFBwokLRBqhxxCJratJme794QomXX85hBlQEM0uaqH/FNxBaDdKBzc=\n=Guhd\n-----END PGP SIGNATURE-----\n", "payload": "tree 1ea57abab37ee4cb209a8fb96144abcb4410dbbf\nparent cdb80ef03962c334e53858f482132efccb23e342\nparent a1773f8a6780d8e9f9953a50cfb6bdf43d37ee3a\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1586006720 +0000\ncommitter GitHub <noreply@github.com> 1586006720 +0000\n\nMerge #3845\n\n3845: Simplify config r=matklad a=Veetaha\n\n\n\nCo-authored-by: veetaha <veetaha2@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2071d0b8271ada3fca37e1302f346bacbab8b88e", "html_url": "https://github.com/rust-lang/rust/commit/2071d0b8271ada3fca37e1302f346bacbab8b88e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2071d0b8271ada3fca37e1302f346bacbab8b88e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdb80ef03962c334e53858f482132efccb23e342", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdb80ef03962c334e53858f482132efccb23e342", "html_url": "https://github.com/rust-lang/rust/commit/cdb80ef03962c334e53858f482132efccb23e342"}, {"sha": "a1773f8a6780d8e9f9953a50cfb6bdf43d37ee3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1773f8a6780d8e9f9953a50cfb6bdf43d37ee3a", "html_url": "https://github.com/rust-lang/rust/commit/a1773f8a6780d8e9f9953a50cfb6bdf43d37ee3a"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "b6a015790223b2aa69cd46db00eaf43e6d8ccd10", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/2071d0b8271ada3fca37e1302f346bacbab8b88e/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2071d0b8271ada3fca37e1302f346bacbab8b88e/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=2071d0b8271ada3fca37e1302f346bacbab8b88e", "patch": "@@ -120,12 +120,10 @@ impl Config {\n         set(value, \"/withSysroot\", &mut self.with_sysroot);\n         set(value, \"/featureFlags/lsp.diagnostics\", &mut self.publish_diagnostics);\n         set(value, \"/lruCapacity\", &mut self.lru_capacity);\n-        if let Some(watcher) =  get::<String>(value, \"/files/watcher\") {\n-            self.files.watcher = match watcher.as_str() {\n-                \"client\" => FilesWatcher::Client,\n-                \"notify\"| _ => FilesWatcher::Notify,\n-            }\n-        }\n+        self.files.watcher = match get(value, \"/files/watcher\") {\n+            Some(\"client\") => FilesWatcher::Client,\n+            Some(\"notify\") | _ => FilesWatcher::Notify\n+        };\n         set(value, \"/notifications/workspaceLoaded\", &mut self.notifications.workspace_loaded);\n         set(value, \"/notifications/cargoTomlNotFound\", &mut self.notifications.cargo_toml_not_found);\n \n@@ -144,16 +142,17 @@ impl Config {\n         } else if let RustfmtConfig::Rustfmt { extra_args } = &mut self.rustfmt {\n             set(value, \"/rustfmt/extraArgs\", extra_args);\n         }\n+\n         if let Some(false) = get(value, \"/checkOnSave/enable\") {\n-            self.check = None\n+            self.check = None;\n         } else {\n             if let Some(mut args) = get::<Vec<String>>(value, \"/checkOnSave/overrideCommand\") {\n                 if !args.is_empty() {\n                     let command = args.remove(0);\n                     self.check = Some(FlycheckConfig::CustomCommand {\n                         command,\n                         args,\n-                    })\n+                    });\n                 }\n \n             } else if let Some(FlycheckConfig::CargoCommand { command, extra_args, all_targets }) = &mut self.check\n@@ -179,7 +178,7 @@ impl Config {\n             value.pointer(pointer).and_then(|it| T::deserialize(it).ok())\n         }\n \n-        fn set<'a, T: Deserialize<'a> + std::fmt::Debug>(value: &'a serde_json::Value, pointer: &str, slot: &mut T) {\n+        fn set<'a, T: Deserialize<'a>>(value: &'a serde_json::Value, pointer: &str, slot: &mut T) {\n             if let Some(new_value) = get(value, pointer) {\n                 *slot = new_value\n             }"}]}