{"sha": "7647d03c33339bd85a1665047b22ae7e800fee98", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NDdkMDNjMzMzMzliZDg1YTE2NjUwNDdiMjJhZTdlODAwZmVlOTg=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-12-09T20:12:39Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-12-09T20:31:37Z"}, "message": "Improve comment grammar", "tree": {"sha": "5b5d1c7da5fea96f58854f28555c36295d41d4b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b5d1c7da5fea96f58854f28555c36295d41d4b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7647d03c33339bd85a1665047b22ae7e800fee98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7647d03c33339bd85a1665047b22ae7e800fee98", "html_url": "https://github.com/rust-lang/rust/commit/7647d03c33339bd85a1665047b22ae7e800fee98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7647d03c33339bd85a1665047b22ae7e800fee98/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "028754a2f7f62ed1e4df889fadfa74eb2d007109", "url": "https://api.github.com/repos/rust-lang/rust/commits/028754a2f7f62ed1e4df889fadfa74eb2d007109", "html_url": "https://github.com/rust-lang/rust/commit/028754a2f7f62ed1e4df889fadfa74eb2d007109"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "200dbf06ff8a6c236eb2378b0cf2468a83918e82", "filename": "library/std/src/sys/unix/kernel_copy.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7647d03c33339bd85a1665047b22ae7e800fee98/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fkernel_copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7647d03c33339bd85a1665047b22ae7e800fee98/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fkernel_copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fkernel_copy.rs?ref=7647d03c33339bd85a1665047b22ae7e800fee98", "patch": "@@ -498,8 +498,8 @@ impl CopyResult {\n /// Thus -1 will never be overlap with a valid open file.\n const INVALID_FD: RawFd = -1;\n \n-/// linux-specific implementation that will attempt to use copy_file_range for copy offloading\n-/// as the name says, it only works on regular files\n+/// Linux-specific implementation that will attempt to use copy_file_range for copy offloading.\n+/// As the name says, it only works on regular files.\n ///\n /// Callers must handle fallback to a generic copy loop.\n /// `Fallback` may indicate non-zero number of bytes already written"}]}