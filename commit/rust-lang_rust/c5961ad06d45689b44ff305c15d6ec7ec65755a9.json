{"sha": "c5961ad06d45689b44ff305c15d6ec7ec65755a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1OTYxYWQwNmQ0NTY4OWI0NGZmMzA1YzE1ZDZlYzdlYzY1NzU1YTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-01-28T21:49:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-01-28T21:49:38Z"}, "message": "Auto merge of #21522 - nikomatsakis:assoc-type-ice-hunt-take-3, r=nick29581\n\nDo not propagate the region requirements on the projected type to the input types it is being projected from.\r\n\r\nFixes #21520.\r\n\r\nr? @aturon", "tree": {"sha": "b8b2b5dc33153ef742d1ccf538be537f1476c756", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8b2b5dc33153ef742d1ccf538be537f1476c756"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5961ad06d45689b44ff305c15d6ec7ec65755a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5961ad06d45689b44ff305c15d6ec7ec65755a9", "html_url": "https://github.com/rust-lang/rust/commit/c5961ad06d45689b44ff305c15d6ec7ec65755a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5961ad06d45689b44ff305c15d6ec7ec65755a9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee0be3b3e76773618bf230b7188ac633ac0e76aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee0be3b3e76773618bf230b7188ac633ac0e76aa", "html_url": "https://github.com/rust-lang/rust/commit/ee0be3b3e76773618bf230b7188ac633ac0e76aa"}, {"sha": "69bc112e723d3117f81552aeee44e9f6beae3584", "url": "https://api.github.com/repos/rust-lang/rust/commits/69bc112e723d3117f81552aeee44e9f6beae3584", "html_url": "https://github.com/rust-lang/rust/commit/69bc112e723d3117f81552aeee44e9f6beae3584"}], "stats": {"total": 34, "additions": 29, "deletions": 5}, "files": [{"sha": "cbd51a880ce4914c7fb9c0a3e247e133b5e700bc", "filename": "src/librustc_typeck/check/regionmanip.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c5961ad06d45689b44ff305c15d6ec7ec65755a9/src%2Flibrustc_typeck%2Fcheck%2Fregionmanip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5961ad06d45689b44ff305c15d6ec7ec65755a9/src%2Flibrustc_typeck%2Fcheck%2Fregionmanip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionmanip.rs?ref=c5961ad06d45689b44ff305c15d6ec7ec65755a9", "patch": "@@ -123,11 +123,6 @@ impl<'a, 'tcx> Wf<'a, 'tcx> {\n                 // `<T as TraitRef<..>>::Name`\n \n                 self.push_projection_constraint_from_top(data);\n-\n-                // this seems like a minimal requirement:\n-                let trait_def = ty::lookup_trait_def(self.tcx, data.trait_ref.def_id);\n-                self.accumulate_from_adt(ty, data.trait_ref.def_id,\n-                                         &trait_def.generics, data.trait_ref.substs)\n             }\n \n             ty::ty_tup(ref tuptys) => {"}, {"sha": "3a813641a3f37490b8b34d94b4ac4105174993a3", "filename": "src/test/run-pass/issue-21520.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/c5961ad06d45689b44ff305c15d6ec7ec65755a9/src%2Ftest%2Frun-pass%2Fissue-21520.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5961ad06d45689b44ff305c15d6ec7ec65755a9/src%2Ftest%2Frun-pass%2Fissue-21520.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-21520.rs?ref=c5961ad06d45689b44ff305c15d6ec7ec65755a9", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that the requirement (in `Bar`) that `T::Bar : 'static` does\n+// not wind up propagating to `T`.\n+\n+pub trait Foo {\n+    type Bar;\n+\n+    fn foo(&self) -> Self;\n+}\n+\n+pub struct Static<T:'static>(T);\n+\n+struct Bar<T:Foo>\n+    where T::Bar : 'static\n+{\n+    x: Static<Option<T::Bar>>\n+}\n+\n+fn main() { }\n+"}]}