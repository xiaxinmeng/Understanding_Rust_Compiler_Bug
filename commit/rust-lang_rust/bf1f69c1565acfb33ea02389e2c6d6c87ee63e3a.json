{"sha": "bf1f69c1565acfb33ea02389e2c6d6c87ee63e3a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMWY2OWMxNTY1YWNmYjMzZWEwMjM4OWUyYzZkNmM4N2VlNjNlM2E=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-07-08T23:21:09Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-07-11T20:15:52Z"}, "message": "extra: add ToJson for TreeMap.", "tree": {"sha": "b5c081966053887ae31d144df197450ce8bea4c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5c081966053887ae31d144df197450ce8bea4c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf1f69c1565acfb33ea02389e2c6d6c87ee63e3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf1f69c1565acfb33ea02389e2c6d6c87ee63e3a", "html_url": "https://github.com/rust-lang/rust/commit/bf1f69c1565acfb33ea02389e2c6d6c87ee63e3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf1f69c1565acfb33ea02389e2c6d6c87ee63e3a/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e67bc37ff0854fbd2b27d3e5ae73639b490cbad", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e67bc37ff0854fbd2b27d3e5ae73639b490cbad", "html_url": "https://github.com/rust-lang/rust/commit/9e67bc37ff0854fbd2b27d3e5ae73639b490cbad"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "3567d5001bdf1c695241019b50f0f040f99affa1", "filename": "src/libextra/json.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bf1f69c1565acfb33ea02389e2c6d6c87ee63e3a/src%2Flibextra%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf1f69c1565acfb33ea02389e2c6d6c87ee63e3a/src%2Flibextra%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fjson.rs?ref=bf1f69c1565acfb33ea02389e2c6d6c87ee63e3a", "patch": "@@ -27,6 +27,7 @@ use std::to_str;\n use serialize::Encodable;\n use serialize;\n use sort::Sort;\n+use treemap::TreeMap;\n \n /// Represents a json value\n pub enum Json {\n@@ -1340,6 +1341,16 @@ impl<A:ToJson + Copy> ToJson for HashMap<~str, A> {\n     }\n }\n \n+impl<A:ToJson + Copy> ToJson for TreeMap<~str, A> {\n+    fn to_json(&self) -> Json {\n+        let mut d = HashMap::new();\n+        for self.iter().advance |(key, value)| {\n+            d.insert(copy *key, value.to_json());\n+        }\n+        Object(~d)\n+    }\n+}\n+\n impl<A:ToJson> ToJson for Option<A> {\n     fn to_json(&self) -> Json {\n         match *self {"}]}