{"sha": "92adac9b10e4890124b80eecbcf44dd22e9c92e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyYWRhYzliMTBlNDg5MDEyNGI4MGVlY2JjZjQ0ZGQyMmU5YzkyZTY=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-11-09T00:13:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-09T00:13:50Z"}, "message": "Rollup merge of #78882 - bjorn3:nicer_hunk_headers, r=Mark-Simulacrum\n\nNicer hunk headers for rust files\n\nI found this trick at <https://tekin.co.uk/2020/10/better-git-diff-output-for-ruby-python-elixir-and-more>\n\nBefore the hunk headers for changes in methods would refer to the impl:\n\n```diff\ndiff --git a/compiler/rustc_middle/src/ty/context.rs b/compiler/rustc_middle/src/ty/context.rs\nindex 1c6937e685c..fa4264d729b 100644\n--- a/compiler/rustc_middle/src/ty/context.rs\n+++ b/compiler/rustc_middle/src/ty/context.rs\n``@@`` -678,7 +678,7 ``@@`` impl<'a, 'tcx> HashStable<StableHashingContext<'a>> for TypeckResults<'tcx> {\n             ref closure_captures,\n             ref generator_interior_types,\n         } = *self;\n-\n+        // foo\n         hcx.with_node_id_hashing_mode(NodeIdHashingMode::HashDefPath, |hcx| {\n             type_dependent_defs.hash_stable(hcx, hasher);\n             field_indices.hash_stable(hcx, hasher);\n```\n\nAfter the hunk headers refer to the actual function signature:\n\n```diff\ndiff --git a/compiler/rustc_middle/src/ty/context.rs b/compiler/rustc_middle/src/ty/context.rs\nindex 1c6937e685c..fa4264d729b 100644\n--- a/compiler/rustc_middle/src/ty/context.rs\n+++ b/compiler/rustc_middle/src/ty/context.rs\n``@@`` -678,7 +678,7 ``@@`` fn hash_stable(&self, hcx: &mut StableHashingContext<'a>, hasher: &mut StableHas\n             ref closure_captures,\n             ref generator_interior_types,\n         } = *self;\n-\n+        // foo\n         hcx.with_node_id_hashing_mode(NodeIdHashingMode::HashDefPath, |hcx| {\n             type_dependent_defs.hash_stable(hcx, hasher);\n             field_indices.hash_stable(hcx, hasher);\n```\n\nWhen the function signature is visible, it will use the function\nsignature of the previous method as hunk header:\n\n```diff\ndiff --git a/compiler/rustc_middle/src/ty/context.rs b/compiler/rustc_middle/src/ty/context.rs\nindex 1c6937e685c..63058dfc837 100644\n--- a/compiler/rustc_middle/src/ty/context.rs\n+++ b/compiler/rustc_middle/src/ty/context.rs\n``@@`` -992,6 +992,7 ``@@`` pub fn typeck_opt_const_arg(\n     }\n\n     pub fn alloc_steal_mir(self, mir: Body<'tcx>) -> &'tcx Steal<Body<'tcx>> {\n+        // foo\n         self.arena.alloc(Steal::new(mir))\n     }\n```", "tree": {"sha": "9cc07f8445977fac41e92110426c83ae0a8b7aa9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cc07f8445977fac41e92110426c83ae0a8b7aa9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92adac9b10e4890124b80eecbcf44dd22e9c92e6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfqIm+CRBK7hj4Ov3rIwAAdHIIAKnNWumbPbXu5HYk8LEwnjL4\nkKtm1Xws4jRGHFVekkE/nzohTe8+1nLoeT03LENzb/gT8cQa/iorVGAEMoZRQ8Ja\nrR2bi6sNcoTHmvQjRfp3wU1/PDRAjn8/OiI5EKDVy1A89PBweqs9G/jRQG+6e6lC\ncjbYUA2RzBK0YyJX9kV5k22flKPIdt4/k6T2nflVN2O4zYoYzEgkWiJxH2U9dSmE\nFnWzYeJTXNJnLZP2Z+L3CS8uoy3i1fI/jr5O9hRnUcpFN+1F6XjFf7bQQsLweWSQ\nzjvXyFXp/FJkWU4HRwKuWVKoP+FObKWhZjBg27hB0F6iS6kGLjzhrm5ooClyiGk=\n=lpZ3\n-----END PGP SIGNATURE-----\n", "payload": "tree 9cc07f8445977fac41e92110426c83ae0a8b7aa9\nparent a8beaa3b3c0f5307197b3d8d421d0ac05c0d7a6e\nparent 39046172ab91805efb79a55870c2ced2d61cfc3a\nauthor Dylan DPC <dylan.dpc@gmail.com> 1604880830 +0100\ncommitter GitHub <noreply@github.com> 1604880830 +0100\n\nRollup merge of #78882 - bjorn3:nicer_hunk_headers, r=Mark-Simulacrum\n\nNicer hunk headers for rust files\n\nI found this trick at <https://tekin.co.uk/2020/10/better-git-diff-output-for-ruby-python-elixir-and-more>\n\nBefore the hunk headers for changes in methods would refer to the impl:\n\n```diff\ndiff --git a/compiler/rustc_middle/src/ty/context.rs b/compiler/rustc_middle/src/ty/context.rs\nindex 1c6937e685c..fa4264d729b 100644\n--- a/compiler/rustc_middle/src/ty/context.rs\n+++ b/compiler/rustc_middle/src/ty/context.rs\n``@@`` -678,7 +678,7 ``@@`` impl<'a, 'tcx> HashStable<StableHashingContext<'a>> for TypeckResults<'tcx> {\n             ref closure_captures,\n             ref generator_interior_types,\n         } = *self;\n-\n+        // foo\n         hcx.with_node_id_hashing_mode(NodeIdHashingMode::HashDefPath, |hcx| {\n             type_dependent_defs.hash_stable(hcx, hasher);\n             field_indices.hash_stable(hcx, hasher);\n```\n\nAfter the hunk headers refer to the actual function signature:\n\n```diff\ndiff --git a/compiler/rustc_middle/src/ty/context.rs b/compiler/rustc_middle/src/ty/context.rs\nindex 1c6937e685c..fa4264d729b 100644\n--- a/compiler/rustc_middle/src/ty/context.rs\n+++ b/compiler/rustc_middle/src/ty/context.rs\n``@@`` -678,7 +678,7 ``@@`` fn hash_stable(&self, hcx: &mut StableHashingContext<'a>, hasher: &mut StableHas\n             ref closure_captures,\n             ref generator_interior_types,\n         } = *self;\n-\n+        // foo\n         hcx.with_node_id_hashing_mode(NodeIdHashingMode::HashDefPath, |hcx| {\n             type_dependent_defs.hash_stable(hcx, hasher);\n             field_indices.hash_stable(hcx, hasher);\n```\n\nWhen the function signature is visible, it will use the function\nsignature of the previous method as hunk header:\n\n```diff\ndiff --git a/compiler/rustc_middle/src/ty/context.rs b/compiler/rustc_middle/src/ty/context.rs\nindex 1c6937e685c..63058dfc837 100644\n--- a/compiler/rustc_middle/src/ty/context.rs\n+++ b/compiler/rustc_middle/src/ty/context.rs\n``@@`` -992,6 +992,7 ``@@`` pub fn typeck_opt_const_arg(\n     }\n\n     pub fn alloc_steal_mir(self, mir: Body<'tcx>) -> &'tcx Steal<Body<'tcx>> {\n+        // foo\n         self.arena.alloc(Steal::new(mir))\n     }\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92adac9b10e4890124b80eecbcf44dd22e9c92e6", "html_url": "https://github.com/rust-lang/rust/commit/92adac9b10e4890124b80eecbcf44dd22e9c92e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92adac9b10e4890124b80eecbcf44dd22e9c92e6/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8beaa3b3c0f5307197b3d8d421d0ac05c0d7a6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8beaa3b3c0f5307197b3d8d421d0ac05c0d7a6e", "html_url": "https://github.com/rust-lang/rust/commit/a8beaa3b3c0f5307197b3d8d421d0ac05c0d7a6e"}, {"sha": "39046172ab91805efb79a55870c2ced2d61cfc3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/39046172ab91805efb79a55870c2ced2d61cfc3a", "html_url": "https://github.com/rust-lang/rust/commit/39046172ab91805efb79a55870c2ced2d61cfc3a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2c5c37007d5bc1c2dc03adaeff3ba6399ba67fa1", "filename": ".gitattributes", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/92adac9b10e4890124b80eecbcf44dd22e9c92e6/.gitattributes", "raw_url": "https://github.com/rust-lang/rust/raw/92adac9b10e4890124b80eecbcf44dd22e9c92e6/.gitattributes", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitattributes?ref=92adac9b10e4890124b80eecbcf44dd22e9c92e6", "patch": "@@ -3,7 +3,7 @@\n * text=auto eol=lf\n *.cpp rust\n *.h rust\n-*.rs rust\n+*.rs rust diff=rust\n *.fixed linguist-language=Rust\n src/etc/installer/gfx/* binary\n *.woff binary"}]}