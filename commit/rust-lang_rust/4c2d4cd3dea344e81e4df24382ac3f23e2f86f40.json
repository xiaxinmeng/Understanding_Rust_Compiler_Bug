{"sha": "4c2d4cd3dea344e81e4df24382ac3f23e2f86f40", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjMmQ0Y2QzZGVhMzQ0ZTgxZTRkZjI0MzgyYWMzZjIzZTJmODZmNDA=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2014-07-25T05:29:12Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2014-07-25T05:29:12Z"}, "message": "Add noalias to safe shared reference parameters\n\nThis add the LLVM noalias attribute to parameters of a\nshared reference type (&) which have a safe interior.", "tree": {"sha": "f324d6391ca41766748328870cc3fa3f7159fe37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f324d6391ca41766748328870cc3fa3f7159fe37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c2d4cd3dea344e81e4df24382ac3f23e2f86f40", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c2d4cd3dea344e81e4df24382ac3f23e2f86f40", "html_url": "https://github.com/rust-lang/rust/commit/4c2d4cd3dea344e81e4df24382ac3f23e2f86f40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c2d4cd3dea344e81e4df24382ac3f23e2f86f40/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4553453a0f928a4d49492d87b352552919ae4c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4553453a0f928a4d49492d87b352552919ae4c2", "html_url": "https://github.com/rust-lang/rust/commit/a4553453a0f928a4d49492d87b352552919ae4c2"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "fcdcb7847cb7650f0183e57f731491af5faa7af9", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4c2d4cd3dea344e81e4df24382ac3f23e2f86f40/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c2d4cd3dea344e81e4df24382ac3f23e2f86f40/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=4c2d4cd3dea344e81e4df24382ac3f23e2f86f40", "patch": "@@ -2140,7 +2140,10 @@ pub fn get_fn_llvm_attributes(ccx: &CrateContext, fn_ty: ty::t)\n                 attrs.push((idx, llvm::NonNullAttribute as u64));\n             }\n             // `&mut` pointer parameters never alias other parameters, or mutable global data\n-            ty::ty_rptr(b, mt) if mt.mutbl == ast::MutMutable => {\n+            // `&` pointer parameters never alias either (for LLVM's purposes) as long as the\n+            // interior is safe\n+            ty::ty_rptr(b, mt) if mt.mutbl == ast::MutMutable ||\n+                                  !ty::type_contents(ccx.tcx(), mt.ty).interior_unsafe() => {\n                 attrs.push((idx, llvm::NoAliasAttribute as u64));\n                 attrs.push((idx, llvm::NonNullAttribute as u64));\n                 match b {"}]}