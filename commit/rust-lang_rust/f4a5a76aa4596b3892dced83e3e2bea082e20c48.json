{"sha": "f4a5a76aa4596b3892dced83e3e2bea082e20c48", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0YTVhNzZhYTQ1OTZiMzg5MmRjZWQ4M2UzZTJiZWEwODJlMjBjNDg=", "commit": {"author": {"name": "Ben Striegel", "email": "ben.striegel@gmail.com", "date": "2012-11-14T06:22:37Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-11-15T03:26:37Z"}, "message": "Convert the test suite to use the Drop trait", "tree": {"sha": "ccfb8d72438ca840d0a9c892de498edc8decd1e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ccfb8d72438ca840d0a9c892de498edc8decd1e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4a5a76aa4596b3892dced83e3e2bea082e20c48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4a5a76aa4596b3892dced83e3e2bea082e20c48", "html_url": "https://github.com/rust-lang/rust/commit/f4a5a76aa4596b3892dced83e3e2bea082e20c48", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4a5a76aa4596b3892dced83e3e2bea082e20c48/comments", "author": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e650f2d2c83a191a0546b394a87ba348934db4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e650f2d2c83a191a0546b394a87ba348934db4f", "html_url": "https://github.com/rust-lang/rust/commit/6e650f2d2c83a191a0546b394a87ba348934db4f"}], "stats": {"total": 623, "additions": 462, "deletions": 161}, "files": [{"sha": "d17de197e24a97e5582578997a301f864e6ecbfa", "filename": "src/test/auxiliary/issue-2526.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fauxiliary%2Fissue-2526.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fauxiliary%2Fissue-2526.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-2526.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -9,7 +9,10 @@ export context;\n \n struct arc_destruct<T:Const> {\n   _data: int,\n-  drop {}\n+}\n+\n+impl<T:Const> arc_destruct<T> : Drop {\n+    fn finalize() {}\n }\n \n fn arc_destruct<T: Const>(data: int) -> arc_destruct<T> {\n@@ -28,8 +31,10 @@ fn init() -> arc_destruct<context_res> unsafe {\n \n struct context_res {\n     ctx : int,\n+}\n \n-    drop { }\n+impl context_res : Drop {\n+    fn finalize() {}\n }\n \n fn context_res() -> context_res {"}, {"sha": "ba123cf5254e1071cd69333ea51abe154ff8039e", "filename": "src/test/auxiliary/issue-3012-1.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fauxiliary%2Fissue-3012-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fauxiliary%2Fissue-3012-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-3012-1.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -9,7 +9,12 @@ export socket_handle;\n \n struct socket_handle {\n     sockfd: libc::c_int,\n-    drop { /* c::close(self.sockfd); */ }\n+}\n+\n+impl socket_handle : Drop {\n+    fn finalize() {\n+        /* c::close(self.sockfd); */\n+    }\n }\n \n     fn socket_handle(x: libc::c_int) -> socket_handle {"}, {"sha": "3ce738fd5e0c6420df55f9a156cb2f570109a630", "filename": "src/test/auxiliary/issue2170lib.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fauxiliary%2Fissue2170lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fauxiliary%2Fissue2170lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue2170lib.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -5,11 +5,16 @@ fn foo(_x: i32) {\n \n struct rsrc {\n   x: i32,\n-  drop { foo(self.x); }\n+}\n+\n+impl rsrc : Drop {\n+    fn finalize() {\n+        foo(self.x);\n+    }\n }\n \n fn rsrc(x: i32) -> rsrc {\n     rsrc {\n         x: x\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "9664dc24c333578ea7eae546c5f7aa74d0b54f2d", "filename": "src/test/auxiliary/test_comm.rs", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fauxiliary%2Ftest_comm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fauxiliary%2Ftest_comm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Ftest_comm.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -29,23 +29,28 @@ fn port<T: Send>() -> port<T> {\n \n struct port_ptr<T:Send> {\n    po: *rust_port,\n-   drop unsafe {\n-    debug!(\"in the port_ptr destructor\");\n-       do task::unkillable {\n-        let yield = 0u;\n-        let yieldp = ptr::addr_of(&yield);\n-        rustrt::rust_port_begin_detach(self.po, yieldp);\n-        if yield != 0u {\n-            task::yield();\n-        }\n-        rustrt::rust_port_end_detach(self.po);\n+}\n \n-        while rustrt::rust_port_size(self.po) > 0u as size_t {\n-            recv_::<T>(self.po);\n+impl<T:Send> port_ptr<T> : Drop {\n+    fn finalize() {\n+        unsafe {\n+            debug!(\"in the port_ptr destructor\");\n+               do task::unkillable {\n+                let yield = 0u;\n+                let yieldp = ptr::addr_of(&yield);\n+                rustrt::rust_port_begin_detach(self.po, yieldp);\n+                if yield != 0u {\n+                    task::yield();\n+                }\n+                rustrt::rust_port_end_detach(self.po);\n+\n+                while rustrt::rust_port_size(self.po) > 0u as size_t {\n+                    recv_::<T>(self.po);\n+                }\n+                rustrt::del_port(self.po);\n+            }\n         }\n-        rustrt::del_port(self.po);\n     }\n-  }\n }\n \n fn port_ptr<T: Send>(po: *rust_port) -> port_ptr<T> {"}, {"sha": "65fb9ec17391846ae6138973d53401c3073dbaec", "filename": "src/test/bench/task-perf-alloc-unwind.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fbench%2Ftask-perf-alloc-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fbench%2Ftask-perf-alloc-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Ftask-perf-alloc-unwind.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -42,7 +42,10 @@ enum st {\n \n struct r {\n   _l: @nillist,\n-  drop {}\n+}\n+\n+impl r : Drop {\n+    fn finalize() {}\n }\n \n fn r(l: @nillist) -> r {"}, {"sha": "1f7989d1ae935706be5c6ec3c4293d79f7272be7", "filename": "src/test/compile-fail/bind-by-move-neither-can-live-while-the-other-survives-1.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-1.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,4 +1,10 @@\n-struct X { x: (), drop { error!(\"destructor runs\"); } }\n+struct X { x: () }\n+\n+impl X : Drop {\n+    fn finalize() {\n+        error!(\"destructor runs\");\n+    }\n+}\n \n fn main() {\n     let x = Some(X { x: () });"}, {"sha": "598fc4b0a0805141eec1dd8fdf1231643a346f6e", "filename": "src/test/compile-fail/bind-by-move-neither-can-live-while-the-other-survives-2.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-2.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,4 +1,10 @@\n-struct X { x: (), drop { error!(\"destructor runs\"); } }\n+struct X { x: (), }\n+\n+impl X : Drop {\n+    fn finalize() {\n+        error!(\"destructor runs\");\n+    }\n+}\n \n fn main() {\n     let x = Some((X { x: () }, X { x: () }));"}, {"sha": "1cd62e928892266016d1a2ca98f58e0601a9d694", "filename": "src/test/compile-fail/bind-by-move-neither-can-live-while-the-other-survives-3.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-3.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,4 +1,10 @@\n-struct X { x: (), drop { error!(\"destructor runs\"); } }\n+struct X { x: (), }\n+\n+impl X : Drop {\n+    fn finalize() {\n+        error!(\"destructor runs\");\n+    }\n+}\n \n enum double_option<T,U> { some2(T,U), none2 }\n "}, {"sha": "3cd6c45af0b8a02f08e98f4e117b71082b54cf4d", "filename": "src/test/compile-fail/bind-by-move-neither-can-live-while-the-other-survives-4.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-4.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,4 +1,10 @@\n-struct X { x: (), drop { error!(\"destructor runs\"); } }\n+struct X { x: (), }\n+\n+impl X : Drop {\n+    fn finalize() {\n+        error!(\"destructor runs\");\n+    }\n+}\n \n fn main() {\n     let x = Some((X { x: () }, X { x: () }));"}, {"sha": "29d21ee670d8bb23600d96b0b473bc26801959be", "filename": "src/test/compile-fail/bind-by-move-no-lvalues-1.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-lvalues-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-lvalues-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-lvalues-1.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,4 +1,10 @@\n-struct X { x: (), drop { error!(\"destructor runs\"); } }\n+struct X { x: (), }\n+\n+impl X : Drop {\n+    fn finalize() {\n+        error!(\"destructor runs\");\n+    }\n+}\n \n fn main() {\n     let x = Some(X { x: () });"}, {"sha": "b1b38b587e8697da608c9fe8b5e71eb72a2398f8", "filename": "src/test/compile-fail/bind-by-move-no-lvalues-2.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-lvalues-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-lvalues-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-lvalues-2.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,4 +1,11 @@\n-struct X { x: (), drop { error!(\"destructor runs\"); } }\n+struct X { x: (), }\n+\n+impl X : Drop {\n+    fn finalize() {\n+        error!(\"destructor runs\");\n+    }\n+}\n+\n struct Y { y: Option<X> }\n \n fn main() {"}, {"sha": "2a36d9e0db6f69006267ddd4637e430e43cb835b", "filename": "src/test/compile-fail/bind-by-move-no-sub-bindings.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-sub-bindings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-sub-bindings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-sub-bindings.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,4 +1,10 @@\n-struct X { x: (), drop { error!(\"destructor runs\"); } }\n+struct X { x: (), }\n+\n+impl X : Drop {\n+    fn finalize() {\n+        error!(\"destructor runs\");\n+    }\n+}\n \n fn main() {\n     let x = Some(X { x: () });"}, {"sha": "a282352123426cfd81942f77e6d31f82b9dafc39", "filename": "src/test/compile-fail/block-must-not-have-result-res.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fblock-must-not-have-result-res.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fblock-must-not-have-result-res.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fblock-must-not-have-result-res.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,8 +1,12 @@\n // error-pattern:mismatched types: expected `()` but found `bool`\n \n-struct r {\n-  drop { true }\n+struct r {}\n+\n+impl r : Drop {\n+    fn finalize() {\n+        true\n+    }\n }\n \n fn main() {\n-}\n\\ No newline at end of file\n+}"}, {"sha": "4920a0239a57764f962d0fdd407e681cca5f391f", "filename": "src/test/compile-fail/borrowck-borrowed-uniq-rvalue-2.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fborrowck-borrowed-uniq-rvalue-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fborrowck-borrowed-uniq-rvalue-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-borrowed-uniq-rvalue-2.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,6 +1,11 @@\n struct defer {\n     x: &[&str],\n-    drop { error!(\"%?\", self.x); }\n+}\n+\n+impl defer : Drop {\n+    fn finalize() {\n+        error!(\"%?\", self.x);\n+    }\n }\n \n fn defer(x: &r/[&r/str]) -> defer/&r {"}, {"sha": "b8fcf695c3fdcfaadd0c3339c5be6fcb5e51c75c", "filename": "src/test/compile-fail/borrowck-unary-move-2.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fborrowck-unary-move-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fborrowck-unary-move-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-unary-move-2.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,5 +1,11 @@\n struct noncopyable {\n-    i: (), drop { error!(\"dropped\"); }\n+    i: (),\n+}\n+\n+impl noncopyable : Drop {\n+    fn finalize() {\n+        error!(\"dropped\");\n+    }\n }\n \n fn noncopyable() -> noncopyable {"}, {"sha": "be630ec851810db70e17cc31aa52285962f64734", "filename": "src/test/compile-fail/cap-clause-illegal-cap.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fcap-clause-illegal-cap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fcap-clause-illegal-cap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcap-clause-illegal-cap.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,6 +1,10 @@\n // error-pattern: copying a noncopyable value\n \n-struct foo { x: int, drop { } }\n+struct foo { x: int, }\n+\n+impl foo : Drop {\n+    fn finalize() {}\n+}\n \n fn foo(x: int) -> foo {\n     foo {"}, {"sha": "9f86b9e894a5883229ea17f84ec583b323492857", "filename": "src/test/compile-fail/copy-a-resource.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fcopy-a-resource.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fcopy-a-resource.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcopy-a-resource.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -2,7 +2,10 @@\n \n struct foo {\n   i: int,\n-  drop {}\n+}\n+\n+impl foo : Drop {\n+    fn finalize() {}\n }\n \n fn foo(i:int) -> foo {"}, {"sha": "407b786016d60ea2b787387440da4284fb04e4d5", "filename": "src/test/compile-fail/disallowed-deconstructing-destructing-struct.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fdisallowed-deconstructing-destructing-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fdisallowed-deconstructing-destructing-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdisallowed-deconstructing-destructing-struct.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,6 +1,9 @@\n struct X {\n     x: ~str,\n-    drop {\n+}\n+\n+impl X : Drop {\n+    fn finalize() {\n         error!(\"value: %s\", self.x);\n     }\n }"}, {"sha": "13012f146bf28c113026de29bfc4d3523827546b", "filename": "src/test/compile-fail/functional-struct-update.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Ffunctional-struct-update.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Ffunctional-struct-update.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffunctional-struct-update.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,6 +1,11 @@\n struct Bar {\n     x: int,\n-    drop { io::println(\"Goodbye, cruel world\"); }\n+}\n+\n+impl Bar : Drop {\n+    fn finalize() {\n+        io::println(\"Goodbye, cruel world\");\n+    }\n }\n \n struct Foo {"}, {"sha": "5476ab240007fd3111833ae9a9eaff811918ac7e", "filename": "src/test/compile-fail/issue-2487-b.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fissue-2487-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fissue-2487-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2487-b.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,7 +1,9 @@\n struct socket {\n     sock: int,\n+}\n \n-    drop { }\n+impl socket : Drop {\n+    fn finalize() {}\n }\n \n impl socket {"}, {"sha": "5567e5855e47b05e4be197282a67158d43e6077c", "filename": "src/test/compile-fail/issue-2548.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fissue-2548.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fissue-2548.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2548.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -4,7 +4,10 @@ struct foo {\n     x: @mut int,\n \n \n-    drop {\n+}\n+\n+impl foo : Drop {\n+    fn finalize() {\n         io::println(\"Goodbye, World!\");\n         *self.x += 1;\n     }"}, {"sha": "375da3849f8bf5d175cd514a6c739c92d30ea00e", "filename": "src/test/compile-fail/issue-2587-2.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fissue-2587-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fissue-2587-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2587-2.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -11,7 +11,10 @@ fn bar<T>(+_t: T) { fail; }\n \n struct S {\n     x: int,\n-    drop {}\n+}\n+\n+impl S : Drop {\n+    fn finalize() {}\n }\n \n fn S(x: int) -> S { S { x: x } }"}, {"sha": "5b02a6da45892da4946742d04c7dcca3b3ea4566", "filename": "src/test/compile-fail/issue-2823.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fissue-2823.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fissue-2823.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2823.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,6 +1,9 @@\n struct C {\n     x: int,\n-    drop {\n+}\n+\n+impl C : Drop {\n+    fn finalize() {\n         error!(\"dropping: %?\", self.x);\n     }\n }\n@@ -9,4 +12,4 @@ fn main() {\n     let c = C{ x: 2};\n     let d = copy c; //~ ERROR copying a noncopyable value\n     error!(\"%?\", d.x);\n-}\n\\ No newline at end of file\n+}"}, {"sha": "5ddb6b5f7041b26b6985f93760ba239a0e4bb23f", "filename": "src/test/compile-fail/issue-2825-b.rs", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6e650f2d2c83a191a0546b394a87ba348934db4f/src%2Ftest%2Fcompile-fail%2Fissue-2825-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e650f2d2c83a191a0546b394a87ba348934db4f/src%2Ftest%2Fcompile-fail%2Fissue-2825-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2825-b.rs?ref=6e650f2d2c83a191a0546b394a87ba348934db4f", "patch": "@@ -1,17 +0,0 @@\n-struct example {\n-    x: int,\n-    drop {} //~ ERROR First destructor declared\n-    drop {\n-        debug!(\"Goodbye, cruel world\");\n-    }\n-}\n-\n-fn example() -> example {\n-    example {\n-        x: 1\n-    }\n-}\n-\n-fn main(_args: ~[~str]) {\n-  let e: example = example();\n-}"}, {"sha": "9e38c39bb72a3881d09f65def016b653aa22dbc8", "filename": "src/test/compile-fail/issue-3214.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fissue-3214.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fissue-3214.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3214.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -2,7 +2,10 @@ fn foo<T>() {\n     struct foo {\n         mut x: T, //~ ERROR attempt to use a type argument out of scope\n         //~^ ERROR use of undeclared type name\n-        drop { }\n+    }\n+\n+    impl<T> foo<T> : Drop {\n+        fn finalize() {}\n     }\n }\n fn main() { }"}, {"sha": "3aaaa2ef16fd0a1613d480a95b6939f50dc63298", "filename": "src/test/compile-fail/liveness-unused.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fliveness-unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fliveness-unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-unused.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -50,8 +50,12 @@ fn f4b() -> int {\n // leave this in here just to trigger compile-fail:\n struct r {\n     x: (),\n-    drop {}\n }\n+\n+impl r : Drop {\n+    fn finalize() {}\n+}\n+\n fn main() {\n     let x = r { x: () };\n     fn@(move x) { copy x; }; //~ ERROR copying a noncopyable value"}, {"sha": "7f5c7e1f59b5fa4fa9765c9d1be46afaa93da23e", "filename": "src/test/compile-fail/no-send-res-ports.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fno-send-res-ports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fno-send-res-ports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-send-res-ports.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,7 +1,10 @@\n fn main() {\n     struct foo {\n       _x: comm::Port<()>,\n-      drop {}\n+    }\n+\n+    impl foo : Drop {\n+        fn finalize() {}\n     }\n \n     fn foo(x: comm::Port<()>) -> foo {"}, {"sha": "084b357561acd59a840c38d0d7d25a2e60fb3223", "filename": "src/test/compile-fail/non-const.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fnon-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fnon-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnon-const.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -4,7 +4,10 @@ fn foo<T: Const>(_x: T) { }\n \n struct r {\n   x:int,\n-  drop {}\n+}\n+\n+impl r : Drop {\n+    fn finalize() {}\n }\n \n fn r(x:int) -> r {\n@@ -15,7 +18,10 @@ fn r(x:int) -> r {\n \n struct r2 {\n   x:@mut int,\n-  drop {}\n+}\n+\n+impl r2 : Drop {\n+    fn finalize() {}\n }\n \n fn r2(x:@mut int) -> r2 {"}, {"sha": "0d56867225d6d4a8a59ea65813eb1be0ced2d8c9", "filename": "src/test/compile-fail/noncopyable-class.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fnoncopyable-class.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fnoncopyable-class.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnoncopyable-class.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -4,7 +4,10 @@\n // copied\n struct bar {\n   x: int,\n-  drop {}\n+}\n+\n+impl bar : Drop {\n+    fn finalize() {}\n }\n \n fn bar(x:int) -> bar {"}, {"sha": "c95e2f0b54d1ebd53e5ff3233f0abe5e02c810a1", "filename": "src/test/compile-fail/pinned-deep-copy.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fpinned-deep-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fpinned-deep-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpinned-deep-copy.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -2,7 +2,12 @@\n \n struct r {\n   i: @mut int,\n-  drop { *(self.i) = *(self.i) + 1; }\n+}\n+\n+impl r : Drop {\n+    fn finalize() {\n+        *(self.i) = *(self.i) + 1;\n+    }\n }\n \n fn r(i: @mut int) -> r {\n@@ -20,4 +25,4 @@ fn main() {\n         log(debug, x);\n     }\n     log(error, *i);\n-}\n\\ No newline at end of file\n+}"}, {"sha": "6bcac8f56e0a64157311751d8731e64f14d67515", "filename": "src/test/compile-fail/record-with-resource.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Frecord-with-resource.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Frecord-with-resource.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frecord-with-resource.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -2,7 +2,12 @@\n \n struct my_resource {\n   x: int,\n-  drop { log(error, self.x); }\n+}\n+\n+impl my_resource : Drop {\n+    fn finalize() {\n+        log(error, self.x);\n+    }\n }\n \n fn my_resource(x: int) -> my_resource {"}, {"sha": "cce998bea2db7ad3fcd22b6b71cd1d9ec0d085e1", "filename": "src/test/compile-fail/regions-in-rsrcs.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fregions-in-rsrcs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fregions-in-rsrcs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-in-rsrcs.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,16 +1,25 @@\n struct yes0 {\n   x: &uint,\n-  drop {}\n+}\n+\n+impl yes0 : Drop {\n+    fn finalize() {}\n }\n \n struct yes1 {\n   x: &self/uint,\n-  drop {}\n+}\n+\n+impl yes1 : Drop {\n+    fn finalize() {}\n }\n \n struct yes2 {\n   x: &foo/uint, //~ ERROR named regions other than `self` are not allowed as part of a type declaration\n-  drop {}\n }\n \n-fn main() {}\n\\ No newline at end of file\n+impl yes2 : Drop {\n+    fn finalize() {}\n+}\n+\n+fn main() {}"}, {"sha": "fb5b2509cb890634cea7bb9fa9cbaa9483c4c29b", "filename": "src/test/compile-fail/repeat-to-run-dtor-twice.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Frepeat-to-run-dtor-twice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Frepeat-to-run-dtor-twice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frepeat-to-run-dtor-twice.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -4,7 +4,10 @@\n struct Foo {\n     x: int,\n \n-    drop {\n+}\n+\n+impl Foo : Drop {\n+    fn finalize() {\n         io::println(\"Goodbye!\");\n     }\n }"}, {"sha": "32739a1075ae2cc89abac65c6223f6202d99ee96", "filename": "src/test/compile-fail/unique-object-noncopyable.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Funique-object-noncopyable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Funique-object-noncopyable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funique-object-noncopyable.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -4,7 +4,10 @@ trait Foo {\n \n struct Bar {\n     x: int,\n-    drop {}\n+}\n+\n+impl Bar : Drop {\n+    fn finalize() {}\n }\n \n impl Bar : Foo {"}, {"sha": "6a665c29240374898ee530497d70c41a4e66a61c", "filename": "src/test/compile-fail/unique-pinned-nocopy.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Funique-pinned-nocopy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Funique-pinned-nocopy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funique-pinned-nocopy.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -2,11 +2,14 @@\n \n struct r {\n   b:bool,\n-  drop {}\n+}\n+\n+impl r : Drop {\n+    fn finalize() {}\n }\n \n fn main() {\n     let i = move ~r { b: true };\n     let j = i;\n     log(debug, i);\n-}\n\\ No newline at end of file\n+}"}, {"sha": "157b4435d077ed4eac61b1ddf616d533a1f301da", "filename": "src/test/compile-fail/unique-vec-res.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Funique-vec-res.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Funique-vec-res.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funique-vec-res.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -2,7 +2,12 @@\n \n struct r {\n   i: @mut int,\n-  drop { *(self.i) = *(self.i) + 1; }\n+}\n+\n+impl r : Drop {\n+    fn finalize() {\n+        *(self.i) = *(self.i) + 1;\n+    }\n }\n \n fn f<T>(+i: ~[T], +j: ~[T]) {\n@@ -17,4 +22,4 @@ fn main() {\n     f(r1, r2);\n     log(debug, (r2, *i1));\n     log(debug, (r1, *i2));\n-}\n\\ No newline at end of file\n+}"}, {"sha": "2978b4dc32f4027a07578ebf3ed26aaf59d0948b", "filename": "src/test/compile-fail/vec-res-add.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fvec-res-add.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Fcompile-fail%2Fvec-res-add.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvec-res-add.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -4,7 +4,10 @@\n struct r {\n   let i:int;\n   new(i:int) {self.i = i;}\n-  drop {}\n+}\n+\n+impl r : Drop {\n+    fn finalize() {}\n }\n \n fn main() {"}, {"sha": "bed54138acb4e4629144ff67138850da2938c2b0", "filename": "src/test/run-fail/issue-2061.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-fail%2Fissue-2061.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-fail%2Fissue-2061.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fissue-2061.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -2,7 +2,10 @@\n // error-pattern: ran out of stack\n struct R {\n     b: int,\n-    drop {\n+}\n+\n+impl R : Drop {\n+    fn finalize() {\n         let _y = R { b: self.b };\n     }\n }"}, {"sha": "29ea363ecaea8bb2d94ba72b0e30f763b8596b5e", "filename": "src/test/run-fail/morestack2.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-fail%2Fmorestack2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-fail%2Fmorestack2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack2.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -23,14 +23,17 @@ fn getbig_call_c_and_fail(i: int) {\n \n struct and_then_get_big_again {\n   x:int,\n-  drop {\n-    fn getbig(i: int) {\n-        if i != 0 {\n-            getbig(i - 1);\n+}\n+\n+impl and_then_get_big_again : Drop {\n+    fn finalize() {\n+        fn getbig(i: int) {\n+            if i != 0 {\n+                getbig(i - 1);\n+            }\n         }\n+        getbig(10000);\n     }\n-    getbig(10000);\n-  }\n }\n \n fn and_then_get_big_again(x:int) -> and_then_get_big_again {\n@@ -44,4 +47,4 @@ fn main() {\n         let r = and_then_get_big_again(4);\n         getbig_call_c_and_fail(10000);\n     };\n-}\n\\ No newline at end of file\n+}"}, {"sha": "9d021b96226c4356cc2b0cd7b866f01c8edf1e2d", "filename": "src/test/run-fail/morestack3.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-fail%2Fmorestack3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-fail%2Fmorestack3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack3.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -15,14 +15,17 @@ fn getbig_and_fail(&&i: int) {\n \n struct and_then_get_big_again {\n   x:int,\n-  drop {\n-    fn getbig(i: int) {\n-        if i != 0 {\n-            getbig(i - 1);\n+}\n+\n+impl and_then_get_big_again : Drop {\n+    fn finalize() {\n+        fn getbig(i: int) {\n+            if i != 0 {\n+                getbig(i - 1);\n+            }\n         }\n+        getbig(100);\n     }\n-    getbig(100);\n-  }\n }\n \n fn and_then_get_big_again(x:int) -> and_then_get_big_again {\n@@ -35,4 +38,4 @@ fn main() {\n     do task::spawn {\n         getbig_and_fail(400);\n     };\n-}\n\\ No newline at end of file\n+}"}, {"sha": "fac54ae250770e6778f7614a7160c11824a33321", "filename": "src/test/run-fail/morestack4.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-fail%2Fmorestack4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-fail%2Fmorestack4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack4.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -15,7 +15,10 @@ fn getbig_and_fail(&&i: int) {\n \n struct and_then_get_big_again {\n   x:int,\n-  drop {}\n+}\n+\n+impl and_then_get_big_again : Drop {\n+    fn finalize() {}\n }\n \n fn and_then_get_big_again(x:int) -> and_then_get_big_again {\n@@ -28,4 +31,4 @@ fn main() {\n     do task::spawn {\n         getbig_and_fail(1);\n     };\n-}\n\\ No newline at end of file\n+}"}, {"sha": "d8c5662e193aefb06e8ec7603e3e720e2f48e59c", "filename": "src/test/run-fail/rt-set-exit-status-fail2.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail2.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -2,12 +2,15 @@\n \n struct r {\n   x:int,\n-            // Setting the exit status after the runtime has already\n-            // failed has no effect and the process exits with the\n-            // runtime's exit code\n-  drop {\n-    os::set_exit_status(50);\n-  }\n+}\n+\n+// Setting the exit status after the runtime has already\n+// failed has no effect and the process exits with the\n+// runtime's exit code\n+impl r : Drop {\n+    fn finalize() {\n+        os::set_exit_status(50);\n+    }\n }\n \n fn r(x:int) -> r {\n@@ -22,4 +25,4 @@ fn main() {\n       let i = r(5);\n     };\n     fail;\n-}\n\\ No newline at end of file\n+}"}, {"sha": "d9e347079f42cf562434fab3813367145265fda1", "filename": "src/test/run-fail/unwind-box-res.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-fail%2Funwind-box-res.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-fail%2Funwind-box-res.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-box-res.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -6,9 +6,14 @@ fn failfn() {\n \n struct r {\n   v: *int,\n-  drop unsafe {\n-    let _v2: ~int = cast::reinterpret_cast(&self.v);\n-  }\n+}\n+\n+impl r : Drop {\n+    fn finalize() {\n+        unsafe {\n+            let _v2: ~int = cast::reinterpret_cast(&self.v);\n+        }\n+    }\n }\n \n fn r(v: *int) -> r {\n@@ -24,4 +29,4 @@ fn main() unsafe {\n     let x = @r(i1p);\n     failfn();\n     log(error, x);\n-}\n\\ No newline at end of file\n+}"}, {"sha": "fd7cb4a3d62cad38ac499fbc0d45cb4c92e56d41", "filename": "src/test/run-fail/unwind-resource-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-fail%2Funwind-resource-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-fail%2Funwind-resource-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-resource-fail.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -9,4 +9,4 @@ class r {\n fn main() {\n     @0;\n     let r = move r(0);\n-}\n\\ No newline at end of file\n+}"}, {"sha": "0be7f5cfe8b5c11fa1b9de18628b515336907a24", "filename": "src/test/run-fail/unwind-resource-fail3.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-fail%2Funwind-resource-fail3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-fail%2Funwind-resource-fail3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-resource-fail3.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -5,7 +5,12 @@ class faily_box {\n   let i: @int;\n   new(i: @int) { self.i = i; }\n   // What happens to the box pointer owned by this class?\n-  drop { fail \"quux\"; }\n+}\n+\n+impl faily_box : Drop {\n+    fn finalize() {\n+        fail \"quux\";\n+    }\n }\n \n fn main() {"}, {"sha": "f3f887230d24d6fab1eaf320622a02dd90b37588", "filename": "src/test/run-pass/class-attributes-1.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fclass-attributes-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fclass-attributes-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-attributes-1.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,11 +1,15 @@\n // pp-exact - Make sure we actually print the attributes\n \n struct cat {\n-    #[cat_dropper]\n-    drop { error!(\"%s landed on hir feet\",self.name); }\n     name: ~str,\n }\n \n+impl cat: Drop {\n+    #[cat_dropper]\n+    fn finalize() { error!(\"%s landed on hir feet\",self.name); }\n+}\n+\n+\n #[cat_maker]\n fn cat(name: ~str) -> cat { cat{name: name,} }\n "}, {"sha": "5bcec8d3b0d74302176b93885e02d1c9db044c11", "filename": "src/test/run-pass/class-attributes-2.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fclass-attributes-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fclass-attributes-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-attributes-2.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,10 +1,15 @@\n struct cat {\n   name: ~str,\n-  #[cat_dropper]\n-  /**\n-     Actually, cats don't always land on their feet when you drop them.\n-  */\n-  drop { error!(\"%s landed on hir feet\", self.name); }\n+}\n+\n+impl cat : Drop {\n+    #[cat_dropper]\n+    /**\n+       Actually, cats don't always land on their feet when you drop them.\n+    */\n+    fn finalize() {\n+        error!(\"%s landed on hir feet\", self.name);\n+    }\n }\n \n #[cat_maker]"}, {"sha": "318392921d873790712050b185262c8552fc12eb", "filename": "src/test/run-pass/class-dtor.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fclass-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fclass-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-dtor.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,7 +1,12 @@\n struct cat {\n   done : extern fn(uint),\n   meows : uint,\n-  drop { self.done(self.meows); }\n+}\n+\n+impl cat : Drop {\n+    fn finalize() {\n+        self.done(self.meows);\n+    }\n }\n \n fn cat(done: extern fn(uint)) -> cat {"}, {"sha": "04520d925b1c3bb7d5daad7c581d8ff0b3bd0457", "filename": "src/test/run-pass/init-res-into-things.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Finit-res-into-things.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Finit-res-into-things.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finit-res-into-things.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -3,7 +3,12 @@\n \n struct r {\n   i: @mut int,\n-  drop { *(self.i) = *(self.i) + 1; }\n+}\n+\n+impl r : Drop {\n+    fn finalize() {\n+        *(self.i) = *(self.i) + 1;\n+    }\n }\n \n fn r(i: @mut int) -> r {"}, {"sha": "15c46ffbaf875d27820ed23c9381448d3f88f44f", "filename": "src/test/run-pass/issue-2487-a.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fissue-2487-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fissue-2487-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2487-a.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,7 +1,10 @@\n struct socket {\n     sock: int,\n \n-    drop { }\n+}\n+\n+impl socket : Drop {\n+    fn finalize() {}\n }\n \n impl socket {"}, {"sha": "aefcca9004b9e73353cb962d6838688dbfa466eb", "filename": "src/test/run-pass/issue-2708.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fissue-2708.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fissue-2708.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2708.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -3,7 +3,10 @@ struct Font {\n     cairo_font: uint,\n     font_dtor: uint,\n \n-    drop { }\n+}\n+\n+impl Font : Drop {\n+    fn finalize() {}\n }\n \n fn Font() -> Font {"}, {"sha": "14ac611e720f157b75d82f6ac0562b075b0f682c", "filename": "src/test/run-pass/issue-2718.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fissue-2718.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fissue-2718.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2718.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -141,7 +141,10 @@ mod pipes {\n \n     struct send_packet<T: Send> {\n         mut p: Option<*packet<T>>,\n-        drop {\n+    }\n+\n+    impl<T: Send> send_packet<T> : Drop {\n+        fn finalize() {\n             if self.p != None {\n                 let mut p = None;\n                 p <-> self.p;\n@@ -166,7 +169,10 @@ mod pipes {\n \n     struct recv_packet<T: Send> {\n         mut p: Option<*packet<T>>,\n-        drop {\n+    }\n+\n+    impl<T: Send> recv_packet<T> : Drop {\n+        fn finalize() {\n             if self.p != None {\n                 let mut p = None;\n                 p <-> self.p;"}, {"sha": "86458989ffd0a735b05a0b910d7d38dd1f1bc30b", "filename": "src/test/run-pass/issue-2735-2.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fissue-2735-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fissue-2735-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2735-2.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,7 +1,12 @@\n // This test should behave exactly like issue-2735-3\n struct defer {\n     b: &mut bool,\n-    drop { *(self.b) = true; }\n+}\n+\n+impl defer : Drop {\n+    fn finalize() {\n+        *(self.b) = true;\n+    }\n }\n \n fn defer(b: &r/mut bool) -> defer/&r {"}, {"sha": "4a93de936bc0bc62e97a90aebb4f61638cf2391b", "filename": "src/test/run-pass/issue-2735-3.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fissue-2735-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fissue-2735-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2735-3.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,7 +1,12 @@\n // This test should behave exactly like issue-2735-2\n struct defer {\n     b: &mut bool,\n-    drop { *(self.b) = true; }\n+}\n+\n+impl defer : Drop {\n+    fn finalize() {\n+        *(self.b) = true;\n+    }\n }\n \n fn defer(b: &r/mut bool) -> defer/&r {"}, {"sha": "d15edccaa183042888f11f6323bf64e4a48b3fab", "filename": "src/test/run-pass/issue-2895.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fissue-2895.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fissue-2895.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2895.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -7,7 +7,10 @@ struct Cat {\n \n struct Kitty {\n     x: int,\n-    drop {}\n+}\n+\n+impl Kitty : Drop {\n+    fn finalize() {}\n }\n \n #[cfg(target_arch = \"x86_64\")]"}, {"sha": "273db8505a1ab3b41d28d321c06e2d8b042e84eb", "filename": "src/test/run-pass/issue-3220.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fissue-3220.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fissue-3220.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3220.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,4 +1,9 @@\n-struct thing { x: int, drop { } }\n+struct thing { x: int, }\n+\n+impl thing : Drop {\n+    fn finalize() {}\n+}\n+\n fn thing() -> thing {\n     thing {\n         x: 0"}, {"sha": "970afb0597ecfaaedda0a84c34434cd3c0a6ab7e", "filename": "src/test/run-pass/issue-979.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fissue-979.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fissue-979.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-979.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,6 +1,11 @@\n struct r {\n   b: @mut int,\n-  drop { *(self.b) += 1; }\n+}\n+\n+impl r : Drop {\n+    fn finalize() {\n+        *(self.b) += 1;\n+    }\n }\n \n fn r(b: @mut int) -> r {\n@@ -16,4 +21,4 @@ fn main() {\n     }\n \n     assert *b == 1;\n-}\n\\ No newline at end of file\n+}"}, {"sha": "d2ae1e02a41d3631eacf637ed087cc52af10935a", "filename": "src/test/run-pass/option-unwrap.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Foption-unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Foption-unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Foption-unwrap.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,7 +1,10 @@\n struct dtor {\n     x: @mut int,\n \n-    drop {\n+}\n+\n+impl dtor : Drop {\n+    fn finalize() {\n         // abuse access to shared mutable state to write this code\n         *self.x -= 1;\n     }\n@@ -23,4 +26,4 @@ fn main() {\n     }\n \n     assert *x == 0;\n-}\n\\ No newline at end of file\n+}"}, {"sha": "06c1734a28f731abff6e0457d11e691acc38b166", "filename": "src/test/run-pass/pipe-presentation-examples.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fpipe-presentation-examples.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fpipe-presentation-examples.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpipe-presentation-examples.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -66,7 +66,10 @@ macro_rules! select (\n struct Buffer {\n     foo: (),\n \n-    drop { }\n+}\n+\n+impl Buffer : Drop {\n+    fn finalize() {}\n }\n \n proto! double_buffer ("}, {"sha": "522392d99add9219ab44640ba36861055f5bc165", "filename": "src/test/run-pass/resource-assign-is-not-copy.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fresource-assign-is-not-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fresource-assign-is-not-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-assign-is-not-copy.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,6 +1,11 @@\n struct r {\n   i: @mut int,\n-  drop { *(self.i) += 1; }\n+}\n+\n+impl r : Drop {\n+    fn finalize() {\n+        *(self.i) += 1;\n+    }\n }\n \n fn r(i: @mut int) -> r {"}, {"sha": "6b637e668edc4742b4ec7dcb4fda0e1bbfaf726f", "filename": "src/test/run-pass/resource-cycle.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fresource-cycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fresource-cycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-cycle.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -2,12 +2,18 @@\n \n struct r {\n   v: *int,\n-  drop unsafe {\n-    debug!(\"r's dtor: self = %x, self.v = %x, self.v's value = %x\",\n-           cast::reinterpret_cast::<*r, uint>(&ptr::addr_of(&self)),\n-           cast::reinterpret_cast::<**int, uint>(&ptr::addr_of(&(self.v))),\n-           cast::reinterpret_cast::<*int, uint>(&self.v));\n-    let v2: ~int = cast::reinterpret_cast(&self.v); }\n+}\n+\n+impl r : Drop {\n+    fn finalize() {\n+        unsafe {\n+            debug!(\"r's dtor: self = %x, self.v = %x, self.v's value = %x\",\n+              cast::reinterpret_cast::<*r, uint>(&ptr::addr_of(&self)),\n+              cast::reinterpret_cast::<**int, uint>(&ptr::addr_of(&(self.v))),\n+              cast::reinterpret_cast::<*int, uint>(&self.v));\n+            let v2: ~int = cast::reinterpret_cast(&self.v);\n+        }\n+    }\n }\n \n fn r(v: *int) -> r unsafe {"}, {"sha": "ec04699ae986bdc28143bb108fb7711d9a64eb22", "filename": "src/test/run-pass/resource-cycle2.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fresource-cycle2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fresource-cycle2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-cycle2.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -8,9 +8,14 @@ type u = {\n \n struct r {\n   v: u,\n-  drop unsafe {\n-    let v2: ~int = cast::reinterpret_cast(&self.v.c);\n-  }\n+}\n+\n+impl r : Drop {\n+    fn finalize() {\n+        unsafe {\n+            let v2: ~int = cast::reinterpret_cast(&self.v.c);\n+        }\n+    }\n }\n \n fn r(v: u) -> r {"}, {"sha": "22b0f1272a84c01c2a799ea676738fc37bf1574a", "filename": "src/test/run-pass/resource-cycle3.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fresource-cycle3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fresource-cycle3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-cycle3.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -12,10 +12,15 @@ struct r {\n   v: u,\n   w: int,\n   x: *int,\n-  drop unsafe {\n-    let _v2: ~int = cast::reinterpret_cast(&self.v.c);\n-    // let _v3: ~int = unsafe::reinterpret_cast(self.x);\n-  }\n+}\n+\n+impl r : Drop {\n+    fn finalize() {\n+        unsafe {\n+            let _v2: ~int = cast::reinterpret_cast(&self.v.c);\n+            // let _v3: ~int = unsafe::reinterpret_cast(self.x);\n+        }\n+    }\n }\n \n fn r(v: u, w: int, _x: *int) -> r unsafe {"}, {"sha": "92a57004b50748d071c5bac3f6d2cea80dbf6827", "filename": "src/test/run-pass/resource-destruct.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fresource-destruct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fresource-destruct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-destruct.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,6 +1,11 @@\n struct shrinky_pointer {\n   i: @@mut int,\n-  drop { log(error, ~\"Hello!\"); **(self.i) -= 1; }\n+}\n+\n+impl shrinky_pointer : Drop {\n+    fn finalize() {\n+        log(error, ~\"Hello!\"); **(self.i) -= 1;\n+    }\n }\n \n impl shrinky_pointer {"}, {"sha": "476f695e783db06f88167867100754ce17480333", "filename": "src/test/run-pass/resource-generic.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fresource-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fresource-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-generic.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -3,7 +3,12 @@\n \n struct finish<T: Copy> {\n   arg: {val: T, fin: extern fn(T)},\n-  drop { self.arg.fin(self.arg.val); }\n+}\n+\n+impl<T: Copy> finish<T> : Drop {\n+    fn finalize() {\n+        self.arg.fin(self.arg.val);\n+    }\n }\n \n fn finish<T: Copy>(arg: {val: T, fin: extern fn(T)}) -> finish<T> {"}, {"sha": "b350955bec0c524229457f491d50499703e31465", "filename": "src/test/run-pass/resource-in-struct.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fresource-in-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fresource-in-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-in-struct.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -5,8 +5,13 @@ type closable = @mut bool;\n \n struct close_res {\n   i: closable,\n- \n-  drop { *(self.i) = false; }\n+\n+}\n+\n+impl close_res : Drop {\n+    fn finalize() {\n+        *(self.i) = false;\n+    }\n }\n \n fn close_res(i: closable) -> close_res {"}, {"sha": "ebef3f39eea6db109d05cb45ce94502ced85e63e", "filename": "src/test/run-pass/send-resource.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fsend-resource.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fsend-resource.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsend-resource.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -3,7 +3,10 @@ use comm::*;\n \n struct test {\n   f: int,\n-  drop {}\n+}\n+\n+impl test : Drop {\n+    fn finalize() {}\n }\n \n fn test(f: int) -> test {\n@@ -24,4 +27,4 @@ fn main() {\n     }\n \n     p.recv().send(test(42));\n-}\n\\ No newline at end of file\n+}"}, {"sha": "6bc605f2a08657fcc6be561d4253bb3bed24b1f1", "filename": "src/test/run-pass/struct-literal-dtor.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fstruct-literal-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fstruct-literal-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstruct-literal-dtor.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,6 +1,11 @@\n struct foo {\n     x: ~str,\n-    drop { error!(\"%s\", self.x); }\n+}\n+\n+impl foo : Drop {\n+    fn finalize() {\n+        error!(\"%s\", self.x);\n+    }\n }\n \n fn main() {"}, {"sha": "2996ce8ff73cb06a122a8ecbd373ebb91e10a128", "filename": "src/test/run-pass/task-compare.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Ftask-compare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Ftask-compare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-compare.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -9,7 +9,10 @@ fn child() { }\n \n struct notify {\n     ch: comm::Chan<bool>, v: @mut bool,\n-    drop {\n+}\n+\n+impl notify : Drop {\n+    fn finalize() {\n         error!(\"notify: task=%? v=%x unwinding=%b b=%b\",\n                task::get_task(),\n                ptr::addr_of(&(*(self.v))) as uint,"}, {"sha": "fbbdaea2c943a2cc7d02c5c25bdf3bfa671eb27a", "filename": "src/test/run-pass/task-killjoin-rsrc.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Ftask-killjoin-rsrc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Ftask-killjoin-rsrc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-killjoin-rsrc.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -7,7 +7,10 @@ extern mod std;\n \n struct notify {\n     ch: comm::Chan<bool>, v: @mut bool,\n-    drop {\n+}\n+\n+impl notify : Drop {\n+    fn finalize() {\n         error!(\"notify: task=%? v=%x unwinding=%b b=%b\",\n                task::get_task(),\n                ptr::addr_of(&(*(self.v))) as uint,"}, {"sha": "3016778dea35c6e9ff8adc59c2cc2c284f4fbb44", "filename": "src/test/run-pass/type-param-constraints.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Ftype-param-constraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Ftype-param-constraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-param-constraints.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -7,7 +7,10 @@ fn u_foo<T: Send>(unique: T) { }\n \n struct r {\n   i: int,\n-  drop {}\n+}\n+\n+impl r : Drop {\n+    fn finalize() {}\n }\n \n fn r(i:int) -> r {"}, {"sha": "ad7e8d20400ea21cfccff94af7eb93577345bc3a", "filename": "src/test/run-pass/unique-pinned-nocopy-2.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Funique-pinned-nocopy-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Funique-pinned-nocopy-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-pinned-nocopy-2.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,6 +1,11 @@\n struct r {\n   i: @mut int,\n-  drop { *(self.i) = *(self.i) + 1; }\n+}\n+\n+impl r : Drop {\n+    fn finalize() {\n+        *(self.i) = *(self.i) + 1;\n+    }\n }\n \n fn r(i: @mut int) -> r {\n@@ -15,4 +20,4 @@ fn main() {\n         let j = ~r(i);\n     }\n     assert *i == 1;\n-}\n\\ No newline at end of file\n+}"}, {"sha": "00ab35e9e6181fbe852ab912ca5b18dc142c41a7", "filename": "src/test/run-pass/unwind-resource.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Funwind-resource.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Funwind-resource.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funwind-resource.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -3,9 +3,14 @@ extern mod std;\n \n struct complainer {\n   c: comm::Chan<bool>,\n-  drop { error!(\"About to send!\");\n-    comm::send(self.c, true);\n-    error!(\"Sent!\"); }\n+}\n+\n+impl complainer : Drop {\n+    fn finalize() {\n+        error!(\"About to send!\");\n+        comm::send(self.c, true);\n+        error!(\"Sent!\");\n+    }\n }\n \n fn complainer(c: comm::Chan<bool>) -> complainer {"}, {"sha": "7a159464aabf3b19dca355429609f253dbf6979f", "filename": "src/test/run-pass/unwind-resource2.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Funwind-resource2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Funwind-resource2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funwind-resource2.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -3,7 +3,10 @@ extern mod std;\n \n struct complainer {\n   c: @int,\n-  drop {}\n+}\n+\n+impl complainer : Drop {\n+    fn finalize() {}\n }\n \n fn complainer(c: @int) -> complainer {"}, {"sha": "e057117c4a57c79fd098467f1d440444a74bffb6", "filename": "src/test/run-pass/vec-slice-drop.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fvec-slice-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a5a76aa4596b3892dced83e3e2bea082e20c48/src%2Ftest%2Frun-pass%2Fvec-slice-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-slice-drop.rs?ref=f4a5a76aa4596b3892dced83e3e2bea082e20c48", "patch": "@@ -1,7 +1,12 @@\n // Make sure that destructors get run on slice literals\n struct foo {\n     x: @mut int,\n-    drop { *self.x += 1; }\n+}\n+\n+impl foo : Drop {\n+    fn finalize() {\n+        *self.x += 1;\n+    }\n }\n \n fn foo(x: @mut int) -> foo {"}]}