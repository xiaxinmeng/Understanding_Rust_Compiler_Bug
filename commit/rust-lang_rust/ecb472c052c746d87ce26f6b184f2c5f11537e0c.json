{"sha": "ecb472c052c746d87ce26f6b184f2c5f11537e0c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjYjQ3MmMwNTJjNzQ2ZDg3Y2UyNmY2YjE4NGYyYzVmMTE1MzdlMGM=", "commit": {"author": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-04-27T07:02:08Z"}, "committer": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-04-27T07:02:08Z"}, "message": "Use `fn` instead of closures where unnecessary", "tree": {"sha": "c2bfa9c18ca2d3a1ac9c23fb70ec9673c945fa33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2bfa9c18ca2d3a1ac9c23fb70ec9673c945fa33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecb472c052c746d87ce26f6b184f2c5f11537e0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecb472c052c746d87ce26f6b184f2c5f11537e0c", "html_url": "https://github.com/rust-lang/rust/commit/ecb472c052c746d87ce26f6b184f2c5f11537e0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecb472c052c746d87ce26f6b184f2c5f11537e0c/comments", "author": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f1e51b3f4a7bfb42c442caf2cb836ba62e2ba53", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f1e51b3f4a7bfb42c442caf2cb836ba62e2ba53", "html_url": "https://github.com/rust-lang/rust/commit/3f1e51b3f4a7bfb42c442caf2cb836ba62e2ba53"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "e37c44dc026a19902de4ad5e686b0a402ed018b2", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ecb472c052c746d87ce26f6b184f2c5f11537e0c/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecb472c052c746d87ce26f6b184f2c5f11537e0c/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=ecb472c052c746d87ce26f6b184f2c5f11537e0c", "patch": "@@ -958,7 +958,7 @@ fn detect_manual_memcpy<'a, 'tcx>(\n     {\n         // the var must be a single name\n         if let PatKind::Binding(_, canonical_id, _, _) = pat.kind {\n-            let print_sum = |arg1: &str, arg2: &Offset| -> String {\n+            fn print_sum(arg1: &str, arg2: &Offset) -> String {\n                 match (arg1, &arg2.value[..], arg2.sign) {\n                     (\"0\", \"0\", _) => \"0\".into(),\n                     (\"0\", x, OffsetSign::Positive) | (x, \"0\", _) => x.into(),\n@@ -972,16 +972,16 @@ fn detect_manual_memcpy<'a, 'tcx>(\n                         }\n                     },\n                 }\n-            };\n+            }\n \n-            let print_offset = |start_str: &str, inline_offset: &Offset| -> String {\n+            fn print_offset(start_str: &str, inline_offset: &Offset) -> String {\n                 let offset = print_sum(start_str, inline_offset);\n                 if offset.as_str() == \"0\" {\n                     \"\".into()\n                 } else {\n                     offset\n                 }\n-            };\n+            }\n \n             let print_limit = |end: &Expr<'_>, offset: Offset, var_name: &str| {\n                 if_chain! {"}]}