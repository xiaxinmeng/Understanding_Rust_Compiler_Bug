{"sha": "4f67392c485b746b6264e81bbd1b66e40725a95f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmNjczOTJjNDg1Yjc0NmI2MjY0ZTgxYmJkMWI2NmU0MDcyNWE5NWY=", "commit": {"author": {"name": "Ryan Levick", "email": "me@ryanlevick.com", "date": "2021-03-18T12:38:47Z"}, "committer": {"name": "Ryan Levick", "email": "me@ryanlevick.com", "date": "2021-04-08T13:36:28Z"}, "message": "Update new part of code with error", "tree": {"sha": "12ceae6133fbdf8919bb54d48b53afcf6049c190", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12ceae6133fbdf8919bb54d48b53afcf6049c190"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f67392c485b746b6264e81bbd1b66e40725a95f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f67392c485b746b6264e81bbd1b66e40725a95f", "html_url": "https://github.com/rust-lang/rust/commit/4f67392c485b746b6264e81bbd1b66e40725a95f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f67392c485b746b6264e81bbd1b66e40725a95f/comments", "author": {"login": "rylev", "id": 1327285, "node_id": "MDQ6VXNlcjEzMjcyODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1327285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rylev", "html_url": "https://github.com/rylev", "followers_url": "https://api.github.com/users/rylev/followers", "following_url": "https://api.github.com/users/rylev/following{/other_user}", "gists_url": "https://api.github.com/users/rylev/gists{/gist_id}", "starred_url": "https://api.github.com/users/rylev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rylev/subscriptions", "organizations_url": "https://api.github.com/users/rylev/orgs", "repos_url": "https://api.github.com/users/rylev/repos", "events_url": "https://api.github.com/users/rylev/events{/privacy}", "received_events_url": "https://api.github.com/users/rylev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rylev", "id": 1327285, "node_id": "MDQ6VXNlcjEzMjcyODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1327285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rylev", "html_url": "https://github.com/rylev", "followers_url": "https://api.github.com/users/rylev/followers", "following_url": "https://api.github.com/users/rylev/following{/other_user}", "gists_url": "https://api.github.com/users/rylev/gists{/gist_id}", "starred_url": "https://api.github.com/users/rylev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rylev/subscriptions", "organizations_url": "https://api.github.com/users/rylev/orgs", "repos_url": "https://api.github.com/users/rylev/repos", "events_url": "https://api.github.com/users/rylev/events{/privacy}", "received_events_url": "https://api.github.com/users/rylev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "152c86211b4e79634dc4b811d59bb3166d106ca5", "url": "https://api.github.com/repos/rust-lang/rust/commits/152c86211b4e79634dc4b811d59bb3166d106ca5", "html_url": "https://github.com/rust-lang/rust/commit/152c86211b4e79634dc4b811d59bb3166d106ca5"}], "stats": {"total": 51, "additions": 37, "deletions": 14}, "files": [{"sha": "a5efc63c66cc319aa4a21a1a14ac90ccf2ae5b2b", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/_impl.rs", "status": "modified", "additions": 37, "deletions": 14, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/4f67392c485b746b6264e81bbd1b66e40725a95f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f67392c485b746b6264e81bbd1b66e40725a95f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs?ref=4f67392c485b746b6264e81bbd1b66e40725a95f", "patch": "@@ -30,6 +30,7 @@ use rustc_middle::ty::{\n use rustc_session::lint;\n use rustc_session::lint::builtin::BARE_TRAIT_OBJECTS;\n use rustc_session::parse::feature_err;\n+use rustc_span::edition::Edition;\n use rustc_span::source_map::{original_sp, DUMMY_SP};\n use rustc_span::symbol::{kw, sym, Ident};\n use rustc_span::{self, BytePos, MultiSpan, Span};\n@@ -969,20 +970,42 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             if let TyKind::TraitObject([poly_trait_ref, ..], _, TraitObjectSyntax::None) =\n                 self_ty.kind\n             {\n-                self.tcx.struct_span_lint_hir(BARE_TRAIT_OBJECTS, hir_id, self_ty.span, |lint| {\n-                    let mut db = lint\n-                        .build(&format!(\"trait objects without an explicit `dyn` are deprecated\"));\n-                    let (sugg, app) = match self.tcx.sess.source_map().span_to_snippet(self_ty.span)\n-                    {\n-                        Ok(s) if poly_trait_ref.trait_ref.path.is_global() => {\n-                            (format!(\"<dyn ({})>\", s), Applicability::MachineApplicable)\n-                        }\n-                        Ok(s) => (format!(\"<dyn {}>\", s), Applicability::MachineApplicable),\n-                        Err(_) => (\"<dyn <type>>\".to_string(), Applicability::HasPlaceholders),\n-                    };\n-                    db.span_suggestion(self_ty.span, \"use `dyn`\", sugg, app);\n-                    db.emit()\n-                });\n+                let msg = \"trait objects without an explicit `dyn` are deprecated\";\n+                let (sugg, app) = match self.tcx.sess.source_map().span_to_snippet(self_ty.span) {\n+                    Ok(s) if poly_trait_ref.trait_ref.path.is_global() => {\n+                        (format!(\"<dyn ({})>\", s), Applicability::MachineApplicable)\n+                    }\n+                    Ok(s) => (format!(\"<dyn {}>\", s), Applicability::MachineApplicable),\n+                    Err(_) => (\"<dyn <type>>\".to_string(), Applicability::HasPlaceholders),\n+                };\n+                let replace = String::from(\"use `dyn`\");\n+                if self.sess().edition() >= Edition::Edition2021 {\n+                    let mut err = rustc_errors::struct_span_err!(\n+                        self.sess(),\n+                        self_ty.span,\n+                        E0783,\n+                        \"{}\",\n+                        msg,\n+                    );\n+                    err.span_suggestion(\n+                        self_ty.span,\n+                        &sugg,\n+                        replace,\n+                        Applicability::MachineApplicable,\n+                    )\n+                    .emit();\n+                } else {\n+                    self.tcx.struct_span_lint_hir(\n+                        BARE_TRAIT_OBJECTS,\n+                        hir_id,\n+                        self_ty.span,\n+                        |lint| {\n+                            let mut db = lint.build(msg);\n+                            db.span_suggestion(self_ty.span, &replace, sugg, app);\n+                            db.emit()\n+                        },\n+                    );\n+                }\n             }\n         }\n     }"}]}