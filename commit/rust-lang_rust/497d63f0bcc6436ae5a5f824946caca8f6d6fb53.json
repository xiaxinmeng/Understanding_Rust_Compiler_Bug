{"sha": "497d63f0bcc6436ae5a5f824946caca8f6d6fb53", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5N2Q2M2YwYmNjNjQzNmFlNWE1ZjgyNDk0NmNhY2E4ZjZkNmZiNTM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-11-05T23:30:42Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-11-10T09:37:11Z"}, "message": "Don't overflow in a converting stat times to u64\n\nCloses #10297", "tree": {"sha": "743e15516fb671e9401dc19fc537bd8f8b260c16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/743e15516fb671e9401dc19fc537bd8f8b260c16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/497d63f0bcc6436ae5a5f824946caca8f6d6fb53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/497d63f0bcc6436ae5a5f824946caca8f6d6fb53", "html_url": "https://github.com/rust-lang/rust/commit/497d63f0bcc6436ae5a5f824946caca8f6d6fb53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/497d63f0bcc6436ae5a5f824946caca8f6d6fb53/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa78c3d6f6b25a0e54f815cd8db765000763e48a", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa78c3d6f6b25a0e54f815cd8db765000763e48a", "html_url": "https://github.com/rust-lang/rust/commit/aa78c3d6f6b25a0e54f815cd8db765000763e48a"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "5cbf2d0e2b74b19e75c8d3d748fe94d61c094a9e", "filename": "src/librustuv/file.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/497d63f0bcc6436ae5a5f824946caca8f6d6fb53/src%2Flibrustuv%2Ffile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/497d63f0bcc6436ae5a5f824946caca8f6d6fb53/src%2Flibrustuv%2Ffile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Ffile.rs?ref=497d63f0bcc6436ae5a5f824946caca8f6d6fb53", "patch": "@@ -256,7 +256,9 @@ impl FsRequest {\n         let path = unsafe { Path::new(CString::new(path, false)) };\n         let stat = self.get_stat();\n         fn to_msec(stat: uvll::uv_timespec_t) -> u64 {\n-            (stat.tv_sec * 1000 + stat.tv_nsec / 1000000) as u64\n+            // Be sure to cast to u64 first to prevent overflowing if the tv_sec\n+            // field is a 32-bit integer.\n+            (stat.tv_sec as u64) * 1000 + (stat.tv_nsec as u64) / 1000000\n         }\n         let kind = match (stat.st_mode as c_int) & libc::S_IFMT {\n             libc::S_IFREG => io::TypeFile,"}]}