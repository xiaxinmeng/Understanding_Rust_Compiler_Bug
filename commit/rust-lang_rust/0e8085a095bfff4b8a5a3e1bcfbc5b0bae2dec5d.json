{"sha": "0e8085a095bfff4b8a5a3e1bcfbc5b0bae2dec5d", "node_id": "C_kwDOAAsO6NoAKDBlODA4NWEwOTViZmZmNGI4YTVhM2UxYmNmYmM1YjBiYWUyZGVjNWQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-20T08:46:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-20T08:46:52Z"}, "message": "Rollup merge of #109266 - petrochenkov:docice4, r=petrochenkov\n\nrustdoc: Correctly merge import's and its target's docs in one more case\n\nFixes https://github.com/rust-lang/rust/issues/108334.\nFixes https://github.com/rust-lang/rust/issues/108378.\nFixes https://github.com/rust-lang/rust/issues/108658.", "tree": {"sha": "defc15bb6acbc7519ac4525260d19c9e2ee3c9ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/defc15bb6acbc7519ac4525260d19c9e2ee3c9ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e8085a095bfff4b8a5a3e1bcfbc5b0bae2dec5d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkGB18CRBK7hj4Ov3rIwAAX9wIAH6Bgsa5dfhYXkHPDfobu96R\nCwZ0S+x8sM78gPGHN5yIQTGRdYm5FZ329LGMYg3cY7cjkLiq7jntdk/ZUoUtqXxh\ndvwAR3R8dvHAE8RKlXXe8RwETsXxZ/VHHUSOXbpaoGXKDTmHzAXA3z7jJVT6KrfC\n+8ruKZGFy1uuYFuwcWo1Q3inRdWXzNCL/be7zhAdfxNhf7x4vWaL1TNaBfQvZZ6Q\ncYIoC0JHILraEGEOXh23LnWRp7kVRe7rYb3LOZdQhLRjONZO2EWTBNdFIvtCTAM+\nAtxgYRH36xi/9738RMdKaeRoToxZVGmd/bbeMZqI2dwum/XsDZUmKornBOJiysY=\n=xhWX\n-----END PGP SIGNATURE-----\n", "payload": "tree defc15bb6acbc7519ac4525260d19c9e2ee3c9ae\nparent 96d5dd6fca93322babc1caa531aa789f4e82ecf6\nparent 5e0fc0459e6ffd70ffbc0e540cce8623f21809a9\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1679302012 +0100\ncommitter GitHub <noreply@github.com> 1679302012 +0100\n\nRollup merge of #109266 - petrochenkov:docice4, r=petrochenkov\n\nrustdoc: Correctly merge import's and its target's docs in one more case\n\nFixes https://github.com/rust-lang/rust/issues/108334.\nFixes https://github.com/rust-lang/rust/issues/108378.\nFixes https://github.com/rust-lang/rust/issues/108658.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e8085a095bfff4b8a5a3e1bcfbc5b0bae2dec5d", "html_url": "https://github.com/rust-lang/rust/commit/0e8085a095bfff4b8a5a3e1bcfbc5b0bae2dec5d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e8085a095bfff4b8a5a3e1bcfbc5b0bae2dec5d/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96d5dd6fca93322babc1caa531aa789f4e82ecf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/96d5dd6fca93322babc1caa531aa789f4e82ecf6", "html_url": "https://github.com/rust-lang/rust/commit/96d5dd6fca93322babc1caa531aa789f4e82ecf6"}, {"sha": "5e0fc0459e6ffd70ffbc0e540cce8623f21809a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e0fc0459e6ffd70ffbc0e540cce8623f21809a9", "html_url": "https://github.com/rust-lang/rust/commit/5e0fc0459e6ffd70ffbc0e540cce8623f21809a9"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "e3e5454ef5443072d7ed3998a559430f69e533b4", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0e8085a095bfff4b8a5a3e1bcfbc5b0bae2dec5d/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e8085a095bfff4b8a5a3e1bcfbc5b0bae2dec5d/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=0e8085a095bfff4b8a5a3e1bcfbc5b0bae2dec5d", "patch": "@@ -39,6 +39,7 @@ use std::hash::Hash;\n use std::mem;\n use thin_vec::ThinVec;\n \n+use crate::clean::inline::merge_attrs;\n use crate::core::{self, DocContext, ImplTraitParam};\n use crate::formats::item_type::ItemType;\n use crate::visit_ast::Module as DocModule;\n@@ -2373,21 +2374,22 @@ fn clean_maybe_renamed_item<'tcx>(\n             _ => unreachable!(\"not yet converted\"),\n         };\n \n-        let mut extra_attrs = Vec::new();\n+        let mut import_attrs = Vec::new();\n+        let mut target_attrs = Vec::new();\n         if let Some(import_id) = import_id &&\n             let Some(hir::Node::Item(use_node)) = cx.tcx.hir().find_by_def_id(import_id)\n         {\n             let is_inline = inline::load_attrs(cx, import_id.to_def_id()).lists(sym::doc).get_word_attr(sym::inline).is_some();\n             // Then we get all the various imports' attributes.\n-            get_all_import_attributes(use_node, cx.tcx, item.owner_id.def_id, &mut extra_attrs, is_inline);\n-            add_without_unwanted_attributes(&mut extra_attrs, inline::load_attrs(cx, def_id), is_inline);\n+            get_all_import_attributes(use_node, cx.tcx, item.owner_id.def_id, &mut import_attrs, is_inline);\n+            add_without_unwanted_attributes(&mut target_attrs, inline::load_attrs(cx, def_id), is_inline);\n         } else {\n             // We only keep the item's attributes.\n-            extra_attrs.extend_from_slice(inline::load_attrs(cx, def_id));\n+            target_attrs.extend_from_slice(inline::load_attrs(cx, def_id));\n         }\n \n-        let attrs = Attributes::from_ast(&extra_attrs);\n-        let cfg = extra_attrs.cfg(cx.tcx, &cx.cache.hidden_cfg);\n+        let import_parent = import_id.map(|import_id| cx.tcx.local_parent(import_id).to_def_id());\n+        let (attrs, cfg) =  merge_attrs(cx, import_parent, &target_attrs, Some(&import_attrs));\n \n         let mut item =\n             Item::from_def_id_and_attrs_and_parts(def_id, Some(name), kind, Box::new(attrs), cfg);"}, {"sha": "31fef032b0fc959cfca692666144c9a22e36fcd3", "filename": "tests/rustdoc-ui/intra-doc/import-inline-merge.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0e8085a095bfff4b8a5a3e1bcfbc5b0bae2dec5d/tests%2Frustdoc-ui%2Fintra-doc%2Fimport-inline-merge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e8085a095bfff4b8a5a3e1bcfbc5b0bae2dec5d/tests%2Frustdoc-ui%2Fintra-doc%2Fimport-inline-merge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fimport-inline-merge.rs?ref=0e8085a095bfff4b8a5a3e1bcfbc5b0bae2dec5d", "patch": "@@ -0,0 +1,16 @@\n+// Import for `A` is inlined and doc comments on the import and `A` itself are merged.\n+// After the merge they still have correct parent scopes to resolve both `[A]` and `[B]`.\n+\n+// check-pass\n+\n+#![allow(rustdoc::private_intra_doc_links)]\n+\n+mod m {\n+    /// [B]\n+    pub struct A {}\n+\n+    pub struct B {}\n+}\n+\n+/// [A]\n+pub use m::A;"}]}