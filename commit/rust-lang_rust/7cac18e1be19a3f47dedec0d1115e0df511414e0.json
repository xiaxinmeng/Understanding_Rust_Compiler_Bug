{"sha": "7cac18e1be19a3f47dedec0d1115e0df511414e0", "node_id": "C_kwDOAAsO6NoAKDdjYWMxOGUxYmUxOWEzZjQ3ZGVkZWMwZDExMTVlMGRmNTExNDE0ZTA", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-09-22T12:55:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-22T12:55:54Z"}, "message": "Rollup merge of #102076 - cuviper:transmute-discr-endian, r=jackh726\n\nrustc_transmute: fix big-endian discriminants\n\nI noticed that some new tests were failing in Fedora on s390x only, which usually means there's a problem with big-endian, and sure enough there's a FIXME(``@jswrenn)`` for that in `rustc_transmute`. This patch implements the appropriate consideration for target endianness, rather than using native (host) endian.", "tree": {"sha": "486a82ffb306e508a15f59f5453c8de08e632a8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/486a82ffb306e508a15f59f5453c8de08e632a8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cac18e1be19a3f47dedec0d1115e0df511414e0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjLFtaCRBK7hj4Ov3rIwAAkrcIAAYaw7p/SOE8I8ryKcF6ZAsr\n57g7NxMaG3gL5KEh3TN6eGiWVDeWFqeOKrha4tP9K/W7e5f1A0D/TNxmHaJw2T/Q\nwk278NQT6KcsEQeMaXtJl4NG0vcUDm1ogMFqiGC0ytlqy6rfSAoxhTa5Ljd/Z9R6\nOV0T8K9DD6y7OHc4XkCfIdvr9ojpfPU0CQS2jUJYTnZlS3/vbLi0jAN0ERVcGO0x\nxUuYvft3HahHSO7AIy4057rIUXosuz5x+ZE4gFj77tBMIj6Zd6kEcftXd416veM1\neIEVkUOMP9S4JFYj0dDHCmCBbXWpha0wOGN3KZN653KuFhtPbXbpYalP7uDNmpI=\n=G5Hv\n-----END PGP SIGNATURE-----\n", "payload": "tree 486a82ffb306e508a15f59f5453c8de08e632a8a\nparent 8bf533593df00bca22697e431699ddb1d2aac69d\nparent a72666ed56ec5f1b6d254c7020cf86143edc6dbd\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1663851354 +0530\ncommitter GitHub <noreply@github.com> 1663851354 +0530\n\nRollup merge of #102076 - cuviper:transmute-discr-endian, r=jackh726\n\nrustc_transmute: fix big-endian discriminants\n\nI noticed that some new tests were failing in Fedora on s390x only, which usually means there's a problem with big-endian, and sure enough there's a FIXME(``@jswrenn)`` for that in `rustc_transmute`. This patch implements the appropriate consideration for target endianness, rather than using native (host) endian.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cac18e1be19a3f47dedec0d1115e0df511414e0", "html_url": "https://github.com/rust-lang/rust/commit/7cac18e1be19a3f47dedec0d1115e0df511414e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cac18e1be19a3f47dedec0d1115e0df511414e0/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bf533593df00bca22697e431699ddb1d2aac69d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8bf533593df00bca22697e431699ddb1d2aac69d", "html_url": "https://github.com/rust-lang/rust/commit/8bf533593df00bca22697e431699ddb1d2aac69d"}, {"sha": "a72666ed56ec5f1b6d254c7020cf86143edc6dbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/a72666ed56ec5f1b6d254c7020cf86143edc6dbd", "html_url": "https://github.com/rust-lang/rust/commit/a72666ed56ec5f1b6d254c7020cf86143edc6dbd"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "acd4fa63d7823ac83c1ca4749525b578f90abe6d", "filename": "compiler/rustc_transmute/src/layout/tree.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7cac18e1be19a3f47dedec0d1115e0df511414e0/compiler%2Frustc_transmute%2Fsrc%2Flayout%2Ftree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cac18e1be19a3f47dedec0d1115e0df511414e0/compiler%2Frustc_transmute%2Fsrc%2Flayout%2Ftree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_transmute%2Fsrc%2Flayout%2Ftree.rs?ref=7cac18e1be19a3f47dedec0d1115e0df511414e0", "patch": "@@ -404,7 +404,7 @@ pub(crate) mod rustc {\n                 .unwrap();\n                 trace!(?discr_layout, \"computed discriminant layout\");\n                 variant_layout = variant_layout.extend(discr_layout).unwrap().0;\n-                tree = tree.then(Self::from_disr(discr, tcx, layout_summary.discriminant_size));\n+                tree = tree.then(Self::from_discr(discr, tcx, layout_summary.discriminant_size));\n             }\n \n             // Next come fields.\n@@ -444,11 +444,21 @@ pub(crate) mod rustc {\n             Ok(tree)\n         }\n \n-        pub fn from_disr(discr: Discr<'tcx>, tcx: TyCtxt<'tcx>, size: usize) -> Self {\n-            // FIXME(@jswrenn): I'm certain this is missing needed endian nuance.\n-            let bytes = discr.val.to_ne_bytes();\n-            let bytes = &bytes[..size];\n-            Self::Seq(bytes.into_iter().copied().map(|b| Self::from_bits(b)).collect())\n+        pub fn from_discr(discr: Discr<'tcx>, tcx: TyCtxt<'tcx>, size: usize) -> Self {\n+            use rustc_target::abi::Endian;\n+\n+            let bytes: [u8; 16];\n+            let bytes = match tcx.data_layout.endian {\n+                Endian::Little => {\n+                    bytes = discr.val.to_le_bytes();\n+                    &bytes[..size]\n+                }\n+                Endian::Big => {\n+                    bytes = discr.val.to_be_bytes();\n+                    &bytes[bytes.len() - size..]\n+                }\n+            };\n+            Self::Seq(bytes.iter().map(|&b| Self::from_bits(b)).collect())\n         }\n     }\n "}]}