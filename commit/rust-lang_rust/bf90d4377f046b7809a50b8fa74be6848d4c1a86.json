{"sha": "bf90d4377f046b7809a50b8fa74be6848d4c1a86", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmOTBkNDM3N2YwNDZiNzgwOWE1MGI4ZmE3NGJlNjg0OGQ0YzFhODY=", "commit": {"author": {"name": "Aaron Power", "email": "theaaronepower@gmail.com", "date": "2018-06-22T20:23:17Z"}, "committer": {"name": "Aaron Power", "email": "theaaronepower@gmail.com", "date": "2018-06-22T20:23:17Z"}, "message": "Updated RELEASES for 1.28.0", "tree": {"sha": "8e76806329961dfb5c97e340f7de7f68c0326a51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e76806329961dfb5c97e340f7de7f68c0326a51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf90d4377f046b7809a50b8fa74be6848d4c1a86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf90d4377f046b7809a50b8fa74be6848d4c1a86", "html_url": "https://github.com/rust-lang/rust/commit/bf90d4377f046b7809a50b8fa74be6848d4c1a86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf90d4377f046b7809a50b8fa74be6848d4c1a86/comments", "author": null, "committer": null, "parents": [{"sha": "8f024479d4e702647e7a772e06f77391abcfa571", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f024479d4e702647e7a772e06f77391abcfa571", "html_url": "https://github.com/rust-lang/rust/commit/8f024479d4e702647e7a772e06f77391abcfa571"}], "stats": {"total": 138, "additions": 138, "deletions": 0}, "files": [{"sha": "1dee94b76ac318f3c9cbdffb2b26c490f2fa322e", "filename": "RELEASES.md", "status": "modified", "additions": 138, "deletions": 0, "changes": 138, "blob_url": "https://github.com/rust-lang/rust/blob/bf90d4377f046b7809a50b8fa74be6848d4c1a86/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/bf90d4377f046b7809a50b8fa74be6848d4c1a86/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=bf90d4377f046b7809a50b8fa74be6848d4c1a86", "patch": "@@ -1,3 +1,141 @@\n+Version 1.28.0 (2018-08-02)\n+===========================\n+\n+Language\n+--------\n+- [Stabilised the `#[repr(transparent)]` attribute.][51562] This attribute\n+  allows a Rust newtype wrapper (`struct NewType<T>(T);`) to be represented as\n+  the inner type across Foreign Function Interface (FFI) boundaries.\n+- [The keywords `pure`, `sizeof`, `alignof`, and `offsetof` have been unreserved\n+  and can now be used as identifiers.][51196]\n+- [Stabilised the `GlobalAlloc` trait and `#[global_allocator]`\n+  attribute.][51241] This will allow users to specify a global allocator for\n+  their program.\n+- [Unit test functions marked with the `#[test]` attribute can now return\n+  `Result<(), E: Debug>` in addition to `()`.][51298]\n+- [Stabilised a `lifetime` specifier to `macro_rules!` allowing macros to easily\n+  target lifetimes.][50385]\n+\n+Compiler\n+--------\n+- [Stabilised the `s` and `z` optimisation levels.][50265] These optimisations\n+  prioritise making smaller binary sizes. `z` is the same as `s` with the\n+  exception that it does not vectorise loops, which typically results in an even\n+  smaller binary.\n+- [Stabilised the short error format.][49546] Specified with\n+  `--error-format=short` this option will provide a more compressed output of\n+  rust error messages.\n+- [Added a lint warning when you have duplicated `macro_export`s.][50143]\n+- [Reduced the number of allocations in the macro parser.][50855] This can\n+  improve compile times of macro heavy crates on average by 5%.\n+\n+Libraries\n+---------\n+- [Implemented `Default` for `&mut str`.][51306]\n+- [Implemented `From<bool>` for all integer and unsigned number types.][50554]\n+- [Implemented `Extend` for `()`.][50234]\n+- [The `Debug` implementation of `time::Duration` should now be more easily\n+  human readable.][50364] Previously a `Duration` of one second would printed as\n+  `Duration { secs: 1, nanos: 0 }` will now be printed as `1s`.\n+- [Implemented `From<&String>` for `Cow<str>`, `From<&Vec<T>>` for `Cow<[T]>`,\n+  `From<Cow<CStr>>` for `CString`, `From<CString>, From<CStr>, From<&CString>`\n+  for `Cow<CStr>`, `From<OsString>, From<OsStr>, From<&OsString>` for\n+  `Cow<OsStr>`, `From<&PathBuf>` for `Cow<Path>`, and `From<Cow<Path>>`\n+  for `PathBuf`.][50170]\n+- [`DirEntry::metadata` now uses `fstatat` instead of `lstat` when\n+  possible.][51050] This can provide up to a 40% speed increase.\n+- [Improved error messages when using `format!`.][50610]\n+\n+Stabilized APIs\n+---------------\n+- [`Iterator::step_by`]\n+- [`Path::ancestors`]\n+- [`btree_map::Entry::or_default`]\n+- [`fmt::Alignment`]\n+- [`hash_map::Entry::or_default`]\n+- [`iter::repeat_with`]\n+- [`num::NonZeroU128`]\n+- [`num::NonZeroU16`]\n+- [`num::NonZeroU32`]\n+- [`num::NonZeroU64`]\n+- [`num::NonZeroU8`]\n+- [`ops::RangeBounds`]\n+- [`slice::SliceIndex`]\n+- [`slice::from_mut`]\n+- [`slice::from_ref`]\n+- [`{Any + Send + Sync}::downcast_mut`]\n+- [`{Any + Send + Sync}::downcast_ref`]\n+- [`{Any + Send + Sync}::is`]\n+\n+Cargo\n+-----\n+- [Cargo will now no longer allow you to publish crates with build scripts that\n+  modify the `src` directory.][5584] The `src` directory in a crate should be\n+  considered to be immutable.\n+\n+Misc\n+----\n+- [Stabilised the `suggestion_applicability` field in the json output.][50486]\n+  This will allow dev tools to check whether a code suggestion would apply\n+  to them.\n+\n+Compatibility Notes\n+-------------------\n+- [Rust will no longer consider trait objects with duplicated constraints to\n+  have implementations.][51276] For example the below code will now fail\n+  to compile.\n+  ```rust\n+  trait Trait {}\n+\n+  impl Trait + Send {\n+      fn test(&self) { println!(\"one\"); } //~ ERROR duplicate definitions with name `test`\n+  }\n+\n+  impl Trait + Send + Send {\n+      fn test(&self) { println!(\"two\"); }\n+  }\n+  ```\n+\n+[49546]: https://github.com/rust-lang/rust/pull/49546/\n+[50143]: https://github.com/rust-lang/rust/pull/50143/\n+[50170]: https://github.com/rust-lang/rust/pull/50170/\n+[50234]: https://github.com/rust-lang/rust/pull/50234/\n+[50265]: https://github.com/rust-lang/rust/pull/50265/\n+[50364]: https://github.com/rust-lang/rust/pull/50364/\n+[50385]: https://github.com/rust-lang/rust/pull/50385/\n+[50486]: https://github.com/rust-lang/rust/pull/50486/\n+[50554]: https://github.com/rust-lang/rust/pull/50554/\n+[50610]: https://github.com/rust-lang/rust/pull/50610/\n+[50855]: https://github.com/rust-lang/rust/pull/50855/\n+[51050]: https://github.com/rust-lang/rust/pull/51050/\n+[51196]: https://github.com/rust-lang/rust/pull/51196/\n+[51200]: https://github.com/rust-lang/rust/pull/51200/\n+[51241]: https://github.com/rust-lang/rust/pull/51241/\n+[51276]: https://github.com/rust-lang/rust/pull/51276/\n+[51298]: https://github.com/rust-lang/rust/pull/51298/\n+[51306]: https://github.com/rust-lang/rust/pull/51306/\n+[51562]: https://github.com/rust-lang/rust/pull/51562/\n+[5584]: https://github.com/rust-lang/cargo/pull/5584/\n+[`Iterator::step_by`]: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.step_by\n+[`Path::ancestors`]: https://doc.rust-lang.org/std/path/struct.Path.html#method.ancestors\n+[`btree_map::Entry::or_default`]: https://doc.rust-lang.org/std/collections/btree_map/enum.Entry.html#method.or_default\n+[`fmt::Alignment`]: https://doc.rust-lang.org/std/fmt/enum.Alignment.html\n+[`hash_map::Entry::or_default`]: https://doc.rust-lang.org/std/collections/btree_map/enum.Entry.html#method.or_default\n+[`iter::repeat_with`]: https://doc.rust-lang.org/std/iter/fn.repeat_with.html\n+[`num::NonZeroU128`]: https://doc.rust-lang.org/std/num/struct.NonZeroU128.html\n+[`num::NonZeroU16`]: https://doc.rust-lang.org/std/num/struct.NonZeroU16.html\n+[`num::NonZeroU32`]: https://doc.rust-lang.org/std/num/struct.NonZeroU32.html\n+[`num::NonZeroU64`]: https://doc.rust-lang.org/std/num/struct.NonZeroU64.html\n+[`num::NonZeroU8`]: https://doc.rust-lang.org/std/num/struct.NonZeroU8.html\n+[`ops::RangeBounds`]: https://doc.rust-lang.org/std/ops/trait.RangeBounds.html\n+[`slice::SliceIndex`]: https://doc.rust-lang.org/std/slice/trait.SliceIndex.html\n+[`slice::from_mut`]: https://doc.rust-lang.org/std/slice/fn.from_mut.html\n+[`slice::from_ref`]: https://doc.rust-lang.org/std/slice/fn.from_ref.html\n+[`{Any + Send + Sync}::downcast_mut`]: https://doc.rust-lang.org/std/any/trait.Any.html#method.downcast_mut-2\n+[`{Any + Send + Sync}::downcast_ref`]: https://doc.rust-lang.org/std/any/trait.Any.html#method.downcast_ref-2\n+[`{Any + Send + Sync}::is`]: https://doc.rust-lang.org/std/any/trait.Any.html#method.is-2\n+\n+\n Version 1.27.0 (2018-06-21)\n ==========================\n "}]}