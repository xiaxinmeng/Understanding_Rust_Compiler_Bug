{"sha": "a5049e13bf35f70da329a64d8ea4435665f5caba", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1MDQ5ZTEzYmYzNWY3MGRhMzI5YTY0ZDhlYTQ0MzU2NjVmNWNhYmE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-07-31T13:22:03Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-07-31T13:22:03Z"}, "message": "internal: make non-zero times stand out in profile", "tree": {"sha": "fb3b953330b4f3617fc906338086e3db1944969f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb3b953330b4f3617fc906338086e3db1944969f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5049e13bf35f70da329a64d8ea4435665f5caba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5049e13bf35f70da329a64d8ea4435665f5caba", "html_url": "https://github.com/rust-lang/rust/commit/a5049e13bf35f70da329a64d8ea4435665f5caba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5049e13bf35f70da329a64d8ea4435665f5caba/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08756012a5a03a2e5a474768ff1472a4fd2b9a52", "url": "https://api.github.com/repos/rust-lang/rust/commits/08756012a5a03a2e5a474768ff1472a4fd2b9a52", "html_url": "https://github.com/rust-lang/rust/commit/08756012a5a03a2e5a474768ff1472a4fd2b9a52"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "3ce11fd86c81adc0977ee010bb46ec41511bf05e", "filename": "crates/profile/src/hprof.rs", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a5049e13bf35f70da329a64d8ea4435665f5caba/crates%2Fprofile%2Fsrc%2Fhprof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5049e13bf35f70da329a64d8ea4435665f5caba/crates%2Fprofile%2Fsrc%2Fhprof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fprofile%2Fsrc%2Fhprof.rs?ref=a5049e13bf35f70da329a64d8ea4435665f5caba", "patch": "@@ -2,7 +2,7 @@\n use std::{\n     cell::RefCell,\n     collections::{BTreeMap, HashSet},\n-    env,\n+    env, fmt,\n     io::{stderr, Write},\n     sync::{\n         atomic::{AtomicBool, Ordering},\n@@ -278,9 +278,9 @@ fn print(\n     let detail = tree[curr].detail.as_ref().map(|it| format!(\" @ {}\", it)).unwrap_or_default();\n     writeln!(\n         out,\n-        \"{}{:5}ms - {}{}\",\n+        \"{}{} - {}{}\",\n         current_indent,\n-        tree[curr].duration.as_millis(),\n+        ms(tree[curr].duration),\n         tree[curr].label,\n         detail,\n     )\n@@ -302,14 +302,25 @@ fn print(\n     }\n \n     for (child_msg, (duration, count)) in short_children.iter() {\n-        let millis = duration.as_millis();\n-        writeln!(out, \"    {}{:5}ms - {} ({} calls)\", current_indent, millis, child_msg, count)\n+        writeln!(out, \"    {}{} - {} ({} calls)\", current_indent, ms(*duration), child_msg, count)\n             .expect(\"printing profiling info\");\n     }\n \n     let unaccounted = tree[curr].duration - accounted_for;\n     if tree.children(curr).next().is_some() && unaccounted > longer_than {\n-        writeln!(out, \"    {}{:5}ms - ???\", current_indent, unaccounted.as_millis())\n+        writeln!(out, \"    {}{} - ???\", current_indent, ms(unaccounted))\n             .expect(\"printing profiling info\");\n     }\n }\n+\n+#[allow(non_camel_case_types)]\n+struct ms(Duration);\n+\n+impl fmt::Display for ms {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        match self.0.as_millis() {\n+            0 => f.write_str(\"    0  \"),\n+            n => write!(f, \"{:5}ms\", n),\n+        }\n+    }\n+}"}]}