{"sha": "0838347d8f77091ffb5a30606010d0bbedda22a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4MzgzNDdkOGY3NzA5MWZmYjVhMzA2MDYwMTBkMGJiZWRkYTIyYTQ=", "commit": {"author": {"name": "Vytautas Astrauskas", "email": "vastrauskas@gmail.com", "date": "2020-05-19T14:26:42Z"}, "committer": {"name": "Vytautas Astrauskas", "email": "vastrauskas@gmail.com", "date": "2020-05-24T22:02:54Z"}, "message": "Change the scheduling to execute timeout callbacks first.", "tree": {"sha": "f33023a64889a583948bcb8d430e52819578386b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f33023a64889a583948bcb8d430e52819578386b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0838347d8f77091ffb5a30606010d0bbedda22a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0838347d8f77091ffb5a30606010d0bbedda22a4", "html_url": "https://github.com/rust-lang/rust/commit/0838347d8f77091ffb5a30606010d0bbedda22a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0838347d8f77091ffb5a30606010d0bbedda22a4/comments", "author": {"login": "vakaras", "id": 75347, "node_id": "MDQ6VXNlcjc1MzQ3", "avatar_url": "https://avatars.githubusercontent.com/u/75347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vakaras", "html_url": "https://github.com/vakaras", "followers_url": "https://api.github.com/users/vakaras/followers", "following_url": "https://api.github.com/users/vakaras/following{/other_user}", "gists_url": "https://api.github.com/users/vakaras/gists{/gist_id}", "starred_url": "https://api.github.com/users/vakaras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vakaras/subscriptions", "organizations_url": "https://api.github.com/users/vakaras/orgs", "repos_url": "https://api.github.com/users/vakaras/repos", "events_url": "https://api.github.com/users/vakaras/events{/privacy}", "received_events_url": "https://api.github.com/users/vakaras/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vakaras", "id": 75347, "node_id": "MDQ6VXNlcjc1MzQ3", "avatar_url": "https://avatars.githubusercontent.com/u/75347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vakaras", "html_url": "https://github.com/vakaras", "followers_url": "https://api.github.com/users/vakaras/followers", "following_url": "https://api.github.com/users/vakaras/following{/other_user}", "gists_url": "https://api.github.com/users/vakaras/gists{/gist_id}", "starred_url": "https://api.github.com/users/vakaras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vakaras/subscriptions", "organizations_url": "https://api.github.com/users/vakaras/orgs", "repos_url": "https://api.github.com/users/vakaras/repos", "events_url": "https://api.github.com/users/vakaras/events{/privacy}", "received_events_url": "https://api.github.com/users/vakaras/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdfd56b75b2aefefe6545eed704550ff5de3bdd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdfd56b75b2aefefe6545eed704550ff5de3bdd7", "html_url": "https://github.com/rust-lang/rust/commit/fdfd56b75b2aefefe6545eed704550ff5de3bdd7"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "70c2419c4d490b9af540abc517fd6ee4fbfdcb4d", "filename": "src/thread.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0838347d8f77091ffb5a30606010d0bbedda22a4/src%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0838347d8f77091ffb5a30606010d0bbedda22a4/src%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fthread.rs?ref=0838347d8f77091ffb5a30606010d0bbedda22a4", "patch": "@@ -441,6 +441,22 @@ impl<'mir, 'tcx: 'mir> ThreadManager<'mir, 'tcx> {\n             }\n             return Ok(SchedulingAction::Stop);\n         }\n+        // At least for `pthread_cond_timedwait` we need to report timeout when\n+        // the function is called already after the specified time even if a\n+        // signal is received before the thread gets scheduled. Therefore, we\n+        // need to schedule all timeout callbacks before we continue regular\n+        // execution.\n+        //\n+        // Documentation:\n+        // https://pubs.opengroup.org/onlinepubs/9699919799/functions/pthread_cond_timedwait.html#\n+        if let Some(sleep_time) =\n+            self.timeout_callbacks.values().map(|info| info.call_time.get_wait_time()).min()\n+        {\n+            if sleep_time == Duration::new(0, 0) {\n+                return Ok(SchedulingAction::ExecuteTimeoutCallback);\n+            }\n+        }\n+        // No callbacks scheduled, pick a regular thread to execute.\n         if self.threads[self.active_thread].state == ThreadState::Enabled\n             && !self.yield_active_thread\n         {"}]}