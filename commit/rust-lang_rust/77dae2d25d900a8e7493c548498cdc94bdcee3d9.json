{"sha": "77dae2d25d900a8e7493c548498cdc94bdcee3d9", "node_id": "C_kwDOAAsO6NoAKDc3ZGFlMmQyNWQ5MDBhOGU3NDkzYzU0ODQ5OGNkYzk0YmRjZWUzZDk", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-02-06T20:16:49Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-02-11T20:45:51Z"}, "message": "skip const eval if we have an error in borrowck", "tree": {"sha": "d0a3f207a61fd7da0ff094c84f4499e192149cc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0a3f207a61fd7da0ff094c84f4499e192149cc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77dae2d25d900a8e7493c548498cdc94bdcee3d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77dae2d25d900a8e7493c548498cdc94bdcee3d9", "html_url": "https://github.com/rust-lang/rust/commit/77dae2d25d900a8e7493c548498cdc94bdcee3d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77dae2d25d900a8e7493c548498cdc94bdcee3d9/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ad272b282dc28c1366cf0516315f00b13d1621e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ad272b282dc28c1366cf0516315f00b13d1621e", "html_url": "https://github.com/rust-lang/rust/commit/4ad272b282dc28c1366cf0516315f00b13d1621e"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "7235b8416ad6575c34215d0ba124ca7aae9b8e55", "filename": "compiler/rustc_const_eval/src/const_eval/eval_queries.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/77dae2d25d900a8e7493c548498cdc94bdcee3d9/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Feval_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77dae2d25d900a8e7493c548498cdc94bdcee3d9/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Feval_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Feval_queries.rs?ref=77dae2d25d900a8e7493c548498cdc94bdcee3d9", "patch": "@@ -287,6 +287,9 @@ pub fn eval_to_allocation_raw_provider<'tcx>(\n             if let Some(error_reported) = tcx.typeck_opt_const_arg(def).tainted_by_errors {\n                 return Err(ErrorHandled::Reported(error_reported));\n             }\n+            if tcx.mir_borrowck_opt_const_arg(def).tainted_by_errors {\n+                return Err(ErrorHandled::Reported(ErrorReported {}));\n+            }\n         }\n         if !tcx.is_mir_available(def.did) {\n             tcx.sess.delay_span_bug("}, {"sha": "00c066a2851c3b2e13261ec77c4448dfe602aa1a", "filename": "compiler/rustc_const_eval/src/interpret/eval_context.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/77dae2d25d900a8e7493c548498cdc94bdcee3d9/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77dae2d25d900a8e7493c548498cdc94bdcee3d9/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs?ref=77dae2d25d900a8e7493c548498cdc94bdcee3d9", "patch": "@@ -514,10 +514,14 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         if let Some(def) = def.as_local() {\n             if self.tcx.has_typeck_results(def.did) {\n                 if let Some(error_reported) = self.tcx.typeck_opt_const_arg(def).tainted_by_errors {\n-                    throw_inval!(AlreadyReported(error_reported))\n+                    throw_inval!(AlreadyReported(error_reported));\n+                }\n+                if self.tcx.mir_borrowck_opt_const_arg(def).tainted_by_errors {\n+                    throw_inval!(AlreadyReported(rustc_errors::ErrorReported {}));\n                 }\n             }\n         }\n+\n         trace!(\"load mir(instance={:?}, promoted={:?})\", instance, promoted);\n         if let Some(promoted) = promoted {\n             return Ok(&self.tcx.promoted_mir_opt_const_arg(def)[promoted]);"}, {"sha": "4a3efb5c1b8ef3a295395b79832c8e06b7e31c70", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/77dae2d25d900a8e7493c548498cdc94bdcee3d9/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77dae2d25d900a8e7493c548498cdc94bdcee3d9/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=77dae2d25d900a8e7493c548498cdc94bdcee3d9", "patch": "@@ -8,7 +8,9 @@ use crate::lint::{struct_lint_level, LintDiagnosticBuilder, LintLevelSource};\n use crate::middle::resolve_lifetime::{self, LifetimeScopeForPath};\n use crate::middle::stability;\n use crate::mir::interpret::{self, Allocation, ConstValue, Scalar};\n-use crate::mir::{Body, Field, Local, Place, PlaceElem, ProjectionKind, Promoted};\n+use crate::mir::{\n+    Body, BorrowCheckResult, Field, Local, Place, PlaceElem, ProjectionKind, Promoted,\n+};\n use crate::thir::Thir;\n use crate::traits;\n use crate::ty::query::{self, TyCtxtAt};\n@@ -1061,6 +1063,17 @@ impl<'tcx> TyCtxt<'tcx> {\n         }\n     }\n \n+    pub fn mir_borrowck_opt_const_arg(\n+        self,\n+        def: ty::WithOptConstParam<LocalDefId>,\n+    ) -> &'tcx BorrowCheckResult<'tcx> {\n+        if let Some(param_did) = def.const_param_did {\n+            self.mir_borrowck_const_arg((def.did, param_did))\n+        } else {\n+            self.mir_borrowck(def.did)\n+        }\n+    }\n+\n     pub fn alloc_steal_thir(self, thir: Thir<'tcx>) -> &'tcx Steal<Thir<'tcx>> {\n         self.arena.alloc(Steal::new(thir))\n     }"}]}