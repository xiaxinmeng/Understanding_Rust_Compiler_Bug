{"sha": "8c9bf663d4a8074e4955d1ad3f85a3b82e946297", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjOWJmNjYzZDRhODA3NGU0OTU1ZDFhZDNmODVhM2I4MmU5NDYyOTc=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-01-03T00:21:35Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-01-04T15:21:22Z"}, "message": "rustc: Don't use relative paths for extended errors\n\nThese no longer work now that Cargo changes the cwd of rustc while it's running.\nInstead use an absolute path that's set by rustbuild.", "tree": {"sha": "60ba9e4cd702044773e52321995bd54fc5c545c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60ba9e4cd702044773e52321995bd54fc5c545c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c9bf663d4a8074e4955d1ad3f85a3b82e946297", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c9bf663d4a8074e4955d1ad3f85a3b82e946297", "html_url": "https://github.com/rust-lang/rust/commit/8c9bf663d4a8074e4955d1ad3f85a3b82e946297", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53fd0c50d847edb30c5673d7c4625ad8ee82db8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/53fd0c50d847edb30c5673d7c4625ad8ee82db8f", "html_url": "https://github.com/rust-lang/rust/commit/53fd0c50d847edb30c5673d7c4625ad8ee82db8f"}], "stats": {"total": 45, "additions": 36, "deletions": 9}, "files": [{"sha": "ce30d1f4cec42a050b21e567cc7f88ce98225c62", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=8c9bf663d4a8074e4955d1ad3f85a3b82e946297", "patch": "@@ -484,8 +484,8 @@ impl<'a> Builder<'a> {\n              } else {\n                  PathBuf::from(\"/path/to/nowhere/rustdoc/not/required\")\n              })\n-             .env(\"TEST_MIRI\", self.config.test_miri.to_string());\n-\n+             .env(\"TEST_MIRI\", self.config.test_miri.to_string())\n+             .env(\"RUSTC_ERROR_METADATA_DST\", self.extended_error_dir());\n         if let Some(n) = self.config.rust_codegen_units {\n             cargo.env(\"RUSTC_CODEGEN_UNITS\", n.to_string());\n         }"}, {"sha": "cc9be3cec34762fd073e998cbcd7b20c85e441e4", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=8c9bf663d4a8074e4955d1ad3f85a3b82e946297", "patch": "@@ -975,7 +975,8 @@ impl Step for ErrorIndex {\n         build.run(builder.tool_cmd(Tool::ErrorIndex)\n                     .arg(\"markdown\")\n                     .arg(&output)\n-                    .env(\"CFG_BUILD\", &build.build));\n+                    .env(\"CFG_BUILD\", &build.build)\n+                    .env(\"RUSTC_ERROR_METADATA_DST\", build.extended_error_dir()));\n \n         markdown_test(builder, compiler, &output);\n     }"}, {"sha": "832da24c994db784d0d7f4015523c0b98dcd0fdc", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=8c9bf663d4a8074e4955d1ad3f85a3b82e946297", "patch": "@@ -671,7 +671,8 @@ impl Step for ErrorIndex {\n         index.arg(out.join(\"error-index.html\"));\n \n         // FIXME: shouldn't have to pass this env var\n-        index.env(\"CFG_BUILD\", &build.build);\n+        index.env(\"CFG_BUILD\", &build.build)\n+             .env(\"RUSTC_ERROR_METADATA_DST\", build.extended_error_dir());\n \n         build.run(&mut index);\n     }"}, {"sha": "948bf29bbacc3b2d6a30b5d489ac124269751a4a", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=8c9bf663d4a8074e4955d1ad3f85a3b82e946297", "patch": "@@ -718,6 +718,11 @@ impl Build {\n         self.config.python.as_ref().unwrap()\n     }\n \n+    /// Temporary directory that extended error information is emitted to.\n+    fn extended_error_dir(&self) -> PathBuf {\n+        self.out.join(\"tmp/extended-error-metadata\")\n+    }\n+\n     /// Tests whether the `compiler` compiling for `target` should be forced to\n     /// use a stage1 compiler instead.\n     ///"}, {"sha": "44f23c11b04c3f8f0af61bd8505e09df59e34ba0", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=8c9bf663d4a8074e4955d1ad3f85a3b82e946297", "patch": "@@ -175,4 +175,5 @@ fn noop() {\n \n \n // Build the diagnostics array at the end so that the metadata includes error use sites.\n+#[cfg(not(stage0))] // remove after the next snapshot\n __build_diagnostic_array! { librustc, DIAGNOSTICS }"}, {"sha": "b4563f6cf2e7591b2c8eacf508c8f298b82689a7", "filename": "src/librustc_const_eval/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibrustc_const_eval%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibrustc_const_eval%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Flib.rs?ref=8c9bf663d4a8074e4955d1ad3f85a3b82e946297", "patch": "@@ -56,4 +56,5 @@ pub fn provide(providers: &mut Providers) {\n }\n \n // Build the diagnostics array at the end so that the metadata includes error use sites.\n+#[cfg(not(stage0))] // remove after the next snapshot\n __build_diagnostic_array! { librustc_const_eval, DIAGNOSTICS }"}, {"sha": "223c602ccd34a85222dbdd9fb9fe574f8c90fdd4", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=8c9bf663d4a8074e4955d1ad3f85a3b82e946297", "patch": "@@ -1268,6 +1268,14 @@ fn exit_on_err() -> ! {\n     panic!();\n }\n \n+#[cfg(stage0)]\n+pub fn diagnostics_registry() -> errors::registry::Registry {\n+    use errors::registry::Registry;\n+\n+    Registry::new(&[])\n+}\n+\n+#[cfg(not(stage0))]\n pub fn diagnostics_registry() -> errors::registry::Registry {\n     use errors::registry::Registry;\n "}, {"sha": "18117533c18f1479c4f4f2671b7ac2bfb066a33c", "filename": "src/librustc_metadata/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibrustc_metadata%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibrustc_metadata%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flib.rs?ref=8c9bf663d4a8074e4955d1ad3f85a3b82e946297", "patch": "@@ -58,4 +58,5 @@ pub mod cstore;\n pub mod dynamic_lib;\n pub mod locator;\n \n+#[cfg(not(stage0))] // remove after the next snapshot\n __build_diagnostic_array! { librustc_metadata, DIAGNOSTICS }"}, {"sha": "e9e7e688f1f072170625b30e28bd1bf5c7feebfa", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=8c9bf663d4a8074e4955d1ad3f85a3b82e946297", "patch": "@@ -79,4 +79,5 @@ pub fn provide(providers: &mut Providers) {\n     providers.const_eval = interpret::const_eval_provider;\n }\n \n+#[cfg(not(stage0))] // remove after the next snapshot\n __build_diagnostic_array! { librustc_mir, DIAGNOSTICS }"}, {"sha": "754c3bbd07406f49746d92dc768dcfea84b72b9e", "filename": "src/librustc_passes/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibrustc_passes%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibrustc_passes%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flib.rs?ref=8c9bf663d4a8074e4955d1ad3f85a3b82e946297", "patch": "@@ -45,6 +45,7 @@ mod mir_stats;\n pub mod no_asm;\n pub mod static_recursion;\n \n+#[cfg(not(stage0))] // remove after the next snapshot\n __build_diagnostic_array! { librustc_passes, DIAGNOSTICS }\n \n pub fn provide(providers: &mut Providers) {"}, {"sha": "38df5986ce2a90428911d4cda9216f5421da0e4c", "filename": "src/librustc_plugin/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibrustc_plugin%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibrustc_plugin%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin%2Flib.rs?ref=8c9bf663d4a8074e4955d1ad3f85a3b82e946297", "patch": "@@ -82,4 +82,5 @@ pub mod registry;\n pub mod load;\n pub mod build;\n \n+#[cfg(not(stage0))] // remove after the next snapshot\n __build_diagnostic_array! { librustc_plugin, DIAGNOSTICS }"}, {"sha": "d1dc54e7c3a8ec0ca622a050fe46b34af8939047", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=8c9bf663d4a8074e4955d1ad3f85a3b82e946297", "patch": "@@ -1725,4 +1725,5 @@ fn privacy_access_levels<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     Rc::new(visitor.access_levels)\n }\n \n+#[cfg(not(stage0))] // remove after the next snapshot\n __build_diagnostic_array! { librustc_privacy, DIAGNOSTICS }"}, {"sha": "f7d1c88fbc8dc363dfdbc5603eeafe8b3dd6b70b", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=8c9bf663d4a8074e4955d1ad3f85a3b82e946297", "patch": "@@ -4089,4 +4089,5 @@ pub enum MakeGlobMap {\n     No,\n }\n \n+#[cfg(not(stage0))] // remove after the next snapshot\n __build_diagnostic_array! { librustc_resolve, DIAGNOSTICS }"}, {"sha": "039dd94465d5b72d06c14e7fa43712d006b41441", "filename": "src/librustc_trans/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibrustc_trans%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibrustc_trans%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Flib.rs?ref=8c9bf663d4a8074e4955d1ad3f85a3b82e946297", "patch": "@@ -328,4 +328,5 @@ pub struct CrateInfo {\n     used_crates_dynamic: Vec<(CrateNum, LibSource)>,\n }\n \n+#[cfg(not(stage0))] // remove after the next snapshot\n __build_diagnostic_array! { librustc_trans, DIAGNOSTICS }"}, {"sha": "1dc98bc7a0072825a7ed32b1939f687774b3985b", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=8c9bf663d4a8074e4955d1ad3f85a3b82e946297", "patch": "@@ -380,4 +380,5 @@ pub fn hir_trait_to_predicates<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, hir_trait:\n     (principal, projections)\n }\n \n+#[cfg(not(stage0))] // remove after the next snapshot\n __build_diagnostic_array! { librustc_typeck, DIAGNOSTICS }"}, {"sha": "dc01a79190b3ad90eb884b20bf59a87f58e2c0e8", "filename": "src/libsyntax/diagnostics/metadata.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibsyntax%2Fdiagnostics%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibsyntax%2Fdiagnostics%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostics%2Fmetadata.rs?ref=8c9bf663d4a8074e4955d1ad3f85a3b82e946297", "patch": "@@ -14,19 +14,17 @@\n //! currently always a crate name.\n \n use std::collections::BTreeMap;\n-use std::path::PathBuf;\n+use std::env;\n use std::fs::{remove_file, create_dir_all, File};\n use std::io::Write;\n+use std::path::PathBuf;\n use std::error::Error;\n use rustc_serialize::json::as_json;\n \n use syntax_pos::{Span, FileName};\n use ext::base::ExtCtxt;\n use diagnostics::plugin::{ErrorMap, ErrorInfo};\n \n-// Default metadata directory to use for extended error JSON.\n-const ERROR_METADATA_PREFIX: &'static str = \"tmp/extended-errors\";\n-\n /// JSON encodable/decodable version of `ErrorInfo`.\n #[derive(PartialEq, RustcDecodable, RustcEncodable)]\n pub struct ErrorMetadata {\n@@ -59,7 +57,10 @@ impl ErrorLocation {\n ///\n /// See `output_metadata`.\n pub fn get_metadata_dir(prefix: &str) -> PathBuf {\n-    PathBuf::from(ERROR_METADATA_PREFIX).join(prefix)\n+    env::var_os(\"RUSTC_ERROR_METADATA_DST\")\n+        .map(PathBuf::from)\n+        .expect(\"env var `RUSTC_ERROR_METADATA_DST` isn't set\")\n+        .join(prefix)\n }\n \n /// Map `name` to a path in the given directory: <directory>/<name>.json"}, {"sha": "d7f7ff554db4bbf6ab64adfaa35e38ea87fdfe0a", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c9bf663d4a8074e4955d1ad3f85a3b82e946297/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=8c9bf663d4a8074e4955d1ad3f85a3b82e946297", "patch": "@@ -151,4 +151,5 @@ pub mod ext {\n #[cfg(test)]\n mod test_snippet;\n \n+#[cfg(not(stage0))] // remove after the next snapshot\n __build_diagnostic_array! { libsyntax, DIAGNOSTICS }"}]}