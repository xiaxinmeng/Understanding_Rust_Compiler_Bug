{"sha": "56209834a6a92e33c148d9a956b1074054c65994", "node_id": "C_kwDOAAsO6NoAKDU2MjA5ODM0YTZhOTJlMzNjMTQ4ZDlhOTU2YjEwNzQwNTRjNjU5OTQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-06-23T21:39:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-23T21:39:16Z"}, "message": "Rollup merge of #98390 - GuillaumeGomez:keyword-rustdoc-json, r=notriddle\n\nFixes handling of keywords in rustdoc json output\n\nFixes #98002.\n\nInstead of panicking, we just filter them out.\n\ncc ```@matthiaskrgr```\nr? ```@notriddle```", "tree": {"sha": "8188caf78440af67d63ff48e541ef3bf1371508d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8188caf78440af67d63ff48e541ef3bf1371508d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56209834a6a92e33c148d9a956b1074054c65994", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJitN2ECRBK7hj4Ov3rIwAApyIIACFuufw1Gm8FPUsLWVRDJp4i\nt7QDDhdUQApov86aeG4Qk5iDOOQ9RlVJwUOEKB9GWS0NAl4ZIwYFXTlmncP3pBF4\nXg8UVRfGt6uuYcAtSl5IFLytgYqmVFC8EXzEaY/USnA19bg/GfgA4D62oTfD17yO\nvs2g/72v/pz23FpnUWWcO0qVuTlQKSo7GgXw4WadCPDvkYgDbi72DOIXwT6bvGnB\n/GpzjxUTq90yVifBNkNq5SnDME4YgIQdhl4FXHrHgIZruH1Q0uZ/FCPet1/QLi5t\n7xlj5ghAdugzf3x8l2yLFTp5KMiDqKwtZAw5oTmKbukLoEeemjnI4rpzmQPcpgA=\n=I8OH\n-----END PGP SIGNATURE-----\n", "payload": "tree 8188caf78440af67d63ff48e541ef3bf1371508d\nparent aafddd2a8ad94b1095b790d34d1f66539430d9f8\nparent 75ad2f7a76170943aaf543c74097927e57a89f32\nauthor Michael Goulet <michael@errs.io> 1656020356 -0700\ncommitter GitHub <noreply@github.com> 1656020356 -0700\n\nRollup merge of #98390 - GuillaumeGomez:keyword-rustdoc-json, r=notriddle\n\nFixes handling of keywords in rustdoc json output\n\nFixes #98002.\n\nInstead of panicking, we just filter them out.\n\ncc ```@matthiaskrgr```\nr? ```@notriddle```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56209834a6a92e33c148d9a956b1074054c65994", "html_url": "https://github.com/rust-lang/rust/commit/56209834a6a92e33c148d9a956b1074054c65994", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56209834a6a92e33c148d9a956b1074054c65994/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aafddd2a8ad94b1095b790d34d1f66539430d9f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/aafddd2a8ad94b1095b790d34d1f66539430d9f8", "html_url": "https://github.com/rust-lang/rust/commit/aafddd2a8ad94b1095b790d34d1f66539430d9f8"}, {"sha": "75ad2f7a76170943aaf543c74097927e57a89f32", "url": "https://api.github.com/repos/rust-lang/rust/commits/75ad2f7a76170943aaf543c74097927e57a89f32", "html_url": "https://github.com/rust-lang/rust/commit/75ad2f7a76170943aaf543c74097927e57a89f32"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "c627dcc30d667bc16a906249c2d6a2703d07efcb", "filename": "src/librustdoc/json/conversions.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/56209834a6a92e33c148d9a956b1074054c65994/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56209834a6a92e33c148d9a956b1074054c65994/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fconversions.rs?ref=56209834a6a92e33c148d9a956b1074054c65994", "patch": "@@ -43,7 +43,7 @@ impl JsonRenderer<'_> {\n         let span = item.span(self.tcx);\n         let clean::Item { name, attrs: _, kind: _, visibility, item_id, cfg: _ } = item;\n         let inner = match *item.kind {\n-            clean::StrippedItem(_) => return None,\n+            clean::StrippedItem(_) | clean::KeywordItem(_) => return None,\n             _ => from_clean_item(item, self.tcx),\n         };\n         Some(Item {\n@@ -254,11 +254,8 @@ fn from_clean_item(item: clean::Item, tcx: TyCtxt<'_>) -> ItemEnum {\n         },\n         // FIXME: do not map to Typedef but to a custom variant\n         AssocTypeItem(t, _) => ItemEnum::Typedef(t.into_tcx(tcx)),\n-        // `convert_item` early returns `None` for striped items\n-        StrippedItem(_) => unreachable!(),\n-        KeywordItem(_) => {\n-            panic!(\"{:?} is not supported for JSON output\", item)\n-        }\n+        // `convert_item` early returns `None` for striped items and keywords.\n+        StrippedItem(_) | KeywordItem(_) => unreachable!(),\n         ExternCrateItem { ref src } => ItemEnum::ExternCrate {\n             name: name.as_ref().unwrap().to_string(),\n             rename: src.map(|x| x.to_string()),\n@@ -764,7 +761,7 @@ impl FromWithTcx<ItemType> for ItemKind {\n fn ids(items: impl IntoIterator<Item = clean::Item>, tcx: TyCtxt<'_>) -> Vec<Id> {\n     items\n         .into_iter()\n-        .filter(|x| !x.is_stripped())\n+        .filter(|x| !x.is_stripped() && !x.is_keyword())\n         .map(|i| from_item_id_with_name(i.item_id, tcx, i.name))\n         .collect()\n }"}, {"sha": "78a843aca7b9513e663d37c16477f6e026bf780a", "filename": "src/test/rustdoc-json/keyword.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/56209834a6a92e33c148d9a956b1074054c65994/src%2Ftest%2Frustdoc-json%2Fkeyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56209834a6a92e33c148d9a956b1074054c65994/src%2Ftest%2Frustdoc-json%2Fkeyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Fkeyword.rs?ref=56209834a6a92e33c148d9a956b1074054c65994", "patch": "@@ -0,0 +1,21 @@\n+// Regression test for <https://github.com/rust-lang/rust/issues/98002>.\n+\n+// Keywords should not be generated in rustdoc JSON output and this test\n+// ensures it.\n+\n+#![feature(rustdoc_internals)]\n+#![no_std]\n+\n+// @has keyword.json\n+// @!has - \"$.index[*][?(@.name=='match')]\"\n+// @has - \"$.index[*][?(@.name=='foo')]\"\n+\n+#[doc(keyword = \"match\")]\n+/// this is a test!\n+pub mod foo {}\n+\n+// @!has - \"$.index[*][?(@.name=='hello')]\"\n+// @!has - \"$.index[*][?(@.name=='bar')]\"\n+#[doc(keyword = \"hello\")]\n+/// hello\n+mod bar {}"}]}