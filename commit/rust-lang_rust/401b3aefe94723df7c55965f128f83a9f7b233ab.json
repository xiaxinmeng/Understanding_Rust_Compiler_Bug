{"sha": "401b3aefe94723df7c55965f128f83a9f7b233ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwMWIzYWVmZTk0NzIzZGY3YzU1OTY1ZjEyOGY4M2E5ZjdiMjMzYWI=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-26T20:11:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-26T20:11:31Z"}, "message": "Rollup merge of #72401 - ecstatic-morse:issue-72394, r=eddyb\n\nUse correct function for detecting `const fn` in unsafety checking\n\nResolves #72394.", "tree": {"sha": "e2a37740b7490822a955b61be1feebe9124030d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2a37740b7490822a955b61be1feebe9124030d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/401b3aefe94723df7c55965f128f83a9f7b233ab", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJezXfzCRBK7hj4Ov3rIwAAdHIIAJY75gdYAj5t0IkRxiDBKqof\n8kL0xjVaqt+SfPm1xASF0NvcmmBoNhhJ5CfFPVfq4Ja26PZpD0DkRidOnBtqMWLE\nY+LwzOQ55VXCXEkegWWavNs4Rc6eUJVoqaKRLTa1jXAD81V0yTekFu+qJR/ujYTr\nj3z63JsYUAHtpoP09gYrTJkUXfpS/S3OQUZBG/T3t3dqg+r95JWiHmSGi5y2XHNj\nXSfM6SSblUXdHixIQmxSp/Mo5ypFVixsYpl7gFk38PDd1MFFYF9x2bxDbCffCaAj\nZNQgWZb70Ar4XC8HMZpNLblLsiTW/SWV9zU0rI7i5pYOG7FQRDrLM979X0cPMIs=\n=4MEA\n-----END PGP SIGNATURE-----\n", "payload": "tree e2a37740b7490822a955b61be1feebe9124030d7\nparent e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7\nparent 09619bc4592418aa66a77bf90c6c2efbd648d103\nauthor Dylan DPC <dylan.dpc@gmail.com> 1590523891 +0200\ncommitter GitHub <noreply@github.com> 1590523891 +0200\n\nRollup merge of #72401 - ecstatic-morse:issue-72394, r=eddyb\n\nUse correct function for detecting `const fn` in unsafety checking\n\nResolves #72394.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/401b3aefe94723df7c55965f128f83a9f7b233ab", "html_url": "https://github.com/rust-lang/rust/commit/401b3aefe94723df7c55965f128f83a9f7b233ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/401b3aefe94723df7c55965f128f83a9f7b233ab/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7", "url": "https://api.github.com/repos/rust-lang/rust/commits/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7", "html_url": "https://github.com/rust-lang/rust/commit/e38fdda243c890bc8f4ce93eb82fd1bf750ebbe7"}, {"sha": "09619bc4592418aa66a77bf90c6c2efbd648d103", "url": "https://api.github.com/repos/rust-lang/rust/commits/09619bc4592418aa66a77bf90c6c2efbd648d103", "html_url": "https://github.com/rust-lang/rust/commit/09619bc4592418aa66a77bf90c6c2efbd648d103"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "a335fa2de411b459cf1561f7eb78359709b1e743", "filename": "src/librustc_mir/transform/check_unsafety.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/401b3aefe94723df7c55965f128f83a9f7b233ab/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/401b3aefe94723df7c55965f128f83a9f7b233ab/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs?ref=401b3aefe94723df7c55965f128f83a9f7b233ab", "patch": "@@ -14,7 +14,7 @@ use rustc_span::symbol::{sym, Symbol};\n \n use std::ops::Bound;\n \n-use crate::const_eval::{is_const_fn, is_min_const_fn};\n+use crate::const_eval::is_min_const_fn;\n use crate::util;\n \n pub struct UnsafetyChecker<'a, 'tcx> {\n@@ -527,7 +527,7 @@ fn unsafety_check_result(tcx: TyCtxt<'_>, def_id: LocalDefId) -> UnsafetyCheckRe\n     let (const_context, min_const_fn) = match tcx.hir().body_owner_kind(id) {\n         hir::BodyOwnerKind::Closure => (false, false),\n         hir::BodyOwnerKind::Fn => {\n-            (is_const_fn(tcx, def_id.to_def_id()), is_min_const_fn(tcx, def_id.to_def_id()))\n+            (tcx.is_const_fn_raw(def_id.to_def_id()), is_min_const_fn(tcx, def_id.to_def_id()))\n         }\n         hir::BodyOwnerKind::Const | hir::BodyOwnerKind::Static(_) => (true, false),\n     };"}, {"sha": "d9d85ee913266576d462962d865c93b87503b380", "filename": "src/test/ui/unsafe/unsafe-unstable-const-fn.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/401b3aefe94723df7c55965f128f83a9f7b233ab/src%2Ftest%2Fui%2Funsafe%2Funsafe-unstable-const-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/401b3aefe94723df7c55965f128f83a9f7b233ab/src%2Ftest%2Fui%2Funsafe%2Funsafe-unstable-const-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Funsafe-unstable-const-fn.rs?ref=401b3aefe94723df7c55965f128f83a9f7b233ab", "patch": "@@ -0,0 +1,13 @@\n+#![stable(feature = \"foo\", since = \"1.33.0\")]\n+#![feature(staged_api)]\n+#![feature(const_compare_raw_pointers)]\n+#![feature(const_fn)]\n+\n+#[stable(feature = \"foo\", since = \"1.33.0\")]\n+#[rustc_const_unstable(feature = \"const_foo\", issue = \"none\")]\n+const fn unstable(a: *const i32, b: *const i32) -> bool {\n+    a == b\n+    //~^ pointer operation is unsafe\n+}\n+\n+fn main() {}"}, {"sha": "d8f3737c8f541958c9354ba11645c10e4133f080", "filename": "src/test/ui/unsafe/unsafe-unstable-const-fn.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/401b3aefe94723df7c55965f128f83a9f7b233ab/src%2Ftest%2Fui%2Funsafe%2Funsafe-unstable-const-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/401b3aefe94723df7c55965f128f83a9f7b233ab/src%2Ftest%2Fui%2Funsafe%2Funsafe-unstable-const-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Funsafe-unstable-const-fn.stderr?ref=401b3aefe94723df7c55965f128f83a9f7b233ab", "patch": "@@ -0,0 +1,11 @@\n+error[E0133]: pointer operation is unsafe and requires unsafe function or block\n+  --> $DIR/unsafe-unstable-const-fn.rs:9:5\n+   |\n+LL |     a == b\n+   |     ^^^^^^ pointer operation\n+   |\n+   = note: operations on pointers in constants\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0133`."}]}