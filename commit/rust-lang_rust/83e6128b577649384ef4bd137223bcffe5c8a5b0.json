{"sha": "83e6128b577649384ef4bd137223bcffe5c8a5b0", "node_id": "C_kwDOAAsO6NoAKDgzZTYxMjhiNTc3NjQ5Mzg0ZWY0YmQxMzcyMjNiY2ZmZTVjOGE1YjA", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-09-20T16:39:39Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-09-20T16:39:39Z"}, "message": "Better binder treatment", "tree": {"sha": "026681193f99aef7ae81a7dd4e73c86a01322207", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/026681193f99aef7ae81a7dd4e73c86a01322207"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83e6128b577649384ef4bd137223bcffe5c8a5b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83e6128b577649384ef4bd137223bcffe5c8a5b0", "html_url": "https://github.com/rust-lang/rust/commit/83e6128b577649384ef4bd137223bcffe5c8a5b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83e6128b577649384ef4bd137223bcffe5c8a5b0/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4136b59b7da8866762761ed29405a5c5f58a5e3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4136b59b7da8866762761ed29405a5c5f58a5e3d", "html_url": "https://github.com/rust-lang/rust/commit/4136b59b7da8866762761ed29405a5c5f58a5e3d"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "18255a5089c8d6544d48276610c9120c7a8c9f50", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83e6128b577649384ef4bd137223bcffe5c8a5b0/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83e6128b577649384ef4bd137223bcffe5c8a5b0/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=83e6128b577649384ef4bd137223bcffe5c8a5b0", "patch": "@@ -2765,7 +2765,7 @@ impl<'tcx> TypeRelation<'tcx> for SameTypeModuloInfer<'_, 'tcx> {\n     where\n         T: relate::Relate<'tcx>,\n     {\n-        Ok(ty::Binder::dummy(self.relate(a.skip_binder(), b.skip_binder())?))\n+        Ok(a.rebind(self.relate(a.skip_binder(), b.skip_binder())?))\n     }\n \n     fn consts("}, {"sha": "5f7ecb77e0ed4a952a65b89706a48b6ac3cecc1d", "filename": "src/test/ui/suggestions/issue-101984.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/83e6128b577649384ef4bd137223bcffe5c8a5b0/src%2Ftest%2Fui%2Fsuggestions%2Fissue-101984.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83e6128b577649384ef4bd137223bcffe5c8a5b0/src%2Ftest%2Fui%2Fsuggestions%2Fissue-101984.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-101984.rs?ref=83e6128b577649384ef4bd137223bcffe5c8a5b0", "patch": "@@ -0,0 +1,27 @@\n+use std::marker::PhantomData;\n+\n+type Component = fn(&());\n+\n+struct Wrapper {\n+    router: Router<(Component, Box<Self>)>,\n+}\n+\n+struct Match<C>(PhantomData<C>);\n+\n+struct Router<T>(PhantomData<T>);\n+\n+impl<T> Router<T> {\n+    pub fn at(&self) -> Result<Match<&T>, ()> {\n+        todo!()\n+    }\n+}\n+\n+impl Wrapper {\n+    fn at(&self, path: &str) -> Result<(Component, Box<Self>), ()> {\n+        let (cmp, router) = self.router.at()?;\n+        //~^ ERROR mismatched types\n+        todo!()\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "c744c62d11f9b85293f6a9f0a3cdf14502f91db5", "filename": "src/test/ui/suggestions/issue-101984.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/83e6128b577649384ef4bd137223bcffe5c8a5b0/src%2Ftest%2Fui%2Fsuggestions%2Fissue-101984.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83e6128b577649384ef4bd137223bcffe5c8a5b0/src%2Ftest%2Fui%2Fsuggestions%2Fissue-101984.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-101984.stderr?ref=83e6128b577649384ef4bd137223bcffe5c8a5b0", "patch": "@@ -0,0 +1,14 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-101984.rs:21:13\n+   |\n+LL |         let (cmp, router) = self.router.at()?;\n+   |             ^^^^^^^^^^^^^   ----------------- this expression has type `Match<&(for<'r> fn(&'r ()), Box<Wrapper>)>`\n+   |             |\n+   |             expected struct `Match`, found tuple\n+   |\n+   = note: expected struct `Match<&(for<'r> fn(&'r ()), Box<Wrapper>)>`\n+               found tuple `(_, _)`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}