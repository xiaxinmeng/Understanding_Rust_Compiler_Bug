{"sha": "24cd42781fdf65dcd28e12b48d0ad9895dc29d0d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0Y2Q0Mjc4MWZkZjY1ZGNkMjhlMTJiNDhkMGFkOTg5NWRjMjlkMGQ=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-14T23:57:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-14T23:57:17Z"}, "message": "Rollup merge of #72146 - Mark-Simulacrum:separate-std-asserts, r=alexcrichton\n\nProvide separate option for std debug asserts\n\nOn local one-off benchmarking of libcore metadata-only, debug asserts in std are a significant hit (15s to 20s). Provide an option for compiler developers to disable them. A build with a nightly compiler is around 10s, for reference.", "tree": {"sha": "e4fcfaa796f36966ba2e94cd8333b7bd6e5302da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4fcfaa796f36966ba2e94cd8333b7bd6e5302da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24cd42781fdf65dcd28e12b48d0ad9895dc29d0d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJevdrdCRBK7hj4Ov3rIwAAdHIIAITqzK8XSAW3kJMUCAtX8XvL\niSXatcrh3pdT1J6jraqo0w1nxyRAZOCebNw7SQtgaMJCVsAvsbZBd4aL++cw/tGz\nbukfnXLlhGti1iUgU9LD4yxbGA4xhEWqSjusD5rknHdMHuMSv1JfYbNdxqeNp538\nPH5sxhzDmvDLAUHPHRmCTdRYhDJQd9crjOe5UrM6Bgpzi23EERNceRKfZlIj7SPT\nud7fGwHBqwx0wI/6Q+IhMk79etOkCRlylnEJwg3wkpqfMNn+Wz1FfsmLzyJlSK/e\nEhvdgLrPSkmlyLtdAqYPkg3Iu13P/CCTFwfMQuE/dctqs+BZtiqP4E1sCW0A11A=\n=xD3M\n-----END PGP SIGNATURE-----\n", "payload": "tree e4fcfaa796f36966ba2e94cd8333b7bd6e5302da\nparent d01ee6f7f80098bf3550cc46c1a7a24cb83fd762\nparent 6c415450fd2e33ec7056805b97475d7ea73eb04c\nauthor Dylan DPC <dylan.dpc@gmail.com> 1589500637 +0200\ncommitter GitHub <noreply@github.com> 1589500637 +0200\n\nRollup merge of #72146 - Mark-Simulacrum:separate-std-asserts, r=alexcrichton\n\nProvide separate option for std debug asserts\n\nOn local one-off benchmarking of libcore metadata-only, debug asserts in std are a significant hit (15s to 20s). Provide an option for compiler developers to disable them. A build with a nightly compiler is around 10s, for reference.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24cd42781fdf65dcd28e12b48d0ad9895dc29d0d", "html_url": "https://github.com/rust-lang/rust/commit/24cd42781fdf65dcd28e12b48d0ad9895dc29d0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24cd42781fdf65dcd28e12b48d0ad9895dc29d0d/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d01ee6f7f80098bf3550cc46c1a7a24cb83fd762", "url": "https://api.github.com/repos/rust-lang/rust/commits/d01ee6f7f80098bf3550cc46c1a7a24cb83fd762", "html_url": "https://github.com/rust-lang/rust/commit/d01ee6f7f80098bf3550cc46c1a7a24cb83fd762"}, {"sha": "6c415450fd2e33ec7056805b97475d7ea73eb04c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c415450fd2e33ec7056805b97475d7ea73eb04c", "html_url": "https://github.com/rust-lang/rust/commit/6c415450fd2e33ec7056805b97475d7ea73eb04c"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "ffe907c9da97c97e7b046346de54c1c26ac70f40", "filename": "config.toml.example", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24cd42781fdf65dcd28e12b48d0ad9895dc29d0d/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/24cd42781fdf65dcd28e12b48d0ad9895dc29d0d/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=24cd42781fdf65dcd28e12b48d0ad9895dc29d0d", "patch": "@@ -314,6 +314,10 @@\n # library.\n #debug-assertions = false\n \n+# Whether or not debug assertions are enabled for the standard library.\n+# Overrides the `debug-assertions` option, if defined.\n+#debug-assertions-std = false\n+\n # Debuginfo level for most of Rust code, corresponds to the `-C debuginfo=N` option of `rustc`.\n # `0` - no debug info\n # `1` - line tables only"}, {"sha": "4bc81a7b42dc00089a95cc6e715604ecc93453cf", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/24cd42781fdf65dcd28e12b48d0ad9895dc29d0d/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24cd42781fdf65dcd28e12b48d0ad9895dc29d0d/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=24cd42781fdf65dcd28e12b48d0ad9895dc29d0d", "patch": "@@ -915,7 +915,14 @@ impl<'a> Builder<'a> {\n             .env(\"RUSTC\", self.out.join(\"bootstrap/debug/rustc\"))\n             .env(\"RUSTC_REAL\", self.rustc(compiler))\n             .env(\"RUSTC_STAGE\", stage.to_string())\n-            .env(\"RUSTC_DEBUG_ASSERTIONS\", self.config.rust_debug_assertions.to_string())\n+            .env(\n+                \"RUSTC_DEBUG_ASSERTIONS\",\n+                if mode == Mode::Std {\n+                    self.config.rust_debug_assertions_std.to_string()\n+                } else {\n+                    self.config.rust_debug_assertions.to_string()\n+                },\n+            )\n             .env(\"RUSTC_SYSROOT\", &sysroot)\n             .env(\"RUSTC_LIBDIR\", &libdir)\n             .env(\"RUSTDOC\", self.out.join(\"bootstrap/debug/rustdoc\"))"}, {"sha": "771f952abc013b4827ce51c25241e5eb159a19c2", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/24cd42781fdf65dcd28e12b48d0ad9895dc29d0d/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24cd42781fdf65dcd28e12b48d0ad9895dc29d0d/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=24cd42781fdf65dcd28e12b48d0ad9895dc29d0d", "patch": "@@ -97,6 +97,7 @@ pub struct Config {\n     pub rust_codegen_units: Option<u32>,\n     pub rust_codegen_units_std: Option<u32>,\n     pub rust_debug_assertions: bool,\n+    pub rust_debug_assertions_std: bool,\n     pub rust_debuginfo_level_rustc: u32,\n     pub rust_debuginfo_level_std: u32,\n     pub rust_debuginfo_level_tools: u32,\n@@ -314,6 +315,7 @@ struct Rust {\n     codegen_units: Option<u32>,\n     codegen_units_std: Option<u32>,\n     debug_assertions: Option<bool>,\n+    debug_assertions_std: Option<bool>,\n     debuginfo_level: Option<u32>,\n     debuginfo_level_rustc: Option<u32>,\n     debuginfo_level_std: Option<u32>,\n@@ -518,6 +520,7 @@ impl Config {\n         let mut llvm_assertions = None;\n         let mut debug = None;\n         let mut debug_assertions = None;\n+        let mut debug_assertions_std = None;\n         let mut debuginfo_level = None;\n         let mut debuginfo_level_rustc = None;\n         let mut debuginfo_level_std = None;\n@@ -560,6 +563,7 @@ impl Config {\n         if let Some(ref rust) = toml.rust {\n             debug = rust.debug;\n             debug_assertions = rust.debug_assertions;\n+            debug_assertions_std = rust.debug_assertions_std;\n             debuginfo_level = rust.debuginfo_level;\n             debuginfo_level_rustc = rust.debuginfo_level_rustc;\n             debuginfo_level_std = rust.debuginfo_level_std;\n@@ -658,6 +662,8 @@ impl Config {\n \n         let default = debug == Some(true);\n         config.rust_debug_assertions = debug_assertions.unwrap_or(default);\n+        config.rust_debug_assertions_std =\n+            debug_assertions_std.unwrap_or(config.rust_debug_assertions);\n \n         let with_defaults = |debuginfo_level_specific: Option<u32>| {\n             debuginfo_level_specific.or(debuginfo_level).unwrap_or(if debug == Some(true) {"}]}