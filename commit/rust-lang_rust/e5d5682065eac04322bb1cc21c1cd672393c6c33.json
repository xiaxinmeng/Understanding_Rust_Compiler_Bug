{"sha": "e5d5682065eac04322bb1cc21c1cd672393c6c33", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1ZDU2ODIwNjVlYWMwNDMyMmJiMWNjMjFjMWNkNjcyMzkzYzZjMzM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-24T01:13:49Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-24T19:36:51Z"}, "message": "Unique pointers containing pinned kinds become pinned\n\nIssue #409", "tree": {"sha": "94412caecab9a95fc7f81bcce29807ad90143ead", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94412caecab9a95fc7f81bcce29807ad90143ead"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5d5682065eac04322bb1cc21c1cd672393c6c33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5d5682065eac04322bb1cc21c1cd672393c6c33", "html_url": "https://github.com/rust-lang/rust/commit/e5d5682065eac04322bb1cc21c1cd672393c6c33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5d5682065eac04322bb1cc21c1cd672393c6c33/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97629727b18293ae57a4c93f41a0dac8b9611cbb", "url": "https://api.github.com/repos/rust-lang/rust/commits/97629727b18293ae57a4c93f41a0dac8b9611cbb", "html_url": "https://github.com/rust-lang/rust/commit/97629727b18293ae57a4c93f41a0dac8b9611cbb"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "190b974f72ae06c529c05e036fb50a8bb3149153", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e5d5682065eac04322bb1cc21c1cd672393c6c33/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5d5682065eac04322bb1cc21c1cd672393c6c33/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=e5d5682065eac04322bb1cc21c1cd672393c6c33", "patch": "@@ -1021,11 +1021,18 @@ fn type_kind(cx: ctxt, ty: t) -> ast::kind {\n       }\n       // Pointers and unique boxes / vecs raise pinned to shared,\n       // otherwise pass through their pointee kind.\n-      ty_ptr(tm) | ty_vec(tm) | ty_uniq(tm) {\n+      ty_ptr(tm) | ty_vec(tm) {\n         let k = type_kind(cx, tm.ty);\n         if k == ast::kind_pinned { k = ast::kind_shared; }\n         result = kind::lower_kind(result, k);\n       }\n+      // Unique boxes pass through their pointee kind. FIXME: Shouldn't\n+      // pointers and vecs do this too to avoid copying vectors of pinned\n+      // things?\n+      ty_uniq(tm) {\n+        let k = type_kind(cx, tm.ty);\n+        result = kind::lower_kind(result, k);\n+      }\n       // Records lower to the lowest of their members.\n       ty_rec(flds) {\n         for f: field in flds {"}, {"sha": "9c1cad78b0327bb4fd8c5042185339da78445f10", "filename": "src/test/compile-fail/unique-pinned-nocopy.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e5d5682065eac04322bb1cc21c1cd672393c6c33/src%2Ftest%2Fcompile-fail%2Funique-pinned-nocopy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5d5682065eac04322bb1cc21c1cd672393c6c33/src%2Ftest%2Fcompile-fail%2Funique-pinned-nocopy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funique-pinned-nocopy.rs?ref=e5d5682065eac04322bb1cc21c1cd672393c6c33", "patch": "@@ -0,0 +1,10 @@\n+// error-pattern: mismatched kind\n+\n+resource r(b: bool) {\n+}\n+\n+fn main() {\n+    let i = ~r(true);\n+    let j;\n+    j = i;\n+}\n\\ No newline at end of file"}, {"sha": "16f9f3aec678ad055f67ead2941b62510f1cb1ad", "filename": "src/test/run-pass/generic-exterior-unique.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e5d5682065eac04322bb1cc21c1cd672393c6c33/src%2Ftest%2Frun-pass%2Fgeneric-exterior-unique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5d5682065eac04322bb1cc21c1cd672393c6c33/src%2Ftest%2Frun-pass%2Fgeneric-exterior-unique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgeneric-exterior-unique.rs?ref=e5d5682065eac04322bb1cc21c1cd672393c6c33", "patch": "@@ -1,8 +1,6 @@\n-\n-\n type recbox<T> = {x: ~T};\n \n-fn reclift<T>(t: T) -> recbox<T> { ret {x: ~t}; }\n+fn reclift<@T>(t: T) -> recbox<T> { ret {x: ~t}; }\n \n fn main() {\n     let foo: int = 17;"}, {"sha": "041ac622c912535a91a7b46c32850c9cead0cabe", "filename": "src/test/run-pass/unique-swap2.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e5d5682065eac04322bb1cc21c1cd672393c6c33/src%2Ftest%2Frun-pass%2Funique-swap2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5d5682065eac04322bb1cc21c1cd672393c6c33/src%2Ftest%2Frun-pass%2Funique-swap2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-swap2.rs?ref=e5d5682065eac04322bb1cc21c1cd672393c6c33", "patch": "@@ -1,3 +1,9 @@\n+// xfail-test\n+\n+// This no longer works because ~r() is lowered to a pinned type\n+// (which can't be swapped). Should probably be a compile-fail\n+// test.\n+\n resource r(i: @mutable int) {\n     *i += 1;\n }"}]}