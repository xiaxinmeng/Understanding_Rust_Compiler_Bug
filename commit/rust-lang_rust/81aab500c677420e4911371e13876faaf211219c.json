{"sha": "81aab500c677420e4911371e13876faaf211219c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxYWFiNTAwYzY3NzQyMGU0OTExMzcxZTEzODc2ZmFhZjIxMTIxOWM=", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2020-04-09T10:47:48Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2020-04-09T18:47:04Z"}, "message": "Hide parameter hints for single-argument functions with the same name", "tree": {"sha": "0f0b5f0bba874fac07c1ec3d03dda5740b7753dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f0b5f0bba874fac07c1ec3d03dda5740b7753dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81aab500c677420e4911371e13876faaf211219c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81aab500c677420e4911371e13876faaf211219c", "html_url": "https://github.com/rust-lang/rust/commit/81aab500c677420e4911371e13876faaf211219c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81aab500c677420e4911371e13876faaf211219c/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9635d8bc44cf58875e97e9e77c3426f746ab7007", "url": "https://api.github.com/repos/rust-lang/rust/commits/9635d8bc44cf58875e97e9e77c3426f746ab7007", "html_url": "https://github.com/rust-lang/rust/commit/9635d8bc44cf58875e97e9e77c3426f746ab7007"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "45b9f78023f2cc0b1a56471bb38bfba2e9cd6f18", "filename": "crates/ra_ide/src/inlay_hints.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/81aab500c677420e4911371e13876faaf211219c/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81aab500c677420e4911371e13876faaf211219c/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs?ref=81aab500c677420e4911371e13876faaf211219c", "patch": "@@ -235,7 +235,10 @@ fn should_show_param_hint(\n     param_name: &str,\n     argument: &ast::Expr,\n ) -> bool {\n-    if param_name.is_empty() || is_argument_similar_to_param(argument, param_name) {\n+    if param_name.is_empty()\n+        || is_argument_similar_to_param(argument, param_name)\n+        || Some(param_name) == fn_signature.name.as_ref().map(String::as_str)\n+    {\n         return false;\n     }\n \n@@ -247,10 +250,7 @@ fn should_show_param_hint(\n \n     // avoid displaying hints for common functions like map, filter, etc.\n     // or other obvious words used in std\n-    if parameters_len == 1 && is_obvious_param(param_name) {\n-        return false;\n-    }\n-    true\n+    parameters_len != 1 || !is_obvious_param(param_name)\n }\n \n fn is_argument_similar_to_param(argument: &ast::Expr, param_name: &str) -> bool {\n@@ -1086,13 +1086,17 @@ impl Test {\n     }\n \n     fn no_hints_expected(&self, _: i32, test_var: i32) {}\n+\n+    fn frob(&self, frob: bool) {}\n }\n \n struct Param {}\n \n fn different_order(param: &Param) {}\n fn different_order_mut(param: &mut Param) {}\n \n+fn twiddle(twiddle: bool) {}\n+\n fn main() {\n     let container: TestVarContainer = TestVarContainer { test_var: 42 };\n     let test: Test = Test {};\n@@ -1105,6 +1109,9 @@ fn main() {\n     let test_var: i32 = 55;\n     test_processed.no_hints_expected(22, test_var);\n     test_processed.no_hints_expected(33, container.test_var);\n+    test_processed.frob(false);\n+\n+    twiddle(true);\n \n     let param_begin: Param = Param {};\n     different_order(&param_begin);"}]}