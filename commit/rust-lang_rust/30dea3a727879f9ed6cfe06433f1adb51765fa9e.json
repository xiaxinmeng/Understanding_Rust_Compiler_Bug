{"sha": "30dea3a727879f9ed6cfe06433f1adb51765fa9e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwZGVhM2E3Mjc4NzlmOWVkNmNmZTA2NDMzZjFhZGI1MTc2NWZhOWU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-03-16T07:51:05Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-03-16T07:51:05Z"}, "message": "Prefer match to if let else", "tree": {"sha": "5149759011cd3b4f034d5b36b3797aa59c722be2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5149759011cd3b4f034d5b36b3797aa59c722be2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30dea3a727879f9ed6cfe06433f1adb51765fa9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30dea3a727879f9ed6cfe06433f1adb51765fa9e", "html_url": "https://github.com/rust-lang/rust/commit/30dea3a727879f9ed6cfe06433f1adb51765fa9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30dea3a727879f9ed6cfe06433f1adb51765fa9e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d38fd77845c40c6f07507c5c436af903a452efbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/d38fd77845c40c6f07507c5c436af903a452efbd", "html_url": "https://github.com/rust-lang/rust/commit/d38fd77845c40c6f07507c5c436af903a452efbd"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "e4a1672cab5d20ee9ce056ded2c01291424623db", "filename": "docs/dev/style.md", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/30dea3a727879f9ed6cfe06433f1adb51765fa9e/docs%2Fdev%2Fstyle.md", "raw_url": "https://github.com/rust-lang/rust/raw/30dea3a727879f9ed6cfe06433f1adb51765fa9e/docs%2Fdev%2Fstyle.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Fstyle.md?ref=30dea3a727879f9ed6cfe06433f1adb51765fa9e", "patch": "@@ -787,6 +787,27 @@ assert!(0 > x);\n \n **Rationale:** Less-then comparisons are more intuitive, they correspond spatially to [real line](https://en.wikipedia.org/wiki/Real_line).\n \n+## If-let\n+\n+Avoid `if let ... { } else { }` construct, use `match` instead.\n+\n+```rust\n+// GOOD\n+match ctx.expected_type.as_ref() {\n+    Some(expected_type) => completion_ty == expected_type && !expected_type.is_unit(),\n+    None => false,\n+}\n+\n+// BAD\n+if let Some(expected_type) = ctx.expected_type.as_ref() {\n+    completion_ty == expected_type && !expected_type.is_unit()\n+} else {\n+    false\n+}\n+```\n+\n+**Rational:** `match` is almost always more compact.\n+The `else` branch can get a more precise pattern: `None` or `Err(_)` instead of `_`.\n \n ## Token names\n "}]}