{"sha": "32739a2ff1b7b6e5c1b475341b01f4a499830a84", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyNzM5YTJmZjFiN2I2ZTVjMWI0NzUzNDFiMDFmNGE0OTk4MzBhODQ=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-10-04T20:42:01Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-10-07T08:04:08Z"}, "message": "add regression test", "tree": {"sha": "13211ab9336ef0afb58c38ca88b201eda9c3482a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13211ab9336ef0afb58c38ca88b201eda9c3482a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32739a2ff1b7b6e5c1b475341b01f4a499830a84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32739a2ff1b7b6e5c1b475341b01f4a499830a84", "html_url": "https://github.com/rust-lang/rust/commit/32739a2ff1b7b6e5c1b475341b01f4a499830a84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32739a2ff1b7b6e5c1b475341b01f4a499830a84/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0487cee7439f3a4b4c7daec0e7f2a0ccc21053c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0487cee7439f3a4b4c7daec0e7f2a0ccc21053c", "html_url": "https://github.com/rust-lang/rust/commit/f0487cee7439f3a4b4c7daec0e7f2a0ccc21053c"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "88b80bc3333c1ba40af590a310522f877b9db0c8", "filename": "src/test/ui/mir/mir-inlining/ice-issue-68347.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/32739a2ff1b7b6e5c1b475341b01f4a499830a84/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fice-issue-68347.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32739a2ff1b7b6e5c1b475341b01f4a499830a84/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fice-issue-68347.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fice-issue-68347.rs?ref=32739a2ff1b7b6e5c1b475341b01f4a499830a84", "patch": "@@ -0,0 +1,28 @@\n+// run-pass\n+// compile-flags:-Zmir-opt-level=2\n+pub fn main() {\n+    let _x: fn() = handle_debug_column;\n+}\n+\n+fn handle_debug_column() {\n+    let sampler = sample_columns();\n+\n+    let foo = || {\n+        sampler.get(17);\n+    };\n+    foo();\n+}\n+\n+fn sample_columns() -> impl Sampler {\n+    ColumnGen {}\n+}\n+\n+struct ColumnGen {}\n+\n+trait Sampler {\n+    fn get(&self, index: i32);\n+}\n+\n+impl Sampler for ColumnGen {\n+    fn get(&self, _index: i32) {}\n+}"}]}