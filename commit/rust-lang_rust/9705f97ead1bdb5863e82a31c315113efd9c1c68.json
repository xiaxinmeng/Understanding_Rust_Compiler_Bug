{"sha": "9705f97ead1bdb5863e82a31c315113efd9c1c68", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3MDVmOTdlYWQxYmRiNTg2M2U4MmEzMWMzMTUxMTNlZmQ5YzFjNjg=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-07-29T17:31:52Z"}, "committer": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-07-29T17:33:00Z"}, "message": "Typechecking bugfix for anon objs.  Removes duplicate methods in outer\nobject types.", "tree": {"sha": "5b13bf9e1bb468da00431e47889c87e6a81221dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b13bf9e1bb468da00431e47889c87e6a81221dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9705f97ead1bdb5863e82a31c315113efd9c1c68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9705f97ead1bdb5863e82a31c315113efd9c1c68", "html_url": "https://github.com/rust-lang/rust/commit/9705f97ead1bdb5863e82a31c315113efd9c1c68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9705f97ead1bdb5863e82a31c315113efd9c1c68/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6151aa9a83ef6f52d787141c97b9b9eaa52ebb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6151aa9a83ef6f52d787141c97b9b9eaa52ebb1", "html_url": "https://github.com/rust-lang/rust/commit/a6151aa9a83ef6f52d787141c97b9b9eaa52ebb1"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "0b0fcff4615ea486fb86eb2fde06b6ce63076183", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9705f97ead1bdb5863e82a31c315113efd9c1c68/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9705f97ead1bdb5863e82a31c315113efd9c1c68/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=9705f97ead1bdb5863e82a31c315113efd9c1c68", "patch": "@@ -2417,6 +2417,26 @@ fn check_expr(fcx: &@fn_ctxt, expr: &@ast::expr) {\n                 ~[anon_obj(ivec::map(ast::obj_field_from_anon_obj_field,\n                                      fields), inner_obj_sty)];\n \n+            // Whenever an outer method overrides an inner, we need to remove\n+            // that inner from the type.  Filter inner_obj_methods to remove\n+            // any methods that share a name with an outer method.\n+            fn filtering_fn(m: &ty::method,\n+                            outer_obj_methods: (@ast::method)[]) ->\n+                option::t[ty::method] {\n+\n+                for om: @ast::method in outer_obj_methods {\n+                    if str::eq(om.node.ident, m.ident) {\n+                        ret none;\n+                    }\n+                }\n+                ret some(m);\n+            }\n+\n+            let f = bind filtering_fn(_, ao.methods);\n+            inner_obj_methods =\n+                std::ivec::filter_map[ty::method,\n+                                      ty::method](f, inner_obj_methods);\n+\n             methods += inner_obj_methods;\n             ret methods;\n         }"}]}