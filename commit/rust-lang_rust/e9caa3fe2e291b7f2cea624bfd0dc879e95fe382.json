{"sha": "e9caa3fe2e291b7f2cea624bfd0dc879e95fe382", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5Y2FhM2ZlMmUyOTFiN2YyY2VhNjI0YmZkMGRjODc5ZTk1ZmUzODI=", "commit": {"author": {"name": "Gareth Daniel Smith", "email": "garethdanielsmith@gmail.com", "date": "2012-10-04T19:22:53Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-10-13T12:57:13Z"}, "message": "Add an &str.to_managed method to allow creating non-constant @str values (for issue #3433).", "tree": {"sha": "3676bc6a1bc93db442abf7ecd3f247be1318c67f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3676bc6a1bc93db442abf7ecd3f247be1318c67f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9caa3fe2e291b7f2cea624bfd0dc879e95fe382", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9caa3fe2e291b7f2cea624bfd0dc879e95fe382", "html_url": "https://github.com/rust-lang/rust/commit/e9caa3fe2e291b7f2cea624bfd0dc879e95fe382", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9caa3fe2e291b7f2cea624bfd0dc879e95fe382/comments", "author": {"login": "Dretch", "id": 1428731, "node_id": "MDQ6VXNlcjE0Mjg3MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1428731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dretch", "html_url": "https://github.com/Dretch", "followers_url": "https://api.github.com/users/Dretch/followers", "following_url": "https://api.github.com/users/Dretch/following{/other_user}", "gists_url": "https://api.github.com/users/Dretch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dretch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dretch/subscriptions", "organizations_url": "https://api.github.com/users/Dretch/orgs", "repos_url": "https://api.github.com/users/Dretch/repos", "events_url": "https://api.github.com/users/Dretch/events{/privacy}", "received_events_url": "https://api.github.com/users/Dretch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9406f8101dd32b4458b8c042a1bfb1bb150a2276", "url": "https://api.github.com/repos/rust-lang/rust/commits/9406f8101dd32b4458b8c042a1bfb1bb150a2276", "html_url": "https://github.com/rust-lang/rust/commit/9406f8101dd32b4458b8c042a1bfb1bb150a2276"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "e2e7b15b1d7839920b458048838e863cfa8cf02a", "filename": "src/libcore/str.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e9caa3fe2e291b7f2cea624bfd0dc879e95fe382/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9caa3fe2e291b7f2cea624bfd0dc879e95fe382/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=e9caa3fe2e291b7f2cea624bfd0dc879e95fe382", "patch": "@@ -1869,6 +1869,11 @@ pub pure fn escape_unicode(s: &str) -> ~str {\n     move out\n }\n \n+extern mod rustrt {\n+    #[rust_stack]\n+    pure fn upcall_str_new_shared(cstr: *libc::c_char, len: size_t) -> @str;\n+}\n+\n /// Unsafe operations\n pub mod raw {\n \n@@ -2090,6 +2095,7 @@ pub trait StrSlice {\n     pure fn trim_left() -> ~str;\n     pure fn trim_right() -> ~str;\n     pure fn to_unique() -> ~str;\n+    pure fn to_managed() -> @str;\n     pure fn char_at(i: uint) -> char;\n }\n \n@@ -2213,6 +2219,14 @@ impl &str: StrSlice {\n     #[inline]\n     pure fn to_unique() -> ~str { self.slice(0, self.len()) }\n \n+    #[inline]\n+    pure fn to_managed() -> @str {\n+        do str::as_buf(self) |p, _len| {\n+            rustrt::upcall_str_new_shared(p as *libc::c_char,\n+                                          self.len() as size_t)\n+        }\n+    }\n+\n     #[inline]\n     pure fn char_at(i: uint) -> char { char_at(self, i) }\n }\n@@ -3190,4 +3204,10 @@ mod tests {\n         assert escape_default(~\"\\U0001d4ea\\r\") == ~\"\\\\U0001d4ea\\\\r\";\n     }\n \n+    #[test]\n+    fn test_to_managed() {\n+        assert (~\"abc\").to_managed() == @\"abc\";\n+        assert view(\"abcdef\", 1, 5).to_managed() == @\"bcde\";\n+    }\n+\n }"}]}