{"sha": "3cb75c2e5cdd4f450f2974c5e052d569674d95fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjYjc1YzJlNWNkZDRmNDUwZjI5NzRjNWUwNTJkNTY5Njc0ZDk1ZmQ=", "commit": {"author": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-08-25T07:16:08Z"}, "committer": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-08-27T16:25:38Z"}, "message": "Remove expansion restriction + fix doc and tests naming", "tree": {"sha": "398fad2c7fc1ab59c6c86df30f1bbd4e1eca19ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/398fad2c7fc1ab59c6c86df30f1bbd4e1eca19ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cb75c2e5cdd4f450f2974c5e052d569674d95fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cb75c2e5cdd4f450f2974c5e052d569674d95fd", "html_url": "https://github.com/rust-lang/rust/commit/3cb75c2e5cdd4f450f2974c5e052d569674d95fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cb75c2e5cdd4f450f2974c5e052d569674d95fd/comments", "author": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a3ee5fa854b49530008582900c6ea7fac120d1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a3ee5fa854b49530008582900c6ea7fac120d1c", "html_url": "https://github.com/rust-lang/rust/commit/2a3ee5fa854b49530008582900c6ea7fac120d1c"}], "stats": {"total": 40, "additions": 27, "deletions": 13}, "files": [{"sha": "2388310628f65496b84d1c4f09d4f4a89801a782", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 24, "deletions": 10, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/3cb75c2e5cdd4f450f2974c5e052d569674d95fd/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cb75c2e5cdd4f450f2974c5e052d569674d95fd/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=3cb75c2e5cdd4f450f2974c5e052d569674d95fd", "patch": "@@ -725,6 +725,7 @@ declare_clippy_lint! {\n     /// **Known problems:** None.\n     ///\n     /// **Example:**\n+    /// In an impl block:\n     /// ```rust\n     /// # struct Foo;\n     /// # struct NotAFoo;\n@@ -737,25 +738,40 @@ declare_clippy_lint! {\n     ///\n     /// ```rust\n     /// # struct Foo;\n-    /// # struct FooError;\n+    /// struct Bar(Foo);\n     /// impl Foo {\n-    ///     // Good. Return type contains `Self`\n-    ///     fn new() -> Result<Foo, FooError> {\n-    ///         # Ok(Foo)\n+    ///     // Bad. The type name must contain `Self`\n+    ///     fn new() -> Bar {\n+    /// # Bar(Foo)\n     ///     }\n     /// }\n     /// ```\n     ///\n     /// ```rust\n     /// # struct Foo;\n-    /// struct Bar(Foo);\n+    /// # struct FooError;\n     /// impl Foo {\n-    ///     // Bad. The type name must contain `Self`.\n-    ///     fn new() -> Bar {\n-    ///         # Bar(Foo)\n+    ///     // Good. Return type contains `Self`\n+    ///     fn new() -> Result<Foo, FooError> {\n+    /// # Ok(Foo)\n     ///     }\n     /// }\n     /// ```\n+    ///\n+    /// Or in a trait definition:\n+    /// ```rust\n+    /// pub trait Trait {\n+    ///     // Bad. The type name must contain `Self`\n+    ///     fn new();\n+    /// }\n+    /// ```\n+    ///\n+    /// ```rust\n+    /// pub trait Trait {\n+    ///     // Good. Return type contains `Self`\n+    ///     fn new() -> Self;\n+    /// }\n+    /// ```\n     pub NEW_RET_NO_SELF,\n     style,\n     \"not returning type containing `Self` in a `new` method\"\n@@ -1679,8 +1695,6 @@ impl<'tcx> LateLintPass<'tcx> for Methods {\n \n     fn check_trait_item(&mut self, cx: &LateContext<'tcx>, item: &'tcx TraitItem<'_>) {\n         if_chain! {\n-            if !in_external_macro(cx.tcx.sess, item.span);\n-            if !item.span.from_expansion();\n             if item.ident.name == sym!(new);\n             if let TraitItemKind::Fn(FnSig { decl, .. }, _) = &item.kind;\n             if let FnRetTy::Return(ret_ty) = &decl.output;"}, {"sha": "e82873629a54b0de91ad1068fff7d552001fe81b", "filename": "tests/ui/new_ret_no_self.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3cb75c2e5cdd4f450f2974c5e052d569674d95fd/tests%2Fui%2Fnew_ret_no_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cb75c2e5cdd4f450f2974c5e052d569674d95fd/tests%2Fui%2Fnew_ret_no_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnew_ret_no_self.rs?ref=3cb75c2e5cdd4f450f2974c5e052d569674d95fd", "patch": "@@ -137,9 +137,9 @@ impl MutPointerReturnerOk {\n     }\n }\n \n-struct MutPointerReturnerOk2;\n+struct ConstPointerReturnerOk2;\n \n-impl MutPointerReturnerOk2 {\n+impl ConstPointerReturnerOk2 {\n     // should not trigger lint\n     pub fn new() -> *const Self {\n         unimplemented!();\n@@ -283,7 +283,7 @@ mod issue5435 {\n         }\n     }\n \n-    trait MutPointerReturnerOk2 {\n+    trait ConstPointerReturnerOk2 {\n         // should not trigger lint\n         fn new() -> *const Self\n         where"}]}