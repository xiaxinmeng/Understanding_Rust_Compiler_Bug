{"sha": "cdf26de6b5cd0025b941433e723dbdd711b2d4b2", "node_id": "C_kwDOAAsO6NoAKGNkZjI2ZGU2YjVjZDAwMjViOTQxNDMzZTcyM2RiZGQ3MTFiMmQ0YjI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-12T16:35:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-12T16:35:30Z"}, "message": "Auto merge of #9466 - lukaslueg:issue9460, r=dswij\n\nDon't lint `large_stack_array` inside static items\n\nWe now check if the linted `Expr` is inside an `ItemKind::Static`, which can't take the suggested `Box<[...]`. I _think_ this is the correct fix for #9460\n\nI removed `if_chain` while I was at it.\n\nchangelog: Don't lint `large_stack_array` inside static items", "tree": {"sha": "d74da3cf4fe8aa3b01b07820a51dd94a4bef819f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d74da3cf4fe8aa3b01b07820a51dd94a4bef819f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdf26de6b5cd0025b941433e723dbdd711b2d4b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdf26de6b5cd0025b941433e723dbdd711b2d4b2", "html_url": "https://github.com/rust-lang/rust/commit/cdf26de6b5cd0025b941433e723dbdd711b2d4b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdf26de6b5cd0025b941433e723dbdd711b2d4b2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e0663e25ca956380002c0703c59e8e7323add2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e0663e25ca956380002c0703c59e8e7323add2d", "html_url": "https://github.com/rust-lang/rust/commit/5e0663e25ca956380002c0703c59e8e7323add2d"}, {"sha": "6f41a44c3e587354061ff3081470b7b214395196", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f41a44c3e587354061ff3081470b7b214395196", "html_url": "https://github.com/rust-lang/rust/commit/6f41a44c3e587354061ff3081470b7b214395196"}], "stats": {"total": 64, "additions": 34, "deletions": 30}, "files": [{"sha": "5857d81ab1f2094087cd5226850c748f4f160801", "filename": "clippy_lints/src/large_stack_arrays.rs", "status": "modified", "additions": 24, "deletions": 26, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/cdf26de6b5cd0025b941433e723dbdd711b2d4b2/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdf26de6b5cd0025b941433e723dbdd711b2d4b2/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs?ref=cdf26de6b5cd0025b941433e723dbdd711b2d4b2", "patch": "@@ -1,7 +1,6 @@\n use clippy_utils::diagnostics::span_lint_and_help;\n use clippy_utils::source::snippet;\n-use if_chain::if_chain;\n-use rustc_hir::{Expr, ExprKind};\n+use rustc_hir::{Expr, ExprKind, Item, ItemKind, Node};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty::layout::LayoutOf;\n use rustc_middle::ty::{self, ConstKind};\n@@ -39,29 +38,28 @@ impl_lint_pass!(LargeStackArrays => [LARGE_STACK_ARRAYS]);\n \n impl<'tcx> LateLintPass<'tcx> for LargeStackArrays {\n     fn check_expr(&mut self, cx: &LateContext<'_>, expr: &Expr<'_>) {\n-        if_chain! {\n-            if let ExprKind::Repeat(_, _) = expr.kind;\n-            if let ty::Array(element_type, cst) = cx.typeck_results().expr_ty(expr).kind();\n-            if let ConstKind::Value(ty::ValTree::Leaf(element_count)) = cst.kind();\n-            if let Ok(element_count) = element_count.try_to_machine_usize(cx.tcx);\n-            if let Ok(element_size) = cx.layout_of(*element_type).map(|l| l.size.bytes());\n-            if self.maximum_allowed_size < element_count * element_size;\n-            then {\n-                span_lint_and_help(\n-                    cx,\n-                    LARGE_STACK_ARRAYS,\n-                    expr.span,\n-                    &format!(\n-                        \"allocating a local array larger than {} bytes\",\n-                        self.maximum_allowed_size\n-                    ),\n-                    None,\n-                    &format!(\n-                        \"consider allocating on the heap with `vec!{}.into_boxed_slice()`\",\n-                        snippet(cx, expr.span, \"[...]\")\n-                    ),\n-                );\n-            }\n-        }\n+        if let ExprKind::Repeat(_, _) = expr.kind\n+          && let ty::Array(element_type, cst) = cx.typeck_results().expr_ty(expr).kind()\n+          && let ConstKind::Value(ty::ValTree::Leaf(element_count)) = cst.kind()\n+          && let Ok(element_count) = element_count.try_to_machine_usize(cx.tcx)\n+          && let Ok(element_size) = cx.layout_of(*element_type).map(|l| l.size.bytes())\n+          && !cx.tcx.hir().parent_iter(expr.hir_id)\n+              .any(|(_, node)| matches!(node, Node::Item(Item { kind: ItemKind::Static(..), .. })))\n+          && self.maximum_allowed_size < element_count * element_size {\n+              span_lint_and_help(\n+                  cx,\n+                  LARGE_STACK_ARRAYS,\n+                  expr.span,\n+                  &format!(\n+                      \"allocating a local array larger than {} bytes\",\n+                      self.maximum_allowed_size\n+                  ),\n+                  None,\n+                  &format!(\n+                      \"consider allocating on the heap with `vec!{}.into_boxed_slice()`\",\n+                      snippet(cx, expr.span, \"[...]\")\n+                  ),\n+              );\n+          }\n     }\n }"}, {"sha": "6790765f803e06e57620f444379596b2d532aad9", "filename": "tests/ui/large_stack_arrays.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cdf26de6b5cd0025b941433e723dbdd711b2d4b2/tests%2Fui%2Flarge_stack_arrays.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdf26de6b5cd0025b941433e723dbdd711b2d4b2/tests%2Fui%2Flarge_stack_arrays.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flarge_stack_arrays.rs?ref=cdf26de6b5cd0025b941433e723dbdd711b2d4b2", "patch": "@@ -12,6 +12,12 @@ enum E {\n     T(u32),\n }\n \n+pub static DOESNOTLINT: [u8; 512_001] = [0; 512_001];\n+pub static DOESNOTLINT2: [u8; 512_001] = {\n+    let x = 0;\n+    [x; 512_001]\n+};\n+\n fn main() {\n     let bad = (\n         [0u32; 20_000_000],"}, {"sha": "0d91b65b428407045b0141216b734316aefa8559", "filename": "tests/ui/large_stack_arrays.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cdf26de6b5cd0025b941433e723dbdd711b2d4b2/tests%2Fui%2Flarge_stack_arrays.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cdf26de6b5cd0025b941433e723dbdd711b2d4b2/tests%2Fui%2Flarge_stack_arrays.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flarge_stack_arrays.stderr?ref=cdf26de6b5cd0025b941433e723dbdd711b2d4b2", "patch": "@@ -1,5 +1,5 @@\n error: allocating a local array larger than 512000 bytes\n-  --> $DIR/large_stack_arrays.rs:17:9\n+  --> $DIR/large_stack_arrays.rs:23:9\n    |\n LL |         [0u32; 20_000_000],\n    |         ^^^^^^^^^^^^^^^^^^\n@@ -8,23 +8,23 @@ LL |         [0u32; 20_000_000],\n    = help: consider allocating on the heap with `vec![0u32; 20_000_000].into_boxed_slice()`\n \n error: allocating a local array larger than 512000 bytes\n-  --> $DIR/large_stack_arrays.rs:18:9\n+  --> $DIR/large_stack_arrays.rs:24:9\n    |\n LL |         [S { data: [0; 32] }; 5000],\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider allocating on the heap with `vec![S { data: [0; 32] }; 5000].into_boxed_slice()`\n \n error: allocating a local array larger than 512000 bytes\n-  --> $DIR/large_stack_arrays.rs:19:9\n+  --> $DIR/large_stack_arrays.rs:25:9\n    |\n LL |         [Some(\"\"); 20_000_000],\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider allocating on the heap with `vec![Some(\"\"); 20_000_000].into_boxed_slice()`\n \n error: allocating a local array larger than 512000 bytes\n-  --> $DIR/large_stack_arrays.rs:20:9\n+  --> $DIR/large_stack_arrays.rs:26:9\n    |\n LL |         [E::T(0); 5000],\n    |         ^^^^^^^^^^^^^^^"}]}