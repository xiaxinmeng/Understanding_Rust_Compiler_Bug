{"sha": "6487ee34441987353a0d7e5d91a28877387c130a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0ODdlZTM0NDQxOTg3MzUzYTBkN2U1ZDkxYTI4ODc3Mzg3YzEzMGE=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2017-12-12T17:27:37Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2017-12-12T17:27:37Z"}, "message": "Fix return value of `LLVMRustMetadataAsValue`\n\n`LLVMRustMetadataAsValue` would previously return `void`, despite the\ncorresponding Rust function expecting to return a `ValueRef`.", "tree": {"sha": "02014c46aa6455438fe3536e1b31394464910087", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02014c46aa6455438fe3536e1b31394464910087"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6487ee34441987353a0d7e5d91a28877387c130a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6487ee34441987353a0d7e5d91a28877387c130a", "html_url": "https://github.com/rust-lang/rust/commit/6487ee34441987353a0d7e5d91a28877387c130a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6487ee34441987353a0d7e5d91a28877387c130a/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ece2d94d3144cd41c8a3fe5ce4cfdb06967ab0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ece2d94d3144cd41c8a3fe5ce4cfdb06967ab0a", "html_url": "https://github.com/rust-lang/rust/commit/3ece2d94d3144cd41c8a3fe5ce4cfdb06967ab0a"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "6f51ea67cb1d1e9c3540b4042897a2d540b96b3e", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6487ee34441987353a0d7e5d91a28877387c130a/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/6487ee34441987353a0d7e5d91a28877387c130a/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=6487ee34441987353a0d7e5d91a28877387c130a", "patch": "@@ -566,8 +566,8 @@ extern \"C\" void LLVMRustAddModuleFlag(LLVMModuleRef M, const char *Name,\n   unwrap(M)->addModuleFlag(Module::Warning, Name, Value);\n }\n \n-extern \"C\" void LLVMRustMetadataAsValue(LLVMContextRef C, LLVMMetadataRef MD) {\n-  wrap(MetadataAsValue::get(*unwrap(C), unwrap(MD)));\n+extern \"C\" LLVMValueRef LLVMRustMetadataAsValue(LLVMContextRef C, LLVMMetadataRef MD) {\n+  return wrap(MetadataAsValue::get(*unwrap(C), unwrap(MD)));\n }\n \n extern \"C\" LLVMRustDIBuilderRef LLVMRustDIBuilderCreate(LLVMModuleRef M) {"}]}