{"sha": "3250057da983fa4d5bfd0799adaa41cb038f0e25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyNTAwNTdkYTk4M2ZhNGQ1YmZkMDc5OWFkYWE0MWNiMDM4ZjBlMjU=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-01-10T19:02:47Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-01-10T19:02:47Z"}, "message": "Fix `next_point` to be unicode aware", "tree": {"sha": "86f49679633c033ac303e84132a3faf2ce974af5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86f49679633c033ac303e84132a3faf2ce974af5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3250057da983fa4d5bfd0799adaa41cb038f0e25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3250057da983fa4d5bfd0799adaa41cb038f0e25", "html_url": "https://github.com/rust-lang/rust/commit/3250057da983fa4d5bfd0799adaa41cb038f0e25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3250057da983fa4d5bfd0799adaa41cb038f0e25/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fcd850fc5db2501d14b2e0cbfac8aa890d700e55", "url": "https://api.github.com/repos/rust-lang/rust/commits/fcd850fc5db2501d14b2e0cbfac8aa890d700e55", "html_url": "https://github.com/rust-lang/rust/commit/fcd850fc5db2501d14b2e0cbfac8aa890d700e55"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "fb5fcf4a8303badacd9ae0bdc69ec90b8607e7bb", "filename": "src/librustc_span/source_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3250057da983fa4d5bfd0799adaa41cb038f0e25/src%2Flibrustc_span%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3250057da983fa4d5bfd0799adaa41cb038f0e25/src%2Flibrustc_span%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_span%2Fsource_map.rs?ref=3250057da983fa4d5bfd0799adaa41cb038f0e25", "patch": "@@ -710,7 +710,7 @@ impl SourceMap {\n     pub fn next_point(&self, sp: Span) -> Span {\n         let start_of_next_point = sp.hi().0;\n \n-        let width = self.find_width_of_character_at_span(sp, true);\n+        let width = self.find_width_of_character_at_span(sp.shrink_to_hi(), true);\n         // If the width is 1, then the next span should point to the same `lo` and `hi`. However,\n         // in the case of a multibyte character, where the width != 1, the next span should\n         // span multiple bytes to include the whole character."}]}