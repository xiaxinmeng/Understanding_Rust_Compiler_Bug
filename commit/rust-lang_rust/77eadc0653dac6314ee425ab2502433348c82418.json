{"sha": "77eadc0653dac6314ee425ab2502433348c82418", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3ZWFkYzA2NTNkYWM2MzE0ZWU0MjVhYjI1MDI0MzMzNDhjODI0MTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-04-06T08:09:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-04-06T08:09:48Z"}, "message": "auto merge of #5755 : catamorphism/rust/rustllvm-cmdline, r=brson\n\nr? @brson In my WIP on rustpkg, I was calling driver code that calls\r\nLLVMRustWriteOutputFile more than once. This was making LLVM\r\nunhappy, since that function has code that initializes the\r\ncommand-line options for LLVM, and I guess you can't do that more\r\nthan once. So, check if they've already been initialized.", "tree": {"sha": "235c1e1e44fda38e73fe3d9d29974069dad0391e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/235c1e1e44fda38e73fe3d9d29974069dad0391e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77eadc0653dac6314ee425ab2502433348c82418", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77eadc0653dac6314ee425ab2502433348c82418", "html_url": "https://github.com/rust-lang/rust/commit/77eadc0653dac6314ee425ab2502433348c82418", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77eadc0653dac6314ee425ab2502433348c82418/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d09835d2e3c0cb3227baec0ba6f1b23d7c95f474", "url": "https://api.github.com/repos/rust-lang/rust/commits/d09835d2e3c0cb3227baec0ba6f1b23d7c95f474", "html_url": "https://github.com/rust-lang/rust/commit/d09835d2e3c0cb3227baec0ba6f1b23d7c95f474"}, {"sha": "d6f455ebca79b6a3d374158a047b1cdd744ebc5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6f455ebca79b6a3d374158a047b1cdd744ebc5e", "html_url": "https://github.com/rust-lang/rust/commit/d6f455ebca79b6a3d374158a047b1cdd744ebc5e"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "bdf13746f3ebf4973017b63a1ad42eae97454e73", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/77eadc0653dac6314ee425ab2502433348c82418/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/77eadc0653dac6314ee425ab2502433348c82418/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=77eadc0653dac6314ee425ab2502433348c82418", "patch": "@@ -62,6 +62,8 @@ using namespace llvm::sys;\n \n static const char *LLVMRustError;\n \n+extern cl::opt<bool> EnableARMEHABI;\n+\n extern \"C\" LLVMMemoryBufferRef\n LLVMRustCreateMemoryBufferWithContentsOfFile(const char *Path) {\n   LLVMMemoryBufferRef MemBuf = NULL;\n@@ -429,10 +431,16 @@ LLVMRustWriteOutputFile(LLVMPassManagerRef PMR,\n \n   LLVMRustInitializeTargets();\n \n-  int argc = 3;\n-  const char* argv[] = {\"rustc\", \"-arm-enable-ehabi\",\n-      \"-arm-enable-ehabi-descriptors\"};\n-  cl::ParseCommandLineOptions(argc, argv);\n+  // Initializing the command-line options more than once is not\n+  // allowed. So, check if they've already been initialized.\n+  // (This could happen if we're being called from rustpkg, for\n+  // example.)\n+  if (!EnableARMEHABI) {\n+    int argc = 3;\n+    const char* argv[] = {\"rustc\", \"-arm-enable-ehabi\",\n+\t\t\t  \"-arm-enable-ehabi-descriptors\"};\n+    cl::ParseCommandLineOptions(argc, argv);\n+  }\n \n   TargetOptions Options;\n   Options.NoFramePointerElim = true;"}]}