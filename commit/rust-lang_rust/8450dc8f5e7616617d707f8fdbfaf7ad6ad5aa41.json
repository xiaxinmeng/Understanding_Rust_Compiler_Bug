{"sha": "8450dc8f5e7616617d707f8fdbfaf7ad6ad5aa41", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0NTBkYzhmNWU3NjE2NjE3ZDcwN2Y4ZmRiZmFmN2FkNmFkNWFhNDE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-06-06T14:46:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-06-06T14:46:47Z"}, "message": "auto merge of #6972 : artagnon/rust/bad-for-loop, r=bstrie\n\nI noticed this while reading the tutorial.\r\n\r\n[1/2] adds tests to guard against regressions.\r\n[2/2] corrects the tutorial.\r\n\r\nPlease let me know if you have a standard place to put tests: they seem to be all over the place currently.", "tree": {"sha": "d5323132b39cc2f81010f81b28adbd1b1225fa2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5323132b39cc2f81010f81b28adbd1b1225fa2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8450dc8f5e7616617d707f8fdbfaf7ad6ad5aa41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8450dc8f5e7616617d707f8fdbfaf7ad6ad5aa41", "html_url": "https://github.com/rust-lang/rust/commit/8450dc8f5e7616617d707f8fdbfaf7ad6ad5aa41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8450dc8f5e7616617d707f8fdbfaf7ad6ad5aa41/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f18ea8b72efc3d0a92d99d064f765fd13d3a507", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f18ea8b72efc3d0a92d99d064f765fd13d3a507", "html_url": "https://github.com/rust-lang/rust/commit/8f18ea8b72efc3d0a92d99d064f765fd13d3a507"}, {"sha": "dd923e3831f93c7ad8f3b872069fdeff31e522c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd923e3831f93c7ad8f3b872069fdeff31e522c7", "html_url": "https://github.com/rust-lang/rust/commit/dd923e3831f93c7ad8f3b872069fdeff31e522c7"}], "stats": {"total": 31, "additions": 24, "deletions": 7}, "files": [{"sha": "8caf8704e0589e6040347f8a0a48ac7a236edf5b", "filename": "doc/tutorial.md", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8450dc8f5e7616617d707f8fdbfaf7ad6ad5aa41/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/8450dc8f5e7616617d707f8fdbfaf7ad6ad5aa41/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=8450dc8f5e7616617d707f8fdbfaf7ad6ad5aa41", "patch": "@@ -1613,18 +1613,19 @@ loop. Like `do`, `for` is a nice syntax for describing control flow\n with closures.  Additionally, within a `for` loop, `break`, `loop`,\n and `return` work just as they do with `while` and `loop`.\n \n-Consider again our `each` function, this time improved to\n-break early when the iteratee returns `false`:\n+Consider again our `each` function, this time improved to return\n+immediately when the iteratee returns `false`:\n \n ~~~~\n-fn each(v: &[int], op: &fn(v: &int) -> bool) {\n+fn each(v: &[int], op: &fn(v: &int) -> bool) -> bool {\n    let mut n = 0;\n    while n < v.len() {\n        if !op(&v[n]) {\n-           break;\n+           return false;\n        }\n        n += 1;\n    }\n+   return true;\n }\n ~~~~\n "}, {"sha": "4f90ff5802d7c6d37b2706c7189dccc5ba33353b", "filename": "src/test/compile-fail/bad-for-loop-2.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8450dc8f5e7616617d707f8fdbfaf7ad6ad5aa41/src%2Ftest%2Fcompile-fail%2Fbad-for-loop-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8450dc8f5e7616617d707f8fdbfaf7ad6ad5aa41/src%2Ftest%2Fcompile-fail%2Fbad-for-loop-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-for-loop-2.rs?ref=8450dc8f5e7616617d707f8fdbfaf7ad6ad5aa41", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    fn quux(_: &fn(&int) -> bool) -> () { }\n+    for quux |_| { } //~ ERROR expected `for` closure to return\n+                     // `bool`, but found `()`\n+}"}, {"sha": "83616b708f2aaf13386e0d4f51ec31dcfff093b3", "filename": "src/test/compile-fail/bad-for-loop.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8450dc8f5e7616617d707f8fdbfaf7ad6ad5aa41/src%2Ftest%2Fcompile-fail%2Fbad-for-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8450dc8f5e7616617d707f8fdbfaf7ad6ad5aa41/src%2Ftest%2Fcompile-fail%2Fbad-for-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-for-loop.rs?ref=8450dc8f5e7616617d707f8fdbfaf7ad6ad5aa41", "patch": "@@ -9,7 +9,8 @@\n // except according to those terms.\n \n fn main() {\n-    fn baz(_x: &fn(y: int) -> int) {}\n-    for baz |_e| { } //~ ERROR A `for` loop iterator should expect a closure that returns `bool`\n-                     //~^ ERROR expected `for` closure to return `bool`\n+    fn quux(_: &fn(&int) -> int) -> bool { true }\n+    for quux |_| { } //~ ERROR A `for` loop iterator should expect a\n+                     // closure that returns `bool`.  This iterator\n+                     // expects a closure that returns `int`.\n }"}]}