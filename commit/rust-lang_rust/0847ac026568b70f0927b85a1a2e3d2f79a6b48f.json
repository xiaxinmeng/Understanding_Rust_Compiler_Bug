{"sha": "0847ac026568b70f0927b85a1a2e3d2f79a6b48f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4NDdhYzAyNjU2OGI3MGYwOTI3Yjg1YTFhMmUzZDJmNzlhNmI0OGY=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-01-24T22:32:17Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-01-24T22:46:02Z"}, "message": "Fix wrong span for nested empty groups", "tree": {"sha": "6f9703982307cf0daa3a34dd6125de47066cc302", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f9703982307cf0daa3a34dd6125de47066cc302"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0847ac026568b70f0927b85a1a2e3d2f79a6b48f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2.0.22 (GNU/Linux)\n\niQEcBAABAgAGBQJaaQytAAoJEOjBBC3RYkUZHZAIAJJV6QPqd3JpkyUBIRe9XhOG\nx2Oce4jOImUsTQA6nQfOM4k+X65vu6UBSrvRGC/EkEapyrgQgNw3JSq9yLySI0f+\nBg81LK7W04iu5Z9V5rAlMUrYkTU1brh5+taL8u3kskFRBsAxU3/8pLVrC+ZFsudp\nzCd7r15uzQ8W1Ny44il+ViOVtM68Uw9DogIis9HcsEg62ru+KYZWu8Mj9c1FZOq1\n3ItAciDqHZD26lAUfjg7W43MmaZHG5PT5hNVyOP0CYkQw9ZQkr/e7+H71abmYHUm\nMyWOhuKZOTwkIjHM5IdWZfBMqFQuF/BID7zucE27oAYdwat8Vafwv8ZPPt/o0FM=\n=TCnO\n-----END PGP SIGNATURE-----", "payload": "tree 6f9703982307cf0daa3a34dd6125de47066cc302\nparent a0dcecff90c45ad5d4eb60859e22bb3f1b03842a\nauthor Pietro Albini <pietro@pietroalbini.org> 1516833137 +0100\ncommitter Pietro Albini <pietro@pietroalbini.org> 1516833962 +0100\n\nFix wrong span for nested empty groups\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0847ac026568b70f0927b85a1a2e3d2f79a6b48f", "html_url": "https://github.com/rust-lang/rust/commit/0847ac026568b70f0927b85a1a2e3d2f79a6b48f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0847ac026568b70f0927b85a1a2e3d2f79a6b48f/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0dcecff90c45ad5d4eb60859e22bb3f1b03842a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0dcecff90c45ad5d4eb60859e22bb3f1b03842a", "html_url": "https://github.com/rust-lang/rust/commit/a0dcecff90c45ad5d4eb60859e22bb3f1b03842a"}], "stats": {"total": 68, "additions": 50, "deletions": 18}, "files": [{"sha": "5a321053b7ae8a2ece1c295d1ad67755455faf2a", "filename": "src/librustc_resolve/check_unused.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0847ac026568b70f0927b85a1a2e3d2f79a6b48f/src%2Flibrustc_resolve%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0847ac026568b70f0927b85a1a2e3d2f79a6b48f/src%2Flibrustc_resolve%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fcheck_unused.rs?ref=0847ac026568b70f0927b85a1a2e3d2f79a6b48f", "patch": "@@ -102,11 +102,18 @@ impl<'a, 'b> Visitor<'a> for UnusedImportCheckVisitor<'a, 'b> {\n         }\n \n         if let ast::UseTreeKind::Nested(ref items) = use_tree.kind {\n+            // If it's the parent group, cover the entire use item\n+            let span = if nested {\n+                use_tree.span\n+            } else {\n+                self.item_span\n+            };\n+\n             if items.len() == 0 {\n                 self.unused_imports\n                     .entry(self.base_id)\n                     .or_insert_with(NodeMap)\n-                    .insert(id, self.item_span);\n+                    .insert(id, span);\n             }\n         } else {\n             let base_id = self.base_id;"}, {"sha": "79089b2a93c7340e5bda63c953be4e11905e137d", "filename": "src/test/ui/owl-import-generates-unused-import-lint.stderr", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a0dcecff90c45ad5d4eb60859e22bb3f1b03842a/src%2Ftest%2Fui%2Fowl-import-generates-unused-import-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a0dcecff90c45ad5d4eb60859e22bb3f1b03842a/src%2Ftest%2Fui%2Fowl-import-generates-unused-import-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fowl-import-generates-unused-import-lint.stderr?ref=a0dcecff90c45ad5d4eb60859e22bb3f1b03842a", "patch": "@@ -1,14 +0,0 @@\n-error: unused import: `*`\n-  --> $DIR/owl-import-generates-unused-import-lint.rs:18:14\n-   |\n-18 | use foo::{*, *}; //~ ERROR unused import: `*`\n-   |              ^\n-   |\n-note: lint level defined here\n-  --> $DIR/owl-import-generates-unused-import-lint.rs:12:9\n-   |\n-12 | #![deny(unused_imports)]\n-   |         ^^^^^^^^^^^^^^\n-\n-error: aborting due to previous error\n-"}, {"sha": "ddbf54fdd48b1150273b96fbd687427e825205a5", "filename": "src/test/ui/use-nested-groups-unused-imports.rs", "status": "renamed", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0847ac026568b70f0927b85a1a2e3d2f79a6b48f/src%2Ftest%2Fui%2Fuse-nested-groups-unused-imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0847ac026568b70f0927b85a1a2e3d2f79a6b48f/src%2Ftest%2Fui%2Fuse-nested-groups-unused-imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse-nested-groups-unused-imports.rs?ref=0847ac026568b70f0927b85a1a2e3d2f79a6b48f", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -9,13 +9,26 @@\n // except according to those terms.\n \n #![feature(use_nested_groups)]\n+#![allow(dead_code)]\n #![deny(unused_imports)]\n \n mod foo {\n-    pub enum Bar {}\n+    pub mod bar {\n+        pub mod baz {\n+            pub struct Bar();\n+        }\n+        pub mod foobar {}\n+    }\n+\n+    pub struct Foo();\n }\n \n-use foo::{*, *}; //~ ERROR unused import: `*`\n+use foo::{Foo, bar::{baz::{}, foobar::*}, *};\n+    //~^ ERROR unused imports: `*`, `Foo`, `baz::{}`, `foobar::*`\n+use foo::bar::baz::{*, *};\n+    //~^ ERROR unused import: `*`\n+use foo::{};\n+    //~^ ERROR unused import: `use foo::{};`\n \n fn main() {\n     let _: Bar;", "previous_filename": "src/test/ui/owl-import-generates-unused-import-lint.rs"}, {"sha": "0686310dbf53a1c58bd9e4f6769992c0969d0759", "filename": "src/test/ui/use-nested-groups-unused-imports.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/0847ac026568b70f0927b85a1a2e3d2f79a6b48f/src%2Ftest%2Fui%2Fuse-nested-groups-unused-imports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0847ac026568b70f0927b85a1a2e3d2f79a6b48f/src%2Ftest%2Fui%2Fuse-nested-groups-unused-imports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse-nested-groups-unused-imports.stderr?ref=0847ac026568b70f0927b85a1a2e3d2f79a6b48f", "patch": "@@ -0,0 +1,26 @@\n+error: unused imports: `*`, `Foo`, `baz::{}`, `foobar::*`\n+  --> $DIR/use-nested-groups-unused-imports.rs:26:11\n+   |\n+26 | use foo::{Foo, bar::{baz::{}, foobar::*}, *};\n+   |           ^^^        ^^^^^^^  ^^^^^^^^^   ^\n+   |\n+note: lint level defined here\n+  --> $DIR/use-nested-groups-unused-imports.rs:13:9\n+   |\n+13 | #![deny(unused_imports)]\n+   |         ^^^^^^^^^^^^^^\n+\n+error: unused import: `*`\n+  --> $DIR/use-nested-groups-unused-imports.rs:28:24\n+   |\n+28 | use foo::bar::baz::{*, *};\n+   |                        ^\n+\n+error: unused import: `use foo::{};`\n+  --> $DIR/use-nested-groups-unused-imports.rs:30:1\n+   |\n+30 | use foo::{};\n+   | ^^^^^^^^^^^^\n+\n+error: aborting due to 3 previous errors\n+"}]}