{"sha": "e6d8f06cad4241d7e7eca158814c70ad24c70aed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2ZDhmMDZjYWQ0MjQxZDdlN2VjYTE1ODgxNGM3MGFkMjRjNzBhZWQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-10-21T21:16:38Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-10-22T22:59:19Z"}, "message": "Tidy up asm! usage in libstd", "tree": {"sha": "3304c8edb83e3e5f4b89d763b6ccdf4cceedbae0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3304c8edb83e3e5f4b89d763b6ccdf4cceedbae0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6d8f06cad4241d7e7eca158814c70ad24c70aed", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6d8f06cad4241d7e7eca158814c70ad24c70aed", "html_url": "https://github.com/rust-lang/rust/commit/e6d8f06cad4241d7e7eca158814c70ad24c70aed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6d8f06cad4241d7e7eca158814c70ad24c70aed/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ece5028a8be4183ccb203dac59e734f1ca753714", "url": "https://api.github.com/repos/rust-lang/rust/commits/ece5028a8be4183ccb203dac59e734f1ca753714", "html_url": "https://github.com/rust-lang/rust/commit/ece5028a8be4183ccb203dac59e734f1ca753714"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "bf8f4a63bcaf31f7b38752ae517e778beb8ffd54", "filename": "src/libstd/rt/context.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e6d8f06cad4241d7e7eca158814c70ad24c70aed/src%2Flibstd%2Frt%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6d8f06cad4241d7e7eca158814c70ad24c70aed/src%2Flibstd%2Frt%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fcontext.rs?ref=e6d8f06cad4241d7e7eca158814c70ad24c70aed", "patch": "@@ -391,58 +391,54 @@ pub unsafe fn record_sp_limit(limit: uint) {\n /// As with the setter, this function does not have a __morestack header and can\n /// therefore be called in a \"we're out of stack\" situation.\n #[inline(always)]\n-// NOTE: after the next snapshot, can remove the initialization before inline\n-//       assembly due to an improvement in how it's handled, then this specific\n-//       allow directive should get removed.\n-#[allow(dead_assignment)]\n pub unsafe fn get_sp_limit() -> uint {\n     return target_get_sp_limit();\n \n     // x86-64\n     #[cfg(target_arch = \"x86_64\", target_os = \"macos\")] #[inline(always)]\n     unsafe fn target_get_sp_limit() -> uint {\n-        let mut limit: uint = 0;\n+        let limit;\n         asm!(\"movq $$0x60+90*8, %rsi\n               movq %gs:(%rsi), $0\" : \"=r\"(limit) :: \"rsi\" : \"volatile\");\n         return limit;\n     }\n     #[cfg(target_arch = \"x86_64\", target_os = \"linux\")] #[inline(always)]\n     unsafe fn target_get_sp_limit() -> uint {\n-        let mut limit: uint = 0;\n+        let limit;\n         asm!(\"movq %fs:112, $0\" : \"=r\"(limit) ::: \"volatile\");\n         return limit;\n     }\n     #[cfg(target_arch = \"x86_64\", target_os = \"win32\")] #[inline(always)]\n     unsafe fn target_get_sp_limit() -> uint {\n-        let mut limit: uint = 0;\n+        let limit;\n         asm!(\"movq %gs:0x28, $0\" : \"=r\"(limit) ::: \"volatile\");\n         return limit;\n     }\n     #[cfg(target_arch = \"x86_64\", target_os = \"freebsd\")] #[inline(always)]\n     unsafe fn target_get_sp_limit() -> uint {\n-        let mut limit: uint = 0;\n+        let limit;\n         asm!(\"movq %fs:24, $0\" : \"=r\"(limit) ::: \"volatile\");\n         return limit;\n     }\n \n     // x86\n     #[cfg(target_arch = \"x86\", target_os = \"macos\")] #[inline(always)]\n     unsafe fn target_get_sp_limit() -> uint {\n-        let mut limit: uint = 0;\n+        let limit;\n         asm!(\"movl $$0x48+90*4, %eax\n               movl %gs:(%eax), $0\" : \"=r\"(limit) :: \"eax\" : \"volatile\");\n         return limit;\n     }\n     #[cfg(target_arch = \"x86\", target_os = \"linux\")]\n     #[cfg(target_arch = \"x86\", target_os = \"freebsd\")] #[inline(always)]\n     unsafe fn target_get_sp_limit() -> uint {\n-        let mut limit: uint = 0;\n+        let limit;\n         asm!(\"movl %gs:48, $0\" : \"=r\"(limit) ::: \"volatile\");\n         return limit;\n     }\n     #[cfg(target_arch = \"x86\", target_os = \"win32\")] #[inline(always)]\n     unsafe fn target_get_sp_limit() -> uint {\n-        let mut limit: uint = 0;\n+        let limit;\n         asm!(\"movl %fs:0x14, $0\" : \"=r\"(limit) ::: \"volatile\");\n         return limit;\n     }"}]}