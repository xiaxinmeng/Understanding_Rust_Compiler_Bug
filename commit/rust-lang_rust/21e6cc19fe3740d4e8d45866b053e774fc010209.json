{"sha": "21e6cc19fe3740d4e8d45866b053e774fc010209", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxZTZjYzE5ZmUzNzQwZDRlOGQ0NTg2NmIwNTNlNzc0ZmMwMTAyMDk=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-04-09T01:35:24Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-04-10T21:29:20Z"}, "message": "Expand derive invocations in left-to-right order\n\nWhile derives were being collected in left-to-order order, the\ncorresponding `Invocation`s were being pushed in the wrong order.", "tree": {"sha": "3f427120552bf7b5ea79ba48c5629170e6b820a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f427120552bf7b5ea79ba48c5629170e6b820a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21e6cc19fe3740d4e8d45866b053e774fc010209", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAmByGLAACgkQtAh+UQ6Y\nsWTRFxAAr6ryNM+bAisnV9gneMHmtloCpLZoyGVECiKpHXE6+YRV/D/fkWX9VWfz\n1/ItguDumxUKPk6AlSA2nQ941EL+kkB9Ry6vA3/LJuWO3VMHRpJsnshJeF0xZvA7\nZ/bYWc+ePaGkuX6C/Ynegyu2JEEzqnTsSLvMcndPdbn3evhkKE8kDT85EoD7USyU\nDLKMVDdTJxs391/kf6WpyoOmKTsbc13YWCKiSyQtixdIgqClGXcmlyXDWRmF/D/Q\nwc/7lCH38DSCQ3KpWRYhDQWZU01XTPGgT78cYMLERdNEXo4+nyzvBuccAGwRB3+o\n6kQRMRrSCE2cx0H01NyeqKxWuZ8JS+wEW4o/CsykW7cvu8W7kX8W3Xd1cdYbcdwS\n4xQLXx4Jd0BEbPswt8qL5+9z7MteV8MxcTe3dbr+U66vX8fFN2GGmOgwLpogkdRp\nETZyoWEuamb6hbjqKZgglB20XxgWmcPMu5QzDfTZZ4EDvrnPbNpJQ581Knc8+B2e\n1IpABPRO+aWxB0g+8xkLtW4u3F7T8jZD4HzlEOmDnCm8KyT7Fi339g1ZfqbZ/8bI\n0T4JHdJp3X3vwcG8m8lWEqchqOhnQZK9lOGIMPVHuaJnXpSU25vDcuHMdj87mEHI\nZ/+xPGhHTVErPTwQq+jzyRKV8YXpbYk4xqhvLHX1/nHxgPZlVoQ=\n=oCRI\n-----END PGP SIGNATURE-----", "payload": "tree 3f427120552bf7b5ea79ba48c5629170e6b820a0\nparent 2e495d2e845cf27740e3665f718acfd3aa17253e\nauthor Aaron Hill <aa1ronham@gmail.com> 1617932124 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1618090160 -0400\n\nExpand derive invocations in left-to-right order\n\nWhile derives were being collected in left-to-order order, the\ncorresponding `Invocation`s were being pushed in the wrong order.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21e6cc19fe3740d4e8d45866b053e774fc010209", "html_url": "https://github.com/rust-lang/rust/commit/21e6cc19fe3740d4e8d45866b053e774fc010209", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21e6cc19fe3740d4e8d45866b053e774fc010209/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e495d2e845cf27740e3665f718acfd3aa17253e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e495d2e845cf27740e3665f718acfd3aa17253e", "html_url": "https://github.com/rust-lang/rust/commit/2e495d2e845cf27740e3665f718acfd3aa17253e"}], "stats": {"total": 177, "additions": 112, "deletions": 65}, "files": [{"sha": "27274f706e17bcab37ae88f12f1edd77cfa236fb", "filename": "compiler/rustc_expand/src/expand.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/21e6cc19fe3740d4e8d45866b053e774fc010209/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e6cc19fe3740d4e8d45866b053e774fc010209/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs?ref=21e6cc19fe3740d4e8d45866b053e774fc010209", "patch": "@@ -491,6 +491,7 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n             let fragment_kind = invoc.fragment_kind;\n             let (expanded_fragment, new_invocations) = match self.expand_invoc(invoc, &ext.kind) {\n                 ExpandResult::Ready(fragment) => {\n+                    let mut derive_invocations = Vec::new();\n                     let derive_placeholders = self\n                         .cx\n                         .resolver\n@@ -512,14 +513,14 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n                                 _ => unreachable!(),\n                             };\n \n-                            invocations.reserve(derives.len());\n+                            derive_invocations.reserve(derives.len());\n                             derives\n                                 .into_iter()\n                                 .map(|(path, _exts)| {\n                                     // FIXME: Consider using the derive resolutions (`_exts`)\n                                     // instead of enqueuing the derives to be resolved again later.\n                                     let expn_id = ExpnId::fresh(None);\n-                                    invocations.push((\n+                                    derive_invocations.push((\n                                         Invocation {\n                                             kind: InvocationKind::Derive {\n                                                 path,\n@@ -546,7 +547,12 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n                         })\n                         .unwrap_or_default();\n \n-                    self.collect_invocations(fragment, &derive_placeholders)\n+                    let (fragment, collected_invocations) =\n+                        self.collect_invocations(fragment, &derive_placeholders);\n+                    // We choose to expand any derive invocations associated with this macro invocation\n+                    // *before* any macro invocations collected from the output fragment\n+                    derive_invocations.extend(collected_invocations);\n+                    (fragment, derive_invocations)\n                 }\n                 ExpandResult::Retry(invoc) => {\n                     if force {"}, {"sha": "ba6261011907ce978d0fbfda9b2ba98cd4ed7827", "filename": "src/test/ui/macros/builtin-std-paths-fail.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/21e6cc19fe3740d4e8d45866b053e774fc010209/src%2Ftest%2Fui%2Fmacros%2Fbuiltin-std-paths-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/21e6cc19fe3740d4e8d45866b053e774fc010209/src%2Ftest%2Fui%2Fmacros%2Fbuiltin-std-paths-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fbuiltin-std-paths-fail.stderr?ref=21e6cc19fe3740d4e8d45866b053e774fc010209", "patch": "@@ -10,6 +10,18 @@ error[E0433]: failed to resolve: could not find `RustcDecodable` in `core`\n LL |     core::RustcDecodable,\n    |           ^^^^^^^^^^^^^^ could not find `RustcDecodable` in `core`\n \n+error[E0433]: failed to resolve: could not find `RustcDecodable` in `core`\n+  --> $DIR/builtin-std-paths-fail.rs:2:11\n+   |\n+LL |     core::RustcDecodable,\n+   |           ^^^^^^^^^^^^^^ could not find `RustcDecodable` in `core`\n+\n+error[E0433]: failed to resolve: could not find `RustcDecodable` in `core`\n+  --> $DIR/builtin-std-paths-fail.rs:4:11\n+   |\n+LL |     core::RustcDecodable,\n+   |           ^^^^^^^^^^^^^^ could not find `RustcDecodable` in `core`\n+\n error[E0433]: failed to resolve: could not find `bench` in `core`\n   --> $DIR/builtin-std-paths-fail.rs:7:9\n    |\n@@ -34,17 +46,17 @@ error[E0433]: failed to resolve: could not find `test` in `core`\n LL | #[core::test]\n    |         ^^^^ could not find `test` in `core`\n \n-error[E0433]: failed to resolve: could not find `RustcDecodable` in `core`\n-  --> $DIR/builtin-std-paths-fail.rs:4:11\n+error[E0433]: failed to resolve: could not find `RustcDecodable` in `std`\n+  --> $DIR/builtin-std-paths-fail.rs:14:10\n    |\n-LL |     core::RustcDecodable,\n-   |           ^^^^^^^^^^^^^^ could not find `RustcDecodable` in `core`\n+LL |     std::RustcDecodable,\n+   |          ^^^^^^^^^^^^^^ could not find `RustcDecodable` in `std`\n \n-error[E0433]: failed to resolve: could not find `RustcDecodable` in `core`\n-  --> $DIR/builtin-std-paths-fail.rs:2:11\n+error[E0433]: failed to resolve: could not find `RustcDecodable` in `std`\n+  --> $DIR/builtin-std-paths-fail.rs:16:10\n    |\n-LL |     core::RustcDecodable,\n-   |           ^^^^^^^^^^^^^^ could not find `RustcDecodable` in `core`\n+LL |     std::RustcDecodable,\n+   |          ^^^^^^^^^^^^^^ could not find `RustcDecodable` in `std`\n \n error[E0433]: failed to resolve: could not find `RustcDecodable` in `std`\n   --> $DIR/builtin-std-paths-fail.rs:14:10\n@@ -82,18 +94,6 @@ error[E0433]: failed to resolve: could not find `test` in `std`\n LL | #[std::test]\n    |        ^^^^ could not find `test` in `std`\n \n-error[E0433]: failed to resolve: could not find `RustcDecodable` in `std`\n-  --> $DIR/builtin-std-paths-fail.rs:16:10\n-   |\n-LL |     std::RustcDecodable,\n-   |          ^^^^^^^^^^^^^^ could not find `RustcDecodable` in `std`\n-\n-error[E0433]: failed to resolve: could not find `RustcDecodable` in `std`\n-  --> $DIR/builtin-std-paths-fail.rs:14:10\n-   |\n-LL |     std::RustcDecodable,\n-   |          ^^^^^^^^^^^^^^ could not find `RustcDecodable` in `std`\n-\n error: aborting due to 16 previous errors\n \n For more information about this error, try `rustc --explain E0433`."}, {"sha": "d0b665519196053137e9863933e09ff51a7c0db1", "filename": "src/test/ui/proc-macro/attribute-after-derive.stdout", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/21e6cc19fe3740d4e8d45866b053e774fc010209/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-after-derive.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/21e6cc19fe3740d4e8d45866b053e774fc010209/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-after-derive.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-after-derive.stdout?ref=21e6cc19fe3740d4e8d45866b053e774fc010209", "patch": "@@ -99,22 +99,6 @@ PRINT-DERIVE INPUT (DEBUG): TokenStream [\n         span: $DIR/attribute-after-derive.rs:18:1: 21:2 (#0),\n     },\n ]\n-PRINT-ATTR INPUT (DISPLAY): struct DeriveAttribute { }\n-PRINT-ATTR INPUT (DEBUG): TokenStream [\n-    Ident {\n-        ident: \"struct\",\n-        span: $DIR/attribute-after-derive.rs:25:1: 28:2 (#0),\n-    },\n-    Ident {\n-        ident: \"DeriveAttribute\",\n-        span: $DIR/attribute-after-derive.rs:25:1: 28:2 (#0),\n-    },\n-    Group {\n-        delimiter: Brace,\n-        stream: TokenStream [],\n-        span: $DIR/attribute-after-derive.rs:25:1: 28:2 (#0),\n-    },\n-]\n PRINT-DERIVE INPUT (DISPLAY): #[print_attr] struct DeriveAttribute { }\n PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     Punct {\n@@ -146,3 +130,19 @@ PRINT-DERIVE INPUT (DEBUG): TokenStream [\n         span: $DIR/attribute-after-derive.rs:25:1: 28:2 (#0),\n     },\n ]\n+PRINT-ATTR INPUT (DISPLAY): struct DeriveAttribute { }\n+PRINT-ATTR INPUT (DEBUG): TokenStream [\n+    Ident {\n+        ident: \"struct\",\n+        span: $DIR/attribute-after-derive.rs:25:1: 28:2 (#0),\n+    },\n+    Ident {\n+        ident: \"DeriveAttribute\",\n+        span: $DIR/attribute-after-derive.rs:25:1: 28:2 (#0),\n+    },\n+    Group {\n+        delimiter: Brace,\n+        stream: TokenStream [],\n+        span: $DIR/attribute-after-derive.rs:25:1: 28:2 (#0),\n+    },\n+]"}, {"sha": "e3f6607b2ae8da2589a75f01ba59a1fa6b1adb58", "filename": "src/test/ui/proc-macro/auxiliary/multiple-derives.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/21e6cc19fe3740d4e8d45866b053e774fc010209/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fmultiple-derives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e6cc19fe3740d4e8d45866b053e774fc010209/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fmultiple-derives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fmultiple-derives.rs?ref=21e6cc19fe3740d4e8d45866b053e774fc010209", "patch": "@@ -0,0 +1,22 @@\n+// force-host\n+// no-prefer-dynamic\n+\n+#![crate_type = \"proc-macro\"]\n+\n+extern crate proc_macro;\n+\n+use proc_macro::TokenStream;\n+\n+macro_rules! make_derives {\n+    ($($name:ident),*) => {\n+        $(\n+            #[proc_macro_derive($name)]\n+            pub fn $name(input: TokenStream) -> TokenStream {\n+                println!(\"Derive {}: {}\", stringify!($name), input);\n+                TokenStream::new()\n+            }\n+        )*\n+    }\n+}\n+\n+make_derives!(First, Second, Third, Fourth, Fifth);"}, {"sha": "0cf1ceb91dea16260ccfce780ea18b9000b8aae3", "filename": "src/test/ui/proc-macro/derive-expand-order.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/21e6cc19fe3740d4e8d45866b053e774fc010209/src%2Ftest%2Fui%2Fproc-macro%2Fderive-expand-order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e6cc19fe3740d4e8d45866b053e774fc010209/src%2Ftest%2Fui%2Fproc-macro%2Fderive-expand-order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fderive-expand-order.rs?ref=21e6cc19fe3740d4e8d45866b053e774fc010209", "patch": "@@ -0,0 +1,14 @@\n+// run-pass\n+// aux-build:multiple-derives.rs\n+\n+extern crate multiple_derives;\n+\n+use multiple_derives::*;\n+\n+#[derive(First)]\n+#[derive(Second)]\n+#[derive(Third, Fourth)]\n+#[derive(Fifth)]\n+pub struct Foo {}\n+\n+fn main() {}"}, {"sha": "3ac1adf92c24f7dffe9447512f8cccdd161bce1f", "filename": "src/test/ui/proc-macro/derive-expand-order.stdout", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/21e6cc19fe3740d4e8d45866b053e774fc010209/src%2Ftest%2Fui%2Fproc-macro%2Fderive-expand-order.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/21e6cc19fe3740d4e8d45866b053e774fc010209/src%2Ftest%2Fui%2Fproc-macro%2Fderive-expand-order.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fderive-expand-order.stdout?ref=21e6cc19fe3740d4e8d45866b053e774fc010209", "patch": "@@ -0,0 +1,5 @@\n+Derive First: #[derive(Second)] #[derive(Third, Fourth)] #[derive(Fifth)] pub struct Foo { }\n+Derive Second: #[derive(Third, Fourth)] #[derive(Fifth)] pub struct Foo { }\n+Derive Third: #[derive(Fifth)] pub struct Foo { }\n+Derive Fourth: #[derive(Fifth)] pub struct Foo { }\n+Derive Fifth: pub struct Foo { }"}, {"sha": "079e134c6f8447b38acc6623661c67d3806fc279", "filename": "src/test/ui/proc-macro/issue-36935.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/21e6cc19fe3740d4e8d45866b053e774fc010209/src%2Ftest%2Fui%2Fproc-macro%2Fissue-36935.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/21e6cc19fe3740d4e8d45866b053e774fc010209/src%2Ftest%2Fui%2Fproc-macro%2Fissue-36935.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-36935.stderr?ref=21e6cc19fe3740d4e8d45866b053e774fc010209", "patch": "@@ -1,11 +1,3 @@\n-error: proc-macro derive panicked\n-  --> $DIR/issue-36935.rs:6:20\n-   |\n-LL | #[derive(Identity, Panic)]\n-   |                    ^^^^^\n-   |\n-   = help: message: panic-derive\n-\n error[E0428]: the name `Baz` is defined multiple times\n   --> $DIR/issue-36935.rs:7:1\n    |\n@@ -17,6 +9,14 @@ LL | struct Baz {\n    |\n    = note: `Baz` must be defined only once in the type namespace of this module\n \n+error: proc-macro derive panicked\n+  --> $DIR/issue-36935.rs:6:20\n+   |\n+LL | #[derive(Identity, Panic)]\n+   |                    ^^^^^\n+   |\n+   = help: message: panic-derive\n+\n error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0428`."}, {"sha": "6ef72c901a5338b6b9be35aadfa54b71353ded75", "filename": "src/test/ui/union/union-derive.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/21e6cc19fe3740d4e8d45866b053e774fc010209/src%2Ftest%2Fui%2Funion%2Funion-derive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/21e6cc19fe3740d4e8d45866b053e774fc010209/src%2Ftest%2Fui%2Funion%2Funion-derive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-derive.stderr?ref=21e6cc19fe3740d4e8d45866b053e774fc010209", "patch": "@@ -1,20 +1,14 @@\n error: this trait cannot be derived for unions\n-  --> $DIR/union-derive.rs:9:5\n-   |\n-LL |     Debug,\n-   |     ^^^^^\n-\n-error: this trait cannot be derived for unions\n-  --> $DIR/union-derive.rs:8:5\n+  --> $DIR/union-derive.rs:4:5\n    |\n-LL |     Default,\n-   |     ^^^^^^^\n+LL |     PartialEq,\n+   |     ^^^^^^^^^\n \n error: this trait cannot be derived for unions\n-  --> $DIR/union-derive.rs:7:5\n+  --> $DIR/union-derive.rs:5:5\n    |\n-LL |     Hash,\n-   |     ^^^^\n+LL |     PartialOrd,\n+   |     ^^^^^^^^^^\n \n error: this trait cannot be derived for unions\n   --> $DIR/union-derive.rs:6:5\n@@ -23,16 +17,22 @@ LL |     Ord,\n    |     ^^^\n \n error: this trait cannot be derived for unions\n-  --> $DIR/union-derive.rs:5:5\n+  --> $DIR/union-derive.rs:7:5\n    |\n-LL |     PartialOrd,\n-   |     ^^^^^^^^^^\n+LL |     Hash,\n+   |     ^^^^\n \n error: this trait cannot be derived for unions\n-  --> $DIR/union-derive.rs:4:5\n+  --> $DIR/union-derive.rs:8:5\n    |\n-LL |     PartialEq,\n-   |     ^^^^^^^^^\n+LL |     Default,\n+   |     ^^^^^^^\n+\n+error: this trait cannot be derived for unions\n+  --> $DIR/union-derive.rs:9:5\n+   |\n+LL |     Debug,\n+   |     ^^^^^\n \n error: aborting due to 6 previous errors\n "}]}