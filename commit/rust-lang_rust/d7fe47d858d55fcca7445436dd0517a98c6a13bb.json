{"sha": "d7fe47d858d55fcca7445436dd0517a98c6a13bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3ZmU0N2Q4NThkNTVmY2NhNzQ0NTQzNmRkMDUxN2E5OGM2YTEzYmI=", "commit": {"author": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-07-23T21:08:41Z"}, "committer": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-07-23T21:08:41Z"}, "message": "Preserve box syntax", "tree": {"sha": "ad748ffa65d05b28117077bb76618bcf59537ee0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad748ffa65d05b28117077bb76618bcf59537ee0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7fe47d858d55fcca7445436dd0517a98c6a13bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7fe47d858d55fcca7445436dd0517a98c6a13bb", "html_url": "https://github.com/rust-lang/rust/commit/d7fe47d858d55fcca7445436dd0517a98c6a13bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7fe47d858d55fcca7445436dd0517a98c6a13bb/comments", "author": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "609e621a5784b32a9f35b3ecfe4ad2e61d69fbe8", "url": "https://api.github.com/repos/rust-lang/rust/commits/609e621a5784b32a9f35b3ecfe4ad2e61d69fbe8", "html_url": "https://github.com/rust-lang/rust/commit/609e621a5784b32a9f35b3ecfe4ad2e61d69fbe8"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "cb5188017fd8970d4952317edaedb450016bbc95", "filename": "src/expr.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d7fe47d858d55fcca7445436dd0517a98c6a13bb/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7fe47d858d55fcca7445436dd0517a98c6a13bb/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=d7fe47d858d55fcca7445436dd0517a98c6a13bb", "patch": "@@ -378,11 +378,13 @@ fn rewrite_unary_op(context: &RewriteContext,\n                     -> Option<String> {\n     // For some reason, an UnOp is not spanned like BinOp!\n     let operator_str = match *op {\n-        ast::UnOp::UnUniq => \"&\",\n+        ast::UnOp::UnUniq => \"box \",\n         ast::UnOp::UnDeref => \"*\",\n         ast::UnOp::UnNot => \"!\",\n         ast::UnOp::UnNeg => \"-\"\n     };\n \n-    Some(format!(\"{}{}\", operator_str, try_opt!(expr.rewrite(context, width - 1, offset))))\n+    let subexpr = try_opt!(expr.rewrite(context, width - operator_str.len(), offset));\n+\n+    Some(format!(\"{}{}\", operator_str, subexpr))\n }"}, {"sha": "4f6e1b6f74a50076f04b7bfdde870445e4fecabc", "filename": "tests/source/expr.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d7fe47d858d55fcca7445436dd0517a98c6a13bb/tests%2Fsource%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7fe47d858d55fcca7445436dd0517a98c6a13bb/tests%2Fsource%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fexpr.rs?ref=d7fe47d858d55fcca7445436dd0517a98c6a13bb", "patch": "@@ -1,6 +1,9 @@\n // Test expressions\n \n fn foo() -> bool {\n+    let boxed: Box<i32> = box   5;\n+    let referenced = &5;\n+\n     let very_long_variable_name = ( a +  first +   simple + test   );\n     let very_long_variable_name = (a + first + simple + test + AAAAAAAAAAAAA + BBBBBBBBBBBBBBBBB + b + c);\n "}, {"sha": "e5a584ecb96aa09331df086f62df5c177f50607c", "filename": "tests/target/expr.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d7fe47d858d55fcca7445436dd0517a98c6a13bb/tests%2Ftarget%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7fe47d858d55fcca7445436dd0517a98c6a13bb/tests%2Ftarget%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr.rs?ref=d7fe47d858d55fcca7445436dd0517a98c6a13bb", "patch": "@@ -1,6 +1,9 @@\n // Test expressions\n \n fn foo() -> bool {\n+    let boxed: Box<i32> = box 5;\n+    let referenced = &5;\n+\n     let very_long_variable_name = (a + first + simple + test);\n     let very_long_variable_name = (a + first + simple + test + AAAAAAAAAAAAA + BBBBBBBBBBBBBBBBB +\n                                    b + c);"}]}