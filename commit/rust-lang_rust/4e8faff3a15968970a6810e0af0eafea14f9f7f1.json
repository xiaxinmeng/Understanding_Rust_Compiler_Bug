{"sha": "4e8faff3a15968970a6810e0af0eafea14f9f7f1", "node_id": "C_kwDOAAsO6NoAKDRlOGZhZmYzYTE1OTY4OTcwYTY4MTBlMGFmMGVhZmVhMTRmOWY3ZjE", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-10-06T04:39:27Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-10-06T04:50:10Z"}, "message": "Be consistent about deciding whether to print pass data.\n\n`print_time_passes_entry` unconditionally prints data about a pass. The\nmost commonly used call site, in `VerboseTimingGuard::drop`, guards it\nwith a `should_print_passes` test. But there are a couple of other call\nsites that don't do that test.\n\nThis commit moves the `should_print_passes` test within\n`print_time_passes_entry` so that all passes are treated equally.", "tree": {"sha": "4a3d9bbfb5f8761f6fbaeabb1dd7cb72cb2075a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a3d9bbfb5f8761f6fbaeabb1dd7cb72cb2075a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e8faff3a15968970a6810e0af0eafea14f9f7f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e8faff3a15968970a6810e0af0eafea14f9f7f1", "html_url": "https://github.com/rust-lang/rust/commit/4e8faff3a15968970a6810e0af0eafea14f9f7f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e8faff3a15968970a6810e0af0eafea14f9f7f1/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9110d925d0b3e4842376e830f4404a28e1aa2658", "url": "https://api.github.com/repos/rust-lang/rust/commits/9110d925d0b3e4842376e830f4404a28e1aa2658", "html_url": "https://github.com/rust-lang/rust/commit/9110d925d0b3e4842376e830f4404a28e1aa2658"}], "stats": {"total": 40, "additions": 21, "deletions": 19}, "files": [{"sha": "ba1960805d84bf0301539f5e50363a8859db4c9d", "filename": "compiler/rustc_data_structures/src/profiling.rs", "status": "modified", "additions": 21, "deletions": 19, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/4e8faff3a15968970a6810e0af0eafea14f9f7f1/compiler%2Frustc_data_structures%2Fsrc%2Fprofiling.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e8faff3a15968970a6810e0af0eafea14f9f7f1/compiler%2Frustc_data_structures%2Fsrc%2Fprofiling.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fprofiling.rs?ref=4e8faff3a15968970a6810e0af0eafea14f9f7f1", "patch": "@@ -733,27 +733,9 @@ impl Drop for VerboseTimingGuard<'_> {\n         if let Some((start_time, start_rss, ref message)) = self.start_and_message {\n             let end_rss = get_resident_set_size();\n             let dur = start_time.elapsed();\n-\n-            if should_print_passes(dur, start_rss, end_rss) {\n-                print_time_passes_entry(&message, dur, start_rss, end_rss);\n-            }\n-        }\n-    }\n-}\n-\n-fn should_print_passes(dur: Duration, start_rss: Option<usize>, end_rss: Option<usize>) -> bool {\n-    if dur.as_millis() > 5 {\n-        return true;\n-    }\n-\n-    if let (Some(start_rss), Some(end_rss)) = (start_rss, end_rss) {\n-        let change_rss = end_rss.abs_diff(start_rss);\n-        if change_rss > 0 {\n-            return true;\n+            print_time_passes_entry(&message, dur, start_rss, end_rss);\n         }\n     }\n-\n-    false\n }\n \n pub fn print_time_passes_entry(\n@@ -762,6 +744,26 @@ pub fn print_time_passes_entry(\n     start_rss: Option<usize>,\n     end_rss: Option<usize>,\n ) {\n+    // Print the pass if its duration is greater than 5 ms, or it changed the\n+    // measured RSS.\n+    let is_notable = || {\n+        if dur.as_millis() > 5 {\n+            return true;\n+        }\n+\n+        if let (Some(start_rss), Some(end_rss)) = (start_rss, end_rss) {\n+            let change_rss = end_rss.abs_diff(start_rss);\n+            if change_rss > 0 {\n+                return true;\n+            }\n+        }\n+\n+        false\n+    };\n+    if !is_notable() {\n+        return;\n+    }\n+\n     let rss_to_mb = |rss| (rss as f64 / 1_000_000.0).round() as usize;\n     let rss_change_to_mb = |rss| (rss as f64 / 1_000_000.0).round() as i128;\n "}]}