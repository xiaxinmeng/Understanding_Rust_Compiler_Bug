{"sha": "ccf8817d181ab9430a00c38d96b481a07af701bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjZjg4MTdkMTgxYWI5NDMwYTAwYzM4ZDk2YjQ4MWEwN2FmNzAxYmI=", "commit": {"author": {"name": "Martin Asquino", "email": "martin.asquino@gmail.com", "date": "2019-11-02T22:33:34Z"}, "committer": {"name": "Martin Asquino", "email": "martin.asquino@gmail.com", "date": "2019-11-02T22:33:34Z"}, "message": "Use `bool` instead of `Option<bool>` and print it's value only when `true`", "tree": {"sha": "3ebe6c1e70f859eff504f3081c057060e04c2c5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ebe6c1e70f859eff504f3081c057060e04c2c5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccf8817d181ab9430a00c38d96b481a07af701bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccf8817d181ab9430a00c38d96b481a07af701bb", "html_url": "https://github.com/rust-lang/rust/commit/ccf8817d181ab9430a00c38d96b481a07af701bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccf8817d181ab9430a00c38d96b481a07af701bb/comments", "author": {"login": "martskins", "id": 4250565, "node_id": "MDQ6VXNlcjQyNTA1NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/4250565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martskins", "html_url": "https://github.com/martskins", "followers_url": "https://api.github.com/users/martskins/followers", "following_url": "https://api.github.com/users/martskins/following{/other_user}", "gists_url": "https://api.github.com/users/martskins/gists{/gist_id}", "starred_url": "https://api.github.com/users/martskins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martskins/subscriptions", "organizations_url": "https://api.github.com/users/martskins/orgs", "repos_url": "https://api.github.com/users/martskins/repos", "events_url": "https://api.github.com/users/martskins/events{/privacy}", "received_events_url": "https://api.github.com/users/martskins/received_events", "type": "User", "site_admin": false}, "committer": {"login": "martskins", "id": 4250565, "node_id": "MDQ6VXNlcjQyNTA1NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/4250565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martskins", "html_url": "https://github.com/martskins", "followers_url": "https://api.github.com/users/martskins/followers", "following_url": "https://api.github.com/users/martskins/following{/other_user}", "gists_url": "https://api.github.com/users/martskins/gists{/gist_id}", "starred_url": "https://api.github.com/users/martskins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martskins/subscriptions", "organizations_url": "https://api.github.com/users/martskins/orgs", "repos_url": "https://api.github.com/users/martskins/repos", "events_url": "https://api.github.com/users/martskins/events{/privacy}", "received_events_url": "https://api.github.com/users/martskins/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc3848a6a3e659004ba4f2160503be28ea0f9051", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc3848a6a3e659004ba4f2160503be28ea0f9051", "html_url": "https://github.com/rust-lang/rust/commit/dc3848a6a3e659004ba4f2160503be28ea0f9051"}], "stats": {"total": 85, "additions": 6, "deletions": 79}, "files": [{"sha": "b4df6ee2ad04ef47f04fa2741689c9834bcea745", "filename": "crates/ra_ide_api/src/completion/complete_dot.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ccf8817d181ab9430a00c38d96b481a07af701bb/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccf8817d181ab9430a00c38d96b481a07af701bb/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs?ref=ccf8817d181ab9430a00c38d96b481a07af701bb", "patch": "@@ -96,7 +96,6 @@ mod tests {\n        \u22ee        insert: \"the_field\",\n        \u22ee        kind: Field,\n        \u22ee        detail: \"u32\",\n-       \u22ee        deprecated: false,\n        \u22ee    },\n        \u22ee]\n         \"###\n@@ -129,7 +128,6 @@ mod tests {\n                 kind: Method,\n                 lookup: \"foo\",\n                 detail: \"fn foo(self)\",\n-                deprecated: false,\n             },\n             CompletionItem {\n                 label: \"the_field\",\n@@ -141,7 +139,6 @@ mod tests {\n                 documentation: Documentation(\n                     \"This is the_field\",\n                 ),\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -171,7 +168,6 @@ mod tests {\n                 kind: Method,\n                 lookup: \"foo\",\n                 detail: \"fn foo(&self)\",\n-                deprecated: false,\n             },\n             CompletionItem {\n                 label: \"the_field\",\n@@ -180,7 +176,6 @@ mod tests {\n                 insert: \"the_field\",\n                 kind: Field,\n                 detail: \"(u32, i32)\",\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -226,7 +221,6 @@ mod tests {\n                 kind: Method,\n                 lookup: \"the_method\",\n                 detail: \"fn the_method(&self)\",\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -256,7 +250,6 @@ mod tests {\n                 kind: Method,\n                 lookup: \"the_method\",\n                 detail: \"fn the_method(&self)\",\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -286,7 +279,6 @@ mod tests {\n                 kind: Method,\n                 lookup: \"the_method\",\n                 detail: \"fn the_method(&self)\",\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -339,7 +331,6 @@ mod tests {\n                 kind: Method,\n                 lookup: \"the_method\",\n                 detail: \"fn the_method(&self)\",\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -410,7 +401,6 @@ mod tests {\n                 kind: Method,\n                 lookup: \"blah\",\n                 detail: \"pub fn blah(&self)\",\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -437,7 +427,6 @@ mod tests {\n        \u22ee        insert: \"the_field\",\n        \u22ee        kind: Field,\n        \u22ee        detail: \"u32\",\n-       \u22ee        deprecated: false,\n        \u22ee    },\n        \u22ee]\n         \"###"}, {"sha": "09f743c660cb2220b784e47506b040c39dbc9ddb", "filename": "crates/ra_ide_api/src/completion/complete_macro_in_item_position.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ccf8817d181ab9430a00c38d96b481a07af701bb/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_macro_in_item_position.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccf8817d181ab9430a00c38d96b481a07af701bb/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_macro_in_item_position.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_macro_in_item_position.rs?ref=ccf8817d181ab9430a00c38d96b481a07af701bb", "patch": "@@ -45,7 +45,6 @@ mod tests {\n         insert: \"foo!($0)\",\n         kind: Macro,\n         detail: \"macro_rules! foo\",\n-        deprecated: false,\n     },\n ]\"##\n         );\n@@ -87,7 +86,6 @@ mod tests {\n         documentation: Documentation(\n             \"Creates a [`Vec`] containing the arguments.\\n\\n- Create a [`Vec`] containing a given list of elements:\\n\\n```\\nlet v = vec![1, 2, 3];\\nassert_eq!(v[0], 1);\\nassert_eq!(v[1], 2);\\nassert_eq!(v[2], 3);\\n```\",\n         ),\n-        deprecated: false,\n     },\n ]\"##\n         );\n@@ -123,7 +121,6 @@ mod tests {\n         documentation: Documentation(\n             \"Foo\\n\\nNot call `fooo!()` `fooo!()`, or `_foo![]` `_foo![]`.\\nCall as `let _=foo!  { hello world };`\",\n         ),\n-        deprecated: false,\n     },\n     CompletionItem {\n         label: \"main()\",\n@@ -133,7 +130,6 @@ mod tests {\n         kind: Function,\n         lookup: \"main\",\n         detail: \"fn main()\",\n-        deprecated: false,\n     },\n ]\n         \"###"}, {"sha": "9ac9768afb203e35c762fa63a3a01976d37195b9", "filename": "crates/ra_ide_api/src/completion/complete_path.rs", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ccf8817d181ab9430a00c38d96b481a07af701bb/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccf8817d181ab9430a00c38d96b481a07af701bb/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs?ref=ccf8817d181ab9430a00c38d96b481a07af701bb", "patch": "@@ -308,7 +308,6 @@ mod tests {\n         documentation: Documentation(\n             \"Bar Variant with i32\",\n         ),\n-        deprecated: false,\n     },\n     CompletionItem {\n         label: \"Foo\",\n@@ -320,7 +319,6 @@ mod tests {\n         documentation: Documentation(\n             \"Foo Variant\",\n         ),\n-        deprecated: false,\n     },\n ]\"###\n         );\n@@ -356,7 +354,6 @@ mod tests {\n         documentation: Documentation(\n             \"Bar Variant with i32 and u32\",\n         ),\n-        deprecated: false,\n     },\n     CompletionItem {\n         label: \"Foo\",\n@@ -368,7 +365,6 @@ mod tests {\n         documentation: Documentation(\n             \"Foo Variant (empty)\",\n         ),\n-        deprecated: false,\n     },\n     CompletionItem {\n         label: \"S\",\n@@ -380,7 +376,6 @@ mod tests {\n         documentation: Documentation(\n             \"\",\n         ),\n-        deprecated: false,\n     },\n ]\"###\n         );\n@@ -416,7 +411,6 @@ mod tests {\n                 documentation: Documentation(\n                     \"An associated method\",\n                 ),\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -451,7 +445,6 @@ mod tests {\n         documentation: Documentation(\n             \"An associated const\",\n         ),\n-        deprecated: false,\n     },\n ]\"###\n         );\n@@ -485,7 +478,6 @@ mod tests {\n         documentation: Documentation(\n             \"An associated type\",\n         ),\n-        deprecated: false,\n     },\n ]\"###\n         );\n@@ -521,7 +513,6 @@ mod tests {\n                 documentation: Documentation(\n                     \"An associated method\",\n                 ),\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -558,7 +549,6 @@ mod tests {\n                 documentation: Documentation(\n                     \"An associated method\",\n                 ),\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -618,7 +608,6 @@ mod tests {\n                 documentation: Documentation(\n                     \"A trait method\",\n                 ),\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -655,7 +644,6 @@ mod tests {\n                 documentation: Documentation(\n                     \"A trait method\",\n                 ),\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -692,7 +680,6 @@ mod tests {\n                 documentation: Documentation(\n                     \"A trait method\",\n                 ),\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -724,7 +711,6 @@ mod tests {\n                 kind: Function,\n                 lookup: \"bar\",\n                 detail: \"fn bar()\",\n-                deprecated: false,\n             },\n             CompletionItem {\n                 label: \"foo()\",\n@@ -734,7 +720,6 @@ mod tests {\n                 kind: Function,\n                 lookup: \"foo\",\n                 detail: \"fn foo()\",\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -765,7 +750,6 @@ mod tests {\n                 insert: \"foo!($0)\",\n                 kind: Macro,\n                 detail: \"#[macro_export]\\nmacro_rules! foo\",\n-                deprecated: false,\n             },\n             CompletionItem {\n                 label: \"main()\",\n@@ -775,7 +759,6 @@ mod tests {\n                 kind: Function,\n                 lookup: \"main\",\n                 detail: \"fn main()\",\n-                deprecated: false,\n             },\n         ]\n         \"###"}, {"sha": "0295b8101373f200632aef7fbb2c61cbde159e5d", "filename": "crates/ra_ide_api/src/completion/complete_record_literal.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ccf8817d181ab9430a00c38d96b481a07af701bb/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccf8817d181ab9430a00c38d96b481a07af701bb/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs?ref=ccf8817d181ab9430a00c38d96b481a07af701bb", "patch": "@@ -78,7 +78,6 @@ mod tests {\n        \u22ee        insert: \"the_field\",\n        \u22ee        kind: Field,\n        \u22ee        detail: \"u32\",\n-       \u22ee        deprecated: false,\n        \u22ee    },\n        \u22ee]\n         \"###);\n@@ -105,7 +104,6 @@ mod tests {\n        \u22ee        insert: \"a\",\n        \u22ee        kind: Field,\n        \u22ee        detail: \"u32\",\n-       \u22ee        deprecated: false,\n        \u22ee    },\n        \u22ee]\n         \"###);\n@@ -132,7 +130,6 @@ mod tests {\n        \u22ee        insert: \"b\",\n        \u22ee        kind: Field,\n        \u22ee        detail: \"u32\",\n-       \u22ee        deprecated: false,\n        \u22ee    },\n        \u22ee]\n         \"###);\n@@ -158,7 +155,6 @@ mod tests {\n        \u22ee        insert: \"a\",\n        \u22ee        kind: Field,\n        \u22ee        detail: \"u32\",\n-       \u22ee        deprecated: false,\n        \u22ee    },\n        \u22ee]\n         \"###);"}, {"sha": "d20fa796c7f826fa6e0c1bed5ccaaa2d4b2b86e9", "filename": "crates/ra_ide_api/src/completion/complete_record_pattern.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ccf8817d181ab9430a00c38d96b481a07af701bb/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_record_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccf8817d181ab9430a00c38d96b481a07af701bb/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_record_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_record_pattern.rs?ref=ccf8817d181ab9430a00c38d96b481a07af701bb", "patch": "@@ -52,7 +52,6 @@ mod tests {\n        \u22ee        insert: \"foo\",\n        \u22ee        kind: Field,\n        \u22ee        detail: \"u32\",\n-       \u22ee        deprecated: false,\n        \u22ee    },\n        \u22ee]\n         \"###);\n@@ -82,7 +81,6 @@ mod tests {\n        \u22ee        insert: \"bar\",\n        \u22ee        kind: Field,\n        \u22ee        detail: \"()\",\n-       \u22ee        deprecated: false,\n        \u22ee    },\n        \u22ee    CompletionItem {\n        \u22ee        label: \"foo\",\n@@ -91,7 +89,6 @@ mod tests {\n        \u22ee        insert: \"foo\",\n        \u22ee        kind: Field,\n        \u22ee        detail: \"u32\",\n-       \u22ee        deprecated: false,\n        \u22ee    },\n        \u22ee]\n         \"###);"}, {"sha": "4e56de3f542439c78f1e649aa822494438dad8de", "filename": "crates/ra_ide_api/src/completion/complete_scope.rs", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ccf8817d181ab9430a00c38d96b481a07af701bb/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccf8817d181ab9430a00c38d96b481a07af701bb/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=ccf8817d181ab9430a00c38d96b481a07af701bb", "patch": "@@ -155,7 +155,6 @@ mod tests {\n                 kind: Function,\n                 lookup: \"quux\",\n                 detail: \"fn quux(x: i32)\",\n-                deprecated: false,\n             },\n             CompletionItem {\n                 label: \"x\",\n@@ -219,7 +218,6 @@ mod tests {\n                 kind: Function,\n                 lookup: \"quux\",\n                 detail: \"fn quux()\",\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -248,7 +246,6 @@ mod tests {\n                 kind: Function,\n                 lookup: \"quux\",\n                 detail: \"fn quux()\",\n-                deprecated: false,\n             },\n             CompletionItem {\n                 label: \"x\",\n@@ -289,7 +286,6 @@ mod tests {\n                 kind: Function,\n                 lookup: \"quux\",\n                 detail: \"fn quux<T>()\",\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -395,7 +391,6 @@ mod tests {\n                 kind: Function,\n                 lookup: \"quux\",\n                 detail: \"fn quux()\",\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -455,7 +450,6 @@ mod tests {\n                 kind: Function,\n                 lookup: \"quux\",\n                 detail: \"fn quux()\",\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -488,7 +482,6 @@ mod tests {\n                 kind: Function,\n                 lookup: \"x\",\n                 detail: \"fn x()\",\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -527,7 +520,6 @@ mod tests {\n                 kind: Function,\n                 lookup: \"foo\",\n                 detail: \"fn foo()\",\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -592,7 +584,6 @@ mod tests {\n                 kind: Function,\n                 lookup: \"foo\",\n                 detail: \"fn foo()\",\n-                deprecated: false,\n             },\n             CompletionItem {\n                 label: \"std\",\n@@ -648,7 +639,6 @@ mod tests {\n                 insert: \"bar!($0)\",\n                 kind: Macro,\n                 detail: \"macro_rules! bar\",\n-                deprecated: false,\n             },\n             CompletionItem {\n                 label: \"baz!\",\n@@ -657,7 +647,6 @@ mod tests {\n                 insert: \"baz!($0)\",\n                 kind: Macro,\n                 detail: \"#[macro_export]\\nmacro_rules! baz\",\n-                deprecated: false,\n             },\n             CompletionItem {\n                 label: \"foo!\",\n@@ -666,7 +655,6 @@ mod tests {\n                 insert: \"foo!($0)\",\n                 kind: Macro,\n                 detail: \"macro_rules! foo\",\n-                deprecated: false,\n             },\n             CompletionItem {\n                 label: \"m1\",\n@@ -690,7 +678,6 @@ mod tests {\n                 kind: Function,\n                 lookup: \"main\",\n                 detail: \"fn main()\",\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -721,7 +708,6 @@ mod tests {\n                 insert: \"foo!($0)\",\n                 kind: Macro,\n                 detail: \"macro_rules! foo\",\n-                deprecated: false,\n             },\n             CompletionItem {\n                 label: \"foo()\",\n@@ -731,7 +717,6 @@ mod tests {\n                 kind: Function,\n                 lookup: \"foo\",\n                 detail: \"fn foo()\",\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -762,7 +747,6 @@ mod tests {\n                 insert: \"foo!($0)\",\n                 kind: Macro,\n                 detail: \"macro_rules! foo\",\n-                deprecated: false,\n             },\n             CompletionItem {\n                 label: \"main()\",\n@@ -772,7 +756,6 @@ mod tests {\n                 kind: Function,\n                 lookup: \"main\",\n                 detail: \"fn main()\",\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -803,7 +786,6 @@ mod tests {\n                 insert: \"foo!($0)\",\n                 kind: Macro,\n                 detail: \"macro_rules! foo\",\n-                deprecated: false,\n             },\n             CompletionItem {\n                 label: \"main()\",\n@@ -813,7 +795,6 @@ mod tests {\n                 kind: Function,\n                 lookup: \"main\",\n                 detail: \"fn main()\",\n-                deprecated: false,\n             },\n         ]\n         \"###"}, {"sha": "93f336370915a11db85079b13285655faacbbefa", "filename": "crates/ra_ide_api/src/completion/completion_item.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccf8817d181ab9430a00c38d96b481a07af701bb/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccf8817d181ab9430a00c38d96b481a07af701bb/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=ccf8817d181ab9430a00c38d96b481a07af701bb", "patch": "@@ -46,7 +46,7 @@ pub struct CompletionItem {\n     documentation: Option<Documentation>,\n \n     /// Whether this item is marked as deprecated\n-    deprecated: Option<bool>,\n+    deprecated: bool,\n }\n \n // We use custom debug for CompletionItem to make `insta`'s diffs more readable.\n@@ -73,8 +73,8 @@ impl fmt::Debug for CompletionItem {\n         if let Some(documentation) = self.documentation() {\n             s.field(\"documentation\", &documentation);\n         }\n-        if let Some(deprecated) = self.deprecated {\n-            s.field(\"deprecated\", &deprecated);\n+        if self.deprecated {\n+            s.field(\"deprecated\", &true);\n         }\n         s.finish()\n     }\n@@ -174,7 +174,7 @@ impl CompletionItem {\n         self.kind\n     }\n \n-    pub fn deprecated(&self) -> Option<bool> {\n+    pub fn deprecated(&self) -> bool {\n         self.deprecated\n     }\n }\n@@ -220,7 +220,7 @@ impl Builder {\n             lookup: self.lookup,\n             kind: self.kind,\n             completion_kind: self.completion_kind,\n-            deprecated: self.deprecated,\n+            deprecated: self.deprecated.unwrap_or(false),\n         }\n     }\n     pub(crate) fn lookup_by(mut self, lookup: impl Into<String>) -> Builder {"}, {"sha": "cb55d18751b39ba7ba55b8a38cef310e398b877f", "filename": "crates/ra_ide_api/src/completion/presentation.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ccf8817d181ab9430a00c38d96b481a07af701bb/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccf8817d181ab9430a00c38d96b481a07af701bb/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=ccf8817d181ab9430a00c38d96b481a07af701bb", "patch": "@@ -335,7 +335,6 @@ mod tests {\n                     kind: Function,\n                     lookup: \"main\",\n                     detail: \"fn main()\",\n-                    deprecated: false,\n                 },\n                 CompletionItem {\n                     label: \"something_deprecated()\",\n@@ -382,7 +381,6 @@ mod tests {\n                 kind: Function,\n                 lookup: \"main\",\n                 detail: \"fn main()\",\n-                deprecated: false,\n             },\n             CompletionItem {\n                 label: \"no_args()\",\n@@ -392,7 +390,6 @@ mod tests {\n                 kind: Function,\n                 lookup: \"no_args\",\n                 detail: \"fn no_args()\",\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -414,7 +411,6 @@ mod tests {\n                 kind: Function,\n                 lookup: \"main\",\n                 detail: \"fn main()\",\n-                deprecated: false,\n             },\n             CompletionItem {\n                 label: \"with_args(\u2026)\",\n@@ -424,7 +420,6 @@ mod tests {\n                 kind: Function,\n                 lookup: \"with_args\",\n                 detail: \"fn with_args(x: i32, y: String)\",\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -451,7 +446,6 @@ mod tests {\n                 kind: Method,\n                 lookup: \"foo\",\n                 detail: \"fn foo(&self)\",\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -476,7 +470,6 @@ mod tests {\n         insert: \"foo\",\n         kind: Function,\n         detail: \"pub fn foo()\",\n-        deprecated: false,\n     },\n ]\"#\n         );\n@@ -502,7 +495,6 @@ mod tests {\n         insert: \"frobnicate\",\n         kind: Function,\n         detail: \"fn frobnicate()\",\n-        deprecated: false,\n     },\n     CompletionItem {\n         label: \"main\",\n@@ -511,7 +503,6 @@ mod tests {\n         insert: \"main\",\n         kind: Function,\n         detail: \"fn main()\",\n-        deprecated: false,\n     },\n ]\"#\n         );\n@@ -534,7 +525,6 @@ mod tests {\n         insert: \"new\",\n         kind: Function,\n         detail: \"fn new() -> Foo\",\n-        deprecated: false,\n     },\n ]\"#\n         );\n@@ -568,7 +558,6 @@ mod tests {\n                 kind: Function,\n                 lookup: \"foo\",\n                 detail: \"fn foo(xs: Ve)\",\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -598,7 +587,6 @@ mod tests {\n                 kind: Function,\n                 lookup: \"foo\",\n                 detail: \"fn foo(xs: Ve)\",\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -627,7 +615,6 @@ mod tests {\n                 kind: Function,\n                 lookup: \"foo\",\n                 detail: \"fn foo(xs: Ve)\",\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -656,7 +643,6 @@ mod tests {\n                 kind: Function,\n                 lookup: \"foo\",\n                 detail: \"fn foo(xs: Ve<i128>)\",\n-                deprecated: false,\n             },\n         ]\n         \"###\n@@ -687,7 +673,6 @@ mod tests {\n                 insert: \"frobnicate\",\n                 kind: Macro,\n                 detail: \"#[macro_export]\\nmacro_rules! frobnicate\",\n-                deprecated: false,\n             },\n         ]\n         \"###"}, {"sha": "94ed619faeca131300f02ccbe8d2fa3934738cfd", "filename": "crates/ra_lsp_server/src/conv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ccf8817d181ab9430a00c38d96b481a07af701bb/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccf8817d181ab9430a00c38d96b481a07af701bb/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs?ref=ccf8817d181ab9430a00c38d96b481a07af701bb", "patch": "@@ -127,7 +127,7 @@ impl ConvWith<(&LineIndex, LineEndings)> for CompletionItem {\n             text_edit: Some(text_edit),\n             additional_text_edits: Some(additional_text_edits),\n             documentation: self.documentation().map(|it| it.conv()),\n-            deprecated: self.deprecated(),\n+            deprecated: Some(self.deprecated()),\n             ..Default::default()\n         };\n         res.insert_text_format = Some(match self.insert_text_format() {"}]}