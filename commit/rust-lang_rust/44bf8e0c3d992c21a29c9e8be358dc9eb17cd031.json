{"sha": "44bf8e0c3d992c21a29c9e8be358dc9eb17cd031", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0YmY4ZTBjM2Q5OTJjMjFhMjljOWU4YmUzNThkYzllYjE3Y2QwMzE=", "commit": {"author": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2018-12-28T23:40:48Z"}, "committer": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2018-12-28T23:50:03Z"}, "message": "Remove unsafe from consts clippy lints", "tree": {"sha": "5e4db18633cc047c3cb719b0addaa6d6d02ce532", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e4db18633cc047c3cb719b0addaa6d6d02ce532"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44bf8e0c3d992c21a29c9e8be358dc9eb17cd031", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44bf8e0c3d992c21a29c9e8be358dc9eb17cd031", "html_url": "https://github.com/rust-lang/rust/commit/44bf8e0c3d992c21a29c9e8be358dc9eb17cd031", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44bf8e0c3d992c21a29c9e8be358dc9eb17cd031/comments", "author": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c4abb5b800dc5884e0d39bdf07b61a94b0361ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c4abb5b800dc5884e0d39bdf07b61a94b0361ad", "html_url": "https://github.com/rust-lang/rust/commit/3c4abb5b800dc5884e0d39bdf07b61a94b0361ad"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "04109cb63df574169c71bd624c983a092a548ec6", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/44bf8e0c3d992c21a29c9e8be358dc9eb17cd031/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44bf8e0c3d992c21a29c9e8be358dc9eb17cd031/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=44bf8e0c3d992c21a29c9e8be358dc9eb17cd031", "patch": "@@ -23,7 +23,6 @@ use std::cmp::Ordering::{self, Equal};\n use std::cmp::PartialOrd;\n use std::convert::TryInto;\n use std::hash::{Hash, Hasher};\n-use std::mem;\n use std::rc::Rc;\n \n /// A `LitKind`-like enum to fold constant `Expr`s into.\n@@ -61,14 +60,14 @@ impl PartialEq for Constant {\n             (&Constant::F64(l), &Constant::F64(r)) => {\n                 // we want `Fw32 == FwAny` and `FwAny == Fw64`, by transitivity we must have\n                 // `Fw32 == Fw64` so don\u2019t compare them\n-                // mem::transmute is required to catch non-matching 0.0, -0.0, and NaNs\n-                unsafe { mem::transmute::<f64, u64>(l) == mem::transmute::<f64, u64>(r) }\n+                // to_bits is required to catch non-matching 0.0, -0.0, and NaNs\n+                l.to_bits() == r.to_bits()\n             },\n             (&Constant::F32(l), &Constant::F32(r)) => {\n                 // we want `Fw32 == FwAny` and `FwAny == Fw64`, by transitivity we must have\n                 // `Fw32 == Fw64` so don\u2019t compare them\n-                // mem::transmute is required to catch non-matching 0.0, -0.0, and NaNs\n-                unsafe { mem::transmute::<f64, u64>(f64::from(l)) == mem::transmute::<f64, u64>(f64::from(r)) }\n+                // to_bits is required to catch non-matching 0.0, -0.0, and NaNs\n+                f64::from(l).to_bits() == f64::from(r).to_bits()\n             },\n             (&Constant::Bool(l), &Constant::Bool(r)) => l == r,\n             (&Constant::Vec(ref l), &Constant::Vec(ref r)) | (&Constant::Tuple(ref l), &Constant::Tuple(ref r)) => {\n@@ -99,10 +98,10 @@ impl Hash for Constant {\n                 i.hash(state);\n             },\n             Constant::F32(f) => {\n-                unsafe { mem::transmute::<f64, u64>(f64::from(f)) }.hash(state);\n+                f64::from(f).to_bits().hash(state);\n             },\n             Constant::F64(f) => {\n-                unsafe { mem::transmute::<f64, u64>(f) }.hash(state);\n+                f.to_bits().hash(state);\n             },\n             Constant::Bool(b) => {\n                 b.hash(state);"}]}