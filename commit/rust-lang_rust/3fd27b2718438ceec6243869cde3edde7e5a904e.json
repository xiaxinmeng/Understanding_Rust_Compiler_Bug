{"sha": "3fd27b2718438ceec6243869cde3edde7e5a904e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmZDI3YjI3MTg0MzhjZWVjNjI0Mzg2OWNkZTNlZGRlN2U1YTkwNGU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-27T07:11:50Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-27T07:11:50Z"}, "message": "Auto merge of #46977 - est31:column_fix, r=dtolnay\n\n Make the output of the column! macro 1 based\n\nFixes  #46868.\n\nI didn't add any regression tests as the change already had to change tests inside the codebase.\n\nr? @dtolnay", "tree": {"sha": "500df19b7e797341a03aedf5d9934f5c026cd6f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/500df19b7e797341a03aedf5d9934f5c026cd6f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fd27b2718438ceec6243869cde3edde7e5a904e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fd27b2718438ceec6243869cde3edde7e5a904e", "html_url": "https://github.com/rust-lang/rust/commit/3fd27b2718438ceec6243869cde3edde7e5a904e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fd27b2718438ceec6243869cde3edde7e5a904e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8098c5c4db081585e0dc12fe6a2e0defe92857f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8098c5c4db081585e0dc12fe6a2e0defe92857f", "html_url": "https://github.com/rust-lang/rust/commit/e8098c5c4db081585e0dc12fe6a2e0defe92857f"}, {"sha": "6081989adc7e06dcb6b88feb12908dbb08565c6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6081989adc7e06dcb6b88feb12908dbb08565c6c", "html_url": "https://github.com/rust-lang/rust/commit/6081989adc7e06dcb6b88feb12908dbb08565c6c"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "9f3f0ea274217bd59342e48995c4db89ba515ded", "filename": "src/libstd/macros.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3fd27b2718438ceec6243869cde3edde7e5a904e/src%2Flibstd%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fd27b2718438ceec6243869cde3edde7e5a904e/src%2Flibstd%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmacros.rs?ref=3fd27b2718438ceec6243869cde3edde7e5a904e", "patch": "@@ -460,9 +460,12 @@ pub mod builtin {\n     /// With [`column!`] and [`file!`], these macros provide debugging information for\n     /// developers about the location within the source.\n     ///\n-    /// The expanded expression has type `u32`, and the returned line is not\n-    /// the invocation of the `line!()` macro itself, but rather the first macro\n-    /// invocation leading up to the invocation of the `line!()` macro.\n+    /// The expanded expression has type `u32` and is 1-based, so the first line\n+    /// in each file evaluates to 1, the second to 2, etc. This is consistent\n+    /// with error messages by common compilers or popular editors.\n+    /// The returned line is not the invocation of the `line!` macro itself,\n+    /// but rather the first macro invocation leading up to the invocation\n+    /// of the `line!` macro.\n     ///\n     /// [`column!`]: macro.column.html\n     /// [`file!`]: macro.file.html\n@@ -482,9 +485,12 @@ pub mod builtin {\n     /// With [`line!`] and [`file!`], these macros provide debugging information for\n     /// developers about the location within the source.\n     ///\n-    /// The expanded expression has type `u32`, and the returned column is not\n-    /// the invocation of the `column!` macro itself, but rather the first macro\n-    /// invocation leading up to the invocation of the `column!` macro.\n+    /// The expanded expression has type `u32` and is 1-based, so the first column\n+    /// in each line evaluates to 1, the second to 2, etc. This is consistent\n+    /// with error messages by common compilers or popular editors.\n+    /// The returned column is not the invocation of the `column!` macro itself,\n+    /// but rather the first macro invocation leading up to the invocation\n+    /// of the `column!` macro.\n     ///\n     /// [`line!`]: macro.line.html\n     /// [`file!`]: macro.file.html"}, {"sha": "6b08448107a9fbc54354bd3d2e904ae0f9109aff", "filename": "src/libsyntax/ext/source_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3fd27b2718438ceec6243869cde3edde7e5a904e/src%2Flibsyntax%2Fext%2Fsource_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fd27b2718438ceec6243869cde3edde7e5a904e/src%2Flibsyntax%2Fext%2Fsource_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fsource_util.rs?ref=3fd27b2718438ceec6243869cde3edde7e5a904e", "patch": "@@ -49,7 +49,7 @@ pub fn expand_column(cx: &mut ExtCtxt, sp: Span, tts: &[tokenstream::TokenTree])\n     let topmost = cx.expansion_cause().unwrap_or(sp);\n     let loc = cx.codemap().lookup_char_pos(topmost.lo());\n \n-    base::MacEager::expr(cx.expr_u32(topmost, loc.col.to_usize() as u32))\n+    base::MacEager::expr(cx.expr_u32(topmost, loc.col.to_usize() as u32 + 1))\n }\n \n /* __rust_unstable_column!(): expands to the current column number */"}, {"sha": "7f8c7f5521fa10674a63b1043d88f9e47aa0bbcb", "filename": "src/test/run-pass/issue-26322.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3fd27b2718438ceec6243869cde3edde7e5a904e/src%2Ftest%2Frun-pass%2Fissue-26322.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fd27b2718438ceec6243869cde3edde7e5a904e/src%2Ftest%2Frun-pass%2Fissue-26322.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-26322.rs?ref=3fd27b2718438ceec6243869cde3edde7e5a904e", "patch": "@@ -28,9 +28,9 @@ fn main() {\n         columnline!()\n     } else { (0, 0) };\n     let cl = columnline!();\n-    assert_eq!(closure(), (8, 25));\n-    assert_eq!(iflet, (8, 28));\n-    assert_eq!(cl, (13, 30));\n+    assert_eq!(closure(), (9, 25));\n+    assert_eq!(iflet, (9, 28));\n+    assert_eq!(cl, (14, 30));\n     let indirect = indirectcolumnline!();\n-    assert_eq!(indirect, (19, 34));\n+    assert_eq!(indirect, (20, 34));\n }"}, {"sha": "1b2741f14b63b90c72f61451ea5b25be660b735a", "filename": "src/test/run-pass/syntax-extension-source-utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3fd27b2718438ceec6243869cde3edde7e5a904e/src%2Ftest%2Frun-pass%2Fsyntax-extension-source-utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fd27b2718438ceec6243869cde3edde7e5a904e/src%2Ftest%2Frun-pass%2Fsyntax-extension-source-utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-extension-source-utils.rs?ref=3fd27b2718438ceec6243869cde3edde7e5a904e", "patch": "@@ -22,7 +22,7 @@ macro_rules! indirect_line { () => ( line!() ) }\n \n pub fn main() {\n     assert_eq!(line!(), 24);\n-    assert_eq!(column!(), 15);\n+    assert_eq!(column!(), 16);\n     assert_eq!(indirect_line!(), 26);\n     assert!((file!().ends_with(\"syntax-extension-source-utils.rs\")));\n     assert_eq!(stringify!((2*3) + 5).to_string(), \"( 2 * 3 ) + 5\".to_string());"}]}