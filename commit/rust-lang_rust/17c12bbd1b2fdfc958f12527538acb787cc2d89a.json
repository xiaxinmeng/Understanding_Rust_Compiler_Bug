{"sha": "17c12bbd1b2fdfc958f12527538acb787cc2d89a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3YzEyYmJkMWIyZmRmYzk1OGYxMjUyNzUzOGFjYjc4N2NjMmQ4OWE=", "commit": {"author": {"name": "Mihnea Dobrescu-Balaur", "email": "mihnea@linux.com", "date": "2013-08-07T16:46:09Z"}, "committer": {"name": "Mihnea Dobrescu-Balaur", "email": "mihnea@linux.com", "date": "2013-08-07T16:46:09Z"}, "message": "Add frequency count to extra::stat. #8281", "tree": {"sha": "d216344b702a5bcfc7b575fed72066c3d9d0b4f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d216344b702a5bcfc7b575fed72066c3d9d0b4f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17c12bbd1b2fdfc958f12527538acb787cc2d89a", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17c12bbd1b2fdfc958f12527538acb787cc2d89a", "html_url": "https://github.com/rust-lang/rust/commit/17c12bbd1b2fdfc958f12527538acb787cc2d89a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17c12bbd1b2fdfc958f12527538acb787cc2d89a/comments", "author": {"login": "mihneadb", "id": 643127, "node_id": "MDQ6VXNlcjY0MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/643127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mihneadb", "html_url": "https://github.com/mihneadb", "followers_url": "https://api.github.com/users/mihneadb/followers", "following_url": "https://api.github.com/users/mihneadb/following{/other_user}", "gists_url": "https://api.github.com/users/mihneadb/gists{/gist_id}", "starred_url": "https://api.github.com/users/mihneadb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mihneadb/subscriptions", "organizations_url": "https://api.github.com/users/mihneadb/orgs", "repos_url": "https://api.github.com/users/mihneadb/repos", "events_url": "https://api.github.com/users/mihneadb/events{/privacy}", "received_events_url": "https://api.github.com/users/mihneadb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mihneadb", "id": 643127, "node_id": "MDQ6VXNlcjY0MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/643127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mihneadb", "html_url": "https://github.com/mihneadb", "followers_url": "https://api.github.com/users/mihneadb/followers", "following_url": "https://api.github.com/users/mihneadb/following{/other_user}", "gists_url": "https://api.github.com/users/mihneadb/gists{/gist_id}", "starred_url": "https://api.github.com/users/mihneadb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mihneadb/subscriptions", "organizations_url": "https://api.github.com/users/mihneadb/orgs", "repos_url": "https://api.github.com/users/mihneadb/repos", "events_url": "https://api.github.com/users/mihneadb/events{/privacy}", "received_events_url": "https://api.github.com/users/mihneadb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "597b3fd03fa1213ede610088569decd390d2c2fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/597b3fd03fa1213ede610088569decd390d2c2fb", "html_url": "https://github.com/rust-lang/rust/commit/597b3fd03fa1213ede610088569decd390d2c2fb"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "9238034cba33ccced0408caee1a27a93d0eec06e", "filename": "src/libextra/stats.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/17c12bbd1b2fdfc958f12527538acb787cc2d89a/src%2Flibextra%2Fstats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17c12bbd1b2fdfc958f12527538acb787cc2d89a/src%2Flibextra%2Fstats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fstats.rs?ref=17c12bbd1b2fdfc958f12527538acb787cc2d89a", "patch": "@@ -10,6 +10,7 @@\n \n use sort;\n use std::cmp;\n+use std::hashmap;\n use std::io;\n use std::num;\n \n@@ -352,6 +353,16 @@ pub fn write_boxplot(w: @io::Writer, s: &Summary, width_hint: uint) {\n     w.write_str(histr);\n }\n \n+/// Returns a HashMap with the number of occurences of every element in the\n+/// sequence that the iterator exposes.\n+pub fn freq_count<T: Iterator<U>, U: Eq+Hash>(mut iter: T) -> hashmap::HashMap<U, uint> {\n+    let mut map = hashmap::HashMap::new::<U, uint>();\n+    for elem in iter {\n+        map.insert_or_update_with(elem, 1, |_, count| *count += 1);\n+    }\n+    map\n+}\n+\n // Test vectors generated from R, using the script src/etc/stat-test-vectors.r.\n \n #[cfg(test)]"}]}