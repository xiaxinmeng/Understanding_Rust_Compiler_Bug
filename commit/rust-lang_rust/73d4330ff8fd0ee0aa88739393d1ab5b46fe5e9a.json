{"sha": "73d4330ff8fd0ee0aa88739393d1ab5b46fe5e9a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczZDQzMzBmZjhmZDBlZTBhYTg4NzM5MzkzZDFhYjViNDZmZTVlOWE=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2015-07-28T17:54:13Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2015-07-28T20:04:25Z"}, "message": "Use raw pointers to avoid aliasing violation in split_at_mut\n\nFixes #27357", "tree": {"sha": "465c16ed306fd394e1eb390635a224a1fbc6181d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/465c16ed306fd394e1eb390635a224a1fbc6181d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73d4330ff8fd0ee0aa88739393d1ab5b46fe5e9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73d4330ff8fd0ee0aa88739393d1ab5b46fe5e9a", "html_url": "https://github.com/rust-lang/rust/commit/73d4330ff8fd0ee0aa88739393d1ab5b46fe5e9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73d4330ff8fd0ee0aa88739393d1ab5b46fe5e9a/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b28ffa5216c845d1cef6b0cb3e5ac7db12025d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b28ffa5216c845d1cef6b0cb3e5ac7db12025d0", "html_url": "https://github.com/rust-lang/rust/commit/1b28ffa5216c845d1cef6b0cb3e5ac7db12025d0"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "9b9c61dd6e5fc36d4b5c5369794983a066034af9", "filename": "src/libcore/slice.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/73d4330ff8fd0ee0aa88739393d1ab5b46fe5e9a/src%2Flibcore%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73d4330ff8fd0ee0aa88739393d1ab5b46fe5e9a/src%2Flibcore%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice.rs?ref=73d4330ff8fd0ee0aa88739393d1ab5b46fe5e9a", "patch": "@@ -288,11 +288,12 @@ impl<T> SliceExt for [T] {\n \n     #[inline]\n     fn split_at_mut(&mut self, mid: usize) -> (&mut [T], &mut [T]) {\n+        let len = self.len();\n+        let ptr = self.as_mut_ptr();\n+        assert!(mid <= len);\n         unsafe {\n-            let self2: &mut [T] = mem::transmute_copy(&self);\n-\n-            (ops::IndexMut::index_mut(self, ops::RangeTo { end: mid } ),\n-             ops::IndexMut::index_mut(self2, ops::RangeFrom { start: mid } ))\n+            (from_raw_parts_mut(ptr, mid),\n+             from_raw_parts_mut(ptr.offset(mid as isize), len - mid))\n         }\n     }\n "}]}