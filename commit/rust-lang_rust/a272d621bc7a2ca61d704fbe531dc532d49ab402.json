{"sha": "a272d621bc7a2ca61d704fbe531dc532d49ab402", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyNzJkNjIxYmM3YTJjYTYxZDcwNGZiZTUzMWRjNTMyZDQ5YWI0MDI=", "commit": {"author": {"name": "Dion Dokter", "email": "diondokter@gmail.com", "date": "2020-12-18T16:32:26Z"}, "committer": {"name": "Dion Dokter", "email": "diondokter@gmail.com", "date": "2020-12-21T11:57:08Z"}, "message": "Implemented a compiler diagnostic for move async mistake\n\nRan the tidy check\n\nFollowing the diagnostic guide better\n\nDiagnostic generation is now relegated to its own function in the diagnostics module.\nAdded tests\n\nFixed the ui test", "tree": {"sha": "686c4f95044dd471371357263fba475b1d408c9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/686c4f95044dd471371357263fba475b1d408c9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a272d621bc7a2ca61d704fbe531dc532d49ab402", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a272d621bc7a2ca61d704fbe531dc532d49ab402", "html_url": "https://github.com/rust-lang/rust/commit/a272d621bc7a2ca61d704fbe531dc532d49ab402", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a272d621bc7a2ca61d704fbe531dc532d49ab402/comments", "author": {"login": "diondokter", "id": 8545127, "node_id": "MDQ6VXNlcjg1NDUxMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/8545127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diondokter", "html_url": "https://github.com/diondokter", "followers_url": "https://api.github.com/users/diondokter/followers", "following_url": "https://api.github.com/users/diondokter/following{/other_user}", "gists_url": "https://api.github.com/users/diondokter/gists{/gist_id}", "starred_url": "https://api.github.com/users/diondokter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diondokter/subscriptions", "organizations_url": "https://api.github.com/users/diondokter/orgs", "repos_url": "https://api.github.com/users/diondokter/repos", "events_url": "https://api.github.com/users/diondokter/events{/privacy}", "received_events_url": "https://api.github.com/users/diondokter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "diondokter", "id": 8545127, "node_id": "MDQ6VXNlcjg1NDUxMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/8545127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diondokter", "html_url": "https://github.com/diondokter", "followers_url": "https://api.github.com/users/diondokter/followers", "following_url": "https://api.github.com/users/diondokter/following{/other_user}", "gists_url": "https://api.github.com/users/diondokter/gists{/gist_id}", "starred_url": "https://api.github.com/users/diondokter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diondokter/subscriptions", "organizations_url": "https://api.github.com/users/diondokter/orgs", "repos_url": "https://api.github.com/users/diondokter/repos", "events_url": "https://api.github.com/users/diondokter/events{/privacy}", "received_events_url": "https://api.github.com/users/diondokter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "caeb3335c052f286f6e7257ac0ff21e4f73fd8c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/caeb3335c052f286f6e7257ac0ff21e4f73fd8c5", "html_url": "https://github.com/rust-lang/rust/commit/caeb3335c052f286f6e7257ac0ff21e4f73fd8c5"}], "stats": {"total": 65, "additions": 61, "deletions": 4}, "files": [{"sha": "98c7b9a63a55f60d8f54c0933e0bebdebd04bde8", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a272d621bc7a2ca61d704fbe531dc532d49ab402/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a272d621bc7a2ca61d704fbe531dc532d49ab402/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=a272d621bc7a2ca61d704fbe531dc532d49ab402", "patch": "@@ -1912,4 +1912,22 @@ impl<'a> Parser<'a> {\n         *self = snapshot;\n         Err(err)\n     }\n+\n+    /// Get the diagnostics for the cases where `move async` is found.\n+    ///\n+    /// `move_async_span` starts at the 'm' of the move keyword and ends with the 'c' of the async keyword\n+    pub(super) fn incorrect_move_async_order_found(\n+        &self,\n+        move_async_span: Span,\n+    ) -> DiagnosticBuilder<'a> {\n+        let mut err =\n+            self.struct_span_err(move_async_span, \"the order of `move` and `async` is incorrect\");\n+        err.span_suggestion_verbose(\n+            move_async_span,\n+            \"try switching the order\",\n+            \"async move\".to_owned(),\n+            Applicability::MaybeIncorrect,\n+        );\n+        err\n+    }\n }"}, {"sha": "7d0d4f30137ac3e05c9f66f85ef3d2bec39f24bd", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a272d621bc7a2ca61d704fbe531dc532d49ab402/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a272d621bc7a2ca61d704fbe531dc532d49ab402/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=a272d621bc7a2ca61d704fbe531dc532d49ab402", "patch": "@@ -1603,7 +1603,7 @@ impl<'a> Parser<'a> {\n             self.sess.gated_spans.gate(sym::async_closure, span);\n         }\n \n-        let capture_clause = self.parse_capture_clause();\n+        let capture_clause = self.parse_capture_clause()?;\n         let decl = self.parse_fn_block_decl()?;\n         let decl_hi = self.prev_token.span;\n         let body = match decl.output {\n@@ -1626,8 +1626,18 @@ impl<'a> Parser<'a> {\n     }\n \n     /// Parses an optional `move` prefix to a closure-like construct.\n-    fn parse_capture_clause(&mut self) -> CaptureBy {\n-        if self.eat_keyword(kw::Move) { CaptureBy::Value } else { CaptureBy::Ref }\n+    fn parse_capture_clause(&mut self) -> PResult<'a, CaptureBy> {\n+        if self.eat_keyword(kw::Move) {\n+            // Check for `move async` and recover\n+            if self.check_keyword(kw::Async) {\n+                let move_async_span = self.token.span.with_lo(self.prev_token.span.data().lo);\n+                Err(self.incorrect_move_async_order_found(move_async_span))\n+            } else {\n+                Ok(CaptureBy::Value)\n+            }\n+        } else {\n+            Ok(CaptureBy::Ref)\n+        }\n     }\n \n     /// Parses the `|arg, arg|` header of a closure.\n@@ -2018,7 +2028,7 @@ impl<'a> Parser<'a> {\n     fn parse_async_block(&mut self, mut attrs: AttrVec) -> PResult<'a, P<Expr>> {\n         let lo = self.token.span;\n         self.expect_keyword(kw::Async)?;\n-        let capture_clause = self.parse_capture_clause();\n+        let capture_clause = self.parse_capture_clause()?;\n         let (iattrs, body) = self.parse_inner_attrs_and_block()?;\n         attrs.extend(iattrs);\n         let kind = ExprKind::Async(capture_clause, DUMMY_NODE_ID, body);"}, {"sha": "055800d23b6c6ee39c287c24f9392dfc20e8ae61", "filename": "src/test/ui/parser/incorrect-move-async-order-issue-79694.fixed", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a272d621bc7a2ca61d704fbe531dc532d49ab402/src%2Ftest%2Fui%2Fparser%2Fincorrect-move-async-order-issue-79694.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/a272d621bc7a2ca61d704fbe531dc532d49ab402/src%2Ftest%2Fui%2Fparser%2Fincorrect-move-async-order-issue-79694.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fincorrect-move-async-order-issue-79694.fixed?ref=a272d621bc7a2ca61d704fbe531dc532d49ab402", "patch": "@@ -0,0 +1,8 @@\n+// run-rustfix\n+// edition:2018\n+\n+// Regression test for issue 79694\n+\n+fn main() {\n+    let _ = async move { }; //~ ERROR 7:13: 7:23: the order of `move` and `async` is incorrect\n+}"}, {"sha": "e8be16516d6d3dfd50245899d724ddf41474e454", "filename": "src/test/ui/parser/incorrect-move-async-order-issue-79694.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a272d621bc7a2ca61d704fbe531dc532d49ab402/src%2Ftest%2Fui%2Fparser%2Fincorrect-move-async-order-issue-79694.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a272d621bc7a2ca61d704fbe531dc532d49ab402/src%2Ftest%2Fui%2Fparser%2Fincorrect-move-async-order-issue-79694.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fincorrect-move-async-order-issue-79694.rs?ref=a272d621bc7a2ca61d704fbe531dc532d49ab402", "patch": "@@ -0,0 +1,8 @@\n+// run-rustfix\n+// edition:2018\n+\n+// Regression test for issue 79694\n+\n+fn main() {\n+    let _ = move async { }; //~ ERROR 7:13: 7:23: the order of `move` and `async` is incorrect\n+}"}, {"sha": "2add9fb33c70eafe9246d6c85f799bab8b8748e2", "filename": "src/test/ui/parser/incorrect-move-async-order-issue-79694.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a272d621bc7a2ca61d704fbe531dc532d49ab402/src%2Ftest%2Fui%2Fparser%2Fincorrect-move-async-order-issue-79694.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a272d621bc7a2ca61d704fbe531dc532d49ab402/src%2Ftest%2Fui%2Fparser%2Fincorrect-move-async-order-issue-79694.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fincorrect-move-async-order-issue-79694.stderr?ref=a272d621bc7a2ca61d704fbe531dc532d49ab402", "patch": "@@ -0,0 +1,13 @@\n+error: the order of `move` and `async` is incorrect\n+  --> $DIR/incorrect-move-async-order-issue-79694.rs:7:13\n+   |\n+LL |     let _ = move async { };\n+   |             ^^^^^^^^^^\n+   |\n+help: try switching the order\n+   |\n+LL |     let _ = async move { };\n+   |             ^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}