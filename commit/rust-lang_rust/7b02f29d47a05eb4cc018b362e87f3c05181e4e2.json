{"sha": "7b02f29d47a05eb4cc018b362e87f3c05181e4e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiMDJmMjlkNDdhMDVlYjRjYzAxOGIzNjJlODdmM2MwNTE4MWU0ZTI=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-05-31T22:06:45Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-01T01:38:42Z"}, "message": "Switch lint over to using a smallintmap.", "tree": {"sha": "0e19ffff3bc192e4d5cac1a0c0a8de1edce6f14f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e19ffff3bc192e4d5cac1a0c0a8de1edce6f14f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b02f29d47a05eb4cc018b362e87f3c05181e4e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b02f29d47a05eb4cc018b362e87f3c05181e4e2", "html_url": "https://github.com/rust-lang/rust/commit/7b02f29d47a05eb4cc018b362e87f3c05181e4e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b02f29d47a05eb4cc018b362e87f3c05181e4e2/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3dfb1747939cb5b97dda29842772cfbe52c7b224", "url": "https://api.github.com/repos/rust-lang/rust/commits/3dfb1747939cb5b97dda29842772cfbe52c7b224", "html_url": "https://github.com/rust-lang/rust/commit/3dfb1747939cb5b97dda29842772cfbe52c7b224"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "fd98dd2e18acdde62ff3ef4ce54b6b867f66186d", "filename": "src/rustc/middle/lint.rs", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/7b02f29d47a05eb4cc018b362e87f3c05181e4e2/src%2Frustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b02f29d47a05eb4cc018b362e87f3c05181e4e2/src%2Frustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Flint.rs?ref=7b02f29d47a05eb4cc018b362e87f3c05181e4e2", "patch": "@@ -4,6 +4,7 @@ import syntax::{ast, visit};\n import syntax::attr;\n import syntax::codemap::span;\n import std::map::{map,hashmap,int_hash,hash_from_strs};\n+import std::smallintmap::{map,smallintmap};\n import io::writer_util;\n import syntax::print::pprust::expr_to_str;\n \n@@ -29,6 +30,18 @@ enum lint {\n     old_vecs,\n }\n \n+// This is pretty unfortunate. We really want some sort of \"deriving Enum\"\n+// type of thing.\n+fn int_to_lint(i: int) -> lint {\n+    alt check i {\n+      0 { ctypes }\n+      1 { unused_imports }\n+      2 { while_true }\n+      3 { path_statement }\n+      4 { old_vecs }\n+    }\n+}\n+\n enum level {\n     ignore, warn, error\n }\n@@ -75,22 +88,22 @@ fn get_lint_dict() -> lint_dict {\n }\n \n type ctxt = @{dict: lint_dict,\n-              curr: hashmap<lint, level>,\n+              curr: smallintmap<level>,\n               tcx: ty::ctxt};\n \n impl methods for ctxt {\n     fn get_level(lint: lint) -> level {\n-        alt self.curr.find(lint) {\n+        alt self.curr.find(lint as uint) {\n           some(c) { c }\n           none { ignore }\n         }\n     }\n \n     fn set_level(lint: lint, level: level) {\n         if level == ignore {\n-            self.curr.remove(lint);\n+            self.curr.remove(lint as uint);\n         } else {\n-            self.curr.insert(lint, level);\n+            self.curr.insert(lint as uint, level);\n         }\n     }\n \n@@ -186,7 +199,7 @@ fn time(do_it: bool, what: str, thunk: fn()) {\n fn check_item(cx: ctxt, i: @ast::item) {\n     cx.with_warn_attrs(i.attrs) {|cx|\n         for cx.curr.each {|lint, level|\n-            alt lint {\n+            alt int_to_lint(lint as int) {\n               ctypes { check_item_ctypes(cx, level, i); }\n               unused_imports { check_item_unused_imports(cx, level, i); }\n               while_true { check_item_while_true(cx, level, i); }\n@@ -338,7 +351,7 @@ fn check_crate(tcx: ty::ctxt, crate: @ast::crate,\n     fn eq_lint(&&a: lint, &&b: lint) -> bool { a == b }\n \n     let cx = @{dict: get_lint_dict(),\n-               curr: hashmap(hash_lint, eq_lint),\n+               curr: std::smallintmap::mk(),\n                tcx: tcx};\n \n     // Install defaults."}]}