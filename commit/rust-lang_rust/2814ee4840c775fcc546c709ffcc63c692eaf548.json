{"sha": "2814ee4840c775fcc546c709ffcc63c692eaf548", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4MTRlZTQ4NDBjNzc1ZmNjNTQ2YzcwOWZmY2M2M2M2OTJlYWY1NDg=", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2020-12-19T16:12:36Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2020-12-19T16:28:16Z"}, "message": "Adapted the website search for better matching\n\n* Formatting", "tree": {"sha": "ffe06ba0b6c304606188272ed313cdc76f0c3f98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ffe06ba0b6c304606188272ed313cdc76f0c3f98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2814ee4840c775fcc546c709ffcc63c692eaf548", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2814ee4840c775fcc546c709ffcc63c692eaf548", "html_url": "https://github.com/rust-lang/rust/commit/2814ee4840c775fcc546c709ffcc63c692eaf548", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2814ee4840c775fcc546c709ffcc63c692eaf548/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73feb31bc3d6b71e97d8ba63f3c52f975c2c93e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/73feb31bc3d6b71e97d8ba63f3c52f975c2c93e8", "html_url": "https://github.com/rust-lang/rust/commit/73feb31bc3d6b71e97d8ba63f3c52f975c2c93e8"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "428708136cb650df91b01ba72d1553ce68cf6572", "filename": "util/gh-pages/index.html", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/2814ee4840c775fcc546c709ffcc63c692eaf548/util%2Fgh-pages%2Findex.html", "raw_url": "https://github.com/rust-lang/rust/raw/2814ee4840c775fcc546c709ffcc63c692eaf548/util%2Fgh-pages%2Findex.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fgh-pages%2Findex.html?ref=2814ee4840c775fcc546c709ffcc63c692eaf548", "patch": "@@ -89,7 +89,7 @@ <h1>ALL the Clippy Lints</h1>\n             </div>\n \n             <article class=\"panel panel-default\" id=\"{{lint.id}}\"\n-                ng-repeat=\"lint in data | filter:byLevels | filter:byGroups | filter:search | orderBy:'id' track by lint.id\" on-finish-render=\"ngRepeatFinished\">\n+                ng-repeat=\"lint in data | filter:byLevels | filter:byGroups | filter:bySearch | orderBy:'id' track by lint.id\">\n                 <header class=\"panel-heading\" ng-click=\"open[lint.id] = !open[lint.id]\">\n                     <h2 class=\"panel-title\">\n                         <div class=\"panel-title-name\">\n@@ -215,6 +215,46 @@ <h4 class=\"list-group-item-heading\">\n                 return $scope.groups[lint.group];\n             };\n \n+            $scope.bySearch = function (lint, index, array) {\n+                let search_str = $scope.search;\n+                // It can be `null` I haven't missed this value \n+                if (search_str == null || search_str.length == 0) {\n+                    return true;\n+                }\n+                search_str = search_str.toLowerCase();\n+\n+                // Search by id\n+                let id_search = search_str.trim().replace(/(\\-| )/g, \"_\");\n+                if (lint.id.includes(id_search)) {\n+                    return true;\n+                }\n+\n+                // Search the description\n+                // The use of `for`-loops instead of `foreach` enables us to return early \n+                let search_lint = (lint, therm) => {\n+                    for (const field in lint.docs) {\n+                        // Continue if it's not a property\n+                        if (!lint.docs.hasOwnProperty(field)) {\n+                            continue;\n+                        }\n+\n+                        // Return if not found\n+                        if (lint.docs[field].toLowerCase().includes(therm)) {\n+                            return true;\n+                        }\n+                    }\n+                    return false;\n+                };\n+                let therms = search_str.split(\" \");\n+                for (index = 0; index < therms.length; index++) {\n+                    if (!search_lint(lint, therms[index])) {\n+                        return false;\n+                    }\n+                }\n+\n+                return true;\n+            }\n+\n             // Get data\n             $scope.open = {};\n             $scope.loading = true;"}]}