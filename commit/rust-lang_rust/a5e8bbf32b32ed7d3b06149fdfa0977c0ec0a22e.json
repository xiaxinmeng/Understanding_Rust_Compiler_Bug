{"sha": "a5e8bbf32b32ed7d3b06149fdfa0977c0ec0a22e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1ZThiYmYzMmIzMmVkN2QzYjA2MTQ5ZmRmYTA5NzdjMGVjMGEyMmU=", "commit": {"author": {"name": "Charlie Fan", "email": "changchu@synopsys.com", "date": "2017-02-10T08:38:59Z"}, "committer": {"name": "f001", "email": "changchun.fan@qq.com", "date": "2017-02-11T05:08:13Z"}, "message": "Add `swap` method for `Cell`", "tree": {"sha": "5098de32e56806d6d7407a59bf4bb5c8810a5eb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5098de32e56806d6d7407a59bf4bb5c8810a5eb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5e8bbf32b32ed7d3b06149fdfa0977c0ec0a22e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5e8bbf32b32ed7d3b06149fdfa0977c0ec0a22e", "html_url": "https://github.com/rust-lang/rust/commit/a5e8bbf32b32ed7d3b06149fdfa0977c0ec0a22e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5e8bbf32b32ed7d3b06149fdfa0977c0ec0a22e/comments", "author": null, "committer": {"login": "F001", "id": 3314340, "node_id": "MDQ6VXNlcjMzMTQzNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/3314340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/F001", "html_url": "https://github.com/F001", "followers_url": "https://api.github.com/users/F001/followers", "following_url": "https://api.github.com/users/F001/following{/other_user}", "gists_url": "https://api.github.com/users/F001/gists{/gist_id}", "starred_url": "https://api.github.com/users/F001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/F001/subscriptions", "organizations_url": "https://api.github.com/users/F001/orgs", "repos_url": "https://api.github.com/users/F001/repos", "events_url": "https://api.github.com/users/F001/events{/privacy}", "received_events_url": "https://api.github.com/users/F001/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24a70eb598a76edb0941f628a87946b40f2a1c83", "url": "https://api.github.com/repos/rust-lang/rust/commits/24a70eb598a76edb0941f628a87946b40f2a1c83", "html_url": "https://github.com/rust-lang/rust/commit/24a70eb598a76edb0941f628a87946b40f2a1c83"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "d130b0279a20d103756584fb7a35b2eb656c05e3", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/a5e8bbf32b32ed7d3b06149fdfa0977c0ec0a22e/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5e8bbf32b32ed7d3b06149fdfa0977c0ec0a22e/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=a5e8bbf32b32ed7d3b06149fdfa0977c0ec0a22e", "patch": "@@ -186,6 +186,7 @@ use fmt::{self, Debug, Display};\n use marker::Unsize;\n use mem;\n use ops::{Deref, DerefMut, CoerceUnsized};\n+use ptr;\n \n /// A mutable memory location.\n ///\n@@ -387,6 +388,32 @@ impl<T> Cell<T> {\n         drop(old);\n     }\n \n+    /// Swaps the values of two Cells.\n+    /// Difference with `std::mem::swap` is that this function doesn't require `&mut` reference.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(move_cell)]\n+    /// use std::cell::Cell;\n+    ///\n+    /// let c1 = Cell::new(5i32);\n+    /// let c2 = Cell::new(10i32);\n+    /// c1.swap(&c2);\n+    /// assert_eq!(10, c1.get());\n+    /// assert_eq!(5, c2.get());\n+    /// ```\n+    #[inline]\n+    #[unstable(feature = \"move_cell\", issue = \"39264\")]\n+    pub fn swap(&self, other: &Self) {\n+        if ptr::eq(self, other) {\n+            return;\n+        }\n+        unsafe {\n+            ptr::swap(self.value.get(), other.value.get());\n+        }\n+    }\n+\n     /// Replaces the contained value.\n     ///\n     /// # Examples"}]}