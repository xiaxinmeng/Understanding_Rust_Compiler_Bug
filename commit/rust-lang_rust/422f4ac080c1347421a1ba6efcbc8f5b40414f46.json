{"sha": "422f4ac080c1347421a1ba6efcbc8f5b40414f46", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyMmY0YWMwODBjMTM0NzQyMWExYmE2ZWZjYmM4ZjViNDA0MTRmNDY=", "commit": {"author": {"name": "Bernardo", "email": "berublan@gmail.com", "date": "2019-04-19T16:28:14Z"}, "committer": {"name": "Bernardo", "email": "berublan@gmail.com", "date": "2019-04-19T18:54:36Z"}, "message": "start cargo watch if not started interactively", "tree": {"sha": "01c72b5c48746b5dfb9b1155375cb86c631f7290", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01c72b5c48746b5dfb9b1155375cb86c631f7290"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/422f4ac080c1347421a1ba6efcbc8f5b40414f46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/422f4ac080c1347421a1ba6efcbc8f5b40414f46", "html_url": "https://github.com/rust-lang/rust/commit/422f4ac080c1347421a1ba6efcbc8f5b40414f46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/422f4ac080c1347421a1ba6efcbc8f5b40414f46/comments", "author": {"login": "vemoo", "id": 4866051, "node_id": "MDQ6VXNlcjQ4NjYwNTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4866051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vemoo", "html_url": "https://github.com/vemoo", "followers_url": "https://api.github.com/users/vemoo/followers", "following_url": "https://api.github.com/users/vemoo/following{/other_user}", "gists_url": "https://api.github.com/users/vemoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vemoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vemoo/subscriptions", "organizations_url": "https://api.github.com/users/vemoo/orgs", "repos_url": "https://api.github.com/users/vemoo/repos", "events_url": "https://api.github.com/users/vemoo/events{/privacy}", "received_events_url": "https://api.github.com/users/vemoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vemoo", "id": 4866051, "node_id": "MDQ6VXNlcjQ4NjYwNTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4866051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vemoo", "html_url": "https://github.com/vemoo", "followers_url": "https://api.github.com/users/vemoo/followers", "following_url": "https://api.github.com/users/vemoo/following{/other_user}", "gists_url": "https://api.github.com/users/vemoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vemoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vemoo/subscriptions", "organizations_url": "https://api.github.com/users/vemoo/orgs", "repos_url": "https://api.github.com/users/vemoo/repos", "events_url": "https://api.github.com/users/vemoo/events{/privacy}", "received_events_url": "https://api.github.com/users/vemoo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d3adabbef9290097fd890218d5d8ea6c1d8c002", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d3adabbef9290097fd890218d5d8ea6c1d8c002", "html_url": "https://github.com/rust-lang/rust/commit/3d3adabbef9290097fd890218d5d8ea6c1d8c002"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "83ceb19f73fa3cbd13086ca2ad88c46b0bc4fc61", "filename": "editors/code/package.json", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/422f4ac080c1347421a1ba6efcbc8f5b40414f46/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/422f4ac080c1347421a1ba6efcbc8f5b40414f46/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=422f4ac080c1347421a1ba6efcbc8f5b40414f46", "patch": "@@ -275,4 +275,4 @@\n             }\n         ]\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "26372c1e8b0817b5e76af10a34d34edace5078be", "filename": "editors/code/src/commands/runnables.ts", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/422f4ac080c1347421a1ba6efcbc8f5b40414f46/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts", "raw_url": "https://github.com/rust-lang/rust/raw/422f4ac080c1347421a1ba6efcbc8f5b40414f46/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts?ref=422f4ac080c1347421a1ba6efcbc8f5b40414f46", "patch": "@@ -153,6 +153,12 @@ export async function interactivelyStartCargoWatch(\n         }\n     }\n \n+    return startCargoWatch(context);\n+}\n+\n+export async function startCargoWatch(\n+    context: vscode.ExtensionContext\n+): Promise<CargoWatchProvider | undefined> {\n     const execPromise = util.promisify(child_process.exec);\n \n     const { stderr } = await execPromise('cargo watch --version').catch(e => e);\n@@ -197,5 +203,9 @@ export async function interactivelyStartCargoWatch(\n         }\n     }\n \n-    return registerCargoWatchProvider(context.subscriptions);\n+    const provider = await registerCargoWatchProvider(context.subscriptions);\n+    if (provider) {\n+        provider.start();\n+    }\n+    return provider;\n }"}, {"sha": "48dd2a614669c2cab35bd09380563270dad1691d", "filename": "editors/code/src/extension.ts", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/422f4ac080c1347421a1ba6efcbc8f5b40414f46/editors%2Fcode%2Fsrc%2Fextension.ts", "raw_url": "https://github.com/rust-lang/rust/raw/422f4ac080c1347421a1ba6efcbc8f5b40414f46/editors%2Fcode%2Fsrc%2Fextension.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fextension.ts?ref=422f4ac080c1347421a1ba6efcbc8f5b40414f46", "patch": "@@ -3,7 +3,10 @@ import * as lc from 'vscode-languageclient';\n \n import * as commands from './commands';\n import { CargoWatchProvider } from './commands/cargo_watch';\n-import { interactivelyStartCargoWatch } from './commands/runnables';\n+import {\n+    interactivelyStartCargoWatch,\n+    startCargoWatch\n+} from './commands/runnables';\n import { SyntaxTreeContentProvider } from './commands/syntaxTree';\n import * as events from './events';\n import * as notifications from './notifications';\n@@ -134,6 +137,10 @@ export function activate(context: vscode.ExtensionContext) {\n     registerCommand('rust-analyzer.startCargoWatch', () => {\n         if (provider) {\n             provider.start();\n+        } else {\n+            startCargoWatch(context).then(p => {\n+                provider = p;\n+            });\n         }\n     });\n     registerCommand('rust-analyzer.stopCargoWatch', () => {"}]}