{"sha": "e218da425160d4babaa46d7da1720a11ac6c02fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyMThkYTQyNTE2MGQ0YmFiYWE0NmQ3ZGExNzIwYTExYWM2YzAyZmE=", "commit": {"author": {"name": "Adam Perry", "email": "adam.n.perry@gmail.com", "date": "2019-12-08T12:51:55Z"}, "committer": {"name": "Adam Perry", "email": "adam.n.perry@gmail.com", "date": "2020-01-04T18:02:17Z"}, "message": "Test cleanups to match #[track_caller] in panic!.\n\n* Removes unnecessary feature flag from track_caller test.\n* Tests of panic internals no longer need to explicitly construct Location.\n* Add #![warn(const_err)] to retain-never-const per @oli-obk.\n* Add track_caller test with diverging function.", "tree": {"sha": "e1765b57669b5abe1f3ac51cd093b50335f0c410", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1765b57669b5abe1f3ac51cd093b50335f0c410"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e218da425160d4babaa46d7da1720a11ac6c02fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e218da425160d4babaa46d7da1720a11ac6c02fa", "html_url": "https://github.com/rust-lang/rust/commit/e218da425160d4babaa46d7da1720a11ac6c02fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e218da425160d4babaa46d7da1720a11ac6c02fa/comments", "author": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eaccda009f5891c67e554b31cfad4a52738f9b91", "url": "https://api.github.com/repos/rust-lang/rust/commits/eaccda009f5891c67e554b31cfad4a52738f9b91", "html_url": "https://github.com/rust-lang/rust/commit/eaccda009f5891c67e554b31cfad4a52738f9b91"}], "stats": {"total": 34, "additions": 26, "deletions": 8}, "files": [{"sha": "8e9bae8569f196e04cabf92d7c361352e0302193", "filename": "src/test/mir-opt/retain-never-const.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e218da425160d4babaa46d7da1720a11ac6c02fa/src%2Ftest%2Fmir-opt%2Fretain-never-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e218da425160d4babaa46d7da1720a11ac6c02fa/src%2Ftest%2Fmir-opt%2Fretain-never-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fretain-never-const.rs?ref=e218da425160d4babaa46d7da1720a11ac6c02fa", "patch": "@@ -6,6 +6,7 @@\n \n #![feature(const_panic)]\n #![feature(never_type)]\n+#![warn(const_err)]\n \n struct PrintName<T>(T);\n "}, {"sha": "74c6e501c9136289665bdecc706e88ddec372bf0", "filename": "src/test/ui/extern/issue-64655-allow-unwind-when-calling-panic-directly.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e218da425160d4babaa46d7da1720a11ac6c02fa/src%2Ftest%2Fui%2Fextern%2Fissue-64655-allow-unwind-when-calling-panic-directly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e218da425160d4babaa46d7da1720a11ac6c02fa/src%2Ftest%2Fui%2Fextern%2Fissue-64655-allow-unwind-when-calling-panic-directly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fissue-64655-allow-unwind-when-calling-panic-directly.rs?ref=e218da425160d4babaa46d7da1720a11ac6c02fa", "patch": "@@ -22,7 +22,7 @@\n //[thin]compile-flags: -C lto=thin\n //[fat]compile-flags: -C lto=fat\n \n-#![feature(core_panic, panic_internals)]\n+#![feature(core_panic)]\n \n // (For some reason, reproducing the LTO issue requires pulling in std\n // explicitly this way.)\n@@ -50,9 +50,7 @@ fn main() {\n         }\n \n         let _guard = Droppable;\n-        let s = \"issue-64655-allow-unwind-when-calling-panic-directly.rs\";\n-        let location = core::panic::Location::internal_constructor(s, 17, 4);\n-        core::panicking::panic(\"???\", &location);\n+        core::panicking::panic(\"???\");\n     });\n \n     let wait = handle.join();"}, {"sha": "090e912c1d0ba9fa2ba5342dd163cf7c02e7a87c", "filename": "src/test/ui/rfc-2091-track-caller/caller-location-intrinsic.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e218da425160d4babaa46d7da1720a11ac6c02fa/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fcaller-location-intrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e218da425160d4babaa46d7da1720a11ac6c02fa/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fcaller-location-intrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fcaller-location-intrinsic.rs?ref=e218da425160d4babaa46d7da1720a11ac6c02fa", "patch": "@@ -4,16 +4,16 @@\n \n #[inline(never)]\n #[track_caller]\n-fn defeat_const_prop() -> &'static core::panic::Location<'static> {\n+fn codegen_caller_loc() -> &'static core::panic::Location<'static> {\n     core::panic::Location::caller()\n }\n \n macro_rules! caller_location_from_macro {\n-    () => (defeat_const_prop());\n+    () => (codegen_caller_loc());\n }\n \n fn main() {\n-    let loc = defeat_const_prop();\n+    let loc = codegen_caller_loc();\n     assert_eq!(loc.file(), file!());\n     assert_eq!(loc.line(), 16);\n     assert_eq!(loc.column(), 15);"}, {"sha": "1fb75ef35ffc1b6208e2b7577c8eb6577ab56240", "filename": "src/test/ui/rfc-2091-track-caller/diverging-caller-location.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e218da425160d4babaa46d7da1720a11ac6c02fa/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fdiverging-caller-location.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e218da425160d4babaa46d7da1720a11ac6c02fa/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fdiverging-caller-location.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fdiverging-caller-location.rs?ref=e218da425160d4babaa46d7da1720a11ac6c02fa", "patch": "@@ -0,0 +1,19 @@\n+// run-fail\n+\n+//! This test ensures that `#[track_caller]` can be applied directly to diverging functions, as\n+//! the tracking issue says: https://github.com/rust-lang/rust/issues/47809#issue-292138490.\n+//! Because the annotated function must diverge and a panic keeps that faster than an infinite loop,\n+//! we don't inspect the location returned -- it would be difficult to distinguish between the\n+//! explicit panic and a failed assertion. That it compiles and runs is enough for this one.\n+\n+#![feature(track_caller)]\n+\n+#[track_caller]\n+fn doesnt_return() -> ! {\n+    let _location = core::panic::Location::caller();\n+    panic!(\"huzzah\");\n+}\n+\n+fn main() {\n+    doesnt_return();\n+}"}, {"sha": "76a380ed3e30d21399fd7cf4eb05e23eb7f4a9e3", "filename": "src/test/ui/rfc-2091-track-caller/track-caller-attribute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e218da425160d4babaa46d7da1720a11ac6c02fa/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftrack-caller-attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e218da425160d4babaa46d7da1720a11ac6c02fa/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftrack-caller-attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftrack-caller-attribute.rs?ref=e218da425160d4babaa46d7da1720a11ac6c02fa", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n \n-#![feature(const_fn, track_caller)]\n+#![feature(track_caller)]\n \n use std::panic::Location;\n "}]}