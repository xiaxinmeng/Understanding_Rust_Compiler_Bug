{"sha": "73658c40bb02762d9e68690bc5ebf7695f9d34b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczNjU4YzQwYmIwMjc2MmQ5ZTY4NjkwYmM1ZWJmNzY5NWY5ZDM0Yjc=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-04-07T08:44:19Z"}, "committer": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2018-04-13T14:04:57Z"}, "message": "Remove unsafe code", "tree": {"sha": "6df4695ccc25951277830105c2bcfc417c66a3fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6df4695ccc25951277830105c2bcfc417c66a3fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73658c40bb02762d9e68690bc5ebf7695f9d34b7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJgBAABCgBKFiEEvpMjxK4/cnPNfesJHVy0/Fl8MAQFAlrQuRIsHGdpdC1uby1y\nZXBseS05ODc5MTY1NzE2NDc5NDEzMTMxQG9saS1vYmsuZGUACgkQHVy0/Fl8MAQW\ndhAAq7WjyFUVCs0p9QdMXIatQSd5cwDBxhv3ZN2gYBy4HBSqne9u5Q2MARyItmho\nxCPPOVc/xn9zCp8v2mt7V7Dl1UlBlSzc1DzKLbRinR2KLfH+/+dXfdDIQh1g8yja\nbi7V/ZDOFfGZxB84pYfK04YnRQMlcmXJqRj3rnf/8fkNdJ01hnO8Qy+rNryGjvnh\naOgt8Yfn/Krg6bW7mQZcytOL+sREzWV+UAiicsrXRVjKFHV8QsoqEVfUm4DPiP6H\nxMME2J2LB1RIyKytpXg2lMs7F8lwTjrS2aX8gnCSyHGVq0lx2YfbCZEHYVAIsdzk\nY9i057gUWhbpM51vmwHgrqVti+aEXanDQ1oQ/Tv+bCY7dz5m8I7lOtPQwWy7FyhA\nCQg+KRBDNh1AViONxoKk6si9jeRPGze3oSxtxkYLhyFaL45wkMIROFnd24GhuS/Z\nKmDTjwfJo/5ZHSu1+F4p0kuvnfb20Y7wHEgWR0LsnRMzE3AcetBIxZ+U39slG5OD\nnSs3tbDMVdERdNTVspxP2JGSlLBCjYUnaUspna51ZAezTavG3l5tVIe9gTy1uGeG\n1oWO1voxkoE/YkLnVyGrmzayiSGHY619S5Cd+BWOFOEpIN8LDhuhG4rna7qB7MHu\nQewmSw0MY952GWQJCM+VZOG36CMyyEeTauyNjlcgnmiMAuM=\n=VL1V\n-----END PGP SIGNATURE-----", "payload": "tree 6df4695ccc25951277830105c2bcfc417c66a3fb\nparent e09a996b2a7aa4d0bc6f93b91dce21037d67fe6d\nauthor bjorn3 <bjorn3@users.noreply.github.com> 1523090659 +0200\ncommitter Oliver Schneider <git-no-reply-9879165716479413131@oli-obk.de> 1523628297 +0200\n\nRemove unsafe code\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73658c40bb02762d9e68690bc5ebf7695f9d34b7", "html_url": "https://github.com/rust-lang/rust/commit/73658c40bb02762d9e68690bc5ebf7695f9d34b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73658c40bb02762d9e68690bc5ebf7695f9d34b7/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e09a996b2a7aa4d0bc6f93b91dce21037d67fe6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e09a996b2a7aa4d0bc6f93b91dce21037d67fe6d", "html_url": "https://github.com/rust-lang/rust/commit/e09a996b2a7aa4d0bc6f93b91dce21037d67fe6d"}], "stats": {"total": 7, "additions": 2, "deletions": 5}, "files": [{"sha": "cc564d1afe3f3b8ced955070b164b0cdb328879f", "filename": "miri/lib.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/73658c40bb02762d9e68690bc5ebf7695f9d34b7/miri%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73658c40bb02762d9e68690bc5ebf7695f9d34b7/miri%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Flib.rs?ref=73658c40bb02762d9e68690bc5ebf7695f9d34b7", "patch": "@@ -309,17 +309,14 @@ impl<'mir, 'tcx: 'mir> Machine<'mir, 'tcx> for Evaluator<'tcx> {\n         let call_stackframe = ecx.stack().len();\n         while ecx.step()? && ecx.stack().len() >= call_stackframe {\n             if ecx.stack().len() == call_stackframe {\n-                let frame = ecx.stack().last().unwrap();\n+                let frame = ecx.frame_mut();\n                 let bb = &frame.mir.basic_blocks()[frame.block];\n                 if bb.statements.len() == frame.stmt && !bb.is_cleanup {\n                     match bb.terminator().kind {\n                         ::rustc::mir::TerminatorKind::Return => {\n                             for (local, _local_decl) in mir.local_decls.iter_enumerated().skip(1) {\n                                 // Don't deallocate locals, because the return value might reference them\n-                                // ------------------------------------------------------------\n-                                // ||||||||||||| TODO: remove this horrible hack ||||||||||||||\n-                                // ------------------------------------------------------------\n-                                unsafe { &mut *(frame as *const Frame as *mut Frame) }.storage_dead(local);\n+                                frame.storage_dead(local);\n                             }\n                         }\n                         _ => {}"}]}