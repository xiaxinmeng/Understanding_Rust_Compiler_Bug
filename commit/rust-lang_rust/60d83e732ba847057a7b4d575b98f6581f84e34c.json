{"sha": "60d83e732ba847057a7b4d575b98f6581f84e34c", "node_id": "C_kwDOAAsO6NoAKDYwZDgzZTczMmJhODQ3MDU3YTdiNGQ1NzViOThmNjU4MWY4NGUzNGM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-08-04T20:25:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-04T20:25:05Z"}, "message": "Rollup merge of #100138 - GuillaumeGomez:rm-clean-impls, r=notriddle\n\nRemove more Clean trait implementations\n\nFollow-up of https://github.com/rust-lang/rust/pull/99638.\n\nr? `@notriddle`", "tree": {"sha": "624280ccd457db164f8755aa809ab64c2358b682", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/624280ccd457db164f8755aa809ab64c2358b682"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60d83e732ba847057a7b4d575b98f6581f84e34c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi7CshCRBK7hj4Ov3rIwAAoyEIAE2/lavAeG/zVj/b4lEyL2nS\n2XnrgtTzpS5d+8BKKh2iuo/tpQuHFi2s8seJB9XluqttkmtktAAQV4jfCcfVBeii\nYsYIIoo+fNXkr95RlROOHjs0iG66DxWu8KSDUvaPwpu7pU8mnl8QXHbQbIWvATLg\nCkA4P3BWY5hD8LVFvQIOfOXsVmraD2WIoChhz27Hf4CZKok0AmxSdtrc8NtNB54L\nFiNQ5RJXYCPfo/cHWst7op8B94jpkKisClVoLZwjtGIchl5bvTV+iSqiSN0tH7Lh\nDUK6Lm7dAmp8GnwUWoaDjnDt6E2N2YG6P7quO/m3cvwSyKsIQdLZad7X0Bt1j0A=\n=p6mQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 624280ccd457db164f8755aa809ab64c2358b682\nparent 01ccde5ec8059716a378db5f6e5c879159df3411\nparent 008693d23160dcbce4cf86116acbac00ba734947\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1659644705 +0200\ncommitter GitHub <noreply@github.com> 1659644705 +0200\n\nRollup merge of #100138 - GuillaumeGomez:rm-clean-impls, r=notriddle\n\nRemove more Clean trait implementations\n\nFollow-up of https://github.com/rust-lang/rust/pull/99638.\n\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60d83e732ba847057a7b4d575b98f6581f84e34c", "html_url": "https://github.com/rust-lang/rust/commit/60d83e732ba847057a7b4d575b98f6581f84e34c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60d83e732ba847057a7b4d575b98f6581f84e34c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01ccde5ec8059716a378db5f6e5c879159df3411", "url": "https://api.github.com/repos/rust-lang/rust/commits/01ccde5ec8059716a378db5f6e5c879159df3411", "html_url": "https://github.com/rust-lang/rust/commit/01ccde5ec8059716a378db5f6e5c879159df3411"}, {"sha": "008693d23160dcbce4cf86116acbac00ba734947", "url": "https://api.github.com/repos/rust-lang/rust/commits/008693d23160dcbce4cf86116acbac00ba734947", "html_url": "https://github.com/rust-lang/rust/commit/008693d23160dcbce4cf86116acbac00ba734947"}], "stats": {"total": 29, "additions": 11, "deletions": 18}, "files": [{"sha": "790727c918a1fd7eaaa2ff44ba2ccf27bae3e05d", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 11, "deletions": 18, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/60d83e732ba847057a7b4d575b98f6581f84e34c/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60d83e732ba847057a7b4d575b98f6581f84e34c/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=60d83e732ba847057a7b4d575b98f6581f84e34c", "patch": "@@ -956,7 +956,11 @@ fn clean_fn_decl_with_args<'tcx>(\n     decl: &hir::FnDecl<'tcx>,\n     args: Arguments,\n ) -> FnDecl {\n-    FnDecl { inputs: args, output: decl.output.clean(cx), c_variadic: decl.c_variadic }\n+    let output = match decl.output {\n+        hir::FnRetTy::Return(typ) => Return(clean_ty(typ, cx)),\n+        hir::FnRetTy::DefaultReturn(..) => DefaultReturn,\n+    };\n+    FnDecl { inputs: args, output, c_variadic: decl.c_variadic }\n }\n \n fn clean_fn_decl_from_did_and_sig<'tcx>(\n@@ -991,27 +995,16 @@ fn clean_fn_decl_from_did_and_sig<'tcx>(\n     }\n }\n \n-impl<'tcx> Clean<'tcx, FnRetTy> for hir::FnRetTy<'tcx> {\n-    fn clean(&self, cx: &mut DocContext<'tcx>) -> FnRetTy {\n-        match *self {\n-            Self::Return(typ) => Return(clean_ty(typ, cx)),\n-            Self::DefaultReturn(..) => DefaultReturn,\n-        }\n-    }\n-}\n-\n-impl<'tcx> Clean<'tcx, Path> for hir::TraitRef<'tcx> {\n-    fn clean(&self, cx: &mut DocContext<'tcx>) -> Path {\n-        let path = clean_path(self.path, cx);\n-        register_res(cx, path.res);\n-        path\n-    }\n+fn clean_trait_ref<'tcx>(trait_ref: &hir::TraitRef<'tcx>, cx: &mut DocContext<'tcx>) -> Path {\n+    let path = clean_path(trait_ref.path, cx);\n+    register_res(cx, path.res);\n+    path\n }\n \n impl<'tcx> Clean<'tcx, PolyTrait> for hir::PolyTraitRef<'tcx> {\n     fn clean(&self, cx: &mut DocContext<'tcx>) -> PolyTrait {\n         PolyTrait {\n-            trait_: self.trait_ref.clean(cx),\n+            trait_: clean_trait_ref(&self.trait_ref, cx),\n             generic_params: self\n                 .bound_generic_params\n                 .iter()\n@@ -2000,7 +1993,7 @@ fn clean_impl<'tcx>(\n ) -> Vec<Item> {\n     let tcx = cx.tcx;\n     let mut ret = Vec::new();\n-    let trait_ = impl_.of_trait.as_ref().map(|t| t.clean(cx));\n+    let trait_ = impl_.of_trait.as_ref().map(|t| clean_trait_ref(t, cx));\n     let items =\n         impl_.items.iter().map(|ii| tcx.hir().impl_item(ii.id).clean(cx)).collect::<Vec<_>>();\n     let def_id = tcx.hir().local_def_id(hir_id);"}]}