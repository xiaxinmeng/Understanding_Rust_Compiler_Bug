{"sha": "0119b44270243db7479ea946bb0cdd5522c351b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxMTliNDQyNzAyNDNkYjc0NzllYTk0NmJiMGNkZDU1MjJjMzUxYjY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-01-28T10:41:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-01-28T10:41:34Z"}, "message": "Auto merge of #47772 - arthurprs:iter-position-bounds-check, r=dtolnay\n\nUse the slice length to hint the optimizer about iter.position result\n\nUsing the len of the iterator doesn't give the same result.\nThat's also why we can't generalize it to all TrustedLen iterators.\n\nProblem demo: https://godbolt.org/g/MXg2ae\nFix demo: https://godbolt.org/g/P8q5aZ\n\nSecond attempt of #47333\nThird attempt of #45501\nFixes #45964", "tree": {"sha": "9fba28fff4620615ab62b95014a4f78646033842", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fba28fff4620615ab62b95014a4f78646033842"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0119b44270243db7479ea946bb0cdd5522c351b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0119b44270243db7479ea946bb0cdd5522c351b6", "html_url": "https://github.com/rust-lang/rust/commit/0119b44270243db7479ea946bb0cdd5522c351b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0119b44270243db7479ea946bb0cdd5522c351b6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7046a406232695b581579f8e2468601260ea2199", "url": "https://api.github.com/repos/rust-lang/rust/commits/7046a406232695b581579f8e2468601260ea2199", "html_url": "https://github.com/rust-lang/rust/commit/7046a406232695b581579f8e2468601260ea2199"}, {"sha": "4f7109a42482e266410b23fedc9643a6d76e5fa5", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f7109a42482e266410b23fedc9643a6d76e5fa5", "html_url": "https://github.com/rust-lang/rust/commit/4f7109a42482e266410b23fedc9643a6d76e5fa5"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "aacbbd5058e05c23ce194e4659be2f6b090d543d", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0119b44270243db7479ea946bb0cdd5522c351b6/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0119b44270243db7479ea946bb0cdd5522c351b6/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=0119b44270243db7479ea946bb0cdd5522c351b6", "patch": "@@ -1245,7 +1245,8 @@ macro_rules! iterator {\n                 P: FnMut(Self::Item) -> bool,\n             {\n                 // The addition might panic on overflow\n-                let n = self.len();\n+                // Use the len of the slice to hint optimizer to remove result index bounds check.\n+                let n = make_slice!(self.ptr, self.end).len();\n                 self.try_fold(0, move |i, x| {\n                     if predicate(x) { Err(i) }\n                     else { Ok(i + 1) }\n@@ -1263,7 +1264,8 @@ macro_rules! iterator {\n             {\n                 // No need for an overflow check here, because `ExactSizeIterator`\n                 // implies that the number of elements fits into a `usize`.\n-                let n = self.len();\n+                // Use the len of the slice to hint optimizer to remove result index bounds check.\n+                let n = make_slice!(self.ptr, self.end).len();\n                 self.try_rfold(n, move |i, x| {\n                     let i = i - 1;\n                     if predicate(x) { Err(i) }"}]}