{"sha": "c1092fb6d88efe51e42df3aae2a321cc669e12a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxMDkyZmI2ZDg4ZWZlNTFlNDJkZjNhYWUyYTMyMWNjNjY5ZTEyYTA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-29T00:37:24Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-29T08:25:06Z"}, "message": "stdlib: Add result module\n\nThis contains a result tag with ok(T) and error(U) variants. I expect\nto use it for error handling on functions that can recover from errors,\nlike in the io module.", "tree": {"sha": "dc2756a6338927b423ddff02ed74031cd4cd895d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc2756a6338927b423ddff02ed74031cd4cd895d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1092fb6d88efe51e42df3aae2a321cc669e12a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1092fb6d88efe51e42df3aae2a321cc669e12a0", "html_url": "https://github.com/rust-lang/rust/commit/c1092fb6d88efe51e42df3aae2a321cc669e12a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1092fb6d88efe51e42df3aae2a321cc669e12a0/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "802deac3233d91bcd6ba5a87c6a4de8b3e12425e", "url": "https://api.github.com/repos/rust-lang/rust/commits/802deac3233d91bcd6ba5a87c6a4de8b3e12425e", "html_url": "https://github.com/rust-lang/rust/commit/802deac3233d91bcd6ba5a87c6a4de8b3e12425e"}], "stats": {"total": 87, "additions": 87, "deletions": 0}, "files": [{"sha": "ba5ead5d4dbef4ff57e11820d93eeffb93d9c7e6", "filename": "src/lib/result.rs", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/c1092fb6d88efe51e42df3aae2a321cc669e12a0/src%2Flib%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1092fb6d88efe51e42df3aae2a321cc669e12a0/src%2Flib%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fresult.rs?ref=c1092fb6d88efe51e42df3aae2a321cc669e12a0", "patch": "@@ -0,0 +1,86 @@\n+/*\n+Module: result\n+\n+A type representing either success or failure\n+*/\n+\n+/* Section: Types */\n+\n+/*\n+Tag: t\n+\n+The result type\n+*/\n+tag t<T, U> {\n+    /*\n+    Variant: ok\n+\n+    Contains the result value\n+    */\n+    ok(T);\n+    /*\n+    Variant: error\n+\n+    Contains the error value\n+    */\n+    error(U);\n+}\n+\n+/* Section: Operations */\n+\n+/*\n+Function: get\n+\n+Get the value out of a successful result\n+\n+Failure:\n+\n+If the result is an error\n+*/\n+fn get<T, U>(res: t<T, U>) -> T {\n+    alt res {\n+      ok(t) { t }\n+      error(_) {\n+        fail \"get called on error result\";\n+      }\n+    }\n+}\n+\n+/*\n+Function: get\n+\n+Get the value out of an error result\n+\n+Failure:\n+\n+If the result is not an error\n+*/\n+fn get_error<T, U>(res: t<T, U>) -> U {\n+    alt res {\n+      error(u) { u }\n+      ok(_) {\n+        fail \"get_error called on ok result\";\n+      }\n+    }\n+}\n+\n+/*\n+Function: success\n+\n+Returns true if the result is <ok>\n+*/\n+fn success<T, U>(res: t<T, U>) -> bool {\n+    alt res {\n+      ok(_) { true }\n+      error(_) { false }\n+    }\n+}\n+\n+/*\n+Function: failure\n+\n+Returns true if the result is <error>\n+*/\n+fn failure<T, U>(res: t<T, U>) -> bool {\n+    !success(res)\n+}\n\\ No newline at end of file"}, {"sha": "fa9a74fc80875f1fe70a098ad42df047f89333af", "filename": "src/lib/std.rc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c1092fb6d88efe51e42df3aae2a321cc669e12a0/src%2Flib%2Fstd.rc", "raw_url": "https://github.com/rust-lang/rust/raw/c1092fb6d88efe51e42df3aae2a321cc669e12a0/src%2Flib%2Fstd.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fstd.rc?ref=c1092fb6d88efe51e42df3aae2a321cc669e12a0", "patch": "@@ -97,6 +97,7 @@ mod test;\n mod unsafe;\n mod term;\n mod math;\n+mod result;\n \n #[cfg(unicode)]\n mod unicode;"}]}