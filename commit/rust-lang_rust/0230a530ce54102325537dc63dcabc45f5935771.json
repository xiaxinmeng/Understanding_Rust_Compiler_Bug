{"sha": "0230a530ce54102325537dc63dcabc45f5935771", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyMzBhNTMwY2U1NDEwMjMyNTUzN2RjNjNkY2FiYzQ1ZjU5MzU3NzE=", "commit": {"author": {"name": "Paul Faria", "email": "Nashenas88@gmail.com", "date": "2015-06-15T01:01:26Z"}, "committer": {"name": "Paul Faria", "email": "Nashenas88@gmail.com", "date": "2015-06-20T01:04:13Z"}, "message": "fixup! Finished implementing proper function check (through FnOnce) and moved tests to new file and updated tests", "tree": {"sha": "5f4d5eebb73cdb9f5381147ffa2adc4b3201004a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f4d5eebb73cdb9f5381147ffa2adc4b3201004a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0230a530ce54102325537dc63dcabc45f5935771", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0230a530ce54102325537dc63dcabc45f5935771", "html_url": "https://github.com/rust-lang/rust/commit/0230a530ce54102325537dc63dcabc45f5935771", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0230a530ce54102325537dc63dcabc45f5935771/comments", "author": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9932870833a3d2c13431c0454a4a91bf54a0e5ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/9932870833a3d2c13431c0454a4a91bf54a0e5ab", "html_url": "https://github.com/rust-lang/rust/commit/9932870833a3d2c13431c0454a4a91bf54a0e5ab"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "c5598e8785cbd1766c2da85a0b2c8cc34e783af2", "filename": "src/test/compile-fail/issue-2392.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0230a530ce54102325537dc63dcabc45f5935771/src%2Ftest%2Fcompile-fail%2Fissue-2392.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0230a530ce54102325537dc63dcabc45f5935771/src%2Ftest%2Fcompile-fail%2Fissue-2392.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2392.rs?ref=0230a530ce54102325537dc63dcabc45f5935771", "patch": "@@ -34,32 +34,35 @@ fn check_expression() -> Obj<Box<FnBox() -> u32>> {\n \n fn main() {\n     // test variations of function\n+\n     let o_closure = Obj { closure: || 42, not_closure: 42 };\n     o_closure.closure(); //~ ERROR no method named `closure` found\n-    //~^ NOTE use `(o_closure.closure)(...)` if you meant to call the function stored in the `closure` field\n+    //~^ NOTE use `(o_closure.closure)(...)` if you meant to call the function stored\n \n     o_closure.not_closure(); //~ ERROR no method named `not_closure` found\n     //~^ NOTE did you mean to write `o_closure.not_closure`?\n \n     let o_func = Obj { closure: func, not_closure: 5 };\n     o_func.closure(); //~ ERROR no method named `closure` found\n-    //~^ NOTE use `(o_func.closure)(...)` if you meant to call the function stored in the `closure` field\n+    //~^ NOTE use `(o_func.closure)(...)` if you meant to call the function stored\n \n     let boxed_fn = BoxedObj { boxed_closure: Box::new(func) };\n     boxed_fn.boxed_closure();//~ ERROR no method named `boxed_closure` found\n-    //~^ NOTE use `(boxed_fn.boxed_closure)(...)` if you meant to call the function stored in the `boxed_closure` field\n+    //~^ NOTE use `(boxed_fn.boxed_closure)(...)` if you meant to call the function stored\n \n     let boxed_closure = BoxedObj { boxed_closure: Box::new(|| 42_u32) as Box<FnBox() -> u32> };\n     boxed_closure.boxed_closure();//~ ERROR no method named `boxed_closure` found\n-    //~^ NOTE use `(boxed_closure.boxed_closure)(...)` if you meant to call the function stored in the `boxed_closure` field\n+    //~^ NOTE use `(boxed_closure.boxed_closure)(...)` if you meant to call the function stored\n \n     // test expression writing in the notes\n+\n     let w = Wrapper { wrap: o_func };\n     w.wrap.closure();//~ ERROR no method named `closure` found\n-    //~^ NOTE use `(w.wrap.closure)(...)` if you meant to call the function stored in the `closure` field\n+    //~^ NOTE use `(w.wrap.closure)(...)` if you meant to call the function stored\n+\n     w.wrap.not_closure();//~ ERROR no method named `not_closure` found\n     //~^ NOTE did you mean to write `w.wrap.not_closure`?\n \n     check_expression().closure();//~ ERROR no method named `closure` found\n-    //~^ NOTE use `(check_expression().closure)(...)` if you meant to call the function stored in the `closure` field\n+    //~^ NOTE use `(check_expression().closure)(...)` if you meant to call the function stored\n }"}]}