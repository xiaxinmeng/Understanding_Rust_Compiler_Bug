{"sha": "992560087025370e2a0397a67106b0852e238b4e", "node_id": "C_kwDOAAsO6NoAKDk5MjU2MDA4NzAyNTM3MGUyYTAzOTdhNjcxMDZiMDg1MmUyMzhiNGU", "commit": {"author": {"name": "Jacob Kiesel", "email": "kieseljake@gmail.com", "date": "2022-09-14T06:27:56Z"}, "committer": {"name": "Jacob Kiesel", "email": "kieseljake@live.com", "date": "2022-09-14T19:35:32Z"}, "message": "dogfood inverse bool_to_int_with_if", "tree": {"sha": "ea059851e4a6e25d9370aa0e5b18935bbfebdd5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea059851e4a6e25d9370aa0e5b18935bbfebdd5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/992560087025370e2a0397a67106b0852e238b4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/992560087025370e2a0397a67106b0852e238b4e", "html_url": "https://github.com/rust-lang/rust/commit/992560087025370e2a0397a67106b0852e238b4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/992560087025370e2a0397a67106b0852e238b4e/comments", "author": {"login": "Xaeroxe", "id": 6182002, "node_id": "MDQ6VXNlcjYxODIwMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/6182002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xaeroxe", "html_url": "https://github.com/Xaeroxe", "followers_url": "https://api.github.com/users/Xaeroxe/followers", "following_url": "https://api.github.com/users/Xaeroxe/following{/other_user}", "gists_url": "https://api.github.com/users/Xaeroxe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xaeroxe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xaeroxe/subscriptions", "organizations_url": "https://api.github.com/users/Xaeroxe/orgs", "repos_url": "https://api.github.com/users/Xaeroxe/repos", "events_url": "https://api.github.com/users/Xaeroxe/events{/privacy}", "received_events_url": "https://api.github.com/users/Xaeroxe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xaeroxe", "id": 6182002, "node_id": "MDQ6VXNlcjYxODIwMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/6182002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xaeroxe", "html_url": "https://github.com/Xaeroxe", "followers_url": "https://api.github.com/users/Xaeroxe/followers", "following_url": "https://api.github.com/users/Xaeroxe/following{/other_user}", "gists_url": "https://api.github.com/users/Xaeroxe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xaeroxe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xaeroxe/subscriptions", "organizations_url": "https://api.github.com/users/Xaeroxe/orgs", "repos_url": "https://api.github.com/users/Xaeroxe/repos", "events_url": "https://api.github.com/users/Xaeroxe/events{/privacy}", "received_events_url": "https://api.github.com/users/Xaeroxe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1eb41804a28b8e9b7643a61f3c224a06aba1f433", "url": "https://api.github.com/repos/rust-lang/rust/commits/1eb41804a28b8e9b7643a61f3c224a06aba1f433", "html_url": "https://github.com/rust-lang/rust/commit/1eb41804a28b8e9b7643a61f3c224a06aba1f433"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "d1b25a0f1b53514116259ae608fdffbec4c0d897", "filename": "clippy_lints/src/dereference.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/992560087025370e2a0397a67106b0852e238b4e/clippy_lints%2Fsrc%2Fdereference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/992560087025370e2a0397a67106b0852e238b4e/clippy_lints%2Fsrc%2Fdereference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdereference.rs?ref=992560087025370e2a0397a67106b0852e238b4e", "patch": "@@ -297,13 +297,10 @@ impl<'tcx> LateLintPass<'tcx> for Dereferencing {\n                         if !is_lint_allowed(cx, EXPLICIT_DEREF_METHODS, expr.hir_id)\n                             && position.lint_explicit_deref() =>\n                     {\n+                        let ty_changed_count = usize::from(!deref_method_same_type(expr_ty, typeck.expr_ty(sub_expr)));\n                         self.state = Some((\n                             State::DerefMethod {\n-                                ty_changed_count: if deref_method_same_type(expr_ty, typeck.expr_ty(sub_expr)) {\n-                                    0\n-                                } else {\n-                                    1\n-                                },\n+                                ty_changed_count,\n                                 is_final_ufcs: matches!(expr.kind, ExprKind::Call(..)),\n                                 target_mut,\n                             },"}, {"sha": "b32e5d8d4210e684b2315098984298ff01624df2", "filename": "clippy_lints/src/methods/unnecessary_to_owned.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/992560087025370e2a0397a67106b0852e238b4e/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/992560087025370e2a0397a67106b0852e238b4e/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs?ref=992560087025370e2a0397a67106b0852e238b4e", "patch": "@@ -269,7 +269,7 @@ fn check_other_call_arg<'tcx>(\n         // We can't add an `&` when the trait is `Deref` because `Target = &T` won't match\n         // `Target = T`.\n         if n_refs > 0 || is_copy(cx, receiver_ty) || trait_predicate.def_id() != deref_trait_id;\n-        let n_refs = max(n_refs, if is_copy(cx, receiver_ty) { 0 } else { 1 });\n+        let n_refs = max(n_refs, usize::from(!is_copy(cx, receiver_ty)));\n         if let Some(receiver_snippet) = snippet_opt(cx, receiver.span);\n         then {\n             span_lint_and_sugg("}, {"sha": "78397c2af346b0464fa0572caa11eb5fb0a406da", "filename": "tests/ui/len_without_is_empty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/992560087025370e2a0397a67106b0852e238b4e/tests%2Fui%2Flen_without_is_empty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/992560087025370e2a0397a67106b0852e238b4e/tests%2Fui%2Flen_without_is_empty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flen_without_is_empty.rs?ref=992560087025370e2a0397a67106b0852e238b4e", "patch": "@@ -274,7 +274,7 @@ impl AsyncLen {\n     }\n \n     pub async fn len(&self) -> usize {\n-        if self.async_task().await { 0 } else { 1 }\n+        usize::from(!self.async_task().await)\n     }\n \n     pub async fn is_empty(&self) -> bool {"}]}