{"sha": "c3516f091bbf051f8f9d40ea0dda9ab8c4584e74", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzNTE2ZjA5MWJiZjA1MWY4ZjlkNDBlYTBkZGE5YWI4YzQ1ODRlNzQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-14T01:23:33Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-14T01:24:14Z"}, "message": "rustc: Allow the addresses of rvalues to be taken", "tree": {"sha": "252e7872b3a4fd421d7b27414e5df14bbafffecd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/252e7872b3a4fd421d7b27414e5df14bbafffecd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3516f091bbf051f8f9d40ea0dda9ab8c4584e74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3516f091bbf051f8f9d40ea0dda9ab8c4584e74", "html_url": "https://github.com/rust-lang/rust/commit/c3516f091bbf051f8f9d40ea0dda9ab8c4584e74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3516f091bbf051f8f9d40ea0dda9ab8c4584e74/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffc1d0a55d66a83bfde3f45e85c6fc90e5b8240a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffc1d0a55d66a83bfde3f45e85c6fc90e5b8240a", "html_url": "https://github.com/rust-lang/rust/commit/ffc1d0a55d66a83bfde3f45e85c6fc90e5b8240a"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "b1f5d6c735e5ee1bc7ad9e02cdffe1336620ad64", "filename": "src/rustc/middle/region.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c3516f091bbf051f8f9d40ea0dda9ab8c4584e74/src%2Frustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3516f091bbf051f8f9d40ea0dda9ab8c4584e74/src%2Frustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fregion.rs?ref=c3516f091bbf051f8f9d40ea0dda9ab8c4584e74", "patch": "@@ -40,7 +40,12 @@ type region_map = {\n     /* Mapping from an AST type node to the region that `&` resolves to. */\n     ast_type_to_inferred_region: hashmap<ast::node_id,ty::region>,\n     /* Mapping from a call site (or `bind` site) to its containing block. */\n-    call_site_to_block: hashmap<ast::node_id,ast::node_id>\n+    call_site_to_block: hashmap<ast::node_id,ast::node_id>,\n+    /*\n+     * Mapping from an address-of operator or alt expression to its containing\n+     * block. This is used as the region if the operand is an rvalue.\n+     */\n+    rvalue_to_block: hashmap<ast::node_id,ast::node_id>\n };\n \n type ctxt = {\n@@ -249,6 +254,17 @@ fn resolve_expr(expr: @ast::expr, cx: ctxt, visitor: visit::vt<ctxt>) {\n             }\n             visit::visit_expr(expr, cx, visitor);\n         }\n+        ast::expr_addr_of(_, _) | ast::expr_alt(_, _, _) {\n+            // Record the block that this expression appears in, in case the\n+            // operand is an rvalue.\n+            alt cx.parent {\n+                pa_block(blk_id) {\n+                    cx.region_map.rvalue_to_block.insert(expr.id, blk_id);\n+                }\n+                _ { cx.sess.span_bug(expr.span, \"expr outside of block?!\"); }\n+            }\n+            visit::visit_expr(expr, cx, visitor);\n+        }\n         _ { visit::visit_expr(expr, cx, visitor); }\n     }\n }\n@@ -276,7 +292,8 @@ fn resolve_crate(sess: session, def_map: resolve::def_map, crate: @ast::crate)\n                                   region_name_to_fn: new_def_hash(),\n                                   ast_type_to_inferred_region:\n                                     map::new_int_hash(),\n-                                  call_site_to_block: map::new_int_hash()},\n+                                  call_site_to_block: map::new_int_hash(),\n+                                  rvalue_to_block: map::new_int_hash()},\n                     mut bindings: @list::nil,\n                     mut queued_locals: [],\n                     parent: pa_crate,"}, {"sha": "1a6953d2d93016494cfa6ed8cf28c855d8b6a0ce", "filename": "src/rustc/middle/typeck.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c3516f091bbf051f8f9d40ea0dda9ab8c4584e74/src%2Frustc%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3516f091bbf051f8f9d40ea0dda9ab8c4584e74/src%2Frustc%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck.rs?ref=c3516f091bbf051f8f9d40ea0dda9ab8c4584e74", "patch": "@@ -1931,8 +1931,8 @@ fn region_of(fcx: @fn_ctxt, expr: @ast::expr) -> ty::region {\n                                          \"index, or deref operations\");\n         }\n         _ {\n-            fcx.ccx.tcx.sess.span_err(expr.span, \"not an lvalue\");\n-            ret ty::re_block(0);\n+            let blk_id = fcx.ccx.tcx.region_map.rvalue_to_block.get(expr.id);\n+            ret ty::re_block(blk_id);\n         }\n     }\n }"}]}