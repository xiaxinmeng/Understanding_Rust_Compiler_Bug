{"sha": "2ac4fe12f3f232cd3ca8b33eb3f14bed4ca8510b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhYzRmZTEyZjNmMjMyY2QzY2E4YjMzZWIzZjE0YmVkNGNhODUxMGI=", "commit": {"author": {"name": "Ivan Stankovic", "email": "istankovic@users.noreply.github.com", "date": "2017-01-16T20:26:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-01-16T20:26:43Z"}, "message": "libcollections: btree/set: fix a typo", "tree": {"sha": "94044238f8f2c9fececb228551585703952685e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94044238f8f2c9fececb228551585703952685e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ac4fe12f3f232cd3ca8b33eb3f14bed4ca8510b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ac4fe12f3f232cd3ca8b33eb3f14bed4ca8510b", "html_url": "https://github.com/rust-lang/rust/commit/2ac4fe12f3f232cd3ca8b33eb3f14bed4ca8510b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ac4fe12f3f232cd3ca8b33eb3f14bed4ca8510b/comments", "author": {"login": "istankovic", "id": 1312091, "node_id": "MDQ6VXNlcjEzMTIwOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1312091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/istankovic", "html_url": "https://github.com/istankovic", "followers_url": "https://api.github.com/users/istankovic/followers", "following_url": "https://api.github.com/users/istankovic/following{/other_user}", "gists_url": "https://api.github.com/users/istankovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/istankovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/istankovic/subscriptions", "organizations_url": "https://api.github.com/users/istankovic/orgs", "repos_url": "https://api.github.com/users/istankovic/repos", "events_url": "https://api.github.com/users/istankovic/events{/privacy}", "received_events_url": "https://api.github.com/users/istankovic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d0baa71b94e15ac43532987777959edbaee098d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d0baa71b94e15ac43532987777959edbaee098d", "html_url": "https://github.com/rust-lang/rust/commit/2d0baa71b94e15ac43532987777959edbaee098d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f006ba95371611ecb402bbde92048c36217e4f77", "filename": "src/libcollections/btree/set.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ac4fe12f3f232cd3ca8b33eb3f14bed4ca8510b/src%2Flibcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ac4fe12f3f232cd3ca8b33eb3f14bed4ca8510b/src%2Flibcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbtree%2Fset.rs?ref=2ac4fe12f3f232cd3ca8b33eb3f14bed4ca8510b", "patch": "@@ -208,7 +208,7 @@ impl<T> BTreeSet<T> {\n \n impl<T: Ord> BTreeSet<T> {\n     /// Constructs a double-ended iterator over a sub-range of elements in the set.\n-    /// The simplest way is to use the range synax `min..max`, thus `range(min..max)` will\n+    /// The simplest way is to use the range syntax `min..max`, thus `range(min..max)` will\n     /// yield elements from min (inclusive) to max (exclusive).\n     /// The range may also be entered as `(Bound<T>, Bound<T>)`, so for example\n     /// `range((Excluded(4), Included(10)))` will yield a left-exclusive, right-inclusive"}]}