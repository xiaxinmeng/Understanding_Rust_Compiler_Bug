{"sha": "7ebccbb7a4003e036cae61c575ac7edb871a8259", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlYmNjYmI3YTQwMDNlMDM2Y2FlNjFjNTc1YWM3ZWRiODcxYTgyNTk=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-11-29T15:29:13Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-11-29T15:29:13Z"}, "message": "incr.comp.: Update test cases after metadata hashing removal.", "tree": {"sha": "d65421c255984be24c83de6fb96e0c5db000a222", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d65421c255984be24c83de6fb96e0c5db000a222"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ebccbb7a4003e036cae61c575ac7edb871a8259", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ebccbb7a4003e036cae61c575ac7edb871a8259", "html_url": "https://github.com/rust-lang/rust/commit/7ebccbb7a4003e036cae61c575ac7edb871a8259", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ebccbb7a4003e036cae61c575ac7edb871a8259/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c60b0e43c87c5f46337b3792136ebd9b2aa74417", "url": "https://api.github.com/repos/rust-lang/rust/commits/c60b0e43c87c5f46337b3792136ebd9b2aa74417", "html_url": "https://github.com/rust-lang/rust/commit/c60b0e43c87c5f46337b3792136ebd9b2aa74417"}], "stats": {"total": 1122, "additions": 5, "deletions": 1117}, "files": [{"sha": "a62d84fedf3aa839c86812c5b75b029059615654", "filename": "src/test/incremental/hashes/call_expressions.rs", "status": "modified", "additions": 4, "deletions": 18, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fcall_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fcall_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fcall_expressions.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -38,8 +38,6 @@ pub fn change_callee_function() {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_callee_function() {\n     callee2(1, 2)\n }\n@@ -55,8 +53,6 @@ pub fn change_argument_function() {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_argument_function() {\n     callee1(1, 3)\n }\n@@ -74,8 +70,8 @@ mod change_callee_indirectly_function {\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n     #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+\n+\n     pub fn change_callee_indirectly_function() {\n         callee(1, 2)\n     }\n@@ -98,8 +94,6 @@ pub fn change_callee_method() {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_callee_method() {\n     let s = Struct;\n     s.method2('x', true);\n@@ -117,8 +111,6 @@ pub fn change_argument_method() {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_argument_method() {\n     let s = Struct;\n     s.method1('y', true);\n@@ -136,8 +128,6 @@ pub fn change_ufcs_callee_method() {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_ufcs_callee_method() {\n     let s = Struct;\n     Struct::method2(&s, 'x', true);\n@@ -155,8 +145,6 @@ pub fn change_argument_method_ufcs() {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_argument_method_ufcs() {\n     let s = Struct;\n     Struct::method1(&s, 'x', false);\n@@ -174,8 +162,6 @@ pub fn change_to_ufcs() {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n // One might think this would be expanded in the HirBody/Mir, but it actually\n // results in slightly different Hir/Mir.\n pub fn change_to_ufcs() {\n@@ -198,8 +184,8 @@ pub mod change_ufcs_callee_indirectly {\n \n     #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+\n+\n     pub fn change_ufcs_callee_indirectly() {\n         let s = Struct;\n         Struct::method1(&s, 'q', false)"}, {"sha": "4abc77e0ab64d36df8b7ff1cb4d0be8600caa96a", "filename": "src/test/incremental/hashes/closure_expressions.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fclosure_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fclosure_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fclosure_expressions.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -36,8 +36,6 @@ fn change_closure_body() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_closure_body() {\n     let _ = || 3u32;\n }\n@@ -56,8 +54,6 @@ fn add_parameter() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn add_parameter() {\n     let x = 0u32;\n     let _ = |x: u32| x + 1;\n@@ -76,8 +72,6 @@ fn change_parameter_pattern() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_parameter_pattern() {\n     let _ = |&x: &u32| x;\n }\n@@ -95,8 +89,6 @@ fn add_move() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn add_move() {\n     let _ = move || 1;\n }\n@@ -115,8 +107,6 @@ fn add_type_ascription_to_parameter() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn add_type_ascription_to_parameter() {\n     let closure = |x: u32| x + 1u32;\n     let _: u32 = closure(1);\n@@ -136,8 +126,6 @@ fn change_parameter_type() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_parameter_type() {\n     let closure = |x: u16| (x as u64) + 1;\n     let _ = closure(1);"}, {"sha": "496ae4276f863276695ca854e702c2515b03206d", "filename": "src/test/incremental/hashes/consts.rs", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fconsts.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -32,8 +32,6 @@ const CONST_VISIBILITY: u8 = 0;\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub const CONST_VISIBILITY: u8 = 0;\n \n \n@@ -44,8 +42,6 @@ const CONST_CHANGE_TYPE_1: i32 = 0;\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,TypeOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n const CONST_CHANGE_TYPE_1: u32 = 0;\n \n \n@@ -56,15 +52,12 @@ const CONST_CHANGE_TYPE_2: Option<u32> = None;\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,TypeOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n const CONST_CHANGE_TYPE_2: Option<u64> = None;\n \n \n // Change value between simple literals ---------------------------------------\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n const CONST_CHANGE_VALUE_1: i16 = {\n     #[cfg(cfail1)]\n     { 1 }\n@@ -77,8 +70,6 @@ const CONST_CHANGE_VALUE_1: i16 = {\n // Change value between expressions -------------------------------------------\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n const CONST_CHANGE_VALUE_2: i16 = {\n     #[cfg(cfail1)]\n     { 1 + 1 }\n@@ -89,8 +80,6 @@ const CONST_CHANGE_VALUE_2: i16 = {\n \n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n const CONST_CHANGE_VALUE_3: i16 = {\n     #[cfg(cfail1)]\n     { 2 + 3 }\n@@ -101,8 +90,6 @@ const CONST_CHANGE_VALUE_3: i16 = {\n \n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n const CONST_CHANGE_VALUE_4: i16 = {\n     #[cfg(cfail1)]\n     { 1 + 2 * 3 }\n@@ -125,13 +112,9 @@ mod const_change_type_indirectly {\n \n     #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,TypeOfItem\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     const CONST_CHANGE_TYPE_INDIRECTLY_1: Type = Type;\n \n     #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,TypeOfItem\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     const CONST_CHANGE_TYPE_INDIRECTLY_2: Option<Type> = None;\n }"}, {"sha": "f38d18646306e885a827e612a78eae9eaafb9b44", "filename": "src/test/incremental/hashes/enum_constructors.rs", "status": "modified", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fenum_constructors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fenum_constructors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fenum_constructors.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -47,8 +47,6 @@ pub fn change_field_value_struct_like() -> Enum {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirOptimized,MirValidated\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_field_value_struct_like() -> Enum {\n     Enum::Struct {\n         x: 0,\n@@ -72,8 +70,6 @@ pub fn change_field_order_struct_like() -> Enum {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n // FIXME(michaelwoerister):Interesting. I would have thought that that changes the MIR. And it\n // would if it were not all constants\n pub fn change_field_order_struct_like() -> Enum {\n@@ -113,8 +109,6 @@ pub fn change_constructor_path_struct_like() {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirOptimized,MirValidated,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_constructor_path_struct_like() {\n     let _ = Enum2::Struct {\n         x: 0,\n@@ -138,8 +132,6 @@ pub fn change_constructor_variant_struct_like() {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirOptimized,MirValidated\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_constructor_variant_struct_like() {\n     let _ = Enum2::Struct2 {\n         x: 0,\n@@ -162,8 +154,6 @@ pub mod change_constructor_path_indirectly_struct_like {\n                 TypeckTables\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn function() -> TheEnum {\n         TheEnum::Struct {\n             x: 0,\n@@ -184,8 +174,6 @@ pub mod change_constructor_variant_indirectly_struct_like {\n \n     #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirOptimized,MirValidated\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn function() -> Enum2 {\n         Variant {\n             x: 0,\n@@ -205,8 +193,6 @@ pub fn change_field_value_tuple_like() -> Enum {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirOptimized,MirValidated\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_field_value_tuple_like() -> Enum {\n     Enum::Tuple(0, 1, 3)\n }\n@@ -225,8 +211,6 @@ pub fn change_constructor_path_tuple_like() {\n     except=\"HirBody,MirOptimized,MirValidated,TypeckTables\"\n )]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_constructor_path_tuple_like() {\n     let _ = Enum2::Tuple(0, 1, 2);\n }\n@@ -245,8 +229,6 @@ pub fn change_constructor_variant_tuple_like() {\n     except=\"HirBody,MirOptimized,MirValidated,TypeckTables\"\n )]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_constructor_variant_tuple_like() {\n     let _ = Enum2::Tuple2(0, 1, 2);\n }\n@@ -265,8 +247,6 @@ pub mod change_constructor_path_indirectly_tuple_like {\n                 TypeckTables\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn function() -> TheEnum {\n         TheEnum::Tuple(0, 1, 2)\n     }\n@@ -284,8 +264,6 @@ pub mod change_constructor_variant_indirectly_tuple_like {\n \n     #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirOptimized,MirValidated,TypeckTables\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn function() -> Enum2 {\n         Variant(0, 1, 2)\n     }\n@@ -313,7 +291,6 @@ pub fn change_constructor_path_c_like() {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirOptimized,MirValidated,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_constructor_path_c_like() {\n     let _ = Clike2::B;\n }\n@@ -329,8 +306,6 @@ pub fn change_constructor_variant_c_like() {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirOptimized,MirValidated\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_constructor_variant_c_like() {\n     let _ = Clike::C;\n }\n@@ -349,8 +324,6 @@ pub mod change_constructor_path_indirectly_c_like {\n                 TypeckTables\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn function() -> TheEnum {\n         TheEnum::B\n     }\n@@ -368,8 +341,6 @@ pub mod change_constructor_variant_indirectly_c_like {\n \n     #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirOptimized,MirValidated\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn function() -> Clike {\n         Variant\n     }"}, {"sha": "dbb7aca1924d3e41775dbaca2575b6bc73181015", "filename": "src/test/incremental/hashes/enum_defs.rs", "status": "modified", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fenum_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fenum_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fenum_defs.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -39,11 +39,7 @@ enum EnumVisibility { A }\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub enum EnumVisibility {\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     A\n }\n \n@@ -59,13 +55,8 @@ enum EnumChangeNameCStyleVariant {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,TypeOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumChangeNameCStyleVariant {\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     Variant1,\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     Variant2Changed,\n }\n \n@@ -81,8 +72,6 @@ enum EnumChangeNameTupleStyleVariant {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,TypeOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumChangeNameTupleStyleVariant {\n     Variant1,\n     Variant2Changed(u32, f32),\n@@ -100,8 +89,6 @@ enum EnumChangeNameStructStyleVariant {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,TypeOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumChangeNameStructStyleVariant {\n     Variant1,\n     Variant2Changed { a: u32, b: f32 },\n@@ -119,16 +106,10 @@ enum EnumChangeValueCStyleVariant0 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumChangeValueCStyleVariant0 {\n     Variant1,\n \n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     Variant2 =\n-        #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-        #[rustc_metadata_clean(cfg=\"cfail3\")]\n         22,\n }\n \n@@ -141,8 +122,6 @@ enum EnumChangeValueCStyleVariant1 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,TypeOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumChangeValueCStyleVariant1 {\n     Variant1,\n     Variant2 = 11,\n@@ -159,8 +138,6 @@ enum EnumAddCStyleVariant {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,TypeOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumAddCStyleVariant {\n     Variant1,\n     Variant2,\n@@ -178,8 +155,6 @@ enum EnumRemoveCStyleVariant {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,TypeOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumRemoveCStyleVariant {\n     Variant1,\n }\n@@ -195,8 +170,6 @@ enum EnumAddTupleStyleVariant {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,TypeOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumAddTupleStyleVariant {\n     Variant1,\n     Variant2(u32, f32),\n@@ -214,8 +187,6 @@ enum EnumRemoveTupleStyleVariant {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,TypeOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumRemoveTupleStyleVariant {\n     Variant1,\n }\n@@ -231,8 +202,6 @@ enum EnumAddStructStyleVariant {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,TypeOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumAddStructStyleVariant {\n     Variant1,\n     Variant2 { a: u32, b: f32 },\n@@ -250,8 +219,6 @@ enum EnumRemoveStructStyleVariant {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,TypeOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumRemoveStructStyleVariant {\n     Variant1,\n }\n@@ -267,12 +234,8 @@ enum EnumChangeFieldTypeTupleStyleVariant {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumChangeFieldTypeTupleStyleVariant {\n     Variant1(u32,\n-        #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-        #[rustc_metadata_clean(cfg=\"cfail3\")]\n         u64),\n }\n \n@@ -288,14 +251,10 @@ enum EnumChangeFieldTypeStructStyleVariant {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumChangeFieldTypeStructStyleVariant {\n     Variant1,\n     Variant2 {\n         a: u32,\n-        #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-        #[rustc_metadata_clean(cfg=\"cfail3\")]\n         b: u64\n     },\n }\n@@ -311,8 +270,6 @@ enum EnumChangeFieldNameStructStyleVariant {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,TypeOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumChangeFieldNameStructStyleVariant {\n     Variant1 { a: u32, c: u32 },\n }\n@@ -328,15 +285,9 @@ enum EnumChangeOrderTupleStyleVariant {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumChangeOrderTupleStyleVariant {\n     Variant1(\n-        #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-        #[rustc_metadata_clean(cfg=\"cfail3\")]\n         u64,\n-        #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-        #[rustc_metadata_clean(cfg=\"cfail3\")]\n         u32),\n }\n \n@@ -351,8 +302,6 @@ enum EnumChangeFieldOrderStructStyleVariant {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,TypeOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumChangeFieldOrderStructStyleVariant {\n     Variant1 { b: f32, a: u32 },\n }\n@@ -368,8 +317,6 @@ enum EnumAddFieldTupleStyleVariant {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,TypeOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumAddFieldTupleStyleVariant {\n     Variant1(u32, u32, u32),\n }\n@@ -385,8 +332,6 @@ enum EnumAddFieldStructStyleVariant {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,TypeOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumAddFieldStructStyleVariant {\n     Variant1 { a: u32, b: u32, c: u32 },\n }\n@@ -403,8 +348,6 @@ enum EnumAddMustUse {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[must_use]\n enum EnumAddMustUse {\n     Variant1,\n@@ -423,8 +366,6 @@ enum EnumAddReprC {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,TypeOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[repr(C)]\n enum EnumAddReprC {\n     Variant1,\n@@ -442,8 +383,6 @@ enum EnumChangeNameOfTypeParameter<S> {\n #[cfg(not(cfail1))]\n #[rustc_dirty(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumChangeNameOfTypeParameter<T> {\n     Variant1(T),\n }\n@@ -460,8 +399,6 @@ enum EnumAddTypeParameter<S> {\n #[cfg(not(cfail1))]\n #[rustc_dirty(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumAddTypeParameter<S, T> {\n     Variant1(S),\n     Variant2(T),\n@@ -478,8 +415,6 @@ enum EnumChangeNameOfLifetimeParameter<'a> {\n #[cfg(not(cfail1))]\n #[rustc_dirty(cfg=\"cfail2\", except=\"PredicatesOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumChangeNameOfLifetimeParameter<'b> {\n     Variant1(&'b u32),\n }\n@@ -496,8 +431,6 @@ enum EnumAddLifetimeParameter<'a> {\n #[cfg(not(cfail1))]\n #[rustc_dirty(cfg=\"cfail2\", except=\"PredicatesOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumAddLifetimeParameter<'a, 'b> {\n     Variant1(&'a u32),\n     Variant2(&'b u32),\n@@ -515,8 +448,6 @@ enum EnumAddLifetimeParameterBound<'a, 'b> {\n #[cfg(not(cfail1))]\n #[rustc_dirty(cfg=\"cfail2\", except=\"GenericsOfItem,TypeOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumAddLifetimeParameterBound<'a, 'b: 'a> {\n     Variant1(&'a u32),\n     Variant2(&'b u32),\n@@ -532,8 +463,6 @@ enum EnumAddLifetimeBoundToParameter<'a, T> {\n #[cfg(not(cfail1))]\n #[rustc_dirty(cfg=\"cfail2\", except=\"TypeOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumAddLifetimeBoundToParameter<'a, T: 'a> {\n     Variant1(T),\n     Variant2(&'a u32),\n@@ -550,8 +479,6 @@ enum EnumAddTraitBound<S> {\n #[cfg(not(cfail1))]\n #[rustc_dirty(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumAddTraitBound<T: Sync> {\n     Variant1(T),\n }\n@@ -568,8 +495,6 @@ enum EnumAddLifetimeParameterBoundWhere<'a, 'b> {\n #[cfg(not(cfail1))]\n #[rustc_dirty(cfg=\"cfail2\", except=\"GenericsOfItem,TypeOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumAddLifetimeParameterBoundWhere<'a, 'b> where 'b: 'a {\n     Variant1(&'a u32),\n     Variant2(&'b u32),\n@@ -587,8 +512,6 @@ enum EnumAddLifetimeBoundToParameterWhere<'a, T> {\n #[cfg(not(cfail1))]\n #[rustc_dirty(cfg=\"cfail2\", except=\"TypeOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumAddLifetimeBoundToParameterWhere<'a, T> where T: 'a {\n     Variant1(T),\n     Variant2(&'a u32),\n@@ -605,8 +528,6 @@ enum EnumAddTraitBoundWhere<S> {\n #[cfg(not(cfail1))]\n #[rustc_dirty(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumAddTraitBoundWhere<T> where T: Sync {\n     Variant1(T),\n }\n@@ -623,21 +544,11 @@ enum EnumSwapUsageTypeParameters<A, B> {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumSwapUsageTypeParameters<A, B> {\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     Variant1 {\n-        #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-        #[rustc_metadata_clean(cfg=\"cfail3\")]\n         a: B\n     },\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     Variant2 {\n-        #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-        #[rustc_metadata_clean(cfg=\"cfail3\")]\n         a: A\n     },\n }\n@@ -654,21 +565,11 @@ enum EnumSwapUsageLifetimeParameters<'a, 'b> {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n enum EnumSwapUsageLifetimeParameters<'a, 'b> {\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     Variant1 {\n-        #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-        #[rustc_metadata_clean(cfg=\"cfail3\")]\n         a: &'b u32\n     },\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     Variant2 {\n-        #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-        #[rustc_metadata_clean(cfg=\"cfail3\")]\n         b: &'a u32\n     },\n }\n@@ -689,14 +590,8 @@ mod change_field_type_indirectly_tuple_style {\n \n     #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     enum TupleStyle {\n-        #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-        #[rustc_metadata_clean(cfg=\"cfail3\")]\n         Variant1(\n-            #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-            #[rustc_metadata_clean(cfg=\"cfail3\")]\n             FieldType\n         )\n     }\n@@ -713,14 +608,8 @@ mod change_field_type_indirectly_struct_style {\n \n     #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     enum StructStyle {\n-        #[rustc_metadata_clean(cfg=\"cfail2\")]\n-        #[rustc_metadata_clean(cfg=\"cfail3\")]\n         Variant1 {\n-            #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-            #[rustc_metadata_clean(cfg=\"cfail3\")]\n             a: FieldType\n         }\n     }\n@@ -742,8 +631,6 @@ mod change_trait_bound_indirectly {\n \n     #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,PredicatesOfItem\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     enum Enum<T: Trait> {\n         Variant1(T)\n     }\n@@ -760,8 +647,6 @@ mod change_trait_bound_indirectly_where {\n \n     #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,PredicatesOfItem\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     enum Enum<T> where T: Trait {\n         Variant1(T)\n     }"}, {"sha": "985c064f6a0a2e8ec99d9b4c75072a1f7106b23d", "filename": "src/test/incremental/hashes/exported_vs_not.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fexported_vs_not.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fexported_vs_not.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fexported_vs_not.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -28,8 +28,6 @@ pub fn body_not_exported_to_metadata() -> u32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn body_not_exported_to_metadata() -> u32 {\n     2\n }\n@@ -49,8 +47,6 @@ pub fn body_exported_to_metadata_because_of_inline() -> u32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[inline]\n pub fn body_exported_to_metadata_because_of_inline() -> u32 {\n     2\n@@ -71,8 +67,6 @@ pub fn body_exported_to_metadata_because_of_generic() -> u32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[inline]\n pub fn body_exported_to_metadata_because_of_generic() -> u32 {\n     2"}, {"sha": "7ccb452b7ed2635b0d8458b4757df60b671c3be8", "filename": "src/test/incremental/hashes/extern_mods.rs", "status": "modified", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fextern_mods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fextern_mods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fextern_mods.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -36,8 +36,6 @@ extern {\n #[cfg(not(cfail1))]\n #[rustc_dirty(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n extern {\n     pub fn change_function_name2(c: i64) -> i32;\n }\n@@ -53,11 +51,7 @@ extern {\n #[cfg(not(cfail1))]\n #[rustc_dirty(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n extern {\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn change_parameter_name(d: i64) -> i32;\n }\n \n@@ -72,11 +66,7 @@ extern {\n #[cfg(not(cfail1))]\n #[rustc_dirty(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n extern {\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn change_parameter_type(c: i32) -> i32;\n }\n \n@@ -91,11 +81,7 @@ extern {\n #[cfg(not(cfail1))]\n #[rustc_dirty(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n extern {\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn change_return_type(c: i32) -> i8;\n }\n \n@@ -110,11 +96,7 @@ extern {\n #[cfg(not(cfail1))]\n #[rustc_dirty(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n extern {\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn add_parameter(c: i32, d: i32) -> i32;\n }\n \n@@ -129,11 +111,7 @@ extern {\n #[cfg(not(cfail1))]\n #[rustc_dirty(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n extern {\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn add_return_type(c: i32) -> i32;\n }\n \n@@ -148,11 +126,7 @@ extern {\n #[cfg(not(cfail1))]\n #[rustc_dirty(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n extern {\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn make_function_variadic(c: i32, ...);\n }\n \n@@ -167,11 +141,7 @@ extern \"C\" {\n #[cfg(not(cfail1))]\n #[rustc_dirty(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n extern \"rust-call\" {\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn change_calling_convention(c: i32);\n }\n \n@@ -186,11 +156,7 @@ extern {\n #[cfg(not(cfail1))]\n #[rustc_dirty(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n extern {\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn make_function_public(c: i32);\n }\n \n@@ -205,8 +171,6 @@ extern {\n #[cfg(not(cfail1))]\n #[rustc_dirty(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n extern {\n     pub fn add_function1(c: i32);\n     pub fn add_function2();\n@@ -224,8 +188,6 @@ extern {\n #[cfg(not(cfail1))]\n #[rustc_dirty(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[link_args = \"-foo -bar -baz\"]\n extern {\n     pub fn change_link_args(c: i32);\n@@ -243,8 +205,6 @@ extern {\n #[cfg(not(cfail1))]\n #[rustc_dirty(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[link(name = \"bar\")]\n extern {\n     pub fn change_link_name(c: i32);\n@@ -262,11 +222,7 @@ mod indirectly_change_parameter_type {\n \n     #[rustc_dirty(cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     extern {\n-        #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-        #[rustc_metadata_clean(cfg=\"cfail3\")]\n         pub fn indirectly_change_parameter_type(c: c_int);\n     }\n }\n@@ -282,11 +238,7 @@ mod indirectly_change_return_type {\n \n     #[rustc_dirty(cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     extern {\n-        #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-        #[rustc_metadata_clean(cfg=\"cfail3\")]\n         pub fn indirectly_change_return_type() -> c_int;\n     }\n }"}, {"sha": "763b0cd05d4f9da95d25b57f5400010ffa9e79fb", "filename": "src/test/incremental/hashes/for_loops.rs", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Ffor_loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Ffor_loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ffor_loops.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -40,8 +40,6 @@ fn change_loop_body() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_loop_body() {\n     let mut _x = 0;\n     for _ in 0..1 {\n@@ -67,8 +65,6 @@ fn change_iteration_variable_name() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_iteration_variable_name() {\n     let mut _x = 0;\n     for _a in 0..1 {\n@@ -94,8 +90,6 @@ fn change_iteration_variable_pattern() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_iteration_variable_pattern() {\n     let mut _x = 0;\n     for &_i in &[0, 1, 2] {\n@@ -121,8 +115,6 @@ fn change_iterable() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_iterable() {\n     let mut _x = 0;\n     for _ in &[0, 1, 3] {\n@@ -147,8 +139,6 @@ fn add_break() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn add_break() {\n     let mut _x = 0;\n     for _ in 0..1 {\n@@ -174,8 +164,6 @@ fn add_loop_label() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn add_loop_label() {\n     let mut _x = 0;\n     'label: for _ in 0..1 {\n@@ -201,8 +189,6 @@ fn add_loop_label_to_break() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn add_loop_label_to_break() {\n     let mut _x = 0;\n     'label: for _ in 0..1 {\n@@ -230,8 +216,6 @@ fn change_break_label() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_break_label() {\n     let mut _x = 0;\n     'outer: for _ in 0..1 {\n@@ -259,8 +243,6 @@ fn add_loop_label_to_continue() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn add_loop_label_to_continue() {\n     let mut _x = 0;\n     'label: for _ in 0..1 {\n@@ -288,8 +270,6 @@ fn change_continue_label() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_continue_label() {\n     let mut _x = 0;\n     'outer: for _ in 0..1 {\n@@ -317,8 +297,6 @@ fn change_continue_to_break() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_continue_to_break() {\n     let mut _x = 0;\n     for _ in 0..1 {"}, {"sha": "b3eb566367c725feb165ddc20349964f0dc995ca", "filename": "src/test/incremental/hashes/function_interfaces.rs", "status": "modified", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -37,8 +37,6 @@ fn add_parameter() {}\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn add_parameter(p: i32) {}\n \n \n@@ -50,8 +48,6 @@ fn add_return_type() {}\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")] // The type doesn't change, so metadata is the same\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn add_return_type() -> () {}\n \n \n@@ -63,8 +59,6 @@ fn type_of_parameter(p: i32) {}\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn type_of_parameter(p: i64) {}\n \n \n@@ -76,8 +70,6 @@ fn type_of_parameter_ref(p: &i32) {}\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn type_of_parameter_ref(p: &mut i32) {}\n \n \n@@ -89,8 +81,6 @@ fn order_of_parameters(p1: i32, p2: i64) {}\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn order_of_parameters(p2: i64, p1: i32) {}\n \n \n@@ -102,8 +92,6 @@ fn make_unsafe() {}\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n unsafe fn make_unsafe() {}\n \n \n@@ -115,8 +103,6 @@ fn make_extern() {}\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n extern fn make_extern() {}\n \n \n@@ -128,8 +114,6 @@ extern \"C\" fn make_intrinsic() {}\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n extern \"rust-intrinsic\" fn make_intrinsic() {}\n \n \n@@ -141,8 +125,6 @@ fn type_parameter() {}\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn type_parameter<T>() {}\n \n \n@@ -154,8 +136,6 @@ fn lifetime_parameter() {}\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-// #[rustc_metadata_dirty(cfg=\"cfail2\")] -- Unused lifetime params don't show up in the type?\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn lifetime_parameter<'a>() {}\n \n \n@@ -167,8 +147,6 @@ fn trait_bound<T>() {}\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn trait_bound<T: Eq>() {}\n \n \n@@ -180,8 +158,6 @@ fn builtin_bound<T>() {}\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn builtin_bound<T: Send>() {}\n \n \n@@ -193,8 +169,6 @@ fn lifetime_bound<'a, T>() {}\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn lifetime_bound<'a, T: 'a>() {}\n \n \n@@ -206,8 +180,6 @@ fn second_trait_bound<T: Eq>() {}\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn second_trait_bound<T: Eq + Clone>() {}\n \n \n@@ -219,8 +191,6 @@ fn second_builtin_bound<T: Send>() {}\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn second_builtin_bound<T: Send + Sized>() {}\n \n \n@@ -232,8 +202,6 @@ fn second_lifetime_bound<'a, 'b, T: 'a>() {}\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn second_lifetime_bound<'a, 'b, T: 'a + 'b>() {}\n \n \n@@ -245,8 +213,6 @@ fn inline() {}\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[inline]\n fn inline() {}\n \n@@ -260,8 +226,6 @@ fn inline_never() {}\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[inline(never)]\n fn inline_never() {}\n \n@@ -274,8 +238,6 @@ fn no_mangle() {}\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[no_mangle]\n fn no_mangle() {}\n \n@@ -288,8 +250,6 @@ fn linkage() {}\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[linkage=\"weak_odr\"]\n fn linkage() {}\n \n@@ -304,8 +264,6 @@ fn return_impl_trait() -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn return_impl_trait() -> impl Clone {\n     0\n }\n@@ -321,8 +279,6 @@ fn change_return_impl_trait() -> impl Clone {\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")] // The actual type is the same, so: clean\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_return_impl_trait() -> impl Copy {\n     0u32\n }\n@@ -341,8 +297,6 @@ mod change_return_type_indirectly {\n \n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn indirect_return_type() -> ReturnType {\n         ReturnType {}\n     }\n@@ -359,8 +313,6 @@ mod change_parameter_type_indirectly {\n \n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn indirect_parameter_type(p: ParameterType) {}\n }\n \n@@ -378,8 +330,6 @@ mod change_trait_bound_indirectly {\n \n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn indirect_trait_bound<T: Trait>(p: T) {}\n }\n \n@@ -394,7 +344,5 @@ mod change_trait_bound_indirectly_in_where_clause {\n \n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn indirect_trait_bound_where<T>(p: T) where T: Trait {}\n }"}, {"sha": "d6878028cfae21bbb97705db6bf4bdef8942aab1", "filename": "src/test/incremental/hashes/if_expressions.rs", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fif_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fif_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fif_expressions.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -38,8 +38,6 @@ pub fn change_condition(x: bool) -> u32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_condition(x: bool) -> u32 {\n     if !x {\n         return 1\n@@ -61,8 +59,6 @@ pub fn change_then_branch(x: bool) -> u32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_then_branch(x: bool) -> u32 {\n     if x {\n         return 2\n@@ -86,8 +82,6 @@ pub fn change_else_branch(x: bool) -> u32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_else_branch(x: bool) -> u32 {\n     if x {\n         1\n@@ -113,8 +107,6 @@ pub fn add_else_branch(x: bool) -> u32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn add_else_branch(x: bool) -> u32 {\n     let mut ret = 1;\n \n@@ -141,8 +133,6 @@ pub fn change_condition_if_let(x: Option<u32>) -> u32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_condition_if_let(x: Option<u32>) -> u32 {\n     if let Some(_) = x {\n         return 1\n@@ -166,8 +156,6 @@ pub fn change_then_branch_if_let(x: Option<u32>) -> u32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_then_branch_if_let(x: Option<u32>) -> u32 {\n     if let Some(x) = x {\n         return x + 1\n@@ -191,8 +179,6 @@ pub fn change_else_branch_if_let(x: Option<u32>) -> u32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_else_branch_if_let(x: Option<u32>) -> u32 {\n     if let Some(x) = x {\n         x\n@@ -218,8 +204,6 @@ pub fn add_else_branch_if_let(x: Option<u32>) -> u32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn add_else_branch_if_let(x: Option<u32>) -> u32 {\n     let mut ret = 1;\n "}, {"sha": "715146146f1487ae2ab4eba6d8de84615c6cc9d5", "filename": "src/test/incremental/hashes/indexing_expressions.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Findexing_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Findexing_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Findexing_expressions.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -36,8 +36,6 @@ fn change_simple_index(slice: &[u32]) -> u32 {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_simple_index(slice: &[u32]) -> u32 {\n     slice[4]\n }\n@@ -55,8 +53,6 @@ fn change_lower_bound(slice: &[u32]) -> &[u32] {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_lower_bound(slice: &[u32]) -> &[u32] {\n     &slice[2..5]\n }\n@@ -74,8 +70,6 @@ fn change_upper_bound(slice: &[u32]) -> &[u32] {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_upper_bound(slice: &[u32]) -> &[u32] {\n     &slice[3..7]\n }\n@@ -93,8 +87,6 @@ fn add_lower_bound(slice: &[u32]) -> &[u32] {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn add_lower_bound(slice: &[u32]) -> &[u32] {\n     &slice[3..4]\n }\n@@ -112,8 +104,6 @@ fn add_upper_bound(slice: &[u32]) -> &[u32] {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn add_upper_bound(slice: &[u32]) -> &[u32] {\n     &slice[3..7]\n }\n@@ -131,8 +121,6 @@ fn change_mutability(slice: &mut [u32]) -> u32 {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_mutability(slice: &mut [u32]) -> u32 {\n     (&slice[3..5])[0]\n }\n@@ -150,8 +138,6 @@ fn exclusive_to_inclusive_range(slice: &[u32]) -> &[u32] {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn exclusive_to_inclusive_range(slice: &[u32]) -> &[u32] {\n     &slice[3..=7]\n }"}, {"sha": "c8c2fa5e8c813b07079564bc6b89335b832fafc6", "filename": "src/test/incremental/hashes/inherent_impls.rs", "status": "modified", "additions": 0, "deletions": 100, "changes": 100, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -36,11 +36,8 @@ impl Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,AssociatedItemDefIds\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn method_name2() { }\n }\n \n@@ -55,13 +52,9 @@ impl Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirOptimized,MirValidated,TypeckTables\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn method_body() {\n         println!(\"Hello, world!\");\n     }\n@@ -80,13 +73,9 @@ impl Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirOptimized,MirValidated,TypeckTables\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     #[inline]\n     pub fn method_body_inlined() {\n         println!(\"Hello, world!\");\n@@ -103,13 +92,9 @@ impl Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\", except=\"AssociatedItems,Hir,HirBody\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method_privacy() { }\n }\n \n@@ -122,13 +107,9 @@ impl Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_dirty(cfg=\"cfail2\", except=\"TypeOfItem,PredicatesOfItem\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn method_selfness(&self) { }\n }\n \n@@ -141,16 +122,12 @@ impl Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_clean(\n         cfg=\"cfail2\",\n         except=\"Hir,HirBody,FnSignature,TypeckTables,MirOptimized,MirValidated\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn method_selfmutness(&mut self) { }\n }\n \n@@ -165,17 +142,12 @@ impl Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,AssociatedItemDefIds\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn add_method_to_impl1(&self) { }\n \n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn add_method_to_impl2(&self) { }\n }\n \n@@ -190,16 +162,12 @@ impl Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_clean(\n         cfg=\"cfail2\",\n         except=\"Hir,HirBody,FnSignature,TypeckTables,MirOptimized,MirValidated\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn add_method_parameter(&self, _: i32) { }\n }\n \n@@ -214,13 +182,9 @@ impl Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirOptimized,MirValidated\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn change_method_parameter_name(&self, b: i64) { }\n }\n \n@@ -235,15 +199,11 @@ impl Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_clean(\n         cfg=\"cfail2\",\n         except=\"Hir,HirBody,FnSignature,MirOptimized,MirValidated,TypeckTables\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn change_method_return_type(&self) -> u8 { 0 }\n }\n \n@@ -258,13 +218,9 @@ impl Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     #[inline]\n     pub fn make_method_inline(&self) -> u8 { 0 }\n }\n@@ -280,13 +236,9 @@ impl Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirOptimized,MirValidated\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn change_method_parameter_order(&self, b: i64, a: i64) { }\n }\n \n@@ -301,16 +253,12 @@ impl Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_clean(\n         cfg=\"cfail2\",\n         except=\"Hir,HirBody,FnSignature,TypeckTables,MirOptimized,MirValidated\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub unsafe fn make_method_unsafe(&self) { }\n }\n \n@@ -325,13 +273,9 @@ impl Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,FnSignature,TypeckTables\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub extern fn make_method_extern(&self) { }\n }\n \n@@ -346,13 +290,9 @@ impl Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,FnSignature,TypeckTables\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub extern \"system\" fn change_method_calling_convention(&self) { }\n }\n \n@@ -367,8 +307,6 @@ impl Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n     // Warning: Note that `TypeckTables` are coming up clean here.\n     // The addition or removal of lifetime parameters that don't\n@@ -381,8 +319,6 @@ impl Foo {\n     // `TypeckTables` appear dirty, that might be the cause. -nmatsakis\n     #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn add_lifetime_parameter_to_method<'a>(&self) { }\n }\n \n@@ -397,8 +333,6 @@ impl Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n     // Warning: Note that `TypeckTables` are coming up clean here.\n     // The addition or removal of type parameters that don't appear in\n@@ -414,8 +348,6 @@ impl Foo {\n         except=\"Hir,HirBody,GenericsOfItem,PredicatesOfItem,TypeOfItem\",\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn add_type_parameter_to_method<T>(&self) { }\n }\n \n@@ -430,16 +362,12 @@ impl Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_clean(\n         cfg=\"cfail2\",\n         except=\"Hir,HirBody,GenericsOfItem,PredicatesOfItem,TypeOfItem,TypeckTables\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn add_lifetime_bound_to_lifetime_param_of_method<'a, 'b: 'a>(&self) { }\n }\n \n@@ -454,8 +382,6 @@ impl Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n     // Warning: Note that `TypeckTables` are coming up clean here.\n     // The addition or removal of bounds that don't appear in the\n@@ -469,8 +395,6 @@ impl Foo {\n     #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,GenericsOfItem,PredicatesOfItem,\\\n                                         TypeOfItem\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn add_lifetime_bound_to_type_param_of_method<'a, T: 'a>(&self) { }\n }\n \n@@ -485,8 +409,6 @@ impl Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n     // Warning: Note that `TypeckTables` are coming up clean here.\n     // The addition or removal of bounds that don't appear in the\n@@ -499,8 +421,6 @@ impl Foo {\n     // appear dirty, that might be the cause. -nmatsakis\n     #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,PredicatesOfItem\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn add_trait_bound_to_type_param_of_method<T: Clone>(&self) { }\n }\n \n@@ -515,13 +435,9 @@ impl Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     #[no_mangle]\n     pub fn add_no_mangle_to_method(&self) { }\n }\n@@ -539,16 +455,12 @@ impl Bar<u32> {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,GenericsOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl<T> Bar<T> {\n     #[rustc_clean(\n         cfg=\"cfail2\",\n         except=\"GenericsOfItem,FnSignature,TypeckTables,TypeOfItem,MirOptimized,MirValidated\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn add_type_parameter_to_impl(&self) { }\n }\n \n@@ -563,13 +475,9 @@ impl Bar<u32> {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Bar<u64> {\n     #[rustc_clean(cfg=\"cfail2\", except=\"FnSignature,MirOptimized,MirValidated,TypeckTables\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn change_impl_self_type(&self) { }\n }\n \n@@ -584,13 +492,9 @@ impl<T> Bar<T> {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl<T: 'static> Bar<T> {\n     #[rustc_clean(cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn add_lifetime_bound_to_impl_parameter(&self) { }\n }\n \n@@ -605,13 +509,9 @@ impl<T> Bar<T> {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl<T: Clone> Bar<T> {\n     #[rustc_clean(cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn add_trait_bound_to_impl_parameter(&self) { }\n }\n "}, {"sha": "0947239c573c21af0de51a959954ea9d0b75e9ab", "filename": "src/test/incremental/hashes/inline_asm.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Finline_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Finline_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Finline_asm.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -48,8 +48,6 @@ fn change_template(a: i32) -> i32 {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n fn change_template(a: i32) -> i32 {\n     let c: i32;\n@@ -88,8 +86,6 @@ fn change_output(a: i32) -> i32 {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n fn change_output(a: i32) -> i32 {\n     let mut _out1: i32 = 0;\n@@ -128,8 +124,6 @@ fn change_input(_a: i32, _b: i32) -> i32 {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n fn change_input(_a: i32, _b: i32) -> i32 {\n     let _out;\n@@ -167,8 +161,6 @@ fn change_input_constraint(_a: i32, _b: i32) -> i32 {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n fn change_input_constraint(_a: i32, _b: i32) -> i32 {\n     let _out;\n@@ -206,8 +198,6 @@ fn change_clobber(_a: i32) -> i32 {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n fn change_clobber(_a: i32) -> i32 {\n     let _out;\n@@ -245,8 +235,6 @@ fn change_options(_a: i32) -> i32 {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n fn change_options(_a: i32) -> i32 {\n     let _out;"}, {"sha": "f3bddc669842b1590122cc3650975f94dfd93fa7", "filename": "src/test/incremental/hashes/let_expressions.rs", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Flet_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Flet_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Flet_expressions.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -51,8 +51,6 @@ pub fn add_type() {\n #[rustc_clean(cfg=\"cfail2\",\n     except=\"HirBody,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn add_type() {\n     let _x: u32 = 2u32;\n }\n@@ -69,8 +67,6 @@ pub fn change_type() {\n #[rustc_clean(cfg=\"cfail2\",\n     except=\"HirBody,TypeckTables,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_type() {\n     let _x: u8 = 2;\n }\n@@ -87,8 +83,6 @@ pub fn change_mutability_of_reference_type() {\n #[rustc_clean(cfg=\"cfail2\",\n     except=\"HirBody,TypeckTables,MirValidated\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_mutability_of_reference_type() {\n     let _x: &mut u64;\n }\n@@ -105,8 +99,6 @@ pub fn change_mutability_of_slot() {\n #[rustc_clean(cfg=\"cfail2\",\n     except=\"HirBody,TypeckTables,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_mutability_of_slot() {\n     let _x: u64 = 0;\n }\n@@ -123,8 +115,6 @@ pub fn change_simple_binding_to_pattern() {\n #[rustc_clean(cfg=\"cfail2\",\n     except=\"HirBody,TypeckTables,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_simple_binding_to_pattern() {\n     let (_a, _b) = (0u8, 'x');\n }\n@@ -141,8 +131,6 @@ pub fn change_name_in_pattern() {\n #[rustc_clean(cfg=\"cfail2\",\n     except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_name_in_pattern() {\n     let (_a, _c) = (1u8, 'y');\n }\n@@ -159,8 +147,6 @@ pub fn add_ref_in_pattern() {\n #[rustc_clean(cfg=\"cfail2\",\n     except=\"HirBody,TypeckTables,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn add_ref_in_pattern() {\n     let (ref _a, _b) = (1u8, 'y');\n }\n@@ -177,8 +163,6 @@ pub fn add_amp_in_pattern() {\n #[rustc_clean(cfg=\"cfail2\",\n     except=\"HirBody,TypeckTables,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn add_amp_in_pattern() {\n     let (&_a, _b) = (&1u8, 'y');\n }\n@@ -195,8 +179,6 @@ pub fn change_mutability_of_binding_in_pattern() {\n #[rustc_clean(cfg=\"cfail2\",\n     except=\"HirBody,TypeckTables,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_mutability_of_binding_in_pattern() {\n     let (mut _a, _b) = (99u8, 'q');\n }\n@@ -213,8 +195,6 @@ pub fn add_initializer() {\n #[rustc_clean(cfg=\"cfail2\",\n     except=\"HirBody,TypeckTables,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn add_initializer() {\n     let _x: i16 = 3i16;\n }\n@@ -231,8 +211,6 @@ pub fn change_initializer() {\n #[rustc_clean(cfg=\"cfail2\",\n     except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_initializer() {\n     let _x = 5u16;\n }"}, {"sha": "8d015288757bf847c8f30ecb6da4097bee2f8491", "filename": "src/test/incremental/hashes/loop_expressions.rs", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Floop_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Floop_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Floop_expressions.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -40,8 +40,6 @@ fn change_loop_body() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_loop_body() {\n     let mut _x = 0;\n     loop {\n@@ -66,8 +64,6 @@ fn add_break() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn add_break() {\n     let mut _x = 0;\n     loop {\n@@ -93,8 +89,6 @@ fn add_loop_label() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn add_loop_label() {\n     let mut _x = 0;\n     'label: loop {\n@@ -120,8 +114,6 @@ fn add_loop_label_to_break() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn add_loop_label_to_break() {\n     let mut _x = 0;\n     'label: loop {\n@@ -149,8 +141,6 @@ fn change_break_label() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_break_label() {\n     let mut _x = 0;\n     'outer: loop {\n@@ -178,8 +168,6 @@ fn add_loop_label_to_continue() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn add_loop_label_to_continue() {\n     let mut _x = 0;\n     'label: loop {\n@@ -207,8 +195,6 @@ fn change_continue_label() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_continue_label() {\n     let mut _x = 0;\n     'outer: loop {\n@@ -236,8 +222,6 @@ fn change_continue_to_break() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_continue_to_break() {\n     let mut _x = 0;\n     loop {"}, {"sha": "38edd675cc637e4daf8a8f4b0d5e5839fb8b5b13", "filename": "src/test/incremental/hashes/match_expressions.rs", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fmatch_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fmatch_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fmatch_expressions.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -39,8 +39,6 @@ pub fn add_arm(x: u32) -> u32 {\n #[rustc_clean(cfg=\"cfail2\",\n     except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn add_arm(x: u32) -> u32 {\n     match x {\n         0 => 0,\n@@ -66,8 +64,6 @@ pub fn change_order_of_arms(x: u32) -> u32 {\n #[rustc_clean(cfg=\"cfail2\",\n     except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_order_of_arms(x: u32) -> u32 {\n     match x {\n         1 => 1,\n@@ -92,8 +88,6 @@ pub fn add_guard_clause(x: u32, y: bool) -> u32 {\n #[rustc_clean(cfg=\"cfail2\",\n     except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn add_guard_clause(x: u32, y: bool) -> u32 {\n     match x {\n         0 => 0,\n@@ -118,8 +112,6 @@ pub fn change_guard_clause(x: u32, y: bool) -> u32 {\n #[rustc_clean(cfg=\"cfail2\",\n     except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_guard_clause(x: u32, y: bool) -> u32 {\n     match x {\n         0 => 0,\n@@ -144,8 +136,6 @@ pub fn add_at_binding(x: u32) -> u32 {\n #[rustc_clean(cfg=\"cfail2\",\n     except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn add_at_binding(x: u32) -> u32 {\n     match x {\n         0 => 0,\n@@ -170,8 +160,6 @@ pub fn change_name_of_at_binding(x: u32) -> u32 {\n #[rustc_clean(cfg=\"cfail2\",\n     except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_name_of_at_binding(x: u32) -> u32 {\n     match x {\n         0 => 0,\n@@ -195,8 +183,6 @@ pub fn change_simple_name_to_pattern(x: u32) -> u32 {\n #[rustc_clean(cfg=\"cfail2\",\n     except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_simple_name_to_pattern(x: u32) -> u32 {\n     match (x, x & 1) {\n         (0, 0) => 0,\n@@ -220,8 +206,6 @@ pub fn change_name_in_pattern(x: u32) -> u32 {\n #[rustc_clean(cfg=\"cfail2\",\n     except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_name_in_pattern(x: u32) -> u32 {\n     match (x, x & 1) {\n         (b, 0) => 0,\n@@ -245,8 +229,6 @@ pub fn change_mutability_of_binding_in_pattern(x: u32) -> u32 {\n #[rustc_clean(cfg=\"cfail2\",\n     except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_mutability_of_binding_in_pattern(x: u32) -> u32 {\n     match (x, x & 1) {\n         (mut a, 0) => 0,\n@@ -269,8 +251,6 @@ pub fn add_ref_to_binding_in_pattern(x: u32) -> u32 {\n #[rustc_clean(cfg=\"cfail2\",\n     except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn add_ref_to_binding_in_pattern(x: u32) -> u32 {\n     match (x, x & 1) {\n         (ref a, 0) => 0,\n@@ -293,8 +273,6 @@ pub fn add_amp_to_binding_in_pattern(x: u32) -> u32 {\n #[rustc_clean(cfg=\"cfail2\",\n except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn add_amp_to_binding_in_pattern(x: u32) -> u32 {\n     match (&x, x & 1) {\n         (&a, 0) => 0,\n@@ -318,8 +296,6 @@ pub fn change_rhs_of_arm(x: u32) -> u32 {\n #[rustc_clean(cfg=\"cfail2\",\n     except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_rhs_of_arm(x: u32) -> u32 {\n     match x {\n         0 => 0,\n@@ -344,8 +320,6 @@ pub fn add_alternative_to_arm(x: u32) -> u32 {\n #[rustc_clean(cfg=\"cfail2\",\n     except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn add_alternative_to_arm(x: u32) -> u32 {\n     match x {\n         0 | 7 => 0,"}, {"sha": "c76c10f2ab443d9d65f286b008e31d5866449fb9", "filename": "src/test/incremental/hashes/panic_exprs.rs", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fpanic_exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fpanic_exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fpanic_exprs.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -36,8 +36,6 @@ pub fn indexing(slice: &[u8]) -> u8 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn indexing(slice: &[u8]) -> u8 {\n     slice[100]\n }\n@@ -52,8 +50,6 @@ pub fn arithmetic_overflow_plus(val: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn arithmetic_overflow_plus(val: i32) -> i32 {\n     val + 1\n }\n@@ -68,8 +64,6 @@ pub fn arithmetic_overflow_minus(val: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn arithmetic_overflow_minus(val: i32) -> i32 {\n     val - 1\n }\n@@ -84,8 +78,6 @@ pub fn arithmetic_overflow_mult(val: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn arithmetic_overflow_mult(val: i32) -> i32 {\n     val * 2\n }\n@@ -100,8 +92,6 @@ pub fn arithmetic_overflow_negation(val: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn arithmetic_overflow_negation(val: i32) -> i32 {\n     -val\n }\n@@ -116,8 +106,6 @@ pub fn division_by_zero(val: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn division_by_zero(val: i32) -> i32 {\n     2 / val\n }\n@@ -131,8 +119,6 @@ pub fn mod_by_zero(val: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn mod_by_zero(val: i32) -> i32 {\n     2 % val\n }\n@@ -147,8 +133,6 @@ pub fn shift_left(val: i32, shift: usize) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn shift_left(val: i32, shift: usize) -> i32 {\n     val << shift\n }\n@@ -163,8 +147,6 @@ pub fn shift_right(val: i32, shift: usize) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn shift_right(val: i32, shift: usize) -> i32 {\n     val >> shift\n }\n@@ -181,8 +163,6 @@ pub fn bitwise(val: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn bitwise(val: i32) -> i32 {\n     !val & 0x101010101 | 0x45689 ^ 0x2372382\n }\n@@ -197,8 +177,6 @@ pub fn logical(val1: bool, val2: bool, val3: bool) -> bool {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn logical(val1: bool, val2: bool, val3: bool) -> bool {\n     val1 && val2 || val3\n }"}, {"sha": "8402da04091ece13929b08973878c89b50346b59", "filename": "src/test/incremental/hashes/panic_exprs_no_overflow_checks.rs", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fpanic_exprs_no_overflow_checks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fpanic_exprs_no_overflow_checks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fpanic_exprs_no_overflow_checks.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -43,8 +43,6 @@ pub fn indexing(slice: &[u8]) -> u8 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn indexing(slice: &[u8]) -> u8 {\n     slice[100]\n }\n@@ -60,8 +58,6 @@ pub fn arithmetic_overflow_plus_inherit(val: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[rustc_inherit_overflow_checks]\n pub fn arithmetic_overflow_plus_inherit(val: i32) -> i32 {\n     val + 1\n@@ -78,8 +74,6 @@ pub fn arithmetic_overflow_minus_inherit(val: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[rustc_inherit_overflow_checks]\n pub fn arithmetic_overflow_minus_inherit(val: i32) -> i32 {\n     val - 1\n@@ -96,8 +90,6 @@ pub fn arithmetic_overflow_mult_inherit(val: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[rustc_inherit_overflow_checks]\n pub fn arithmetic_overflow_mult_inherit(val: i32) -> i32 {\n     val * 2\n@@ -114,8 +106,6 @@ pub fn arithmetic_overflow_negation_inherit(val: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[rustc_inherit_overflow_checks]\n pub fn arithmetic_overflow_negation_inherit(val: i32) -> i32 {\n     -val\n@@ -131,8 +121,6 @@ pub fn division_by_zero(val: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn division_by_zero(val: i32) -> i32 {\n     2 / val\n }\n@@ -146,8 +134,6 @@ pub fn mod_by_zero(val: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirValidated,MirOptimized\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn mod_by_zero(val: i32) -> i32 {\n     2 % val\n }\n@@ -165,8 +151,6 @@ pub fn bitwise(val: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn bitwise(val: i32) -> i32 {\n     !val & 0x101010101 | 0x45689 ^ 0x2372382 << 1 >> 1\n }\n@@ -181,8 +165,6 @@ pub fn logical(val1: bool, val2: bool, val3: bool) -> bool {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn logical(val1: bool, val2: bool, val3: bool) -> bool {\n     val1 && val2 || val3\n }\n@@ -196,8 +178,6 @@ pub fn arithmetic_overflow_plus(val: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn arithmetic_overflow_plus(val: i32) -> i32 {\n     val + 1\n }\n@@ -212,8 +192,6 @@ pub fn arithmetic_overflow_minus(val: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn arithmetic_overflow_minus(val: i32) -> i32 {\n     val - 1\n }\n@@ -228,8 +206,6 @@ pub fn arithmetic_overflow_mult(val: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn arithmetic_overflow_mult(val: i32) -> i32 {\n     val * 2\n }\n@@ -244,8 +220,6 @@ pub fn arithmetic_overflow_negation(val: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn arithmetic_overflow_negation(val: i32) -> i32 {\n     -val\n }"}, {"sha": "e729a2c039e4c572ccbac48d01b1d801e29ec7b3", "filename": "src/test/incremental/hashes/statics.rs", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fstatics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fstatics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fstatics.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -34,8 +34,6 @@ static STATIC_VISIBILITY: u8 = 0;\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub static STATIC_VISIBILITY: u8 = 0;\n \n \n@@ -46,8 +44,6 @@ static STATIC_MUTABILITY: u8 = 0;\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n static mut STATIC_MUTABILITY: u8 = 0;\n \n \n@@ -58,8 +54,6 @@ static STATIC_LINKAGE: u8 = 0;\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[linkage=\"weak_odr\"]\n static STATIC_LINKAGE: u8 = 0;\n \n@@ -71,8 +65,6 @@ static STATIC_NO_MANGLE: u8 = 0;\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[no_mangle]\n static STATIC_NO_MANGLE: u8 = 0;\n \n@@ -84,8 +76,6 @@ static STATIC_THREAD_LOCAL: u8 = 0;\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[thread_local]\n static STATIC_THREAD_LOCAL: u8 = 0;\n \n@@ -97,8 +87,6 @@ static STATIC_CHANGE_TYPE_1: i16 = 0;\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,TypeOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n static STATIC_CHANGE_TYPE_1: u64 = 0;\n \n \n@@ -109,16 +97,12 @@ static STATIC_CHANGE_TYPE_2: Option<i8> = None;\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,TypeOfItem\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n static STATIC_CHANGE_TYPE_2: Option<u16> = None;\n \n \n // Change value between simple literals ---------------------------------------\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n static STATIC_CHANGE_VALUE_1: i16 = {\n     #[cfg(cfail1)]\n     { 1 }\n@@ -131,8 +115,6 @@ static STATIC_CHANGE_VALUE_1: i16 = {\n // Change value between expressions -------------------------------------------\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n static STATIC_CHANGE_VALUE_2: i16 = {\n     #[cfg(cfail1)]\n     { 1 + 1 }\n@@ -143,8 +125,6 @@ static STATIC_CHANGE_VALUE_2: i16 = {\n \n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n static STATIC_CHANGE_VALUE_3: i16 = {\n     #[cfg(cfail1)]\n     { 2 + 3 }\n@@ -155,8 +135,6 @@ static STATIC_CHANGE_VALUE_3: i16 = {\n \n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n static STATIC_CHANGE_VALUE_4: i16 = {\n     #[cfg(cfail1)]\n     { 1 + 2 * 3 }\n@@ -179,13 +157,9 @@ mod static_change_type_indirectly {\n \n     #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,TypeOfItem\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     static STATIC_CHANGE_TYPE_INDIRECTLY_1: Type = Type;\n \n     #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,TypeOfItem\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     static STATIC_CHANGE_TYPE_INDIRECTLY_2: Option<Type> = None;\n }"}, {"sha": "a16f4a2fdfd65c8e95c5d83f74f257a11f96334d", "filename": "src/test/incremental/hashes/struct_constructors.rs", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_constructors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_constructors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_constructors.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -44,8 +44,6 @@ pub fn change_field_value_regular_struct() -> RegularStruct {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirOptimized,MirValidated\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_field_value_regular_struct() -> RegularStruct {\n     RegularStruct {\n         x: 0,\n@@ -69,8 +67,6 @@ pub fn change_field_order_regular_struct() -> RegularStruct {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_field_order_regular_struct() -> RegularStruct {\n     RegularStruct {\n         y: 4,\n@@ -99,8 +95,6 @@ pub fn add_field_regular_struct() -> RegularStruct {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirOptimized,MirValidated,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn add_field_regular_struct() -> RegularStruct {\n     let struct1 = RegularStruct {\n         x: 3,\n@@ -136,8 +130,6 @@ pub fn change_field_label_regular_struct() -> RegularStruct {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirOptimized,MirValidated,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_field_label_regular_struct() -> RegularStruct {\n     let struct1 = RegularStruct {\n         x: 3,\n@@ -173,8 +165,6 @@ pub fn change_constructor_path_regular_struct() {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirOptimized,MirValidated,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_constructor_path_regular_struct() {\n     let _ = RegularStruct2 {\n         x: 0,\n@@ -197,8 +187,6 @@ pub mod change_constructor_path_indirectly_regular_struct {\n         except=\"FnSignature,Hir,HirBody,MirOptimized,MirValidated,TypeckTables\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn function() -> Struct {\n         Struct {\n             x: 0,\n@@ -221,8 +209,6 @@ pub fn change_field_value_tuple_struct() -> TupleStruct {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirOptimized,MirValidated\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_field_value_tuple_struct() -> TupleStruct {\n     TupleStruct(0, 1, 3)\n }\n@@ -240,8 +226,6 @@ pub fn change_constructor_path_tuple_struct() {\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,MirOptimized,MirValidated,TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_constructor_path_tuple_struct() {\n     let _ = TupleStruct2(0, 1, 2);\n }\n@@ -260,8 +244,6 @@ pub mod change_constructor_path_indirectly_tuple_struct {\n         except=\"FnSignature,Hir,HirBody,MirOptimized,MirValidated,TypeckTables\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub fn function() -> Struct {\n         Struct(0, 1, 2)\n     }"}, {"sha": "d89d779c849c3644008fafa66aa0a9e523980921", "filename": "src/test/incremental/hashes/struct_defs.rs", "status": "modified", "additions": 0, "deletions": 73, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_defs.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -45,8 +45,6 @@ pub struct LayoutPacked;\n #[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[repr(packed)]\n pub struct LayoutPacked;\n \n@@ -64,8 +62,6 @@ struct LayoutC;\n #[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n #[repr(C)]\n struct LayoutC;\n \n@@ -86,13 +82,9 @@ struct TupleStructFieldType(i32);\n #[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n // Note that changing the type of a field does not change the type of the struct or enum, but\n // adding/removing fields or changing a fields name or visibility does.\n struct TupleStructFieldType(\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     u32\n );\n \n@@ -113,13 +105,8 @@ struct TupleStructAddField(i32);\n #[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n struct TupleStructAddField(\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     i32,\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     u32\n );\n \n@@ -140,8 +127,6 @@ struct TupleStructFieldVisibility(char);\n #[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n struct TupleStructFieldVisibility(pub char);\n \n \n@@ -161,13 +146,9 @@ struct RecordStructFieldType { x: f32 }\n #[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n // Note that changing the type of a field does not change the type of the struct or enum, but\n // adding/removing fields or changing a fields name or visibility does.\n struct RecordStructFieldType {\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     x: u64\n }\n \n@@ -188,8 +169,6 @@ struct RecordStructFieldName { x: f32 }\n #[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n struct RecordStructFieldName { y: f32 }\n \n \n@@ -209,13 +188,8 @@ struct RecordStructAddField { x: f32 }\n #[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n struct RecordStructAddField {\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     x: f32,\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     y: () }\n \n \n@@ -235,11 +209,7 @@ struct RecordStructFieldVisibility { x: f32 }\n #[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n struct RecordStructFieldVisibility {\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     pub x: f32\n }\n \n@@ -260,8 +230,6 @@ struct AddLifetimeParameter<'a>(&'a f32, &'a f64);\n #[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n struct AddLifetimeParameter<'a, 'b>(&'a f32, &'b f64);\n \n \n@@ -281,14 +249,8 @@ struct AddLifetimeParameterBound<'a, 'b>(&'a f32, &'b f64);\n #[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n struct AddLifetimeParameterBound<'a, 'b: 'a>(\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     &'a f32,\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     &'b f64\n );\n \n@@ -306,14 +268,8 @@ struct AddLifetimeParameterBoundWhereClause<'a, 'b>(&'a f32, &'b f64);\n #[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n struct AddLifetimeParameterBoundWhereClause<'a, 'b>(\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     &'a f32,\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     &'b f64)\n     where 'b: 'a;\n \n@@ -334,16 +290,10 @@ struct AddTypeParameter<T1>(T1, T1);\n #[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n struct AddTypeParameter<T1, T2>(\n      // The field contains the parent's Generics, so it's dirty even though its\n      // type hasn't changed.\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     T1,\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     T2\n );\n \n@@ -364,11 +314,7 @@ struct AddTypeParameterBound<T>(T);\n #[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n struct AddTypeParameterBound<T: Send>(\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     T\n );\n \n@@ -387,11 +333,7 @@ struct AddTypeParameterBoundWhereClause<T>(T);\n #[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n struct AddTypeParameterBoundWhereClause<T>(\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     T\n ) where T: Sync;\n \n@@ -411,7 +353,6 @@ struct AddTypeParameterBoundWhereClause<T>(\n #[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n pub struct EmptyStruct;\n \n \n@@ -431,8 +372,6 @@ struct Visibility;\n #[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub struct Visibility;\n \n struct ReferencedType1;\n@@ -455,11 +394,7 @@ mod tuple_struct_change_field_type_indirectly {\n     #[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     struct TupleStruct(\n-        #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-        #[rustc_metadata_clean(cfg=\"cfail3\")]\n         FieldType\n     );\n }\n@@ -482,11 +417,7 @@ mod record_struct_change_field_type_indirectly {\n     #[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     struct RecordStruct {\n-        #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-        #[rustc_metadata_clean(cfg=\"cfail3\")]\n         _x: FieldType\n     }\n }\n@@ -514,8 +445,6 @@ mod change_trait_bound_indirectly {\n     #[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     struct Struct<T: Trait>(T);\n }\n \n@@ -536,7 +465,5 @@ mod change_trait_bound_indirectly_in_where_clause {\n     #[rustc_clean(label=\"TypeOfItem\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"GenericsOfItem\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"PredicatesOfItem\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     struct Struct<T>(T) where T : Trait;\n }"}, {"sha": "e09659be75599be99b8d3773a903b8deded581e3", "filename": "src/test/incremental/hashes/trait_defs.rs", "status": "modified", "additions": 0, "deletions": 207, "changes": 207, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -39,7 +39,6 @@ trait TraitVisibility { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub trait TraitVisibility { }\n \n \n@@ -51,8 +50,6 @@ trait TraitUnsafety { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n unsafe trait TraitUnsafety { }\n \n \n@@ -65,8 +62,6 @@ trait TraitAddMethod {\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub trait TraitAddMethod {\n     fn method();\n }\n@@ -82,8 +77,6 @@ trait TraitChangeMethodName {\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitChangeMethodName {\n     fn methodChanged();\n }\n@@ -99,13 +92,9 @@ trait TraitAddReturnType {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddReturnType {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method() -> u32;\n }\n \n@@ -120,13 +109,9 @@ trait TraitChangeReturnType {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitChangeReturnType {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method() -> u64;\n }\n \n@@ -141,13 +126,9 @@ trait TraitAddParameterToMethod {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddParameterToMethod {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method(a: u32);\n }\n \n@@ -163,22 +144,16 @@ trait TraitChangeMethodParameterName {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitChangeMethodParameterName {\n     // FIXME(#38501) This should preferably always be clean.\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method(b: u32);\n \n     #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n     #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn with_default(y: i32) {}\n }\n \n@@ -193,13 +168,9 @@ trait TraitChangeMethodParameterType {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitChangeMethodParameterType {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method(a: i64);\n }\n \n@@ -214,13 +185,9 @@ trait TraitChangeMethodParameterTypeRef {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitChangeMethodParameterTypeRef {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method(a: &mut i32);\n }\n \n@@ -235,13 +202,9 @@ trait TraitChangeMethodParametersOrder {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitChangeMethodParametersOrder {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method(b: i64, a: i32);\n }\n \n@@ -256,13 +219,9 @@ trait TraitAddMethodAutoImplementation {\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddMethodAutoImplementation {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method() { }\n }\n \n@@ -278,8 +237,6 @@ trait TraitChangeOrderOfMethods {\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitChangeOrderOfMethods {\n     fn method1();\n     fn method0();\n@@ -296,13 +253,9 @@ trait TraitChangeModeSelfRefToMut {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitChangeModeSelfRefToMut {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method(&mut self);\n }\n \n@@ -316,15 +269,11 @@ trait TraitChangeModeSelfOwnToMut: Sized {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitChangeModeSelfOwnToMut: Sized {\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n     #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method(mut self) {}\n }\n \n@@ -338,13 +287,9 @@ trait TraitChangeModeSelfOwnToRef {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitChangeModeSelfOwnToRef {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method(&self);\n }\n \n@@ -359,13 +304,9 @@ trait TraitAddUnsafeModifier {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddUnsafeModifier {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     unsafe fn method();\n }\n \n@@ -380,13 +321,9 @@ trait TraitAddExternModifier {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddExternModifier {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     extern fn method();\n }\n \n@@ -401,13 +338,9 @@ trait TraitChangeExternCToRustIntrinsic {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitChangeExternCToRustIntrinsic {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     extern \"rust-intrinsic\" fn method();\n }\n \n@@ -422,13 +355,9 @@ trait TraitAddTypeParameterToMethod {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddTypeParameterToMethod {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method<T>();\n }\n \n@@ -443,13 +372,9 @@ trait TraitAddLifetimeParameterToMethod {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddLifetimeParameterToMethod {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method<'a>();\n }\n \n@@ -468,13 +393,9 @@ trait TraitAddTraitBoundToMethodTypeParameter {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddTraitBoundToMethodTypeParameter {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method<T: ReferencedTrait0>();\n }\n \n@@ -489,13 +410,9 @@ trait TraitAddBuiltinBoundToMethodTypeParameter {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddBuiltinBoundToMethodTypeParameter {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method<T: Sized>();\n }\n \n@@ -510,13 +427,9 @@ trait TraitAddLifetimeBoundToMethodLifetimeParameter {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddLifetimeBoundToMethodLifetimeParameter {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method<'a, 'b: 'a>(a: &'a u32, b: &'b u32);\n }\n \n@@ -531,13 +444,9 @@ trait TraitAddSecondTraitBoundToMethodTypeParameter {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddSecondTraitBoundToMethodTypeParameter {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method<T: ReferencedTrait0 + ReferencedTrait1>();\n }\n \n@@ -552,13 +461,9 @@ trait TraitAddSecondBuiltinBoundToMethodTypeParameter {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddSecondBuiltinBoundToMethodTypeParameter {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method<T: Sized + Sync>();\n }\n \n@@ -573,13 +478,9 @@ trait TraitAddSecondLifetimeBoundToMethodLifetimeParameter {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddSecondLifetimeBoundToMethodLifetimeParameter {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method<'a, 'b, 'c: 'a + 'b>(a: &'a u32, b: &'b u32, c: &'c u32);\n }\n \n@@ -591,16 +492,12 @@ trait TraitAddAssociatedType {\n \n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method();\n }\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddAssociatedType {\n     type Associated;\n \n@@ -623,13 +520,9 @@ trait TraitAddTraitBoundToAssociatedType {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddTraitBoundToAssociatedType {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     type Associated: ReferencedTrait0;\n \n     fn method();\n@@ -648,13 +541,9 @@ trait TraitAddLifetimeBoundToAssociatedType<'a> {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddLifetimeBoundToAssociatedType<'a> {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     type Associated: 'a;\n \n     fn method();\n@@ -673,13 +562,9 @@ trait TraitAddDefaultToAssociatedType {\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddDefaultToAssociatedType {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     type Associated = ReferenceType0;\n \n     fn method();\n@@ -696,8 +581,6 @@ trait TraitAddAssociatedConstant {\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddAssociatedConstant {\n     const Value: u32;\n \n@@ -717,19 +600,13 @@ trait TraitAddInitializerToAssociatedConstant {\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddInitializerToAssociatedConstant {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     const Value: u32 = 1;\n \n     #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method();\n }\n \n@@ -746,19 +623,13 @@ trait TraitChangeTypeOfAssociatedConstant {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitChangeTypeOfAssociatedConstant {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     const Value: f64;\n \n     #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method();\n }\n \n@@ -771,8 +642,6 @@ trait TraitAddSuperTrait { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddSuperTrait : ReferencedTrait0 { }\n \n \n@@ -784,8 +653,6 @@ trait TraitAddBuiltiBound { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddBuiltiBound : Send { }\n \n \n@@ -797,8 +664,6 @@ trait TraitAddStaticLifetimeBound { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddStaticLifetimeBound : 'static { }\n \n \n@@ -810,8 +675,6 @@ trait TraitAddTraitAsSecondBound : ReferencedTrait0 { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddTraitAsSecondBound : ReferencedTrait0 + ReferencedTrait1 { }\n \n #[cfg(cfail1)]\n@@ -820,8 +683,6 @@ trait TraitAddTraitAsSecondBoundFromBuiltin : Send { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddTraitAsSecondBoundFromBuiltin : Send + ReferencedTrait0 { }\n \n \n@@ -833,8 +694,6 @@ trait TraitAddBuiltinBoundAsSecondBound : ReferencedTrait0 { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddBuiltinBoundAsSecondBound : ReferencedTrait0 + Send { }\n \n #[cfg(cfail1)]\n@@ -843,8 +702,6 @@ trait TraitAddBuiltinBoundAsSecondBoundFromBuiltin : Send { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddBuiltinBoundAsSecondBoundFromBuiltin: Send + Copy { }\n \n \n@@ -856,8 +713,6 @@ trait TraitAddStaticBoundAsSecondBound : ReferencedTrait0 { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddStaticBoundAsSecondBound : ReferencedTrait0 + 'static { }\n \n #[cfg(cfail1)]\n@@ -866,8 +721,6 @@ trait TraitAddStaticBoundAsSecondBoundFromBuiltin : Send { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddStaticBoundAsSecondBoundFromBuiltin : Send + 'static { }\n \n \n@@ -879,8 +732,6 @@ trait TraitAddTypeParameterToTrait { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddTypeParameterToTrait<T> { }\n \n \n@@ -892,8 +743,6 @@ trait TraitAddLifetimeParameterToTrait { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddLifetimeParameterToTrait<'a> { }\n \n \n@@ -905,8 +754,6 @@ trait TraitAddTraitBoundToTypeParameterOfTrait<T> { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddTraitBoundToTypeParameterOfTrait<T: ReferencedTrait0> { }\n \n \n@@ -918,8 +765,6 @@ trait TraitAddLifetimeBoundToTypeParameterOfTrait<'a, T> { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddLifetimeBoundToTypeParameterOfTrait<'a, T: 'a> { }\n \n \n@@ -931,8 +776,6 @@ trait TraitAddLifetimeBoundToLifetimeParameterOfTrait<'a, 'b> { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddLifetimeBoundToLifetimeParameterOfTrait<'a: 'b, 'b> { }\n \n \n@@ -944,8 +787,6 @@ trait TraitAddBuiltinBoundToTypeParameterOfTrait<T> { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddBuiltinBoundToTypeParameterOfTrait<T: Send> { }\n \n \n@@ -957,8 +798,6 @@ trait TraitAddSecondTypeParameterToTrait<T> { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddSecondTypeParameterToTrait<T, S> { }\n \n \n@@ -970,8 +809,6 @@ trait TraitAddSecondLifetimeParameterToTrait<'a> { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddSecondLifetimeParameterToTrait<'a, 'b> { }\n \n \n@@ -983,8 +820,6 @@ trait TraitAddSecondTraitBoundToTypeParameterOfTrait<T: ReferencedTrait0> { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddSecondTraitBoundToTypeParameterOfTrait<T: ReferencedTrait0 + ReferencedTrait1> { }\n \n \n@@ -996,8 +831,6 @@ trait TraitAddSecondLifetimeBoundToTypeParameterOfTrait<'a, 'b, T: 'a> { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddSecondLifetimeBoundToTypeParameterOfTrait<'a, 'b, T: 'a + 'b> { }\n \n \n@@ -1009,8 +842,6 @@ trait TraitAddSecondLifetimeBoundToLifetimeParameterOfTrait<'a: 'b, 'b, 'c> { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddSecondLifetimeBoundToLifetimeParameterOfTrait<'a: 'b + 'c, 'b, 'c> { }\n \n \n@@ -1022,8 +853,6 @@ trait TraitAddSecondBuiltinBoundToTypeParameterOfTrait<T: Send> { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddSecondBuiltinBoundToTypeParameterOfTrait<T: Send + Sync> { }\n \n \n@@ -1041,8 +870,6 @@ trait TraitAddTraitBoundToTypeParameterOfTraitWhere<T> { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddTraitBoundToTypeParameterOfTraitWhere<T> where T: ReferencedTrait0 { }\n \n \n@@ -1054,8 +881,6 @@ trait TraitAddLifetimeBoundToTypeParameterOfTraitWhere<'a, T> { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddLifetimeBoundToTypeParameterOfTraitWhere<'a, T> where T: 'a { }\n \n \n@@ -1067,8 +892,6 @@ trait TraitAddLifetimeBoundToLifetimeParameterOfTraitWhere<'a, 'b> { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddLifetimeBoundToLifetimeParameterOfTraitWhere<'a, 'b> where 'a: 'b { }\n \n \n@@ -1080,8 +903,6 @@ trait TraitAddBuiltinBoundToTypeParameterOfTraitWhere<T> { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddBuiltinBoundToTypeParameterOfTraitWhere<T> where T: Send { }\n \n \n@@ -1093,8 +914,6 @@ trait TraitAddSecondTraitBoundToTypeParameterOfTraitWhere<T> where T: Referenced\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddSecondTraitBoundToTypeParameterOfTraitWhere<T>\n     where T: ReferencedTrait0 + ReferencedTrait1 { }\n \n@@ -1107,8 +926,6 @@ trait TraitAddSecondLifetimeBoundToTypeParameterOfTraitWhere<'a, 'b, T> where T:\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddSecondLifetimeBoundToTypeParameterOfTraitWhere<'a, 'b, T> where T: 'a + 'b { }\n \n \n@@ -1120,8 +937,6 @@ trait TraitAddSecondLifetimeBoundToLifetimeParameterOfTraitWhere<'a, 'b, 'c> whe\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddSecondLifetimeBoundToLifetimeParameterOfTraitWhere<'a, 'b, 'c> where 'a: 'b + 'c { }\n \n \n@@ -1133,8 +948,6 @@ trait TraitAddSecondBuiltinBoundToTypeParameterOfTraitWhere<T> where T: Send { }\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddSecondBuiltinBoundToTypeParameterOfTraitWhere<T> where T: Send + Sync { }\n \n \n@@ -1147,13 +960,9 @@ mod change_return_type_of_method_indirectly_use {\n \n     #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     trait TraitChangeReturnType {\n         #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n         #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-        #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-        #[rustc_metadata_clean(cfg=\"cfail3\")]\n         fn method() -> ReturnType;\n     }\n }\n@@ -1169,13 +978,9 @@ mod change_method_parameter_type_indirectly_by_use {\n \n     #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     trait TraitChangeArgType {\n         #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n         #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-        #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-        #[rustc_metadata_clean(cfg=\"cfail3\")]\n         fn method(a: ArgType);\n     }\n }\n@@ -1191,13 +996,9 @@ mod change_method_parameter_type_bound_indirectly_by_use {\n \n     #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     trait TraitChangeBoundOfMethodTypeParameter {\n         #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n         #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-        #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-        #[rustc_metadata_clean(cfg=\"cfail3\")]\n         fn method<T: Bound>(a: T);\n     }\n }\n@@ -1214,13 +1015,9 @@ mod change_method_parameter_type_bound_indirectly_by_use_where {\n \n     #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     trait TraitChangeBoundOfMethodTypeParameterWhere {\n         #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n         #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-        #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-        #[rustc_metadata_clean(cfg=\"cfail3\")]\n         fn method<T>(a: T) where T: Bound;\n     }\n }\n@@ -1236,8 +1033,6 @@ mod change_method_type_parameter_bound_indirectly {\n \n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     trait TraitChangeTraitBound<T: Bound> {\n         fn method(a: T);\n     }\n@@ -1255,8 +1050,6 @@ mod change_method_type_parameter_bound_indirectly_where {\n \n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     trait TraitChangeTraitBoundWhere<T> where T: Bound {\n         fn method(a: T);\n     }"}, {"sha": "eb31175b6f2573fc2b9c6cbf5fe5e9d503f36878", "filename": "src/test/incremental/hashes/trait_impls.rs", "status": "modified", "additions": 0, "deletions": 74, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -43,22 +43,16 @@ impl ChangeMethodNameTrait for Foo {\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub trait ChangeMethodNameTrait {\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method_name2();\n }\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl ChangeMethodNameTrait for Foo {\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method_name2() { }\n }\n \n@@ -78,15 +72,11 @@ impl ChangeMethodBodyTrait for Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl ChangeMethodBodyTrait for Foo {\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n     #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method_name() {\n         ()\n     }\n@@ -109,15 +99,11 @@ impl ChangeMethodBodyTraitInlined for Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl ChangeMethodBodyTraitInlined for Foo {\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n     #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     #[inline]\n     fn method_name() {\n         panic!()\n@@ -144,13 +130,9 @@ pub trait ChangeMethodSelfnessTrait {\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl ChangeMethodSelfnessTrait for Foo {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method_name(&self) {\n         ()\n     }\n@@ -176,13 +158,9 @@ pub trait RemoveMethodSelfnessTrait {\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl RemoveMethodSelfnessTrait for Foo {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method_name() {}\n }\n \n@@ -206,13 +184,9 @@ pub trait ChangeMethodSelfmutnessTrait {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl ChangeMethodSelfmutnessTrait for Foo {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method_name(&mut self) {}\n }\n \n@@ -236,8 +210,6 @@ pub trait ChangeItemKindTrait {\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl ChangeItemKindTrait for Foo {\n     type name = ();\n }\n@@ -264,8 +236,6 @@ pub trait RemoveItemTrait {\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl RemoveItemTrait for Foo {\n     type TypeName = ();\n }\n@@ -291,8 +261,6 @@ pub trait AddItemTrait {\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl AddItemTrait for Foo {\n     type TypeName = ();\n     fn method_name() { }\n@@ -313,21 +281,15 @@ impl ChangeHasValueTrait for Foo {\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub trait ChangeHasValueTrait {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method_name() { }\n }\n \n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl ChangeHasValueTrait for Foo {\n     fn method_name() { }\n }\n@@ -346,13 +308,9 @@ impl AddDefaultTrait for Foo {\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl AddDefaultTrait for Foo {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     default fn method_name() { }\n }\n \n@@ -376,13 +334,9 @@ pub trait AddArgumentTrait {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl AddArgumentTrait for Foo {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method_name(&self, _x: u32) { }\n }\n \n@@ -406,13 +360,9 @@ pub trait ChangeArgumentTypeTrait {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl ChangeArgumentTypeTrait for Foo {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn method_name(&self, _x: char) { }\n }\n \n@@ -433,13 +383,9 @@ impl AddTypeParameterToImpl<u32> for Bar<u32> {\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl<T> AddTypeParameterToImpl<T> for Bar<T> {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn id(t: T) -> T { t }\n }\n \n@@ -458,13 +404,9 @@ impl ChangeSelfTypeOfImpl for u32 {\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl ChangeSelfTypeOfImpl for u64 {\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn id(self) -> Self { self }\n }\n \n@@ -483,13 +425,9 @@ impl<T> AddLifetimeBoundToImplParameter for T {\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl<T: 'static> AddLifetimeBoundToImplParameter for T {\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn id(self) -> Self { self }\n }\n \n@@ -508,13 +446,9 @@ impl<T> AddTraitBoundToImplParameter for T {\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_dirty(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl<T: Clone> AddTraitBoundToImplParameter for T {\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     fn id(self) -> Self { self }\n }\n \n@@ -533,13 +467,9 @@ impl AddNoMangleToMethod for Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl AddNoMangleToMethod for Foo {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     #[no_mangle]\n     fn add_no_mangle_to_method(&self) { }\n }\n@@ -558,13 +488,9 @@ impl MakeMethodInline for Foo {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n impl MakeMethodInline for Foo {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     #[inline]\n     fn make_method_inline(&self) -> u8 { 0 }\n }"}, {"sha": "59346f5fdb23e4015bf2b72aeea0820662ff987e", "filename": "src/test/incremental/hashes/type_defs.rs", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Ftype_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Ftype_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftype_defs.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -37,7 +37,6 @@ type ChangePrimitiveType = i32;\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n type ChangePrimitiveType = i64;\n \n \n@@ -49,7 +48,6 @@ type ChangeMutability = &'static i32;\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n type ChangeMutability = &'static mut i32;\n \n \n@@ -61,7 +59,6 @@ type ChangeLifetime<'a> = (&'static i32, &'a i32);\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n type ChangeLifetime<'a> = (&'a i32, &'a i32);\n \n \n@@ -76,7 +73,6 @@ type ChangeTypeStruct = Struct1;\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n type ChangeTypeStruct = Struct2;\n \n \n@@ -88,7 +84,6 @@ type ChangeTypeTuple = (u32, u64);\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n type ChangeTypeTuple = (u32, i64);\n \n \n@@ -109,7 +104,6 @@ type ChangeTypeEnum = Enum1;\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n type ChangeTypeEnum = Enum2;\n \n \n@@ -121,7 +115,6 @@ type AddTupleField = (i32, i64);\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n type AddTupleField = (i32, i64, i16);\n \n \n@@ -133,7 +126,6 @@ type ChangeNestedTupleField = (i32, (i64, i16));\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n type ChangeNestedTupleField = (i32, (i64, i8));\n \n \n@@ -145,7 +137,6 @@ type AddTypeParam<T1> = (T1, T1);\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n type AddTypeParam<T1, T2> = (T1, T2);\n \n \n@@ -157,7 +148,6 @@ type AddTypeParamBound<T1> = (T1, u32);\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n type AddTypeParamBound<T1: Clone> = (T1, u32);\n \n \n@@ -169,7 +159,6 @@ type AddTypeParamBoundWhereClause<T1> where T1: Clone = (T1, u32);\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n type AddTypeParamBoundWhereClause<T1> where T1: Clone+Copy = (T1, u32);\n \n \n@@ -181,7 +170,6 @@ type AddLifetimeParam<'a> = (&'a u32, &'a u32);\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n type AddLifetimeParam<'a, 'b> = (&'a u32, &'b u32);\n \n \n@@ -193,7 +181,6 @@ type AddLifetimeParamBound<'a, 'b> = (&'a u32, &'b u32);\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n type AddLifetimeParamBound<'a, 'b: 'a> = (&'a u32, &'b u32);\n \n \n@@ -207,7 +194,6 @@ where 'b: 'a\n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n type AddLifetimeParamBoundWhereClause<'a, 'b, 'c>\n where 'b: 'a,\n       'c: 'a\n@@ -227,8 +213,6 @@ mod change_trait_bound_indirectly {\n \n     #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     type ChangeTraitBoundIndirectly<T: Trait> = (T, u32);\n }\n \n@@ -243,7 +227,5 @@ mod change_trait_bound_indirectly_in_where_clause {\n \n     #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    #[rustc_metadata_clean(cfg=\"cfail3\")]\n     type ChangeTraitBoundIndirectly<T> where T : Trait = (T, u32);\n }"}, {"sha": "ec4ae62b12b133d42687bcd70ed0aa25bf4b051f", "filename": "src/test/incremental/hashes/unary_and_binary_exprs.rs", "status": "modified", "additions": 0, "deletions": 56, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Funary_and_binary_exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Funary_and_binary_exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Funary_and_binary_exprs.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -34,8 +34,6 @@ pub fn const_negation() -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn const_negation() -> i32 {\n     -1\n }\n@@ -51,8 +49,6 @@ pub fn const_bitwise_not() -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn const_bitwise_not() -> i32 {\n     !99\n }\n@@ -68,8 +64,6 @@ pub fn var_negation(x: i32, y: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn var_negation(x: i32, y: i32) -> i32 {\n     -y\n }\n@@ -85,8 +79,6 @@ pub fn var_bitwise_not(x: i32, y: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn var_bitwise_not(x: i32, y: i32) -> i32 {\n     !y\n }\n@@ -102,8 +94,6 @@ pub fn var_deref(x: &i32, y: &i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated,TypeckTables\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn var_deref(x: &i32, y: &i32) -> i32 {\n     *y\n }\n@@ -119,8 +109,6 @@ pub fn first_const_add() -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn first_const_add() -> i32 {\n     2 + 3\n }\n@@ -136,8 +124,6 @@ pub fn second_const_add() -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn second_const_add() -> i32 {\n     1 + 3\n }\n@@ -153,8 +139,6 @@ pub fn first_var_add(a: i32, b: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn first_var_add(a: i32, b: i32) -> i32 {\n     b + 2\n }\n@@ -170,8 +154,6 @@ pub fn second_var_add(a: i32, b: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn second_var_add(a: i32, b: i32) -> i32 {\n     1 + b\n }\n@@ -187,8 +169,6 @@ pub fn plus_to_minus(a: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn plus_to_minus(a: i32) -> i32 {\n     1 - a\n }\n@@ -204,8 +184,6 @@ pub fn plus_to_mult(a: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn plus_to_mult(a: i32) -> i32 {\n     1 * a\n }\n@@ -221,8 +199,6 @@ pub fn plus_to_div(a: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn plus_to_div(a: i32) -> i32 {\n     1 / a\n }\n@@ -238,8 +214,6 @@ pub fn plus_to_mod(a: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn plus_to_mod(a: i32) -> i32 {\n     1 % a\n }\n@@ -255,8 +229,6 @@ pub fn and_to_or(a: bool, b: bool) -> bool {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn and_to_or(a: bool, b: bool) -> bool {\n     a || b\n }\n@@ -272,8 +244,6 @@ pub fn bitwise_and_to_bitwise_or(a: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn bitwise_and_to_bitwise_or(a: i32) -> i32 {\n     1 | a\n }\n@@ -289,8 +259,6 @@ pub fn bitwise_and_to_bitwise_xor(a: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn bitwise_and_to_bitwise_xor(a: i32) -> i32 {\n     1 ^ a\n }\n@@ -306,8 +274,6 @@ pub fn bitwise_and_to_lshift(a: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn bitwise_and_to_lshift(a: i32) -> i32 {\n     a << 1\n }\n@@ -323,8 +289,6 @@ pub fn bitwise_and_to_rshift(a: i32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn bitwise_and_to_rshift(a: i32) -> i32 {\n     a >> 1\n }\n@@ -340,8 +304,6 @@ pub fn eq_to_uneq(a: i32) -> bool {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn eq_to_uneq(a: i32) -> bool {\n     a != 1\n }\n@@ -357,8 +319,6 @@ pub fn eq_to_lt(a: i32) -> bool {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn eq_to_lt(a: i32) -> bool {\n     a < 1\n }\n@@ -374,8 +334,6 @@ pub fn eq_to_gt(a: i32) -> bool {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn eq_to_gt(a: i32) -> bool {\n     a > 1\n }\n@@ -391,8 +349,6 @@ pub fn eq_to_le(a: i32) -> bool {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn eq_to_le(a: i32) -> bool {\n     a <= 1\n }\n@@ -408,8 +364,6 @@ pub fn eq_to_ge(a: i32) -> bool {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn eq_to_ge(a: i32) -> bool {\n     a >= 1\n }\n@@ -427,8 +381,6 @@ pub fn type_cast(a: u8) -> u64 {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated,TypeckTables\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn type_cast(a: u8) -> u64 {\n     let b = a as u32;\n     let c = b as u64;\n@@ -446,8 +398,6 @@ pub fn value_cast(a: u32) -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn value_cast(a: u32) -> i32 {\n     2 as i32\n }\n@@ -466,8 +416,6 @@ pub fn lvalue() -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn lvalue() -> i32 {\n     let mut x = 10;\n     let mut y = 11;\n@@ -488,8 +436,6 @@ pub fn rvalue() -> i32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn rvalue() -> i32 {\n     let mut x = 10;\n     x = 8;\n@@ -507,8 +453,6 @@ pub fn index_to_slice(s: &[u8], i: usize, j: usize) -> u8 {\n #[cfg(not(cfail1))]\n #[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn index_to_slice(s: &[u8], i: usize, j: usize) -> u8 {\n     s[j]\n }"}, {"sha": "eae5aea651075d96bd5bab54129ba5db379b63fe", "filename": "src/test/incremental/hashes/while_let_loops.rs", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_let_loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_let_loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_let_loops.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -40,8 +40,6 @@ fn change_loop_body() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_loop_body() {\n     let mut _x = 0;\n     while let Some(0u32) = None {\n@@ -67,8 +65,6 @@ fn change_loop_condition() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_loop_condition() {\n     let mut _x = 0;\n     while let Some(1u32) = None {\n@@ -93,8 +89,6 @@ fn add_break() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn add_break() {\n     let mut _x = 0;\n     while let Some(0u32) = None {\n@@ -120,8 +114,6 @@ fn add_loop_label() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn add_loop_label() {\n     let mut _x = 0;\n     'label: while let Some(0u32) = None {\n@@ -147,8 +139,6 @@ fn add_loop_label_to_break() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn add_loop_label_to_break() {\n     let mut _x = 0;\n     'label: while let Some(0u32) = None {\n@@ -176,8 +166,6 @@ fn change_break_label() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_break_label() {\n     let mut _x = 0;\n     'outer: while let Some(0u32) = None {\n@@ -205,8 +193,6 @@ fn add_loop_label_to_continue() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn add_loop_label_to_continue() {\n     let mut _x = 0;\n     'label: while let Some(0u32) = None {\n@@ -234,8 +220,6 @@ fn change_continue_label() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_continue_label() {\n     let mut _x = 0;\n     'outer: while let Some(0u32) = None {\n@@ -263,8 +247,6 @@ fn change_continue_to_break() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_continue_to_break() {\n     let mut _x = 0;\n     while let Some(0u32) = None {"}, {"sha": "6b1898e401b247b1d725c627e1b0b2da63311b14", "filename": "src/test/incremental/hashes/while_loops.rs", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_loops.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -40,8 +40,6 @@ fn change_loop_body() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_loop_body() {\n     let mut _x = 0;\n     while true {\n@@ -67,8 +65,6 @@ fn change_loop_condition() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_loop_condition() {\n     let mut _x = 0;\n     while false {\n@@ -93,8 +89,6 @@ fn add_break() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn add_break() {\n     let mut _x = 0;\n     while true {\n@@ -120,8 +114,6 @@ fn add_loop_label() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn add_loop_label() {\n     let mut _x = 0;\n     'label: while true {\n@@ -147,8 +139,6 @@ fn add_loop_label_to_break() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn add_loop_label_to_break() {\n     let mut _x = 0;\n     'label: while true {\n@@ -176,8 +166,6 @@ fn change_break_label() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_break_label() {\n     let mut _x = 0;\n     'outer: while true {\n@@ -205,8 +193,6 @@ fn add_loop_label_to_continue() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn add_loop_label_to_continue() {\n     let mut _x = 0;\n     'label: while true {\n@@ -234,8 +220,6 @@ fn change_continue_label() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_continue_label() {\n     let mut _x = 0;\n     'outer: while true {\n@@ -263,8 +247,6 @@ fn change_continue_to_break() {\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-#[rustc_metadata_clean(cfg=\"cfail2\")]\n-#[rustc_metadata_clean(cfg=\"cfail3\")]\n fn change_continue_to_break() {\n     let mut _x = 0;\n     while true {"}, {"sha": "ce7f5792cea9e72b1677d85fed793f847174923b", "filename": "src/test/incremental/remapped_paths_cc/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fremapped_paths_cc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebccbb7a4003e036cae61c575ac7edb871a8259/src%2Ftest%2Fincremental%2Fremapped_paths_cc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fremapped_paths_cc%2Fmain.rs?ref=7ebccbb7a4003e036cae61c575ac7edb871a8259", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // revisions:rpass1 rpass2 rpass3\n-// compile-flags: -Z query-dep-graph -g -Zincremental-cc\n+// compile-flags: -Z query-dep-graph -g\n // aux-build:extern_crate.rs\n \n // This test case makes sure that we detect if paths emitted into debuginfo"}, {"sha": "917c2c9dbce4f10434ebb49e6b7984d7414785f9", "filename": "src/test/incremental/unchecked_dirty_clean_metadata.rs", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/c60b0e43c87c5f46337b3792136ebd9b2aa74417/src%2Ftest%2Fincremental%2Funchecked_dirty_clean_metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c60b0e43c87c5f46337b3792136ebd9b2aa74417/src%2Ftest%2Fincremental%2Funchecked_dirty_clean_metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Funchecked_dirty_clean_metadata.rs?ref=c60b0e43c87c5f46337b3792136ebd9b2aa74417", "patch": "@@ -1,35 +0,0 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// revisions: rpass1 cfail2\n-// compile-flags: -Z query-dep-graph\n-\n-#![allow(warnings)]\n-#![feature(rustc_attrs)]\n-\n-// Sanity check for the dirty-clean system. We add\n-// #[rustc_metadata_dirty]/#[rustc_metadata_clean] attributes in places that\n-// are not checked and make sure that this causes an error.\n-\n-fn main() {\n-\n-    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n-    //[cfail2]~^ ERROR found unchecked #[rustc_dirty]/#[rustc_clean] attribute\n-    {\n-        // empty block\n-    }\n-\n-    #[rustc_metadata_clean(cfg=\"cfail2\")]\n-    //[cfail2]~^ ERROR found unchecked #[rustc_dirty]/#[rustc_clean] attribute\n-    {\n-        // empty block\n-    }\n-}\n-"}]}