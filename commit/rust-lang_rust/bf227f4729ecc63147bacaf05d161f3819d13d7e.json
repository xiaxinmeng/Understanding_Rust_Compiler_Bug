{"sha": "bf227f4729ecc63147bacaf05d161f3819d13d7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMjI3ZjQ3MjllY2M2MzE0N2JhY2FmMDVkMTYxZjM4MTlkMTNkN2U=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-05-24T16:25:25Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-05-27T11:03:58Z"}, "message": "split clippy into lints, plugin and cargo-clippy", "tree": {"sha": "7dc9c4803e4046b6324b7842098153c7584d1abf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7dc9c4803e4046b6324b7842098153c7584d1abf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf227f4729ecc63147bacaf05d161f3819d13d7e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXSCmeAAoJEFbW7qD8Z6xGJKIQAIhivJG/VGnCKKWxyLfIfvWx\nYMx49VoA4jCGtWcrfKv5o38sjcjUBY6NfxoiBsxJM46z0Ayh3IYyAsFohkRmDOeS\nNV7ZMoZFgIIsG4b4JJm5ULqmwi40pB3Sxwx0cTvFOA7J1dZMu869HkpiPmLUIV6L\nBXnaxNgkMk1wCCUsCJ2OCr6fNUBZ394a2WNTA4KI7LaNkDLmllMOGhiiLXH5+igZ\nWgV9jazwe4Hi/hUucfNLNVShoDmjcWmNJTsYIi6fcordH8biq275eeRc+qtUjkI4\nzfFEn0YDxi8NMQbUJPvIHYIuZ26G9vX+ingVFvgwUQxKMDHKESAIs678Mxx/ila0\n5hwnOSzDnWHHmMVy5fCAwqDrHh1b0RShWz+JQ7LjSpNP2rf1DX8ZV5oaaY6SAvCm\nvz8MSOnFjhbORhqbJxwGvgEvofZDn7ha5/TqNSMPSfdn6+1py3/5nBkJD7IK/jrf\nsCwIpQdpvmoweySiCEo87uhHx8LA6qCnatKe9TGJufFjVLv+nvahWKCWZlFC6aMz\nWOeac5p/Lczv+U7rd80z42i6SIXimwVCZaGyUIKvWHY+f2AtjBiUWZCdEOmr/Xg+\nSan+JsaCEwAhfnRgVQwvmFw/28Jyqi8zepCXxbawzRAIQz0HJpKkSWZMiGfAbjTI\nBtoqSRadtd1wu/42bspM\n=vzQT\n-----END PGP SIGNATURE-----", "payload": "tree 7dc9c4803e4046b6324b7842098153c7584d1abf\nparent ef4601515136782cf103706619141dad39a35369\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1464107125 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1464347038 +0200\n\nsplit clippy into lints, plugin and cargo-clippy\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf227f4729ecc63147bacaf05d161f3819d13d7e", "html_url": "https://github.com/rust-lang/rust/commit/bf227f4729ecc63147bacaf05d161f3819d13d7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf227f4729ecc63147bacaf05d161f3819d13d7e/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef4601515136782cf103706619141dad39a35369", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef4601515136782cf103706619141dad39a35369", "html_url": "https://github.com/rust-lang/rust/commit/ef4601515136782cf103706619141dad39a35369"}], "stats": {"total": 1181, "additions": 647, "deletions": 534}, "files": [{"sha": "2db1ec5144f436e06c031554e9230afcb103f0fa", "filename": ".gitignore", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "patch": "@@ -9,6 +9,7 @@\n \n # Generated by Cargo\n /target/\n+/clippy_lints/target/\n \n # We don't pin yet\n Cargo.lock"}, {"sha": "3a45da08f8936402d024a8ea4e6a5349bc8e5b68", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "patch": "@@ -20,7 +20,6 @@ test = false\n \n [[bin]]\n name = \"cargo-clippy\"\n-path = \"src/lib.rs\"\n test = false\n \n [dependencies]\n@@ -30,6 +29,7 @@ semver = \"0.2.1\"\n toml = \"0.1\"\n unicode-normalization = \"0.1\"\n quine-mc_cluskey = \"0.2.2\"\n+clippy_lints = { version = \"0.0.*\", path = \"clippy_lints\" }\n \n [dev-dependencies]\n compiletest_rs = \"0.1.0\""}, {"sha": "da10ca0c0b7af826249e1460dcb7a58b285dc065", "filename": "clippy_lints/Cargo.toml", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2FCargo.toml?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "patch": "@@ -0,0 +1,24 @@\n+[package]\n+name = \"clippy_lints\"\n+version = \"0.0.69\"\n+authors = [\n+\t\"Manish Goregaokar <manishsmail@gmail.com>\",\n+\t\"Andre Bogus <bogusandre@gmail.com>\",\n+\t\"Georg Brandl <georg@python.org>\",\n+\t\"Martin Carton <cartonmartin@gmail.com>\"\n+]\n+description = \"A bunch of helpful lints to avoid common pitfalls in Rust\"\n+repository = \"https://github.com/Manishearth/rust-clippy\"\n+readme = \"README.md\"\n+license = \"MPL-2.0\"\n+keywords = [\"clippy\", \"lint\", \"plugin\"]\n+\n+[dependencies]\n+regex-syntax = \"0.3.0\"\n+semver = \"0.2.1\"\n+toml = \"0.1\"\n+unicode-normalization = \"0.1\"\n+quine-mc_cluskey = \"0.2.2\"\n+\n+[features]\n+debugging = []"}, {"sha": "731f1a45d09459685390766e6044b3a1b7a41e3b", "filename": "clippy_lints/src/approx_const.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fapprox_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fapprox_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fapprox_const.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/approx_const.rs"}, {"sha": "be732740442707bc5db37e96f60f4b8e611e0d6d", "filename": "clippy_lints/src/arithmetic.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Farithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Farithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Farithmetic.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/arithmetic.rs"}, {"sha": "ce2b9a7d6c00e530b1c33d3e76b8ff6fe5268f66", "filename": "clippy_lints/src/array_indexing.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Farray_indexing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Farray_indexing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Farray_indexing.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/array_indexing.rs"}, {"sha": "2b1aec83e4cc293f24871cc684672c88d08847e3", "filename": "clippy_lints/src/assign_ops.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassign_ops.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/assign_ops.rs"}, {"sha": "0cf62633de4e070274f367de195c8e383f9cc118", "filename": "clippy_lints/src/attrs.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/attrs.rs"}, {"sha": "aec0990dcc68ac24a2975305121720852b5fd27e", "filename": "clippy_lints/src/bit_mask.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fbit_mask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fbit_mask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbit_mask.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/bit_mask.rs"}, {"sha": "5cb84f62651b29d042e6a306268fc5259a97a80e", "filename": "clippy_lints/src/blacklisted_name.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fblacklisted_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fblacklisted_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fblacklisted_name.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/blacklisted_name.rs"}, {"sha": "c56cf4dcd29237a623a853cbb9c819558b8f4f00", "filename": "clippy_lints/src/block_in_if_condition.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/block_in_if_condition.rs"}, {"sha": "9ab806f66ec559fdca5cf1c6bdfe705e6633b578", "filename": "clippy_lints/src/booleans.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbooleans.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/booleans.rs"}, {"sha": "38e04723e53024780edb4c8a3994428a18c878cc", "filename": "clippy_lints/src/collapsible_if.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fcollapsible_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fcollapsible_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcollapsible_if.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/collapsible_if.rs"}, {"sha": "96956d1793b6fafcde17dd1b6ed4e9633d9693fc", "filename": "clippy_lints/src/consts.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/consts.rs"}, {"sha": "4344ba461dd3bcc9f5ee361daa861f0ed9c67d1d", "filename": "clippy_lints/src/copies.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopies.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/copies.rs"}, {"sha": "8ae0d2c97c50f5eb5d2b1fcf689bf503a41183e1", "filename": "clippy_lints/src/cyclomatic_complexity.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fcyclomatic_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fcyclomatic_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcyclomatic_complexity.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/cyclomatic_complexity.rs"}, {"sha": "abdb6297b9eec7402d325e5758278395c64d803f", "filename": "clippy_lints/src/deprecated_lints.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fdeprecated_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fdeprecated_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdeprecated_lints.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/deprecated_lints.rs"}, {"sha": "f08522953aa641599dd697e74dfb0d9716e7fae2", "filename": "clippy_lints/src/derive.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/derive.rs"}, {"sha": "cf32c1731fa3124a55c6544c8b47036838e00361", "filename": "clippy_lints/src/doc.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/doc.rs"}, {"sha": "69156f15f31767defe95506365ccd5b87d66e46c", "filename": "clippy_lints/src/drop_ref.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fdrop_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fdrop_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdrop_ref.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/drop_ref.rs"}, {"sha": "d63d8c67c5d37955656bfbb90e4aabb1d440a440", "filename": "clippy_lints/src/entry.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fentry.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/entry.rs"}, {"sha": "39c31864f397b141f9271fb8c8a17e3f3b016d69", "filename": "clippy_lints/src/enum_clike.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fenum_clike.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fenum_clike.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_clike.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/enum_clike.rs"}, {"sha": "37a89069d1927d3c9c5d18ebeab5bed5106af5e6", "filename": "clippy_lints/src/enum_glob_use.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fenum_glob_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fenum_glob_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_glob_use.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/enum_glob_use.rs"}, {"sha": "67a8495e1557e6c6d92cacbfab540f8a2342647b", "filename": "clippy_lints/src/enum_variants.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_variants.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/enum_variants.rs"}, {"sha": "fb06639853cd5b648b78117ce650cc9af6487152", "filename": "clippy_lints/src/eq_op.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feq_op.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/eq_op.rs"}, {"sha": "b5172269a1e96bc806bf789967550d9092b046fd", "filename": "clippy_lints/src/escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/escape.rs"}, {"sha": "f73b6cfed2d747b07fa53c143c86800714d01c19", "filename": "clippy_lints/src/eta_reduction.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feta_reduction.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/eta_reduction.rs"}, {"sha": "0726fcaeab71eeb6bd317fb1a7b3f6986f9ccb41", "filename": "clippy_lints/src/format.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/format.rs"}, {"sha": "aa6dd46cf0b979299c143fbd88752381fd951f1b", "filename": "clippy_lints/src/formatting.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformatting.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/formatting.rs"}, {"sha": "d93344472269dad0546f50827f41605445cf375a", "filename": "clippy_lints/src/functions.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/functions.rs"}, {"sha": "4c1f01b7385812c483d273eae8ef157596a74c20", "filename": "clippy_lints/src/identity_op.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fidentity_op.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/identity_op.rs"}, {"sha": "d78eba9877b3619482d929271b25e500a20982b8", "filename": "clippy_lints/src/if_not_else.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fif_not_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fif_not_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_not_else.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/if_not_else.rs"}, {"sha": "2e6b33ab3903d053b90730e5b5630645b184c9c7", "filename": "clippy_lints/src/items_after_statements.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fitems_after_statements.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fitems_after_statements.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fitems_after_statements.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/items_after_statements.rs"}, {"sha": "b6dea8316901c083ed1f78ed90a8732c1019aaf9", "filename": "clippy_lints/src/len_zero.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flen_zero.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/len_zero.rs"}, {"sha": "f6db7a3a1880fd6600eb54aa73ef2edb0cc727e2", "filename": "clippy_lints/src/lib.rs", "status": "added", "additions": 416, "deletions": 0, "changes": 416, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "patch": "@@ -0,0 +1,416 @@\n+// error-pattern:cargo-clippy\n+\n+#![feature(type_macros)]\n+#![feature(plugin_registrar, box_syntax)]\n+#![feature(rustc_private, collections)]\n+#![feature(iter_arith)]\n+#![feature(custom_attribute)]\n+#![feature(slice_patterns)]\n+#![feature(question_mark)]\n+#![feature(stmt_expr_attributes)]\n+#![allow(indexing_slicing, shadow_reuse, unknown_lints)]\n+\n+extern crate rustc_driver;\n+extern crate getopts;\n+\n+#[macro_use]\n+extern crate syntax;\n+#[macro_use]\n+extern crate rustc;\n+\n+extern crate toml;\n+\n+// Only for the compile time checking of paths\n+extern crate core;\n+extern crate collections;\n+\n+// for unicode nfc normalization\n+extern crate unicode_normalization;\n+\n+// for semver check in attrs.rs\n+extern crate semver;\n+\n+// for regex checking\n+extern crate regex_syntax;\n+\n+// for finding minimal boolean expressions\n+extern crate quine_mc_cluskey;\n+\n+extern crate rustc_plugin;\n+extern crate rustc_const_eval;\n+extern crate rustc_const_math;\n+\n+macro_rules! declare_restriction_lint {\n+    { pub $name:tt, $description:tt } => {\n+        declare_lint! { pub $name, Allow, $description }\n+    };\n+}\n+\n+pub mod consts;\n+#[macro_use]\n+pub mod utils;\n+\n+// begin lints modules, do not remove this comment, it\u2019s used in `update_lints`\n+pub mod approx_const;\n+pub mod arithmetic;\n+pub mod array_indexing;\n+pub mod assign_ops;\n+pub mod attrs;\n+pub mod bit_mask;\n+pub mod blacklisted_name;\n+pub mod block_in_if_condition;\n+pub mod booleans;\n+pub mod collapsible_if;\n+pub mod copies;\n+pub mod cyclomatic_complexity;\n+pub mod derive;\n+pub mod doc;\n+pub mod drop_ref;\n+pub mod entry;\n+pub mod enum_clike;\n+pub mod enum_glob_use;\n+pub mod enum_variants;\n+pub mod eq_op;\n+pub mod escape;\n+pub mod eta_reduction;\n+pub mod format;\n+pub mod formatting;\n+pub mod functions;\n+pub mod identity_op;\n+pub mod if_not_else;\n+pub mod items_after_statements;\n+pub mod len_zero;\n+pub mod lifetimes;\n+pub mod loops;\n+pub mod map_clone;\n+pub mod matches;\n+pub mod mem_forget;\n+pub mod methods;\n+pub mod minmax;\n+pub mod misc;\n+pub mod misc_early;\n+pub mod mut_mut;\n+pub mod mut_reference;\n+pub mod mutex_atomic;\n+pub mod needless_bool;\n+pub mod needless_borrow;\n+pub mod needless_update;\n+pub mod neg_multiply;\n+pub mod new_without_default;\n+pub mod no_effect;\n+pub mod non_expressive_names;\n+pub mod open_options;\n+pub mod overflow_check_conditional;\n+pub mod panic;\n+pub mod precedence;\n+pub mod print;\n+pub mod ptr_arg;\n+pub mod ranges;\n+pub mod regex;\n+pub mod returns;\n+pub mod shadow;\n+pub mod strings;\n+pub mod swap;\n+pub mod temporary_assignment;\n+pub mod transmute;\n+pub mod types;\n+pub mod unicode;\n+pub mod unsafe_removed_from_name;\n+pub mod unused_label;\n+pub mod vec;\n+pub mod zero_div_zero;\n+// end lints modules, do not remove this comment, it\u2019s used in `update_lints`\n+\n+mod reexport {\n+    pub use syntax::ast::{Name, NodeId};\n+}\n+\n+#[cfg_attr(rustfmt, rustfmt_skip)]\n+pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n+    let conf = match utils::conf::conf_file(reg.args()) {\n+        Ok(file_name) => {\n+            // if the user specified a file, it must exist, otherwise default to `clippy.toml` but\n+            // do not require the file to exist\n+            let (ref file_name, must_exist) = if let Some(ref file_name) = file_name {\n+                (&**file_name, true)\n+            } else {\n+                (\"clippy.toml\", false)\n+            };\n+\n+            let (conf, errors) = utils::conf::read_conf(file_name, must_exist);\n+\n+            // all conf errors are non-fatal, we just use the default conf in case of error\n+            for error in errors {\n+                reg.sess.struct_err(&format!(\"error reading Clippy's configuration file: {}\", error)).emit();\n+            }\n+\n+            conf\n+        }\n+        Err((err, span)) => {\n+            reg.sess.struct_span_err(span, err)\n+                    .span_note(span, \"Clippy will use default configuration\")\n+                    .emit();\n+            utils::conf::Conf::default()\n+        }\n+    };\n+\n+    let mut store = reg.sess.lint_store.borrow_mut();\n+    store.register_removed(\"unstable_as_slice\", \"`Vec::as_slice` has been stabilized in 1.7\");\n+    store.register_removed(\"unstable_as_mut_slice\", \"`Vec::as_mut_slice` has been stabilized in 1.7\");\n+    store.register_removed(\"str_to_string\", \"using `str::to_string` is common even today and specialization will likely happen soon\");\n+    store.register_removed(\"string_to_string\", \"using `string::to_string` is common even today and specialization will likely happen soon\");\n+    // end deprecated lints, do not remove this comment, it\u2019s used in `update_lints`\n+\n+    reg.register_late_lint_pass(box types::TypePass);\n+    reg.register_late_lint_pass(box booleans::NonminimalBool);\n+    reg.register_late_lint_pass(box misc::TopLevelRefPass);\n+    reg.register_late_lint_pass(box misc::CmpNan);\n+    reg.register_late_lint_pass(box eq_op::EqOp);\n+    reg.register_early_lint_pass(box enum_variants::EnumVariantNames);\n+    reg.register_late_lint_pass(box enum_glob_use::EnumGlobUse);\n+    reg.register_late_lint_pass(box enum_clike::EnumClikeUnportableVariant);\n+    reg.register_late_lint_pass(box bit_mask::BitMask);\n+    reg.register_late_lint_pass(box ptr_arg::PtrArg);\n+    reg.register_late_lint_pass(box needless_bool::NeedlessBool);\n+    reg.register_late_lint_pass(box needless_bool::BoolComparison);\n+    reg.register_late_lint_pass(box approx_const::ApproxConstant);\n+    reg.register_late_lint_pass(box misc::FloatCmp);\n+    reg.register_early_lint_pass(box precedence::Precedence);\n+    reg.register_late_lint_pass(box eta_reduction::EtaPass);\n+    reg.register_late_lint_pass(box identity_op::IdentityOp);\n+    reg.register_early_lint_pass(box items_after_statements::ItemsAfterStatements);\n+    reg.register_late_lint_pass(box mut_mut::MutMut);\n+    reg.register_late_lint_pass(box mut_reference::UnnecessaryMutPassed);\n+    reg.register_late_lint_pass(box len_zero::LenZero);\n+    reg.register_late_lint_pass(box misc::CmpOwned);\n+    reg.register_late_lint_pass(box attrs::AttrPass);\n+    reg.register_late_lint_pass(box collapsible_if::CollapsibleIf);\n+    reg.register_late_lint_pass(box block_in_if_condition::BlockInIfCondition);\n+    reg.register_late_lint_pass(box misc::ModuloOne);\n+    reg.register_late_lint_pass(box unicode::Unicode);\n+    reg.register_late_lint_pass(box strings::StringAdd);\n+    reg.register_early_lint_pass(box returns::ReturnPass);\n+    reg.register_late_lint_pass(box methods::MethodsPass);\n+    reg.register_late_lint_pass(box shadow::ShadowPass);\n+    reg.register_late_lint_pass(box types::LetPass);\n+    reg.register_late_lint_pass(box types::UnitCmp);\n+    reg.register_late_lint_pass(box loops::LoopsPass);\n+    reg.register_late_lint_pass(box lifetimes::LifetimePass);\n+    reg.register_late_lint_pass(box entry::HashMapLint);\n+    reg.register_late_lint_pass(box ranges::StepByZero);\n+    reg.register_late_lint_pass(box types::CastPass);\n+    reg.register_late_lint_pass(box types::TypeComplexityPass::new(conf.type_complexity_threshold));\n+    reg.register_late_lint_pass(box matches::MatchPass);\n+    reg.register_late_lint_pass(box misc::PatternPass);\n+    reg.register_late_lint_pass(box minmax::MinMaxPass);\n+    reg.register_late_lint_pass(box open_options::NonSensicalOpenOptions);\n+    reg.register_late_lint_pass(box zero_div_zero::ZeroDivZeroPass);\n+    reg.register_late_lint_pass(box mutex_atomic::MutexAtomic);\n+    reg.register_late_lint_pass(box needless_update::NeedlessUpdatePass);\n+    reg.register_late_lint_pass(box needless_borrow::NeedlessBorrow);\n+    reg.register_late_lint_pass(box no_effect::NoEffectPass);\n+    reg.register_late_lint_pass(box map_clone::MapClonePass);\n+    reg.register_late_lint_pass(box temporary_assignment::TemporaryAssignmentPass);\n+    reg.register_late_lint_pass(box transmute::Transmute);\n+    reg.register_late_lint_pass(box cyclomatic_complexity::CyclomaticComplexity::new(conf.cyclomatic_complexity_threshold));\n+    reg.register_late_lint_pass(box escape::EscapePass);\n+    reg.register_early_lint_pass(box misc_early::MiscEarly);\n+    reg.register_late_lint_pass(box misc::UsedUnderscoreBinding);\n+    reg.register_late_lint_pass(box array_indexing::ArrayIndexing);\n+    reg.register_late_lint_pass(box panic::PanicPass);\n+    reg.register_late_lint_pass(box strings::StringLitAsBytes);\n+    reg.register_late_lint_pass(box derive::Derive);\n+    reg.register_late_lint_pass(box types::CharLitAsU8);\n+    reg.register_late_lint_pass(box print::PrintLint);\n+    reg.register_late_lint_pass(box vec::UselessVec);\n+    reg.register_early_lint_pass(box non_expressive_names::NonExpressiveNames {\n+        max_single_char_names: conf.max_single_char_names,\n+    });\n+    reg.register_late_lint_pass(box drop_ref::DropRefPass);\n+    reg.register_late_lint_pass(box types::AbsurdExtremeComparisons);\n+    reg.register_late_lint_pass(box types::InvalidUpcastComparisons);\n+    reg.register_late_lint_pass(box regex::RegexPass::default());\n+    reg.register_late_lint_pass(box copies::CopyAndPaste);\n+    reg.register_late_lint_pass(box format::FormatMacLint);\n+    reg.register_early_lint_pass(box formatting::Formatting);\n+    reg.register_late_lint_pass(box swap::Swap);\n+    reg.register_early_lint_pass(box if_not_else::IfNotElse);\n+    reg.register_late_lint_pass(box overflow_check_conditional::OverflowCheckConditional);\n+    reg.register_late_lint_pass(box unused_label::UnusedLabel);\n+    reg.register_late_lint_pass(box new_without_default::NewWithoutDefault);\n+    reg.register_late_lint_pass(box blacklisted_name::BlackListedName::new(conf.blacklisted_names));\n+    reg.register_late_lint_pass(box functions::Functions::new(conf.too_many_arguments_threshold));\n+    reg.register_early_lint_pass(box doc::Doc::new(conf.doc_valid_idents));\n+    reg.register_late_lint_pass(box neg_multiply::NegMultiply);\n+    reg.register_late_lint_pass(box unsafe_removed_from_name::UnsafeNameRemoval);\n+    reg.register_late_lint_pass(box mem_forget::MemForget);\n+    reg.register_late_lint_pass(box arithmetic::Arithmetic::default());\n+    reg.register_late_lint_pass(box assign_ops::AssignOps);\n+\n+    reg.register_lint_group(\"clippy_restrictions\", vec![\n+        arithmetic::FLOAT_ARITHMETIC,\n+        arithmetic::INTEGER_ARITHMETIC,\n+        assign_ops::ASSIGN_OPS,\n+    ]);\n+\n+    reg.register_lint_group(\"clippy_pedantic\", vec![\n+        array_indexing::INDEXING_SLICING,\n+        booleans::NONMINIMAL_BOOL,\n+        enum_glob_use::ENUM_GLOB_USE,\n+        if_not_else::IF_NOT_ELSE,\n+        items_after_statements::ITEMS_AFTER_STATEMENTS,\n+        matches::SINGLE_MATCH_ELSE,\n+        mem_forget::MEM_FORGET,\n+        methods::OPTION_UNWRAP_USED,\n+        methods::RESULT_UNWRAP_USED,\n+        methods::WRONG_PUB_SELF_CONVENTION,\n+        misc::USED_UNDERSCORE_BINDING,\n+        mut_mut::MUT_MUT,\n+        mutex_atomic::MUTEX_INTEGER,\n+        non_expressive_names::SIMILAR_NAMES,\n+        print::PRINT_STDOUT,\n+        print::USE_DEBUG,\n+        shadow::SHADOW_REUSE,\n+        shadow::SHADOW_SAME,\n+        shadow::SHADOW_UNRELATED,\n+        strings::STRING_ADD,\n+        strings::STRING_ADD_ASSIGN,\n+        types::CAST_POSSIBLE_TRUNCATION,\n+        types::CAST_POSSIBLE_WRAP,\n+        types::CAST_PRECISION_LOSS,\n+        types::CAST_SIGN_LOSS,\n+        types::INVALID_UPCAST_COMPARISONS,\n+        unicode::NON_ASCII_LITERAL,\n+        unicode::UNICODE_NOT_NFC,\n+    ]);\n+\n+    reg.register_lint_group(\"clippy\", vec![\n+        approx_const::APPROX_CONSTANT,\n+        array_indexing::OUT_OF_BOUNDS_INDEXING,\n+        assign_ops::ASSIGN_OP_PATTERN,\n+        attrs::DEPRECATED_SEMVER,\n+        attrs::INLINE_ALWAYS,\n+        bit_mask::BAD_BIT_MASK,\n+        bit_mask::INEFFECTIVE_BIT_MASK,\n+        blacklisted_name::BLACKLISTED_NAME,\n+        block_in_if_condition::BLOCK_IN_IF_CONDITION_EXPR,\n+        block_in_if_condition::BLOCK_IN_IF_CONDITION_STMT,\n+        booleans::LOGIC_BUG,\n+        collapsible_if::COLLAPSIBLE_IF,\n+        copies::IF_SAME_THEN_ELSE,\n+        copies::IFS_SAME_COND,\n+        copies::MATCH_SAME_ARMS,\n+        cyclomatic_complexity::CYCLOMATIC_COMPLEXITY,\n+        derive::DERIVE_HASH_XOR_EQ,\n+        derive::EXPL_IMPL_CLONE_ON_COPY,\n+        doc::DOC_MARKDOWN,\n+        drop_ref::DROP_REF,\n+        entry::MAP_ENTRY,\n+        enum_clike::ENUM_CLIKE_UNPORTABLE_VARIANT,\n+        enum_variants::ENUM_VARIANT_NAMES,\n+        eq_op::EQ_OP,\n+        escape::BOXED_LOCAL,\n+        eta_reduction::REDUNDANT_CLOSURE,\n+        format::USELESS_FORMAT,\n+        formatting::SUSPICIOUS_ASSIGNMENT_FORMATTING,\n+        formatting::SUSPICIOUS_ELSE_FORMATTING,\n+        functions::TOO_MANY_ARGUMENTS,\n+        identity_op::IDENTITY_OP,\n+        len_zero::LEN_WITHOUT_IS_EMPTY,\n+        len_zero::LEN_ZERO,\n+        lifetimes::NEEDLESS_LIFETIMES,\n+        lifetimes::UNUSED_LIFETIMES,\n+        loops::EMPTY_LOOP,\n+        loops::EXPLICIT_COUNTER_LOOP,\n+        loops::EXPLICIT_ITER_LOOP,\n+        loops::FOR_KV_MAP,\n+        loops::FOR_LOOP_OVER_OPTION,\n+        loops::FOR_LOOP_OVER_RESULT,\n+        loops::ITER_NEXT_LOOP,\n+        loops::NEEDLESS_RANGE_LOOP,\n+        loops::REVERSE_RANGE_LOOP,\n+        loops::UNUSED_COLLECT,\n+        loops::WHILE_LET_LOOP,\n+        loops::WHILE_LET_ON_ITERATOR,\n+        map_clone::MAP_CLONE,\n+        matches::MATCH_BOOL,\n+        matches::MATCH_OVERLAPPING_ARM,\n+        matches::MATCH_REF_PATS,\n+        matches::SINGLE_MATCH,\n+        methods::CHARS_NEXT_CMP,\n+        methods::CLONE_DOUBLE_REF,\n+        methods::CLONE_ON_COPY,\n+        methods::EXTEND_FROM_SLICE,\n+        methods::FILTER_NEXT,\n+        methods::NEW_RET_NO_SELF,\n+        methods::OK_EXPECT,\n+        methods::OPTION_MAP_UNWRAP_OR,\n+        methods::OPTION_MAP_UNWRAP_OR_ELSE,\n+        methods::OR_FUN_CALL,\n+        methods::SEARCH_IS_SOME,\n+        methods::SHOULD_IMPLEMENT_TRAIT,\n+        methods::SINGLE_CHAR_PATTERN,\n+        methods::TEMPORARY_CSTRING_AS_PTR,\n+        methods::WRONG_SELF_CONVENTION,\n+        minmax::MIN_MAX,\n+        misc::CMP_NAN,\n+        misc::CMP_OWNED,\n+        misc::FLOAT_CMP,\n+        misc::MODULO_ONE,\n+        misc::REDUNDANT_PATTERN,\n+        misc::TOPLEVEL_REF_ARG,\n+        misc_early::DUPLICATE_UNDERSCORE_ARGUMENT,\n+        misc_early::REDUNDANT_CLOSURE_CALL,\n+        misc_early::UNNEEDED_FIELD_PATTERN,\n+        mut_reference::UNNECESSARY_MUT_PASSED,\n+        mutex_atomic::MUTEX_ATOMIC,\n+        needless_bool::BOOL_COMPARISON,\n+        needless_bool::NEEDLESS_BOOL,\n+        needless_borrow::NEEDLESS_BORROW,\n+        needless_update::NEEDLESS_UPDATE,\n+        neg_multiply::NEG_MULTIPLY,\n+        new_without_default::NEW_WITHOUT_DEFAULT,\n+        new_without_default::NEW_WITHOUT_DEFAULT_DERIVE,\n+        no_effect::NO_EFFECT,\n+        no_effect::UNNECESSARY_OPERATION,\n+        non_expressive_names::MANY_SINGLE_CHAR_NAMES,\n+        open_options::NONSENSICAL_OPEN_OPTIONS,\n+        overflow_check_conditional::OVERFLOW_CHECK_CONDITIONAL,\n+        panic::PANIC_PARAMS,\n+        precedence::PRECEDENCE,\n+        ptr_arg::PTR_ARG,\n+        ranges::RANGE_STEP_BY_ZERO,\n+        ranges::RANGE_ZIP_WITH_LEN,\n+        regex::INVALID_REGEX,\n+        regex::REGEX_MACRO,\n+        regex::TRIVIAL_REGEX,\n+        returns::LET_AND_RETURN,\n+        returns::NEEDLESS_RETURN,\n+        strings::STRING_LIT_AS_BYTES,\n+        swap::ALMOST_SWAPPED,\n+        swap::MANUAL_SWAP,\n+        temporary_assignment::TEMPORARY_ASSIGNMENT,\n+        transmute::CROSSPOINTER_TRANSMUTE,\n+        transmute::TRANSMUTE_PTR_TO_REF,\n+        transmute::USELESS_TRANSMUTE,\n+        types::ABSURD_EXTREME_COMPARISONS,\n+        types::BOX_VEC,\n+        types::CHAR_LIT_AS_U8,\n+        types::LET_UNIT_VALUE,\n+        types::LINKEDLIST,\n+        types::TYPE_COMPLEXITY,\n+        types::UNIT_CMP,\n+        unicode::ZERO_WIDTH_SPACE,\n+        unsafe_removed_from_name::UNSAFE_REMOVED_FROM_NAME,\n+        unused_label::UNUSED_LABEL,\n+        vec::USELESS_VEC,\n+        zero_div_zero::ZERO_DIVIDED_BY_ZERO,\n+    ]);\n+}\n+\n+// only exists to let the dogfood integration test works.\n+// Don't run clippy as an executable directly\n+#[allow(dead_code, print_stdout)]\n+fn main() {\n+    panic!(\"Please use the cargo-clippy executable\");\n+}"}, {"sha": "797e9708b60900eb0e7e33931fad0257b39cea53", "filename": "clippy_lints/src/lifetimes.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/lifetimes.rs"}, {"sha": "061b8efaa64d5b11c2e50fcb7b6c1487740dfefa", "filename": "clippy_lints/src/loops.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/loops.rs"}, {"sha": "4ad232759cfac5f3b6a3fa73be084a4c1b16e4bd", "filename": "clippy_lints/src/map_clone.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fmap_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fmap_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_clone.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/map_clone.rs"}, {"sha": "db4ccf2dcdbe2a9ae474c4e9e7879a2d0749ff16", "filename": "clippy_lints/src/matches.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/matches.rs"}, {"sha": "1f627d614ff3ec92a363a546aad40a4bb819fff7", "filename": "clippy_lints/src/mem_forget.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fmem_forget.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fmem_forget.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmem_forget.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/mem_forget.rs"}, {"sha": "f9f557e7a9a254111b5d080523c27fe092a84eb3", "filename": "clippy_lints/src/methods.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/methods.rs"}, {"sha": "eaba19b08e418fc9a843da6adff49a1c05de7dd1", "filename": "clippy_lints/src/minmax.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fminmax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fminmax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fminmax.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/minmax.rs"}, {"sha": "3ab7823e50d2c6568eed9daa9c250f304f90cbf9", "filename": "clippy_lints/src/misc.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/misc.rs"}, {"sha": "a7ab59497ac6bbcdfca5349332318c80201dcaea", "filename": "clippy_lints/src/misc_early.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/misc_early.rs"}, {"sha": "4147e288c4f60b3028f0aa666d1be611c3623058", "filename": "clippy_lints/src/mut_mut.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_mut.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/mut_mut.rs"}, {"sha": "f6aee54d90b35ed890c1afbda51b0dd07b78b158", "filename": "clippy_lints/src/mut_reference.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fmut_reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fmut_reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_reference.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/mut_reference.rs"}, {"sha": "7d637adb8b8b05a4b55563dbb7d8559cdae87c32", "filename": "clippy_lints/src/mutex_atomic.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmutex_atomic.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/mutex_atomic.rs"}, {"sha": "f95d6f5c9c1b5547a0ddceb3f9f8f8882841c8de", "filename": "clippy_lints/src/needless_bool.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_bool.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/needless_bool.rs"}, {"sha": "033811841ce6f8b5401636bdfe58cb7537c7369e", "filename": "clippy_lints/src/needless_borrow.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_borrow.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/needless_borrow.rs"}, {"sha": "d8ae9dc347163c3ee56df67137add6e729f66133", "filename": "clippy_lints/src/needless_update.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fneedless_update.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fneedless_update.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_update.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/needless_update.rs"}, {"sha": "fb986409a416ea9abb63da2b963d12318e2ba8a8", "filename": "clippy_lints/src/neg_multiply.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fneg_multiply.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fneg_multiply.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneg_multiply.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/neg_multiply.rs"}, {"sha": "08d517014ee49a1df583c88e496971267d960985", "filename": "clippy_lints/src/new_without_default.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnew_without_default.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/new_without_default.rs"}, {"sha": "ae3bac0045518dca45409346edf1f7b962ae5442", "filename": "clippy_lints/src/no_effect.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fno_effect.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/no_effect.rs"}, {"sha": "cbb083a3e161ab4ef2b4c79df6d1800937705ebb", "filename": "clippy_lints/src/non_expressive_names.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_expressive_names.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/non_expressive_names.rs"}, {"sha": "1d760599e3fb5d10f9a32fa94c55b9074399120a", "filename": "clippy_lints/src/open_options.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fopen_options.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fopen_options.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fopen_options.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/open_options.rs"}, {"sha": "34921bc2c041d5974cade51e7908a1562286ef23", "filename": "clippy_lints/src/overflow_check_conditional.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Foverflow_check_conditional.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Foverflow_check_conditional.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foverflow_check_conditional.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/overflow_check_conditional.rs"}, {"sha": "d744d2a6308ae13812bff8d45cd0832ac9cdd5b4", "filename": "clippy_lints/src/panic.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpanic.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/panic.rs"}, {"sha": "825a1b84450d275748eb87d5c8d3b643ea5e3dba", "filename": "clippy_lints/src/precedence.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fprecedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fprecedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fprecedence.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/precedence.rs"}, {"sha": "d426286dba480fe3cac36de26344e1601218f404", "filename": "clippy_lints/src/print.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fprint.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/print.rs"}, {"sha": "addcfc9e84d1b9e4701908cb06012206cdb70fd1", "filename": "clippy_lints/src/ptr_arg.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fptr_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fptr_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr_arg.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/ptr_arg.rs"}, {"sha": "e96212a9cefa3151fb5ec9e06d38a07c8eb99c03", "filename": "clippy_lints/src/ranges.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Franges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Franges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Franges.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/ranges.rs"}, {"sha": "c97a64ebf0945887c587c5e94501f04cf3febe87", "filename": "clippy_lints/src/regex.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fregex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fregex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fregex.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/regex.rs"}, {"sha": "d78938212634ba6e39366f1689a500390880ce0f", "filename": "clippy_lints/src/returns.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/returns.rs"}, {"sha": "2a0d36a80b3cf0f0a6ca24f47aa73a21d03b6425", "filename": "clippy_lints/src/shadow.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fshadow.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/shadow.rs"}, {"sha": "92bce8d0e4201e1fcd131dbf2c1d8dbae433ae32", "filename": "clippy_lints/src/strings.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrings.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/strings.rs"}, {"sha": "c5572181395a44bd7aaf19b808497975d8f24af1", "filename": "clippy_lints/src/swap.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fswap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fswap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fswap.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/swap.rs"}, {"sha": "1496a45dac2499ae445fd5183c4eed2d9246ea25", "filename": "clippy_lints/src/temporary_assignment.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Ftemporary_assignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Ftemporary_assignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftemporary_assignment.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/temporary_assignment.rs"}, {"sha": "2217fd59bd96594f4901c79bc73d7719f8ac20c3", "filename": "clippy_lints/src/transmute.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/transmute.rs"}, {"sha": "c4b810a7880b5b4eac9f073f8f283978ad4e3151", "filename": "clippy_lints/src/types.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/types.rs"}, {"sha": "8271fd3ed661b190ab96fbf86f9930edc55c5c2d", "filename": "clippy_lints/src/unicode.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funicode.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/unicode.rs"}, {"sha": "3de6719c546ac44263bdf76d33c120e110ecd896", "filename": "clippy_lints/src/unsafe_removed_from_name.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/unsafe_removed_from_name.rs"}, {"sha": "d408f16a3711e6e41778dde593c95c48e9bdfafd", "filename": "clippy_lints/src/unused_label.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Funused_label.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Funused_label.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_label.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/unused_label.rs"}, {"sha": "b890a363fb7f3a979f85398eb6fa95baabc20c8a", "filename": "clippy_lints/src/utils/comparisons.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Futils%2Fcomparisons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Futils%2Fcomparisons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fcomparisons.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/utils/comparisons.rs"}, {"sha": "e773cc0e02505f49838614c8df4b2b6ece21176b", "filename": "clippy_lints/src/utils/conf.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/utils/conf.rs"}, {"sha": "0f0a7312ee4a7a101058274a8479208ad9542ea4", "filename": "clippy_lints/src/utils/hir.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Futils%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Futils%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/utils/hir.rs"}, {"sha": "3ff6167620afa22b927e3892303314dd435a2396", "filename": "clippy_lints/src/utils/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/utils/mod.rs"}, {"sha": "3c91578abd091b1d84c3fb7b7446005fea5d8e1d", "filename": "clippy_lints/src/utils/paths.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/utils/paths.rs"}, {"sha": "e62a8f9c45955ec9382cb9c4078483a1f6e24f99", "filename": "clippy_lints/src/vec.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fvec.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/vec.rs"}, {"sha": "902d84d4dd324d208907e46a7c820a36d16d0aa3", "filename": "clippy_lints/src/zero_div_zero.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fzero_div_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/clippy_lints%2Fsrc%2Fzero_div_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fzero_div_zero.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "previous_filename": "src/zero_div_zero.rs"}, {"sha": "f9a6588e9043c51b9f387c79f67d356a1f231ae8", "filename": "src/lib.rs", "status": "modified", "additions": 12, "deletions": 515, "changes": 527, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "patch": "@@ -1,173 +1,13 @@\n+// error-pattern:cargo-clippy\n #![feature(type_macros)]\n #![feature(plugin_registrar, box_syntax)]\n #![feature(rustc_private, collections)]\n-#![feature(iter_arith)]\n #![feature(custom_attribute)]\n #![feature(slice_patterns)]\n #![feature(question_mark)]\n #![feature(stmt_expr_attributes)]\n #![allow(indexing_slicing, shadow_reuse, unknown_lints)]\n \n-extern crate rustc_driver;\n-extern crate getopts;\n-\n-use rustc_driver::{driver, CompilerCalls, RustcDefaultCalls, Compilation};\n-use rustc::session::{config, Session};\n-use rustc::session::config::{Input, ErrorOutputType};\n-use syntax::diagnostics;\n-use std::path::PathBuf;\n-use std::process::Command;\n-\n-struct ClippyCompilerCalls(RustcDefaultCalls);\n-\n-impl std::default::Default for ClippyCompilerCalls {\n-    fn default() -> Self {\n-        Self::new()\n-    }\n-}\n-\n-impl ClippyCompilerCalls {\n-    fn new() -> Self {\n-        ClippyCompilerCalls(RustcDefaultCalls)\n-    }\n-}\n-\n-impl<'a> CompilerCalls<'a> for ClippyCompilerCalls {\n-    fn early_callback(&mut self,\n-                      matches: &getopts::Matches,\n-                      sopts: &config::Options,\n-                      descriptions: &diagnostics::registry::Registry,\n-                      output: ErrorOutputType)\n-                      -> Compilation {\n-        self.0.early_callback(matches, sopts, descriptions, output)\n-    }\n-    fn no_input(&mut self,\n-                matches: &getopts::Matches,\n-                sopts: &config::Options,\n-                odir: &Option<PathBuf>,\n-                ofile: &Option<PathBuf>,\n-                descriptions: &diagnostics::registry::Registry)\n-                -> Option<(Input, Option<PathBuf>)> {\n-        self.0.no_input(matches, sopts, odir, ofile, descriptions)\n-    }\n-    fn late_callback(&mut self,\n-                     matches: &getopts::Matches,\n-                     sess: &Session,\n-                     input: &Input,\n-                     odir: &Option<PathBuf>,\n-                     ofile: &Option<PathBuf>)\n-                     -> Compilation {\n-        self.0.late_callback(matches, sess, input, odir, ofile)\n-    }\n-    fn build_controller(&mut self, sess: &Session, matches: &getopts::Matches) -> driver::CompileController<'a> {\n-        let mut control = self.0.build_controller(sess, matches);\n-\n-        let old = std::mem::replace(&mut control.after_parse.callback, box |_| {});\n-        control.after_parse.callback = Box::new(move |state| {\n-            {\n-                let mut registry = rustc_plugin::registry::Registry::new(state.session, state.krate.as_ref().expect(\"at this compilation stage the krate must be parsed\"));\n-                registry.args_hidden = Some(Vec::new());\n-                plugin_registrar(&mut registry);\n-\n-                let rustc_plugin::registry::Registry { early_lint_passes, late_lint_passes, lint_groups, llvm_passes, attributes, mir_passes, .. } = registry;\n-                let sess = &state.session;\n-                let mut ls = sess.lint_store.borrow_mut();\n-                for pass in early_lint_passes {\n-                    ls.register_early_pass(Some(sess), true, pass);\n-                }\n-                for pass in late_lint_passes {\n-                    ls.register_late_pass(Some(sess), true, pass);\n-                }\n-\n-                for (name, to) in lint_groups {\n-                    ls.register_group(Some(sess), true, name, to);\n-                }\n-\n-                sess.plugin_llvm_passes.borrow_mut().extend(llvm_passes);\n-                sess.mir_passes.borrow_mut().extend(mir_passes);\n-                sess.plugin_attributes.borrow_mut().extend(attributes);\n-            }\n-            old(state);\n-        });\n-\n-        control\n-    }\n-}\n-\n-use std::path::Path;\n-\n-pub fn main() {\n-    use std::env;\n-\n-    if env::var(\"CLIPPY_DOGFOOD\").map(|_| true).unwrap_or(false) {\n-        return;\n-    }\n-\n-    let dep_path = env::current_dir().expect(\"current dir is not readable\").join(\"target\").join(\"debug\").join(\"deps\");\n-\n-    let home = option_env!(\"RUSTUP_HOME\").or(option_env!(\"MULTIRUST_HOME\"));\n-    let toolchain = option_env!(\"RUSTUP_TOOLCHAIN\").or(option_env!(\"MULTIRUST_TOOLCHAIN\"));\n-    let sys_root = match (home, toolchain) {\n-        (Some(home), Some(toolchain)) => format!(\"{}/toolchains/{}\", home, toolchain),\n-        _ => option_env!(\"SYSROOT\").map(|s| s.to_owned())\n-                                   .or(Command::new(\"rustc\").arg(\"--print\")\n-                                                            .arg(\"sysroot\")\n-                                                            .output().ok()\n-                                                            .and_then(|out| String::from_utf8(out.stdout).ok())\n-                                                            .map(|s| s.trim().to_owned())\n-                                                            )\n-                .expect(\"need to specify SYSROOT env var during clippy compilation, or use rustup or multirust\"),\n-    };\n-\n-    if let Some(\"clippy\") = std::env::args().nth(1).as_ref().map(AsRef::as_ref) {\n-        let args = wrap_args(std::env::args().skip(2), dep_path, sys_root);\n-        let path = std::env::current_exe().expect(\"current executable path invalid\");\n-        let exit_status = std::process::Command::new(\"cargo\")\n-            .args(&args)\n-            .env(\"RUSTC\", path)\n-            .spawn().expect(\"could not run cargo\")\n-            .wait().expect(\"failed to wait for cargo?\");\n-\n-        if let Some(code) = exit_status.code() {\n-            std::process::exit(code);\n-        }\n-    } else {\n-        let args: Vec<String> = if env::args().any(|s| s == \"--sysroot\") {\n-            env::args().collect()\n-        } else {\n-            env::args().chain(Some(\"--sysroot\".to_owned())).chain(Some(sys_root)).collect()\n-        };\n-        let (result, _) = rustc_driver::run_compiler(&args, &mut ClippyCompilerCalls::new());\n-\n-        if let Err(err_count) = result {\n-            if err_count > 0 {\n-                std::process::exit(1);\n-            }\n-        }\n-    }\n-}\n-\n-fn wrap_args<P, I>(old_args: I, dep_path: P, sysroot: String) -> Vec<String>\n-    where P: AsRef<Path>, I: Iterator<Item=String> {\n-\n-    let mut args = vec![\"rustc\".to_owned()];\n-\n-    let mut found_dashes = false;\n-    for arg in old_args {\n-        found_dashes |= arg == \"--\";\n-        args.push(arg);\n-    }\n-    if !found_dashes {\n-        args.push(\"--\".to_owned());\n-    }\n-    args.push(\"-L\".to_owned());\n-    args.push(dep_path.as_ref().to_string_lossy().into_owned());\n-    args.push(String::from(\"--sysroot\"));\n-    args.push(sysroot);\n-    args.push(\"-Zno-trans\".to_owned());\n-    args\n-}\n-\n #[macro_use]\n extern crate syntax;\n #[macro_use]\n@@ -196,371 +36,28 @@ extern crate rustc_const_eval;\n extern crate rustc_const_math;\n use rustc_plugin::Registry;\n \n+extern crate clippy_lints;\n+\n+pub use clippy_lints::*;\n+\n macro_rules! declare_restriction_lint {\n     { pub $name:tt, $description:tt } => {\n         declare_lint! { pub $name, Allow, $description }\n     };\n }\n \n-pub mod consts;\n-#[macro_use]\n-pub mod utils;\n-\n-// begin lints modules, do not remove this comment, it\u2019s used in `update_lints`\n-pub mod approx_const;\n-pub mod arithmetic;\n-pub mod array_indexing;\n-pub mod assign_ops;\n-pub mod attrs;\n-pub mod bit_mask;\n-pub mod blacklisted_name;\n-pub mod block_in_if_condition;\n-pub mod booleans;\n-pub mod collapsible_if;\n-pub mod copies;\n-pub mod cyclomatic_complexity;\n-pub mod derive;\n-pub mod doc;\n-pub mod drop_ref;\n-pub mod entry;\n-pub mod enum_clike;\n-pub mod enum_glob_use;\n-pub mod enum_variants;\n-pub mod eq_op;\n-pub mod escape;\n-pub mod eta_reduction;\n-pub mod format;\n-pub mod formatting;\n-pub mod functions;\n-pub mod identity_op;\n-pub mod if_not_else;\n-pub mod items_after_statements;\n-pub mod len_zero;\n-pub mod lifetimes;\n-pub mod loops;\n-pub mod map_clone;\n-pub mod matches;\n-pub mod mem_forget;\n-pub mod methods;\n-pub mod minmax;\n-pub mod misc;\n-pub mod misc_early;\n-pub mod mut_mut;\n-pub mod mut_reference;\n-pub mod mutex_atomic;\n-pub mod needless_bool;\n-pub mod needless_borrow;\n-pub mod needless_update;\n-pub mod neg_multiply;\n-pub mod new_without_default;\n-pub mod no_effect;\n-pub mod non_expressive_names;\n-pub mod open_options;\n-pub mod overflow_check_conditional;\n-pub mod panic;\n-pub mod precedence;\n-pub mod print;\n-pub mod ptr_arg;\n-pub mod ranges;\n-pub mod regex;\n-pub mod returns;\n-pub mod shadow;\n-pub mod strings;\n-pub mod swap;\n-pub mod temporary_assignment;\n-pub mod transmute;\n-pub mod types;\n-pub mod unicode;\n-pub mod unsafe_removed_from_name;\n-pub mod unused_label;\n-pub mod vec;\n-pub mod zero_div_zero;\n-// end lints modules, do not remove this comment, it\u2019s used in `update_lints`\n-\n mod reexport {\n     pub use syntax::ast::{Name, NodeId};\n }\n \n #[plugin_registrar]\n-#[cfg_attr(rustfmt, rustfmt_skip)]\n pub fn plugin_registrar(reg: &mut Registry) {\n-    let conf = match utils::conf::conf_file(reg.args()) {\n-        Ok(file_name) => {\n-            // if the user specified a file, it must exist, otherwise default to `clippy.toml` but\n-            // do not require the file to exist\n-            let (ref file_name, must_exist) = if let Some(ref file_name) = file_name {\n-                (&**file_name, true)\n-            } else {\n-                (\"clippy.toml\", false)\n-            };\n-\n-            let (conf, errors) = utils::conf::read_conf(file_name, must_exist);\n-\n-            // all conf errors are non-fatal, we just use the default conf in case of error\n-            for error in errors {\n-                reg.sess.struct_err(&format!(\"error reading Clippy's configuration file: {}\", error)).emit();\n-            }\n-\n-            conf\n-        }\n-        Err((err, span)) => {\n-            reg.sess.struct_span_err(span, err)\n-                    .span_note(span, \"Clippy will use default configuration\")\n-                    .emit();\n-            utils::conf::Conf::default()\n-        }\n-    };\n-\n-    let mut store = reg.sess.lint_store.borrow_mut();\n-    store.register_removed(\"unstable_as_slice\", \"`Vec::as_slice` has been stabilized in 1.7\");\n-    store.register_removed(\"unstable_as_mut_slice\", \"`Vec::as_mut_slice` has been stabilized in 1.7\");\n-    store.register_removed(\"str_to_string\", \"using `str::to_string` is common even today and specialization will likely happen soon\");\n-    store.register_removed(\"string_to_string\", \"using `string::to_string` is common even today and specialization will likely happen soon\");\n-    // end deprecated lints, do not remove this comment, it\u2019s used in `update_lints`\n-\n-    reg.register_late_lint_pass(box types::TypePass);\n-    reg.register_late_lint_pass(box booleans::NonminimalBool);\n-    reg.register_late_lint_pass(box misc::TopLevelRefPass);\n-    reg.register_late_lint_pass(box misc::CmpNan);\n-    reg.register_late_lint_pass(box eq_op::EqOp);\n-    reg.register_early_lint_pass(box enum_variants::EnumVariantNames);\n-    reg.register_late_lint_pass(box enum_glob_use::EnumGlobUse);\n-    reg.register_late_lint_pass(box enum_clike::EnumClikeUnportableVariant);\n-    reg.register_late_lint_pass(box bit_mask::BitMask);\n-    reg.register_late_lint_pass(box ptr_arg::PtrArg);\n-    reg.register_late_lint_pass(box needless_bool::NeedlessBool);\n-    reg.register_late_lint_pass(box needless_bool::BoolComparison);\n-    reg.register_late_lint_pass(box approx_const::ApproxConstant);\n-    reg.register_late_lint_pass(box misc::FloatCmp);\n-    reg.register_early_lint_pass(box precedence::Precedence);\n-    reg.register_late_lint_pass(box eta_reduction::EtaPass);\n-    reg.register_late_lint_pass(box identity_op::IdentityOp);\n-    reg.register_early_lint_pass(box items_after_statements::ItemsAfterStatements);\n-    reg.register_late_lint_pass(box mut_mut::MutMut);\n-    reg.register_late_lint_pass(box mut_reference::UnnecessaryMutPassed);\n-    reg.register_late_lint_pass(box len_zero::LenZero);\n-    reg.register_late_lint_pass(box misc::CmpOwned);\n-    reg.register_late_lint_pass(box attrs::AttrPass);\n-    reg.register_late_lint_pass(box collapsible_if::CollapsibleIf);\n-    reg.register_late_lint_pass(box block_in_if_condition::BlockInIfCondition);\n-    reg.register_late_lint_pass(box misc::ModuloOne);\n-    reg.register_late_lint_pass(box unicode::Unicode);\n-    reg.register_late_lint_pass(box strings::StringAdd);\n-    reg.register_early_lint_pass(box returns::ReturnPass);\n-    reg.register_late_lint_pass(box methods::MethodsPass);\n-    reg.register_late_lint_pass(box shadow::ShadowPass);\n-    reg.register_late_lint_pass(box types::LetPass);\n-    reg.register_late_lint_pass(box types::UnitCmp);\n-    reg.register_late_lint_pass(box loops::LoopsPass);\n-    reg.register_late_lint_pass(box lifetimes::LifetimePass);\n-    reg.register_late_lint_pass(box entry::HashMapLint);\n-    reg.register_late_lint_pass(box ranges::StepByZero);\n-    reg.register_late_lint_pass(box types::CastPass);\n-    reg.register_late_lint_pass(box types::TypeComplexityPass::new(conf.type_complexity_threshold));\n-    reg.register_late_lint_pass(box matches::MatchPass);\n-    reg.register_late_lint_pass(box misc::PatternPass);\n-    reg.register_late_lint_pass(box minmax::MinMaxPass);\n-    reg.register_late_lint_pass(box open_options::NonSensicalOpenOptions);\n-    reg.register_late_lint_pass(box zero_div_zero::ZeroDivZeroPass);\n-    reg.register_late_lint_pass(box mutex_atomic::MutexAtomic);\n-    reg.register_late_lint_pass(box needless_update::NeedlessUpdatePass);\n-    reg.register_late_lint_pass(box needless_borrow::NeedlessBorrow);\n-    reg.register_late_lint_pass(box no_effect::NoEffectPass);\n-    reg.register_late_lint_pass(box map_clone::MapClonePass);\n-    reg.register_late_lint_pass(box temporary_assignment::TemporaryAssignmentPass);\n-    reg.register_late_lint_pass(box transmute::Transmute);\n-    reg.register_late_lint_pass(box cyclomatic_complexity::CyclomaticComplexity::new(conf.cyclomatic_complexity_threshold));\n-    reg.register_late_lint_pass(box escape::EscapePass);\n-    reg.register_early_lint_pass(box misc_early::MiscEarly);\n-    reg.register_late_lint_pass(box misc::UsedUnderscoreBinding);\n-    reg.register_late_lint_pass(box array_indexing::ArrayIndexing);\n-    reg.register_late_lint_pass(box panic::PanicPass);\n-    reg.register_late_lint_pass(box strings::StringLitAsBytes);\n-    reg.register_late_lint_pass(box derive::Derive);\n-    reg.register_late_lint_pass(box types::CharLitAsU8);\n-    reg.register_late_lint_pass(box print::PrintLint);\n-    reg.register_late_lint_pass(box vec::UselessVec);\n-    reg.register_early_lint_pass(box non_expressive_names::NonExpressiveNames {\n-        max_single_char_names: conf.max_single_char_names,\n-    });\n-    reg.register_late_lint_pass(box drop_ref::DropRefPass);\n-    reg.register_late_lint_pass(box types::AbsurdExtremeComparisons);\n-    reg.register_late_lint_pass(box types::InvalidUpcastComparisons);\n-    reg.register_late_lint_pass(box regex::RegexPass::default());\n-    reg.register_late_lint_pass(box copies::CopyAndPaste);\n-    reg.register_late_lint_pass(box format::FormatMacLint);\n-    reg.register_early_lint_pass(box formatting::Formatting);\n-    reg.register_late_lint_pass(box swap::Swap);\n-    reg.register_early_lint_pass(box if_not_else::IfNotElse);\n-    reg.register_late_lint_pass(box overflow_check_conditional::OverflowCheckConditional);\n-    reg.register_late_lint_pass(box unused_label::UnusedLabel);\n-    reg.register_late_lint_pass(box new_without_default::NewWithoutDefault);\n-    reg.register_late_lint_pass(box blacklisted_name::BlackListedName::new(conf.blacklisted_names));\n-    reg.register_late_lint_pass(box functions::Functions::new(conf.too_many_arguments_threshold));\n-    reg.register_early_lint_pass(box doc::Doc::new(conf.doc_valid_idents));\n-    reg.register_late_lint_pass(box neg_multiply::NegMultiply);\n-    reg.register_late_lint_pass(box unsafe_removed_from_name::UnsafeNameRemoval);\n-    reg.register_late_lint_pass(box mem_forget::MemForget);\n-    reg.register_late_lint_pass(box arithmetic::Arithmetic::default());\n-    reg.register_late_lint_pass(box assign_ops::AssignOps);\n-\n-    reg.register_lint_group(\"clippy_restrictions\", vec![\n-        arithmetic::FLOAT_ARITHMETIC,\n-        arithmetic::INTEGER_ARITHMETIC,\n-        assign_ops::ASSIGN_OPS,\n-    ]);\n-\n-    reg.register_lint_group(\"clippy_pedantic\", vec![\n-        array_indexing::INDEXING_SLICING,\n-        booleans::NONMINIMAL_BOOL,\n-        enum_glob_use::ENUM_GLOB_USE,\n-        if_not_else::IF_NOT_ELSE,\n-        items_after_statements::ITEMS_AFTER_STATEMENTS,\n-        matches::SINGLE_MATCH_ELSE,\n-        mem_forget::MEM_FORGET,\n-        methods::OPTION_UNWRAP_USED,\n-        methods::RESULT_UNWRAP_USED,\n-        methods::WRONG_PUB_SELF_CONVENTION,\n-        misc::USED_UNDERSCORE_BINDING,\n-        mut_mut::MUT_MUT,\n-        mutex_atomic::MUTEX_INTEGER,\n-        non_expressive_names::SIMILAR_NAMES,\n-        print::PRINT_STDOUT,\n-        print::USE_DEBUG,\n-        shadow::SHADOW_REUSE,\n-        shadow::SHADOW_SAME,\n-        shadow::SHADOW_UNRELATED,\n-        strings::STRING_ADD,\n-        strings::STRING_ADD_ASSIGN,\n-        types::CAST_POSSIBLE_TRUNCATION,\n-        types::CAST_POSSIBLE_WRAP,\n-        types::CAST_PRECISION_LOSS,\n-        types::CAST_SIGN_LOSS,\n-        types::INVALID_UPCAST_COMPARISONS,\n-        unicode::NON_ASCII_LITERAL,\n-        unicode::UNICODE_NOT_NFC,\n-    ]);\n+    register_plugins(reg);\n+}\n \n-    reg.register_lint_group(\"clippy\", vec![\n-        approx_const::APPROX_CONSTANT,\n-        array_indexing::OUT_OF_BOUNDS_INDEXING,\n-        assign_ops::ASSIGN_OP_PATTERN,\n-        attrs::DEPRECATED_SEMVER,\n-        attrs::INLINE_ALWAYS,\n-        bit_mask::BAD_BIT_MASK,\n-        bit_mask::INEFFECTIVE_BIT_MASK,\n-        blacklisted_name::BLACKLISTED_NAME,\n-        block_in_if_condition::BLOCK_IN_IF_CONDITION_EXPR,\n-        block_in_if_condition::BLOCK_IN_IF_CONDITION_STMT,\n-        booleans::LOGIC_BUG,\n-        collapsible_if::COLLAPSIBLE_IF,\n-        copies::IF_SAME_THEN_ELSE,\n-        copies::IFS_SAME_COND,\n-        copies::MATCH_SAME_ARMS,\n-        cyclomatic_complexity::CYCLOMATIC_COMPLEXITY,\n-        derive::DERIVE_HASH_XOR_EQ,\n-        derive::EXPL_IMPL_CLONE_ON_COPY,\n-        doc::DOC_MARKDOWN,\n-        drop_ref::DROP_REF,\n-        entry::MAP_ENTRY,\n-        enum_clike::ENUM_CLIKE_UNPORTABLE_VARIANT,\n-        enum_variants::ENUM_VARIANT_NAMES,\n-        eq_op::EQ_OP,\n-        escape::BOXED_LOCAL,\n-        eta_reduction::REDUNDANT_CLOSURE,\n-        format::USELESS_FORMAT,\n-        formatting::SUSPICIOUS_ASSIGNMENT_FORMATTING,\n-        formatting::SUSPICIOUS_ELSE_FORMATTING,\n-        functions::TOO_MANY_ARGUMENTS,\n-        identity_op::IDENTITY_OP,\n-        len_zero::LEN_WITHOUT_IS_EMPTY,\n-        len_zero::LEN_ZERO,\n-        lifetimes::NEEDLESS_LIFETIMES,\n-        lifetimes::UNUSED_LIFETIMES,\n-        loops::EMPTY_LOOP,\n-        loops::EXPLICIT_COUNTER_LOOP,\n-        loops::EXPLICIT_ITER_LOOP,\n-        loops::FOR_KV_MAP,\n-        loops::FOR_LOOP_OVER_OPTION,\n-        loops::FOR_LOOP_OVER_RESULT,\n-        loops::ITER_NEXT_LOOP,\n-        loops::NEEDLESS_RANGE_LOOP,\n-        loops::REVERSE_RANGE_LOOP,\n-        loops::UNUSED_COLLECT,\n-        loops::WHILE_LET_LOOP,\n-        loops::WHILE_LET_ON_ITERATOR,\n-        map_clone::MAP_CLONE,\n-        matches::MATCH_BOOL,\n-        matches::MATCH_OVERLAPPING_ARM,\n-        matches::MATCH_REF_PATS,\n-        matches::SINGLE_MATCH,\n-        methods::CHARS_NEXT_CMP,\n-        methods::CLONE_DOUBLE_REF,\n-        methods::CLONE_ON_COPY,\n-        methods::EXTEND_FROM_SLICE,\n-        methods::FILTER_NEXT,\n-        methods::NEW_RET_NO_SELF,\n-        methods::OK_EXPECT,\n-        methods::OPTION_MAP_UNWRAP_OR,\n-        methods::OPTION_MAP_UNWRAP_OR_ELSE,\n-        methods::OR_FUN_CALL,\n-        methods::SEARCH_IS_SOME,\n-        methods::SHOULD_IMPLEMENT_TRAIT,\n-        methods::SINGLE_CHAR_PATTERN,\n-        methods::TEMPORARY_CSTRING_AS_PTR,\n-        methods::WRONG_SELF_CONVENTION,\n-        minmax::MIN_MAX,\n-        misc::CMP_NAN,\n-        misc::CMP_OWNED,\n-        misc::FLOAT_CMP,\n-        misc::MODULO_ONE,\n-        misc::REDUNDANT_PATTERN,\n-        misc::TOPLEVEL_REF_ARG,\n-        misc_early::DUPLICATE_UNDERSCORE_ARGUMENT,\n-        misc_early::REDUNDANT_CLOSURE_CALL,\n-        misc_early::UNNEEDED_FIELD_PATTERN,\n-        mut_reference::UNNECESSARY_MUT_PASSED,\n-        mutex_atomic::MUTEX_ATOMIC,\n-        needless_bool::BOOL_COMPARISON,\n-        needless_bool::NEEDLESS_BOOL,\n-        needless_borrow::NEEDLESS_BORROW,\n-        needless_update::NEEDLESS_UPDATE,\n-        neg_multiply::NEG_MULTIPLY,\n-        new_without_default::NEW_WITHOUT_DEFAULT,\n-        new_without_default::NEW_WITHOUT_DEFAULT_DERIVE,\n-        no_effect::NO_EFFECT,\n-        no_effect::UNNECESSARY_OPERATION,\n-        non_expressive_names::MANY_SINGLE_CHAR_NAMES,\n-        open_options::NONSENSICAL_OPEN_OPTIONS,\n-        overflow_check_conditional::OVERFLOW_CHECK_CONDITIONAL,\n-        panic::PANIC_PARAMS,\n-        precedence::PRECEDENCE,\n-        ptr_arg::PTR_ARG,\n-        ranges::RANGE_STEP_BY_ZERO,\n-        ranges::RANGE_ZIP_WITH_LEN,\n-        regex::INVALID_REGEX,\n-        regex::REGEX_MACRO,\n-        regex::TRIVIAL_REGEX,\n-        returns::LET_AND_RETURN,\n-        returns::NEEDLESS_RETURN,\n-        strings::STRING_LIT_AS_BYTES,\n-        swap::ALMOST_SWAPPED,\n-        swap::MANUAL_SWAP,\n-        temporary_assignment::TEMPORARY_ASSIGNMENT,\n-        transmute::CROSSPOINTER_TRANSMUTE,\n-        transmute::TRANSMUTE_PTR_TO_REF,\n-        transmute::USELESS_TRANSMUTE,\n-        types::ABSURD_EXTREME_COMPARISONS,\n-        types::BOX_VEC,\n-        types::CHAR_LIT_AS_U8,\n-        types::LET_UNIT_VALUE,\n-        types::LINKEDLIST,\n-        types::TYPE_COMPLEXITY,\n-        types::UNIT_CMP,\n-        unicode::ZERO_WIDTH_SPACE,\n-        unsafe_removed_from_name::UNSAFE_REMOVED_FROM_NAME,\n-        unused_label::UNUSED_LABEL,\n-        vec::USELESS_VEC,\n-        zero_div_zero::ZERO_DIVIDED_BY_ZERO,\n-    ]);\n+// only exists to let the dogfood integration test works.\n+// Don't run clippy as an executable directly\n+#[allow(dead_code, print_stdout)]\n+fn main() {\n+    panic!(\"Please use the cargo-clippy executable\");\n }"}, {"sha": "970222e10766130faa650bd77b5709cad3054de7", "filename": "src/main.rs", "status": "added", "additions": 167, "deletions": 0, "changes": 167, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "patch": "@@ -0,0 +1,167 @@\n+// error-pattern:yummy\n+#![feature(box_syntax)]\n+#![feature(rustc_private)]\n+\n+extern crate rustc_driver;\n+extern crate getopts;\n+extern crate rustc;\n+extern crate syntax;\n+extern crate rustc_plugin;\n+extern crate clippy_lints;\n+\n+use rustc_driver::{driver, CompilerCalls, RustcDefaultCalls, Compilation};\n+use rustc::session::{config, Session};\n+use rustc::session::config::{Input, ErrorOutputType};\n+use syntax::diagnostics;\n+use std::path::PathBuf;\n+use std::process::Command;\n+\n+struct ClippyCompilerCalls(RustcDefaultCalls);\n+\n+impl std::default::Default for ClippyCompilerCalls {\n+    fn default() -> Self {\n+        Self::new()\n+    }\n+}\n+\n+impl ClippyCompilerCalls {\n+    fn new() -> Self {\n+        ClippyCompilerCalls(RustcDefaultCalls)\n+    }\n+}\n+\n+impl<'a> CompilerCalls<'a> for ClippyCompilerCalls {\n+    fn early_callback(&mut self,\n+                      matches: &getopts::Matches,\n+                      sopts: &config::Options,\n+                      descriptions: &diagnostics::registry::Registry,\n+                      output: ErrorOutputType)\n+                      -> Compilation {\n+        self.0.early_callback(matches, sopts, descriptions, output)\n+    }\n+    fn no_input(&mut self,\n+                matches: &getopts::Matches,\n+                sopts: &config::Options,\n+                odir: &Option<PathBuf>,\n+                ofile: &Option<PathBuf>,\n+                descriptions: &diagnostics::registry::Registry)\n+                -> Option<(Input, Option<PathBuf>)> {\n+        self.0.no_input(matches, sopts, odir, ofile, descriptions)\n+    }\n+    fn late_callback(&mut self,\n+                     matches: &getopts::Matches,\n+                     sess: &Session,\n+                     input: &Input,\n+                     odir: &Option<PathBuf>,\n+                     ofile: &Option<PathBuf>)\n+                     -> Compilation {\n+        self.0.late_callback(matches, sess, input, odir, ofile)\n+    }\n+    fn build_controller(&mut self, sess: &Session, matches: &getopts::Matches) -> driver::CompileController<'a> {\n+        let mut control = self.0.build_controller(sess, matches);\n+\n+        let old = std::mem::replace(&mut control.after_parse.callback, box |_| {});\n+        control.after_parse.callback = Box::new(move |state| {\n+            {\n+                let mut registry = rustc_plugin::registry::Registry::new(state.session, state.krate.as_ref().expect(\"at this compilation stage the krate must be parsed\"));\n+                registry.args_hidden = Some(Vec::new());\n+                clippy_lints::register_plugins(&mut registry);\n+\n+                let rustc_plugin::registry::Registry { early_lint_passes, late_lint_passes, lint_groups, llvm_passes, attributes, mir_passes, .. } = registry;\n+                let sess = &state.session;\n+                let mut ls = sess.lint_store.borrow_mut();\n+                for pass in early_lint_passes {\n+                    ls.register_early_pass(Some(sess), true, pass);\n+                }\n+                for pass in late_lint_passes {\n+                    ls.register_late_pass(Some(sess), true, pass);\n+                }\n+\n+                for (name, to) in lint_groups {\n+                    ls.register_group(Some(sess), true, name, to);\n+                }\n+\n+                sess.plugin_llvm_passes.borrow_mut().extend(llvm_passes);\n+                sess.mir_passes.borrow_mut().extend(mir_passes);\n+                sess.plugin_attributes.borrow_mut().extend(attributes);\n+            }\n+            old(state);\n+        });\n+\n+        control\n+    }\n+}\n+\n+use std::path::Path;\n+\n+pub fn main() {\n+    use std::env;\n+\n+    if env::var(\"CLIPPY_DOGFOOD\").map(|_| true).unwrap_or(false) {\n+        panic!(\"yummy\");\n+    }\n+\n+    let dep_path = env::current_dir().expect(\"current dir is not readable\").join(\"target\").join(\"debug\").join(\"deps\");\n+\n+    let home = option_env!(\"RUSTUP_HOME\").or(option_env!(\"MULTIRUST_HOME\"));\n+    let toolchain = option_env!(\"RUSTUP_TOOLCHAIN\").or(option_env!(\"MULTIRUST_TOOLCHAIN\"));\n+    let sys_root = match (home, toolchain) {\n+        (Some(home), Some(toolchain)) => format!(\"{}/toolchains/{}\", home, toolchain),\n+        _ => option_env!(\"SYSROOT\").map(|s| s.to_owned())\n+                                   .or(Command::new(\"rustc\").arg(\"--print\")\n+                                                            .arg(\"sysroot\")\n+                                                            .output().ok()\n+                                                            .and_then(|out| String::from_utf8(out.stdout).ok())\n+                                                            .map(|s| s.trim().to_owned())\n+                                                            )\n+                .expect(\"need to specify SYSROOT env var during clippy compilation, or use rustup or multirust\"),\n+    };\n+\n+    if let Some(\"clippy\") = std::env::args().nth(1).as_ref().map(AsRef::as_ref) {\n+        let args = wrap_args(std::env::args().skip(2), dep_path, sys_root);\n+        let path = std::env::current_exe().expect(\"current executable path invalid\");\n+        let exit_status = std::process::Command::new(\"cargo\")\n+            .args(&args)\n+            .env(\"RUSTC\", path)\n+            .spawn().expect(\"could not run cargo\")\n+            .wait().expect(\"failed to wait for cargo?\");\n+\n+        if let Some(code) = exit_status.code() {\n+            std::process::exit(code);\n+        }\n+    } else {\n+        let args: Vec<String> = if env::args().any(|s| s == \"--sysroot\") {\n+            env::args().collect()\n+        } else {\n+            env::args().chain(Some(\"--sysroot\".to_owned())).chain(Some(sys_root)).collect()\n+        };\n+        let (result, _) = rustc_driver::run_compiler(&args, &mut ClippyCompilerCalls::new());\n+\n+        if let Err(err_count) = result {\n+            if err_count > 0 {\n+                std::process::exit(1);\n+            }\n+        }\n+    }\n+}\n+\n+fn wrap_args<P, I>(old_args: I, dep_path: P, sysroot: String) -> Vec<String>\n+    where P: AsRef<Path>, I: Iterator<Item=String> {\n+\n+    let mut args = vec![\"rustc\".to_owned()];\n+\n+    let mut found_dashes = false;\n+    for arg in old_args {\n+        found_dashes |= arg == \"--\";\n+        args.push(arg);\n+    }\n+    if !found_dashes {\n+        args.push(\"--\".to_owned());\n+    }\n+    args.push(\"-L\".to_owned());\n+    args.push(dep_path.as_ref().to_string_lossy().into_owned());\n+    args.push(String::from(\"--sysroot\"));\n+    args.push(sysroot);\n+    args.push(\"-Zno-trans\".to_owned());\n+    args\n+}"}, {"sha": "5121fd086284d1db02589f117253ce5a35bb0076", "filename": "tests/dogfood.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/tests%2Fdogfood.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/tests%2Fdogfood.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdogfood.rs?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "patch": "@@ -13,7 +13,7 @@ use test::TestPaths;\n fn dogfood() {\n     let mut config = compiletest::default_config();\n \n-    let cfg_mode = \"run-pass\".parse().expect(\"Invalid mode\");\n+    let cfg_mode = \"run-fail\".parse().expect(\"Invalid mode\");\n     let mut s = String::new();\n     s.push_str(\" -L target/debug/\");\n     s.push_str(\" -L target/debug/deps\");\n@@ -30,13 +30,21 @@ fn dogfood() {\n \n     config.mode = cfg_mode;\n \n-    let paths = TestPaths {\n-        base: PathBuf::new(),\n-        file: PathBuf::from(\"src/lib.rs\"),\n-        relative_dir: PathBuf::new(),\n-    };\n+    let files = [\n+        \"src/main.rs\",\n+        \"src/lib.rs\",\n+        \"clippy_lints/src/lib.rs\",\n+    ];\n \n-    set_var(\"CLIPPY_DOGFOOD\", \"tastes like chicken\");\n+    for file in &files {\n+        let paths = TestPaths {\n+            base: PathBuf::new(),\n+            file: PathBuf::from(file),\n+            relative_dir: PathBuf::new(),\n+        };\n \n-    compiletest::runtest::run(config, &paths);\n+        set_var(\"CLIPPY_DOGFOOD\", \"tastes like chicken\");\n+\n+        compiletest::runtest::run(config.clone(), &paths);\n+    }\n }"}, {"sha": "8078b68367b2cc1bac0e3207bdacd0f6e3d00672", "filename": "util/update_lints.py", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/bf227f4729ecc63147bacaf05d161f3819d13d7e/util%2Fupdate_lints.py", "raw_url": "https://github.com/rust-lang/rust/raw/bf227f4729ecc63147bacaf05d161f3819d13d7e/util%2Fupdate_lints.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fupdate_lints.py?ref=bf227f4729ecc63147bacaf05d161f3819d13d7e", "patch": "@@ -61,7 +61,7 @@ def collect(lints, deprecated_lints, restriction_lints, fn):\n                                 match.group('name').lower(),\n                                 \"allow\",\n                                 desc.replace('\\\\\"', '\"')))\n-        \n+\n \n def gen_table(lints, link=None):\n     \"\"\"Write lint table in Markdown format.\"\"\"\n@@ -144,15 +144,15 @@ def main(print_only=False, check=False):\n     restriction_lints = []\n \n     # check directory\n-    if not os.path.isfile('src/lib.rs'):\n+    if not os.path.isfile('clippy_lints/src/lib.rs'):\n         print('Error: call this script from clippy checkout directory!')\n         return\n \n     # collect all lints from source files\n-    for root, _, files in os.walk('src'):\n+    for root, _, files in os.walk('clippy_lints/src'):\n         for fn in files:\n             if fn.endswith('.rs'):\n-                collect(lints, deprecated_lints, restriction_lints, \n+                collect(lints, deprecated_lints, restriction_lints,\n                         os.path.join(root, fn))\n \n     if print_only:\n@@ -178,38 +178,38 @@ def main(print_only=False, check=False):\n         \"<!-- begin autogenerated links to wiki -->\",\n         \"<!-- end autogenerated links to wiki -->\",\n         lambda: [\"[`{0}`]: {1}#{0}\\n\".format(l[1], wiki_link) for l in\n-                 sorted(lints + restriction_lints + deprecated_lints, \n+                 sorted(lints + restriction_lints + deprecated_lints,\n                         key=lambda l: l[1])],\n         replace_start=False, write_back=not check)\n \n     # update the `pub mod` list\n     changed |= replace_region(\n-        'src/lib.rs', r'begin lints modules', r'end lints modules',\n+        'clippy_lints/src/lib.rs', r'begin lints modules', r'end lints modules',\n         lambda: gen_mods(lints + restriction_lints),\n         replace_start=False, write_back=not check)\n \n     # same for \"clippy\" lint collection\n     changed |= replace_region(\n-        'src/lib.rs', r'reg.register_lint_group\\(\"clippy\"', r'\\]\\);',\n+        'clippy_lints/src/lib.rs', r'reg.register_lint_group\\(\"clippy\"', r'\\]\\);',\n         lambda: gen_group(lints, levels=('warn', 'deny')),\n         replace_start=False, write_back=not check)\n \n     # same for \"deprecated\" lint collection\n     changed |= replace_region(\n-            'src/lib.rs', r'let mut store', r'end deprecated lints',\n+            'clippy_lints/src/lib.rs', r'let mut store', r'end deprecated lints',\n             lambda: gen_deprecated(deprecated_lints),\n             replace_start=False,\n             write_back=not check)\n \n     # same for \"clippy_pedantic\" lint collection\n     changed |= replace_region(\n-        'src/lib.rs', r'reg.register_lint_group\\(\"clippy_pedantic\"', r'\\]\\);',\n+        'clippy_lints/src/lib.rs', r'reg.register_lint_group\\(\"clippy_pedantic\"', r'\\]\\);',\n         lambda: gen_group(lints, levels=('allow',)),\n         replace_start=False, write_back=not check)\n \n     # same for \"clippy_restrictions\" lint collection\n     changed |= replace_region(\n-        'src/lib.rs', r'reg.register_lint_group\\(\"clippy_restrictions\"', \n+        'clippy_lints/src/lib.rs', r'reg.register_lint_group\\(\"clippy_restrictions\"',\n         r'\\]\\);', lambda: gen_group(restriction_lints),\n         replace_start=False, write_back=not check)\n "}]}