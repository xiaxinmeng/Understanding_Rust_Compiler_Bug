{"sha": "48c170df36ed5e7ee47ca011b0169a0a7acd199c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4YzE3MGRmMzZlZDVlN2VlNDdjYTAxMWIwMTY5YTBhN2FjZDE5OWM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2015-11-03T20:55:03Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2015-11-03T20:55:03Z"}, "message": "doc: Link to cargo docs, not just crates.io", "tree": {"sha": "b84ea86feab26e30e9d1f7837b449c393a98cfd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b84ea86feab26e30e9d1f7837b449c393a98cfd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48c170df36ed5e7ee47ca011b0169a0a7acd199c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48c170df36ed5e7ee47ca011b0169a0a7acd199c", "html_url": "https://github.com/rust-lang/rust/commit/48c170df36ed5e7ee47ca011b0169a0a7acd199c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48c170df36ed5e7ee47ca011b0169a0a7acd199c/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ca0fa9af2ec96439ef2cbb4047f78c7adb2fe5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ca0fa9af2ec96439ef2cbb4047f78c7adb2fe5e", "html_url": "https://github.com/rust-lang/rust/commit/6ca0fa9af2ec96439ef2cbb4047f78c7adb2fe5e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "89fa45a3ad6fe08dea7b4e3202a516ee10c769a1", "filename": "src/doc/index.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48c170df36ed5e7ee47ca011b0169a0a7acd199c/src%2Fdoc%2Findex.md", "raw_url": "https://github.com/rust-lang/rust/raw/48c170df36ed5e7ee47ca011b0169a0a7acd199c/src%2Fdoc%2Findex.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Findex.md?ref=48c170df36ed5e7ee47ca011b0169a0a7acd199c", "patch": "@@ -40,7 +40,7 @@ how to write `unsafe` Rust code. It is for advanced Rust programmers.\n \n # Tools\n \n-[Cargo](https://crates.io) is the Rust's package manager providing access to libraries\n+[Cargo](http://doc.crates.io/index.html) is the Rust's package manager providing access to libraries\n beyond the standard one, and its website contains lots of good documentation.\n \n [`rustdoc`](book/documentation.html) is the Rust's documentation generator, a tool converting"}]}