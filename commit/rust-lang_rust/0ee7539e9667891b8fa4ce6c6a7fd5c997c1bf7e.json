{"sha": "0ee7539e9667891b8fa4ce6c6a7fd5c997c1bf7e", "node_id": "C_kwDOAAsO6NoAKDBlZTc1MzllOTY2Nzg5MWI4ZmE0Y2U2YzZhN2ZkNWM5OTdjMWJmN2U", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-17T23:05:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-17T23:05:52Z"}, "message": "Rollup merge of #109102 - compiler-errors:ambig-assoc-in-non-lt-binder, r=jackh726\n\nErase escaping late-bound regions when probing for ambiguous associated types\n\nFixes #109090", "tree": {"sha": "cf5994472e41e5c4f2b3a7fcf460fc8d21dea8ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf5994472e41e5c4f2b3a7fcf460fc8d21dea8ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ee7539e9667891b8fa4ce6c6a7fd5c997c1bf7e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkFPJQCRBK7hj4Ov3rIwAAZSAIAJs0/vdI2xxUj8BjXvOD+pGR\n9jVDWXx9Pl9TFlXDTFSw9h+FUzCIKqowmueXRNdMCLK07lOpJjeYAN6tHs9v3FEn\nurIo19Uslsh5WrYroJ0jvyV+nXnZ/mpQWw8WlfXFw9S5Se1DYzJ8o66zQzyl5+Mo\nxWQpmpgfTr9ZzwB9QWdreQjLELr+v8kNswa7QvStllOZc4rshv71IUdxNeDSME9V\nSWnTZSoxWVgCEGG3bmrDDI7axry9tS66t3KWEDCWQY2jINfyIQ4Gpyapw5vzX7tQ\nVnraCB6x5NzZttcsjKa8hEARYwz94fWC96xEv2QDg7vXWQkJ70nbu/zTuAPwHTg=\n=2HZX\n-----END PGP SIGNATURE-----\n", "payload": "tree cf5994472e41e5c4f2b3a7fcf460fc8d21dea8ef\nparent 13afbdaa0655dda23d7129e59ac48f1ec88b2084\nparent 79ad7cca453468458a0ae63d091cbe6b23aa94a1\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1679094352 +0100\ncommitter GitHub <noreply@github.com> 1679094352 +0100\n\nRollup merge of #109102 - compiler-errors:ambig-assoc-in-non-lt-binder, r=jackh726\n\nErase escaping late-bound regions when probing for ambiguous associated types\n\nFixes #109090\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ee7539e9667891b8fa4ce6c6a7fd5c997c1bf7e", "html_url": "https://github.com/rust-lang/rust/commit/0ee7539e9667891b8fa4ce6c6a7fd5c997c1bf7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ee7539e9667891b8fa4ce6c6a7fd5c997c1bf7e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13afbdaa0655dda23d7129e59ac48f1ec88b2084", "url": "https://api.github.com/repos/rust-lang/rust/commits/13afbdaa0655dda23d7129e59ac48f1ec88b2084", "html_url": "https://github.com/rust-lang/rust/commit/13afbdaa0655dda23d7129e59ac48f1ec88b2084"}, {"sha": "79ad7cca453468458a0ae63d091cbe6b23aa94a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/79ad7cca453468458a0ae63d091cbe6b23aa94a1", "html_url": "https://github.com/rust-lang/rust/commit/79ad7cca453468458a0ae63d091cbe6b23aa94a1"}], "stats": {"total": 46, "additions": 43, "deletions": 3}, "files": [{"sha": "d820a3da5550a84f694d79b36c26b856ee9da74f", "filename": "compiler/rustc_hir_analysis/src/astconv/mod.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0ee7539e9667891b8fa4ce6c6a7fd5c997c1bf7e/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ee7539e9667891b8fa4ce6c6a7fd5c997c1bf7e/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs?ref=0ee7539e9667891b8fa4ce6c6a7fd5c997c1bf7e", "patch": "@@ -2396,13 +2396,24 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                                     tcx,\n                                     infcx.fresh_substs_for_item(DUMMY_SP, impl_def_id),\n                                 );\n+                                // I guess we don't need to make a universe unless we need it,\n+                                // but also we're on the error path, so it doesn't matter here.\n+                                let universe = infcx.create_next_universe();\n                                 infcx\n                                     .can_eq(\n                                         ty::ParamEnv::empty(),\n                                         impl_.self_ty(),\n-                                        // Must fold past escaping bound vars too,\n-                                        // since we have those at this point in astconv.\n-                                        tcx.fold_regions(qself_ty, |_, _| tcx.lifetimes.re_erased),\n+                                        tcx.replace_escaping_bound_vars_uncached(qself_ty, ty::fold::FnMutDelegate {\n+                                            regions: &mut |_| tcx.lifetimes.re_erased,\n+                                            types: &mut |bv| tcx.mk_placeholder(ty::PlaceholderType {\n+                                                universe,\n+                                                name: bv.kind,\n+                                            }),\n+                                            consts: &mut |bv, ty| tcx.mk_const(ty::PlaceholderConst {\n+                                                universe,\n+                                                name: bv\n+                                            }, ty),\n+                                        })\n                                     )\n                             })\n                             && tcx.impl_polarity(impl_def_id) != ty::ImplPolarity::Negative"}, {"sha": "50f0152e904f4706c1874bd043d834b46a9c1549", "filename": "tests/ui/traits/non_lifetime_binders/missing-assoc-item.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0ee7539e9667891b8fa4ce6c6a7fd5c997c1bf7e/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fmissing-assoc-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ee7539e9667891b8fa4ce6c6a7fd5c997c1bf7e/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fmissing-assoc-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fmissing-assoc-item.rs?ref=0ee7539e9667891b8fa4ce6c6a7fd5c997c1bf7e", "patch": "@@ -0,0 +1,11 @@\n+#![feature(non_lifetime_binders)]\n+//~^ WARN the feature `non_lifetime_binders` is incomplete\n+\n+fn f()\n+where\n+    for<B> B::Item: Send,\n+    //~^ ERROR ambiguous associated type\n+{\n+}\n+\n+fn main() {}"}, {"sha": "be6955c111e834ff04fde224e7bbe3f90979e624", "filename": "tests/ui/traits/non_lifetime_binders/missing-assoc-item.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0ee7539e9667891b8fa4ce6c6a7fd5c997c1bf7e/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fmissing-assoc-item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0ee7539e9667891b8fa4ce6c6a7fd5c997c1bf7e/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fmissing-assoc-item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fmissing-assoc-item.stderr?ref=0ee7539e9667891b8fa4ce6c6a7fd5c997c1bf7e", "patch": "@@ -0,0 +1,18 @@\n+warning: the feature `non_lifetime_binders` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/missing-assoc-item.rs:1:12\n+   |\n+LL | #![feature(non_lifetime_binders)]\n+   |            ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #108185 <https://github.com/rust-lang/rust/issues/108185> for more information\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+error[E0223]: ambiguous associated type\n+  --> $DIR/missing-assoc-item.rs:6:12\n+   |\n+LL |     for<B> B::Item: Send,\n+   |            ^^^^^^^ help: use the fully-qualified path: `<B as IntoIterator>::Item`\n+\n+error: aborting due to previous error; 1 warning emitted\n+\n+For more information about this error, try `rustc --explain E0223`."}]}