{"sha": "34263cd6bdb29df23258a96ea18fe986efe8dad0", "node_id": "C_kwDOAAsO6NoAKDM0MjYzY2Q2YmRiMjlkZjIzMjU4YTk2ZWExOGZlOTg2ZWZlOGRhZDA", "commit": {"author": {"name": "Chris Emerson", "email": "github@mail.nosreme.org", "date": "2019-11-12T02:55:04Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2022-01-02T16:06:06Z"}, "message": "Fix --check -l with stdin. (#3910)\n\n* Fix some possible panics when using `--check` with stdin.\r\n\r\nOne case which doesn't work is when there are only line ending fixes;\r\nwith stdin rustfmt is unable to detect the difference as it stores\r\nthe input with Unix line endings.\r\n\r\n* Add test for `rustfmt --check -l` with stdin.", "tree": {"sha": "fce6b7e54f8e332c5d63bc5716a6ee1720f80fe6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fce6b7e54f8e332c5d63bc5716a6ee1720f80fe6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34263cd6bdb29df23258a96ea18fe986efe8dad0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34263cd6bdb29df23258a96ea18fe986efe8dad0", "html_url": "https://github.com/rust-lang/rust/commit/34263cd6bdb29df23258a96ea18fe986efe8dad0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34263cd6bdb29df23258a96ea18fe986efe8dad0/comments", "author": {"login": "jugglerchris", "id": 1644842, "node_id": "MDQ6VXNlcjE2NDQ4NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1644842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jugglerchris", "html_url": "https://github.com/jugglerchris", "followers_url": "https://api.github.com/users/jugglerchris/followers", "following_url": "https://api.github.com/users/jugglerchris/following{/other_user}", "gists_url": "https://api.github.com/users/jugglerchris/gists{/gist_id}", "starred_url": "https://api.github.com/users/jugglerchris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jugglerchris/subscriptions", "organizations_url": "https://api.github.com/users/jugglerchris/orgs", "repos_url": "https://api.github.com/users/jugglerchris/repos", "events_url": "https://api.github.com/users/jugglerchris/events{/privacy}", "received_events_url": "https://api.github.com/users/jugglerchris/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93b7de5b0110a1ab79714c3dfd009a4aae3e34b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/93b7de5b0110a1ab79714c3dfd009a4aae3e34b1", "html_url": "https://github.com/rust-lang/rust/commit/93b7de5b0110a1ab79714c3dfd009a4aae3e34b1"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "5e1f1344656052dc2b5c26306bed3d8e414c77f1", "filename": "src/emitter/diff.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/34263cd6bdb29df23258a96ea18fe986efe8dad0/src%2Femitter%2Fdiff.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34263cd6bdb29df23258a96ea18fe986efe8dad0/src%2Femitter%2Fdiff.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Femitter%2Fdiff.rs?ref=34263cd6bdb29df23258a96ea18fe986efe8dad0", "patch": "@@ -28,7 +28,7 @@ impl Emitter for DiffEmitter {\n \n         if has_diff {\n             if self.config.print_misformatted_file_names() {\n-                writeln!(output, \"{}\", ensure_real_path(filename).display())?;\n+                writeln!(output, \"{}\", filename)?;\n             } else {\n                 print_diff(\n                     mismatch,\n@@ -40,8 +40,7 @@ impl Emitter for DiffEmitter {\n             // This occurs when the only difference between the original and formatted values\n             // is the newline style. This happens because The make_diff function compares the\n             // original and formatted values line by line, independent of line endings.\n-            let file_path = ensure_real_path(filename);\n-            writeln!(output, \"Incorrect newline style in {}\", file_path.display())?;\n+            writeln!(output, \"Incorrect newline style in {}\", filename)?;\n             return Ok(EmitterResult { has_diff: true });\n         }\n "}, {"sha": "db1cf88479cf1d2916a36f5a627e99d289159ef4", "filename": "src/test/mod.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/34263cd6bdb29df23258a96ea18fe986efe8dad0/src%2Ftest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34263cd6bdb29df23258a96ea18fe986efe8dad0/src%2Ftest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmod.rs?ref=34263cd6bdb29df23258a96ea18fe986efe8dad0", "patch": "@@ -989,3 +989,29 @@ fn verify_check_works_with_stdin() {\n         .expect(\"Failed to wait on rustfmt child\");\n     assert!(output.status.success());\n }\n+\n+#[test]\n+fn verify_check_l_works_with_stdin() {\n+    init_log();\n+\n+    let mut child = Command::new(rustfmt().to_str().unwrap())\n+        .arg(\"--check\")\n+        .arg(\"-l\")\n+        .stdin(Stdio::piped())\n+        .stdout(Stdio::piped())\n+        .stderr(Stdio::piped())\n+        .spawn()\n+        .expect(\"run with check option failed\");\n+\n+    {\n+        let stdin = child.stdin.as_mut().expect(\"Failed to open stdin\");\n+        stdin\n+            .write_all(\"fn main()\\n{}\\n\".as_bytes())\n+            .expect(\"Failed to write to rustfmt --check\");\n+    }\n+    let output = child\n+        .wait_with_output()\n+        .expect(\"Failed to wait on rustfmt child\");\n+    assert!(output.status.success());\n+    assert_eq!(std::str::from_utf8(&output.stdout).unwrap(), \"stdin\\n\");\n+}"}]}