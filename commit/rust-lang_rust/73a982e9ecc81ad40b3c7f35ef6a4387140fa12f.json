{"sha": "73a982e9ecc81ad40b3c7f35ef6a4387140fa12f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczYTk4MmU5ZWNjODFhZDQwYjNjN2YzNWVmNmE0Mzg3MTQwZmExMmY=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2019-11-15T00:27:41Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-09-03T18:59:06Z"}, "message": "assert that SourceIter requirements have not been violated by the pipeline", "tree": {"sha": "39711b313be0c8ab3827ff1abaaa542161b06330", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39711b313be0c8ab3827ff1abaaa542161b06330"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73a982e9ecc81ad40b3c7f35ef6a4387140fa12f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73a982e9ecc81ad40b3c7f35ef6a4387140fa12f", "html_url": "https://github.com/rust-lang/rust/commit/73a982e9ecc81ad40b3c7f35ef6a4387140fa12f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73a982e9ecc81ad40b3c7f35ef6a4387140fa12f/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a327394e4ae84600f506079fddd0e2bb1959b06", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a327394e4ae84600f506079fddd0e2bb1959b06", "html_url": "https://github.com/rust-lang/rust/commit/2a327394e4ae84600f506079fddd0e2bb1959b06"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "b21f2a908440dda889b87f0ee7e8d7c484fc7a5b", "filename": "library/alloc/src/vec.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73a982e9ecc81ad40b3c7f35ef6a4387140fa12f/library%2Falloc%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73a982e9ecc81ad40b3c7f35ef6a4387140fa12f/library%2Falloc%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec.rs?ref=73a982e9ecc81ad40b3c7f35ef6a4387140fa12f", "patch": "@@ -2131,12 +2131,14 @@ where\n     I: Iterator<Item = T> + InPlaceIterable + SourceIter<Source = IntoIter<T>>,\n {\n     let mut insert_pos = 0;\n+    let original_ptr = iterator.as_inner().buf.as_ptr();\n \n     // FIXME: how to drop values written into source when iteration panics?\n     //   tail already gets cleaned by IntoIter::drop\n     while let Some(item) = iterator.next() {\n         let source_iter = iterator.as_inner();\n         let src_buf = source_iter.buf.as_ptr();\n+        debug_assert_eq!(original_ptr, src_buf);\n         let src_idx = source_iter.ptr;\n         unsafe {\n             let dst = src_buf.offset(insert_pos as isize);"}]}