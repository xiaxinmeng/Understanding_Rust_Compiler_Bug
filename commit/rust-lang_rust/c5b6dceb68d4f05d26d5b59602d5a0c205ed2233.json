{"sha": "c5b6dceb68d4f05d26d5b59602d5a0c205ed2233", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1YjZkY2ViNjhkNGYwNWQyNmQ1YjU5NjAyZDVhMGMyMDVlZDIyMzM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-11-15T09:36:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-15T09:36:28Z"}, "message": "Rollup merge of #66391 - estebank:if-else-async-ice, r=Centril\n\nDo not ICE in `if` without `else` in `async fn`\n\nFix #66387.", "tree": {"sha": "2e79339628c706cffd77642582a7de723a1620cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e79339628c706cffd77642582a7de723a1620cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5b6dceb68d4f05d26d5b59602d5a0c205ed2233", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdznGcCRBK7hj4Ov3rIwAAdHIIAIuZiK73O77o00w334rPkhXf\n/NTVGFJBKdyTY8JPEQGOWKNXhqvDYBfQtpuIZJTAmRE2oHPlt4wkoGY6IuQOj8Z6\ngGbwO+YStanuj7yoOjH0WDvjjjRCMGicIt3vjVpowpNJ4xMj5gu8y8S5oESA8oBp\nJTDKz+ZSGbJKFLfayOgaAFU+UhW26GD2XTCvKMeK5hPCh6LXodwewuo2CSgj7rHy\ntHFzn/dZk1VqVaqn6k5zr349uOdMmEA1ksbMpW9O1qvN1qPsYhH7id4iPs8m1rlG\nYn/ezqPNbkWDykfhOakshZvJHyRa6Q+Et/BHe1RlSoPX67b9Tj1PX9+3hTem5CA=\n=zp4M\n-----END PGP SIGNATURE-----\n", "payload": "tree 2e79339628c706cffd77642582a7de723a1620cd\nparent 1baa7724ba45b486d3cadea1a5c0e0c948f1ea81\nparent c0a0a7d711b89d89e04a135d6035a2881a7de72e\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1573810588 +0900\ncommitter GitHub <noreply@github.com> 1573810588 +0900\n\nRollup merge of #66391 - estebank:if-else-async-ice, r=Centril\n\nDo not ICE in `if` without `else` in `async fn`\n\nFix #66387.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5b6dceb68d4f05d26d5b59602d5a0c205ed2233", "html_url": "https://github.com/rust-lang/rust/commit/c5b6dceb68d4f05d26d5b59602d5a0c205ed2233", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5b6dceb68d4f05d26d5b59602d5a0c205ed2233/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1baa7724ba45b486d3cadea1a5c0e0c948f1ea81", "url": "https://api.github.com/repos/rust-lang/rust/commits/1baa7724ba45b486d3cadea1a5c0e0c948f1ea81", "html_url": "https://github.com/rust-lang/rust/commit/1baa7724ba45b486d3cadea1a5c0e0c948f1ea81"}, {"sha": "c0a0a7d711b89d89e04a135d6035a2881a7de72e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0a0a7d711b89d89e04a135d6035a2881a7de72e", "html_url": "https://github.com/rust-lang/rust/commit/c0a0a7d711b89d89e04a135d6035a2881a7de72e"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "6e37c0dbbdf9d2534f4ed921e6410854aa78b64a", "filename": "src/librustc_typeck/check/generator_interior.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c5b6dceb68d4f05d26d5b59602d5a0c205ed2233/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5b6dceb68d4f05d26d5b59602d5a0c205ed2233/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs?ref=c5b6dceb68d4f05d26d5b59602d5a0c205ed2233", "patch": "@@ -244,7 +244,13 @@ impl<'a, 'tcx> Visitor<'tcx> for InteriorVisitor<'a, 'tcx> {\n         // can be reborrowed without needing to spill to a temporary.\n         // If this were not the case, then we could conceivably have\n         // to create intermediate temporaries.)\n-        let ty = self.fcx.tables.borrow().expr_ty(expr);\n-        self.record(ty, scope, Some(expr), expr.span);\n+        //\n+        // The type table might not have information for this expression\n+        // if it is in a malformed scope. (#66387)\n+        if let Some(ty) = self.fcx.tables.borrow().expr_ty_opt(expr) {\n+            self.record(ty, scope, Some(expr), expr.span);\n+        } else {\n+            self.fcx.tcx.sess.delay_span_bug(expr.span, \"no type for node\");\n+        }\n     }\n }"}, {"sha": "aa5a8db61210d0afe2ee5ae1c23cdcb5e12143cf", "filename": "src/test/ui/async-await/issue-66387-if-without-else.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c5b6dceb68d4f05d26d5b59602d5a0c205ed2233/src%2Ftest%2Fui%2Fasync-await%2Fissue-66387-if-without-else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5b6dceb68d4f05d26d5b59602d5a0c205ed2233/src%2Ftest%2Fui%2Fasync-await%2Fissue-66387-if-without-else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-66387-if-without-else.rs?ref=c5b6dceb68d4f05d26d5b59602d5a0c205ed2233", "patch": "@@ -0,0 +1,10 @@\n+// edition:2018\n+async fn f() -> i32 {\n+    if true { //~ ERROR if may be missing an else clause\n+        return 0;\n+    }\n+    // An `if` block without `else` causes the type table not to have a type for this expr.\n+    // Check that we do not unconditionally access the type table and we don't ICE.\n+}\n+\n+fn main() {}"}, {"sha": "32952059525a0037f4ade960bd24696904dbb33d", "filename": "src/test/ui/async-await/issue-66387-if-without-else.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c5b6dceb68d4f05d26d5b59602d5a0c205ed2233/src%2Ftest%2Fui%2Fasync-await%2Fissue-66387-if-without-else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c5b6dceb68d4f05d26d5b59602d5a0c205ed2233/src%2Ftest%2Fui%2Fasync-await%2Fissue-66387-if-without-else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-66387-if-without-else.stderr?ref=c5b6dceb68d4f05d26d5b59602d5a0c205ed2233", "patch": "@@ -0,0 +1,16 @@\n+error[E0317]: if may be missing an else clause\n+  --> $DIR/issue-66387-if-without-else.rs:3:5\n+   |\n+LL | /     if true {\n+LL | |         return 0;\n+LL | |     }\n+   | |_____^ expected (), found i32\n+   |\n+   = note: expected type `()`\n+              found type `i32`\n+   = note: `if` expressions without `else` evaluate to `()`\n+   = help: consider adding an `else` block that evaluates to the expected type\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0317`."}]}