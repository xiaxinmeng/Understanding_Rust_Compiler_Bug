{"sha": "f749d88ae7574aa18aa527ad4d6345e98ea00a82", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3NDlkODhhZTc1NzRhYTE4YWE1MjdhZDRkNjM0NWU5OGVhMDBhODI=", "commit": {"author": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-05-19T16:51:42Z"}, "committer": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-05-19T16:51:42Z"}, "message": "Disallow shadowing const parameters", "tree": {"sha": "648f0d100ae6ca03854458f5a543f4453380a6c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/648f0d100ae6ca03854458f5a543f4453380a6c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f749d88ae7574aa18aa527ad4d6345e98ea00a82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f749d88ae7574aa18aa527ad4d6345e98ea00a82", "html_url": "https://github.com/rust-lang/rust/commit/f749d88ae7574aa18aa527ad4d6345e98ea00a82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f749d88ae7574aa18aa527ad4d6345e98ea00a82/comments", "author": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e827cc21e0734edd26170e8d1481f0d66a1426b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e827cc21e0734edd26170e8d1481f0d66a1426b", "html_url": "https://github.com/rust-lang/rust/commit/3e827cc21e0734edd26170e8d1481f0d66a1426b"}], "stats": {"total": 139, "additions": 124, "deletions": 15}, "files": [{"sha": "a1eafd65d643d57bc238fb060e4708bc722ef01f", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/f749d88ae7574aa18aa527ad4d6345e98ea00a82/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f749d88ae7574aa18aa527ad4d6345e98ea00a82/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=f749d88ae7574aa18aa527ad4d6345e98ea00a82", "patch": "@@ -425,24 +425,29 @@ impl<'a> Resolver<'a> {\n                 }\n                 err\n             }\n-            ResolutionError::BindingShadowsSomethingUnacceptable(what_binding, name, binding) => {\n-                let res = binding.res();\n-                let shadows_what = res.descr();\n+            ResolutionError::BindingShadowsSomethingUnacceptable {\n+                shadowing_binding_descr,\n+                name,\n+                participle,\n+                article,\n+                shadowed_binding_descr,\n+                shadowed_binding_span,\n+            } => {\n                 let mut err = struct_span_err!(\n                     self.session,\n                     span,\n                     E0530,\n                     \"{}s cannot shadow {}s\",\n-                    what_binding,\n-                    shadows_what\n+                    shadowing_binding_descr,\n+                    shadowed_binding_descr,\n                 );\n                 err.span_label(\n                     span,\n-                    format!(\"cannot be named the same as {} {}\", res.article(), shadows_what),\n+                    format!(\"cannot be named the same as {} {}\", article, shadowed_binding_descr),\n                 );\n-                let participle = if binding.is_import() { \"imported\" } else { \"defined\" };\n-                let msg = format!(\"the {} `{}` is {} here\", shadows_what, name, participle);\n-                err.span_label(binding.span, msg);\n+                let msg =\n+                    format!(\"the {} `{}` is {} here\", shadowed_binding_descr, name, participle);\n+                err.span_label(shadowed_binding_span, msg);\n                 err\n             }\n             ResolutionError::ForwardDeclaredTyParam => {"}, {"sha": "662d39f6ef39ca41bf7390f38c860f385e374823", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 25, "deletions": 5, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/f749d88ae7574aa18aa527ad4d6345e98ea00a82/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f749d88ae7574aa18aa527ad4d6345e98ea00a82/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=f749d88ae7574aa18aa527ad4d6345e98ea00a82", "patch": "@@ -1763,13 +1763,33 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n                 // to something unusable as a pattern (e.g., constructor function),\n                 // but we still conservatively report an error, see\n                 // issues/33118#issuecomment-233962221 for one reason why.\n+                let binding = binding.expect(\"no binding for a ctor or static\");\n                 self.report_error(\n                     ident.span,\n-                    ResolutionError::BindingShadowsSomethingUnacceptable(\n-                        pat_src.descr(),\n-                        ident.name,\n-                        binding.expect(\"no binding for a ctor or static\"),\n-                    ),\n+                    ResolutionError::BindingShadowsSomethingUnacceptable {\n+                        shadowing_binding_descr: pat_src.descr(),\n+                        name: ident.name,\n+                        participle: if binding.is_import() { \"imported\" } else { \"defined\" },\n+                        article: binding.res().article(),\n+                        shadowed_binding_descr: binding.res().descr(),\n+                        shadowed_binding_span: binding.span,\n+                    },\n+                );\n+                None\n+            }\n+            Res::Def(DefKind::ConstParam, def_id) => {\n+                // Same as for DefKind::Const above, but here, `binding` is `None`, so we\n+                // have to construct the error differently\n+                self.report_error(\n+                    ident.span,\n+                    ResolutionError::BindingShadowsSomethingUnacceptable {\n+                        shadowing_binding_descr: pat_src.descr(),\n+                        name: ident.name,\n+                        participle: \"defined\",\n+                        article: res.article(),\n+                        shadowed_binding_descr: res.descr(),\n+                        shadowed_binding_span: self.r.opt_span(def_id).expect(\"const parameter defined outside of local crate\"),\n+                    }\n                 );\n                 None\n             }"}, {"sha": "05c698925041b3720ac18f04fd6eed4d9904750e", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f749d88ae7574aa18aa527ad4d6345e98ea00a82/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f749d88ae7574aa18aa527ad4d6345e98ea00a82/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=f749d88ae7574aa18aa527ad4d6345e98ea00a82", "patch": "@@ -234,7 +234,14 @@ enum ResolutionError<'a> {\n         /* current */ &'static str,\n     ),\n     /// Error E0530: `X` bindings cannot shadow `Y`s.\n-    BindingShadowsSomethingUnacceptable(&'static str, Symbol, &'a NameBinding<'a>),\n+    BindingShadowsSomethingUnacceptable {\n+        shadowing_binding_descr: &'static str,\n+        name: Symbol,\n+        participle: &'static str,\n+        article: &'static str,\n+        shadowed_binding_descr: &'static str,\n+        shadowed_binding_span: Span,\n+    },\n     /// Error E0128: generic parameters with a default cannot use forward-declared identifiers.\n     ForwardDeclaredTyParam, // FIXME(const_generics_defaults)\n     /// ERROR E0770: the type of const parameters must not depend on other generic parameters."}, {"sha": "3a33c1934084185e9976a8c9cbb3a3105a3253a9", "filename": "src/test/ui/resolve/issue-85348.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f749d88ae7574aa18aa527ad4d6345e98ea00a82/src%2Ftest%2Fui%2Fresolve%2Fissue-85348.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f749d88ae7574aa18aa527ad4d6345e98ea00a82/src%2Ftest%2Fui%2Fresolve%2Fissue-85348.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-85348.rs?ref=f749d88ae7574aa18aa527ad4d6345e98ea00a82", "patch": "@@ -0,0 +1,12 @@\n+// Checks whether shadowing a const parameter leads to an ICE (#85348).\n+\n+impl<const N: usize> ArrayWindowsExample {\n+//~^ ERROR: cannot find type `ArrayWindowsExample` in this scope [E0412]\n+    fn next() {\n+        let mut N;\n+        //~^ ERROR: let bindings cannot shadow const parameters [E0530]\n+        //~| ERROR: type annotations needed [E0282]\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "f475c26f32b8fec5f7f6e893c242684d528e4107", "filename": "src/test/ui/resolve/issue-85348.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/f749d88ae7574aa18aa527ad4d6345e98ea00a82/src%2Ftest%2Fui%2Fresolve%2Fissue-85348.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f749d88ae7574aa18aa527ad4d6345e98ea00a82/src%2Ftest%2Fui%2Fresolve%2Fissue-85348.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-85348.stderr?ref=f749d88ae7574aa18aa527ad4d6345e98ea00a82", "patch": "@@ -0,0 +1,25 @@\n+error[E0530]: let bindings cannot shadow const parameters\n+  --> $DIR/issue-85348.rs:6:17\n+   |\n+LL | impl<const N: usize> ArrayWindowsExample {\n+   |            - the const parameter `N` is defined here\n+...\n+LL |         let mut N;\n+   |                 ^ cannot be named the same as a const parameter\n+\n+error[E0412]: cannot find type `ArrayWindowsExample` in this scope\n+  --> $DIR/issue-85348.rs:3:22\n+   |\n+LL | impl<const N: usize> ArrayWindowsExample {\n+   |                      ^^^^^^^^^^^^^^^^^^^ not found in this scope\n+\n+error[E0282]: type annotations needed\n+  --> $DIR/issue-85348.rs:6:13\n+   |\n+LL |         let mut N;\n+   |             ^^^^^ consider giving `N` a type\n+\n+error: aborting due to 3 previous errors\n+\n+Some errors have detailed explanations: E0282, E0412, E0530.\n+For more information about an error, try `rustc --explain E0282`."}, {"sha": "c435c16dc67885dcc4890a78c24e6d6009f499ef", "filename": "src/test/ui/resolve/shadow-const-param.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f749d88ae7574aa18aa527ad4d6345e98ea00a82/src%2Ftest%2Fui%2Fresolve%2Fshadow-const-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f749d88ae7574aa18aa527ad4d6345e98ea00a82/src%2Ftest%2Fui%2Fresolve%2Fshadow-const-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fshadow-const-param.rs?ref=f749d88ae7574aa18aa527ad4d6345e98ea00a82", "patch": "@@ -0,0 +1,20 @@\n+// Checks that const parameters cannot be shadowed with fresh bindings\n+// even in syntactically unambiguous contexts. See\n+// https://github.com/rust-lang/rust/issues/33118#issuecomment-233962221\n+\n+fn foo<const N: i32>(i: i32) -> bool {\n+    match i {\n+        N @ _ => true,\n+        //~^ ERROR: match bindings cannot shadow const parameters [E0530]\n+    }\n+}\n+\n+fn bar<const N: i32>(i: i32) -> bool {\n+    let N @ _ = 0;\n+    //~^ ERROR: let bindings cannot shadow const parameters [E0530]\n+    match i {\n+        N @ _ => true,\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "fbd0d811000822d9d5146fdbeea112dd85c72ee9", "filename": "src/test/ui/resolve/shadow-const-param.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f749d88ae7574aa18aa527ad4d6345e98ea00a82/src%2Ftest%2Fui%2Fresolve%2Fshadow-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f749d88ae7574aa18aa527ad4d6345e98ea00a82/src%2Ftest%2Fui%2Fresolve%2Fshadow-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fshadow-const-param.stderr?ref=f749d88ae7574aa18aa527ad4d6345e98ea00a82", "patch": "@@ -0,0 +1,20 @@\n+error[E0530]: match bindings cannot shadow const parameters\n+  --> $DIR/shadow-const-param.rs:7:9\n+   |\n+LL | fn foo<const N: i32>(i: i32) -> bool {\n+   |              - the const parameter `N` is defined here\n+LL |     match i {\n+LL |         N @ _ => true,\n+   |         ^ cannot be named the same as a const parameter\n+\n+error[E0530]: let bindings cannot shadow const parameters\n+  --> $DIR/shadow-const-param.rs:13:9\n+   |\n+LL | fn bar<const N: i32>(i: i32) -> bool {\n+   |              - the const parameter `N` is defined here\n+LL |     let N @ _ = 0;\n+   |         ^ cannot be named the same as a const parameter\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0530`."}]}