{"sha": "dcaec88a57cd0f388af1678f8db155b2add8b175", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjYWVjODhhNTdjZDBmMzg4YWYxNjc4ZjhkYjE1NWIyYWRkOGIxNzU=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-03-07T22:37:18Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-03-07T22:37:18Z"}, "message": "Add more details to elseless if error", "tree": {"sha": "b10cb61b772cd7fd5450b8c5bd860154315a04bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b10cb61b772cd7fd5450b8c5bd860154315a04bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcaec88a57cd0f388af1678f8db155b2add8b175", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcaec88a57cd0f388af1678f8db155b2add8b175", "html_url": "https://github.com/rust-lang/rust/commit/dcaec88a57cd0f388af1678f8db155b2add8b175", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcaec88a57cd0f388af1678f8db155b2add8b175/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffa40cb45c195e317602437d8a40178e72807d46", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffa40cb45c195e317602437d8a40178e72807d46", "html_url": "https://github.com/rust-lang/rust/commit/ffa40cb45c195e317602437d8a40178e72807d46"}], "stats": {"total": 77, "additions": 69, "deletions": 8}, "files": [{"sha": "f2ab78e16fb973cab4b05c272182d24cc6c98f5a", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/dcaec88a57cd0f388af1678f8db155b2add8b175/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcaec88a57cd0f388af1678f8db155b2add8b175/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=dcaec88a57cd0f388af1678f8db155b2add8b175", "patch": "@@ -3480,6 +3480,10 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             coerce.coerce_forced_unit(self, &else_cause, &mut |err| {\n                 if let Some((sp, msg)) = &ret_reason {\n                     err.span_label(*sp, msg.as_str());\n+                } else if let ExprKind::Block(block, _) = &then_expr.node {\n+                    if let Some(expr) = &block.expr {\n+                        err.span_label(expr.span, \"found here\".to_string());\n+                    }\n                 }\n                 err.note(\"`if` expressions without `else` evaluate to `()`\");\n                 err.help(\"consider adding an `else` block that evaluates to the expected type\");\n@@ -3498,11 +3502,10 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n     }\n \n     fn maybe_get_coercion_reason(&self, hir_id: hir::HirId, sp: Span) -> Option<(Span, String)> {\n-        if let Node::Block(block) = self.tcx.hir().get_by_hir_id(\n-            self.tcx.hir().get_parent_node_by_hir_id(\n-                self.tcx.hir().get_parent_node_by_hir_id(hir_id),\n-            ),\n-        ) {\n+        let node = self.tcx.hir().get_by_hir_id(self.tcx.hir().get_parent_node_by_hir_id(\n+            self.tcx.hir().get_parent_node_by_hir_id(hir_id),\n+        ));\n+        if let Node::Block(block) = node {\n             // check that the body's parent is an fn\n             let parent = self.tcx.hir().get_by_hir_id(\n                 self.tcx.hir().get_parent_node_by_hir_id(\n@@ -3521,6 +3524,11 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                 }\n             }\n         }\n+        if let Node::Local(hir::Local {\n+            ty: Some(_), pat, ..\n+        }) = node {\n+            return Some((pat.span, \"expected because of this assignment\".to_string()));\n+        }\n         None\n     }\n "}, {"sha": "67e4445629f8caa044d2c2bd25b6051168d34e14", "filename": "src/test/ui/if/if-without-else-as-fn-expr.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/dcaec88a57cd0f388af1678f8db155b2add8b175/src%2Ftest%2Fui%2Fif%2Fif-without-else-as-fn-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcaec88a57cd0f388af1678f8db155b2add8b175/src%2Ftest%2Fui%2Fif%2Fif-without-else-as-fn-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fif%2Fif-without-else-as-fn-expr.rs?ref=dcaec88a57cd0f388af1678f8db155b2add8b175", "patch": "@@ -5,6 +5,21 @@ fn foo(bar: usize) -> usize {\n     //~^^^ ERROR if may be missing an else clause\n }\n \n+fn foo2(bar: usize) -> usize {\n+    let x: usize = if bar % 5 == 0 {\n+        return 3;\n+    };\n+    //~^^^ ERROR if may be missing an else clause\n+    x\n+}\n+\n+fn foo3(bar: usize) -> usize {\n+    if bar % 5 == 0 {\n+        3\n+    }\n+    //~^^^ ERROR if may be missing an else clause\n+}\n+\n fn main() {\n     let _ = foo(1);\n }"}, {"sha": "0ba72726ca78795807758c74146bb5ffa44189b3", "filename": "src/test/ui/if/if-without-else-as-fn-expr.stderr", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/dcaec88a57cd0f388af1678f8db155b2add8b175/src%2Ftest%2Fui%2Fif%2Fif-without-else-as-fn-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dcaec88a57cd0f388af1678f8db155b2add8b175/src%2Ftest%2Fui%2Fif%2Fif-without-else-as-fn-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fif%2Fif-without-else-as-fn-expr.stderr?ref=dcaec88a57cd0f388af1678f8db155b2add8b175", "patch": "@@ -13,6 +13,37 @@ LL | |     }\n    = note: `if` expressions without `else` evaluate to `()`\n    = help: consider adding an `else` block that evaluates to the expected type\n \n-error: aborting due to previous error\n+error[E0317]: if may be missing an else clause\n+  --> $DIR/if-without-else-as-fn-expr.rs:9:20\n+   |\n+LL |       let x: usize = if bar % 5 == 0 {\n+   |  _________-__________^\n+   | |         |\n+   | |         expected because of this assignment\n+LL | |         return 3;\n+LL | |     };\n+   | |_____^ expected usize, found ()\n+   |\n+   = note: expected type `usize`\n+              found type `()`\n+   = note: `if` expressions without `else` evaluate to `()`\n+   = help: consider adding an `else` block that evaluates to the expected type\n+\n+error[E0317]: if may be missing an else clause\n+  --> $DIR/if-without-else-as-fn-expr.rs:17:5\n+   |\n+LL |   fn foo3(bar: usize) -> usize {\n+   |                          ----- expected `usize` because of this return type\n+LL | /     if bar % 5 == 0 {\n+LL | |         3\n+LL | |     }\n+   | |_____^ expected usize, found ()\n+   |\n+   = note: expected type `usize`\n+              found type `()`\n+   = note: `if` expressions without `else` evaluate to `()`\n+   = help: consider adding an `else` block that evaluates to the expected type\n+\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0317`."}, {"sha": "ddb013ab711fad05b9059373b8346a849e0de772", "filename": "src/test/ui/if/if-without-else-result.stderr", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dcaec88a57cd0f388af1678f8db155b2add8b175/src%2Ftest%2Fui%2Fif%2Fif-without-else-result.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dcaec88a57cd0f388af1678f8db155b2add8b175/src%2Ftest%2Fui%2Fif%2Fif-without-else-result.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fif%2Fif-without-else-result.stderr?ref=dcaec88a57cd0f388af1678f8db155b2add8b175", "patch": "@@ -2,7 +2,10 @@ error[E0317]: if may be missing an else clause\n   --> $DIR/if-without-else-result.rs:2:13\n    |\n LL |     let a = if true { true };\n-   |             ^^^^^^^^^^^^^^^^ expected (), found bool\n+   |             ^^^^^^^^^^----^^\n+   |             |         |\n+   |             |         found here\n+   |             expected (), found bool\n    |\n    = note: expected type `()`\n               found type `bool`"}, {"sha": "4d7116a0ee972fe394af31a14081047170ca7131", "filename": "src/test/ui/issues/issue-4201.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dcaec88a57cd0f388af1678f8db155b2add8b175/src%2Ftest%2Fui%2Fissues%2Fissue-4201.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dcaec88a57cd0f388af1678f8db155b2add8b175/src%2Ftest%2Fui%2Fissues%2Fissue-4201.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-4201.stderr?ref=dcaec88a57cd0f388af1678f8db155b2add8b175", "patch": "@@ -8,6 +8,7 @@ LL | | //~| expected type `()`\n LL | | //~| found type `{integer}`\n LL | | //~| expected (), found integer\n LL | |         1\n+   | |         - found here\n LL | |     };\n    | |_____^ expected (), found integer\n    |"}, {"sha": "0c3ba2ea4f94dabe1d95ab15c10e7ad590f6cefb", "filename": "src/test/ui/issues/issue-50577.stderr", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dcaec88a57cd0f388af1678f8db155b2add8b175/src%2Ftest%2Fui%2Fissues%2Fissue-50577.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dcaec88a57cd0f388af1678f8db155b2add8b175/src%2Ftest%2Fui%2Fissues%2Fissue-50577.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-50577.stderr?ref=dcaec88a57cd0f388af1678f8db155b2add8b175", "patch": "@@ -2,7 +2,10 @@ error[E0317]: if may be missing an else clause\n   --> $DIR/issue-50577.rs:3:16\n    |\n LL |         Drop = assert_eq!(1, 1)\n-   |                ^^^^^^^^^^^^^^^^ expected (), found isize\n+   |                ^^^^^^^^^^^^^^^^\n+   |                |\n+   |                expected (), found isize\n+   |                found here\n    |\n    = note: expected type `()`\n               found type `isize`"}]}