{"sha": "3de7276689fd7ff443218fa479de4984acebead6", "node_id": "C_kwDOAAsO6NoAKDNkZTcyNzY2ODlmZDdmZjQ0MzIxOGZhNDc5ZGU0OTg0YWNlYmVhZDY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-17T05:08:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-17T05:08:11Z"}, "message": "Rollup merge of #92799 - rust-lang:followup-from-92533, r=Aaron1011\n\nRemove some unnecessary uses of `FieldDef::ident`\n\nFollowup from #92533.\n\ncc ``@Aaron1011`` ``@petrochenkov``", "tree": {"sha": "439546d1626f09edf5813bbe217ec7874e90a47f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/439546d1626f09edf5813bbe217ec7874e90a47f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3de7276689fd7ff443218fa479de4984acebead6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh5Pm7CRBK7hj4Ov3rIwAACwIIAEXGkV85gXp481xeMwfBuD/m\nW3c8udx7Oxs2hO6HjAy454vpBWYXfAqS351TV8EzrXvQRcpmNi/oINCkNH6hTl5Y\nmPmpxYzrDNZNNlrdLmewxMD8dquA7zqsA0Bqzv3sPmutIJRkzCqfxrgZtEHFg3/S\nyMaL5tB9JVU1LZIGXQlzCeyzci8aduZc2iOn6aCInCIv2FXsGfp15Xr/iKqfUC23\nyWdlR5sVBE3Mu71NRp4WSDORCp01vkeckf8guw/PtGu4FzViyzSWcUJOZeppndJP\nHiWBoAPkRdvNQNw1FMYgJ7C0plCxiN606+tinMx09t7Jpna5qr7u2LCXAc8hd1w=\n=Azrf\n-----END PGP SIGNATURE-----\n", "payload": "tree 439546d1626f09edf5813bbe217ec7874e90a47f\nparent 869b7bc5e7534acc2a38d0f389e1ef0ef2bb44e6\nparent c84f2b27d3a72526bce7ff89c7be741d2daef123\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1642396091 +0100\ncommitter GitHub <noreply@github.com> 1642396091 +0100\n\nRollup merge of #92799 - rust-lang:followup-from-92533, r=Aaron1011\n\nRemove some unnecessary uses of `FieldDef::ident`\n\nFollowup from #92533.\n\ncc ``@Aaron1011`` ``@petrochenkov``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3de7276689fd7ff443218fa479de4984acebead6", "html_url": "https://github.com/rust-lang/rust/commit/3de7276689fd7ff443218fa479de4984acebead6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3de7276689fd7ff443218fa479de4984acebead6/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "869b7bc5e7534acc2a38d0f389e1ef0ef2bb44e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/869b7bc5e7534acc2a38d0f389e1ef0ef2bb44e6", "html_url": "https://github.com/rust-lang/rust/commit/869b7bc5e7534acc2a38d0f389e1ef0ef2bb44e6"}, {"sha": "c84f2b27d3a72526bce7ff89c7be741d2daef123", "url": "https://api.github.com/repos/rust-lang/rust/commits/c84f2b27d3a72526bce7ff89c7be741d2daef123", "html_url": "https://github.com/rust-lang/rust/commit/c84f2b27d3a72526bce7ff89c7be741d2daef123"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "1a9794e75bc066d0f3139b87d3ba63044ca50dcb", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3de7276689fd7ff443218fa479de4984acebead6/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de7276689fd7ff443218fa479de4984acebead6/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=3de7276689fd7ff443218fa479de4984acebead6", "patch": "@@ -436,8 +436,7 @@ impl<'a, 'tcx> LinkCollector<'a, 'tcx> {\n                 }\n                 match tcx.type_of(did).kind() {\n                     ty::Adt(def, _) if def.is_enum() => {\n-                        if let Some(field) =\n-                            def.all_fields().find(|f| f.ident(tcx).name == variant_field_name)\n+                        if let Some(field) = def.all_fields().find(|f| f.name == variant_field_name)\n                         {\n                             Ok((ty_res, Some(ItemFragment(FragmentKind::VariantField, field.did))))\n                         } else {\n@@ -806,11 +805,8 @@ impl<'a, 'tcx> LinkCollector<'a, 'tcx> {\n                     ty::Adt(def, _) if !def.is_enum() => def,\n                     _ => return None,\n                 };\n-                let field = def\n-                    .non_enum_variant()\n-                    .fields\n-                    .iter()\n-                    .find(|item| item.ident(tcx).name == item_name)?;\n+                let field =\n+                    def.non_enum_variant().fields.iter().find(|item| item.name == item_name)?;\n                 Some((root_res, ItemFragment(FragmentKind::StructField, field.did)))\n             }\n             Res::Def(DefKind::Trait, did) => tcx"}]}