{"sha": "306df94ed34521d3d3536e2393b466519f6dfc96", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwNmRmOTRlZDM0NTIxZDNkMzUzNmUyMzkzYjQ2NjUxOWY2ZGZjOTY=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-03-13T09:48:41Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-03-13T09:48:41Z"}, "message": "Print ConstKind::Bound the same as TyKind::Bound", "tree": {"sha": "fa610e63021a695d4bca98ed6fb169e0a0fc9980", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa610e63021a695d4bca98ed6fb169e0a0fc9980"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/306df94ed34521d3d3536e2393b466519f6dfc96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/306df94ed34521d3d3536e2393b466519f6dfc96", "html_url": "https://github.com/rust-lang/rust/commit/306df94ed34521d3d3536e2393b466519f6dfc96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/306df94ed34521d3d3536e2393b466519f6dfc96/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e73a14234cf1c1e7bf7a1597f1db4a518e1c6bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e73a14234cf1c1e7bf7a1597f1db4a518e1c6bb", "html_url": "https://github.com/rust-lang/rust/commit/6e73a14234cf1c1e7bf7a1597f1db4a518e1c6bb"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "1dade8c0e0887980a229207c71cd5ea1044df63f", "filename": "src/librustc/ty/print/pretty.rs", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/306df94ed34521d3d3536e2393b466519f6dfc96/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/306df94ed34521d3d3536e2393b466519f6dfc96/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs?ref=306df94ed34521d3d3536e2393b466519f6dfc96", "patch": "@@ -533,14 +533,7 @@ pub trait PrettyPrinter<'tcx>:\n             ty::Error => p!(write(\"[type error]\")),\n             ty::Param(ref param_ty) => p!(write(\"{}\", param_ty)),\n             ty::Bound(debruijn, bound_ty) => match bound_ty.kind {\n-                ty::BoundTyKind::Anon => {\n-                    if debruijn == ty::INNERMOST {\n-                        p!(write(\"^{}\", bound_ty.var.index()))\n-                    } else {\n-                        p!(write(\"^{}_{}\", debruijn.index(), bound_ty.var.index()))\n-                    }\n-                }\n-\n+                ty::BoundTyKind::Anon => self.pretty_print_bound_var(debruijn, bound_ty.var)?,\n                 ty::BoundTyKind::Param(p) => p!(write(\"{}\", p)),\n             },\n             ty::Adt(def, substs) => {\n@@ -718,6 +711,18 @@ pub trait PrettyPrinter<'tcx>:\n         Ok(self)\n     }\n \n+    fn pretty_print_bound_var(\n+        &mut self,\n+        debruijn: ty::DebruijnIndex,\n+        var: ty::BoundVar,\n+    ) -> Result<(), Self::Error> {\n+        if debruijn == ty::INNERMOST {\n+            write!(self, \"^{}\", var.index())\n+        } else {\n+            write!(self, \"^{}_{}\", debruijn.index(), var.index())\n+        }\n+    }\n+\n     fn infer_ty_name(&self, _: ty::TyVid) -> Option<String> {\n         None\n     }\n@@ -905,7 +910,10 @@ pub trait PrettyPrinter<'tcx>:\n                 return self.pretty_print_const_value(value, ct.ty, print_ty);\n             }\n \n-            ty::ConstKind::Bound(..) | ty::ConstKind::Placeholder(_) => {\n+            ty::ConstKind::Bound(debruijn, bound_var) => {\n+                self.pretty_print_bound_var(debruijn, bound_var)?\n+            }\n+            ty::ConstKind::Placeholder(_) => {\n                 // fallback\n                 if print_ty {\n                     self = self.typed_value("}]}