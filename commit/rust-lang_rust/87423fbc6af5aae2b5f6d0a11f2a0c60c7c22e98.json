{"sha": "87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3NDIzZmJjNmFmNWFhZTJiNWY2ZDBhMTFmMmEwYzYwYzdjMjJlOTg=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-12-30T21:52:04Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-12-30T23:58:52Z"}, "message": "bootstrap: clippy fixes\n\naddresses:\n\nclippy::or_fun_call\nclippy::single_char_add_str\nclippy::comparison_to_empty\nclippy::or_fun_call", "tree": {"sha": "b7f3b5aabc44920995955423a37107e600d410ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7f3b5aabc44920995955423a37107e600d410ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98", "html_url": "https://github.com/rust-lang/rust/commit/87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2267046859c9ceb932abc983561d53a117089f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2267046859c9ceb932abc983561d53a117089f6", "html_url": "https://github.com/rust-lang/rust/commit/e2267046859c9ceb932abc983561d53a117089f6"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "ec9ce4c820c69f18b72823735b47710b86d84f43", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98", "patch": "@@ -1534,7 +1534,7 @@ impl Rustflags {\n     fn arg(&mut self, arg: &str) -> &mut Self {\n         assert_eq!(arg.split(' ').count(), 1);\n         if !self.0.is_empty() {\n-            self.0.push_str(\" \");\n+            self.0.push(' ');\n         }\n         self.0.push_str(arg);\n         self"}, {"sha": "6e65be93fecc8a19365acbb80f1e5483c2e0d78f", "filename": "src/bootstrap/channel.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98/src%2Fbootstrap%2Fchannel.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98/src%2Fbootstrap%2Fchannel.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fchannel.rs?ref=87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98", "patch": "@@ -74,9 +74,9 @@ impl GitInfo {\n         if let Some(ref inner) = self.inner {\n             version.push_str(\" (\");\n             version.push_str(&inner.short_sha);\n-            version.push_str(\" \");\n+            version.push(' ');\n             version.push_str(&inner.commit_date);\n-            version.push_str(\")\");\n+            version.push(')');\n         }\n         version\n     }"}, {"sha": "a8b1082edebd059ebda49662634b8379c44eef08", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98", "patch": "@@ -334,7 +334,7 @@ impl Merge for TomlConfig {\n                     *x = Some(new);\n                 }\n             }\n-        };\n+        }\n         do_merge(&mut self.build, build);\n         do_merge(&mut self.install, install);\n         do_merge(&mut self.llvm, llvm);"}, {"sha": "dff9e12ee1167fa16ea44e3249f6241bcc6ee411", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98", "patch": "@@ -1326,17 +1326,17 @@ impl Step for Extended {\n         license += &builder.read(&builder.src.join(\"COPYRIGHT\"));\n         license += &builder.read(&builder.src.join(\"LICENSE-APACHE\"));\n         license += &builder.read(&builder.src.join(\"LICENSE-MIT\"));\n-        license.push_str(\"\\n\");\n-        license.push_str(\"\\n\");\n+        license.push('\\n');\n+        license.push('\\n');\n \n         let rtf = r\"{\\rtf1\\ansi\\deff0{\\fonttbl{\\f0\\fnil\\fcharset0 Arial;}}\\nowwrap\\fs18\";\n         let mut rtf = rtf.to_string();\n-        rtf.push_str(\"\\n\");\n+        rtf.push('\\n');\n         for line in license.lines() {\n             rtf.push_str(line);\n             rtf.push_str(\"\\\\line \");\n         }\n-        rtf.push_str(\"}\");\n+        rtf.push('}');\n \n         fn filter(contents: &str, marker: &str) -> String {\n             let start = format!(\"tool-{}-start\", marker);"}, {"sha": "88fdcfa2d43cd14e55c0255cd2a1c01656a2e59b", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98", "patch": "@@ -1083,7 +1083,7 @@ impl Build {\n         if let Some(ref s) = self.config.description {\n             version.push_str(\" (\");\n             version.push_str(s);\n-            version.push_str(\")\");\n+            version.push(')');\n         }\n         version\n     }\n@@ -1144,7 +1144,7 @@ impl Build {\n                     && (dep != \"profiler_builtins\"\n                         || target\n                             .map(|t| self.config.profiler_enabled(t))\n-                            .unwrap_or(self.config.any_profiler_enabled()))\n+                            .unwrap_or_else(|| self.config.any_profiler_enabled()))\n                     && (dep != \"rustc_codegen_llvm\" || self.config.llvm_enabled())\n                 {\n                     list.push(*dep);"}, {"sha": "08acc3d671fac8b836e20cd5bd981d7f86c915c0", "filename": "src/bootstrap/sanity.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98/src%2Fbootstrap%2Fsanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98/src%2Fbootstrap%2Fsanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsanity.rs?ref=87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98", "patch": "@@ -163,7 +163,11 @@ pub fn check(build: &mut Build) {\n             panic!(\"the iOS target is only supported on macOS\");\n         }\n \n-        build.config.target_config.entry(*target).or_insert(Target::from_triple(&target.triple));\n+        build\n+            .config\n+            .target_config\n+            .entry(*target)\n+            .or_insert_with(|| Target::from_triple(&target.triple));\n \n         if target.contains(\"-none-\") || target.contains(\"nvptx\") {\n             if build.no_std(*target) == Some(false) {"}, {"sha": "725147767dbd1eac034694216549253bdb892dfb", "filename": "src/bootstrap/setup.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98/src%2Fbootstrap%2Fsetup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98/src%2Fbootstrap%2Fsetup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsetup.rs?ref=87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98", "patch": "@@ -89,7 +89,7 @@ pub fn setup(src_path: &Path, profile: Profile) {\n         std::process::exit(1);\n     }\n \n-    let path = cfg_file.unwrap_or(\"config.toml\".into());\n+    let path = cfg_file.unwrap_or_else(|| \"config.toml\".into());\n     let settings = format!(\n         \"# Includes one of the default files in src/bootstrap/defaults\\n\\\n     profile = \\\"{}\\\"\\n\\\n@@ -156,7 +156,7 @@ pub fn interactive_path() -> io::Result<Profile> {\n         io::stdout().flush()?;\n         let mut input = String::new();\n         io::stdin().read_line(&mut input)?;\n-        if input == \"\" {\n+        if input.is_empty() {\n             eprintln!(\"EOF on stdin, when expecting answer to question.  Giving up.\");\n             std::process::exit(1);\n         }"}, {"sha": "66a18dfbeaa7dd0657b337d4364a55064b24ace6", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=87423fbc6af5aae2b5f6d0a11f2a0c60c7c22e98", "patch": "@@ -1135,7 +1135,7 @@ note: if you're sure you want to do this, please open an issue as to why. In the\n                 // flag is respected, so providing an empty --test-args conflicts with\n                 // any following it.\n                 match p.strip_prefix(suite_path).ok().and_then(|p| p.to_str()) {\n-                    Some(s) if s != \"\" => Some(s),\n+                    Some(s) if !s.is_empty() => Some(s),\n                     _ => None,\n                 }\n             })"}]}