{"sha": "140936307e692c324815c9640696b3e3f0c7ae78", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0MDkzNjMwN2U2OTJjMzI0ODE1Yzk2NDA2OTZiM2UzZjBjN2FlNzg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-01-03T03:48:12Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-01-03T03:48:12Z"}, "message": "Auto merge of #57282 - matthewjasper:wellformed-return-ty, r=nikomatsakis\n\nWf-check the output type of a function in MIR-typeck\n\nCloses #57265\n\ncc @scalexm", "tree": {"sha": "fa7cc615c5cc8f1e0248503d4b5c9c62fdc2bacd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa7cc615c5cc8f1e0248503d4b5c9c62fdc2bacd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/140936307e692c324815c9640696b3e3f0c7ae78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/140936307e692c324815c9640696b3e3f0c7ae78", "html_url": "https://github.com/rust-lang/rust/commit/140936307e692c324815c9640696b3e3f0c7ae78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/140936307e692c324815c9640696b3e3f0c7ae78/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec194646fef1a467073ad74b8b68f6f202cfce97", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec194646fef1a467073ad74b8b68f6f202cfce97", "html_url": "https://github.com/rust-lang/rust/commit/ec194646fef1a467073ad74b8b68f6f202cfce97"}, {"sha": "8ca83e915e19f14efd40d9832cb486a4da1bee19", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ca83e915e19f14efd40d9832cb486a4da1bee19", "html_url": "https://github.com/rust-lang/rust/commit/8ca83e915e19f14efd40d9832cb486a4da1bee19"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "8bb67521f44314692f0534dce74cc61f05b6650f", "filename": "src/librustc_mir/borrow_check/nll/type_check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/140936307e692c324815c9640696b3e3f0c7ae78/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/140936307e692c324815c9640696b3e3f0c7ae78/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs?ref=140936307e692c324815c9640696b3e3f0c7ae78", "patch": "@@ -1452,7 +1452,7 @@ impl<'a, 'gcx, 'tcx> TypeChecker<'a, 'gcx, 'tcx> {\n                 self.check_call_dest(mir, term, &sig, destination, term_location);\n \n                 self.prove_predicates(\n-                    sig.inputs().iter().map(|ty| ty::Predicate::WellFormed(ty)),\n+                    sig.inputs_and_output.iter().map(|ty| ty::Predicate::WellFormed(ty)),\n                     term_location.to_locations(),\n                     ConstraintCategory::Boring,\n                 );"}, {"sha": "26d526a6f5ff805775b83e997dc05d7c039782c3", "filename": "src/librustc_mir/interpret/machine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/140936307e692c324815c9640696b3e3f0c7ae78/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/140936307e692c324815c9640696b3e3f0c7ae78/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs?ref=140936307e692c324815c9640696b3e3f0c7ae78", "patch": "@@ -76,7 +76,7 @@ pub trait Machine<'a, 'mir, 'tcx>: Sized {\n     type MemoryExtra: Default;\n \n     /// Extra data stored in every allocation.\n-    type AllocExtra: AllocationExtra<Self::PointerTag, Self::MemoryExtra>;\n+    type AllocExtra: AllocationExtra<Self::PointerTag, Self::MemoryExtra> + 'static;\n \n     /// Memory's allocation map\n     type MemoryMap:"}, {"sha": "24c61a4926f0c13fc6b53f727953542e3aeed959", "filename": "src/test/ui/nll/issue-57265-return-type-wf-check.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/140936307e692c324815c9640696b3e3f0c7ae78/src%2Ftest%2Fui%2Fnll%2Fissue-57265-return-type-wf-check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/140936307e692c324815c9640696b3e3f0c7ae78/src%2Ftest%2Fui%2Fnll%2Fissue-57265-return-type-wf-check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-57265-return-type-wf-check.rs?ref=140936307e692c324815c9640696b3e3f0c7ae78", "patch": "@@ -0,0 +1,26 @@\n+#![feature(nll)]\n+\n+use std::any::Any;\n+\n+#[derive(Debug, Clone)]\n+struct S<T: 'static>(T);\n+\n+// S<&'a T> is in the return type, so we get an implied bound\n+// &'a T: 'static\n+fn foo<'a, T>(x: &'a T) -> (S<&'a T>, Box<dyn Any + 'static>) {\n+    let y = S(x);\n+\n+    let z = Box::new(y.clone()) as Box<dyn Any + 'static>;\n+    (y, z)\n+}\n+\n+fn main() {\n+    let x = 5;\n+\n+    // Check that we require that the argument is of type `&'static String`,\n+    // so that the return type is well-formed.\n+    let (_, z) = foo(&\"hello\".to_string());\n+    //~^ ERROR temporary value dropped while borrowed\n+\n+    println!(\"{:?}\", z.downcast_ref::<S<&'static String>>());\n+}"}, {"sha": "db01212597f5bfe0b7e4849c2110c8f0b8dbdd00", "filename": "src/test/ui/nll/issue-57265-return-type-wf-check.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/140936307e692c324815c9640696b3e3f0c7ae78/src%2Ftest%2Fui%2Fnll%2Fissue-57265-return-type-wf-check.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/140936307e692c324815c9640696b3e3f0c7ae78/src%2Ftest%2Fui%2Fnll%2Fissue-57265-return-type-wf-check.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-57265-return-type-wf-check.stderr?ref=140936307e692c324815c9640696b3e3f0c7ae78", "patch": "@@ -0,0 +1,12 @@\n+error[E0716]: temporary value dropped while borrowed\n+  --> $DIR/issue-57265-return-type-wf-check.rs:22:23\n+   |\n+LL |     let (_, z) = foo(&\"hello\".to_string());\n+   |                  -----^^^^^^^^^^^^^^^^^^^-- temporary value is freed at the end of this statement\n+   |                  |    |\n+   |                  |    creates a temporary which is freed while still in use\n+   |                  argument requires that borrow lasts for `'static`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0716`."}]}