{"sha": "7cbd90f50110699f616fd89d680dae3b0ca3a2ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjYmQ5MGY1MDExMDY5OWY2MTZmZDg5ZDY4MGRhZTNiMGNhM2EyY2U=", "commit": {"author": {"name": "Josh Matthews", "email": "josh@joshmatthews.net", "date": "2012-01-14T22:45:49Z"}, "committer": {"name": "Josh Matthews", "email": "josh@joshmatthews.net", "date": "2012-01-14T23:13:26Z"}, "message": "Fix up LLVM type stringification to correspond to Core.h", "tree": {"sha": "4962ebb52be24fc46dea03ce2dd018bdb01931fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4962ebb52be24fc46dea03ce2dd018bdb01931fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cbd90f50110699f616fd89d680dae3b0ca3a2ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cbd90f50110699f616fd89d680dae3b0ca3a2ce", "html_url": "https://github.com/rust-lang/rust/commit/7cbd90f50110699f616fd89d680dae3b0ca3a2ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cbd90f50110699f616fd89d680dae3b0ca3a2ce/comments", "author": {"login": "jdm", "id": 27658, "node_id": "MDQ6VXNlcjI3NjU4", "avatar_url": "https://avatars.githubusercontent.com/u/27658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdm", "html_url": "https://github.com/jdm", "followers_url": "https://api.github.com/users/jdm/followers", "following_url": "https://api.github.com/users/jdm/following{/other_user}", "gists_url": "https://api.github.com/users/jdm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdm/subscriptions", "organizations_url": "https://api.github.com/users/jdm/orgs", "repos_url": "https://api.github.com/users/jdm/repos", "events_url": "https://api.github.com/users/jdm/events{/privacy}", "received_events_url": "https://api.github.com/users/jdm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdm", "id": 27658, "node_id": "MDQ6VXNlcjI3NjU4", "avatar_url": "https://avatars.githubusercontent.com/u/27658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdm", "html_url": "https://github.com/jdm", "followers_url": "https://api.github.com/users/jdm/followers", "following_url": "https://api.github.com/users/jdm/following{/other_user}", "gists_url": "https://api.github.com/users/jdm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdm/subscriptions", "organizations_url": "https://api.github.com/users/jdm/orgs", "repos_url": "https://api.github.com/users/jdm/repos", "events_url": "https://api.github.com/users/jdm/events{/privacy}", "received_events_url": "https://api.github.com/users/jdm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e40e43e743ef622952ba814e471fe94e48dcbb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e40e43e743ef622952ba814e471fe94e48dcbb9", "html_url": "https://github.com/rust-lang/rust/commit/9e40e43e743ef622952ba814e471fe94e48dcbb9"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "b236353d28b9cb48718fa55a96127f3afba6f62d", "filename": "src/comp/lib/llvm.rs", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/7cbd90f50110699f616fd89d680dae3b0ca3a2ce/src%2Fcomp%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cbd90f50110699f616fd89d680dae3b0ca3a2ce/src%2Fcomp%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Flib%2Fllvm.rs?ref=7cbd90f50110699f616fd89d680dae3b0ca3a2ce", "patch": "@@ -950,16 +950,17 @@ fn type_to_str_inner(names: type_names, outer0: [TypeRef], ty: TypeRef) ->\n       // FIXME: more enum-as-int constants determined from Core::h;\n       // horrible, horrible. Complete as needed.\n       0 { ret \"Void\"; }\n-      1 { ret \"Float\"; }\n-      2 { ret \"Double\"; }\n-      3 { ret \"X86_FP80\"; }\n-      4 { ret \"FP128\"; }\n-      5 { ret \"PPC_FP128\"; }\n-      6 { ret \"Label\"; }\n-      7 {\n+      1 { ret \"Half\"; }\n+      2 { ret \"Float\"; }\n+      3 { ret \"Double\"; }\n+      4 { ret \"X86_FP80\"; }\n+      5 { ret \"FP128\"; }\n+      6 { ret \"PPC_FP128\"; }\n+      7 { ret \"Label\"; }\n+      8 {\n         ret \"i\" + int::str(llvm::LLVMGetIntTypeWidth(ty) as int);\n       }\n-      8 {\n+      9 {\n         let s = \"fn(\";\n         let out_ty: TypeRef = llvm::LLVMGetReturnType(ty);\n         let n_args: uint = llvm::LLVMCountParamTypes(ty);\n@@ -972,7 +973,7 @@ fn type_to_str_inner(names: type_names, outer0: [TypeRef], ty: TypeRef) ->\n         s += type_to_str_inner(names, outer, out_ty);\n         ret s;\n       }\n-      9 {\n+      10 {\n         let s: str = \"{\";\n         let n_elts: uint = llvm::LLVMCountStructElementTypes(ty);\n         let elts: [TypeRef] = vec::init_elt::<TypeRef>(0 as TypeRef, n_elts);\n@@ -983,12 +984,12 @@ fn type_to_str_inner(names: type_names, outer0: [TypeRef], ty: TypeRef) ->\n         s += \"}\";\n         ret s;\n       }\n-      10 {\n+      11 {\n         let el_ty = llvm::LLVMGetElementType(ty);\n         ret \"[\" + type_to_str_inner(names, outer, el_ty) + \" x \" +\n             uint::str(llvm::LLVMGetArrayLength(ty)) + \"]\";\n       }\n-      11 {\n+      12 {\n         let i: uint = 0u;\n         for tout: TypeRef in outer0 {\n             i += 1u;\n@@ -1000,9 +1001,9 @@ fn type_to_str_inner(names: type_names, outer0: [TypeRef], ty: TypeRef) ->\n         ret \"*\" +\n                 type_to_str_inner(names, outer, llvm::LLVMGetElementType(ty));\n       }\n-      12 { ret \"Opaque\"; }\n       13 { ret \"Vector\"; }\n       14 { ret \"Metadata\"; }\n+      15 { ret \"X86_MMAX\"; }\n       _ { #error(\"unknown TypeKind %d\", kind as int); fail; }\n     }\n }"}]}