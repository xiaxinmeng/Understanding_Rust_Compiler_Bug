{"sha": "2c1b7329611f0310ed18dd9bb6dea99cd42302c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjMWI3MzI5NjExZjAzMTBlZDE4ZGQ5YmI2ZGVhOTljZDQyMzAyYzE=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-06-28T15:30:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-28T15:30:27Z"}, "message": "Rollup merge of #73795 - JohnTitor:tests-for-const-fn-ptrs, r=oli-obk\n\nAdd some `const_compare_raw_pointers`-related regression tests\n\nCloses #71381\nCloses #71382\nCloses #71611\nCloses #72352\n\nr? @oli-obk, the author of #73398", "tree": {"sha": "9910000e78770c7b7ca3e256002af4e1498b5209", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9910000e78770c7b7ca3e256002af4e1498b5209"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c1b7329611f0310ed18dd9bb6dea99cd42302c1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe+LeTCRBK7hj4Ov3rIwAAdHIIACaokwvUpV4oDIhJYioyafXJ\nnQzITy4t5ffG7MG8+1wsFTETZaCjcn4DGgJRGN+mWb2w+PzMrY3AQv4QFg4AHrfq\nb2C63trbCy5xgfb9Fr9Io0oCG5Qze6t2uT2wJU+2ElHO/j3k1yJgzD8C1LZtWi8/\n+wIMoh++miyxmiGXjDsRz2jjD7uztKmg7nAw9+WrjxWpC9w+Yw8n1DIYfsu+iOY6\nZMQisKEmrdiBo6hMHl8aideNZd90ZQFmXZIJpI4NKYeLA57gY974q9kOv5Z0eg16\nrvfAFWadGXvG8FIXSWenmQIa28jClQfjDtm/85vFVDde6KWbWMaZJClPW8VJy24=\n=gKLw\n-----END PGP SIGNATURE-----\n", "payload": "tree 9910000e78770c7b7ca3e256002af4e1498b5209\nparent 3f826a89740d6437f9ebd57d70f591a3ba8bbb1b\nparent 1d16aed7f0993a07dcd7302487fa5781468b5f69\nauthor Manish Goregaokar <manishsmail@gmail.com> 1593358227 -0700\ncommitter GitHub <noreply@github.com> 1593358227 -0700\n\nRollup merge of #73795 - JohnTitor:tests-for-const-fn-ptrs, r=oli-obk\n\nAdd some `const_compare_raw_pointers`-related regression tests\n\nCloses #71381\nCloses #71382\nCloses #71611\nCloses #72352\n\nr? @oli-obk, the author of #73398\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c1b7329611f0310ed18dd9bb6dea99cd42302c1", "html_url": "https://github.com/rust-lang/rust/commit/2c1b7329611f0310ed18dd9bb6dea99cd42302c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c1b7329611f0310ed18dd9bb6dea99cd42302c1/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f826a89740d6437f9ebd57d70f591a3ba8bbb1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f826a89740d6437f9ebd57d70f591a3ba8bbb1b", "html_url": "https://github.com/rust-lang/rust/commit/3f826a89740d6437f9ebd57d70f591a3ba8bbb1b"}, {"sha": "1d16aed7f0993a07dcd7302487fa5781468b5f69", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d16aed7f0993a07dcd7302487fa5781468b5f69", "html_url": "https://github.com/rust-lang/rust/commit/1d16aed7f0993a07dcd7302487fa5781468b5f69"}], "stats": {"total": 125, "additions": 125, "deletions": 0}, "files": [{"sha": "c32bd2847f8378a4e404e24a6a9073f507631ac5", "filename": "src/test/ui/const-generics/issues/issue-71381.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/2c1b7329611f0310ed18dd9bb6dea99cd42302c1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-71381.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c1b7329611f0310ed18dd9bb6dea99cd42302c1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-71381.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-71381.rs?ref=2c1b7329611f0310ed18dd9bb6dea99cd42302c1", "patch": "@@ -0,0 +1,33 @@\n+#![feature(const_generics)]\n+#![allow(incomplete_features)]\n+\n+struct Test(*const usize);\n+\n+type PassArg = ();\n+\n+unsafe extern \"C\" fn pass(args: PassArg) {\n+    println!(\"Hello, world!\");\n+}\n+\n+impl Test {\n+    pub fn call_me<Args: Sized, const IDX: usize, const FN: unsafe extern \"C\" fn(Args)>(&self) {\n+        //~^ ERROR: using function pointers as const generic parameters is forbidden\n+        self.0 = Self::trampiline::<Args, IDX, FN> as _\n+    }\n+\n+    unsafe extern \"C\" fn trampiline<\n+        Args: Sized,\n+        const IDX: usize,\n+        const FN: unsafe extern \"C\" fn(Args),\n+        //~^ ERROR: using function pointers as const generic parameters is forbidden\n+    >(\n+        args: Args,\n+    ) {\n+        FN(args)\n+    }\n+}\n+\n+fn main() {\n+    let x = Test();\n+    x.call_me::<PassArg, 30, pass>()\n+}"}, {"sha": "6bb776fcfc0170e329f2dabad32566f362434a72", "filename": "src/test/ui/const-generics/issues/issue-71381.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2c1b7329611f0310ed18dd9bb6dea99cd42302c1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-71381.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2c1b7329611f0310ed18dd9bb6dea99cd42302c1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-71381.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-71381.stderr?ref=2c1b7329611f0310ed18dd9bb6dea99cd42302c1", "patch": "@@ -0,0 +1,14 @@\n+error: using function pointers as const generic parameters is forbidden\n+  --> $DIR/issue-71381.rs:13:61\n+   |\n+LL |     pub fn call_me<Args: Sized, const IDX: usize, const FN: unsafe extern \"C\" fn(Args)>(&self) {\n+   |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: using function pointers as const generic parameters is forbidden\n+  --> $DIR/issue-71381.rs:21:19\n+   |\n+LL |         const FN: unsafe extern \"C\" fn(Args),\n+   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "e0cf9812d95ec8bd324d87dc0d004a9a0bc6fef3", "filename": "src/test/ui/const-generics/issues/issue-71382.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2c1b7329611f0310ed18dd9bb6dea99cd42302c1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-71382.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c1b7329611f0310ed18dd9bb6dea99cd42302c1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-71382.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-71382.rs?ref=2c1b7329611f0310ed18dd9bb6dea99cd42302c1", "patch": "@@ -0,0 +1,24 @@\n+#![feature(const_generics)]\n+#![allow(incomplete_features)]\n+\n+struct Test();\n+\n+fn pass() {\n+    println!(\"Hello, world!\");\n+}\n+\n+impl Test {\n+    pub fn call_me(&self) {\n+        self.test::<pass>();\n+    }\n+\n+    fn test<const FN: fn()>(&self) {\n+        //~^ ERROR: using function pointers as const generic parameters is forbidden\n+        FN();\n+    }\n+}\n+\n+fn main() {\n+    let x = Test();\n+    x.call_me()\n+}"}, {"sha": "1652b0bdfa879f16cab1f5441ec8273701d36b55", "filename": "src/test/ui/const-generics/issues/issue-71382.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2c1b7329611f0310ed18dd9bb6dea99cd42302c1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-71382.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2c1b7329611f0310ed18dd9bb6dea99cd42302c1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-71382.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-71382.stderr?ref=2c1b7329611f0310ed18dd9bb6dea99cd42302c1", "patch": "@@ -0,0 +1,8 @@\n+error: using function pointers as const generic parameters is forbidden\n+  --> $DIR/issue-71382.rs:15:23\n+   |\n+LL |     fn test<const FN: fn()>(&self) {\n+   |                       ^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "64a049e743fafab50624253100b58617750687c1", "filename": "src/test/ui/const-generics/issues/issue-71611.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2c1b7329611f0310ed18dd9bb6dea99cd42302c1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-71611.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c1b7329611f0310ed18dd9bb6dea99cd42302c1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-71611.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-71611.rs?ref=2c1b7329611f0310ed18dd9bb6dea99cd42302c1", "patch": "@@ -0,0 +1,9 @@\n+#![feature(const_generics)]\n+#![allow(incomplete_features)]\n+\n+fn func<A, const F: fn(inner: A)>(outer: A) {\n+    //~^ ERROR: using function pointers as const generic parameters is forbidden\n+    F(outer);\n+}\n+\n+fn main() {}"}, {"sha": "9a7bf1c0a8841e660aabc24dd8476d38d153142f", "filename": "src/test/ui/const-generics/issues/issue-71611.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2c1b7329611f0310ed18dd9bb6dea99cd42302c1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-71611.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2c1b7329611f0310ed18dd9bb6dea99cd42302c1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-71611.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-71611.stderr?ref=2c1b7329611f0310ed18dd9bb6dea99cd42302c1", "patch": "@@ -0,0 +1,8 @@\n+error: using function pointers as const generic parameters is forbidden\n+  --> $DIR/issue-71611.rs:4:21\n+   |\n+LL | fn func<A, const F: fn(inner: A)>(outer: A) {\n+   |                     ^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "e977af8deb719ea1a53a8c2a091bca161f51913b", "filename": "src/test/ui/const-generics/issues/issue-72352.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/2c1b7329611f0310ed18dd9bb6dea99cd42302c1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-72352.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c1b7329611f0310ed18dd9bb6dea99cd42302c1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-72352.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-72352.rs?ref=2c1b7329611f0310ed18dd9bb6dea99cd42302c1", "patch": "@@ -0,0 +1,21 @@\n+#![feature(const_generics)]\n+#![allow(incomplete_features)]\n+\n+use std::ffi::{CStr, CString};\n+\n+unsafe fn unsafely_do_the_thing<const F: fn(&CStr) -> usize>(ptr: *const i8) -> usize {\n+    //~^ ERROR: using function pointers as const generic parameters is forbidden\n+    F(CStr::from_ptr(ptr))\n+}\n+\n+fn safely_do_the_thing(s: &CStr) -> usize {\n+    s.to_bytes().len()\n+}\n+\n+fn main() {\n+    let baguette = CString::new(\"baguette\").unwrap();\n+    let ptr = baguette.as_ptr();\n+    println!(\"{}\", unsafe {\n+        unsafely_do_the_thing::<safely_do_the_thing>(ptr)\n+    });\n+}"}, {"sha": "bc48da103936bcdd56584de65ebc72d40523a64a", "filename": "src/test/ui/const-generics/issues/issue-72352.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2c1b7329611f0310ed18dd9bb6dea99cd42302c1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-72352.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2c1b7329611f0310ed18dd9bb6dea99cd42302c1/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-72352.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-72352.stderr?ref=2c1b7329611f0310ed18dd9bb6dea99cd42302c1", "patch": "@@ -0,0 +1,8 @@\n+error: using function pointers as const generic parameters is forbidden\n+  --> $DIR/issue-72352.rs:6:42\n+   |\n+LL | unsafe fn unsafely_do_the_thing<const F: fn(&CStr) -> usize>(ptr: *const i8) -> usize {\n+   |                                          ^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}