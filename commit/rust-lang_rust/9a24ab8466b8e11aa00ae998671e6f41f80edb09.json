{"sha": "9a24ab8466b8e11aa00ae998671e6f41f80edb09", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhMjRhYjg0NjZiOGUxMWFhMDBhZTk5ODY3MWU2ZjQxZjgwZWRiMDk=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-05-12T10:10:23Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-05-12T11:07:58Z"}, "message": "Add tests for empty_loop lint", "tree": {"sha": "0de498de84c514d4452218423ca5c13a49ac99fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0de498de84c514d4452218423ca5c13a49ac99fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a24ab8466b8e11aa00ae998671e6f41f80edb09", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEEj4U0bmbiMSg/mWqvgqphyqETl+YFAlzX/o8QHGRldkBwaGFu\nc2NoLm5ldAAKCRCCqmHKoROX5gUFD/4vFjvDhvz2VWxuH0SA/EVlaXBq5cNWQ1MF\nNk+Ll62yWXIZcobKSxdqVGMxibUUujM5dHZ2Dcp4yrra6TGajT6IoV9JKdWkNSds\nnymmqol8fc+RyHgUl+38s9p8PvT16iWju+2IfHJaNyeCBYPFJoA7cq7MXfx573oN\n4Bp5CWYVzeK59qr1EOxjm5PfdaMJL+olNSUQx5JastmQFdPaukGz5OVMoUCu7iT2\na6jwtete45fg6JS3PP36BPVAyaH6PasUZZoODPjMBgCiGGmRcN1fKehK2sdG18C6\nHqDlpZbxSw/NLvOSCPHwE1Ls6pbdHCzWAEQ+HmgAVA301kFq3HTsHZY95oKc35NP\nHI6tjRZs3eVIsui7/jVBK5B/GdIHq0F9bERNJpZe7kl1nm4R6KUIYtky0yXGr8bI\nxEJnmNM9DWQEXQLERcqSeKGrQiYHU3eHdjk9RuikkplqISq0ZDT0Wm+YcDyKp5on\n8DnmCjoNwiImigU/g+PrxEANV9XRBpeaEiYenXw573zS/ePrx3MqD5LX40slX9F/\nGLH70zSIHjqXikqewv1eV33dQC2NpcBP0vAjr3VFuquBUVAr3syjJya/URXKqmbw\ncPIOVDsA7M2+ghkgTOeGRt8U6NnXraNCm7NZ4isLrhre0y9jSjafbiLt56xX43Wc\n7oUoY0UepA==\n=MwpC\n-----END PGP SIGNATURE-----", "payload": "tree 0de498de84c514d4452218423ca5c13a49ac99fe\nparent 3710ec59962295336ab4aed100267b584dd7df7d\nauthor Philipp Hansch <dev@phansch.net> 1557655823 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1557659278 +0200\n\nAdd tests for empty_loop lint\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a24ab8466b8e11aa00ae998671e6f41f80edb09", "html_url": "https://github.com/rust-lang/rust/commit/9a24ab8466b8e11aa00ae998671e6f41f80edb09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a24ab8466b8e11aa00ae998671e6f41f80edb09/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3710ec59962295336ab4aed100267b584dd7df7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3710ec59962295336ab4aed100267b584dd7df7d", "html_url": "https://github.com/rust-lang/rust/commit/3710ec59962295336ab4aed100267b584dd7df7d"}], "stats": {"total": 83, "additions": 83, "deletions": 0}, "files": [{"sha": "486e419bee56aefc8639846b1ec4fa888ebe12a5", "filename": "tests/ui/auxiliary/macro_rules.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9a24ab8466b8e11aa00ae998671e6f41f80edb09/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a24ab8466b8e11aa00ae998671e6f41f80edb09/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs?ref=9a24ab8466b8e11aa00ae998671e6f41f80edb09", "patch": "@@ -0,0 +1,9 @@\n+#![allow(dead_code)]\n+\n+/// Used to test that certain lints don't trigger in imported external macros\n+#[macro_export]\n+macro_rules! foofoo {\n+    () => {\n+        loop {}\n+    };\n+}"}, {"sha": "fb9f2cb9cf41f3cf68aef414cb58a6535362abd3", "filename": "tests/ui/empty_loop.rs", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/9a24ab8466b8e11aa00ae998671e6f41f80edb09/tests%2Fui%2Fempty_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a24ab8466b8e11aa00ae998671e6f41f80edb09/tests%2Fui%2Fempty_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_loop.rs?ref=9a24ab8466b8e11aa00ae998671e6f41f80edb09", "patch": "@@ -0,0 +1,52 @@\n+// aux-build:macro_rules.rs\n+\n+#![warn(clippy::empty_loop)]\n+#![allow(clippy::unused_label)]\n+\n+#[macro_use]\n+extern crate macro_rules;\n+\n+fn should_trigger() {\n+    loop {}\n+    loop {\n+        loop {}\n+    }\n+\n+    'outer: loop {\n+        'inner: loop {}\n+    }\n+}\n+\n+fn should_not_trigger() {\n+    loop {\n+        panic!(\"This is fine\")\n+    }\n+    let ten_millis = std::time::Duration::from_millis(10);\n+    loop {\n+        std::thread::sleep(ten_millis)\n+    }\n+\n+    #[allow(clippy::never_loop)]\n+    'outer: loop {\n+        'inner: loop {\n+            break 'inner;\n+        }\n+        break 'outer;\n+    }\n+\n+    // Make sure `allow` works for this lint\n+    #[allow(clippy::empty_loop)]\n+    loop {}\n+\n+    // We don't lint loops inside macros\n+    macro_rules! foo {\n+        () => {\n+            loop {}\n+        };\n+    }\n+\n+    // We don't lint external macros\n+    foofoo!()\n+}\n+\n+fn main() {}"}, {"sha": "41b79900425103bcde10fd81149b8b977438e53f", "filename": "tests/ui/empty_loop.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9a24ab8466b8e11aa00ae998671e6f41f80edb09/tests%2Fui%2Fempty_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a24ab8466b8e11aa00ae998671e6f41f80edb09/tests%2Fui%2Fempty_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_loop.stderr?ref=9a24ab8466b8e11aa00ae998671e6f41f80edb09", "patch": "@@ -0,0 +1,22 @@\n+error: empty `loop {}` detected. You may want to either use `panic!()` or add `std::thread::sleep(..);` to the loop body.\n+  --> $DIR/empty_loop.rs:10:5\n+   |\n+LL |     loop {}\n+   |     ^^^^^^^\n+   |\n+   = note: `-D clippy::empty-loop` implied by `-D warnings`\n+\n+error: empty `loop {}` detected. You may want to either use `panic!()` or add `std::thread::sleep(..);` to the loop body.\n+  --> $DIR/empty_loop.rs:12:9\n+   |\n+LL |         loop {}\n+   |         ^^^^^^^\n+\n+error: empty `loop {}` detected. You may want to either use `panic!()` or add `std::thread::sleep(..);` to the loop body.\n+  --> $DIR/empty_loop.rs:16:9\n+   |\n+LL |         'inner: loop {}\n+   |         ^^^^^^^^^^^^^^^\n+\n+error: aborting due to 3 previous errors\n+"}]}