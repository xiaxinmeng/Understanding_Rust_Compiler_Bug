{"sha": "226860304603f63440e9d097cd09dce45160bfbb", "node_id": "C_kwDOAAsO6NoAKDIyNjg2MDMwNDYwM2Y2MzQ0MGU5ZDA5N2NkMDlkY2U0NTE2MGJmYmI", "commit": {"author": {"name": "Jack Wrenn", "email": "jack@wrenn.fyi", "date": "2022-07-21T18:22:04Z"}, "committer": {"name": "Jack Wrenn", "email": "jack@wrenn.fyi", "date": "2022-07-27T17:33:57Z"}, "message": "safe transmute: tweak `Nfa::union` to consume params by value\n\nref: https://github.com/rust-lang/rust/pull/92268#discussion_r925274516", "tree": {"sha": "0b7c5e0725db6004ea6ddedb15df2d509cb72530", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b7c5e0725db6004ea6ddedb15df2d509cb72530"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/226860304603f63440e9d097cd09dce45160bfbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/226860304603f63440e9d097cd09dce45160bfbb", "html_url": "https://github.com/rust-lang/rust/commit/226860304603f63440e9d097cd09dce45160bfbb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/226860304603f63440e9d097cd09dce45160bfbb/comments", "author": {"login": "jswrenn", "id": 3820879, "node_id": "MDQ6VXNlcjM4MjA4Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3820879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jswrenn", "html_url": "https://github.com/jswrenn", "followers_url": "https://api.github.com/users/jswrenn/followers", "following_url": "https://api.github.com/users/jswrenn/following{/other_user}", "gists_url": "https://api.github.com/users/jswrenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jswrenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jswrenn/subscriptions", "organizations_url": "https://api.github.com/users/jswrenn/orgs", "repos_url": "https://api.github.com/users/jswrenn/repos", "events_url": "https://api.github.com/users/jswrenn/events{/privacy}", "received_events_url": "https://api.github.com/users/jswrenn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jswrenn", "id": 3820879, "node_id": "MDQ6VXNlcjM4MjA4Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3820879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jswrenn", "html_url": "https://github.com/jswrenn", "followers_url": "https://api.github.com/users/jswrenn/followers", "following_url": "https://api.github.com/users/jswrenn/following{/other_user}", "gists_url": "https://api.github.com/users/jswrenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jswrenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jswrenn/subscriptions", "organizations_url": "https://api.github.com/users/jswrenn/orgs", "repos_url": "https://api.github.com/users/jswrenn/repos", "events_url": "https://api.github.com/users/jswrenn/events{/privacy}", "received_events_url": "https://api.github.com/users/jswrenn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b78c3daad0f0b7490988f4957bab7bc53049b3bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/b78c3daad0f0b7490988f4957bab7bc53049b3bb", "html_url": "https://github.com/rust-lang/rust/commit/b78c3daad0f0b7490988f4957bab7bc53049b3bb"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "3b2548e7aedf737b62874113f8330321a5cbbe0f", "filename": "compiler/rustc_transmute/src/layout/nfa.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/226860304603f63440e9d097cd09dce45160bfbb/compiler%2Frustc_transmute%2Fsrc%2Flayout%2Fnfa.rs", "raw_url": "https://github.com/rust-lang/rust/raw/226860304603f63440e9d097cd09dce45160bfbb/compiler%2Frustc_transmute%2Fsrc%2Flayout%2Fnfa.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_transmute%2Fsrc%2Flayout%2Fnfa.rs?ref=226860304603f63440e9d097cd09dce45160bfbb", "patch": "@@ -92,7 +92,7 @@ where\n                 let mut alts = alts.into_iter().map(Self::from_tree);\n                 let mut nfa = alts.next().ok_or(Uninhabited)??;\n                 for alt in alts {\n-                    nfa = nfa.union(&alt?);\n+                    nfa = nfa.union(alt?);\n                 }\n                 nfa\n             }\n@@ -136,7 +136,7 @@ where\n     }\n \n     /// Compute the union of two `Nfa`s.\n-    pub(crate) fn union(&self, other: &Self) -> Self {\n+    pub(crate) fn union(self, other: Self) -> Self {\n         let start = self.start;\n         let accepting = self.accepting;\n "}]}