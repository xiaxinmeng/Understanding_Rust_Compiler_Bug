{"sha": "a0e7e357a796f93527d0a0e850fa71c48594b91d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwZTdlMzU3YTc5NmY5MzUyN2QwYTBlODUwZmE3MWM0ODU5NGI5MWQ=", "commit": {"author": {"name": "Mikhail Modin", "email": "mikhailm1@gmail.com", "date": "2016-10-26T16:10:39Z"}, "committer": {"name": "Mikhail Modin", "email": "mikhailm1@gmail.com", "date": "2016-11-01T16:39:28Z"}, "message": "Improve \"Doesn't live long enough\" error\n\ncase with different lifetime with spans", "tree": {"sha": "bf3a00bf61d177d572b5113ae4426e87270ba8bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf3a00bf61d177d572b5113ae4426e87270ba8bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0e7e357a796f93527d0a0e850fa71c48594b91d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0e7e357a796f93527d0a0e850fa71c48594b91d", "html_url": "https://github.com/rust-lang/rust/commit/a0e7e357a796f93527d0a0e850fa71c48594b91d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0e7e357a796f93527d0a0e850fa71c48594b91d/comments", "author": {"login": "mikhail-m1", "id": 5663581, "node_id": "MDQ6VXNlcjU2NjM1ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/5663581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikhail-m1", "html_url": "https://github.com/mikhail-m1", "followers_url": "https://api.github.com/users/mikhail-m1/followers", "following_url": "https://api.github.com/users/mikhail-m1/following{/other_user}", "gists_url": "https://api.github.com/users/mikhail-m1/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikhail-m1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikhail-m1/subscriptions", "organizations_url": "https://api.github.com/users/mikhail-m1/orgs", "repos_url": "https://api.github.com/users/mikhail-m1/repos", "events_url": "https://api.github.com/users/mikhail-m1/events{/privacy}", "received_events_url": "https://api.github.com/users/mikhail-m1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mikhail-m1", "id": 5663581, "node_id": "MDQ6VXNlcjU2NjM1ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/5663581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikhail-m1", "html_url": "https://github.com/mikhail-m1", "followers_url": "https://api.github.com/users/mikhail-m1/followers", "following_url": "https://api.github.com/users/mikhail-m1/following{/other_user}", "gists_url": "https://api.github.com/users/mikhail-m1/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikhail-m1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikhail-m1/subscriptions", "organizations_url": "https://api.github.com/users/mikhail-m1/orgs", "repos_url": "https://api.github.com/users/mikhail-m1/repos", "events_url": "https://api.github.com/users/mikhail-m1/events{/privacy}", "received_events_url": "https://api.github.com/users/mikhail-m1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69ec350f5968defc7024d72ce791b0653c966cee", "url": "https://api.github.com/repos/rust-lang/rust/commits/69ec350f5968defc7024d72ce791b0653c966cee", "html_url": "https://github.com/rust-lang/rust/commit/69ec350f5968defc7024d72ce791b0653c966cee"}], "stats": {"total": 315, "additions": 309, "deletions": 6}, "files": [{"sha": "0d084d9b930dbc894c7739ad80bd7e14a8b4f6c8", "filename": "src/librustc_borrowck/borrowck/mod.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "patch": "@@ -1064,6 +1064,19 @@ impl<'a, 'tcx> BorrowckCtxt<'a, 'tcx> {\n                         db.note(\"values in a scope are dropped in the opposite order \\\n                                 they are created\");\n                     }\n+                    (Some(s1), Some(s2)) if !is_temporary && !is_closure => {\n+                        db.span = MultiSpan::from_span(s2);\n+                        db.span_label(error_span, &format!(\"borrow occurs here\"));\n+                        let msg = match opt_loan_path(&err.cmt) {\n+                            None => \"borrowed value\".to_string(),\n+                            Some(lp) => {\n+                                format!(\"`{}`\", self.loan_path_to_string(&lp))\n+                            }\n+                        };\n+                        db.span_label(s2,\n+                                      &format!(\"{} dropped here while still borrowed\", msg));\n+                        db.span_label(s1, &format!(\"{} needs to live until here\", value_kind));\n+                    }\n                     _ => {\n                         match sub_span {\n                             Some(s) => {"}, {"sha": "726d4bcdf1d083a222c2680b15e8a1dc49f6fc00", "filename": "src/test/ui/span/borrowck-ref-into-rvalue.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fborrowck-ref-into-rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fborrowck-ref-into-rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fborrowck-ref-into-rvalue.rs?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "previous_filename": "src/test/compile-fail/borrowck/borrowck-ref-into-rvalue.rs"}, {"sha": "adbf39b3f7580f9d65b27ab52a2f1e18b93f32c5", "filename": "src/test/ui/span/borrowck-ref-into-rvalue.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fborrowck-ref-into-rvalue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fborrowck-ref-into-rvalue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fborrowck-ref-into-rvalue.stderr?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "patch": "@@ -0,0 +1,16 @@\n+error: borrowed value does not live long enough\n+  --> $DIR/borrowck-ref-into-rvalue.rs:18:5\n+   |\n+14 |         Some(ref m) => { //~ ERROR borrowed value does not live long enough\n+   |              ----- borrow occurs here\n+...\n+18 |     }\n+   |     ^ borrowed value dropped here while still borrowed\n+19 |     println!(\"{}\", *msg);\n+20 | }\n+   | - borrowed value needs to live until here\n+   |\n+   = note: consider using a `let` binding to increase its lifetime\n+\n+error: aborting due to previous error\n+"}, {"sha": "22f615cafd71eec06ce67f396d45542e0e1eb466", "filename": "src/test/ui/span/destructor-restrictions.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fdestructor-restrictions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fdestructor-restrictions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdestructor-restrictions.rs?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "previous_filename": "src/test/compile-fail/destructor-restrictions.rs"}, {"sha": "3253212c5b87ba389f519a689cc83de4256da09b", "filename": "src/test/ui/span/destructor-restrictions.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fdestructor-restrictions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fdestructor-restrictions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdestructor-restrictions.stderr?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "patch": "@@ -0,0 +1,12 @@\n+error: `*a` does not live long enough\n+  --> $DIR/destructor-restrictions.rs:19:5\n+   |\n+18 |         *a.borrow() + 1    //~ ERROR `*a` does not live long enough\n+   |          - borrow occurs here\n+19 |     };\n+   |     ^- borrowed value needs to live until here\n+   |     |\n+   |     `*a` dropped here while still borrowed\n+\n+error: aborting due to previous error\n+"}, {"sha": "6ad9c27b8b9101418959815e2a929c52f5ed2538", "filename": "src/test/ui/span/issue-11925.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fissue-11925.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fissue-11925.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-11925.stderr?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "patch": "@@ -4,8 +4,8 @@ error: `x` does not live long enough\n 18 |         let f = to_fn_once(move|| &x);\n    |                                    ^\n    |                                    |\n-   |                                    does not live long enough\n-   |                                    borrowed value only lives until here\n+   |                                    borrow occurs here\n+   |                                    `x` dropped here while still borrowed\n ...\n 23 | }\n    | - borrowed value needs to live until here"}, {"sha": "85a0002f2418081f2d43b4c12082fab811fcf94b", "filename": "src/test/ui/span/issue-23338-locals-die-before-temps-of-body.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fissue-23338-locals-die-before-temps-of-body.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fissue-23338-locals-die-before-temps-of-body.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-23338-locals-die-before-temps-of-body.stderr?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "patch": "@@ -9,14 +9,14 @@ error: `y` does not live long enough\n    = note: values in a scope are dropped in the opposite order they are created\n \n error: `y` does not live long enough\n-  --> $DIR/issue-23338-locals-die-before-temps-of-body.rs:27:9\n+  --> $DIR/issue-23338-locals-die-before-temps-of-body.rs:28:5\n    |\n 27 |         y.borrow().clone() //~ ERROR `y` does not live long enough\n-   |         ^ does not live long enough\n+   |         - borrow occurs here\n 28 |     };\n-   |     -- borrowed value needs to live until here\n+   |     ^- borrowed value needs to live until here\n    |     |\n-   |     borrowed value only lives until here\n+   |     `y` dropped here while still borrowed\n \n error: aborting due to 2 previous errors\n "}, {"sha": "8e968d90a2f65750aeb87e9a8551653334cf630f", "filename": "src/test/ui/span/mut-ptr-cant-outlive-ref.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fmut-ptr-cant-outlive-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fmut-ptr-cant-outlive-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmut-ptr-cant-outlive-ref.rs?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "previous_filename": "src/test/compile-fail/mut-ptr-cant-outlive-ref.rs"}, {"sha": "0417eb075af85ab15a799543f41784b07eb82fbd", "filename": "src/test/ui/span/mut-ptr-cant-outlive-ref.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fmut-ptr-cant-outlive-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fmut-ptr-cant-outlive-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmut-ptr-cant-outlive-ref.stderr?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "patch": "@@ -0,0 +1,12 @@\n+error: `b` does not live long enough\n+  --> $DIR/mut-ptr-cant-outlive-ref.rs:19:5\n+   |\n+18 |         p = &*b; //~ ERROR `b` does not live long enough\n+   |               - borrow occurs here\n+19 |     }\n+   |     ^ `b` dropped here while still borrowed\n+20 | }\n+   | - borrowed value needs to live until here\n+\n+error: aborting due to previous error\n+"}, {"sha": "94967693ecf912d65d9c9db1b00b83bf83202d4c", "filename": "src/test/ui/span/range-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Frange-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Frange-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Frange-2.rs?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "previous_filename": "src/test/compile-fail/range-2.rs"}, {"sha": "9f11de77be7e73dd9789ed987ff3c2fc8c99a50d", "filename": "src/test/ui/span/range-2.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Frange-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Frange-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Frange-2.stderr?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "patch": "@@ -0,0 +1,24 @@\n+error: `a` does not live long enough\n+  --> $DIR/range-2.rs:20:5\n+   |\n+17 |         &a..&b\n+   |          - borrow occurs here\n+...\n+20 |     };\n+   |     ^ `a` dropped here while still borrowed\n+21 | }\n+   | - borrowed value needs to live until here\n+\n+error: `b` does not live long enough\n+  --> $DIR/range-2.rs:20:5\n+   |\n+17 |         &a..&b\n+   |              - borrow occurs here\n+...\n+20 |     };\n+   |     ^ `b` dropped here while still borrowed\n+21 | }\n+   | - borrowed value needs to live until here\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "8ec6036762f4886b74a90adfac129eb7ec35e533", "filename": "src/test/ui/span/regionck-unboxed-closure-lifetimes.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fregionck-unboxed-closure-lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fregionck-unboxed-closure-lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregionck-unboxed-closure-lifetimes.rs?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "previous_filename": "src/test/compile-fail/regionck-unboxed-closure-lifetimes.rs"}, {"sha": "9c369e03e33ab8fdeee92b50327180907be3fb02", "filename": "src/test/ui/span/regionck-unboxed-closure-lifetimes.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fregionck-unboxed-closure-lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fregionck-unboxed-closure-lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregionck-unboxed-closure-lifetimes.stderr?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "patch": "@@ -0,0 +1,13 @@\n+error: `c` does not live long enough\n+  --> $DIR/regionck-unboxed-closure-lifetimes.rs:19:5\n+   |\n+17 |         let c_ref = &c; //~ ERROR `c` does not live long enough\n+   |                      - borrow occurs here\n+18 |         f = move |a: isize, b: isize| { a + b + *c_ref };\n+19 |     }\n+   |     ^ `c` dropped here while still borrowed\n+20 | }\n+   | - borrowed value needs to live until here\n+\n+error: aborting due to previous error\n+"}, {"sha": "053af49e0684b8b938d2d58a24d09f8b41dd2a38", "filename": "src/test/ui/span/regions-close-over-type-parameter-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fregions-close-over-type-parameter-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fregions-close-over-type-parameter-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregions-close-over-type-parameter-2.rs?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "previous_filename": "src/test/compile-fail/regions-close-over-type-parameter-2.rs"}, {"sha": "ea652da7da46f57b6bd68e52bffc284ed9e426f9", "filename": "src/test/ui/span/regions-close-over-type-parameter-2.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fregions-close-over-type-parameter-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fregions-close-over-type-parameter-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregions-close-over-type-parameter-2.stderr?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "patch": "@@ -0,0 +1,13 @@\n+error: `tmp0` does not live long enough\n+  --> $DIR/regions-close-over-type-parameter-2.rs:35:5\n+   |\n+33 |         let tmp1 = &tmp0; //~ ERROR `tmp0` does not live long enough\n+   |                     ---- borrow occurs here\n+34 |         repeater3(tmp1)\n+35 |     };\n+   |     ^- borrowed value needs to live until here\n+   |     |\n+   |     `tmp0` dropped here while still borrowed\n+\n+error: aborting due to previous error\n+"}, {"sha": "f588655d1afa85af5b19e7fc1af8c8a46594d233", "filename": "src/test/ui/span/regions-escape-loop-via-variable.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-variable.rs?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "previous_filename": "src/test/compile-fail/regions-escape-loop-via-variable.rs"}, {"sha": "09f2154905f38d7f536c43e7c5db0a500e232e0b", "filename": "src/test/ui/span/regions-escape-loop-via-variable.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-variable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-variable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-variable.stderr?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "patch": "@@ -0,0 +1,12 @@\n+error: `x` does not live long enough\n+  --> $DIR/regions-escape-loop-via-variable.rs:22:5\n+   |\n+21 |         p = &x; //~ ERROR `x` does not live long enough\n+   |              - borrow occurs here\n+22 |     }\n+   |     ^ `x` dropped here while still borrowed\n+23 | }\n+   | - borrowed value needs to live until here\n+\n+error: aborting due to previous error\n+"}, {"sha": "8982b5cd98de49a9ed40dfae2311c5785eef60d7", "filename": "src/test/ui/span/regions-escape-loop-via-vec.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-vec.rs?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "previous_filename": "src/test/compile-fail/regions-escape-loop-via-vec.rs"}, {"sha": "58f7849e443f5a52b8e07ac0f10b39adb826ef17", "filename": "src/test/ui/span/regions-escape-loop-via-vec.stderr", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-vec.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-vec.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-vec.stderr?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "patch": "@@ -0,0 +1,41 @@\n+error: `z` does not live long enough\n+  --> $DIR/regions-escape-loop-via-vec.rs:26:5\n+   |\n+22 |         _y.push(&mut z); //~ ERROR `z` does not live long enough\n+   |                      - borrow occurs here\n+...\n+26 |     }\n+   |     ^ `z` dropped here while still borrowed\n+27 |     //~^ NOTE borrowed value only lives until here\n+28 | }\n+   | - borrowed value needs to live until here\n+\n+error[E0503]: cannot use `x` because it was mutably borrowed\n+  --> $DIR/regions-escape-loop-via-vec.rs:18:11\n+   |\n+14 |     let mut _y = vec![&mut x];\n+   |                            - borrow of `x` occurs here\n+...\n+18 |     while x < 10 { //~ ERROR cannot use `x` because it was mutably borrowed\n+   |           ^ use of borrowed `x`\n+\n+error[E0503]: cannot use `x` because it was mutably borrowed\n+  --> $DIR/regions-escape-loop-via-vec.rs:20:13\n+   |\n+14 |     let mut _y = vec![&mut x];\n+   |                            - borrow of `x` occurs here\n+...\n+20 |         let mut z = x; //~ ERROR cannot use `x` because it was mutably borrowed\n+   |             ^^^^^ use of borrowed `x`\n+\n+error[E0506]: cannot assign to `x` because it is borrowed\n+  --> $DIR/regions-escape-loop-via-vec.rs:24:9\n+   |\n+14 |     let mut _y = vec![&mut x];\n+   |                            - borrow of `x` occurs here\n+...\n+24 |         x += 1; //~ ERROR cannot assign\n+   |         ^^^^^^ assignment to borrowed `x` occurs here\n+\n+error: aborting due to 4 previous errors\n+"}, {"sha": "a05658e9e581db90f01f45d2f4ffbd5c5baa5142", "filename": "src/test/ui/span/regions-infer-borrow-scope-within-loop.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fregions-infer-borrow-scope-within-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fregions-infer-borrow-scope-within-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregions-infer-borrow-scope-within-loop.rs?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "previous_filename": "src/test/compile-fail/regions-infer-borrow-scope-within-loop.rs"}, {"sha": "0e7b64ec2b36c08db9dca69805871f504a025146", "filename": "src/test/ui/span/regions-infer-borrow-scope-within-loop.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fregions-infer-borrow-scope-within-loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fregions-infer-borrow-scope-within-loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregions-infer-borrow-scope-within-loop.stderr?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "patch": "@@ -0,0 +1,14 @@\n+error: `*x` does not live long enough\n+  --> $DIR/regions-infer-borrow-scope-within-loop.rs:28:5\n+   |\n+24 |         y = borrow(&*x); //~ ERROR `*x` does not live long enough\n+   |                     -- borrow occurs here\n+...\n+28 |     }\n+   |     ^ `*x` dropped here while still borrowed\n+29 |     assert!(*y != 0);\n+30 | }\n+   | - borrowed value needs to live until here\n+\n+error: aborting due to previous error\n+"}, {"sha": "1b7718d2283a7bfd6a617c112f8a5d19bdd209a6", "filename": "src/test/ui/span/send-is-not-static-ensures-scoping.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-ensures-scoping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-ensures-scoping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-ensures-scoping.rs?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "previous_filename": "src/test/compile-fail/send-is-not-static-ensures-scoping.rs"}, {"sha": "5897921476d3ffde2d44dbc33e856264923c1148", "filename": "src/test/ui/span/send-is-not-static-ensures-scoping.stderr", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-ensures-scoping.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-ensures-scoping.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-ensures-scoping.stderr?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "patch": "@@ -0,0 +1,28 @@\n+error: `x` does not live long enough\n+  --> $DIR/send-is-not-static-ensures-scoping.rs:32:5\n+   |\n+26 |         let y = &x; //~ ERROR `x` does not live long enough\n+   |                  - borrow occurs here\n+...\n+32 |     };\n+   |     ^ `x` dropped here while still borrowed\n+...\n+35 | }\n+   | - borrowed value needs to live until here\n+\n+error: `y` does not live long enough\n+  --> $DIR/send-is-not-static-ensures-scoping.rs:29:22\n+   |\n+28 |         scoped(|| {\n+   |                -- capture occurs here\n+29 |             let _z = y;\n+   |                      ^ does not live long enough\n+...\n+32 |     };\n+   |     - borrowed value only lives until here\n+...\n+35 | }\n+   | - borrowed value needs to live until here\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "d9d3706586ba9e3c17615b0bc141140b8ed54043", "filename": "src/test/ui/span/send-is-not-static-std-sync-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync-2.rs?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "previous_filename": "src/test/compile-fail/send-is-not-static-std-sync-2.rs"}, {"sha": "08f85f17bf8adaa861f8e4d47e8cdf00e826f66a", "filename": "src/test/ui/span/send-is-not-static-std-sync-2.stderr", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync-2.stderr?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "patch": "@@ -0,0 +1,36 @@\n+error: `x` does not live long enough\n+  --> $DIR/send-is-not-static-std-sync-2.rs:22:5\n+   |\n+21 |         Mutex::new(&x) //~ ERROR does not live long enough\n+   |                     - borrow occurs here\n+22 |     };\n+   |     ^ `x` dropped here while still borrowed\n+...\n+25 | }\n+   | - borrowed value needs to live until here\n+\n+error: `x` does not live long enough\n+  --> $DIR/send-is-not-static-std-sync-2.rs:31:5\n+   |\n+30 |         RwLock::new(&x) //~ ERROR does not live long enough\n+   |                      - borrow occurs here\n+31 |     };\n+   |     ^ `x` dropped here while still borrowed\n+32 |     let _dangling = *lock.read().unwrap();\n+33 | }\n+   | - borrowed value needs to live until here\n+\n+error: `x` does not live long enough\n+  --> $DIR/send-is-not-static-std-sync-2.rs:41:5\n+   |\n+39 |         let _ = tx.send(&x); //~ ERROR does not live long enough\n+   |                          - borrow occurs here\n+40 |         (tx, rx)\n+41 |     };\n+   |     ^ `x` dropped here while still borrowed\n+...\n+44 | }\n+   | - borrowed value needs to live until here\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "8ec2fe8a1ec897492a55a85a76e08a80609428e6", "filename": "src/test/ui/span/send-is-not-static-std-sync.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync.rs?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "previous_filename": "src/test/compile-fail/send-is-not-static-std-sync.rs"}, {"sha": "a86cf1e58846dbafb935fed38393a402f52f75d2", "filename": "src/test/ui/span/send-is-not-static-std-sync.stderr", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync.stderr?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "patch": "@@ -0,0 +1,56 @@\n+error: `z` does not live long enough\n+  --> $DIR/send-is-not-static-std-sync.rs:27:5\n+   |\n+26 |         *lock.lock().unwrap() = &z; //~ ERROR does not live long enough\n+   |                                  - borrow occurs here\n+27 |     }\n+   |     ^ `z` dropped here while still borrowed\n+28 | }\n+   | - borrowed value needs to live until here\n+\n+error[E0505]: cannot move out of `y` because it is borrowed\n+  --> $DIR/send-is-not-static-std-sync.rs:23:10\n+   |\n+22 |     *lock.lock().unwrap() = &*y;\n+   |                              -- borrow of `*y` occurs here\n+23 |     drop(y); //~ ERROR cannot move out\n+   |          ^ move out of `y` occurs here\n+\n+error: `z` does not live long enough\n+  --> $DIR/send-is-not-static-std-sync.rs:39:5\n+   |\n+38 |         *lock.write().unwrap() = &z; //~ ERROR does not live long enough\n+   |                                   - borrow occurs here\n+39 |     }\n+   |     ^ `z` dropped here while still borrowed\n+40 | }\n+   | - borrowed value needs to live until here\n+\n+error[E0505]: cannot move out of `y` because it is borrowed\n+  --> $DIR/send-is-not-static-std-sync.rs:35:10\n+   |\n+34 |     *lock.write().unwrap() = &*y;\n+   |                               -- borrow of `*y` occurs here\n+35 |     drop(y); //~ ERROR cannot move out\n+   |          ^ move out of `y` occurs here\n+\n+error: `z` does not live long enough\n+  --> $DIR/send-is-not-static-std-sync.rs:53:5\n+   |\n+52 |         tx.send(&z).unwrap(); //~ ERROR does not live long enough\n+   |                  - borrow occurs here\n+53 |     }\n+   |     ^ `z` dropped here while still borrowed\n+54 | }\n+   | - borrowed value needs to live until here\n+\n+error[E0505]: cannot move out of `y` because it is borrowed\n+  --> $DIR/send-is-not-static-std-sync.rs:49:10\n+   |\n+48 |     tx.send(&*y);\n+   |              -- borrow of `*y` occurs here\n+49 |     drop(y); //~ ERROR cannot move out\n+   |          ^ move out of `y` occurs here\n+\n+error: aborting due to 6 previous errors\n+"}, {"sha": "b9d292fd1568552dcea5450360e00cbc213283c7", "filename": "src/test/ui/span/wf-method-late-bound-regions.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fwf-method-late-bound-regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fwf-method-late-bound-regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fwf-method-late-bound-regions.rs?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "previous_filename": "src/test/compile-fail/wf-method-late-bound-regions.rs"}, {"sha": "aeac3102fbf3a94bb989bb332c55b538b111a8bf", "filename": "src/test/ui/span/wf-method-late-bound-regions.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fwf-method-late-bound-regions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a0e7e357a796f93527d0a0e850fa71c48594b91d/src%2Ftest%2Fui%2Fspan%2Fwf-method-late-bound-regions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fwf-method-late-bound-regions.stderr?ref=a0e7e357a796f93527d0a0e850fa71c48594b91d", "patch": "@@ -0,0 +1,13 @@\n+error: `pointer` does not live long enough\n+  --> $DIR/wf-method-late-bound-regions.rs:31:5\n+   |\n+30 |         f2.xmute(&pointer) //~ ERROR `pointer` does not live long enough\n+   |                   ------- borrow occurs here\n+31 |     };\n+   |     ^ `pointer` dropped here while still borrowed\n+32 |     println!(\"{}\", dangling);\n+33 | }\n+   | - borrowed value needs to live until here\n+\n+error: aborting due to previous error\n+"}]}