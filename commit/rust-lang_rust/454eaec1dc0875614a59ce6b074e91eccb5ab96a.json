{"sha": "454eaec1dc0875614a59ce6b074e91eccb5ab96a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1NGVhZWMxZGMwODc1NjE0YTU5Y2U2YjA3NGU5MWVjY2I1YWI5NmE=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-11-19T17:13:32Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-11-19T17:34:40Z"}, "message": "Remove the clippy::panic-params lint.\n\nRustc itself now warns for all cases that triggered this lint.", "tree": {"sha": "a3a621f2f5a46e79ae7dea87525fbffb5d714fed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3a621f2f5a46e79ae7dea87525fbffb5d714fed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/454eaec1dc0875614a59ce6b074e91eccb5ab96a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/454eaec1dc0875614a59ce6b074e91eccb5ab96a", "html_url": "https://github.com/rust-lang/rust/commit/454eaec1dc0875614a59ce6b074e91eccb5ab96a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/454eaec1dc0875614a59ce6b074e91eccb5ab96a/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a922c6b410e65065942771cf866cfac6ffd65437", "url": "https://api.github.com/repos/rust-lang/rust/commits/a922c6b410e65065942771cf866cfac6ffd65437", "html_url": "https://github.com/rust-lang/rust/commit/a922c6b410e65065942771cf866cfac6ffd65437"}], "stats": {"total": 138, "additions": 4, "deletions": 134}, "files": [{"sha": "19bf67d80c428911156259cef4cf319f224cb694", "filename": "src/tools/clippy/clippy_lints/src/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/454eaec1dc0875614a59ce6b074e91eccb5ab96a/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/454eaec1dc0875614a59ce6b074e91eccb5ab96a/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flib.rs?ref=454eaec1dc0875614a59ce6b074e91eccb5ab96a", "patch": "@@ -788,7 +788,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &overflow_check_conditional::OVERFLOW_CHECK_CONDITIONAL,\n         &panic_in_result_fn::PANIC_IN_RESULT_FN,\n         &panic_unimplemented::PANIC,\n-        &panic_unimplemented::PANIC_PARAMS,\n         &panic_unimplemented::TODO,\n         &panic_unimplemented::UNIMPLEMENTED,\n         &panic_unimplemented::UNREACHABLE,\n@@ -1499,7 +1498,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&open_options::NONSENSICAL_OPEN_OPTIONS),\n         LintId::of(&option_env_unwrap::OPTION_ENV_UNWRAP),\n         LintId::of(&overflow_check_conditional::OVERFLOW_CHECK_CONDITIONAL),\n-        LintId::of(&panic_unimplemented::PANIC_PARAMS),\n         LintId::of(&partialeq_ne_impl::PARTIALEQ_NE_IMPL),\n         LintId::of(&precedence::PRECEDENCE),\n         LintId::of(&ptr::CMP_NULL),\n@@ -1666,7 +1664,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&non_copy_const::DECLARE_INTERIOR_MUTABLE_CONST),\n         LintId::of(&non_expressive_names::JUST_UNDERSCORES_AND_DIGITS),\n         LintId::of(&non_expressive_names::MANY_SINGLE_CHAR_NAMES),\n-        LintId::of(&panic_unimplemented::PANIC_PARAMS),\n         LintId::of(&ptr::CMP_NULL),\n         LintId::of(&ptr::PTR_ARG),\n         LintId::of(&ptr_eq::PTR_EQ),"}, {"sha": "8b10d0716471270fd523fbe32e37317992478a58", "filename": "src/tools/clippy/clippy_lints/src/panic_unimplemented.rs", "status": "modified", "additions": 4, "deletions": 42, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/454eaec1dc0875614a59ce6b074e91eccb5ab96a/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/454eaec1dc0875614a59ce6b074e91eccb5ab96a/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fpanic_unimplemented.rs?ref=454eaec1dc0875614a59ce6b074e91eccb5ab96a", "patch": "@@ -1,30 +1,10 @@\n-use crate::utils::{is_direct_expn_of, is_expn_of, match_panic_call, span_lint};\n+use crate::utils::{is_expn_of, match_panic_call, span_lint};\n use if_chain::if_chain;\n-use rustc_ast::ast::LitKind;\n-use rustc_hir::{Expr, ExprKind};\n+use rustc_hir::Expr;\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::Span;\n \n-declare_clippy_lint! {\n-    /// **What it does:** Checks for missing parameters in `panic!`.\n-    ///\n-    /// **Why is this bad?** Contrary to the `format!` family of macros, there are\n-    /// two forms of `panic!`: if there are no parameters given, the first argument\n-    /// is not a format string and used literally. So while `format!(\"{}\")` will\n-    /// fail to compile, `panic!(\"{}\")` will not.\n-    ///\n-    /// **Known problems:** None.\n-    ///\n-    /// **Example:**\n-    /// ```no_run\n-    /// panic!(\"This `panic!` is probably missing a parameter there: {}\");\n-    /// ```\n-    pub PANIC_PARAMS,\n-    style,\n-    \"missing parameters in `panic!` calls\"\n-}\n-\n declare_clippy_lint! {\n     /// **What it does:** Checks for usage of `panic!`.\n     ///\n@@ -89,11 +69,11 @@ declare_clippy_lint! {\n     \"`unreachable!` should not be present in production code\"\n }\n \n-declare_lint_pass!(PanicUnimplemented => [PANIC_PARAMS, UNIMPLEMENTED, UNREACHABLE, TODO, PANIC]);\n+declare_lint_pass!(PanicUnimplemented => [UNIMPLEMENTED, UNREACHABLE, TODO, PANIC]);\n \n impl<'tcx> LateLintPass<'tcx> for PanicUnimplemented {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) {\n-        if let Some(params) = match_panic_call(cx, expr) {\n+        if let Some(_) = match_panic_call(cx, expr) {\n             let span = get_outer_span(expr);\n             if is_expn_of(expr.span, \"unimplemented\").is_some() {\n                 span_lint(\n@@ -113,7 +93,6 @@ impl<'tcx> LateLintPass<'tcx> for PanicUnimplemented {\n                 );\n             } else if is_expn_of(expr.span, \"panic\").is_some() {\n                 span_lint(cx, PANIC, span, \"`panic` should not be present in production code\");\n-                match_panic(params, expr, cx);\n             }\n         }\n     }\n@@ -132,20 +111,3 @@ fn get_outer_span(expr: &Expr<'_>) -> Span {\n         }\n     }\n }\n-\n-fn match_panic(params: &[Expr<'_>], expr: &Expr<'_>, cx: &LateContext<'_>) {\n-    if_chain! {\n-        if let ExprKind::Lit(ref lit) = params[0].kind;\n-        if is_direct_expn_of(expr.span, \"panic\").is_some();\n-        if let LitKind::Str(ref string, _) = lit.node;\n-        let string = string.as_str().replace(\"{{\", \"\").replace(\"}}\", \"\");\n-        if let Some(par) = string.find('{');\n-        if string[par..].contains('}');\n-        if params[0].span.source_callee().is_none();\n-        if params[0].span.lo() != params[0].span.hi();\n-        then {\n-            span_lint(cx, PANIC_PARAMS, params[0].span,\n-                      \"you probably are missing some parameter in your format string\");\n-        }\n-    }\n-}"}, {"sha": "6e004aa9a924ffff0d7160eec504a5140051c4b0", "filename": "src/tools/clippy/tests/ui/panic.rs", "status": "removed", "additions": 0, "deletions": 61, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/a922c6b410e65065942771cf866cfac6ffd65437/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a922c6b410e65065942771cf866cfac6ffd65437/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fpanic.rs?ref=a922c6b410e65065942771cf866cfac6ffd65437", "patch": "@@ -1,61 +0,0 @@\n-#![warn(clippy::panic_params)]\n-#![allow(clippy::assertions_on_constants)]\n-fn missing() {\n-    if true {\n-        panic!(\"{}\");\n-    } else if false {\n-        panic!(\"{:?}\");\n-    } else {\n-        assert!(true, \"here be missing values: {}\");\n-    }\n-\n-    panic!(\"{{{this}}}\");\n-}\n-\n-fn ok_single() {\n-    panic!(\"foo bar\");\n-}\n-\n-fn ok_inner() {\n-    // Test for #768\n-    assert!(\"foo bar\".contains(&format!(\"foo {}\", \"bar\")));\n-}\n-\n-fn ok_multiple() {\n-    panic!(\"{}\", \"This is {ok}\");\n-}\n-\n-fn ok_bracket() {\n-    match 42 {\n-        1337 => panic!(\"{so is this\"),\n-        666 => panic!(\"so is this}\"),\n-        _ => panic!(\"}so is that{\"),\n-    }\n-}\n-\n-const ONE: u32 = 1;\n-\n-fn ok_nomsg() {\n-    assert!({ 1 == ONE });\n-    assert!(if 1 == ONE { ONE == 1 } else { false });\n-}\n-\n-fn ok_escaped() {\n-    panic!(\"{{ why should this not be ok? }}\");\n-    panic!(\" or {{ that ?\");\n-    panic!(\" or }} this ?\");\n-    panic!(\" {or {{ that ?\");\n-    panic!(\" }or }} this ?\");\n-    panic!(\"{{ test }\");\n-    panic!(\"{case }}\");\n-}\n-\n-fn main() {\n-    missing();\n-    ok_single();\n-    ok_multiple();\n-    ok_bracket();\n-    ok_inner();\n-    ok_nomsg();\n-    ok_escaped();\n-}"}, {"sha": "1f8ff8ccf55750577675303eb2bcec693119bdda", "filename": "src/tools/clippy/tests/ui/panic.stderr", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/a922c6b410e65065942771cf866cfac6ffd65437/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fpanic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a922c6b410e65065942771cf866cfac6ffd65437/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fpanic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fpanic.stderr?ref=a922c6b410e65065942771cf866cfac6ffd65437", "patch": "@@ -1,28 +0,0 @@\n-error: you probably are missing some parameter in your format string\n-  --> $DIR/panic.rs:5:16\n-   |\n-LL |         panic!(\"{}\");\n-   |                ^^^^\n-   |\n-   = note: `-D clippy::panic-params` implied by `-D warnings`\n-\n-error: you probably are missing some parameter in your format string\n-  --> $DIR/panic.rs:7:16\n-   |\n-LL |         panic!(\"{:?}\");\n-   |                ^^^^^^\n-\n-error: you probably are missing some parameter in your format string\n-  --> $DIR/panic.rs:9:23\n-   |\n-LL |         assert!(true, \"here be missing values: {}\");\n-   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: you probably are missing some parameter in your format string\n-  --> $DIR/panic.rs:12:12\n-   |\n-LL |     panic!(\"{{{this}}}\");\n-   |            ^^^^^^^^^^^^\n-\n-error: aborting due to 4 previous errors\n-"}]}