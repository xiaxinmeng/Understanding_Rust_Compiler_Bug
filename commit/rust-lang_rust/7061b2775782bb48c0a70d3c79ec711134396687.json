{"sha": "7061b2775782bb48c0a70d3c79ec711134396687", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwNjFiMjc3NTc4MmJiNDhjMGE3MGQzYzc5ZWM3MTExMzQzOTY2ODc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-08-28T16:23:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-08-28T16:23:27Z"}, "message": "Auto merge of #53679 - japaric:cortex-r, r=alexcrichton\n\nadd more Cortex-R targets\n\nThis expands on PR #53663 to complete the set of Cortex-R targets and builds\nrust-std components for them.\n\nr? @alexcrichton\n\neach extra rust-std component (there's 4 of them) takes about 3 minutes to build\non my local machine. In terms of stability (LLVM codegen bugs) these new targets\nshould be as stable as the Cortex-M ones (e.g. `thumbv7m-none-eabi`).\n\nIf the extra build time is too much we can leave the rust-std components out for\nnow\n\ncloses #53663\ncc @paoloteti", "tree": {"sha": "216dbc66cbb0544f0a057d771fc9a0b5fc2a0e56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/216dbc66cbb0544f0a057d771fc9a0b5fc2a0e56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7061b2775782bb48c0a70d3c79ec711134396687", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7061b2775782bb48c0a70d3c79ec711134396687", "html_url": "https://github.com/rust-lang/rust/commit/7061b2775782bb48c0a70d3c79ec711134396687", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7061b2775782bb48c0a70d3c79ec711134396687/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec4a752202e56a9b2d978305cb2603208d4a3ab4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec4a752202e56a9b2d978305cb2603208d4a3ab4", "html_url": "https://github.com/rust-lang/rust/commit/ec4a752202e56a9b2d978305cb2603208d4a3ab4"}, {"sha": "521df797d5ca67ef362913621ea2a10aa7c4deaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/521df797d5ca67ef362913621ea2a10aa7c4deaf", "html_url": "https://github.com/rust-lang/rust/commit/521df797d5ca67ef362913621ea2a10aa7c4deaf"}], "stats": {"total": 181, "additions": 139, "deletions": 42}, "files": [{"sha": "34c6e640abb7c85460a9baee202e0bcc69881001", "filename": "src/ci/docker/disabled/dist-armebv7r-none-eabihf/Dockerfile", "status": "removed", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/ec4a752202e56a9b2d978305cb2603208d4a3ab4/src%2Fci%2Fdocker%2Fdisabled%2Fdist-armebv7r-none-eabihf%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ec4a752202e56a9b2d978305cb2603208d4a3ab4/src%2Fci%2Fdocker%2Fdisabled%2Fdist-armebv7r-none-eabihf%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fdist-armebv7r-none-eabihf%2FDockerfile?ref=ec4a752202e56a9b2d978305cb2603208d4a3ab4", "patch": "@@ -1,36 +0,0 @@\n-FROM ubuntu:16.04\n-\n-RUN apt-get update && apt-get install -y --no-install-recommends \\\n-  g++ \\\n-  make \\\n-  file \\\n-  curl \\\n-  ca-certificates \\\n-  python2.7 \\\n-  git \\\n-  cmake \\\n-  sudo \\\n-  xz-utils \\\n-  bzip2 \\\n-  libssl-dev \\\n-  pkg-config\n-\n-\n-COPY scripts/sccache.sh /scripts/\n-RUN sh /scripts/sccache.sh\n-\n-ENV BASE_URL=https://releases.linaro.org/components/toolchain/binaries/latest/armeb-eabi/\n-ENV GCC_LINARO=gcc-linaro-7.2.1-2017.11-x86_64_armeb-eabi\n-\n-RUN curl -sL $BASE_URL/$GCC_LINARO.tar.xz | tar -xJ\n-\n-ENV PATH=$PATH:/$GCC_LINARO/bin\n-\n-ENV TARGET=armebv7r-none-eabihf\n-\n-ENV CC_armebv7r_none_eabihf=armeb-eabi-gcc \\\n-    CFLAGS_armebv7r_none_eabihf=\"-march=armv7-r\"\n-\n-ENV RUST_CONFIGURE_ARGS --disable-docs\n-\n-ENV SCRIPT python2.7 ../x.py dist --target $TARGET"}, {"sha": "e072959baa9c2bce08663d01606677f626d22921", "filename": "src/ci/docker/dist-various-1/Dockerfile", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7061b2775782bb48c0a70d3c79ec711134396687/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/7061b2775782bb48c0a70d3c79ec711134396687/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile?ref=7061b2775782bb48c0a70d3c79ec711134396687", "patch": "@@ -103,11 +103,16 @@ ENV TARGETS=$TARGETS,thumbv7m-none-eabi\n ENV TARGETS=$TARGETS,thumbv7em-none-eabi\n ENV TARGETS=$TARGETS,thumbv7em-none-eabihf\n ENV TARGETS=$TARGETS,riscv32imac-unknown-none-elf\n+ENV TARGETS=$TARGETS,armebv7r-none-eabi\n+ENV TARGETS=$TARGETS,armebv7r-none-eabihf\n+ENV TARGETS=$TARGETS,armv7r-none-eabi\n+ENV TARGETS=$TARGETS,armv7r-none-eabihf\n \n ENV CC_mipsel_unknown_linux_musl=mipsel-openwrt-linux-gcc \\\n     CC_mips_unknown_linux_musl=mips-openwrt-linux-gcc \\\n     CC_sparc64_unknown_linux_gnu=sparc64-linux-gnu-gcc \\\n-    CC_x86_64_unknown_redox=x86_64-unknown-redox-gcc\n+    CC_x86_64_unknown_redox=x86_64-unknown-redox-gcc \\\n+    CC_armebv7r_none_eabi=arm-none-eabi-gcc\n \n ENV RUST_CONFIGURE_ARGS \\\n       --musl-root-armv5te=/musl-armv5te \\\n@@ -120,7 +125,7 @@ ENV RUST_CONFIGURE_ARGS \\\n       --enable-emscripten \\\n       --disable-docs\n \n-ENV SCRIPT \\ \n+ENV SCRIPT \\\n       python2.7 ../x.py test --target $RUN_MAKE_TARGETS src/test/run-make && \\\n       python2.7 ../x.py dist --target $TARGETS\n "}, {"sha": "8d3ff1b800fb20b255077cdb8604857aaed6b971", "filename": "src/librustc_target/spec/armebv7r_none_eabi.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/7061b2775782bb48c0a70d3c79ec711134396687/src%2Flibrustc_target%2Fspec%2Farmebv7r_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7061b2775782bb48c0a70d3c79ec711134396687/src%2Flibrustc_target%2Fspec%2Farmebv7r_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmebv7r_none_eabi.rs?ref=7061b2775782bb48c0a70d3c79ec711134396687", "patch": "@@ -0,0 +1,40 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Targets the Big endian Cortex-R4/R5 processor (ARMv7-R)\n+\n+use std::default::Default;\n+use spec::{LinkerFlavor, LldFlavor, PanicStrategy, Target, TargetOptions, TargetResult};\n+\n+pub fn target() -> TargetResult {\n+    Ok(Target {\n+        llvm_target: \"armebv7r-unknown-none-eabi\".to_string(),\n+        target_endian: \"big\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        data_layout: \"E-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64\".to_string(),\n+        arch: \"arm\".to_string(),\n+        target_os: \"none\".to_string(),\n+        target_env: \"\".to_string(),\n+        target_vendor: \"\".to_string(),\n+        linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n+\n+        options: TargetOptions {\n+            executables: true,\n+            linker: Some(\"rust-lld\".to_owned()),\n+            relocation_model: \"static\".to_string(),\n+            panic_strategy: PanicStrategy::Abort,\n+            max_atomic_width: Some(32),\n+            abi_blacklist: super::arm_base::abi_blacklist(),\n+            emit_debug_gdb_scripts: false,\n+            .. Default::default()\n+        },\n+    })\n+}"}, {"sha": "0343ea7bd17e9b7712bf2ddc42b8c78bc283a675", "filename": "src/librustc_target/spec/armebv7r_none_eabihf.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7061b2775782bb48c0a70d3c79ec711134396687/src%2Flibrustc_target%2Fspec%2Farmebv7r_none_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7061b2775782bb48c0a70d3c79ec711134396687/src%2Flibrustc_target%2Fspec%2Farmebv7r_none_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmebv7r_none_eabihf.rs?ref=7061b2775782bb48c0a70d3c79ec711134396687", "patch": "@@ -11,11 +11,11 @@\n // Targets the Cortex-R4F/R5F processor (ARMv7-R)\n \n use std::default::Default;\n-use spec::{LinkerFlavor, PanicStrategy, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, LldFlavor, PanicStrategy, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {\n-        llvm_target: \"armebv7r-none-eabihf\".to_string(),\n+        llvm_target: \"armebv7r-unknown-none-eabihf\".to_string(),\n         target_endian: \"big\".to_string(),\n         target_pointer_width: \"32\".to_string(),\n         target_c_int_width: \"32\".to_string(),\n@@ -24,13 +24,14 @@ pub fn target() -> TargetResult {\n         target_os: \"none\".to_string(),\n         target_env: String::new(),\n         target_vendor: String::new(),\n-        linker_flavor: LinkerFlavor::Gcc,\n+        linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n \n         options: TargetOptions {\n             executables: true,\n+            linker: Some(\"rust-lld\".to_owned()),\n             relocation_model: \"static\".to_string(),\n             panic_strategy: PanicStrategy::Abort,\n-            features: \"+v7,+vfp3,+d16,+fp-only-sp\".to_string(),\n+            features: \"+vfp3,+d16,+fp-only-sp\".to_string(),\n             max_atomic_width: Some(32),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n             emit_debug_gdb_scripts: false,"}, {"sha": "43148d593f13d741a27c3326038c8084c1e72d2d", "filename": "src/librustc_target/spec/armv7r_none_eabi.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/7061b2775782bb48c0a70d3c79ec711134396687/src%2Flibrustc_target%2Fspec%2Farmv7r_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7061b2775782bb48c0a70d3c79ec711134396687/src%2Flibrustc_target%2Fspec%2Farmv7r_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7r_none_eabi.rs?ref=7061b2775782bb48c0a70d3c79ec711134396687", "patch": "@@ -0,0 +1,40 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Targets the Little-endian Cortex-R4/R5 processor (ARMv7-R)\n+\n+use std::default::Default;\n+use spec::{LinkerFlavor, LldFlavor, PanicStrategy, Target, TargetOptions, TargetResult};\n+\n+pub fn target() -> TargetResult {\n+    Ok(Target {\n+        llvm_target: \"armv7r-unknown-none-eabi\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        data_layout: \"e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64\".to_string(),\n+        arch: \"arm\".to_string(),\n+        target_os: \"none\".to_string(),\n+        target_env: \"\".to_string(),\n+        target_vendor: \"\".to_string(),\n+        linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n+\n+        options: TargetOptions {\n+            executables: true,\n+            linker: Some(\"rust-lld\".to_owned()),\n+            relocation_model: \"static\".to_string(),\n+            panic_strategy: PanicStrategy::Abort,\n+            max_atomic_width: Some(32),\n+            abi_blacklist: super::arm_base::abi_blacklist(),\n+            emit_debug_gdb_scripts: false,\n+            .. Default::default()\n+        },\n+    })\n+}"}, {"sha": "036b0544c524438e2cfedc887947716f980e92ce", "filename": "src/librustc_target/spec/armv7r_none_eabihf.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/7061b2775782bb48c0a70d3c79ec711134396687/src%2Flibrustc_target%2Fspec%2Farmv7r_none_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7061b2775782bb48c0a70d3c79ec711134396687/src%2Flibrustc_target%2Fspec%2Farmv7r_none_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7r_none_eabihf.rs?ref=7061b2775782bb48c0a70d3c79ec711134396687", "patch": "@@ -0,0 +1,41 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Targets the Little-endian Cortex-R4F/R5F processor (ARMv7-R)\n+\n+use std::default::Default;\n+use spec::{LinkerFlavor, LldFlavor, PanicStrategy, Target, TargetOptions, TargetResult};\n+\n+pub fn target() -> TargetResult {\n+    Ok(Target {\n+        llvm_target: \"armv7r-unknown-none-eabihf\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        data_layout: \"e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64\".to_string(),\n+        arch: \"arm\".to_string(),\n+        target_os: \"none\".to_string(),\n+        target_env: \"\".to_string(),\n+        target_vendor: \"\".to_string(),\n+        linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n+\n+        options: TargetOptions {\n+            executables: true,\n+            linker: Some(\"rust-lld\".to_owned()),\n+            relocation_model: \"static\".to_string(),\n+            panic_strategy: PanicStrategy::Abort,\n+            features: \"+vfp3,+d16,+fp-only-sp\".to_string(),\n+            max_atomic_width: Some(32),\n+            abi_blacklist: super::arm_base::abi_blacklist(),\n+            emit_debug_gdb_scripts: false,\n+            .. Default::default()\n+        },\n+    })\n+}"}, {"sha": "7c0cdf991ef4451a4b7a25457b01b2be950bafeb", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7061b2775782bb48c0a70d3c79ec711134396687/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7061b2775782bb48c0a70d3c79ec711134396687/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=7061b2775782bb48c0a70d3c79ec711134396687", "patch": "@@ -370,7 +370,10 @@ supported_targets! {\n     (\"armv7-apple-ios\", armv7_apple_ios),\n     (\"armv7s-apple-ios\", armv7s_apple_ios),\n \n+    (\"armebv7r-none-eabi\", armebv7r_none_eabi),\n     (\"armebv7r-none-eabihf\", armebv7r_none_eabihf),\n+    (\"armv7r-none-eabi\", armv7r_none_eabi),\n+    (\"armv7r-none-eabihf\", armv7r_none_eabihf),\n \n     (\"x86_64-sun-solaris\", x86_64_sun_solaris),\n     (\"sparcv9-sun-solaris\", sparcv9_sun_solaris),"}, {"sha": "f43bd88d04f3233993c94c9c669ff5e276acc796", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7061b2775782bb48c0a70d3c79ec711134396687/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7061b2775782bb48c0a70d3c79ec711134396687/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=7061b2775782bb48c0a70d3c79ec711134396687", "patch": "@@ -63,7 +63,10 @@ static TARGETS: &'static [&'static str] = &[\n     \"armv7-unknown-cloudabi-eabihf\",\n     \"armv7-unknown-linux-gnueabihf\",\n     \"armv7-unknown-linux-musleabihf\",\n+    \"armebv7r-none-eabi\",\n     \"armebv7r-none-eabihf\",\n+    \"armv7r-none-eabi\",\n+    \"armv7r-none-eabihf\",\n     \"armv7s-apple-ios\",\n     \"asmjs-unknown-emscripten\",\n     \"i386-apple-ios\","}]}