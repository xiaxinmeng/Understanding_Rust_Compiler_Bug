{"sha": "5d8b2a5bf1ab1a762a19964d7a6e54b4c7b65285", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkOGIyYTViZjFhYjFhNzYyYTE5OTY0ZDdhNmU1NGI0YzdiNjUyODU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-12-14T13:43:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-14T13:43:44Z"}, "message": "Rollup merge of #79918 - woodruffw-forks:ww/doc-initializer-side-effects, r=dtolnay\n\ndoc(array,vec): add notes about side effects when empty-initializing\n\nCopying some context from a conversation in the Rust discord:\n\n* Both `vec![T; 0]` and `[T; 0]` are syntactically valid, and produce empty containers of their respective types\n\n* Both *also* have side effects:\n\n```rust\nfn side_effect() -> String {\n    println!(\"side effect!\");\n\n    \"foo\".into()\n}\n\nfn main() {\n    println!(\"before!\");\n\n    let x = vec![side_effect(); 0];\n\n    let y = [side_effect(); 0];\n\n    println!(\"{:?}, {:?}\", x, y);\n}\n```\n\nproduces:\n\n```\nbefore!\nside effect!\nside effect!\n[], []\n```\n\nThis PR just adds two small notes to each's documentation, warning users that side effects can occur.\n\nI've also submitted a clippy proposal: https://github.com/rust-lang/rust-clippy/issues/6439", "tree": {"sha": "716f7ce83946241793086dbfd7c657ec99bf2ac2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/716f7ce83946241793086dbfd7c657ec99bf2ac2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d8b2a5bf1ab1a762a19964d7a6e54b4c7b65285", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf12wQCRBK7hj4Ov3rIwAAdHIIAGO2yuXe1Xujzjwo1sPb68e8\ncE63CWhdcA1qKPZcH7XO+psOScx/PNA5++eKuNoC/jGOcIdjHw1CU3vzIi5D9Ui1\nPhZbqjEYSDnwP4QHWf8JQEMymC5CydUAyuSjp3kUpRNiUcArMU7moJoPI5p3Z/0m\na3OuOukTIC7xY68DuQOhOP5+3T2YA0UQc8fG+vvhdNAlqRB1LelqyBixfejTnFo0\n2tKAMHp3fOj4Qx/g3dxijfWoUID0KEuh+e1pRdGatYmWrcfJzGoiAiyWYYEGl2Uo\nVj1my42M3lVTQzDjGSpXY4J5ZqNe7tDjpasVklNBWHNfWek8ImL52lGG5mGWjbM=\n=qpP7\n-----END PGP SIGNATURE-----\n", "payload": "tree 716f7ce83946241793086dbfd7c657ec99bf2ac2\nparent 3c45bff23dfbb13d9d28afe5dba57c028ba156da\nparent d986924eb13a103fc79c474eded47a663c91bb7f\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1607953424 +0100\ncommitter GitHub <noreply@github.com> 1607953424 +0100\n\nRollup merge of #79918 - woodruffw-forks:ww/doc-initializer-side-effects, r=dtolnay\n\ndoc(array,vec): add notes about side effects when empty-initializing\n\nCopying some context from a conversation in the Rust discord:\n\n* Both `vec![T; 0]` and `[T; 0]` are syntactically valid, and produce empty containers of their respective types\n\n* Both *also* have side effects:\n\n```rust\nfn side_effect() -> String {\n    println!(\"side effect!\");\n\n    \"foo\".into()\n}\n\nfn main() {\n    println!(\"before!\");\n\n    let x = vec![side_effect(); 0];\n\n    let y = [side_effect(); 0];\n\n    println!(\"{:?}, {:?}\", x, y);\n}\n```\n\nproduces:\n\n```\nbefore!\nside effect!\nside effect!\n[], []\n```\n\nThis PR just adds two small notes to each's documentation, warning users that side effects can occur.\n\nI've also submitted a clippy proposal: https://github.com/rust-lang/rust-clippy/issues/6439\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d8b2a5bf1ab1a762a19964d7a6e54b4c7b65285", "html_url": "https://github.com/rust-lang/rust/commit/5d8b2a5bf1ab1a762a19964d7a6e54b4c7b65285", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d8b2a5bf1ab1a762a19964d7a6e54b4c7b65285/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c45bff23dfbb13d9d28afe5dba57c028ba156da", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c45bff23dfbb13d9d28afe5dba57c028ba156da", "html_url": "https://github.com/rust-lang/rust/commit/3c45bff23dfbb13d9d28afe5dba57c028ba156da"}, {"sha": "d986924eb13a103fc79c474eded47a663c91bb7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d986924eb13a103fc79c474eded47a663c91bb7f", "html_url": "https://github.com/rust-lang/rust/commit/d986924eb13a103fc79c474eded47a663c91bb7f"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "7d4eff6185dbe440aef85fa35315461f5ae662ae", "filename": "library/alloc/src/macros.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5d8b2a5bf1ab1a762a19964d7a6e54b4c7b65285/library%2Falloc%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d8b2a5bf1ab1a762a19964d7a6e54b4c7b65285/library%2Falloc%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fmacros.rs?ref=5d8b2a5bf1ab1a762a19964d7a6e54b4c7b65285", "patch": "@@ -29,6 +29,10 @@\n /// to the same boxed integer value, not five references pointing to independently\n /// boxed integers.\n ///\n+/// Also, note that `vec![expr; 0]` is allowed, and produces an empty vector.\n+/// This will still evaluate `expr`, however, and immediately drop the resulting value, so\n+/// be mindful of side effects.\n+///\n /// [`Vec`]: crate::vec::Vec\n #[cfg(not(test))]\n #[macro_export]"}, {"sha": "7aca5451ebc2084d37cd0f6c8cfee39cddc7b9aa", "filename": "library/std/src/primitive_docs.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5d8b2a5bf1ab1a762a19964d7a6e54b4c7b65285/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d8b2a5bf1ab1a762a19964d7a6e54b4c7b65285/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprimitive_docs.rs?ref=5d8b2a5bf1ab1a762a19964d7a6e54b4c7b65285", "patch": "@@ -489,6 +489,10 @@ mod prim_pointer {}\n /// * A repeat expression `[x; N]`, which produces an array with `N` copies of `x`.\n ///   The type of `x` must be [`Copy`].\n ///\n+/// Note that `[expr; 0]` is allowed, and produces an empty array.\n+/// This will still evaluate `expr`, however, and immediately drop the resulting value, so\n+/// be mindful of side effects.\n+///\n /// Arrays of *any* size implement the following traits if the element type allows it:\n ///\n /// - [`Copy`]"}]}