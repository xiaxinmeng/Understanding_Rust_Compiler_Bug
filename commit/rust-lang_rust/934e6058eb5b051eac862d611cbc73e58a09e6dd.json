{"sha": "934e6058eb5b051eac862d611cbc73e58a09e6dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzNGU2MDU4ZWI1YjA1MWVhYzg2MmQ2MTFjYmM3M2U1OGEwOWU2ZGQ=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-06-27T14:47:26Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-06-27T14:47:26Z"}, "message": "Turn non_fmt_panic into a future_incompatible edition lint.", "tree": {"sha": "73c3d387122d79b88814dc811d4f61c7ade5c89d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73c3d387122d79b88814dc811d4f61c7ade5c89d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/934e6058eb5b051eac862d611cbc73e58a09e6dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/934e6058eb5b051eac862d611cbc73e58a09e6dd", "html_url": "https://github.com/rust-lang/rust/commit/934e6058eb5b051eac862d611cbc73e58a09e6dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/934e6058eb5b051eac862d611cbc73e58a09e6dd/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f4e343893332be246ae532a9c6e0bafab5b732e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f4e343893332be246ae532a9c6e0bafab5b732e", "html_url": "https://github.com/rust-lang/rust/commit/7f4e343893332be246ae532a9c6e0bafab5b732e"}], "stats": {"total": 45, "additions": 32, "deletions": 13}, "files": [{"sha": "3ea5a3bcc3b98a3b721472e2aa4040b9c8b9d68c", "filename": "compiler/rustc_lint/src/non_fmt_panic.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/934e6058eb5b051eac862d611cbc73e58a09e6dd/compiler%2Frustc_lint%2Fsrc%2Fnon_fmt_panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/934e6058eb5b051eac862d611cbc73e58a09e6dd/compiler%2Frustc_lint%2Fsrc%2Fnon_fmt_panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fnon_fmt_panic.rs?ref=934e6058eb5b051eac862d611cbc73e58a09e6dd", "patch": "@@ -4,6 +4,8 @@ use rustc_errors::{pluralize, Applicability};\n use rustc_hir as hir;\n use rustc_middle::ty;\n use rustc_parse_format::{ParseMode, Parser, Piece};\n+use rustc_session::lint::FutureIncompatibilityReason;\n+use rustc_span::edition::Edition;\n use rustc_span::{hygiene, sym, symbol::kw, symbol::SymbolStr, InnerSpan, Span, Symbol};\n \n declare_lint! {\n@@ -30,6 +32,10 @@ declare_lint! {\n     NON_FMT_PANIC,\n     Warn,\n     \"detect single-argument panic!() invocations in which the argument is not a format string\",\n+    @future_incompatible = FutureIncompatibleInfo {\n+        reason: FutureIncompatibilityReason::EditionSemanticsChange(Edition::Edition2021),\n+        explain_reason: false,\n+    };\n     report_in_external_macro\n }\n \n@@ -87,7 +93,8 @@ fn check_panic<'tcx>(cx: &LateContext<'tcx>, f: &'tcx hir::Expr<'tcx>, arg: &'tc\n \n     cx.struct_span_lint(NON_FMT_PANIC, arg_span, |lint| {\n         let mut l = lint.build(\"panic message is not a string literal\");\n-        l.note(\"this is no longer accepted in Rust 2021\");\n+        l.note(\"this usage of panic!() is deprecated; it will be a hard error in Rust 2021\");\n+        l.note(\"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\");\n         if !span.contains(arg_span) {\n             // No clue where this argument is coming from.\n             l.emit();"}, {"sha": "0f451c1e0a9a3827d8ede3e1edee6dd1e8502d0b", "filename": "src/test/ui/non-fmt-panic.stderr", "status": "modified", "additions": 24, "deletions": 12, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/934e6058eb5b051eac862d611cbc73e58a09e6dd/src%2Ftest%2Fui%2Fnon-fmt-panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/934e6058eb5b051eac862d611cbc73e58a09e6dd/src%2Ftest%2Fui%2Fnon-fmt-panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon-fmt-panic.stderr?ref=934e6058eb5b051eac862d611cbc73e58a09e6dd", "patch": "@@ -61,7 +61,8 @@ warning: panic message is not a string literal\n LL |     assert!(false, S);\n    |                    ^\n    |\n-   = note: this is no longer accepted in Rust 2021\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n help: add a \"{}\" format string to Display the message\n    |\n LL |     assert!(false, \"{}\", S);\n@@ -85,7 +86,8 @@ warning: panic message is not a string literal\n LL |     panic!(C);\n    |            ^\n    |\n-   = note: this is no longer accepted in Rust 2021\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n help: add a \"{}\" format string to Display the message\n    |\n LL |     panic!(\"{}\", C);\n@@ -101,7 +103,8 @@ warning: panic message is not a string literal\n LL |     panic!(S);\n    |            ^\n    |\n-   = note: this is no longer accepted in Rust 2021\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n help: add a \"{}\" format string to Display the message\n    |\n LL |     panic!(\"{}\", S);\n@@ -117,7 +120,8 @@ warning: panic message is not a string literal\n LL |     std::panic!(123);\n    |                 ^^^\n    |\n-   = note: this is no longer accepted in Rust 2021\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n help: add a \"{}\" format string to Display the message\n    |\n LL |     std::panic!(\"{}\", 123);\n@@ -133,7 +137,8 @@ warning: panic message is not a string literal\n LL |     core::panic!(&*\"abc\");\n    |                  ^^^^^^^\n    |\n-   = note: this is no longer accepted in Rust 2021\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n help: add a \"{}\" format string to Display the message\n    |\n LL |     core::panic!(\"{}\", &*\"abc\");\n@@ -181,15 +186,17 @@ warning: panic message is not a string literal\n LL |     fancy_panic::fancy_panic!(S);\n    |                               ^\n    |\n-   = note: this is no longer accepted in Rust 2021\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n \n warning: panic message is not a string literal\n   --> $DIR/non-fmt-panic.rs:36:12\n    |\n LL |     panic!(a!());\n    |            ^^^^\n    |\n-   = note: this is no longer accepted in Rust 2021\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n help: add a \"{}\" format string to Display the message\n    |\n LL |     panic!(\"{}\", a!());\n@@ -205,7 +212,8 @@ warning: panic message is not a string literal\n LL |     panic!(format!(\"{}\", 1));\n    |            ^^^^^^^^^^^^^^^^\n    |\n-   = note: this is no longer accepted in Rust 2021\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n    = note: the panic!() macro supports formatting, so there's no need for the format!() macro here\n help: remove the `format!(..)` macro call\n    |\n@@ -218,7 +226,8 @@ warning: panic message is not a string literal\n LL |     assert!(false, format!(\"{}\", 1));\n    |                    ^^^^^^^^^^^^^^^^\n    |\n-   = note: this is no longer accepted in Rust 2021\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n    = note: the assert!() macro supports formatting, so there's no need for the format!() macro here\n help: remove the `format!(..)` macro call\n    |\n@@ -231,7 +240,8 @@ warning: panic message is not a string literal\n LL |     debug_assert!(false, format!(\"{}\", 1));\n    |                          ^^^^^^^^^^^^^^^^\n    |\n-   = note: this is no longer accepted in Rust 2021\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n    = note: the debug_assert!() macro supports formatting, so there's no need for the format!() macro here\n help: remove the `format!(..)` macro call\n    |\n@@ -244,7 +254,8 @@ warning: panic message is not a string literal\n LL |     panic![123];\n    |            ^^^\n    |\n-   = note: this is no longer accepted in Rust 2021\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n help: add a \"{}\" format string to Display the message\n    |\n LL |     panic![\"{}\", 123];\n@@ -260,7 +271,8 @@ warning: panic message is not a string literal\n LL |     panic!{123};\n    |            ^^^\n    |\n-   = note: this is no longer accepted in Rust 2021\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n help: add a \"{}\" format string to Display the message\n    |\n LL |     panic!{\"{}\", 123};"}]}