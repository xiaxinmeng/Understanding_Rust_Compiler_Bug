{"sha": "b5a0b700c64639043bce0a2ba0a8b40dd853d469", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1YTBiNzAwYzY0NjM5MDQzYmNlMGEyYmEwYThiNDBkZDg1M2Q0Njk=", "commit": {"author": {"name": "Stuart Pernsteiner", "email": "spernsteiner@mozilla.com", "date": "2014-08-26T22:53:56Z"}, "committer": {"name": "Stuart Pernsteiner", "email": "spernsteiner@mozilla.com", "date": "2014-09-05T16:18:57Z"}, "message": "use target-specific linker args when combining compilation units", "tree": {"sha": "3747685e68efa0ce67e2f4931a6e9235fcfdc57b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3747685e68efa0ce67e2f4931a6e9235fcfdc57b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5a0b700c64639043bce0a2ba0a8b40dd853d469", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5a0b700c64639043bce0a2ba0a8b40dd853d469", "html_url": "https://github.com/rust-lang/rust/commit/b5a0b700c64639043bce0a2ba0a8b40dd853d469", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5a0b700c64639043bce0a2ba0a8b40dd853d469/comments", "author": {"login": "spernsteiner", "id": 3031136, "node_id": "MDQ6VXNlcjMwMzExMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3031136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spernsteiner", "html_url": "https://github.com/spernsteiner", "followers_url": "https://api.github.com/users/spernsteiner/followers", "following_url": "https://api.github.com/users/spernsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/spernsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/spernsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spernsteiner/subscriptions", "organizations_url": "https://api.github.com/users/spernsteiner/orgs", "repos_url": "https://api.github.com/users/spernsteiner/repos", "events_url": "https://api.github.com/users/spernsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/spernsteiner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spernsteiner", "id": 3031136, "node_id": "MDQ6VXNlcjMwMzExMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3031136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spernsteiner", "html_url": "https://github.com/spernsteiner", "followers_url": "https://api.github.com/users/spernsteiner/followers", "following_url": "https://api.github.com/users/spernsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/spernsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/spernsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spernsteiner/subscriptions", "organizations_url": "https://api.github.com/users/spernsteiner/orgs", "repos_url": "https://api.github.com/users/spernsteiner/repos", "events_url": "https://api.github.com/users/spernsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/spernsteiner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b70269854a701668ba47641201c4403228db06b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b70269854a701668ba47641201c4403228db06b", "html_url": "https://github.com/rust-lang/rust/commit/4b70269854a701668ba47641201c4403228db06b"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "2760ae80110bcfd1851213a762661d482846cf1e", "filename": "src/librustc/back/write.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b5a0b700c64639043bce0a2ba0a8b40dd853d469/src%2Flibrustc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5a0b700c64639043bce0a2ba0a8b40dd853d469/src%2Flibrustc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Fwrite.rs?ref=b5a0b700c64639043bce0a2ba0a8b40dd853d469", "patch": "@@ -604,17 +604,34 @@ pub fn run_passes(sess: &Session,\n     };\n \n     let link_obj = |output_path: &Path| {\n-        let mut cmd = Command::new(\"ld\");\n+        let pname = get_cc_prog(sess);\n+        let mut cmd = Command::new(pname.as_slice());\n+\n+        cmd.args(sess.targ_cfg.target_strs.cc_args.as_slice());\n+        cmd.arg(\"-nostdlib\");\n \n         for index in range(0, trans.modules.len()) {\n             cmd.arg(crate_output.with_extension(format!(\"{}.o\", index).as_slice()));\n         }\n \n         cmd.arg(\"-r\").arg(\"-o\").arg(output_path);\n+\n+        if (sess.opts.debugging_opts & config::PRINT_LINK_ARGS) != 0 {\n+            println!(\"{}\", &cmd);\n+        }\n+\n         cmd.stdin(::std::io::process::Ignored)\n            .stdout(::std::io::process::InheritFd(1))\n            .stderr(::std::io::process::InheritFd(2));\n-        cmd.status().unwrap();\n+        match cmd.status() {\n+            Ok(_) => {},\n+            Err(e) => {\n+                sess.err(format!(\"could not exec the linker `{}`: {}\",\n+                                 pname,\n+                                 e).as_slice());\n+                sess.abort_if_errors();\n+            },\n+        }\n     };\n \n     // Flag to indicate whether the user explicitly requested bitcode."}]}