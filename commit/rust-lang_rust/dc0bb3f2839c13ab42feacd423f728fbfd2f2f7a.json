{"sha": "dc0bb3f2839c13ab42feacd423f728fbfd2f2f7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjMGJiM2YyODM5YzEzYWI0MmZlYWNkNDIzZjcyOGZiZmQyZjJmN2E=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-02-17T10:46:59Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-02-17T10:46:59Z"}, "message": "Auto merge of #39485 - canndrew:inference-fix-39297, r=nikomatsakis\n\nIgnore expected type in diverging blocks\n\nAs per comment: https://github.com/rust-lang/rust/issues/39297#issuecomment-276810343", "tree": {"sha": "ebfa66a9d4fc5336a9bba7bed3eff676ad853c34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebfa66a9d4fc5336a9bba7bed3eff676ad853c34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc0bb3f2839c13ab42feacd423f728fbfd2f2f7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc0bb3f2839c13ab42feacd423f728fbfd2f2f7a", "html_url": "https://github.com/rust-lang/rust/commit/dc0bb3f2839c13ab42feacd423f728fbfd2f2f7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc0bb3f2839c13ab42feacd423f728fbfd2f2f7a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e879aa43ef63962f8e4d797292194a9f40a22a13", "url": "https://api.github.com/repos/rust-lang/rust/commits/e879aa43ef63962f8e4d797292194a9f40a22a13", "html_url": "https://github.com/rust-lang/rust/commit/e879aa43ef63962f8e4d797292194a9f40a22a13"}, {"sha": "18be42c5d7cf0e445befee2ca8aba092808b7e35", "url": "https://api.github.com/repos/rust-lang/rust/commits/18be42c5d7cf0e445befee2ca8aba092808b7e35", "html_url": "https://github.com/rust-lang/rust/commit/18be42c5d7cf0e445befee2ca8aba092808b7e35"}], "stats": {"total": 47, "additions": 11, "deletions": 36}, "files": [{"sha": "9d963226caf4bad488352f593cfa7731d2f86e59", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/dc0bb3f2839c13ab42feacd423f728fbfd2f2f7a/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc0bb3f2839c13ab42feacd423f728fbfd2f2f7a/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=dc0bb3f2839c13ab42feacd423f728fbfd2f2f7a", "patch": "@@ -4156,17 +4156,6 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         };\n \n         if self.diverges.get().always() {\n-            if let ExpectHasType(ety) = expected {\n-                // Avoid forcing a type (only `!` for now) in unreachable code.\n-                // FIXME(aburka) do we need this special case? and should it be is_uninhabited?\n-                if !ety.is_never() {\n-                    if let Some(ref e) = blk.expr {\n-                        // Coerce the tail expression to the right type.\n-                        self.demand_coerce(e, ty, ety);\n-                    }\n-                }\n-            }\n-\n             ty = self.next_diverging_ty_var(TypeVariableOrigin::DivergingBlockExpr(blk.span));\n         } else if let ExpectHasType(ety) = expected {\n             if let Some(ref e) = blk.expr {"}, {"sha": "1cbb7588e17df5e5fdddb3d8f0ff54f5e2608bbf", "filename": "src/test/compile-fail/issue-5500.rs", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e879aa43ef63962f8e4d797292194a9f40a22a13/src%2Ftest%2Fcompile-fail%2Fissue-5500.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e879aa43ef63962f8e4d797292194a9f40a22a13/src%2Ftest%2Fcompile-fail%2Fissue-5500.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5500.rs?ref=e879aa43ef63962f8e4d797292194a9f40a22a13", "patch": "@@ -1,17 +0,0 @@\n-// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-fn main() {\n-    &panic!()\n-    //~^ ERROR mismatched types\n-    //~| expected type `()`\n-    //~| found type `&_`\n-    //~| expected (), found reference\n-}"}, {"sha": "193c66b2a2afd276272ba07587693608f51f3058", "filename": "src/test/run-pass/inference-changes-39485.rs", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dc0bb3f2839c13ab42feacd423f728fbfd2f2f7a/src%2Ftest%2Frun-pass%2Finference-changes-39485.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc0bb3f2839c13ab42feacd423f728fbfd2f2f7a/src%2Ftest%2Frun-pass%2Finference-changes-39485.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finference-changes-39485.rs?ref=dc0bb3f2839c13ab42feacd423f728fbfd2f2f7a", "patch": "@@ -8,12 +8,12 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+fn g() {\n+    &panic!()\n+}\n+\n fn f() -> isize {\n     (return 1, return 2)\n-//~^ ERROR mismatched types\n-//~| expected type `isize`\n-//~| found type `(_, _)`\n-//~| expected isize, found tuple\n }\n \n fn main() {}", "previous_filename": "src/test/compile-fail/issue-10176.rs"}, {"sha": "f77888c29554db81c6ab7ba84eb6d245d9712403", "filename": "src/test/run-pass/issue-15763.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dc0bb3f2839c13ab42feacd423f728fbfd2f2f7a/src%2Ftest%2Frun-pass%2Fissue-15763.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc0bb3f2839c13ab42feacd423f728fbfd2f2f7a/src%2Ftest%2Frun-pass%2Fissue-15763.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-15763.rs?ref=dc0bb3f2839c13ab42feacd423f728fbfd2f2f7a", "patch": "@@ -8,7 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![allow(unknown_features)]\n+#![allow(unused_features)]\n+#![allow(unreachable_code)]\n #![feature(box_syntax)]\n \n #[derive(PartialEq, Debug)]\n@@ -28,14 +29,14 @@ struct Foo {\n }\n \n fn foo() -> Result<Foo, isize> {\n-    return Ok(Foo {\n+    return Ok::<Foo, isize>(Foo {\n         x: Bar { x: 22 },\n         a: return Err(32)\n     });\n }\n \n fn baz() -> Result<Foo, isize> {\n-    Ok(Foo {\n+    Ok::<Foo, isize>(Foo {\n         x: Bar { x: 22 },\n         a: return Err(32)\n     })"}, {"sha": "8e008c639b30eb6cc00d1977f5ce1f2a6fa156be", "filename": "src/test/run-pass/project-defer-unification.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dc0bb3f2839c13ab42feacd423f728fbfd2f2f7a/src%2Ftest%2Frun-pass%2Fproject-defer-unification.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc0bb3f2839c13ab42feacd423f728fbfd2f2f7a/src%2Ftest%2Frun-pass%2Fproject-defer-unification.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fproject-defer-unification.rs?ref=dc0bb3f2839c13ab42feacd423f728fbfd2f2f7a", "patch": "@@ -11,6 +11,8 @@\n // A regression test extracted from image-0.3.11. The point of\n // failure was in `index_colors` below.\n \n+#![allow(unused)]\n+\n use std::ops::{Deref, DerefMut};\n \n #[derive(Copy, Clone)]\n@@ -92,7 +94,7 @@ pub fn index_colors<Pix>(image: &ImageBuffer<Pix, Vec<u8>>)\n                          -> ImageBuffer<Luma<u8>, Vec<u8>>\n where Pix: Pixel<Subpixel=u8> + 'static,\n {\n-    let mut indices: ImageBuffer<_,Vec<_>> = loop { };\n+    let mut indices: ImageBuffer<Luma<u8>, Vec<u8>> = loop { };\n     for (pixel, idx) in image.pixels().zip(indices.pixels_mut()) {\n         // failured occurred here ^^ because we were requiring that we\n         // could project Pixel or Subpixel from `T_indices` (type of"}]}