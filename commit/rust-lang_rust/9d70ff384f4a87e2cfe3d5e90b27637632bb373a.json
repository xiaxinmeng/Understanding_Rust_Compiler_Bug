{"sha": "9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkNzBmZjM4NGY0YTg3ZTJjZmUzZDVlOTBiMjc2Mzc2MzJiYjM3M2E=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-10-12T17:15:26Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-10-12T21:07:55Z"}, "message": "Rollup merge of #36995 - nrc:stable, r=@nikomatsakis\n\nstabilise ?, attributes on stmts, deprecate Reflect\n\nr? @nikomatsakis", "tree": {"sha": "ef14774ca0dfd2daabeee9dad6da56be1b36106d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef14774ca0dfd2daabeee9dad6da56be1b36106d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "html_url": "https://github.com/rust-lang/rust/commit/9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d13b102c5463d4258482815d04b93f360418245f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d13b102c5463d4258482815d04b93f360418245f", "html_url": "https://github.com/rust-lang/rust/commit/d13b102c5463d4258482815d04b93f360418245f"}, {"sha": "79b5177378097ee39e595517ca76132b3a3dc0eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/79b5177378097ee39e595517ca76132b3a3dc0eb", "html_url": "https://github.com/rust-lang/rust/commit/79b5177378097ee39e595517ca76132b3a3dc0eb"}], "stats": {"total": 186, "additions": 53, "deletions": 133}, "files": [{"sha": "84f459bf8724fd40d10034d0ece03d002f8b07f4", "filename": "src/doc/reference.md", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -2472,8 +2472,7 @@ The currently implemented features of the reference compiler are:\n * - `default_type_parameter_fallback` - Allows type parameter defaults to\n                                         influence type inference.\n \n-* - `stmt_expr_attributes` - Allows attributes on expressions and\n-                             non-item statements.\n+* - `stmt_expr_attributes` - Allows attributes on expressions.\n \n * - `type_ascription` - Allows type ascription expressions `expr: Type`.\n "}, {"sha": "f7edcb998a927328a8c33dadeea5841fc43ac5c8", "filename": "src/libcore/any.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibcore%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibcore%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fany.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -73,7 +73,6 @@\n \n use fmt;\n use intrinsics;\n-use marker::Reflect;\n \n ///////////////////////////////////////////////////////////////////////////////\n // Any trait\n@@ -86,7 +85,7 @@ use marker::Reflect;\n ///\n /// [mod]: index.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub trait Any: Reflect + 'static {\n+pub trait Any: 'static {\n     /// Gets the `TypeId` of `self`.\n     ///\n     /// # Examples\n@@ -112,7 +111,7 @@ pub trait Any: Reflect + 'static {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T: Reflect + 'static + ?Sized > Any for T {\n+impl<T: 'static + ?Sized > Any for T {\n     fn get_type_id(&self) -> TypeId { TypeId::of::<T>() }\n }\n \n@@ -366,7 +365,7 @@ impl TypeId {\n     /// }\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn of<T: ?Sized + Reflect + 'static>() -> TypeId {\n+    pub fn of<T: ?Sized + 'static>() -> TypeId {\n         TypeId {\n             t: unsafe { intrinsics::type_id::<T>() },\n         }"}, {"sha": "28101d21fc25ecd691ae7eae8e91f43b270f652d", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -89,7 +89,7 @@\n #![feature(specialization)]\n #![feature(staged_api)]\n #![feature(unboxed_closures)]\n-#![feature(question_mark)]\n+#![cfg_attr(stage0, feature(question_mark))]\n #![feature(never_type)]\n #![feature(prelude_import)]\n "}, {"sha": "6e08abd34614386c41479764b91248ea788f23d0", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -255,6 +255,9 @@ macro_rules! debug_assert_ne {\n /// Helper macro for reducing boilerplate code for matching `Result` together\n /// with converting downstream errors.\n ///\n+/// Prefer using `?` syntax to `try!`. `?` is built in to the language and is\n+/// more succinct than `try!`. It is the standard method for error propagation.\n+///\n /// `try!` matches the given `Result`. In case of the `Ok` variant, the\n /// expression has the value of the wrapped value.\n ///"}, {"sha": "03d8af1563d6de1e639bd7fc4ea73068acb077d9", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -587,11 +587,14 @@ mod impls {\n #[unstable(feature = \"reflect_marker\",\n            reason = \"requires RFC and more experience\",\n            issue = \"27749\")]\n+#[rustc_deprecated(since = \"1.14.0\", reason = \"Specialization makes parametricity impossible\")]\n #[rustc_on_unimplemented = \"`{Self}` does not implement `Any`; \\\n                             ensure all type parameters are bounded by `Any`\"]\n pub trait Reflect {}\n \n #[unstable(feature = \"reflect_marker\",\n            reason = \"requires RFC and more experience\",\n            issue = \"27749\")]\n+#[rustc_deprecated(since = \"1.14.0\", reason = \"Specialization makes parametricity impossible\")]\n+#[allow(deprecated)]\n impl Reflect for .. { }"}, {"sha": "95c46ec5715e742740963b414c75195050a4ba6c", "filename": "src/libgraphviz/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibgraphviz%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibgraphviz%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgraphviz%2Flib.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -295,7 +295,7 @@\n #![cfg_attr(not(stage0), deny(warnings))]\n \n #![feature(str_escape)]\n-#![feature(question_mark)]\n+#![cfg_attr(stage0, feature(question_mark))]\n \n use self::LabelText::*;\n "}, {"sha": "12a1a4255246a43ad64fdd77b39d5180cac56aab", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -1327,30 +1327,6 @@ let x: i32 = \"I am not a number!\";\n //      |\n //    type `i32` assigned to variable `x`\n ```\n-\n-Another situation in which this occurs is when you attempt to use the `try!`\n-macro inside a function that does not return a `Result<T, E>`:\n-\n-```compile_fail,E0308\n-use std::fs::File;\n-\n-fn main() {\n-    let mut f = try!(File::create(\"foo.txt\"));\n-}\n-```\n-\n-This code gives an error like this:\n-\n-```text\n-<std macros>:5:8: 6:42 error: mismatched types:\n- expected `()`,\n-     found `core::result::Result<_, _>`\n- (expected (),\n-     found enum `core::result::Result`) [E0308]\n-```\n-\n-`try!` returns a `Result<T, E>`, and so the function must. But `main()` has\n-`()` as its return type, hence the error.\n \"##,\n \n E0309: r##\""}, {"sha": "25731df47785392ce6b91a28f278bf683ce2810a", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -40,7 +40,7 @@\n #![feature(rustc_private)]\n #![feature(slice_patterns)]\n #![feature(staged_api)]\n-#![feature(question_mark)]\n+#![cfg_attr(stage0, feature(question_mark))]\n #![cfg_attr(test, feature(test))]\n \n extern crate arena;"}, {"sha": "e6d1982d31c2d3370adaac3ceafe3e2ccfc6111c", "filename": "src/librustc_back/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc_back%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc_back%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Flib.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -37,7 +37,7 @@\n #![feature(rustc_private)]\n #![feature(staged_api)]\n #![feature(step_by)]\n-#![feature(question_mark)]\n+#![cfg_attr(stage0, feature(question_mark))]\n #![cfg_attr(test, feature(test, rand))]\n \n extern crate syntax;"}, {"sha": "da899714e935138704b63ca6321a3f42e7e98daa", "filename": "src/librustc_borrowck/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc_borrowck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc_borrowck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Flib.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -26,7 +26,7 @@\n #![feature(staged_api)]\n #![feature(associated_consts)]\n #![feature(nonzero)]\n-#![feature(question_mark)]\n+#![cfg_attr(stage0, feature(question_mark))]\n #[macro_use] extern crate log;\n #[macro_use] extern crate syntax;\n extern crate syntax_pos;"}, {"sha": "7b40269ba56ad271ac459e55c88c1d111fbdd762", "filename": "src/librustc_const_eval/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc_const_eval%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc_const_eval%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Flib.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -27,7 +27,7 @@\n #![feature(staged_api)]\n #![feature(rustc_diagnostic_macros)]\n #![feature(slice_patterns)]\n-#![feature(question_mark)]\n+#![cfg_attr(stage0, feature(question_mark))]\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n "}, {"sha": "31fccb41ce573840ec8bcbbed5c5534e0ca07504", "filename": "src/librustc_const_math/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc_const_math%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc_const_math%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_math%2Flib.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -25,7 +25,7 @@\n \n #![feature(rustc_private)]\n #![feature(staged_api)]\n-#![feature(question_mark)]\n+#![cfg_attr(stage0, feature(question_mark))]\n \n #[macro_use] extern crate log;\n #[macro_use] extern crate syntax;"}, {"sha": "0e59ea6560fee85f0e0a4448e7ea95df7b802b10", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -31,7 +31,7 @@\n #![feature(rustc_private)]\n #![feature(set_stdio)]\n #![feature(staged_api)]\n-#![feature(question_mark)]\n+#![cfg_attr(stage0, feature(question_mark))]\n \n extern crate arena;\n extern crate flate;"}, {"sha": "af8ac81b4fbb1d916f979e7fdee76bf4bdb68c2f", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -21,7 +21,7 @@\n #![allow(unused_attributes)]\n #![feature(rustc_private)]\n #![feature(staged_api)]\n-#![feature(question_mark)]\n+#![cfg_attr(stage0, feature(question_mark))]\n #![feature(range_contains)]\n #![feature(libc)]\n #![feature(unicode)]"}, {"sha": "67104e912f90ecc9a0a7ecfa9739b5eb1c584976", "filename": "src/librustc_incremental/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc_incremental%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc_incremental%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Flib.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -20,7 +20,7 @@\n #![cfg_attr(not(stage0), deny(warnings))]\n \n #![feature(dotdot_in_tuple_patterns)]\n-#![feature(question_mark)]\n+#![cfg_attr(stage0, feature(question_mark))]\n #![feature(rustc_private)]\n #![feature(staged_api)]\n #![feature(rand)]"}, {"sha": "3d8a10f6c31fcc2a24febf28c3e6878844da6f7c", "filename": "src/librustc_metadata/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc_metadata%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc_metadata%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flib.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -23,7 +23,7 @@\n #![feature(dotdot_in_tuple_patterns)]\n #![feature(proc_macro_internals)]\n #![feature(proc_macro_lib)]\n-#![feature(question_mark)]\n+#![cfg_attr(stage0, feature(question_mark))]\n #![feature(quote)]\n #![feature(rustc_diagnostic_macros)]\n #![feature(rustc_private)]"}, {"sha": "02f15602d708b3472a39f42aa391282213a7f8c8", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -26,7 +26,7 @@ Rust MIR: a lowered representation of Rust. Also: an experiment!\n #![feature(rustc_diagnostic_macros)]\n #![feature(rustc_private)]\n #![feature(staged_api)]\n-#![feature(question_mark)]\n+#![cfg_attr(stage0, feature(question_mark))]\n \n #[macro_use] extern crate log;\n extern crate graphviz as dot;"}, {"sha": "81c0c184f66b2e76441d1c79ae9443060cbbe449", "filename": "src/librustc_trans/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc_trans%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc_trans%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Flib.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -36,7 +36,7 @@\n #![feature(slice_patterns)]\n #![feature(staged_api)]\n #![feature(unicode)]\n-#![feature(question_mark)]\n+#![cfg_attr(stage0, feature(question_mark))]\n \n use rustc::dep_graph::WorkProduct;\n "}, {"sha": "cb9b162cabe11911e3180c4acee2ad39c4ad0034", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -82,7 +82,7 @@ This API is completely unstable and subject to change.\n #![feature(rustc_diagnostic_macros)]\n #![feature(rustc_private)]\n #![feature(staged_api)]\n-#![feature(question_mark)]\n+#![cfg_attr(stage0, feature(question_mark))]\n \n #[macro_use] extern crate log;\n #[macro_use] extern crate syntax;"}, {"sha": "0be36eb3a85088d7dd7125e95e88fa21468cfd0e", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -28,7 +28,7 @@\n #![feature(staged_api)]\n #![feature(test)]\n #![feature(unicode)]\n-#![feature(question_mark)]\n+#![cfg_attr(stage0, feature(question_mark))]\n \n extern crate arena;\n extern crate getopts;"}, {"sha": "884f24ddc4c75a8b739c83096d9322bc30998007", "filename": "src/libserialize/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibserialize%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibserialize%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Flib.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -35,7 +35,7 @@ Core encoding and decoding interfaces.\n #![feature(specialization)]\n #![feature(staged_api)]\n #![feature(unicode)]\n-#![feature(question_mark)]\n+#![cfg_attr(stage0, feature(question_mark))]\n #![cfg_attr(test, feature(test))]\n \n // test harness access"}, {"sha": "398bb55ea1bf69f65a5f037212d0d3381d069824", "filename": "src/libstd/error.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibstd%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibstd%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ferror.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -55,15 +55,14 @@ use any::TypeId;\n use cell;\n use char;\n use fmt::{self, Debug, Display};\n-use marker::Reflect;\n use mem::transmute;\n use num;\n use str;\n use string;\n \n /// Base functionality for all errors in Rust.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub trait Error: Debug + Display + Reflect {\n+pub trait Error: Debug + Display {\n     /// A short description of the error.\n     ///\n     /// The description should not contain newlines or sentence-ending"}, {"sha": "39b64e723933bed9d196298beafcd2391f4649f6", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -12,7 +12,6 @@\n \n use io::prelude::*;\n \n-use marker::Reflect;\n use cmp;\n use error;\n use fmt;\n@@ -578,7 +577,7 @@ impl<W> From<IntoInnerError<W>> for Error {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<W: Reflect + Send + fmt::Debug> error::Error for IntoInnerError<W> {\n+impl<W: Send + fmt::Debug> error::Error for IntoInnerError<W> {\n     fn description(&self) -> &str {\n         error::Error::description(self.error())\n     }"}, {"sha": "c2f6a6f660c48c4971cd04b809d228a2417cda7f", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -255,10 +255,9 @@\n #![feature(panic_unwind)]\n #![feature(placement_in_syntax)]\n #![feature(prelude_import)]\n-#![feature(question_mark)]\n+#![cfg_attr(stage0, feature(question_mark))]\n #![feature(rand)]\n #![feature(raw)]\n-#![feature(reflect_marker)]\n #![feature(repr_simd)]\n #![feature(rustc_attrs)]\n #![feature(shared)]"}, {"sha": "fce640e7c7a2c4e504c64138c596b70c7372d89f", "filename": "src/libstd/sync/mpsc/mod.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -270,7 +270,6 @@ use error;\n use fmt;\n use mem;\n use cell::UnsafeCell;\n-use marker::Reflect;\n use time::{Duration, Instant};\n \n #[unstable(feature = \"mpsc_select\", issue = \"27800\")]\n@@ -1163,7 +1162,7 @@ impl<T> fmt::Display for SendError<T> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T: Send + Reflect> error::Error for SendError<T> {\n+impl<T: Send> error::Error for SendError<T> {\n     fn description(&self) -> &str {\n         \"sending on a closed channel\"\n     }\n@@ -1198,7 +1197,7 @@ impl<T> fmt::Display for TrySendError<T> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T: Send + Reflect> error::Error for TrySendError<T> {\n+impl<T: Send> error::Error for TrySendError<T> {\n \n     fn description(&self) -> &str {\n         match *self {"}, {"sha": "bdc727f1dfcfe0f20536ce50054f7ec5e6cff3e7", "filename": "src/libstd/sys/common/poison.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibstd%2Fsys%2Fcommon%2Fpoison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibstd%2Fsys%2Fcommon%2Fpoison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fpoison.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -10,7 +10,6 @@\n \n use error::{Error};\n use fmt;\n-use marker::Reflect;\n use sync::atomic::{AtomicBool, Ordering};\n use thread;\n \n@@ -117,7 +116,7 @@ impl<T> fmt::Display for PoisonError<T> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T: Reflect> Error for PoisonError<T> {\n+impl<T> Error for PoisonError<T> {\n     fn description(&self) -> &str {\n         \"poisoned lock: another task failed inside\"\n     }\n@@ -174,7 +173,7 @@ impl<T> fmt::Display for TryLockError<T> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T: Reflect> Error for TryLockError<T> {\n+impl<T> Error for TryLockError<T> {\n     fn description(&self) -> &str {\n         match *self {\n             TryLockError::Poisoned(ref p) => p.description(),"}, {"sha": "3b81ea4917f2bf9e496981d0f5f1050016d635f0", "filename": "src/libsyntax/config.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibsyntax%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibsyntax%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fconfig.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -153,7 +153,7 @@ impl<'a> StripUnconfigured<'a> {\n     }\n \n     // Visit attributes on expression and statements (but not attributes on items in blocks).\n-    fn visit_stmt_or_expr_attrs(&mut self, attrs: &[ast::Attribute]) {\n+    fn visit_expr_attrs(&mut self, attrs: &[ast::Attribute]) {\n         // flag the offending attributes\n         for attr in attrs.iter() {\n             if !self.features.map(|features| features.stmt_expr_attributes).unwrap_or(true) {\n@@ -227,7 +227,7 @@ impl<'a> StripUnconfigured<'a> {\n     }\n \n     pub fn configure_expr(&mut self, expr: P<ast::Expr>) -> P<ast::Expr> {\n-        self.visit_stmt_or_expr_attrs(expr.attrs());\n+        self.visit_expr_attrs(expr.attrs());\n \n         // If an expr is valid to cfg away it will have been removed by the\n         // outer stmt or expression folder before descending in here.\n@@ -245,7 +245,6 @@ impl<'a> StripUnconfigured<'a> {\n     }\n \n     pub fn configure_stmt(&mut self, stmt: ast::Stmt) -> Option<ast::Stmt> {\n-        self.visit_stmt_or_expr_attrs(stmt.attrs());\n         self.configure(stmt)\n     }\n }"}, {"sha": "62b88888fc878849f041d6051c7f9b9b88a43e80", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -253,9 +253,6 @@ declare_features! (\n     // a...b and ...b\n     (active, inclusive_range_syntax, \"1.7.0\", Some(28237)),\n \n-    // `expr?`\n-    (active, question_mark, \"1.9.0\", Some(31436)),\n-\n     // impl specialization (RFC 1210)\n     (active, specialization, \"1.7.0\", Some(31844)),\n \n@@ -348,6 +345,8 @@ declare_features! (\n     (accepted, while_let, \"1.0.0\", None),\n     // Allows `#[deprecated]` attribute\n     (accepted, deprecated, \"1.9.0\", Some(29935)),\n+    // `expr?`\n+    (accepted, question_mark, \"1.14.0\", Some(31436)),\n );\n // (changing above list without updating src/doc/reference.md makes @cmr sad)\n \n@@ -1072,9 +1071,6 @@ impl<'a> Visitor for PostExpansionVisitor<'a> {\n                                   e.span,\n                                   \"inclusive range syntax is experimental\");\n             }\n-            ast::ExprKind::Try(..) => {\n-                gate_feature_post!(&self, question_mark, e.span, \"the `?` operator is not stable\");\n-            }\n             ast::ExprKind::InPlace(..) => {\n                 gate_feature_post!(&self, placement_in_syntax, e.span, EXPLAIN_PLACEMENT_IN);\n             }"}, {"sha": "6e671c9efdcf87b2a5e3abfa0ebd64b9c0f164f5", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -31,7 +31,7 @@\n #![feature(staged_api)]\n #![feature(str_escape)]\n #![feature(unicode)]\n-#![feature(question_mark)]\n+#![cfg_attr(stage0, feature(question_mark))]\n #![feature(rustc_diagnostic_macros)]\n #![feature(specialization)]\n "}, {"sha": "e3feaee5369d1c92474bcaebce3387bbcbcca8a0", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -27,7 +27,7 @@\n #![allow(unused_attributes)]\n #![feature(rustc_private)]\n #![feature(staged_api)]\n-#![feature(question_mark)]\n+#![cfg_attr(stage0, feature(question_mark))]\n #![feature(specialization)]\n \n use std::cell::{Cell, RefCell};"}, {"sha": "caef808f474ec9553fb436adaa39d402aa57a9ee", "filename": "src/libterm/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibterm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibterm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibterm%2Flib.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -59,7 +59,7 @@\n #![cfg_attr(windows, feature(libc))]\n // Handle rustfmt skips\n #![feature(custom_attribute)]\n-#![feature(question_mark)]\n+#![cfg_attr(stage0, feature(question_mark))]\n #![allow(unused_attributes)]\n \n use std::io::prelude::*;"}, {"sha": "625666e641c6bed6ece2bda4dd1d3f3983a06f6d", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -38,7 +38,7 @@\n #![feature(rustc_private)]\n #![feature(set_stdio)]\n #![feature(staged_api)]\n-#![feature(question_mark)]\n+#![cfg_attr(stage0, feature(question_mark))]\n #![feature(panic_unwind)]\n \n extern crate getopts;"}, {"sha": "b05c7323962c576d66d46335463b346ebd3a7532", "filename": "src/test/compile-fail/feature-gate-try-operator.rs", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d13b102c5463d4258482815d04b93f360418245f/src%2Ftest%2Fcompile-fail%2Ffeature-gate-try-operator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d13b102c5463d4258482815d04b93f360418245f/src%2Ftest%2Fcompile-fail%2Ffeature-gate-try-operator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-try-operator.rs?ref=d13b102c5463d4258482815d04b93f360418245f", "patch": "@@ -1,18 +0,0 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-macro_rules! id {\n-    ($e:expr) => { $e }\n-}\n-\n-fn main() {\n-    id!(x?);  //~ error: the `?` operator is not stable (see issue #31436)\n-    y?;  //~ error: the `?` operator is not stable (see issue #31436)\n-}"}, {"sha": "09538818dcdf9ccf85fc692de32f51bc9e3f43aa", "filename": "src/test/compile-fail/issue-32709.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Fcompile-fail%2Fissue-32709.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Fcompile-fail%2Fissue-32709.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-32709.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -8,12 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(question_mark)]\n-\n // Make sure that the span of try shorthand does not include the trailing\n // semicolon;\n fn a() -> Result<i32, ()> {\n-    Err(5)?; //~ ERROR 16:5: 16:12\n+    Err(5)?; //~ ERROR 14:5: 14:12\n     Ok(1)\n }\n "}, {"sha": "87747d2851f5e3aa32fe464d516d91ba5b591b35", "filename": "src/test/compile-fail/issue-33876.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Fcompile-fail%2Fissue-33876.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Fcompile-fail%2Fissue-33876.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-33876.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -8,9 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(reflect_marker)]\n-\n-use std::marker::Reflect;\n use std::any::Any;\n \n struct Foo;"}, {"sha": "1ba1bb35bb5f3b679eec4f749415025bc347402d", "filename": "src/test/compile-fail/mir-dataflow/def-inits-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Fdef-inits-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Fdef-inits-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Fdef-inits-1.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -11,7 +11,6 @@\n // General test of maybe_uninits state computed by MIR dataflow.\n \n #![feature(rustc_attrs)]\n-#![feature(stmt_expr_attributes)]\n \n use std::intrinsics::rustc_peek;\n use std::mem::{drop, replace};"}, {"sha": "c8cf44adb97199d9ad0bafa8595c52254617fd54", "filename": "src/test/compile-fail/mir-dataflow/inits-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Finits-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Finits-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Finits-1.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -11,7 +11,6 @@\n // General test of maybe_inits state computed by MIR dataflow.\n \n #![feature(rustc_attrs)]\n-#![feature(stmt_expr_attributes)]\n \n use std::intrinsics::rustc_peek;\n use std::mem::{drop, replace};"}, {"sha": "a82bfc896988075ac0a718b75833473ce78d8872", "filename": "src/test/compile-fail/mir-dataflow/uninits-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Funinits-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Funinits-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Funinits-1.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -11,7 +11,6 @@\n // General test of maybe_uninits state computed by MIR dataflow.\n \n #![feature(rustc_attrs)]\n-#![feature(stmt_expr_attributes)]\n \n use std::intrinsics::rustc_peek;\n use std::mem::{drop, replace};"}, {"sha": "8cfdae506625e3d47d26db6065499f4614b2d6d6", "filename": "src/test/compile-fail/mir-dataflow/uninits-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Funinits-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Funinits-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Funinits-2.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -11,7 +11,6 @@\n // General test of maybe_uninits state computed by MIR dataflow.\n \n #![feature(rustc_attrs)]\n-#![feature(stmt_expr_attributes)]\n \n use std::intrinsics::rustc_peek;\n use std::mem::{drop, replace};"}, {"sha": "2fda2ee0900c7470ea82f045817f7cd223e54532", "filename": "src/test/compile-fail/stmt_expr_attrs_no_feature.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Fcompile-fail%2Fstmt_expr_attrs_no_feature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Fcompile-fail%2Fstmt_expr_attrs_no_feature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstmt_expr_attrs_no_feature.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -21,15 +21,15 @@ fn main() {\n     #[attr]\n     fn a() {}\n \n-    #[attr] //~ ERROR 15701\n+    #[attr]\n     {\n \n     }\n \n-    #[attr] //~ ERROR 15701\n+    #[attr]\n     5;\n \n-    #[attr] //~ ERROR 15701\n+    #[attr]\n     stmt_mac!();\n }\n \n@@ -43,7 +43,7 @@ fn c() {\n \n #[cfg(not(unset))]\n fn j() {\n-    #[attr] //~ ERROR 15701\n+    #[attr]\n     5;\n }\n \n@@ -55,7 +55,7 @@ fn d() {\n \n #[cfg_attr(not(unset), cfg(not(unset)))]\n fn i() {\n-    #[attr] //~ ERROR 15701\n+    #[attr]\n     8;\n }\n \n@@ -64,7 +64,7 @@ fn i() {\n macro_rules! item_mac {\n     ($e:ident) => {\n         fn $e() {\n-            #[attr] //~ ERROR 15701\n+            #[attr]\n             42;\n \n             #[cfg(unset)]\n@@ -75,7 +75,7 @@ macro_rules! item_mac {\n \n             #[cfg(not(unset))]\n             fn k() {\n-                #[attr] //~ ERROR 15701\n+                #[attr]\n                 5;\n             }\n \n@@ -87,7 +87,7 @@ macro_rules! item_mac {\n \n             #[cfg_attr(not(unset), cfg(not(unset)))]\n             fn h() {\n-                #[attr] //~ ERROR 15701\n+                #[attr]\n                 8;\n             }\n "}, {"sha": "012fe0d95ec49c7a554201a1c3c46eba539051d5", "filename": "src/test/run-pass/const-negation.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Frun-pass%2Fconst-negation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Frun-pass%2Fconst-negation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-negation.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(stmt_expr_attributes)]\n-\n #[deny(const_err)]\n \n fn main() {"}, {"sha": "c85ab535fc16b4b69e46791149367ad5d60ad714", "filename": "src/test/run-pass/enum-discrim-autosizing.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Frun-pass%2Fenum-discrim-autosizing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Frun-pass%2Fenum-discrim-autosizing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenum-discrim-autosizing.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(stmt_expr_attributes)]\n-\n use std::mem::size_of;\n \n enum Ei8 {"}, {"sha": "0ebe1ca07c77180259d1b97e61ae3a154a256520", "filename": "src/test/run-pass/ifmt.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Frun-pass%2Fifmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Frun-pass%2Fifmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fifmt.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -14,7 +14,6 @@\n #![allow(unused_must_use)]\n #![allow(unused_features)]\n #![feature(box_syntax)]\n-#![feature(question_mark)]\n \n use std::fmt::{self, Write};\n use std::usize;"}, {"sha": "e9326ed286aff9c49f880c069f1ea6362e1c1932", "filename": "src/test/run-pass/impl-trait/example-st.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Frun-pass%2Fimpl-trait%2Fexample-st.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Frun-pass%2Fimpl-trait%2Fexample-st.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-trait%2Fexample-st.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(conservative_impl_trait, question_mark)]\n+#![feature(conservative_impl_trait)]\n \n struct State;\n type Error = ();"}, {"sha": "dcbcc2d44b5dd803464e625f0642bd376b10a9d4", "filename": "src/test/run-pass/issue-17121.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Frun-pass%2Fissue-17121.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Frun-pass%2Fissue-17121.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-17121.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -10,8 +10,6 @@\n \n // pretty-expanded FIXME #23616\n \n-#![feature(question_mark)]\n-\n use std::fs::File;\n use std::io::{self, BufReader, Read};\n "}, {"sha": "c0f13b0b6c7ad35f60f562e26496e0dc2a0da010", "filename": "src/test/run-pass/issue-19404.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Frun-pass%2Fissue-19404.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Frun-pass%2Fissue-19404.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-19404.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -8,17 +8,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(reflect_marker)]\n-\n use std::any::TypeId;\n-use std::marker::Reflect;\n use std::rc::Rc;\n \n type Fp<T> = Rc<T>;\n \n struct Engine;\n \n-trait Component: 'static + Reflect {}\n+trait Component: 'static {}\n impl Component for Engine {}\n \n trait Env {"}, {"sha": "e45582dc2d39a09b11e6c95e4ea11ef5b3368d36", "filename": "src/test/run-pass/issue-20797.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Frun-pass%2Fissue-20797.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Frun-pass%2Fissue-20797.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-20797.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -10,8 +10,6 @@\n \n // Regression test for #20797.\n \n-#![feature(question_mark)]\n-\n use std::default::Default;\n use std::io;\n use std::fs;"}, {"sha": "6715b71a5f506eb162792c22a5714e1d4e945ec7", "filename": "src/test/run-pass/issue-21400.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Frun-pass%2Fissue-21400.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Frun-pass%2Fissue-21400.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-21400.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -11,8 +11,6 @@\n // Regression test for #21400 which itself was extracted from\n // stackoverflow.com/questions/28031155/is-my-borrow-checker-drunk/28031580\n \n-#![feature(question_mark)]\n-\n fn main() {\n     let mut t = Test;\n     assert_eq!(t.method1(\"one\"), Ok(1));"}, {"sha": "f16057ccab16cbbae5f37db9c44e6c30f457d21b", "filename": "src/test/run-pass/issue-8460.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Frun-pass%2Fissue-8460.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Frun-pass%2Fissue-8460.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8460.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -11,7 +11,7 @@\n // ignore-emscripten no threads support\n // ignore-pretty : (#23623) problems when  ending with // comments\n \n-#![feature(rustc_attrs, stmt_expr_attributes, zero_one)]\n+#![feature(rustc_attrs, zero_one)]\n \n use std::num::Zero;\n use std::thread;"}, {"sha": "53d6185020a0235ffb5f16b691780e4d66548f20", "filename": "src/test/run-pass/try-operator-hygiene.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Frun-pass%2Ftry-operator-hygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Frun-pass%2Ftry-operator-hygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftry-operator-hygiene.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -18,8 +18,6 @@\n // This test verifies that the expansion is hygienic, i.e. it's not affected by other `val` and\n // `err` bindings that may be in scope.\n \n-#![feature(question_mark)]\n-\n use std::num::ParseIntError;\n \n fn main() {"}, {"sha": "29de6364bf14760b6059cc58b143c8c812116919", "filename": "src/test/run-pass/try-operator.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Frun-pass%2Ftry-operator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftest%2Frun-pass%2Ftry-operator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftry-operator.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(question_mark)]\n-\n use std::fs::File;\n use std::io::{Read, self};\n use std::num::ParseIntError;"}, {"sha": "81478c18d7b24ddac0b102c2b4d28a016299dd5e", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -13,7 +13,6 @@\n #![feature(box_syntax)]\n #![feature(rustc_private)]\n #![feature(test)]\n-#![feature(question_mark)]\n #![feature(libc)]\n \n #![deny(warnings)]"}, {"sha": "7bdf1343aa9ccc70a2687c460d1bc081031a0db7", "filename": "src/tools/error_index_generator/main.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftools%2Ferror_index_generator%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftools%2Ferror_index_generator%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ferror_index_generator%2Fmain.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n #![feature(rustc_private, rustdoc)]\n-#![feature(question_mark)]\n \n extern crate syntax;\n extern crate rustdoc;"}, {"sha": "f79cc76e67d0045509a8a1520343f12c9288b6d6", "filename": "src/tools/linkchecker/main.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftools%2Flinkchecker%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftools%2Flinkchecker%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Flinkchecker%2Fmain.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -24,8 +24,6 @@\n //! A few whitelisted exceptions are allowed as there's known bugs in rustdoc,\n //! but this should catch the majority of \"broken link\" cases.\n \n-#![feature(question_mark)]\n-\n extern crate url;\n \n use std::env;"}, {"sha": "906251db1c2f216a4643a5cbd6f15c3b746f2a0d", "filename": "src/tools/rustbook/main.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftools%2Frustbook%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d70ff384f4a87e2cfe3d5e90b27637632bb373a/src%2Ftools%2Frustbook%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustbook%2Fmain.rs?ref=9d70ff384f4a87e2cfe3d5e90b27637632bb373a", "patch": "@@ -12,7 +12,6 @@\n \n #![feature(rustc_private)]\n #![feature(rustdoc)]\n-#![feature(question_mark)]\n \n extern crate rustdoc;\n extern crate rustc_back;"}]}