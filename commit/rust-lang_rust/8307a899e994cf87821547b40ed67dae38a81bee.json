{"sha": "8307a899e994cf87821547b40ed67dae38a81bee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzMDdhODk5ZTk5NGNmODc4MjE1NDdiNDBlZDY3ZGFlMzhhODFiZWU=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-04-15T10:30:38Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-04-15T11:01:10Z"}, "message": "Rename option_map_unit_fn to map_unit_fn", "tree": {"sha": "ec9b2ea8d6d22bb82231ef18e52e8c7e8a7e88ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec9b2ea8d6d22bb82231ef18e52e8c7e8a7e88ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8307a899e994cf87821547b40ed67dae38a81bee", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJa0zD2AAoJELb6Bqbg4mZboLoP/A8YdNZ2I3Oc+bb4lbcoh1GN\nrg4AY+4inEd4zjsnMjl3ohlDNeA3PwDDN4JkYjBtesQsnCLWhDIv+5i1qw8D23Bf\nTARYFO4gXP9b8TrOaNI+thUDwnB0vhUB+F6rRrpk2v5XtjpDFS6F303gPDnceqxo\nFs7LYS3f4DijfDjvtOkzKJT498g/2Owi0VqwrAP6avDUY5axyFivYffguOPBln3a\n74cFxE5JRuoc3AL7DYG+eqy8OEIA8iJMiGnkUVBPDD4pUmrcrrb6HE6JQ+pIpfwg\n7ZMgds9Ma6Qlqi0rqsErrd28htutHGUWi0JKfLwi925JY9icfgWvSrYyxvC7uDNN\nMH4EICqtaIC0Y6jH3ZmMG4Dc0yEr+NhffuVVJTtbeMmCnWpuTkSd6QWcXuVcnhnj\njWPf/KVNtfJUdYZPLK3Q33fI0sU+ZvJtjacWspKfSYREckyj2l272GL0TkuexjXA\nS10R/1VUMA+gVtctUltPL9AmXKcfS4Hj6LpFgaHkNS8ddjBNeVNF9GX0seAhf6I9\n1Fml6hk/y3tXvr7f4R7w/cDdCf+MLSPiCGBFY6u2WtHMRIU8B9yEZ7poKEJ9TOnq\nrWYjj8CO0uiUtFuYtallDwJpl5CfG/vWAkkNfx0MBGSuY5RNnwdc5YrE38aokqnW\nFzetGfZ4UxpFqtqrxfzq\n=hQu9\n-----END PGP SIGNATURE-----", "payload": "tree ec9b2ea8d6d22bb82231ef18e52e8c7e8a7e88ff\nparent d54f70f1f6ae6fa571117e3db30040620e2890a1\nauthor Philipp Hansch <dev@phansch.net> 1523788238 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1523790070 +0200\n\nRename option_map_unit_fn to map_unit_fn\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8307a899e994cf87821547b40ed67dae38a81bee", "html_url": "https://github.com/rust-lang/rust/commit/8307a899e994cf87821547b40ed67dae38a81bee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8307a899e994cf87821547b40ed67dae38a81bee/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d54f70f1f6ae6fa571117e3db30040620e2890a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/d54f70f1f6ae6fa571117e3db30040620e2890a1", "html_url": "https://github.com/rust-lang/rust/commit/d54f70f1f6ae6fa571117e3db30040620e2890a1"}], "stats": {"total": 332, "additions": 272, "deletions": 60}, "files": [{"sha": "afad923a35aba886e89264eaec3ba176863ba18b", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8307a899e994cf87821547b40ed67dae38a81bee/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8307a899e994cf87821547b40ed67dae38a81bee/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=8307a899e994cf87821547b40ed67dae38a81bee", "patch": "@@ -145,7 +145,7 @@ pub mod lifetimes;\n pub mod literal_representation;\n pub mod loops;\n pub mod map_clone;\n-pub mod option_map_unit_fn;\n+pub mod map_unit_fn;\n pub mod matches;\n pub mod mem_forget;\n pub mod methods;\n@@ -406,7 +406,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n     reg.register_late_lint_pass(box question_mark::QuestionMarkPass);\n     reg.register_late_lint_pass(box suspicious_trait_impl::SuspiciousImpl);\n     reg.register_late_lint_pass(box redundant_field_names::RedundantFieldNames);\n-    reg.register_late_lint_pass(box option_map_unit_fn::Pass);\n+    reg.register_late_lint_pass(box map_unit_fn::Pass);\n \n \n     reg.register_lint_group(\"clippy_restriction\", vec![\n@@ -443,7 +443,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         if_not_else::IF_NOT_ELSE,\n         infinite_iter::MAYBE_INFINITE_ITER,\n         items_after_statements::ITEMS_AFTER_STATEMENTS,\n-        option_map_unit_fn::OPTION_MAP_UNIT_FN,\n+        map_unit_fn::OPTION_MAP_UNIT_FN,\n         matches::SINGLE_MATCH_ELSE,\n         methods::FILTER_MAP,\n         methods::OPTION_MAP_UNWRAP_OR,"}, {"sha": "97ff1141986a298ca281c0a0462fe0400a5b4d82", "filename": "clippy_lints/src/map_unit_fn.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8307a899e994cf87821547b40ed67dae38a81bee/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8307a899e994cf87821547b40ed67dae38a81bee/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_unit_fn.rs?ref=8307a899e994cf87821547b40ed67dae38a81bee", "patch": "@@ -19,15 +19,15 @@ pub struct Pass;\n /// **Example:**\n ///\n /// ```rust\n-/// let x : Option<&str> = do_stuff();\n+/// let x: Option<&str> = do_stuff();\n /// x.map(log_err_msg);\n /// x.map(|msg| log_err_msg(format_msg(msg)))\n /// ```\n ///\n /// The correct use would be:\n ///\n /// ```rust\n-/// let x : Option<&str> = do_stuff();\n+/// let x: Option<&str> = do_stuff();\n /// if let Some(msg) = x {\n ///     log_err_msg(msg)\n /// }", "previous_filename": "clippy_lints/src/option_map_unit_fn.rs"}, {"sha": "c4ee0ce9238047830cce9f17dd8a34b81da5d764", "filename": "tests/ui/map_unit_fn.stderr", "status": "added", "additions": 210, "deletions": 0, "changes": 210, "blob_url": "https://github.com/rust-lang/rust/blob/8307a899e994cf87821547b40ed67dae38a81bee/tests%2Fui%2Fmap_unit_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8307a899e994cf87821547b40ed67dae38a81bee/tests%2Fui%2Fmap_unit_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_unit_fn.stderr?ref=8307a899e994cf87821547b40ed67dae38a81bee", "patch": "@@ -0,0 +1,210 @@\n+error: called `map(f)` on an Option value where `f` is a unit function\n+  --> $DIR/map_unit_fn.rs:33:5\n+   |\n+33 |     x.field.map(do_nothing);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(x_field) = x.field { do_nothing(...) }`\n+   |\n+   = note: `-D option-map-unit-fn` implied by `-D warnings`\n+\n+error: called `map(f)` on an Option value where `f` is a unit function\n+  --> $DIR/map_unit_fn.rs:35:5\n+   |\n+35 |     x.field.map(do_nothing);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(x_field) = x.field { do_nothing(...) }`\n+\n+error: called `map(f)` on an Option value where `f` is a unit function\n+  --> $DIR/map_unit_fn.rs:37:5\n+   |\n+37 |     x.field.map(diverge);\n+   |     ^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(x_field) = x.field { diverge(...) }`\n+\n+error: called `map(f)` on an Option value where `f` is a unit closure\n+  --> $DIR/map_unit_fn.rs:43:5\n+   |\n+43 |     x.field.map(|value| x.do_option_nothing(value + captured));\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { x.do_option_nothing(value + captured) }`\n+\n+error: called `map(f)` on an Option value where `f` is a unit closure\n+  --> $DIR/map_unit_fn.rs:45:5\n+   |\n+45 |     x.field.map(|value| { x.do_option_plus_one(value + captured); });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { x.do_option_plus_one(value + captured); }`\n+\n+error: called `map(f)` on an Option value where `f` is a unit closure\n+  --> $DIR/map_unit_fn.rs:48:5\n+   |\n+48 |     x.field.map(|value| do_nothing(value + captured));\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured) }`\n+\n+error: called `map(f)` on an Option value where `f` is a unit closure\n+  --> $DIR/map_unit_fn.rs:50:5\n+   |\n+50 |     x.field.map(|value| { do_nothing(value + captured) });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured) }`\n+\n+error: called `map(f)` on an Option value where `f` is a unit closure\n+  --> $DIR/map_unit_fn.rs:52:5\n+   |\n+52 |     x.field.map(|value| { do_nothing(value + captured); });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured); }`\n+\n+error: called `map(f)` on an Option value where `f` is a unit closure\n+  --> $DIR/map_unit_fn.rs:54:5\n+   |\n+54 |     x.field.map(|value| { { do_nothing(value + captured); } });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured); }`\n+\n+error: called `map(f)` on an Option value where `f` is a unit closure\n+  --> $DIR/map_unit_fn.rs:57:5\n+   |\n+57 |     x.field.map(|value| diverge(value + captured));\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { diverge(value + captured) }`\n+\n+error: called `map(f)` on an Option value where `f` is a unit closure\n+  --> $DIR/map_unit_fn.rs:59:5\n+   |\n+59 |     x.field.map(|value| { diverge(value + captured) });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { diverge(value + captured) }`\n+\n+error: called `map(f)` on an Option value where `f` is a unit closure\n+  --> $DIR/map_unit_fn.rs:61:5\n+   |\n+61 |     x.field.map(|value| { diverge(value + captured); });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { diverge(value + captured); }`\n+\n+error: called `map(f)` on an Option value where `f` is a unit closure\n+  --> $DIR/map_unit_fn.rs:63:5\n+   |\n+63 |     x.field.map(|value| { { diverge(value + captured); } });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { diverge(value + captured); }`\n+\n+error: called `map(f)` on an Option value where `f` is a unit closure\n+  --> $DIR/map_unit_fn.rs:68:5\n+   |\n+68 |     x.field.map(|value| { let y = plus_one(value + captured); });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { let y = plus_one(value + captured); }`\n+\n+error: called `map(f)` on an Option value where `f` is a unit closure\n+  --> $DIR/map_unit_fn.rs:70:5\n+   |\n+70 |     x.field.map(|value| { plus_one(value + captured); });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { plus_one(value + captured); }`\n+\n+error: called `map(f)` on an Option value where `f` is a unit closure\n+  --> $DIR/map_unit_fn.rs:72:5\n+   |\n+72 |     x.field.map(|value| { { plus_one(value + captured); } });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { plus_one(value + captured); }`\n+\n+error: called `map(f)` on an Option value where `f` is a unit closure\n+  --> $DIR/map_unit_fn.rs:75:5\n+   |\n+75 |     x.field.map(|ref value| { do_nothing(value + captured) });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(ref value) = x.field { do_nothing(value + captured) }`\n+\n+error: called `map(f)` on an Option value where `f` is a unit closure\n+  --> $DIR/map_unit_fn.rs:78:5\n+   |\n+78 |     x.field.map(|value| { do_nothing(value); do_nothing(value) });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { ... }`\n+\n+error: called `map(f)` on an Option value where `f` is a unit closure\n+  --> $DIR/map_unit_fn.rs:80:5\n+   |\n+80 |     x.field.map(|value| if value > 0 { do_nothing(value); do_nothing(value) });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { ... }`\n+\n+error: called `map(f)` on an Option value where `f` is a unit closure\n+  --> $DIR/map_unit_fn.rs:84:5\n+   |\n+84 |        x.field.map(|value| {\n+   |   _____^\n+   |  |_____|\n+   | ||\n+85 | ||         do_nothing(value);\n+86 | ||         do_nothing(value)\n+87 | ||     });\n+   | ||______^- help: try this: `if let Some(value) = x.field { ... }`\n+   | |_______|\n+   | \n+\n+error: called `map(f)` on an Option value where `f` is a unit closure\n+  --> $DIR/map_unit_fn.rs:88:5\n+   |\n+88 |     x.field.map(|value| { do_nothing(value); do_nothing(value); });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { ... }`\n+\n+error: called `map(f)` on an Option value where `f` is a unit function\n+  --> $DIR/map_unit_fn.rs:91:5\n+   |\n+91 |     Some(42).map(diverge);\n+   |     ^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(_) = Some(42) { diverge(...) }`\n+\n+error: called `map(f)` on an Option value where `f` is a unit function\n+  --> $DIR/map_unit_fn.rs:92:5\n+   |\n+92 |     \"12\".parse::<i32>().ok().map(diverge);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(_) = \"12\".parse::<i32>().ok() { diverge(...) }`\n+\n+error: called `map(f)` on an Option value where `f` is a unit function\n+  --> $DIR/map_unit_fn.rs:93:5\n+   |\n+93 |     Some(plus_one(1)).map(do_nothing);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(_) = Some(plus_one(1)) { do_nothing(...) }`\n+\n+error: called `map(f)` on an Option value where `f` is a unit function\n+  --> $DIR/map_unit_fn.rs:97:5\n+   |\n+97 |     y.map(do_nothing);\n+   |     ^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(_y) = y { do_nothing(...) }`\n+\n+error: aborting due to 25 previous errors\n+"}, {"sha": "06531e29032601ea2dd197034039afd4cf04ee4d", "filename": "tests/ui/option_map_unit_fn.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8307a899e994cf87821547b40ed67dae38a81bee/tests%2Fui%2Foption_map_unit_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8307a899e994cf87821547b40ed67dae38a81bee/tests%2Fui%2Foption_map_unit_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_map_unit_fn.rs?ref=8307a899e994cf87821547b40ed67dae38a81bee", "patch": "@@ -23,8 +23,7 @@ impl HasOption {\n     }\n }\n \n-#[cfg_attr(rustfmt, rustfmt_skip)]\n-fn main() {\n+fn option_map_unit_fn() {\n     let x = HasOption { field: Some(10) };\n \n     x.field.map(plus_one);\n@@ -96,3 +95,6 @@ fn main() {\n     let y = Some(42);\n     y.map(do_nothing);\n }\n+\n+fn main() {\n+}"}, {"sha": "3ca57a65b3f3263fc4ccfb7cc1224174b0d7a6d3", "filename": "tests/ui/option_map_unit_fn.stderr", "status": "modified", "additions": 53, "deletions": 53, "changes": 106, "blob_url": "https://github.com/rust-lang/rust/blob/8307a899e994cf87821547b40ed67dae38a81bee/tests%2Fui%2Foption_map_unit_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8307a899e994cf87821547b40ed67dae38a81bee/tests%2Fui%2Foption_map_unit_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_map_unit_fn.stderr?ref=8307a899e994cf87821547b40ed67dae38a81bee", "patch": "@@ -1,207 +1,207 @@\n error: called `map(f)` on an Option value where `f` is a unit function\n-  --> $DIR/option_map_unit_fn.rs:33:5\n+  --> $DIR/option_map_unit_fn.rs:32:5\n    |\n-33 |     x.field.map(do_nothing);\n+32 |     x.field.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(x_field) = x.field { do_nothing(...) }`\n    |\n    = note: `-D option-map-unit-fn` implied by `-D warnings`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-  --> $DIR/option_map_unit_fn.rs:35:5\n+  --> $DIR/option_map_unit_fn.rs:34:5\n    |\n-35 |     x.field.map(do_nothing);\n+34 |     x.field.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(x_field) = x.field { do_nothing(...) }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-  --> $DIR/option_map_unit_fn.rs:37:5\n+  --> $DIR/option_map_unit_fn.rs:36:5\n    |\n-37 |     x.field.map(diverge);\n+36 |     x.field.map(diverge);\n    |     ^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(x_field) = x.field { diverge(...) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:43:5\n+  --> $DIR/option_map_unit_fn.rs:42:5\n    |\n-43 |     x.field.map(|value| x.do_option_nothing(value + captured));\n+42 |     x.field.map(|value| x.do_option_nothing(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { x.do_option_nothing(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:45:5\n+  --> $DIR/option_map_unit_fn.rs:44:5\n    |\n-45 |     x.field.map(|value| { x.do_option_plus_one(value + captured); });\n+44 |     x.field.map(|value| { x.do_option_plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { x.do_option_plus_one(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:48:5\n+  --> $DIR/option_map_unit_fn.rs:47:5\n    |\n-48 |     x.field.map(|value| do_nothing(value + captured));\n+47 |     x.field.map(|value| do_nothing(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:50:5\n+  --> $DIR/option_map_unit_fn.rs:49:5\n    |\n-50 |     x.field.map(|value| { do_nothing(value + captured) });\n+49 |     x.field.map(|value| { do_nothing(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:52:5\n+  --> $DIR/option_map_unit_fn.rs:51:5\n    |\n-52 |     x.field.map(|value| { do_nothing(value + captured); });\n+51 |     x.field.map(|value| { do_nothing(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:54:5\n+  --> $DIR/option_map_unit_fn.rs:53:5\n    |\n-54 |     x.field.map(|value| { { do_nothing(value + captured); } });\n+53 |     x.field.map(|value| { { do_nothing(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:57:5\n+  --> $DIR/option_map_unit_fn.rs:56:5\n    |\n-57 |     x.field.map(|value| diverge(value + captured));\n+56 |     x.field.map(|value| diverge(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { diverge(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:59:5\n+  --> $DIR/option_map_unit_fn.rs:58:5\n    |\n-59 |     x.field.map(|value| { diverge(value + captured) });\n+58 |     x.field.map(|value| { diverge(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { diverge(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:61:5\n+  --> $DIR/option_map_unit_fn.rs:60:5\n    |\n-61 |     x.field.map(|value| { diverge(value + captured); });\n+60 |     x.field.map(|value| { diverge(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { diverge(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:63:5\n+  --> $DIR/option_map_unit_fn.rs:62:5\n    |\n-63 |     x.field.map(|value| { { diverge(value + captured); } });\n+62 |     x.field.map(|value| { { diverge(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { diverge(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:68:5\n+  --> $DIR/option_map_unit_fn.rs:67:5\n    |\n-68 |     x.field.map(|value| { let y = plus_one(value + captured); });\n+67 |     x.field.map(|value| { let y = plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { let y = plus_one(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:70:5\n+  --> $DIR/option_map_unit_fn.rs:69:5\n    |\n-70 |     x.field.map(|value| { plus_one(value + captured); });\n+69 |     x.field.map(|value| { plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { plus_one(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:72:5\n+  --> $DIR/option_map_unit_fn.rs:71:5\n    |\n-72 |     x.field.map(|value| { { plus_one(value + captured); } });\n+71 |     x.field.map(|value| { { plus_one(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { plus_one(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:75:5\n+  --> $DIR/option_map_unit_fn.rs:74:5\n    |\n-75 |     x.field.map(|ref value| { do_nothing(value + captured) });\n+74 |     x.field.map(|ref value| { do_nothing(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(ref value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:78:5\n+  --> $DIR/option_map_unit_fn.rs:77:5\n    |\n-78 |     x.field.map(|value| { do_nothing(value); do_nothing(value) });\n+77 |     x.field.map(|value| { do_nothing(value); do_nothing(value) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { ... }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:80:5\n+  --> $DIR/option_map_unit_fn.rs:79:5\n    |\n-80 |     x.field.map(|value| if value > 0 { do_nothing(value); do_nothing(value) });\n+79 |     x.field.map(|value| if value > 0 { do_nothing(value); do_nothing(value) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { ... }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:84:5\n+  --> $DIR/option_map_unit_fn.rs:83:5\n    |\n-84 |        x.field.map(|value| {\n+83 |        x.field.map(|value| {\n    |   _____^\n    |  |_____|\n    | ||\n-85 | ||         do_nothing(value);\n-86 | ||         do_nothing(value)\n-87 | ||     });\n+84 | ||         do_nothing(value);\n+85 | ||         do_nothing(value)\n+86 | ||     });\n    | ||______^- help: try this: `if let Some(value) = x.field { ... }`\n    | |_______|\n    | \n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:88:5\n+  --> $DIR/option_map_unit_fn.rs:87:5\n    |\n-88 |     x.field.map(|value| { do_nothing(value); do_nothing(value); });\n+87 |     x.field.map(|value| { do_nothing(value); do_nothing(value); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { ... }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-  --> $DIR/option_map_unit_fn.rs:91:5\n+  --> $DIR/option_map_unit_fn.rs:90:5\n    |\n-91 |     Some(42).map(diverge);\n+90 |     Some(42).map(diverge);\n    |     ^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(_) = Some(42) { diverge(...) }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-  --> $DIR/option_map_unit_fn.rs:92:5\n+  --> $DIR/option_map_unit_fn.rs:91:5\n    |\n-92 |     \"12\".parse::<i32>().ok().map(diverge);\n+91 |     \"12\".parse::<i32>().ok().map(diverge);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(_) = \"12\".parse::<i32>().ok() { diverge(...) }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-  --> $DIR/option_map_unit_fn.rs:93:5\n+  --> $DIR/option_map_unit_fn.rs:92:5\n    |\n-93 |     Some(plus_one(1)).map(do_nothing);\n+92 |     Some(plus_one(1)).map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(_) = Some(plus_one(1)) { do_nothing(...) }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-  --> $DIR/option_map_unit_fn.rs:97:5\n+  --> $DIR/option_map_unit_fn.rs:96:5\n    |\n-97 |     y.map(do_nothing);\n+96 |     y.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(_y) = y { do_nothing(...) }`"}]}