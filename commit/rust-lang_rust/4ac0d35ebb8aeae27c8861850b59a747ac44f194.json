{"sha": "4ac0d35ebb8aeae27c8861850b59a747ac44f194", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhYzBkMzVlYmI4YWVhZTI3Yzg4NjE4NTBiNTlhNzQ3YWM0NGYxOTQ=", "commit": {"author": {"name": "Ruben Schmidmeister", "email": "ruben.schmidmeister@icloud.com", "date": "2019-05-12T21:03:48Z"}, "committer": {"name": "Ruben Schmidmeister", "email": "ruben.schmidmeister@icloud.com", "date": "2019-05-12T21:03:48Z"}, "message": "Only run test on nightly", "tree": {"sha": "393ff044e1ee73cb23a44d105dfae0bc785bd67d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/393ff044e1ee73cb23a44d105dfae0bc785bd67d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ac0d35ebb8aeae27c8861850b59a747ac44f194", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEU0FXzFYkrmfOhhqxKTh7Wnqvhj8FAlzYij8ACgkQKTh7Wnqv\nhj9m0wf/ee0NgyA5XqmyLfaV7P4gsDktwUIJSQV9Fo3FRUBLBJscqHBljzKsFBMD\nqmNWNye1IgsgV7rC89uqYceC6GucP5g1W7RNCiROm9bIvEbTi+xg08H5n//wlg/e\nVhWOs0MWDmLvKqQMvZb4CTqYW7C9/pGHSfKJgR0h5N4pcXwcZDoinKt5XSa4MaLU\nsuagu5XbYDkPFttdAGkRkHejunsO5WibqR0GCnv1fkJgAcKU6jgCXFwkSs7xbHX/\ntlV39cSmT2w6f6raTxgmPuhpkQe6WZpq1+8mgc1MWgSnT1gw3AuNJlp1RpiAV4nu\nMJu/jCPYd7MQiqDzck4njKGmC4n++Q==\n=D6s2\n-----END PGP SIGNATURE-----", "payload": "tree 393ff044e1ee73cb23a44d105dfae0bc785bd67d\nparent 47a0f78b3b7087550b82564f3bfe0b3701683c66\nauthor Ruben Schmidmeister <ruben.schmidmeister@icloud.com> 1557695028 +0200\ncommitter Ruben Schmidmeister <ruben.schmidmeister@icloud.com> 1557695028 +0200\n\nOnly run test on nightly\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ac0d35ebb8aeae27c8861850b59a747ac44f194", "html_url": "https://github.com/rust-lang/rust/commit/4ac0d35ebb8aeae27c8861850b59a747ac44f194", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ac0d35ebb8aeae27c8861850b59a747ac44f194/comments", "author": {"login": "bash", "id": 4602612, "node_id": "MDQ6VXNlcjQ2MDI2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/4602612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bash", "html_url": "https://github.com/bash", "followers_url": "https://api.github.com/users/bash/followers", "following_url": "https://api.github.com/users/bash/following{/other_user}", "gists_url": "https://api.github.com/users/bash/gists{/gist_id}", "starred_url": "https://api.github.com/users/bash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bash/subscriptions", "organizations_url": "https://api.github.com/users/bash/orgs", "repos_url": "https://api.github.com/users/bash/repos", "events_url": "https://api.github.com/users/bash/events{/privacy}", "received_events_url": "https://api.github.com/users/bash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bash", "id": 4602612, "node_id": "MDQ6VXNlcjQ2MDI2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/4602612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bash", "html_url": "https://github.com/bash", "followers_url": "https://api.github.com/users/bash/followers", "following_url": "https://api.github.com/users/bash/following{/other_user}", "gists_url": "https://api.github.com/users/bash/gists{/gist_id}", "starred_url": "https://api.github.com/users/bash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bash/subscriptions", "organizations_url": "https://api.github.com/users/bash/orgs", "repos_url": "https://api.github.com/users/bash/repos", "events_url": "https://api.github.com/users/bash/events{/privacy}", "received_events_url": "https://api.github.com/users/bash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47a0f78b3b7087550b82564f3bfe0b3701683c66", "url": "https://api.github.com/repos/rust-lang/rust/commits/47a0f78b3b7087550b82564f3bfe0b3701683c66", "html_url": "https://github.com/rust-lang/rust/commit/47a0f78b3b7087550b82564f3bfe0b3701683c66"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "20c4bce5d8162b5965de0e18d66c7822da176fd9", "filename": "src/test/mod.rs", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/4ac0d35ebb8aeae27c8861850b59a747ac44f194/src%2Ftest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ac0d35ebb8aeae27c8861850b59a747ac44f194/src%2Ftest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmod.rs?ref=4ac0d35ebb8aeae27c8861850b59a747ac44f194", "patch": "@@ -259,9 +259,9 @@ fn assert_output(source: &Path, expected_filename: &Path) {\n #[test]\n fn idempotence_tests() {\n     run_test_with(&TestSetting::default(), || {\n-        match option_env!(\"CFG_RELEASE_CHANNEL\") {\n-            None | Some(\"nightly\") => {}\n-            _ => return, // these tests require nightly\n+        // these tests require nightly\n+        if !is_nightly() {\n+            return;\n         }\n         // Get all files in the tests/target directory.\n         let files = get_test_files(Path::new(\"tests/target\"), true);\n@@ -277,9 +277,9 @@ fn idempotence_tests() {\n // no warnings are emitted.\n #[test]\n fn self_tests() {\n-    match option_env!(\"CFG_RELEASE_CHANNEL\") {\n-        None | Some(\"nightly\") => {}\n-        _ => return, // Issue-3443: these tests require nightly\n+    // Issue-3443: these tests require nightly\n+    if !is_nightly() {\n+        return;\n     }\n     let mut files = get_test_files(Path::new(\"tests\"), false);\n     let bin_directories = vec![\"cargo-fmt\", \"git-rustfmt\", \"bin\", \"format-diff\"];\n@@ -313,6 +313,11 @@ fn self_tests() {\n     );\n }\n \n+fn is_nightly() -> bool {\n+    let release_channel = option_env!(\"CFG_RELEASE_CHANNEL\");\n+    release_channel.is_none() || release_channel == Some(\"nightly\")\n+}\n+\n #[test]\n fn stdin_formatting_smoke_test() {\n     let input = Input::Text(\"fn main () {}\".to_owned());\n@@ -426,6 +431,16 @@ fn check_files(files: Vec<PathBuf>, opt_config: &Option<PathBuf>) -> (Vec<Format\n     let mut reports = vec![];\n \n     for file_name in files {\n+        let sig_comments = read_significant_comments(&file_name);\n+        if sig_comments.contains_key(\"unstable\") && !is_nightly() {\n+            debug!(\n+                \"Skipping '{}' because it requires unstable \\\n+                 features which are only available on nightly...\",\n+                file_name.display()\n+            );\n+            continue;\n+        }\n+\n         debug!(\"Testing '{}'...\", file_name.display());\n \n         match idempotent_check(&file_name, &opt_config) {"}, {"sha": "fd4bf796c9539e42a40212afe4b7a36cc36c78a5", "filename": "tests/source/normalize_multiline_doc_attribute.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ac0d35ebb8aeae27c8861850b59a747ac44f194/tests%2Fsource%2Fnormalize_multiline_doc_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ac0d35ebb8aeae27c8861850b59a747ac44f194/tests%2Fsource%2Fnormalize_multiline_doc_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fnormalize_multiline_doc_attribute.rs?ref=4ac0d35ebb8aeae27c8861850b59a747ac44f194", "patch": "@@ -1,3 +1,5 @@\n+// rustfmt-unstable: true\n+\n #[doc = \"This comment\n is split\n on multiple lines\"]"}, {"sha": "8227317512ab4272b2f6c06d8e18c1e1f9d29501", "filename": "tests/target/normalize_multiline_doc_attribute.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ac0d35ebb8aeae27c8861850b59a747ac44f194/tests%2Ftarget%2Fnormalize_multiline_doc_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ac0d35ebb8aeae27c8861850b59a747ac44f194/tests%2Ftarget%2Fnormalize_multiline_doc_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fnormalize_multiline_doc_attribute.rs?ref=4ac0d35ebb8aeae27c8861850b59a747ac44f194", "patch": "@@ -1,3 +1,5 @@\n+// rustfmt-unstable: true\n+\n ///This comment\n ///is split\n ///on multiple lines"}]}