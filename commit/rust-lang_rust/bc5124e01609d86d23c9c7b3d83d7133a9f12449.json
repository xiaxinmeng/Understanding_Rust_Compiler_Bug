{"sha": "bc5124e01609d86d23c9c7b3d83d7133a9f12449", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjNTEyNGUwMTYwOWQ4NmQyM2M5YzdiM2Q4M2Q3MTMzYTlmMTI0NDk=", "commit": {"author": {"name": "Kevin Stenerson", "email": "kstenerson@developers.wyyerd.com", "date": "2018-11-17T18:53:11Z"}, "committer": {"name": "Kevin Stenerson", "email": "kstenerson@developers.wyyerd.com", "date": "2018-11-17T18:53:11Z"}, "message": "Always enforce exactly one space between `macro!` and braces (`{}`)", "tree": {"sha": "3faa6b8fb08a82f70886924b61ec3c10ae265381", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3faa6b8fb08a82f70886924b61ec3c10ae265381"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc5124e01609d86d23c9c7b3d83d7133a9f12449", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc5124e01609d86d23c9c7b3d83d7133a9f12449", "html_url": "https://github.com/rust-lang/rust/commit/bc5124e01609d86d23c9c7b3d83d7133a9f12449", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc5124e01609d86d23c9c7b3d83d7133a9f12449/comments", "author": {"login": "kestred", "id": 2653498, "node_id": "MDQ6VXNlcjI2NTM0OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/2653498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kestred", "html_url": "https://github.com/kestred", "followers_url": "https://api.github.com/users/kestred/followers", "following_url": "https://api.github.com/users/kestred/following{/other_user}", "gists_url": "https://api.github.com/users/kestred/gists{/gist_id}", "starred_url": "https://api.github.com/users/kestred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kestred/subscriptions", "organizations_url": "https://api.github.com/users/kestred/orgs", "repos_url": "https://api.github.com/users/kestred/repos", "events_url": "https://api.github.com/users/kestred/events{/privacy}", "received_events_url": "https://api.github.com/users/kestred/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kestred", "id": 2653498, "node_id": "MDQ6VXNlcjI2NTM0OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/2653498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kestred", "html_url": "https://github.com/kestred", "followers_url": "https://api.github.com/users/kestred/followers", "following_url": "https://api.github.com/users/kestred/following{/other_user}", "gists_url": "https://api.github.com/users/kestred/gists{/gist_id}", "starred_url": "https://api.github.com/users/kestred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kestred/subscriptions", "organizations_url": "https://api.github.com/users/kestred/orgs", "repos_url": "https://api.github.com/users/kestred/repos", "events_url": "https://api.github.com/users/kestred/events{/privacy}", "received_events_url": "https://api.github.com/users/kestred/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a3bc79c686e246cb5088ed16bdc648d1564ffb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a3bc79c686e246cb5088ed16bdc648d1564ffb2", "html_url": "https://github.com/rust-lang/rust/commit/1a3bc79c686e246cb5088ed16bdc648d1564ffb2"}], "stats": {"total": 61, "additions": 26, "deletions": 35}, "files": [{"sha": "53afccb53ecbaef0d6bf92c5401534164fe150ba", "filename": "src/macros.rs", "status": "modified", "additions": 10, "deletions": 15, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/bc5124e01609d86d23c9c7b3d83d7133a9f12449/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc5124e01609d86d23c9c7b3d83d7133a9f12449/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=bc5124e01609d86d23c9c7b3d83d7133a9f12449", "patch": "@@ -256,19 +256,7 @@ pub fn rewrite_macro_inner(\n             }\n             DelimToken::Paren => Some(format!(\"{}()\", macro_name)),\n             DelimToken::Bracket => Some(format!(\"{}[]\", macro_name)),\n-            DelimToken::Brace => {\n-                // Preserve at most one space before the braces.\n-                let char_after_bang = context\n-                    .snippet(mac.span)\n-                    .split('!')\n-                    .nth(1)\n-                    .and_then(|x| x.chars().next());\n-                if let Some(' ') = char_after_bang {\n-                    Some(format!(\"{} {{}}\", macro_name))\n-                } else {\n-                    Some(format!(\"{}{{}}\", macro_name))\n-                }\n-            }\n+            DelimToken::Brace => Some(format!(\"{} {{}}\", macro_name)),\n             _ => unreachable!(),\n         };\n     }\n@@ -428,8 +416,15 @@ pub fn rewrite_macro_inner(\n             }\n         }\n         DelimToken::Brace => {\n-            // Skip macro invocations with braces, for now.\n-            trim_left_preserve_layout(context.snippet(mac.span), shape.indent, &context.config)\n+            // For macro invocations with braces, always put a space between\n+            // the `macro_name!` and `{ /* macro_body */ }` but skip modifying\n+            // anything in between the braces (for now).\n+            let snippet = context.snippet(mac.span);\n+            let macro_raw = snippet.split_at(snippet.find('!')? + 1).1.trim_start();\n+            match trim_left_preserve_layout(macro_raw, &shape.indent, &context.config) {\n+                Some(macro_body) => Some(format!(\"{} {}\", macro_name, macro_body)),\n+                None => Some(format!(\"{} {}\", macro_name, macro_raw)),\n+            }\n         }\n         _ => unreachable!(),\n     }"}, {"sha": "07934255bacd4c08bec3792b16a83260caa0644e", "filename": "tests/source/macros.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc5124e01609d86d23c9c7b3d83d7133a9f12449/tests%2Fsource%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc5124e01609d86d23c9c7b3d83d7133a9f12449/tests%2Fsource%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmacros.rs?ref=bc5124e01609d86d23c9c7b3d83d7133a9f12449", "patch": "@@ -4,7 +4,7 @@ itemmacro!(this, is.now() .formatted(yay));\n \n itemmacro!(really, long.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbb() .is.formatted());\n \n-itemmacro!{this, is.bracket().formatted()}\n+itemmacro!{this, is.brace().formatted()}\n \n peg_file!   modname  (\"mygrammarfile.rustpeg\");\n \n@@ -106,8 +106,6 @@ fn main() {\n \n impl X {\n     empty_invoc!{}\n-\n-    // Don't format empty either!\n     empty_invoc! {}\n }\n "}, {"sha": "274614f83e2af426318c7878f7c5709db303d2d9", "filename": "tests/target/issue-2917/packed_simd.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc5124e01609d86d23c9c7b3d83d7133a9f12449/tests%2Ftarget%2Fissue-2917%2Fpacked_simd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc5124e01609d86d23c9c7b3d83d7133a9f12449/tests%2Ftarget%2Fissue-2917%2Fpacked_simd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-2917%2Fpacked_simd.rs?ref=bc5124e01609d86d23c9c7b3d83d7133a9f12449", "patch": "@@ -31,7 +31,7 @@ macro_rules! impl_from_vector {\n         }\n         */\n \n-        test_if!{\n+        test_if! {\n             $test_tt:\n             interpolate_idents! {\n                 mod [$id _from_ $source] {"}, {"sha": "3625e0a5f5c1b76ec72637264e3ec3932a560c5b", "filename": "tests/target/lazy_static.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc5124e01609d86d23c9c7b3d83d7133a9f12449/tests%2Ftarget%2Flazy_static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc5124e01609d86d23c9c7b3d83d7133a9f12449/tests%2Ftarget%2Flazy_static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Flazy_static.rs?ref=bc5124e01609d86d23c9c7b3d83d7133a9f12449", "patch": "@@ -10,7 +10,7 @@ lazy_static! {\n // We need to be able to format `lazy_static!` without known syntax.\n lazy_static!(xxx, yyyy, zzzzz);\n \n-lazy_static!{}\n+lazy_static! {}\n \n // #2354\n lazy_static! {"}, {"sha": "061d1746422bed8247520b10d41d47b0aa617209", "filename": "tests/target/macros.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bc5124e01609d86d23c9c7b3d83d7133a9f12449/tests%2Ftarget%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc5124e01609d86d23c9c7b3d83d7133a9f12449/tests%2Ftarget%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacros.rs?ref=bc5124e01609d86d23c9c7b3d83d7133a9f12449", "patch": "@@ -9,7 +9,7 @@ itemmacro!(\n         .formatted()\n );\n \n-itemmacro!{this, is.bracket().formatted()}\n+itemmacro! {this, is.brace().formatted()}\n \n peg_file! modname(\"mygrammarfile.rustpeg\");\n \n@@ -94,7 +94,7 @@ fn main() {\n \n     foo(makro!(1, 3));\n \n-    hamkaas!{ () };\n+    hamkaas! { () };\n \n     macrowithbraces! {dont,    format, me}\n \n@@ -104,11 +104,11 @@ fn main() {\n \n     some_macro![];\n \n-    some_macro!{\n+    some_macro! {\n         // comment\n     };\n \n-    some_macro!{\n+    some_macro! {\n         // comment\n     };\n \n@@ -131,9 +131,7 @@ fn main() {\n }\n \n impl X {\n-    empty_invoc!{}\n-\n-    // Don't format empty either!\n+    empty_invoc! {}\n     empty_invoc! {}\n }\n \n@@ -952,7 +950,7 @@ macro_rules! m {\n     };\n }\n fn foo() {\n-    f!{r#\"\n+    f! {r#\"\n             test\n        \"#};\n }"}, {"sha": "31c09550aaf345e0256c027a56c0503c9a249147", "filename": "tests/target/match.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bc5124e01609d86d23c9c7b3d83d7133a9f12449/tests%2Ftarget%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc5124e01609d86d23c9c7b3d83d7133a9f12449/tests%2Ftarget%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmatch.rs?ref=bc5124e01609d86d23c9c7b3d83d7133a9f12449", "patch": "@@ -204,19 +204,19 @@ fn issue355() {\n             vec![3; 4]\n         }\n         // Funky bracketing styles\n-        t => println!{\"a\", b},\n+        t => println! {\"a\", b},\n         u => vec![1, 2],\n         v => vec![3; 4],\n         w => println![\"a\", b],\n         x => vec![1, 2],\n         y => vec![3; 4],\n         // Brackets with comments\n-        tc => println!{\"a\", b}, // comment\n-        uc => vec![1, 2],       // comment\n-        vc => vec![3; 4],       // comment\n-        wc => println![\"a\", b], // comment\n-        xc => vec![1, 2],       // comment\n-        yc => vec![3; 4],       // comment\n+        tc => println! {\"a\", b}, // comment\n+        uc => vec![1, 2],        // comment\n+        vc => vec![3; 4],        // comment\n+        wc => println![\"a\", b],  // comment\n+        xc => vec![1, 2],        // comment\n+        yc => vec![3; 4],        // comment\n         yd => looooooooooooooooooooooooooooooooooooooooooooooooooooooooong_func(\n             aaaaaaaaaa, bbbbbbbbbb, cccccccccc, dddddddddd,\n         ),"}]}