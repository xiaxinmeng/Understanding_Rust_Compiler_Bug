{"sha": "3d104cfb410211cb313a50c6cdb8b652f62ce9f4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkMTA0Y2ZiNDEwMjExY2IzMTNhNTBjNmNkYjhiNjUyZjYyY2U5ZjQ=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-02-29T18:53:28Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-02-29T18:53:28Z"}, "message": "Merge pull request #1912 from tychosci/json-newline-after-outer-rparen\n\nlibstd: Skip trailing whitespaces after outer rparen", "tree": {"sha": "fb108e38d202322d7ec4353ea48634ca10585691", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb108e38d202322d7ec4353ea48634ca10585691"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d104cfb410211cb313a50c6cdb8b652f62ce9f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d104cfb410211cb313a50c6cdb8b652f62ce9f4", "html_url": "https://github.com/rust-lang/rust/commit/3d104cfb410211cb313a50c6cdb8b652f62ce9f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d104cfb410211cb313a50c6cdb8b652f62ce9f4/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4be92670a4ad505ba669549317e9929335d8f18f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4be92670a4ad505ba669549317e9929335d8f18f", "html_url": "https://github.com/rust-lang/rust/commit/4be92670a4ad505ba669549317e9929335d8f18f"}, {"sha": "ecf87c3180898b7792e93fccccdf6a21f2d00508", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecf87c3180898b7792e93fccccdf6a21f2d00508", "html_url": "https://github.com/rust-lang/rust/commit/ecf87c3180898b7792e93fccccdf6a21f2d00508"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "d069c36e866c179fe2e1694804ccc1db457d976b", "filename": "src/libstd/json.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3d104cfb410211cb313a50c6cdb8b652f62ce9f4/src%2Flibstd%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d104cfb410211cb313a50c6cdb8b652f62ce9f4/src%2Flibstd%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fjson.rs?ref=3d104cfb410211cb313a50c6cdb8b652f62ce9f4", "patch": "@@ -154,6 +154,8 @@ impl parser for parser {\n     fn parse() -> result::t<json, error> {\n         alt self.parse_value() {\n           ok(value) {\n+            // Skip trailing whitespaces.\n+            self.parse_whitespace();\n             // Make sure there is no trailing characters.\n             if self.eof() {\n                 ok(value)\n@@ -627,6 +629,9 @@ mod tests {\n         assert from_str(\"null\") == ok(null);\n         assert from_str(\"true\") == ok(boolean(true));\n         assert from_str(\"false\") == ok(boolean(false));\n+        assert from_str(\" null \") == ok(null);\n+        assert from_str(\" true \") == ok(boolean(true));\n+        assert from_str(\" false \") == ok(boolean(false));\n     }\n \n     #[test]\n@@ -654,6 +659,7 @@ mod tests {\n         assert from_str(\"0.4e5\") == ok(num(0.4e5f));\n         assert from_str(\"0.4e+15\") == ok(num(0.4e15f));\n         assert from_str(\"0.4e-01\") == ok(num(0.4e-01f));\n+        assert from_str(\" 3 \") == ok(num(3f));\n     }\n \n     #[test]\n@@ -670,6 +676,7 @@ mod tests {\n         assert from_str(\"\\\"\\\\n\\\"\") == ok(string(\"\\n\"));\n         assert from_str(\"\\\"\\\\r\\\"\") == ok(string(\"\\r\"));\n         assert from_str(\"\\\"\\\\t\\\"\") == ok(string(\"\\t\"));\n+        assert from_str(\" \\\"foo\\\" \") == ok(string(\"foo\"));\n     }\n \n     #[test]\n@@ -691,6 +698,7 @@ mod tests {\n         assert from_str(\"[ false ]\") == ok(list([boolean(false)]));\n         assert from_str(\"[null]\") == ok(list([null]));\n         assert from_str(\"[3, 1]\") == ok(list([num(3f), num(1f)]));\n+        assert from_str(\"\\n[3, 2]\\n\") == ok(list([num(3f), num(2f)]));\n         assert from_str(\"[2, [4, 1]]\") ==\n                ok(list([num(2f), list([num(4f), num(1f)])]));\n     }\n@@ -727,6 +735,8 @@ mod tests {\n \n         assert eq(result::get(from_str(\"{ \\\"a\\\": null, \\\"b\\\" : true }\")),\n                   mk_dict([(\"a\", null), (\"b\", boolean(true))]));\n+        assert eq(result::get(from_str(\"\\n{ \\\"a\\\": null, \\\"b\\\" : true }\\n\")),\n+                  mk_dict([(\"a\", null), (\"b\", boolean(true))]));\n         assert eq(result::get(from_str(\"{\\\"a\\\" : 1.0 ,\\\"b\\\": [ true ]}\")),\n                   mk_dict([\n                       (\"a\", num(1.0)),"}]}