{"sha": "8ca753108c85fc5a99c256be5e31793c538b794e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjYTc1MzEwOGM4NWZjNWE5OWMyNTZiZTVlMzE3OTNjNTM4Yjc5NGU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-11-06T16:02:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-06T16:02:07Z"}, "message": "Rollup merge of #78514 - jyn514:setup-number, r=Mark-Simulacrum\n\nAllow using 1/2/3/4 for `x.py setup` options\n\nThis undocumented feature allows you to typo 'a' as '1'.\n\nr? ```@Mark-Simulacrum```\ncc ```@Lokathor```", "tree": {"sha": "3d0377cbf2216a287d9cf7c8946c1007aaf5b3d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d0377cbf2216a287d9cf7c8946c1007aaf5b3d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ca753108c85fc5a99c256be5e31793c538b794e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfpXOACRBK7hj4Ov3rIwAAdHIIAJ5EkzRUS+WSJmfdfG0DyKYJ\nUW6dBicU2suu/aeoM3gxJaBDkAo3Mr/WYtTLPZxpJ5HkF/kbPUBWe03BkhRahnmR\njlCReAovyhtLnQlIN/vGuUEWWDmN4TLVS8yqXnMGtgC9v+AQj7d8osHwqYKeOblk\nwgUCW6BtfksM0cUkRp8yOAbeCCOODg0hhNFly2i7BPNYwg6sfbakZTwxYh4bF8Ff\nmHFrJbA3hocZG7w3U4IpEQOfYblrVqvz/avokdDvcn/o56gPPFsSLqLbWPko5+Js\nQXgpOmoKN7D98CkqD+jirFeDqnWHwt/6JmIs1e/oe/sOFBFv1jfIN+na6nFrvJ0=\n=IzFg\n-----END PGP SIGNATURE-----\n", "payload": "tree 3d0377cbf2216a287d9cf7c8946c1007aaf5b3d5\nparent 91153d5009d110e70768e3665212a880658a79ec\nparent 1e737249afa1219205f6cc182ce975ffe94f06f9\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1604678527 +0900\ncommitter GitHub <noreply@github.com> 1604678527 +0900\n\nRollup merge of #78514 - jyn514:setup-number, r=Mark-Simulacrum\n\nAllow using 1/2/3/4 for `x.py setup` options\n\nThis undocumented feature allows you to typo 'a' as '1'.\n\nr? ```@Mark-Simulacrum```\ncc ```@Lokathor```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ca753108c85fc5a99c256be5e31793c538b794e", "html_url": "https://github.com/rust-lang/rust/commit/8ca753108c85fc5a99c256be5e31793c538b794e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ca753108c85fc5a99c256be5e31793c538b794e/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91153d5009d110e70768e3665212a880658a79ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/91153d5009d110e70768e3665212a880658a79ec", "html_url": "https://github.com/rust-lang/rust/commit/91153d5009d110e70768e3665212a880658a79ec"}, {"sha": "1e737249afa1219205f6cc182ce975ffe94f06f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e737249afa1219205f6cc182ce975ffe94f06f9", "html_url": "https://github.com/rust-lang/rust/commit/1e737249afa1219205f6cc182ce975ffe94f06f9"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "55d2445fc492c2c2504f3ae3ddf2e88dfcb0ec05", "filename": "src/bootstrap/setup.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8ca753108c85fc5a99c256be5e31793c538b794e/src%2Fbootstrap%2Fsetup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ca753108c85fc5a99c256be5e31793c538b794e/src%2Fbootstrap%2Fsetup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsetup.rs?ref=8ca753108c85fc5a99c256be5e31793c538b794e", "patch": "@@ -127,28 +127,31 @@ pub fn setup(src_path: &Path, profile: Profile) {\n \n // Used to get the path for `Subcommand::Setup`\n pub fn interactive_path() -> io::Result<Profile> {\n-    fn abbrev_all() -> impl Iterator<Item = (String, Profile)> {\n-        ('a'..).map(|c| c.to_string()).zip(Profile::all())\n+    fn abbrev_all() -> impl Iterator<Item = ((String, String), Profile)> {\n+        ('a'..)\n+            .zip(1..)\n+            .map(|(letter, number)| (letter.to_string(), number.to_string()))\n+            .zip(Profile::all())\n     }\n \n     fn parse_with_abbrev(input: &str) -> Result<Profile, String> {\n         let input = input.trim().to_lowercase();\n-        for (letter, profile) in abbrev_all() {\n-            if input == letter {\n+        for ((letter, number), profile) in abbrev_all() {\n+            if input == letter || input == number {\n                 return Ok(profile);\n             }\n         }\n         input.parse()\n     }\n \n     println!(\"Welcome to the Rust project! What do you want to do with x.py?\");\n-    for (letter, profile) in abbrev_all() {\n+    for ((letter, _), profile) in abbrev_all() {\n         println!(\"{}) {}: {}\", letter, profile, profile.purpose());\n     }\n     let template = loop {\n         print!(\n             \"Please choose one ({}): \",\n-            abbrev_all().map(|(l, _)| l).collect::<Vec<_>>().join(\"/\")\n+            abbrev_all().map(|((l, _), _)| l).collect::<Vec<_>>().join(\"/\")\n         );\n         io::stdout().flush()?;\n         let mut input = String::new();"}]}