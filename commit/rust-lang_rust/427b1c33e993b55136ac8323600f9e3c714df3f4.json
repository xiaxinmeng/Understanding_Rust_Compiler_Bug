{"sha": "427b1c33e993b55136ac8323600f9e3c714df3f4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyN2IxYzMzZTk5M2I1NTEzNmFjODMyMzYwMGY5ZTNjNzE0ZGYzZjQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-15T03:09:47Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-23T13:47:20Z"}, "message": "clarify bind-by-move-neither-can-livee..", "tree": {"sha": "c22f10162a9129fdcef84a33e75774b9f4e4eb31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c22f10162a9129fdcef84a33e75774b9f4e4eb31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/427b1c33e993b55136ac8323600f9e3c714df3f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/427b1c33e993b55136ac8323600f9e3c714df3f4", "html_url": "https://github.com/rust-lang/rust/commit/427b1c33e993b55136ac8323600f9e3c714df3f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/427b1c33e993b55136ac8323600f9e3c714df3f4/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fa8f4a57b8fb1f2be4b49bb5f87629389252020", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fa8f4a57b8fb1f2be4b49bb5f87629389252020", "html_url": "https://github.com/rust-lang/rust/commit/6fa8f4a57b8fb1f2be4b49bb5f87629389252020"}], "stats": {"total": 76, "additions": 72, "deletions": 4}, "files": [{"sha": "e86db3ab96f9f390bc48a9cceb3add6cdea4812a", "filename": "src/test/ui/pattern/bindings-after-at/bind-by-move-neither-can-live-while-the-other-survives-1.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/427b1c33e993b55136ac8323600f9e3c714df3f4/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fbind-by-move-neither-can-live-while-the-other-survives-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/427b1c33e993b55136ac8323600f9e3c714df3f4/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fbind-by-move-neither-can-live-while-the-other-survives-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fbind-by-move-neither-can-live-while-the-other-survives-1.rs?ref=427b1c33e993b55136ac8323600f9e3c714df3f4", "patch": "@@ -1,3 +1,7 @@\n+// This test is taken directly from #16053.\n+// It checks that you cannot use an AND-pattern (`binding @ pat`)\n+// where one side is by-ref and the other is by-move.\n+\n #![feature(bindings_after_at)]\n //~^ WARN the feature `bindings_after_at` is incomplete and may cause the compiler to crash\n \n@@ -9,4 +13,24 @@ fn main() {\n         Some(ref _y @ _z) => { }, //~ ERROR cannot bind by-move and by-ref in the same pattern\n         None => panic!()\n     }\n+\n+    let x = Some(X { x: () });\n+    match x {\n+        Some(_z @ ref _y) => { }, //~ ERROR cannot bind by-move with sub-bindings\n+        //~^ ERROR borrow of moved value\n+        None => panic!()\n+    }\n+\n+    let mut x = Some(X { x: () });\n+    match x {\n+        Some(ref mut _y @ _z) => { }, //~ ERROR cannot bind by-move and by-ref in the same pattern\n+        None => panic!()\n+    }\n+\n+    let mut x = Some(X { x: () });\n+    match x {\n+        Some(_z @ ref mut _y) => { }, //~ ERROR cannot bind by-move with sub-bindings\n+        //~^ ERROR borrow of moved value\n+        None => panic!()\n+    }\n }"}, {"sha": "658b77ed1abde01898aff79cb180dfe7ce3a2572", "filename": "src/test/ui/pattern/bindings-after-at/bind-by-move-neither-can-live-while-the-other-survives-1.stderr", "status": "modified", "additions": 48, "deletions": 4, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/427b1c33e993b55136ac8323600f9e3c714df3f4/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fbind-by-move-neither-can-live-while-the-other-survives-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/427b1c33e993b55136ac8323600f9e3c714df3f4/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fbind-by-move-neither-can-live-while-the-other-survives-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fbind-by-move-neither-can-live-while-the-other-survives-1.stderr?ref=427b1c33e993b55136ac8323600f9e3c714df3f4", "patch": "@@ -1,20 +1,64 @@\n warning: the feature `bindings_after_at` is incomplete and may cause the compiler to crash\n-  --> $DIR/bind-by-move-neither-can-live-while-the-other-survives-1.rs:1:12\n+  --> $DIR/bind-by-move-neither-can-live-while-the-other-survives-1.rs:5:12\n    |\n LL | #![feature(bindings_after_at)]\n    |            ^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n error[E0009]: cannot bind by-move and by-ref in the same pattern\n-  --> $DIR/bind-by-move-neither-can-live-while-the-other-survives-1.rs:9:23\n+  --> $DIR/bind-by-move-neither-can-live-while-the-other-survives-1.rs:13:23\n    |\n LL |         Some(ref _y @ _z) => { },\n    |              ---------^^\n    |              |        |\n    |              |        by-move pattern here\n    |              by-ref pattern here\n \n-error: aborting due to previous error\n+error[E0007]: cannot bind by-move with sub-bindings\n+  --> $DIR/bind-by-move-neither-can-live-while-the-other-survives-1.rs:19:14\n+   |\n+LL |         Some(_z @ ref _y) => { },\n+   |              ^^^^^^^^^^^ binds an already bound by-move value by moving it\n+\n+error[E0009]: cannot bind by-move and by-ref in the same pattern\n+  --> $DIR/bind-by-move-neither-can-live-while-the-other-survives-1.rs:26:27\n+   |\n+LL |         Some(ref mut _y @ _z) => { },\n+   |              -------------^^\n+   |              |            |\n+   |              |            by-move pattern here\n+   |              by-ref pattern here\n+\n+error[E0007]: cannot bind by-move with sub-bindings\n+  --> $DIR/bind-by-move-neither-can-live-while-the-other-survives-1.rs:32:14\n+   |\n+LL |         Some(_z @ ref mut _y) => { },\n+   |              ^^^^^^^^^^^^^^^ binds an already bound by-move value by moving it\n+\n+error[E0382]: borrow of moved value\n+  --> $DIR/bind-by-move-neither-can-live-while-the-other-survives-1.rs:19:19\n+   |\n+LL |         Some(_z @ ref _y) => { },\n+   |              -----^^^^^^\n+   |              |    |\n+   |              |    value borrowed here after move\n+   |              value moved here\n+   |\n+   = note: move occurs because value has type `X`, which does not implement the `Copy` trait\n+\n+error[E0382]: borrow of moved value\n+  --> $DIR/bind-by-move-neither-can-live-while-the-other-survives-1.rs:32:19\n+   |\n+LL |         Some(_z @ ref mut _y) => { },\n+   |              -----^^^^^^^^^^\n+   |              |    |\n+   |              |    value borrowed here after move\n+   |              value moved here\n+   |\n+   = note: move occurs because value has type `X`, which does not implement the `Copy` trait\n+\n+error: aborting due to 6 previous errors\n \n-For more information about this error, try `rustc --explain E0009`.\n+Some errors have detailed explanations: E0007, E0009, E0382.\n+For more information about an error, try `rustc --explain E0007`."}]}