{"sha": "cc16d0486933e02237190366de2eb43df2215c11", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjMTZkMDQ4NjkzM2UwMjIzNzE5MDM2NmRlMmViNDNkZjIyMTVjMTE=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-18T15:29:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-18T15:29:37Z"}, "message": "Rollup merge of #62615 - wesleywiser:pgo_error, r=nagisa\n\n Only error about MSVC + PGO + unwind if we're generating code\n\nIn #61853, we changed the error when using PGO & MSVC toolchain & panic=unwind into a warning. However, in the compiler team meeting on 2019-07-11, we found that not everybody was in favor of that change because of the possibility of broken binaries.\n\nThis PR reverts that change so this is again an error. However, to work around an [issue the Firefox team is having](https://github.com/rust-lang/rust/issues/61002#issuecomment-500075739), we will only emit the error if we're actually supposed to generate a binary. If the `rustc` is invoked with `--print` arguments (which means that no binary will actually be emitted), then we won't emit the error because there is not a possibility of the issue occurring.\n\ncc @EricRahm @nikomatsakis @pnkfelix @Centril", "tree": {"sha": "de077522aa3cc69e3618895af80bc587a95b267f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de077522aa3cc69e3618895af80bc587a95b267f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc16d0486933e02237190366de2eb43df2215c11", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdMJBhCRBK7hj4Ov3rIwAAdHIIAHYWPnPIj/5nux02c21lox5y\nxP9gzHq1JQkbCxOF8wFD13ruI70a7ptpiHtGcaBLDoYvF1FMX/2HSZs06ZUMPcPD\nSuHYkWD1RpZ7B+4Swr5L3wabUBNrC6vFX+E4xZhWDeen/fwYpcSmQcGWqra363jn\nWr62xzPgqzAHPuz3484qNyurMvUPGxBiUMZo+Lup52O69dKxQF6GT2W8ZP1zgfxg\nADPjY5W9TcBMcBGmApiyF2h+gT3VFkOIHpeorTXH3lhP4qAdhmS4zUkHAi8UWta0\n6qkbBuKDCvPpI9NDVD0xIQ1dAJSDW62KTT6s3M0HhHihMNl4OOvikV5RXa7s8rA=\n=7pV4\n-----END PGP SIGNATURE-----\n", "payload": "tree de077522aa3cc69e3618895af80bc587a95b267f\nparent 7fc80b6bc604d88b7be8da60765341efa69d8648\nparent 3622311d53b6aeb454bfc55cec5e6b06f88597c8\nauthor Mark Rousskov <mark.simulacrum@gmail.com> 1563463777 -0400\ncommitter GitHub <noreply@github.com> 1563463777 -0400\n\nRollup merge of #62615 - wesleywiser:pgo_error, r=nagisa\n\n Only error about MSVC + PGO + unwind if we're generating code\n\nIn #61853, we changed the error when using PGO & MSVC toolchain & panic=unwind into a warning. However, in the compiler team meeting on 2019-07-11, we found that not everybody was in favor of that change because of the possibility of broken binaries.\n\nThis PR reverts that change so this is again an error. However, to work around an [issue the Firefox team is having](https://github.com/rust-lang/rust/issues/61002#issuecomment-500075739), we will only emit the error if we're actually supposed to generate a binary. If the `rustc` is invoked with `--print` arguments (which means that no binary will actually be emitted), then we won't emit the error because there is not a possibility of the issue occurring.\n\ncc @EricRahm @nikomatsakis @pnkfelix @Centril\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc16d0486933e02237190366de2eb43df2215c11", "html_url": "https://github.com/rust-lang/rust/commit/cc16d0486933e02237190366de2eb43df2215c11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc16d0486933e02237190366de2eb43df2215c11/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7fc80b6bc604d88b7be8da60765341efa69d8648", "url": "https://api.github.com/repos/rust-lang/rust/commits/7fc80b6bc604d88b7be8da60765341efa69d8648", "html_url": "https://github.com/rust-lang/rust/commit/7fc80b6bc604d88b7be8da60765341efa69d8648"}, {"sha": "3622311d53b6aeb454bfc55cec5e6b06f88597c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3622311d53b6aeb454bfc55cec5e6b06f88597c8", "html_url": "https://github.com/rust-lang/rust/commit/3622311d53b6aeb454bfc55cec5e6b06f88597c8"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "664926a152f14f03fb9b43ed1be157dc2dbbc58f", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/cc16d0486933e02237190366de2eb43df2215c11/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc16d0486933e02237190366de2eb43df2215c11/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=cc16d0486933e02237190366de2eb43df2215c11", "patch": "@@ -9,7 +9,7 @@ use crate::lint;\n use crate::lint::builtin::BuiltinLintDiagnostics;\n use crate::middle::allocator::AllocatorKind;\n use crate::middle::dependency_format;\n-use crate::session::config::{OutputType, SwitchWithOptPath};\n+use crate::session::config::{OutputType, PrintRequest, SwitchWithOptPath};\n use crate::session::search_paths::{PathKind, SearchPath};\n use crate::util::nodemap::{FxHashMap, FxHashSet};\n use crate::util::common::{duration_to_secs_str, ErrorReported};\n@@ -1303,15 +1303,18 @@ fn validate_commandline_args_with_session_available(sess: &Session) {\n     }\n \n     // PGO does not work reliably with panic=unwind on Windows. Let's make it\n-    // a warning to combine the two for now. It always runs into an assertions\n+    // an error to combine the two for now. It always runs into an assertions\n     // if LLVM is built with assertions, but without assertions it sometimes\n     // does not crash and will probably generate a corrupted binary.\n+    // We should only display this error if we're actually going to run PGO.\n+    // If we're just supposed to print out some data, don't show the error (#61002).\n     if sess.opts.cg.profile_generate.enabled() &&\n        sess.target.target.options.is_like_msvc &&\n-       sess.panic_strategy() == PanicStrategy::Unwind {\n-        sess.warn(\"Profile-guided optimization does not yet work in conjunction \\\n-                   with `-Cpanic=unwind` on Windows when targeting MSVC. \\\n-                   See https://github.com/rust-lang/rust/issues/61002 for details.\");\n+       sess.panic_strategy() == PanicStrategy::Unwind &&\n+       sess.opts.prints.iter().all(|&p| p == PrintRequest::NativeStaticLibs) {\n+        sess.err(\"Profile-guided optimization does not yet work in conjunction \\\n+                  with `-Cpanic=unwind` on Windows when targeting MSVC. \\\n+                  See https://github.com/rust-lang/rust/issues/61002 for details.\");\n     }\n }\n "}]}