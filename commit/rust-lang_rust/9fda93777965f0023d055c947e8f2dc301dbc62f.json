{"sha": "9fda93777965f0023d055c947e8f2dc301dbc62f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmZGE5Mzc3Nzk2NWYwMDIzZDA1NWM5NDdlOGYyZGMzMDFkYmM2MmY=", "commit": {"author": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2019-03-29T10:17:50Z"}, "committer": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2019-03-29T10:17:50Z"}, "message": "Remove redundant &", "tree": {"sha": "0ad5084e9a88fe908372cd1a0cc3118c612b54d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ad5084e9a88fe908372cd1a0cc3118c612b54d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fda93777965f0023d055c947e8f2dc301dbc62f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fda93777965f0023d055c947e8f2dc301dbc62f", "html_url": "https://github.com/rust-lang/rust/commit/9fda93777965f0023d055c947e8f2dc301dbc62f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fda93777965f0023d055c947e8f2dc301dbc62f/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff0683d66690cef6348226bf1e84c693ad6f6006", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff0683d66690cef6348226bf1e84c693ad6f6006", "html_url": "https://github.com/rust-lang/rust/commit/ff0683d66690cef6348226bf1e84c693ad6f6006"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "87c6b65865bd3bfbdc6555851463d44af085669a", "filename": "src/comment.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9fda93777965f0023d055c947e8f2dc301dbc62f/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fda93777965f0023d055c947e8f2dc301dbc62f/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=9fda93777965f0023d055c947e8f2dc301dbc62f", "patch": "@@ -591,7 +591,7 @@ impl<'a> CommentRewrite<'a> {\n             ) {\n                 Some(s) => self.result.push_str(&Self::join_block(\n                     &s,\n-                    &format!(\"{}{}\", &self.comment_line_separator, ib.line_start),\n+                    &format!(\"{}{}\", self.comment_line_separator, ib.line_start),\n                 )),\n                 None => self.result.push_str(&Self::join_block(\n                     &ib.original_block_as_string(),\n@@ -634,7 +634,7 @@ impl<'a> CommentRewrite<'a> {\n             ) {\n                 Some(s) => self.result.push_str(&Self::join_block(\n                     &s,\n-                    &format!(\"{}{}\", &self.comment_line_separator, ib.line_start),\n+                    &format!(\"{}{}\", self.comment_line_separator, ib.line_start),\n                 )),\n                 None => self.result.push_str(&Self::join_block(\n                     &ib.original_block_as_string(),"}, {"sha": "8d241dff1f9690edb24183e35c7c53290f9711f1", "filename": "src/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9fda93777965f0023d055c947e8f2dc301dbc62f/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fda93777965f0023d055c947e8f2dc301dbc62f/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=9fda93777965f0023d055c947e8f2dc301dbc62f", "patch": "@@ -1459,7 +1459,7 @@ fn rewrite_paren(\n     let subexpr_str = subexpr.rewrite(context, sub_shape)?;\n     let fits_single_line = !pre_comment.contains(\"//\") && !post_comment.contains(\"//\");\n     if fits_single_line {\n-        Some(format!(\"({}{}{})\", pre_comment, &subexpr_str, post_comment))\n+        Some(format!(\"({}{}{})\", pre_comment, subexpr_str, post_comment))\n     } else {\n         rewrite_paren_in_multi_line(context, subexpr, shape, pre_span, post_span)\n     }"}, {"sha": "1647ecfcc3b3f9437ae13be4704a24fb2241f93c", "filename": "src/items.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9fda93777965f0023d055c947e8f2dc301dbc62f/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fda93777965f0023d055c947e8f2dc301dbc62f/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=9fda93777965f0023d055c947e8f2dc301dbc62f", "patch": "@@ -730,7 +730,7 @@ pub fn format_impl(\n                 if generics.where_clause.predicates.len() == 1 {\n                     result.push_str(\",\");\n                 }\n-                result.push_str(&format!(\"{}{{{}}}\", &sep, &sep));\n+                result.push_str(&format!(\"{}{{{}}}\", sep, sep));\n             } else {\n                 result.push_str(\" {}\");\n             }\n@@ -912,7 +912,7 @@ fn rewrite_trait_ref(\n     let shape = Shape::indented(offset + used_space, context.config);\n     if let Some(trait_ref_str) = trait_ref.rewrite(context, shape) {\n         if !trait_ref_str.contains('\\n') {\n-            return Some(format!(\" {}{}\", polarity_str, &trait_ref_str));\n+            return Some(format!(\" {}{}\", polarity_str, trait_ref_str));\n         }\n     }\n     // We could not make enough space for trait_ref, so put it on new line.\n@@ -921,9 +921,9 @@ fn rewrite_trait_ref(\n     let trait_ref_str = trait_ref.rewrite(context, shape)?;\n     Some(format!(\n         \"{}{}{}\",\n-        &offset.to_string_with_newline(context.config),\n+        offset.to_string_with_newline(context.config),\n         polarity_str,\n-        &trait_ref_str\n+        trait_ref_str\n     ))\n }\n "}, {"sha": "dc297a52dfb967f852ecbe3bb822549ff4bdeecc", "filename": "src/test/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9fda93777965f0023d055c947e8f2dc301dbc62f/src%2Ftest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fda93777965f0023d055c947e8f2dc301dbc62f/src%2Ftest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmod.rs?ref=9fda93777965f0023d055c947e8f2dc301dbc62f", "patch": "@@ -609,11 +609,11 @@ fn handle_result(\n     for (file_name, fmt_text) in result {\n         // If file is in tests/source, compare to file with same name in tests/target.\n         let target = get_target(&file_name, target);\n-        let open_error = format!(\"couldn't open target {:?}\", &target);\n+        let open_error = format!(\"couldn't open target {:?}\", target);\n         let mut f = fs::File::open(&target).expect(&open_error);\n \n         let mut text = String::new();\n-        let read_error = format!(\"failed reading target {:?}\", &target);\n+        let read_error = format!(\"failed reading target {:?}\", target);\n         f.read_to_string(&mut text).expect(&read_error);\n \n         // Ignore LF and CRLF difference for Windows."}]}