{"sha": "2a1748834e80b2461be4e18d420503d60e687312", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhMTc0ODgzNGU4MGIyNDYxYmU0ZTE4ZDQyMDUwM2Q2MGU2ODczMTI=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-08T11:40:25Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-27T20:41:34Z"}, "message": "Add some size assertions for const eval types", "tree": {"sha": "b6c43ba2d8b71ea5721939e9d54daa90df56d2e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6c43ba2d8b71ea5721939e9d54daa90df56d2e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a1748834e80b2461be4e18d420503d60e687312", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a1748834e80b2461be4e18d420503d60e687312", "html_url": "https://github.com/rust-lang/rust/commit/2a1748834e80b2461be4e18d420503d60e687312", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a1748834e80b2461be4e18d420503d60e687312/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1578955500ab438f80f27361b74a82364caa499f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1578955500ab438f80f27361b74a82364caa499f", "html_url": "https://github.com/rust-lang/rust/commit/1578955500ab438f80f27361b74a82364caa499f"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "498c0b5b917e957f7f8d6cabce393c6000043117", "filename": "src/librustc/mir/interpret/pointer.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2a1748834e80b2461be4e18d420503d60e687312/src%2Flibrustc%2Fmir%2Finterpret%2Fpointer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a1748834e80b2461be4e18d420503d60e687312/src%2Flibrustc%2Fmir%2Finterpret%2Fpointer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fpointer.rs?ref=2a1748834e80b2461be4e18d420503d60e687312", "patch": "@@ -76,6 +76,8 @@ pub struct Pointer<Tag=(),Id=AllocId> {\n     pub tag: Tag,\n }\n \n+static_assert!(POINTER_SIZE: ::std::mem::size_of::<Pointer>() == 16);\n+\n /// Produces a `Pointer` which points to the beginning of the Allocation\n impl From<AllocId> for Pointer {\n     #[inline(always)]"}, {"sha": "896e2ab960cb4b826dca9f9c81453ec42fce9da4", "filename": "src/librustc/mir/interpret/value.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2a1748834e80b2461be4e18d420503d60e687312/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a1748834e80b2461be4e18d420503d60e687312/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs?ref=2a1748834e80b2461be4e18d420503d60e687312", "patch": "@@ -32,6 +32,9 @@ pub enum ConstValue<'tcx> {\n     ByRef(AllocId, &'tcx Allocation, Size),\n }\n \n+#[cfg(target_arch = \"x86_64\")]\n+static_assert!(CONST_SIZE: ::std::mem::size_of::<ConstValue<'static>>() == 56);\n+\n impl<'tcx> ConstValue<'tcx> {\n     #[inline]\n     pub fn try_to_scalar(&self) -> Option<Scalar> {\n@@ -90,6 +93,9 @@ pub enum Scalar<Tag=(), Id=AllocId> {\n     Ptr(Pointer<Tag, Id>),\n }\n \n+#[cfg(target_arch = \"x86_64\")]\n+static_assert!(SCALAR_SIZE: ::std::mem::size_of::<Scalar>() == 24);\n+\n impl<Tag> fmt::Display for Scalar<Tag> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         match self {"}, {"sha": "a42b80e594c641eccb939c1f786f098a07ffeb38", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2a1748834e80b2461be4e18d420503d60e687312/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a1748834e80b2461be4e18d420503d60e687312/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=2a1748834e80b2461be4e18d420503d60e687312", "patch": "@@ -2063,6 +2063,9 @@ pub enum LazyConst<'tcx> {\n     Evaluated(Const<'tcx>),\n }\n \n+#[cfg(target_arch = \"x86_64\")]\n+static_assert!(LAZY_CONST_SIZE: ::std::mem::size_of::<LazyConst<'static>>() == 72);\n+\n impl<'tcx> LazyConst<'tcx> {\n     pub fn map_evaluated<R>(self, f: impl FnOnce(Const<'tcx>) -> Option<R>) -> Option<R> {\n         match self {\n@@ -2089,6 +2092,9 @@ pub struct Const<'tcx> {\n     pub val: ConstValue<'tcx>,\n }\n \n+#[cfg(target_arch = \"x86_64\")]\n+static_assert!(CONST_SIZE: ::std::mem::size_of::<Const<'static>>() == 64);\n+\n impl<'tcx> Const<'tcx> {\n     #[inline]\n     pub fn from_scalar("}]}