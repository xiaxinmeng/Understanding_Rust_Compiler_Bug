{"sha": "a25bc195e25fcce97301b907e2a03501daafb9b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyNWJjMTk1ZTI1ZmNjZTk3MzAxYjkwN2UyYTAzNTAxZGFhZmI5Yjk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-26T01:48:06Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-26T05:04:53Z"}, "message": "rustdoc: Parse variant doc attributes", "tree": {"sha": "74b49687628a8deeba65e518a6eb7f68d93cb981", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74b49687628a8deeba65e518a6eb7f68d93cb981"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a25bc195e25fcce97301b907e2a03501daafb9b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a25bc195e25fcce97301b907e2a03501daafb9b9", "html_url": "https://github.com/rust-lang/rust/commit/a25bc195e25fcce97301b907e2a03501daafb9b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a25bc195e25fcce97301b907e2a03501daafb9b9/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87c3a5c1a3e2daee39afb60be83133bf4caf4413", "url": "https://api.github.com/repos/rust-lang/rust/commits/87c3a5c1a3e2daee39afb60be83133bf4caf4413", "html_url": "https://github.com/rust-lang/rust/commit/87c3a5c1a3e2daee39afb60be83133bf4caf4413"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "bcdc093aed62e29fbbaa42715950e100163ab3a3", "filename": "src/rustdoc/attr_parser.rs", "status": "modified", "additions": 49, "deletions": 2, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/a25bc195e25fcce97301b907e2a03501daafb9b9/src%2Frustdoc%2Fattr_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a25bc195e25fcce97301b907e2a03501daafb9b9/src%2Frustdoc%2Fattr_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fattr_parser.rs?ref=a25bc195e25fcce97301b907e2a03501daafb9b9", "patch": "@@ -9,8 +9,10 @@ import rustc::syntax::ast;\n import rustc::front::attr;\n import core::tuple;\n \n-export crate_attrs, mod_attrs, fn_attrs, arg_attrs, const_attrs, enum_attrs;\n-export parse_crate, parse_mod, parse_fn, parse_const, parse_enum;\n+export crate_attrs, mod_attrs, fn_attrs, arg_attrs,\n+       const_attrs, enum_attrs, variant_attrs;\n+export parse_crate, parse_mod, parse_fn, parse_const,\n+       parse_enum, parse_variant;\n \n type crate_attrs = {\n     name: option<str>\n@@ -370,3 +372,48 @@ fn should_parse_enum_long_doc() {\n     assert attrs.brief == some(\"a\");\n     assert attrs.desc == some(\"b\");\n }\n+\n+fn parse_variant(attrs: [ast::attribute]) -> variant_attrs {\n+    parse_short_doc_or(\n+        attrs,\n+        {|desc|\n+            {\n+                desc: desc\n+            }\n+        },\n+        {|_items, brief, desc|\n+            if option::is_some(brief) && option::is_some(desc) {\n+                // FIXME: Warn about dropping brief description\n+            }\n+\n+            {\n+                // Prefer desc over brief\n+                desc: option::maybe(brief, desc, {|s| some(s) })\n+            }\n+        }\n+    )\n+}\n+\n+#[test]\n+fn should_parse_variant_short_doc() {\n+    let source = \"#[doc = \\\"a\\\"]\";\n+    let attrs = test::parse_attributes(source);\n+    let attrs = parse_variant(attrs);\n+    assert attrs.desc == some(\"a\");\n+}\n+\n+#[test]\n+fn should_parse_variant_brief_doc() {\n+    let source = \"#[doc(brief = \\\"a\\\")]\";\n+    let attrs = test::parse_attributes(source);\n+    let attrs = parse_variant(attrs);\n+    assert attrs.desc == some(\"a\");\n+}\n+\n+#[test]\n+fn should_parse_variant_long_doc() {\n+    let source = \"#[doc(desc = \\\"a\\\")]\";\n+    let attrs = test::parse_attributes(source);\n+    let attrs = parse_variant(attrs);\n+    assert attrs.desc == some(\"a\");\n+}"}]}