{"sha": "ec960963c15d833d33559e3adef9da41d30399e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjOTYwOTYzYzE1ZDgzM2QzMzU1OWUzYWRlZjlkYTQxZDMwMzk5ZTQ=", "commit": {"author": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2013-03-20T15:42:59Z"}, "committer": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2013-03-22T10:30:53Z"}, "message": "test: replace uses of old deriving attribute with new one", "tree": {"sha": "52ff5a6991dcbf2c2b0adfba20d73426aa243fef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52ff5a6991dcbf2c2b0adfba20d73426aa243fef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec960963c15d833d33559e3adef9da41d30399e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec960963c15d833d33559e3adef9da41d30399e4", "html_url": "https://github.com/rust-lang/rust/commit/ec960963c15d833d33559e3adef9da41d30399e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec960963c15d833d33559e3adef9da41d30399e4/comments", "author": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9966eaaba4d08dd9eb3cbbb1a92555f23d5f1a10", "url": "https://api.github.com/repos/rust-lang/rust/commits/9966eaaba4d08dd9eb3cbbb1a92555f23d5f1a10", "html_url": "https://github.com/rust-lang/rust/commit/9966eaaba4d08dd9eb3cbbb1a92555f23d5f1a10"}], "stats": {"total": 54, "additions": 27, "deletions": 27}, "files": [{"sha": "d3177e7c0a8a8512f7504b655e1ddac2d63e1c23", "filename": "src/test/run-fail/assert-eq-macro-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-fail%2Fassert-eq-macro-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-fail%2Fassert-eq-macro-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fassert-eq-macro-fail.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -1,6 +1,6 @@\n // error-pattern:expected: 15, given: 14\n \n-#[deriving_eq]\n+#[deriving(Eq)]\n struct Point { x : int }\n \n fn main() {"}, {"sha": "b204e1aba3a71dbdd566607061a1aa65c5f62dbe", "filename": "src/test/run-pass/assert-eq-macro-success.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fassert-eq-macro-success.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fassert-eq-macro-success.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassert-eq-macro-success.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -1,4 +1,4 @@\n-#[deriving_eq]\n+#[deriving(Eq)]\n struct Point { x : int }\n \n fn main() {"}, {"sha": "7538892f038920e678f568470c02f0cde1f1fd8f", "filename": "src/test/run-pass/auto-encode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fauto-encode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fauto-encode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauto-encode.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -121,7 +121,7 @@ impl cmp::Eq for CLike {\n \n #[auto_encode]\n #[auto_decode]\n-#[deriving_eq]\n+#[deriving(Eq)]\n struct Spanned<T> {\n     lo: uint,\n     hi: uint,"}, {"sha": "3f5547df17d8f802d091b690abf5cc26c188dace", "filename": "src/test/run-pass/binops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fbinops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fbinops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbinops.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -88,7 +88,7 @@ mod test {\n     }\n }\n \n-#[deriving_eq]\n+#[deriving(Eq)]\n struct p {\n   x: int,\n   y: int,"}, {"sha": "ee294cb594230abfcf5457777138a707f89f46cc", "filename": "src/test/run-pass/deriving-clone-enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-clone-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-clone-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-clone-enum.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -1,4 +1,4 @@\n-#[deriving_clone]\n+#[deriving(Clone)]\n enum E {\n     A,\n     B(()),"}, {"sha": "a868db2425cc27b26e417ddcc8e494cad696647b", "filename": "src/test/run-pass/deriving-clone-generic-enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-clone-generic-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-clone-generic-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-clone-generic-enum.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -1,4 +1,4 @@\n-#[deriving_clone]\n+#[deriving(Clone)]\n enum E<T,U> {\n     A(T),\n     B(T,U),"}, {"sha": "92721c53435731535084473a6d28d79f8c5720df", "filename": "src/test/run-pass/deriving-clone-generic-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-clone-generic-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-clone-generic-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-clone-generic-struct.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -1,4 +1,4 @@\n-#[deriving_clone]\n+#[deriving(Clone)]\n struct S<T> {\n     foo: (),\n     bar: (),"}, {"sha": "aeaa9ed726d2bb009de2e91499316aa916fd1527", "filename": "src/test/run-pass/deriving-clone-generic-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-clone-generic-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-clone-generic-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-clone-generic-tuple-struct.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -1,4 +1,4 @@\n-#[deriving_clone]\n+#[deriving(Clone)]\n struct S<T>(T, ());\n \n fn main() {}"}, {"sha": "4dcbadbb3ef9282b3c1e07838183c6ee2fb2b426", "filename": "src/test/run-pass/deriving-clone-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-clone-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-clone-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-clone-struct.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -1,4 +1,4 @@\n-#[deriving_clone]\n+#[deriving(Clone)]\n struct S {\n     _int: int,\n     _i8: i8,"}, {"sha": "04ddb439485fd0ac3cf7c4cd6dc79e2ed1429072", "filename": "src/test/run-pass/deriving-clone-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-clone-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-clone-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-clone-tuple-struct.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -1,4 +1,4 @@\n-#[deriving_clone]\n+#[deriving(Clone)]\n struct S((), ());\n \n fn main() {}"}, {"sha": "ebbdc157c7d13343ed796276add303041b3372b8", "filename": "src/test/run-pass/deriving-enum-single-variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-enum-single-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-enum-single-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-enum-single-variant.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -1,6 +1,6 @@\n type task_id = int;\n \n-#[deriving_eq]\n+#[deriving(Eq)]\n pub enum Task {\n     TaskHandle(task_id)\n }"}, {"sha": "47d088cfc6f266cfa5806bc681b9c8a0b4138f9c", "filename": "src/test/run-pass/deriving-via-extension-c-enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-via-extension-c-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-via-extension-c-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-via-extension-c-enum.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[deriving_eq]\n+#[deriving(Eq)]\n enum Foo {\n     Bar,\n     Baz,"}, {"sha": "32f693abf25558673b664c006cd67cea05a7e5e6", "filename": "src/test/run-pass/deriving-via-extension-enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-via-extension-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-via-extension-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-via-extension-enum.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[deriving_eq]\n+#[deriving(Eq)]\n enum Foo {\n     Bar(int, int),\n     Baz(float, float)"}, {"sha": "5ceb8c48750d986e49f5c027072c23a4ca6eb135", "filename": "src/test/run-pass/deriving-via-extension-iter-bytes-enum.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-via-extension-iter-bytes-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-via-extension-iter-bytes-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-via-extension-iter-bytes-enum.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -10,13 +10,13 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[deriving_iter_bytes]\n+#[deriving(IterBytes)]\n enum Foo {\n     Bar(int, char),\n     Baz(char, int)\n }\n \n-#[deriving_iter_bytes]\n+#[deriving(IterBytes)]\n enum A {\n     B,\n     C,"}, {"sha": "9f18cb6ac58a7b979cb37e8413a710f9b88a8335", "filename": "src/test/run-pass/deriving-via-extension-iter-bytes-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-via-extension-iter-bytes-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-via-extension-iter-bytes-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-via-extension-iter-bytes-struct.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -10,7 +10,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[deriving_iter_bytes]\n+#[deriving(IterBytes)]\n struct Foo {\n     x: int,\n     y: int,"}, {"sha": "09ee83870a0e2ca1e67bebd8f2a150e897d50f9d", "filename": "src/test/run-pass/deriving-via-extension-struct-empty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-via-extension-struct-empty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-via-extension-struct-empty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-via-extension-struct-empty.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[deriving_eq]\n+#[deriving(Eq)]\n struct Foo;\n \n pub fn main() {"}, {"sha": "c349600eb9998a01dd7bac29c12d619ea3b1900b", "filename": "src/test/run-pass/deriving-via-extension-struct-like-enum-variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-via-extension-struct-like-enum-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-via-extension-struct-like-enum-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-via-extension-struct-like-enum-variant.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -1,4 +1,4 @@\n-#[deriving_eq]\n+#[deriving(Eq)]\n enum S {\n     X { x: int, y: int },\n     Y"}, {"sha": "35c20c13e93715ae612c160e38ac68bd56026b66", "filename": "src/test/run-pass/deriving-via-extension-struct-tuple.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-via-extension-struct-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-via-extension-struct-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-via-extension-struct-tuple.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[deriving_eq]\n+#[deriving(Eq)]\n struct Foo(int, int, ~str);\n \n pub fn main() {"}, {"sha": "f5cc85c63825067025e100dd4d1b30d52b5e5c13", "filename": "src/test/run-pass/deriving-via-extension-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-via-extension-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-via-extension-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-via-extension-struct.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[deriving_eq]\n+#[deriving(Eq)]\n struct Foo {\n     x: int,\n     y: int,"}, {"sha": "298e30f7ec1e7779f2c736c6ab40f5ba0716dce5", "filename": "src/test/run-pass/deriving-via-extension-type-params.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-via-extension-type-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fderiving-via-extension-type-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-via-extension-type-params.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -10,8 +10,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[deriving_eq]\n-#[deriving_iter_bytes]\n+#[deriving(Eq)]\n+#[deriving(IterBytes)]\n struct Foo<T> {\n     x: int,\n     y: T,"}, {"sha": "f04e9d086e94f156d0d6dccb0694ae314680c8ca", "filename": "src/test/run-pass/extern-pass-TwoU64s-ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU64s-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU64s-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU64s-ref.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -12,7 +12,7 @@\n \n // xfail-test --- broken on 32-bit ABIs! (#5347)\n \n-#[deriving_eq]\n+#[deriving(Eq)]\n struct TwoU64s {\n     one: u64, two: u64\n }"}, {"sha": "1937ddaa9f42a446510d06295ca04256ffc2de77", "filename": "src/test/run-pass/extern-pass-TwoU64s.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU64s.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU64s.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU64s.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -13,7 +13,7 @@\n \n // xfail-test --- broken on 32-bit ABIs! (#5347)\n \n-#[deriving_eq]\n+#[deriving(Eq)]\n struct TwoU64s {\n     one: u64, two: u64\n }"}, {"sha": "cc4f10ca347b48ceff253292e19355127049afe2", "filename": "src/test/run-pass/issue-2718.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fissue-2718.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fissue-2718.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2718.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -20,7 +20,7 @@ pub mod pipes {\n         payload: Option<T>\n     }\n \n-    #[deriving_eq]\n+    #[deriving(Eq)]\n     pub enum state {\n         empty,\n         full,"}, {"sha": "626932850cf42ddf717a9eee2a6d83676a1dd140", "filename": "src/test/run-pass/issue-3935.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fissue-3935.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fissue-3935.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3935.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[deriving_eq]\n+#[deriving(Eq)]\n struct Bike {\n     name: ~str,\n }"}, {"sha": "082f2db259a4aea2bbfb64fe1c85bf41f61ce972", "filename": "src/test/run-pass/while-prelude-drop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fwhile-prelude-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec960963c15d833d33559e3adef9da41d30399e4/src%2Ftest%2Frun-pass%2Fwhile-prelude-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fwhile-prelude-drop.rs?ref=ec960963c15d833d33559e3adef9da41d30399e4", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n \n-#[deriving_eq]\n+#[deriving(Eq)]\n enum t { a, b(~str), }\n \n fn make(i: int) -> t {"}]}