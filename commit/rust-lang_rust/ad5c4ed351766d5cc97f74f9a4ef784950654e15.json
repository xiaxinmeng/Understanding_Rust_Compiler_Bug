{"sha": "ad5c4ed351766d5cc97f74f9a4ef784950654e15", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkNWM0ZWQzNTE3NjZkNWNjOTdmNzRmOWE0ZWY3ODQ5NTA2NTRlMTU=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-07-13T23:37:27Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-07-13T23:37:27Z"}, "message": "Make push_str overallocate. Use it in some places that were still doing +=.", "tree": {"sha": "d3fcbb31c2b712c8ab5a5fbf30052d9c11e46df5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3fcbb31c2b712c8ab5a5fbf30052d9c11e46df5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad5c4ed351766d5cc97f74f9a4ef784950654e15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad5c4ed351766d5cc97f74f9a4ef784950654e15", "html_url": "https://github.com/rust-lang/rust/commit/ad5c4ed351766d5cc97f74f9a4ef784950654e15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad5c4ed351766d5cc97f74f9a4ef784950654e15/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9728d14baeb1f93da6ebe524b840ec9868c296ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/9728d14baeb1f93da6ebe524b840ec9868c296ae", "html_url": "https://github.com/rust-lang/rust/commit/9728d14baeb1f93da6ebe524b840ec9868c296ae"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "f05410bafe9d0ab324b1a493872b625ac73afe3e", "filename": "src/libcore/str.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ad5c4ed351766d5cc97f74f9a4ef784950654e15/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad5c4ed351766d5cc97f74f9a4ef784950654e15/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=ad5c4ed351766d5cc97f74f9a4ef784950654e15", "patch": "@@ -26,6 +26,7 @@ export\n    unpack_slice,\n \n    // Adding things to and removing things from a string\n+   push_str_no_overallocate,\n    push_str,\n    push_char,\n    pop_char,\n@@ -235,13 +236,29 @@ pure fn from_chars(chs: &[const char]) -> str {\n     ret buf;\n }\n \n+/// Appends a string slice to the back of a string, without overallocating\n+#[inline(always)]\n+fn push_str_no_overallocate(&lhs: str, rhs: str/&) {\n+    unsafe {\n+        let llen = lhs.len();\n+        let rlen = rhs.len();\n+        reserve(lhs, llen + rlen);\n+        do as_buf(lhs) |lbuf| {\n+            do unpack_slice(rhs) |rbuf, _rlen| {\n+                let dst = ptr::offset(lbuf, llen);\n+                ptr::memcpy(dst, rbuf, rlen);\n+            }\n+        }\n+        unsafe::set_len(lhs, llen + rlen);\n+    }\n+}\n /// Appends a string slice to the back of a string\n #[inline(always)]\n fn push_str(&lhs: str, rhs: str/&) {\n     unsafe {\n         let llen = lhs.len();\n         let rlen = rhs.len();\n-        reserve(lhs, llen + rlen);\n+        reserve_at_least(lhs, llen + rlen);\n         do as_buf(lhs) |lbuf| {\n             do unpack_slice(rhs) |rbuf, _rlen| {\n                 let dst = ptr::offset(lbuf, llen);\n@@ -257,7 +274,7 @@ fn push_str(&lhs: str, rhs: str/&) {\n pure fn append(+lhs: str, rhs: str/&) -> str {\n     let mut v <- lhs;\n     unchecked {\n-        push_str(v, rhs);\n+        push_str_no_overallocate(v, rhs);\n     }\n     ret v;\n }"}, {"sha": "dc136af639a8394cb42036401774bfaf58b35805", "filename": "src/libstd/sha1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ad5c4ed351766d5cc97f74f9a4ef784950654e15/src%2Flibstd%2Fsha1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad5c4ed351766d5cc97f74f9a4ef784950654e15/src%2Flibstd%2Fsha1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsha1.rs?ref=ad5c4ed351766d5cc97f74f9a4ef784950654e15", "patch": "@@ -265,7 +265,7 @@ mod tests {\n         fn a_million_letter_a() -> str {\n             let mut i = 0;\n             let mut rs = \"\";\n-            while i < 100000 { rs += \"aaaaaaaaaa\"; i += 1; }\n+            while i < 100000 { str::push_str(rs, \"aaaaaaaaaa\"); i += 1; }\n             ret rs;\n         }\n         // Test messages from FIPS 180-1"}]}