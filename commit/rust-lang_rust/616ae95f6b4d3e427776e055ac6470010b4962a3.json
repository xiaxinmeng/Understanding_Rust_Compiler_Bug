{"sha": "616ae95f6b4d3e427776e055ac6470010b4962a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxNmFlOTVmNmI0ZDNlNDI3Nzc2ZTA1NWFjNjQ3MDAxMGI0OTYyYTM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-28T01:18:09Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-28T01:18:28Z"}, "message": "stdlib: Use an unsafe cast to speed up the memory writer", "tree": {"sha": "54e8cb68e5f2ab5add7a1a7603af8177f12e2188", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54e8cb68e5f2ab5add7a1a7603af8177f12e2188"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/616ae95f6b4d3e427776e055ac6470010b4962a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/616ae95f6b4d3e427776e055ac6470010b4962a3", "html_url": "https://github.com/rust-lang/rust/commit/616ae95f6b4d3e427776e055ac6470010b4962a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/616ae95f6b4d3e427776e055ac6470010b4962a3/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "180a389832ea505df5a05620a35fcfc4ba311936", "url": "https://api.github.com/repos/rust-lang/rust/commits/180a389832ea505df5a05620a35fcfc4ba311936", "html_url": "https://github.com/rust-lang/rust/commit/180a389832ea505df5a05620a35fcfc4ba311936"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "4c1bf2dfb2b120e15009398b2cd34220e198fc8c", "filename": "src/lib/io.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/616ae95f6b4d3e427776e055ac6470010b4962a3/src%2Flib%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/616ae95f6b4d3e427776e055ac6470010b4962a3/src%2Flib%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fio.rs?ref=616ae95f6b4d3e427776e055ac6470010b4962a3", "patch": "@@ -450,7 +450,17 @@ type mutable_byte_buf = @rec(mutable vec[mutable u8] buf, mutable uint pos);\n \n state obj byte_buf_writer(mutable_byte_buf buf) {\n     fn write(vec[u8] v) {\n-        // FIXME: optimize\n+        // Fast path.\n+        if (buf.pos == _vec.len[mutable u8](buf.buf)) {\n+            // FIXME: Fix our type system. There's no reason you shouldn't be\n+            // able to add a mutable vector to an immutable one.\n+            auto mv = _vec.rustrt.unsafe_vec_to_mut[u8](v);\n+            buf.buf += mv;\n+            buf.pos += _vec.len[u8](v);\n+            ret;\n+        }\n+\n+        // FIXME: Optimize. These should be unique pointers.\n         auto vlen = _vec.len[u8](v);\n         auto vpos = 0u;\n         while (vpos < vlen) {"}]}