{"sha": "b6be1b6f6122c0a6bdfa18813870a197a4be51bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2YmUxYjZmNjEyMmMwYTZiZGZhMTg4MTM4NzBhMTk3YTRiZTUxYmY=", "commit": {"author": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-01-22T10:38:25Z"}, "committer": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-01-22T11:02:21Z"}, "message": "Preserved a comment on the bug previously present in ast::Literal::kind()", "tree": {"sha": "643a4fb82bcc9c1cd7d5131ddf58f1fe89d31b1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/643a4fb82bcc9c1cd7d5131ddf58f1fe89d31b1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6be1b6f6122c0a6bdfa18813870a197a4be51bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6be1b6f6122c0a6bdfa18813870a197a4be51bf", "html_url": "https://github.com/rust-lang/rust/commit/b6be1b6f6122c0a6bdfa18813870a197a4be51bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6be1b6f6122c0a6bdfa18813870a197a4be51bf/comments", "author": null, "committer": null, "parents": [{"sha": "3ec781d4f2e2e3087a99b7ace21f97a84b7c7b84", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ec781d4f2e2e3087a99b7ace21f97a84b7c7b84", "html_url": "https://github.com/rust-lang/rust/commit/3ec781d4f2e2e3087a99b7ace21f97a84b7c7b84"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "c91dd2bf4b0069bfeb925eb41e5b7074a899a9ba", "filename": "crates/ra_syntax/src/ast/expr_extensions.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b6be1b6f6122c0a6bdfa18813870a197a4be51bf/crates%2Fra_syntax%2Fsrc%2Fast%2Fexpr_extensions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6be1b6f6122c0a6bdfa18813870a197a4be51bf/crates%2Fra_syntax%2Fsrc%2Fast%2Fexpr_extensions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fexpr_extensions.rs?ref=b6be1b6f6122c0a6bdfa18813870a197a4be51bf", "patch": "@@ -322,6 +322,11 @@ impl ast::Literal {\n \n         match token.kind() {\n             INT_NUMBER => {\n+                // FYI: there was a bug here previously, thus an if statement here is necessary.\n+                // The lexer treated e.g. `1f64` as an integer literal. See\n+                // https://github.com/rust-analyzer/rust-analyzer/issues/1592\n+                // and the comments on the linked PR.\n+\n                 let text = token.text();\n \n                 if let suffix @ Some(_) = Self::find_suffix(&text, &FLOAT_SUFFIXES) {"}]}