{"sha": "3000b13df21fc8e9bbcaf91310d3eaaf21bc413e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwMDBiMTNkZjIxZmM4ZTliYmNhZjkxMzEwZDNlYWFmMjFiYzQxM2U=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-03-04T11:17:31Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-03-04T11:17:31Z"}, "message": "extract block contents into a function", "tree": {"sha": "562d5f18eca539e2ed2189b75a3442420fbe937d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/562d5f18eca539e2ed2189b75a3442420fbe937d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3000b13df21fc8e9bbcaf91310d3eaaf21bc413e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3000b13df21fc8e9bbcaf91310d3eaaf21bc413e", "html_url": "https://github.com/rust-lang/rust/commit/3000b13df21fc8e9bbcaf91310d3eaaf21bc413e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3000b13df21fc8e9bbcaf91310d3eaaf21bc413e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5197e1664856fa4fef5a4c4dd43b6915e9fa847d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5197e1664856fa4fef5a4c4dd43b6915e9fa847d", "html_url": "https://github.com/rust-lang/rust/commit/5197e1664856fa4fef5a4c4dd43b6915e9fa847d"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "70c71a8e150f9ec196ee885c846bd4cdfcd23df6", "filename": "crates/ra_parser/src/grammar/expressions.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3000b13df21fc8e9bbcaf91310d3eaaf21bc413e/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3000b13df21fc8e9bbcaf91310d3eaaf21bc413e/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=3000b13df21fc8e9bbcaf91310d3eaaf21bc413e", "patch": "@@ -33,6 +33,12 @@ pub(crate) fn block(p: &mut Parser) {\n     }\n     let m = p.start();\n     p.bump();\n+    expr_block_contents(p);\n+    p.expect(R_CURLY);\n+    m.complete(p, BLOCK);\n+}\n+\n+pub(crate) fn expr_block_contents(p: &mut Parser) {\n     // This is checked by a validator\n     attributes::inner_attributes(p);\n \n@@ -101,8 +107,6 @@ pub(crate) fn block(p: &mut Parser) {\n             }\n         }\n     }\n-    p.expect(R_CURLY);\n-    m.complete(p, BLOCK);\n \n     // test let_stmt;\n     // fn foo() {"}]}