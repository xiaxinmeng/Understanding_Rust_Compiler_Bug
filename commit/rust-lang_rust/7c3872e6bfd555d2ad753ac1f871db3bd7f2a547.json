{"sha": "7c3872e6bfd555d2ad753ac1f871db3bd7f2a547", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjMzg3MmU2YmZkNTU1ZDJhZDc1M2FjMWY4NzFkYjNiZDdmMmE1NDc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-06-24T20:01:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-06-24T20:01:39Z"}, "message": "Auto merge of #85651 - dns2utf8:rustdoc_flexbox, r=GuillaumeGomez\n\nrustdoc: staggered layout for module contents on mobile\n\nThis PR adds the container `<item-table>` with its two children `<item-left>` and `<item-right>`.\nIt uses grid-layout on desktop and flexbox on mobile to make better use of the available space.\n\nAdditionally it allows to share parts of the CSS with the search function.\n\n* Demo: https://data.estada.ch/rustdoc-nightly_126561cb3_2021-05-25/generic_array/index.html\n* Related: #85540\n\n## Desktop\n![grafik](https://user-images.githubusercontent.com/739070/119416896-2be62300-bce4-11eb-9555-792b859ab611.png)\n\n## Mobile\n![grafik](https://user-images.githubusercontent.com/739070/119416934-44563d80-bce4-11eb-9e77-70a72edcc487.png)\n\nr? `@GuillaumeGomez` `@jsha`", "tree": {"sha": "e6c64b94466caf951f18582a2a7fb0e82252a441", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6c64b94466caf951f18582a2a7fb0e82252a441"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547", "html_url": "https://github.com/rust-lang/rust/commit/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbeda5cbeb9a3b92a1df997869a49d9584ca10c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbeda5cbeb9a3b92a1df997869a49d9584ca10c2", "html_url": "https://github.com/rust-lang/rust/commit/cbeda5cbeb9a3b92a1df997869a49d9584ca10c2"}, {"sha": "94c84bd72a0fd9c9e0dbcff43c21e6a862cae6cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/94c84bd72a0fd9c9e0dbcff43c21e6a862cae6cf", "html_url": "https://github.com/rust-lang/rust/commit/94c84bd72a0fd9c9e0dbcff43c21e6a862cae6cf"}], "stats": {"total": 205, "additions": 129, "deletions": 76}, "files": [{"sha": "10584e3eaca5e3f3598337b13924114f71c37f02", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=7c3872e6bfd555d2ad753ac1f871db3bd7f2a547", "patch": "@@ -1694,6 +1694,7 @@ fn print_sidebar(cx: &Context<'_>, it: &clean::Item, buffer: &mut Buffer) {\n             write!(\n                 buffer,\n                 \"<div class=\\\"block version\\\">\\\n+                     <div class=\\\"narrow-helper\\\"></div>\\\n                      <p>Version {}</p>\\\n                  </div>\",\n                 Escape(version),"}, {"sha": "5fd0607356dad794d220d9eccf7451b91e80fcf3", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 19, "deletions": 15, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=7c3872e6bfd555d2ad753ac1f871db3bd7f2a547", "patch": "@@ -29,6 +29,9 @@ use crate::html::highlight;\n use crate::html::layout::Page;\n use crate::html::markdown::MarkdownSummaryLine;\n \n+const ITEM_TABLE_OPEN: &'static str = \"<div class=\\\"item-table\\\">\";\n+const ITEM_TABLE_CLOSE: &'static str = \"</div>\";\n+\n pub(super) fn print_item(cx: &Context<'_>, item: &clean::Item, buf: &mut Buffer, page: &Page<'_>) {\n     debug_assert!(!item.is_stripped());\n     // Write the breadcrumb trail header for the top\n@@ -263,14 +266,15 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n             curty = myty;\n         } else if myty != curty {\n             if curty.is_some() {\n-                w.write_str(\"</table>\");\n+                w.write_str(ITEM_TABLE_CLOSE);\n             }\n             curty = myty;\n             let (short, name) = item_ty_to_strs(myty.unwrap());\n             write!(\n                 w,\n                 \"<h2 id=\\\"{id}\\\" class=\\\"section-header\\\">\\\n-                       <a href=\\\"#{id}\\\">{name}</a></h2>\\n<table>\",\n+                       <a href=\\\"#{id}\\\">{name}</a></h2>\\n{}\",\n+                ITEM_TABLE_OPEN,\n                 id = cx.derive_id(short.to_owned()),\n                 name = name\n             );\n@@ -283,14 +287,14 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n                 match *src {\n                     Some(ref src) => write!(\n                         w,\n-                        \"<tr><td><code>{}extern crate {} as {};\",\n+                        \"<div class=\\\"item-left\\\"><code>{}extern crate {} as {};\",\n                         myitem.visibility.print_with_space(myitem.def_id, cx),\n                         anchor(myitem.def_id.expect_real(), &*src.as_str(), cx),\n                         myitem.name.as_ref().unwrap(),\n                     ),\n                     None => write!(\n                         w,\n-                        \"<tr><td><code>{}extern crate {};\",\n+                        \"<div class=\\\"item-left\\\"><code>{}extern crate {};\",\n                         myitem.visibility.print_with_space(myitem.def_id, cx),\n                         anchor(\n                             myitem.def_id.expect_real(),\n@@ -299,7 +303,7 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n                         ),\n                     ),\n                 }\n-                w.write_str(\"</code></td></tr>\");\n+                w.write_str(\"</code></div>\");\n             }\n \n             clean::ImportItem(ref import) => {\n@@ -326,10 +330,10 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n \n                 write!(\n                     w,\n-                    \"<tr class=\\\"{stab}{add}import-item\\\">\\\n-                         <td><code>{vis}{imp}</code></td>\\\n-                         <td class=\\\"docblock-short\\\">{stab_tags}</td>\\\n-                     </tr>\",\n+                    \"<div class=\\\"item-left {stab}{add}import-item\\\">\\\n+                         <code>{vis}{imp}</code>\\\n+                     </div>\\\n+                     <div class=\\\"item-right docblock-short\\\">{stab_tags}</div>\",\n                     stab = stab.unwrap_or_default(),\n                     add = add,\n                     vis = myitem.visibility.print_with_space(myitem.def_id, cx),\n@@ -358,11 +362,11 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n                 let doc_value = myitem.doc_value().unwrap_or_default();\n                 write!(\n                     w,\n-                    \"<tr class=\\\"{stab}{add}module-item\\\">\\\n-                         <td><a class=\\\"{class}\\\" href=\\\"{href}\\\" \\\n-                             title=\\\"{title}\\\">{name}</a>{unsafety_flag}</td>\\\n-                         <td class=\\\"docblock-short\\\">{stab_tags}{docs}</td>\\\n-                     </tr>\",\n+                    \"<div class=\\\"item-left {stab}{add}module-item\\\">\\\n+                         <a class=\\\"{class}\\\" href=\\\"{href}\\\" \\\n+                             title=\\\"{title}\\\">{name}</a>{unsafety_flag}\\\n+                     </div>\\\n+                     <div class=\\\"item-right docblock-short\\\">{stab_tags}{docs}</div>\",\n                     name = *myitem.name.as_ref().unwrap(),\n                     stab_tags = extra_info_tags(myitem, item, cx.tcx()),\n                     docs = MarkdownSummaryLine(&doc_value, &myitem.links(cx)).into_string(),\n@@ -382,7 +386,7 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n     }\n \n     if curty.is_some() {\n-        w.write_str(\"</table>\");\n+        w.write_str(ITEM_TABLE_CLOSE);\n     }\n }\n "}, {"sha": "3b52fd94d273eb14e2b184bbb418f21764611559", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 48, "deletions": 2, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=7c3872e6bfd555d2ad753ac1f871db3bd7f2a547", "patch": "@@ -169,6 +169,7 @@ div.impl-items > div {\n h1, h2, h3, h4,\n .sidebar, a.source, .search-input, .search-results .result-name,\n .content table td:first-child > a,\n+.item-left > a,\n div.item-list .out-of-band, span.since,\n #source-sidebar, #sidebar-toggle,\n details.rustdoc-toggle > summary::before,\n@@ -710,6 +711,25 @@ a {\n \n .block a.current.crate { font-weight: 500; }\n \n+.item-table {\n+\tdisplay: grid;\n+\tcolumn-gap: 1.2rem;\n+\trow-gap: 0.0rem;\n+\tgrid-template-columns: auto 1fr;\n+\t/* align content left */\n+\tjustify-items: start;\n+}\n+\n+.item-left, .item-right {\n+\tdisplay: block;\n+}\n+.item-left {\n+\tgrid-column: 1;\n+}\n+.item-right {\n+\tgrid-column: 2;\n+}\n+\n .search-container {\n \tposition: relative;\n }\n@@ -1599,9 +1619,25 @@ details.undocumented[open] > summary::before {\n \t}\n \n \t.sidebar > .block.version {\n+\t\toverflow: hidden;\n \t\tborder-bottom: none;\n-\t\tmargin-top: 12px;\n \t\tmargin-bottom: 0;\n+\t\theight: 100%;\n+\t\tpadding-left: 12px;\n+\t}\n+\t.sidebar > .block.version > div.narrow-helper {\n+\t\tfloat: left;\n+\t\twidth: 1px;\n+\t\theight: 100%;\n+\t}\n+\t.sidebar > .block.version > p {\n+\t\t/* hide Version text if too narrow */\n+\t\tmargin: 0;\n+\t\tmin-width: 55px;\n+\t\t/* vertically center */\n+\t\tdisplay: flex;\n+\t\talign-items: center;\n+\t\theight: 100%;\n \t}\n \n \tnav.sub {\n@@ -1737,6 +1773,16 @@ details.undocumented[open] > summary::before {\n \t#help-button {\n \t\tdisplay: none;\n \t}\n+\n+\t/* Display an alternating layout on tablets and phones */\n+\t.item-table {\n+\t\tdisplay: flex;\n+\t\tflex-flow: column wrap;\n+\t}\n+\t.item-left, .item-right {\n+\t\twidth: 100%;\n+\t}\n+\n \t.search-container > div {\n \t\twidth: calc(100% - 32px);\n \t}\n@@ -1749,7 +1795,7 @@ details.undocumented[open] > summary::before {\n \t.search-results .result-name, .search-results div.desc, .search-results .result-description {\n \t\twidth: 100%;\n \t}\n-\t.search-results div.desc, .search-results .result-description {\n+\t.search-results div.desc, .search-results .result-description, .item-right {\n \t\tpadding-left: 2em;\n \t}\n }"}, {"sha": "c8ebb8c56f5351657f3c0de218ccf7da6f1acd93", "filename": "src/test/rustdoc-gui/sidebar.goml", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Ftest%2Frustdoc-gui%2Fsidebar.goml", "raw_url": "https://github.com/rust-lang/rust/raw/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Ftest%2Frustdoc-gui%2Fsidebar.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsidebar.goml?ref=7c3872e6bfd555d2ad753ac1f871db3bd7f2a547", "patch": "@@ -13,8 +13,8 @@ assert-text: (\".sidebar-elems > .items > ul > li:nth-child(4)\", \"Traits\")\n assert-text: (\".sidebar-elems > .items > ul > li:nth-child(5)\", \"Functions\")\n assert-text: (\".sidebar-elems > .items > ul > li:nth-child(6)\", \"Type Definitions\")\n assert-text: (\".sidebar-elems > .items > ul > li:nth-child(7)\", \"Keywords\")\n-assert-text: (\"#structs + table td > a\", \"Foo\")\n-click: \"#structs + table td > a\"\n+assert-text: (\"#structs + .item-table .item-left > a\", \"Foo\")\n+click: \"#structs + .item-table .item-left > a\"\n \n // PAGE: struct.Foo.html\n assert-count: (\".sidebar .location\", 2)\n@@ -35,8 +35,8 @@ assert-text: (\".sidebar-elems > .items > ul > li:nth-child(2)\", \"Structs\")\n assert-text: (\".sidebar-elems > .items > ul > li:nth-child(3)\", \"Traits\")\n assert-text: (\".sidebar-elems > .items > ul > li:nth-child(4)\", \"Functions\")\n assert-text: (\".sidebar-elems > .items > ul > li:nth-child(5)\", \"Type Definitions\")\n-assert-text: (\"#functions + table td > a\", \"foobar\")\n-click: \"#functions + table td > a\"\n+assert-text: (\"#functions + .item-table .item-left > a\", \"foobar\")\n+click: \"#functions + .item-table .item-left > a\"\n \n // PAGE: fn.foobar.html\n // In items containing no items (like functions or constants) and in modules, we have one\n@@ -57,4 +57,4 @@ assert-text: (\".sidebar > .location\", \"Module sub_sub_module\")\n // We check that we don't have the crate list.\n assert-false: \".sidebar-elems > .crate\"\n assert-text: (\".sidebar-elems > .items > ul > li:nth-child(1)\", \"Functions\")\n-assert-text: (\"#functions + table td > a\", \"foo\")\n+assert-text: (\"#functions + .item-table .item-left > a\", \"foo\")"}, {"sha": "444624b034cc46b0dc1ae305f38a2866ef4e8602", "filename": "src/test/rustdoc/deprecated.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Ftest%2Frustdoc%2Fdeprecated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Ftest%2Frustdoc%2Fdeprecated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdeprecated.rs?ref=7c3872e6bfd555d2ad753ac1f871db3bd7f2a547", "patch": "@@ -1,14 +1,14 @@\n-// @has deprecated/index.html '//*[@class=\"docblock-short\"]/span[@class=\"stab deprecated\"]' \\\n+// @has deprecated/index.html '//*[@class=\"item-right docblock-short\"]/span[@class=\"stab deprecated\"]' \\\n //      'Deprecated'\n-// @has - '//*[@class=\"docblock-short\"]' 'Deprecated docs'\n+// @has - '//*[@class=\"item-right docblock-short\"]' 'Deprecated docs'\n \n // @has deprecated/struct.S.html '//*[@class=\"stab deprecated\"]' \\\n //      'Deprecated since 1.0.0: text'\n /// Deprecated docs\n #[deprecated(since = \"1.0.0\", note = \"text\")]\n pub struct S;\n \n-// @matches deprecated/index.html '//*[@class=\"docblock-short\"]' '^Docs'\n+// @matches deprecated/index.html '//*[@class=\"item-right docblock-short\"]' '^Docs'\n /// Docs\n pub struct T;\n "}, {"sha": "bd47ae4438d744a88a7e2f589abe9ee900210fe8", "filename": "src/test/rustdoc/doc-cfg.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Ftest%2Frustdoc%2Fdoc-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Ftest%2Frustdoc%2Fdoc-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdoc-cfg.rs?ref=7c3872e6bfd555d2ad753ac1f871db3bd7f2a547", "patch": "@@ -12,7 +12,7 @@ pub struct Portable;\n // @has doc_cfg/unix_only/index.html \\\n //  '//*[@id=\"main\"]/*[@class=\"item-info\"]/*[@class=\"stab portability\"]' \\\n //  'This is supported on Unix only.'\n-// @matches - '//*[@class=\"module-item\"]//*[@class=\"stab portability\"]' '\\AARM\\Z'\n+// @matches - '//*[@class=\"item-right docblock-short\"]//*[@class=\"stab portability\"]' '\\AARM\\Z'\n // @count - '//*[@class=\"stab portability\"]' 2\n #[doc(cfg(unix))]\n pub mod unix_only {\n@@ -42,7 +42,7 @@ pub mod unix_only {\n // @has doc_cfg/wasi_only/index.html \\\n //  '//*[@id=\"main\"]/*[@class=\"item-info\"]/*[@class=\"stab portability\"]' \\\n //  'This is supported on WASI only.'\n-// @matches - '//*[@class=\"module-item\"]//*[@class=\"stab portability\"]' '\\AWebAssembly\\Z'\n+// @matches - '//*[@class=\"item-right docblock-short\"]//*[@class=\"stab portability\"]' '\\AWebAssembly\\Z'\n // @count - '//*[@class=\"stab portability\"]' 2\n #[doc(cfg(target_os = \"wasi\"))]\n pub mod wasi_only {\n@@ -74,7 +74,7 @@ pub mod wasi_only {\n \n // the portability header is different on the module view versus the full view\n // @has doc_cfg/index.html\n-// @matches - '//*[@class=\"module-item\"]//*[@class=\"stab portability\"]' '\\Aavx\\Z'\n+// @matches - '//*[@class=\"item-right docblock-short\"]//*[@class=\"stab portability\"]' '\\Aavx\\Z'\n \n // @has doc_cfg/fn.uses_target_feature.html\n // @has - '//*[@id=\"main\"]/*[@class=\"item-info\"]/*[@class=\"stab portability\"]' \\"}, {"sha": "e3241a8746ec50ccec3dbf17b3104431e8ccd9b6", "filename": "src/test/rustdoc/duplicate-cfg.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Ftest%2Frustdoc%2Fduplicate-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Ftest%2Frustdoc%2Fduplicate-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fduplicate-cfg.rs?ref=7c3872e6bfd555d2ad753ac1f871db3bd7f2a547", "patch": "@@ -2,8 +2,8 @@\n #![feature(doc_cfg)]\n \n // @has 'foo/index.html'\n-// @matches '-' '//*[@class=\"module-item\"]//*[@class=\"stab portability\"]' '^sync$'\n-// @has '-' '//*[@class=\"module-item\"]//*[@class=\"stab portability\"]/@title' 'This is supported on crate feature `sync` only'\n+// @matches '-' '//*[@class=\"item-right docblock-short\"]//*[@class=\"stab portability\"]' '^sync$'\n+// @has '-' '//*[@class=\"item-right docblock-short\"]//*[@class=\"stab portability\"]/@title' 'This is supported on crate feature `sync` only'\n \n // @has 'foo/struct.Foo.html'\n // @has '-' '//*[@class=\"stab portability\"]' 'sync'"}, {"sha": "601797fd64c9d09393f9b61760773e3d4b092989", "filename": "src/test/rustdoc/inline_cross/macros.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Ftest%2Frustdoc%2Finline_cross%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Ftest%2Frustdoc%2Finline_cross%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_cross%2Fmacros.rs?ref=7c3872e6bfd555d2ad753ac1f871db3bd7f2a547", "patch": "@@ -7,8 +7,8 @@\n \n extern crate macros;\n \n-// @has foo/index.html '//*[@class=\"docblock-short\"]/span[@class=\"stab deprecated\"]' Deprecated\n-// @has - '//*[@class=\"docblock-short\"]/span[@class=\"stab unstable\"]' Experimental\n+// @has foo/index.html '//*[@class=\"item-right docblock-short\"]/span[@class=\"stab deprecated\"]' Deprecated\n+// @has - '//*[@class=\"item-right docblock-short\"]/span[@class=\"stab unstable\"]' Experimental\n \n // @has foo/macro.my_macro.html\n // @has - '//*[@class=\"docblock\"]' 'docs for my_macro'"}, {"sha": "f316eb24a48514067dd5b5ad16e7201702c432a7", "filename": "src/test/rustdoc/internal.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Ftest%2Frustdoc%2Finternal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Ftest%2Frustdoc%2Finternal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finternal.rs?ref=7c3872e6bfd555d2ad753ac1f871db3bd7f2a547", "patch": "@@ -2,9 +2,11 @@\n \n // Check that the unstable marker is not added for \"rustc_private\".\n \n-// @!matches internal/index.html '//*[@class=\"docblock-short\"]/span[@class=\"stab unstable\"]'\n-// @!matches internal/index.html '//*[@class=\"docblock-short\"]/span[@class=\"stab internal\"]'\n-// @matches - '//*[@class=\"docblock-short\"]' 'Docs'\n+// @!matches internal/index.html \\\n+//      '//*[@class=\"item-right docblock-short\"]/span[@class=\"stab unstable\"]'\n+// @!matches internal/index.html \\\n+//      '//*[@class=\"item-right docblock-short\"]/span[@class=\"stab internal\"]'\n+// @matches - '//*[@class=\"item-right docblock-short\"]' 'Docs'\n \n // @!has internal/struct.S.html '//*[@class=\"stab unstable\"]'\n // @!has internal/struct.S.html '//*[@class=\"stab internal\"]'"}, {"sha": "604451eb7e8e0c77401e88a455d3203e605f699e", "filename": "src/test/rustdoc/issue-32374.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Ftest%2Frustdoc%2Fissue-32374.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Ftest%2Frustdoc%2Fissue-32374.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-32374.rs?ref=7c3872e6bfd555d2ad753ac1f871db3bd7f2a547", "patch": "@@ -1,17 +1,17 @@\n #![feature(staged_api)]\n-#![doc(issue_tracker_base_url = \"http://issue_url/\")]\n+#![doc(issue_tracker_base_url = \"https://issue_url/\")]\n \n #![unstable(feature=\"test\", issue = \"32374\")]\n \n-// @matches issue_32374/index.html '//*[@class=\"docblock-short\"]/span[@class=\"stab deprecated\"]' \\\n+// @matches issue_32374/index.html '//*[@class=\"item-right docblock-short\"]/span[@class=\"stab deprecated\"]' \\\n //      'Deprecated'\n-// @matches issue_32374/index.html '//*[@class=\"docblock-short\"]/span[@class=\"stab unstable\"]' \\\n+// @matches issue_32374/index.html '//*[@class=\"item-right docblock-short\"]/span[@class=\"stab unstable\"]' \\\n //      'Experimental'\n-// @matches issue_32374/index.html '//*[@class=\"docblock-short\"]/text()' 'Docs'\n+// @matches issue_32374/index.html '//*[@class=\"item-right docblock-short\"]/text()' 'Docs'\n \n // @has issue_32374/struct.T.html '//*[@class=\"stab deprecated\"]' \\\n //      '\ud83d\udc4e Deprecated since 1.0.0: text'\n-// @has - '<code>test</code>&nbsp;<a href=\"http://issue_url/32374\">#32374</a>'\n+// @has - '<code>test</code>&nbsp;<a href=\"https://issue_url/32374\">#32374</a>'\n // @matches issue_32374/struct.T.html '//*[@class=\"stab unstable\"]' \\\n //      '\ud83d\udd2c This is a nightly-only experimental API. \\(test\\s#32374\\)$'\n /// Docs"}, {"sha": "4489f038c5934f5f45560db327292c1956fd6edf", "filename": "src/test/rustdoc/issue-46377.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Ftest%2Frustdoc%2Fissue-46377.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Ftest%2Frustdoc%2Fissue-46377.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-46377.rs?ref=7c3872e6bfd555d2ad753ac1f871db3bd7f2a547", "patch": "@@ -1,3 +1,3 @@\n-// @has 'issue_46377/index.html' '//*[@class=\"docblock-short\"]' 'Check out this struct!'\n+// @has 'issue_46377/index.html' '//*[@class=\"item-right docblock-short\"]' 'Check out this struct!'\n /// # Check out this struct!\n pub struct SomeStruct;"}, {"sha": "70aa10767b270ca6552678ac642d19438b5c7656", "filename": "src/test/rustdoc/issue-55364.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Ftest%2Frustdoc%2Fissue-55364.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Ftest%2Frustdoc%2Fissue-55364.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-55364.rs?ref=7c3872e6bfd555d2ad753ac1f871db3bd7f2a547", "patch": "@@ -29,8 +29,8 @@ pub mod subone {\n // @has - '//section[@id=\"main\"]/details/div[@class=\"docblock\"]//a[@href=\"../fn.foo.html\"]' 'foo'\n // @has - '//section[@id=\"main\"]/details/div[@class=\"docblock\"]//a[@href=\"../fn.bar.html\"]' 'bar'\n // Though there should be such links later\n-// @has - '//section[@id=\"main\"]/table//tr[@class=\"module-item\"]/td/a[@class=\"fn\"][@href=\"fn.foo.html\"]' 'foo'\n-// @has - '//section[@id=\"main\"]/table//tr[@class=\"module-item\"]/td/a[@class=\"fn\"][@href=\"fn.bar.html\"]' 'bar'\n+// @has - '//section[@id=\"main\"]/div[@class=\"item-table\"]//div[@class=\"item-left module-item\"]/a[@class=\"fn\"][@href=\"fn.foo.html\"]' 'foo'\n+// @has - '//section[@id=\"main\"]/div[@class=\"item-table\"]//div[@class=\"item-left module-item\"]/a[@class=\"fn\"][@href=\"fn.bar.html\"]' 'bar'\n /// See either [foo] or [bar].\n pub mod subtwo {\n \n@@ -68,8 +68,8 @@ pub mod subthree {\n // Next we go *deeper* - In order to ensure it's not just \"this or parent\"\n // we test `crate::` and a `super::super::...` chain\n // @has issue_55364/subfour/subfive/subsix/subseven/subeight/index.html\n-// @has - '//section[@id=\"main\"]/table//tr[@class=\"module-item\"]/td[@class=\"docblock-short\"]//a[@href=\"../../../../../subone/fn.foo.html\"]' 'other foo'\n-// @has - '//section[@id=\"main\"]/table//tr[@class=\"module-item\"]/td[@class=\"docblock-short\"]//a[@href=\"../../../../../subtwo/fn.bar.html\"]' 'other bar'\n+// @has - '//section[@id=\"main\"]/div[@class=\"item-table\"]//div[@class=\"item-right docblock-short\"]//a[@href=\"../../../../../subone/fn.foo.html\"]' 'other foo'\n+// @has - '//section[@id=\"main\"]/div[@class=\"item-table\"]//div[@class=\"item-right docblock-short\"]//a[@href=\"../../../../../subtwo/fn.bar.html\"]' 'other bar'\n pub mod subfour {\n     pub mod subfive {\n         pub mod subsix {"}, {"sha": "db1f90c69997855b7ad6ad078104eb484f98d8d5", "filename": "src/test/rustdoc/reexport-check.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Ftest%2Frustdoc%2Freexport-check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Ftest%2Frustdoc%2Freexport-check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Freexport-check.rs?ref=7c3872e6bfd555d2ad753ac1f871db3bd7f2a547", "patch": "@@ -4,15 +4,15 @@\n extern crate reexport_check;\n \n // @!has 'foo/index.html' '//code' 'pub use self::i32;'\n-// @has 'foo/index.html' '//tr[@class=\"deprecated module-item\"]' 'i32'\n+// @has 'foo/index.html' '//div[@class=\"item-left deprecated module-item\"]' 'i32'\n // @has 'foo/i32/index.html'\n #[allow(deprecated, deprecated_in_future)]\n pub use std::i32;\n // @!has 'foo/index.html' '//code' 'pub use self::string::String;'\n-// @has 'foo/index.html' '//tr[@class=\"module-item\"]' 'String'\n+// @has 'foo/index.html' '//div[@class=\"item-left module-item\"]' 'String'\n pub use std::string::String;\n \n-// @has 'foo/index.html' '//td[@class=\"docblock-short\"]' 'Docs in original'\n+// @has 'foo/index.html' '//div[@class=\"item-right docblock-short\"]' 'Docs in original'\n // this is a no-op, but shows what happens if there's an attribute that isn't a doc-comment\n #[doc(inline)]\n pub use reexport_check::S;"}, {"sha": "c6b318b0677cea5f7ebae71bdd13900a21a56787", "filename": "src/test/rustdoc/short-docblock-codeblock.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Ftest%2Frustdoc%2Fshort-docblock-codeblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Ftest%2Frustdoc%2Fshort-docblock-codeblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fshort-docblock-codeblock.rs?ref=7c3872e6bfd555d2ad753ac1f871db3bd7f2a547", "patch": "@@ -1,8 +1,8 @@\n #![crate_name = \"foo\"]\n \n-// @has foo/index.html '//*[@class=\"module-item\"]//td[@class=\"docblock-short\"]' \"\"\n-// @!has foo/index.html '//*[@id=\"module-item\"]//td[@class=\"docblock-short\"]' \"Some text.\"\n-// @!has foo/index.html '//*[@id=\"module-item\"]//td[@class=\"docblock-short\"]' \"let x = 12;\"\n+// @has foo/index.html '//*[@class=\"item-right docblock-short\"]' \"\"\n+// @!has foo/index.html '//*[@class=\"item-right docblock-short\"]' \"Some text.\"\n+// @!has foo/index.html '//*[@class=\"item-right docblock-short\"]' \"let x = 12;\"\n \n /// ```\n /// let x = 12;"}, {"sha": "74fa783174da84464d3e943cd041466781b83bcb", "filename": "src/test/rustdoc/short-docblock.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Ftest%2Frustdoc%2Fshort-docblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c3872e6bfd555d2ad753ac1f871db3bd7f2a547/src%2Ftest%2Frustdoc%2Fshort-docblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fshort-docblock.rs?ref=7c3872e6bfd555d2ad753ac1f871db3bd7f2a547", "patch": "@@ -0,0 +1,25 @@\n+#![crate_name = \"foo\"]\n+\n+// @has foo/index.html '//*[@class=\"item-right docblock-short\"]/p' 'fooo'\n+// @!has foo/index.html '//*[@class=\"item-right docblock-short\"]/p/h1' 'fooo'\n+// @has foo/fn.foo.html '//h1[@id=\"fooo\"]/a[@href=\"#fooo\"]' 'fooo'\n+\n+/// # fooo\n+///\n+/// foo\n+pub fn foo() {}\n+\n+// @has foo/index.html '//*[@class=\"item-right docblock-short\"]/p' 'mooood'\n+// @!has foo/index.html '//*[@class=\"item-right docblock-short\"]/p/h2' 'mooood'\n+// @has foo/foo/index.html '//h2[@id=\"mooood\"]/a[@href=\"#mooood\"]' 'mooood'\n+\n+/// ## mooood\n+///\n+/// foo mod\n+pub mod foo {}\n+\n+// @has foo/index.html '//*[@class=\"item-right docblock-short\"]/p/a[@href=\\\n+//                      \"https://nougat.world\"]/code' 'nougat'\n+\n+/// [`nougat`](https://nougat.world)\n+pub struct Bar;"}, {"sha": "5493bca54c5dced59e1de25d76c41ee4b07f65c7", "filename": "src/test/rustdoc/short-dockblock.rs", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/cbeda5cbeb9a3b92a1df997869a49d9584ca10c2/src%2Ftest%2Frustdoc%2Fshort-dockblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbeda5cbeb9a3b92a1df997869a49d9584ca10c2/src%2Ftest%2Frustdoc%2Fshort-dockblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fshort-dockblock.rs?ref=cbeda5cbeb9a3b92a1df997869a49d9584ca10c2", "patch": "@@ -1,25 +0,0 @@\n-#![crate_name = \"foo\"]\n-\n-// @has foo/index.html '//*[@class=\"docblock-short\"]/p' 'fooo'\n-// @!has foo/index.html '//*[@class=\"docblock-short\"]/p/h1' 'fooo'\n-// @has foo/fn.foo.html '//h1[@id=\"fooo\"]/a[@href=\"#fooo\"]' 'fooo'\n-\n-/// # fooo\n-///\n-/// foo\n-pub fn foo() {}\n-\n-// @has foo/index.html '//*[@class=\"docblock-short\"]/p' 'mooood'\n-// @!has foo/index.html '//*[@class=\"docblock-short\"]/p/h2' 'mooood'\n-// @has foo/foo/index.html '//h2[@id=\"mooood\"]/a[@href=\"#mooood\"]' 'mooood'\n-\n-/// ## mooood\n-///\n-/// foo mod\n-pub mod foo {}\n-\n-// @has foo/index.html '//*[@class=\"docblock-short\"]/p/a[@href=\\\n-//                      \"https://nougat.world\"]/code' 'nougat'\n-\n-/// [`nougat`](https://nougat.world)\n-pub struct Bar;"}]}