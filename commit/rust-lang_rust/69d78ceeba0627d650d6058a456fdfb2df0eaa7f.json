{"sha": "69d78ceeba0627d650d6058a456fdfb2df0eaa7f", "node_id": "C_kwDOAAsO6NoAKDY5ZDc4Y2VlYmEwNjI3ZDY1MGQ2MDU4YTQ1NmZkZmIyZGYwZWFhN2Y", "commit": {"author": {"name": "Marek Downar", "email": "marek.downar@evomedia.pl", "date": "2022-01-17T11:34:03Z"}, "committer": {"name": "Marek Downar", "email": "marek.downar@evomedia.pl", "date": "2022-01-17T11:34:03Z"}, "message": "removing unsafe from test fn's && renaming shrink to sugg_span", "tree": {"sha": "59d5ee11d3bc918d818c14409696e89edc1e114b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59d5ee11d3bc918d818c14409696e89edc1e114b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69d78ceeba0627d650d6058a456fdfb2df0eaa7f", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQSzz0WgAyQDeHzM2Qxi1+PvccqFsgUCYeVUKwAKCRBi1+PvccqF\nsmOxAP99S+3p4IA1ofyJIIfqHPxnOaKgVncPZjI72eVh5aqpXQEA0TbYkZxIA1f1\nB7m4Z4WsXwQE730hrS6GikQki0q2VwA=\n=Fdlr\n-----END PGP SIGNATURE-----", "payload": "tree 59d5ee11d3bc918d818c14409696e89edc1e114b\nparent 49502727e7db97055d04c7f06e04b73b05fdb7e2\nauthor Marek Downar <marek.downar@evomedia.pl> 1642419243 +0100\ncommitter Marek Downar <marek.downar@evomedia.pl> 1642419243 +0100\n\nremoving unsafe from test fn's && renaming shrink to sugg_span\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69d78ceeba0627d650d6058a456fdfb2df0eaa7f", "html_url": "https://github.com/rust-lang/rust/commit/69d78ceeba0627d650d6058a456fdfb2df0eaa7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69d78ceeba0627d650d6058a456fdfb2df0eaa7f/comments", "author": {"login": "marekdownar", "id": 1872953, "node_id": "MDQ6VXNlcjE4NzI5NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1872953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marekdownar", "html_url": "https://github.com/marekdownar", "followers_url": "https://api.github.com/users/marekdownar/followers", "following_url": "https://api.github.com/users/marekdownar/following{/other_user}", "gists_url": "https://api.github.com/users/marekdownar/gists{/gist_id}", "starred_url": "https://api.github.com/users/marekdownar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marekdownar/subscriptions", "organizations_url": "https://api.github.com/users/marekdownar/orgs", "repos_url": "https://api.github.com/users/marekdownar/repos", "events_url": "https://api.github.com/users/marekdownar/events{/privacy}", "received_events_url": "https://api.github.com/users/marekdownar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marekdownar", "id": 1872953, "node_id": "MDQ6VXNlcjE4NzI5NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1872953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marekdownar", "html_url": "https://github.com/marekdownar", "followers_url": "https://api.github.com/users/marekdownar/followers", "following_url": "https://api.github.com/users/marekdownar/following{/other_user}", "gists_url": "https://api.github.com/users/marekdownar/gists{/gist_id}", "starred_url": "https://api.github.com/users/marekdownar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marekdownar/subscriptions", "organizations_url": "https://api.github.com/users/marekdownar/orgs", "repos_url": "https://api.github.com/users/marekdownar/repos", "events_url": "https://api.github.com/users/marekdownar/events{/privacy}", "received_events_url": "https://api.github.com/users/marekdownar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49502727e7db97055d04c7f06e04b73b05fdb7e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/49502727e7db97055d04c7f06e04b73b05fdb7e2", "html_url": "https://github.com/rust-lang/rust/commit/49502727e7db97055d04c7f06e04b73b05fdb7e2"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "448dc4e6147ffb97470ad021a674bab68c8ed432", "filename": "clippy_lints/src/methods/or_fun_call.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/69d78ceeba0627d650d6058a456fdfb2df0eaa7f/clippy_lints%2Fsrc%2Fmethods%2For_fun_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69d78ceeba0627d650d6058a456fdfb2df0eaa7f/clippy_lints%2Fsrc%2Fmethods%2For_fun_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2For_fun_call.rs?ref=69d78ceeba0627d650d6058a456fdfb2df0eaa7f", "patch": "@@ -56,7 +56,7 @@ pub(super) fn check<'tcx>(\n             then {\n                 let mut applicability = Applicability::MachineApplicable;\n                 let hint = \"unwrap_or_default()\";\n-                let mut shrink = span;\n+                let mut sugg_span = span;\n \n                 let mut sugg: String = format!(\n                     \"{}.{}\",\n@@ -65,14 +65,14 @@ pub(super) fn check<'tcx>(\n                 );\n \n                 if sugg.lines().count() > MAX_SUGGESTION_HIGHLIGHT_LINES {\n-                    shrink = method_span.with_hi(span.hi());\n+                    sugg_span = method_span.with_hi(span.hi());\n                     sugg = hint.to_string();\n                 }\n \n                 span_lint_and_sugg(\n                     cx,\n                     OR_FUN_CALL,\n-                    shrink,\n+                    sugg_span,\n                     &format!(\"use of `{}` followed by a call to `{}`\", name, path),\n                     \"try this\",\n                     sugg,"}, {"sha": "3208048e0d53c82e87407376138c0d0923db3bef", "filename": "tests/ui/or_fun_call.fixed", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/69d78ceeba0627d650d6058a456fdfb2df0eaa7f/tests%2Fui%2For_fun_call.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/69d78ceeba0627d650d6058a456fdfb2df0eaa7f/tests%2Fui%2For_fun_call.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2For_fun_call.fixed?ref=69d78ceeba0627d650d6058a456fdfb2df0eaa7f", "patch": "@@ -177,7 +177,7 @@ mod issue6675 {\n }\n \n mod issue8239 {\n-    unsafe fn more_than_max_suggestion_highest_lines_0() {\n+    fn more_than_max_suggestion_highest_lines_0() {\n         let frames = Vec::new();\n         frames\n             .iter()\n@@ -189,7 +189,7 @@ mod issue8239 {\n             .unwrap_or_default();\n     }\n \n-    unsafe fn more_to_max_suggestion_highest_lines_1() {\n+    fn more_to_max_suggestion_highest_lines_1() {\n         let frames = Vec::new();\n         let iter = frames.iter();\n         iter.map(|f: &String| f.to_lowercase())\n@@ -202,7 +202,7 @@ mod issue8239 {\n             .unwrap_or_default();\n     }\n \n-    unsafe fn equal_to_max_suggestion_highest_lines() {\n+    fn equal_to_max_suggestion_highest_lines() {\n         let frames = Vec::new();\n         let iter = frames.iter();\n         iter.map(|f: &String| f.to_lowercase())\n@@ -213,7 +213,7 @@ mod issue8239 {\n             }).unwrap_or_default();\n     }\n \n-    unsafe fn less_than_max_suggestion_highest_lines() {\n+    fn less_than_max_suggestion_highest_lines() {\n         let frames = Vec::new();\n         let iter = frames.iter();\n         let map = iter.map(|f: &String| f.to_lowercase());"}, {"sha": "57ab5f03ee2851318b3ba58d9fcc2c72d23e442e", "filename": "tests/ui/or_fun_call.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/69d78ceeba0627d650d6058a456fdfb2df0eaa7f/tests%2Fui%2For_fun_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69d78ceeba0627d650d6058a456fdfb2df0eaa7f/tests%2Fui%2For_fun_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2For_fun_call.rs?ref=69d78ceeba0627d650d6058a456fdfb2df0eaa7f", "patch": "@@ -177,7 +177,7 @@ mod issue6675 {\n }\n \n mod issue8239 {\n-    unsafe fn more_than_max_suggestion_highest_lines_0() {\n+    fn more_than_max_suggestion_highest_lines_0() {\n         let frames = Vec::new();\n         frames\n             .iter()\n@@ -189,7 +189,7 @@ mod issue8239 {\n             .unwrap_or(String::new());\n     }\n \n-    unsafe fn more_to_max_suggestion_highest_lines_1() {\n+    fn more_to_max_suggestion_highest_lines_1() {\n         let frames = Vec::new();\n         let iter = frames.iter();\n         iter.map(|f: &String| f.to_lowercase())\n@@ -202,7 +202,7 @@ mod issue8239 {\n             .unwrap_or(String::new());\n     }\n \n-    unsafe fn equal_to_max_suggestion_highest_lines() {\n+    fn equal_to_max_suggestion_highest_lines() {\n         let frames = Vec::new();\n         let iter = frames.iter();\n         iter.map(|f: &String| f.to_lowercase())\n@@ -214,7 +214,7 @@ mod issue8239 {\n             .unwrap_or(String::new());\n     }\n \n-    unsafe fn less_than_max_suggestion_highest_lines() {\n+    fn less_than_max_suggestion_highest_lines() {\n         let frames = Vec::new();\n         let iter = frames.iter();\n         let map = iter.map(|f: &String| f.to_lowercase());"}]}