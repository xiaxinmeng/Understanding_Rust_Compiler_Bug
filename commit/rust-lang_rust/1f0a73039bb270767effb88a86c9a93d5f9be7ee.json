{"sha": "1f0a73039bb270767effb88a86c9a93d5f9be7ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmMGE3MzAzOWJiMjcwNzY3ZWZmYjg4YTg2YzlhOTNkNWY5YmU3ZWU=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-12-15T09:17:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-12-15T09:17:40Z"}, "message": "Rollup merge of #56792 - phansch:add_compiletest_testsuite, r=alexcrichton\n\nBootstrap: Add testsuite for compiletest tool\n\nThis adds a test suite for compiletest so that the tester is tested, too.\n\nThe (currently) single unit test of the compiletest tool was never executed\non CI. At least I couldn't find any references of it in the logs.\n\nThe compiletest tests can then also be executed with:\n\n    ./x.py test src/tools/compiletest --stage 0\n\ncc #47606", "tree": {"sha": "2401a384afc283b550eee73bfede4869aa3a6611", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2401a384afc283b550eee73bfede4869aa3a6611"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f0a73039bb270767effb88a86c9a93d5f9be7ee", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcFMa1CRBK7hj4Ov3rIwAAdHIIAEW51v6if/e85bKjxKX/6iEQ\n0AHNpXKBrXJVFnkRL9pHDiGRhSlFwTzvmCLttQJkIvmV9z3xjya7CzrKmF3ZNVFb\n66e/ZBqDvHzUJz7G7A+EyT2PunYlPlv9FPZNnlu8+FvyQKjT08J96Ih+53QqpzOE\nhmq07d46bbqumrWZ0ncNyPz9jgT5J8nnhhBx6bh8Iq1VlUVMVuPJhNhd52wJUy7p\nhq1/0dft3sUPLU40xskWWH5UKZuIvJw8mClBhWs03NpHtS+VdsXkjcuqCqJeVyXu\nOaFgtaKe23nriqwzf12B+wJ3uZBb52y6Tg70sbi06YORWsomPK6zTiLzgliDE2Q=\n=KsGq\n-----END PGP SIGNATURE-----\n", "payload": "tree 2401a384afc283b550eee73bfede4869aa3a6611\nparent 1116546e170dcc2951a541ebe38855ae746d8847\nparent c435357bc9c6b3ed7028dbe2f727c921065d7378\nauthor Pietro Albini <pietro@pietroalbini.org> 1544865460 +0100\ncommitter GitHub <noreply@github.com> 1544865460 +0100\n\nRollup merge of #56792 - phansch:add_compiletest_testsuite, r=alexcrichton\n\nBootstrap: Add testsuite for compiletest tool\n\nThis adds a test suite for compiletest so that the tester is tested, too.\n\nThe (currently) single unit test of the compiletest tool was never executed\non CI. At least I couldn't find any references of it in the logs.\n\nThe compiletest tests can then also be executed with:\n\n    ./x.py test src/tools/compiletest --stage 0\n\ncc #47606\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f0a73039bb270767effb88a86c9a93d5f9be7ee", "html_url": "https://github.com/rust-lang/rust/commit/1f0a73039bb270767effb88a86c9a93d5f9be7ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f0a73039bb270767effb88a86c9a93d5f9be7ee/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1116546e170dcc2951a541ebe38855ae746d8847", "url": "https://api.github.com/repos/rust-lang/rust/commits/1116546e170dcc2951a541ebe38855ae746d8847", "html_url": "https://github.com/rust-lang/rust/commit/1116546e170dcc2951a541ebe38855ae746d8847"}, {"sha": "c435357bc9c6b3ed7028dbe2f727c921065d7378", "url": "https://api.github.com/repos/rust-lang/rust/commits/c435357bc9c6b3ed7028dbe2f727c921065d7378", "html_url": "https://github.com/rust-lang/rust/commit/c435357bc9c6b3ed7028dbe2f727c921065d7378"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "c1d56865da55ceada06595b80834d42ebc827e5b", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f0a73039bb270767effb88a86c9a93d5f9be7ee/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f0a73039bb270767effb88a86c9a93d5f9be7ee/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=1f0a73039bb270767effb88a86c9a93d5f9be7ee", "patch": "@@ -416,6 +416,7 @@ impl<'a> Builder<'a> {\n                 test::Rustfmt,\n                 test::Miri,\n                 test::Clippy,\n+                test::CompiletestTest,\n                 test::RustdocJS,\n                 test::RustdocTheme,\n                 // Run bootstrap close to the end as it's unlikely to fail"}, {"sha": "87d5737e2a0a2202ad89adf38a826442d7e30b74", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/1f0a73039bb270767effb88a86c9a93d5f9be7ee/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f0a73039bb270767effb88a86c9a93d5f9be7ee/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=1f0a73039bb270767effb88a86c9a93d5f9be7ee", "patch": "@@ -429,6 +429,45 @@ impl Step for Miri {\n     }\n }\n \n+#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n+pub struct CompiletestTest {\n+    stage: u32,\n+    host: Interned<String>,\n+}\n+\n+impl Step for CompiletestTest {\n+    type Output = ();\n+\n+    fn should_run(run: ShouldRun) -> ShouldRun {\n+        run.path(\"src/tools/compiletest\")\n+    }\n+\n+    fn make_run(run: RunConfig) {\n+        run.builder.ensure(CompiletestTest {\n+            stage: run.builder.top_stage,\n+            host: run.target,\n+        });\n+    }\n+\n+    /// Runs `cargo test` for compiletest.\n+    fn run(self, builder: &Builder) {\n+        let stage = self.stage;\n+        let host = self.host;\n+        let compiler = builder.compiler(stage, host);\n+\n+        let mut cargo = tool::prepare_tool_cargo(builder,\n+                                                 compiler,\n+                                                 Mode::ToolBootstrap,\n+                                                 host,\n+                                                 \"test\",\n+                                                 \"src/tools/compiletest\",\n+                                                 SourceType::InTree,\n+                                                 &[]);\n+\n+        try_run(builder, &mut cargo);\n+    }\n+}\n+\n #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n pub struct Clippy {\n     stage: u32,"}]}