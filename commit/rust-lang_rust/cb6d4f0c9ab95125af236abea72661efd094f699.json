{"sha": "cb6d4f0c9ab95125af236abea72661efd094f699", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiNmQ0ZjBjOWFiOTUxMjVhZjIzNmFiZWE3MjY2MWVmZDA5NGY2OTk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-30T19:23:48Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-30T19:23:48Z"}, "message": "test even more size-alignment combinations. found a bug in libstd!", "tree": {"sha": "7de2d67977d1e05111411b037ff5339deb0dfe1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7de2d67977d1e05111411b037ff5339deb0dfe1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb6d4f0c9ab95125af236abea72661efd094f699", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb6d4f0c9ab95125af236abea72661efd094f699", "html_url": "https://github.com/rust-lang/rust/commit/cb6d4f0c9ab95125af236abea72661efd094f699", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb6d4f0c9ab95125af236abea72661efd094f699/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "709b4748599881184f4f03137d1b81ea160d5dd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/709b4748599881184f4f03137d1b81ea160d5dd1", "html_url": "https://github.com/rust-lang/rust/commit/709b4748599881184f4f03137d1b81ea160d5dd1"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "be104ed0b2ba3b6335965b149be67d075a139893", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cb6d4f0c9ab95125af236abea72661efd094f699/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/cb6d4f0c9ab95125af236abea72661efd094f699/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=cb6d4f0c9ab95125af236abea72661efd094f699", "patch": "@@ -333,6 +333,7 @@ Definite bugs found:\n * [Futures turning a shared reference into a mutable one](https://github.com/rust-lang/rust/pull/56319)\n * [`str` turning a shared reference into a mutable one](https://github.com/rust-lang/rust/pull/58200)\n * [`rand` performing unaligned reads](https://github.com/rust-random/rand/issues/779)\n+* [The Unix allocator calling `posix_memalign` in an invalid way](https://github.com/rust-lang/rust/issues/62251)\n \n Violations of Stacked Borrows found that are likely bugs (but Stacked Borrows is currently just an experiment):\n "}, {"sha": "1a39df9cce15f996dda922c9a2ea5461d0050d04", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cb6d4f0c9ab95125af236abea72661efd094f699/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb6d4f0c9ab95125af236abea72661efd094f699/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=cb6d4f0c9ab95125af236abea72661efd094f699", "patch": "@@ -203,12 +203,16 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 if !align.is_power_of_two() {\n                     return err!(HeapAllocNonPowerOfTwoAlignment(align));\n                 }\n+                /*\n+                FIXME: This check is disabled because rustc violates it.\n+                See <https://github.com/rust-lang/rust/issues/62251>.\n                 if align < this.pointer_size().bytes() {\n                     return err!(MachineError(format!(\n                         \"posix_memalign: alignment must be at least the size of a pointer, but is {}\",\n                         align,\n                     )));\n                 }\n+                */\n                 if size == 0 {\n                     this.write_null(ret.into())?;\n                 } else {"}, {"sha": "2f3a48f535ddd186c5aa8134a6212da9dcc9eb5b", "filename": "tests/run-pass/heap_allocator.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/cb6d4f0c9ab95125af236abea72661efd094f699/tests%2Frun-pass%2Fheap_allocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb6d4f0c9ab95125af236abea72661efd094f699/tests%2Frun-pass%2Fheap_allocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fheap_allocator.rs?ref=cb6d4f0c9ab95125af236abea72661efd094f699", "patch": "@@ -42,23 +42,23 @@ fn check_alloc<T: Alloc>(mut allocator: T) { unsafe {\n } }\n \n fn check_overalign_requests<T: Alloc>(mut allocator: T) {\n-    let size = 8;\n-    // Greater than `size`, and also greater than `MIN_ALIGN`.\n-    let align = 32;\n+    for &size in &[2, 8, 64] { // size less than and bigger than alignment\n+        for &align in &[4, 8, 16, 32] { // Be sure to cover less than and bigger than `MIN_ALIGN` for all architectures\n+            let iterations = 32;\n+            unsafe {\n+                let pointers: Vec<_> = (0..iterations).map(|_| {\n+                    allocator.alloc(Layout::from_size_align(size, align).unwrap()).unwrap()\n+                }).collect();\n+                for &ptr in &pointers {\n+                    assert_eq!((ptr.as_ptr() as usize) % align, 0,\n+                            \"Got a pointer less aligned than requested\")\n+                }\n \n-    let iterations = 32;\n-    unsafe {\n-        let pointers: Vec<_> = (0..iterations).map(|_| {\n-            allocator.alloc(Layout::from_size_align(size, align).unwrap()).unwrap()\n-        }).collect();\n-        for &ptr in &pointers {\n-            assert_eq!((ptr.as_ptr() as usize) % align, 0,\n-                       \"Got a pointer less aligned than requested\")\n-        }\n-\n-        // Clean up.\n-        for &ptr in &pointers {\n-            allocator.dealloc(ptr, Layout::from_size_align(size, align).unwrap())\n+                // Clean up.\n+                for &ptr in &pointers {\n+                    allocator.dealloc(ptr, Layout::from_size_align(size, align).unwrap())\n+                }\n+            }\n         }\n     }\n }"}]}