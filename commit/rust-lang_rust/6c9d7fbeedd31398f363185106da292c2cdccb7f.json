{"sha": "6c9d7fbeedd31398f363185106da292c2cdccb7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjOWQ3ZmJlZWRkMzEzOThmMzYzMTg1MTA2ZGEyOTJjMmNkY2NiN2Y=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-02-14T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-02-16T22:34:50Z"}, "message": "Add size assertions for interpreter data structures", "tree": {"sha": "d8d72580eae457df02e7dd2a5c8176f499a55344", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8d72580eae457df02e7dd2a5c8176f499a55344"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c9d7fbeedd31398f363185106da292c2cdccb7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c9d7fbeedd31398f363185106da292c2cdccb7f", "html_url": "https://github.com/rust-lang/rust/commit/6c9d7fbeedd31398f363185106da292c2cdccb7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c9d7fbeedd31398f363185106da292c2cdccb7f/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a143517d44cac50b20cbd3a0b579addab40dd399", "url": "https://api.github.com/repos/rust-lang/rust/commits/a143517d44cac50b20cbd3a0b579addab40dd399", "html_url": "https://github.com/rust-lang/rust/commit/a143517d44cac50b20cbd3a0b579addab40dd399"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "96fe22cab19e5954985dfd2fe64857741afe2838", "filename": "compiler/rustc_mir/src/interpret/operand.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6c9d7fbeedd31398f363185106da292c2cdccb7f/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c9d7fbeedd31398f363185106da292c2cdccb7f/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Foperand.rs?ref=6c9d7fbeedd31398f363185106da292c2cdccb7f", "patch": "@@ -32,6 +32,9 @@ pub enum Immediate<Tag = ()> {\n     ScalarPair(ScalarMaybeUninit<Tag>, ScalarMaybeUninit<Tag>),\n }\n \n+#[cfg(target_arch = \"x86_64\")]\n+rustc_data_structures::static_assert_size!(Immediate, 56);\n+\n impl<Tag> From<ScalarMaybeUninit<Tag>> for Immediate<Tag> {\n     #[inline(always)]\n     fn from(val: ScalarMaybeUninit<Tag>) -> Self {\n@@ -92,6 +95,9 @@ pub struct ImmTy<'tcx, Tag = ()> {\n     pub layout: TyAndLayout<'tcx>,\n }\n \n+#[cfg(target_arch = \"x86_64\")]\n+rustc_data_structures::static_assert_size!(ImmTy<'_>, 72);\n+\n impl<Tag: Copy> std::fmt::Display for ImmTy<'tcx, Tag> {\n     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n         /// Helper function for printing a scalar to a FmtPrinter\n@@ -156,6 +162,9 @@ pub struct OpTy<'tcx, Tag = ()> {\n     pub layout: TyAndLayout<'tcx>,\n }\n \n+#[cfg(target_arch = \"x86_64\")]\n+rustc_data_structures::static_assert_size!(OpTy<'_, ()>, 80);\n+\n impl<'tcx, Tag> std::ops::Deref for OpTy<'tcx, Tag> {\n     type Target = Operand<Tag>;\n     #[inline(always)]"}, {"sha": "b79b3d92154b204962d697d317557dda671184a1", "filename": "compiler/rustc_mir/src/interpret/place.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6c9d7fbeedd31398f363185106da292c2cdccb7f/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c9d7fbeedd31398f363185106da292c2cdccb7f/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fplace.rs?ref=6c9d7fbeedd31398f363185106da292c2cdccb7f", "patch": "@@ -33,6 +33,9 @@ pub enum MemPlaceMeta<Tag = ()> {\n     Poison,\n }\n \n+#[cfg(target_arch = \"x86_64\")]\n+rustc_data_structures::static_assert_size!(MemPlaceMeta, 24);\n+\n impl<Tag> MemPlaceMeta<Tag> {\n     pub fn unwrap_meta(self) -> Scalar<Tag> {\n         match self {\n@@ -71,6 +74,9 @@ pub struct MemPlace<Tag = ()> {\n     pub meta: MemPlaceMeta<Tag>,\n }\n \n+#[cfg(target_arch = \"x86_64\")]\n+rustc_data_structures::static_assert_size!(MemPlace, 56);\n+\n #[derive(Copy, Clone, Debug, Hash, PartialEq, Eq, HashStable)]\n pub enum Place<Tag = ()> {\n     /// A place referring to a value allocated in the `Memory` system.\n@@ -81,12 +87,18 @@ pub enum Place<Tag = ()> {\n     Local { frame: usize, local: mir::Local },\n }\n \n+#[cfg(target_arch = \"x86_64\")]\n+rustc_data_structures::static_assert_size!(Place, 64);\n+\n #[derive(Copy, Clone, Debug)]\n pub struct PlaceTy<'tcx, Tag = ()> {\n     place: Place<Tag>, // Keep this private; it helps enforce invariants.\n     pub layout: TyAndLayout<'tcx>,\n }\n \n+#[cfg(target_arch = \"x86_64\")]\n+rustc_data_structures::static_assert_size!(PlaceTy<'_>, 80);\n+\n impl<'tcx, Tag> std::ops::Deref for PlaceTy<'tcx, Tag> {\n     type Target = Place<Tag>;\n     #[inline(always)]\n@@ -102,6 +114,9 @@ pub struct MPlaceTy<'tcx, Tag = ()> {\n     pub layout: TyAndLayout<'tcx>,\n }\n \n+#[cfg(target_arch = \"x86_64\")]\n+rustc_data_structures::static_assert_size!(MPlaceTy<'_>, 72);\n+\n impl<'tcx, Tag> std::ops::Deref for MPlaceTy<'tcx, Tag> {\n     type Target = MemPlace<Tag>;\n     #[inline(always)]"}]}