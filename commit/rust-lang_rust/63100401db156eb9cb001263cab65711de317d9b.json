{"sha": "63100401db156eb9cb001263cab65711de317d9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzMTAwNDAxZGIxNTZlYjljYjAwMTI2M2NhYjY1NzExZGUzMTdkOWI=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-09-19T10:56:09Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-09-19T10:56:09Z"}, "message": "Simplify read_primval of {i,u}size.", "tree": {"sha": "6f4764089e5c8227e72f02fe97b4ce50d182b667", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f4764089e5c8227e72f02fe97b4ce50d182b667"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63100401db156eb9cb001263cab65711de317d9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63100401db156eb9cb001263cab65711de317d9b", "html_url": "https://github.com/rust-lang/rust/commit/63100401db156eb9cb001263cab65711de317d9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63100401db156eb9cb001263cab65711de317d9b/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "689bccbed156a60fbbaa41d46db82bb69193584a", "url": "https://api.github.com/repos/rust-lang/rust/commits/689bccbed156a60fbbaa41d46db82bb69193584a", "html_url": "https://github.com/rust-lang/rust/commit/689bccbed156a60fbbaa41d46db82bb69193584a"}], "stats": {"total": 12, "additions": 3, "deletions": 9}, "files": [{"sha": "b097acbfe3aa5be69c07772af9db645ac1097354", "filename": "src/interpreter/mod.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/63100401db156eb9cb001263cab65711de317d9b/src%2Finterpreter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63100401db156eb9cb001263cab65711de317d9b/src%2Finterpreter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fmod.rs?ref=63100401db156eb9cb001263cab65711de317d9b", "patch": "@@ -1021,6 +1021,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                     None => return Err(EvalError::InvalidChar(c as u64)),\n                 }\n             }\n+\n             &ty::TyInt(IntTy::I8)    => PrimVal::I8(self.memory.read_int(ptr, 1)? as i8),\n             &ty::TyInt(IntTy::I16)   => PrimVal::I16(self.memory.read_int(ptr, 2)? as i16),\n             &ty::TyInt(IntTy::I32)   => PrimVal::I32(self.memory.read_int(ptr, 4)? as i32),\n@@ -1030,15 +1031,8 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n             &ty::TyUint(UintTy::U32) => PrimVal::U32(self.memory.read_uint(ptr, 4)? as u32),\n             &ty::TyUint(UintTy::U64) => PrimVal::U64(self.memory.read_uint(ptr, 8)? as u64),\n \n-            &ty::TyInt(IntTy::Is) => {\n-                let psize = self.memory.pointer_size();\n-                self.target_isize_primval(self.memory.read_int(ptr, psize)?)\n-            }\n-\n-            &ty::TyUint(UintTy::Us) => {\n-                let psize = self.memory.pointer_size();\n-                self.target_usize_primval(self.memory.read_uint(ptr, psize)?)\n-            }\n+            &ty::TyInt(IntTy::Is)    => self.target_isize_primval(self.memory.read_isize(ptr)?),\n+            &ty::TyUint(UintTy::Us)  => self.target_usize_primval(self.memory.read_usize(ptr)?),\n \n             &ty::TyFloat(FloatTy::F32) => PrimVal::F32(self.memory.read_f32(ptr)?),\n             &ty::TyFloat(FloatTy::F64) => PrimVal::F64(self.memory.read_f64(ptr)?),"}]}