{"sha": "430feb24a46993e5073c1bb1b39da190d83fa2bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzMGZlYjI0YTQ2OTkzZTUwNzNjMWJiMWIzOWRhMTkwZDgzZmEyYmY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-25T14:17:26Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-25T14:17:26Z"}, "message": "Auto merge of #78253 - Aaron1011:bump-llvm-deadarg, r=cuviper\n\nBump LLVM for DeadArgElim fix\n\nFixes #76387\n\nPulls in https://github.com/rust-lang/llvm-project/pull/82", "tree": {"sha": "e1615de3fc8132c099f4194246c3a2a8211c8f3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1615de3fc8132c099f4194246c3a2a8211c8f3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/430feb24a46993e5073c1bb1b39da190d83fa2bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/430feb24a46993e5073c1bb1b39da190d83fa2bf", "html_url": "https://github.com/rust-lang/rust/commit/430feb24a46993e5073c1bb1b39da190d83fa2bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/430feb24a46993e5073c1bb1b39da190d83fa2bf/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f392479de6b003e72f93cb8f9955b3cf4135c2cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/f392479de6b003e72f93cb8f9955b3cf4135c2cd", "html_url": "https://github.com/rust-lang/rust/commit/f392479de6b003e72f93cb8f9955b3cf4135c2cd"}, {"sha": "d3369e621022e23bfd65dfe48ae669af4a380ac5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3369e621022e23bfd65dfe48ae669af4a380ac5", "html_url": "https://github.com/rust-lang/rust/commit/d3369e621022e23bfd65dfe48ae669af4a380ac5"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "ee1617457899ef2eb55dcf7ee2758b4340b6533f", "filename": "src/llvm-project", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fllvm-project?ref=430feb24a46993e5073c1bb1b39da190d83fa2bf", "patch": "@@ -1 +1 @@\n-Subproject commit 655a1467c98741e332b87661a9046877077ef4dc\n+Subproject commit ee1617457899ef2eb55dcf7ee2758b4340b6533f"}, {"sha": "873d2bedd4d30ceab160005412057f1fac54bfba", "filename": "src/test/ui/auxiliary/issue-76387.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/430feb24a46993e5073c1bb1b39da190d83fa2bf/src%2Ftest%2Fui%2Fauxiliary%2Fissue-76387.rs", "raw_url": "https://github.com/rust-lang/rust/raw/430feb24a46993e5073c1bb1b39da190d83fa2bf/src%2Ftest%2Fui%2Fauxiliary%2Fissue-76387.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauxiliary%2Fissue-76387.rs?ref=430feb24a46993e5073c1bb1b39da190d83fa2bf", "patch": "@@ -0,0 +1,29 @@\n+// compile-flags: -C opt-level=3\n+\n+pub struct FatPtr {\n+    ptr: *mut u8,\n+    len: usize,\n+}\n+\n+impl FatPtr {\n+    pub fn new(len: usize) -> FatPtr {\n+        let ptr = Box::into_raw(vec![42u8; len].into_boxed_slice()) as *mut u8;\n+\n+        FatPtr { ptr, len }\n+    }\n+}\n+\n+impl std::ops::Deref for FatPtr {\n+    type Target = [u8];\n+\n+    #[inline]\n+    fn deref(&self) -> &[u8] {\n+        unsafe { std::slice::from_raw_parts(self.ptr, self.len) }\n+    }\n+}\n+\n+impl std::ops::Drop for FatPtr {\n+    fn drop(&mut self) {\n+        println!(\"Drop\");\n+    }\n+}"}, {"sha": "a9b4686c97021132c920a11e7b6fa57584cf4bab", "filename": "src/test/ui/issue-76387-llvm-miscompile.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/430feb24a46993e5073c1bb1b39da190d83fa2bf/src%2Ftest%2Fui%2Fissue-76387-llvm-miscompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/430feb24a46993e5073c1bb1b39da190d83fa2bf/src%2Ftest%2Fui%2Fissue-76387-llvm-miscompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-76387-llvm-miscompile.rs?ref=430feb24a46993e5073c1bb1b39da190d83fa2bf", "patch": "@@ -0,0 +1,22 @@\n+// no-system-llvm\n+// compile-flags: -C opt-level=3\n+// aux-build: issue-76387.rs\n+// run-pass\n+\n+// Regression test for issue #76387\n+// Tests that LLVM doesn't miscompile this\n+\n+extern crate issue_76387;\n+\n+use issue_76387::FatPtr;\n+\n+fn print(data: &[u8]) {\n+    println!(\"{:#?}\", data);\n+}\n+\n+fn main() {\n+    let ptr = FatPtr::new(20);\n+    let data = unsafe { std::slice::from_raw_parts(ptr.as_ptr(), ptr.len()) };\n+\n+    print(data);\n+}"}]}