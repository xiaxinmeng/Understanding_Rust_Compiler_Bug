{"sha": "043c9721791731bbf7b9d8be354a65ed25b9a6d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0M2M5NzIxNzkxNzMxYmJmN2I5ZDhiZTM1NGE2NWVkMjViOWE2ZDk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-02-25T04:07:01Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-02-25T04:07:01Z"}, "message": "auto merge of #12454 : omasanori/rust/semver-eq, r=alexcrichton\n\nCloses #12438", "tree": {"sha": "882f9759e9b7f5e13834dbcd4f6668ba616b6744", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/882f9759e9b7f5e13834dbcd4f6668ba616b6744"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/043c9721791731bbf7b9d8be354a65ed25b9a6d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/043c9721791731bbf7b9d8be354a65ed25b9a6d9", "html_url": "https://github.com/rust-lang/rust/commit/043c9721791731bbf7b9d8be354a65ed25b9a6d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/043c9721791731bbf7b9d8be354a65ed25b9a6d9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bc7672335bf29f28ef88fedaa4b1abaf370f691", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bc7672335bf29f28ef88fedaa4b1abaf370f691", "html_url": "https://github.com/rust-lang/rust/commit/4bc7672335bf29f28ef88fedaa4b1abaf370f691"}, {"sha": "b0a495f0ae70ebbaa0f74ae21c3a1e94a882c6b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0a495f0ae70ebbaa0f74ae21c3a1e94a882c6b7", "html_url": "https://github.com/rust-lang/rust/commit/b0a495f0ae70ebbaa0f74ae21c3a1e94a882c6b7"}], "stats": {"total": 38, "additions": 25, "deletions": 13}, "files": [{"sha": "700dc9867940ab216bcac363a162b567ead96813", "filename": "src/libsemver/lib.rs", "status": "modified", "additions": 25, "deletions": 13, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/043c9721791731bbf7b9d8be354a65ed25b9a6d9/src%2Flibsemver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/043c9721791731bbf7b9d8be354a65ed25b9a6d9/src%2Flibsemver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsemver%2Flib.rs?ref=043c9721791731bbf7b9d8be354a65ed25b9a6d9", "patch": "@@ -72,7 +72,7 @@ impl fmt::Show for Identifier {\n \n \n /// Represents a version number conforming to the semantic versioning scheme.\n-#[deriving(Clone, Eq)]\n+#[deriving(Clone)]\n pub struct Version {\n     /// The major version, to be incremented on incompatible changes.\n     major: uint,\n@@ -110,6 +110,19 @@ impl fmt::Show for Version {\n     }\n }\n \n+impl cmp::Eq for Version {\n+    #[inline]\n+    fn eq(&self, other: &Version) -> bool {\n+        // We should ignore build metadata here, otherwise versions v1 and v2\n+        // can exist such that !(v1 < v2) && !(v1 > v2) && v1 != v2, which\n+        // violate strict total ordering rules.\n+        self.major == other.major &&\n+            self.minor == other.minor &&\n+            self.patch == other.patch &&\n+            self.pre == other.pre\n+    }\n+}\n+\n impl cmp::Ord for Version {\n     #[inline]\n     fn lt(&self, other: &Version) -> bool {\n@@ -347,6 +360,7 @@ fn test_eq() {\n     assert_eq!(parse(\"1.2.3-alpha1\"), parse(\"1.2.3-alpha1\"));\n     assert_eq!(parse(\"1.2.3+build.42\"), parse(\"1.2.3+build.42\"));\n     assert_eq!(parse(\"1.2.3-alpha1+42\"), parse(\"1.2.3-alpha1+42\"));\n+    assert_eq!(parse(\"1.2.3+23\"), parse(\"1.2.3+42\"));\n }\n \n #[test]\n@@ -355,7 +369,6 @@ fn test_ne() {\n     assert!(parse(\"0.0.0\")       != parse(\"0.1.0\"));\n     assert!(parse(\"0.0.0\")       != parse(\"1.0.0\"));\n     assert!(parse(\"1.2.3-alpha\") != parse(\"1.2.3-beta\"));\n-    assert!(parse(\"1.2.3+23\")    != parse(\"1.2.3+42\"));\n }\n \n #[test]\n@@ -376,11 +389,11 @@ fn test_to_str() {\n \n #[test]\n fn test_lt() {\n-    assert!(parse(\"0.0.0\")        < parse(\"1.2.3-alpha2\"));\n-    assert!(parse(\"1.0.0\")        < parse(\"1.2.3-alpha2\"));\n-    assert!(parse(\"1.2.0\")        < parse(\"1.2.3-alpha2\"));\n-    assert!(parse(\"1.2.3-alpha1\") < parse(\"1.2.3\"));\n-    assert!(parse(\"1.2.3-alpha1\") < parse(\"1.2.3-alpha2\"));\n+    assert!(parse(\"0.0.0\")          < parse(\"1.2.3-alpha2\"));\n+    assert!(parse(\"1.0.0\")          < parse(\"1.2.3-alpha2\"));\n+    assert!(parse(\"1.2.0\")          < parse(\"1.2.3-alpha2\"));\n+    assert!(parse(\"1.2.3-alpha1\")   < parse(\"1.2.3\"));\n+    assert!(parse(\"1.2.3-alpha1\")   < parse(\"1.2.3-alpha2\"));\n     assert!(!(parse(\"1.2.3-alpha2\") < parse(\"1.2.3-alpha2\")));\n     assert!(!(parse(\"1.2.3+23\")     < parse(\"1.2.3+42\")));\n }\n@@ -397,11 +410,11 @@ fn test_le() {\n \n #[test]\n fn test_gt() {\n-    assert!(parse(\"1.2.3-alpha2\") > parse(\"0.0.0\"));\n-    assert!(parse(\"1.2.3-alpha2\") > parse(\"1.0.0\"));\n-    assert!(parse(\"1.2.3-alpha2\") > parse(\"1.2.0\"));\n-    assert!(parse(\"1.2.3-alpha2\") > parse(\"1.2.3-alpha1\"));\n-    assert!(parse(\"1.2.3\")        > parse(\"1.2.3-alpha2\"));\n+    assert!(parse(\"1.2.3-alpha2\")   > parse(\"0.0.0\"));\n+    assert!(parse(\"1.2.3-alpha2\")   > parse(\"1.0.0\"));\n+    assert!(parse(\"1.2.3-alpha2\")   > parse(\"1.2.0\"));\n+    assert!(parse(\"1.2.3-alpha2\")   > parse(\"1.2.3-alpha1\"));\n+    assert!(parse(\"1.2.3\")          > parse(\"1.2.3-alpha2\"));\n     assert!(!(parse(\"1.2.3-alpha2\") > parse(\"1.2.3-alpha2\")));\n     assert!(!(parse(\"1.2.3+23\")     > parse(\"1.2.3+42\")));\n }\n@@ -418,7 +431,6 @@ fn test_ge() {\n \n #[test]\n fn test_spec_order() {\n-\n     let vs = [\"1.0.0-alpha\",\n               \"1.0.0-alpha.1\",\n               \"1.0.0-alpha.beta\","}]}