{"sha": "a31632b30e8aab919397186c08bf1e068dfc04e9", "node_id": "C_kwDOAAsO6NoAKGEzMTYzMmIzMGU4YWFiOTE5Mzk3MTg2YzA4YmYxZTA2OGRmYzA0ZTk", "commit": {"author": {"name": "Miguel Guarniz", "email": "mi9uel9@gmail.com", "date": "2022-04-09T19:55:06Z"}, "committer": {"name": "Miguel Guarniz", "email": "mi9uel9@gmail.com", "date": "2022-04-09T19:55:06Z"}, "message": "rename to par_for_each_item", "tree": {"sha": "0ef30816706715b07ec866b7e4cd39e3ecdf0653", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ef30816706715b07ec866b7e4cd39e3ecdf0653"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a31632b30e8aab919397186c08bf1e068dfc04e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a31632b30e8aab919397186c08bf1e068dfc04e9", "html_url": "https://github.com/rust-lang/rust/commit/a31632b30e8aab919397186c08bf1e068dfc04e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a31632b30e8aab919397186c08bf1e068dfc04e9/comments", "author": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a349fc4f7a701ec5e5a4ef94fa93fa89658c9dc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a349fc4f7a701ec5e5a4ef94fa93fa89658c9dc7", "html_url": "https://github.com/rust-lang/rust/commit/a349fc4f7a701ec5e5a4ef94fa93fa89658c9dc7"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ac5f8fa56a999a1bbf2e9a87802b49c99da27707", "filename": "compiler/rustc_middle/src/hir/map/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a31632b30e8aab919397186c08bf1e068dfc04e9/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a31632b30e8aab919397186c08bf1e068dfc04e9/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs?ref=a31632b30e8aab919397186c08bf1e068dfc04e9", "patch": "@@ -162,7 +162,7 @@ impl<'hir> Map<'hir> {\n         self.tcx.hir_crate_items(()).items.iter().copied()\n     }\n \n-    pub fn par_items(self, f: impl Fn(ItemId) + Sync + Send) {\n+    pub fn par_for_each_item(self, f: impl Fn(ItemId) + Sync + Send) {\n         par_for_each_in(&self.tcx.hir_crate_items(()).items[..], |id| f(*id));\n     }\n "}]}