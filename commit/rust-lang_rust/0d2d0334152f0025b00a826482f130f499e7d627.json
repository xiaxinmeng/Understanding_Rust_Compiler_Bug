{"sha": "0d2d0334152f0025b00a826482f130f499e7d627", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkMmQwMzM0MTUyZjAwMjViMDBhODI2NDgyZjEzMGY0OTllN2Q2Mjc=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-01-25T14:01:39Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-09-03T18:59:26Z"}, "message": "replace unsafe ptr::write with deref-write, benchmarks show no difference", "tree": {"sha": "1cc9212f97e4d0eeb7f325bc3151de009c8286f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1cc9212f97e4d0eeb7f325bc3151de009c8286f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d2d0334152f0025b00a826482f130f499e7d627", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d2d0334152f0025b00a826482f130f499e7d627", "html_url": "https://github.com/rust-lang/rust/commit/0d2d0334152f0025b00a826482f130f499e7d627", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d2d0334152f0025b00a826482f130f499e7d627/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9596e5a2f23771bdbf68b2872b26cce715c8011e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9596e5a2f23771bdbf68b2872b26cce715c8011e", "html_url": "https://github.com/rust-lang/rust/commit/9596e5a2f23771bdbf68b2872b26cce715c8011e"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "d2f92b7c0082cf52281e86c681c396a6db3b81c1", "filename": "library/alloc/src/vec.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0d2d0334152f0025b00a826482f130f499e7d627/library%2Falloc%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d2d0334152f0025b00a826482f130f499e7d627/library%2Falloc%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec.rs?ref=0d2d0334152f0025b00a826482f130f499e7d627", "patch": "@@ -2086,11 +2086,8 @@ impl<T> Extend<T> for Vec<T> {\n             <Self as SpecExtend<T, I::IntoIter>>::spec_extend(self, iter.into_iter())\n         } else {\n             // if self has no allocation then use the more powerful from_iter specializations\n-            let other = SpecFrom::from_iter(iter.into_iter());\n-            // replace self, don't run drop since self was empty\n-            unsafe {\n-                ptr::write(self, other);\n-            }\n+            // and overwrite self\n+            *self = SpecFrom::from_iter(iter.into_iter());\n         }\n     }\n \n@@ -2544,11 +2541,8 @@ impl<'a, T: 'a + Copy> Extend<&'a T> for Vec<T> {\n             self.spec_extend(iter.into_iter())\n         } else {\n             // if self has no allocation then use the more powerful from_iter specializations\n-            let other = SpecFrom::from_iter(iter.into_iter());\n-            // replace self, don't run drop since self was empty\n-            unsafe {\n-                ptr::write(self, other);\n-            }\n+            // and overwrite self\n+            *self = SpecFrom::from_iter(iter.into_iter());\n         }\n     }\n "}]}