{"sha": "f6d54aa0c165da52560e5c032b4c65bb11833e0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2ZDU0YWEwYzE2NWRhNTI1NjBlNWMwMzJiNGM2NWJiMTE4MzNlMGU=", "commit": {"author": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2020-12-07T13:09:22Z"}, "committer": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2021-01-04T21:40:38Z"}, "message": "Adjust imports", "tree": {"sha": "647e8e32a28a1167f19a11b1f0375dbcad5c71b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/647e8e32a28a1167f19a11b1f0375dbcad5c71b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6d54aa0c165da52560e5c032b4c65bb11833e0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6d54aa0c165da52560e5c032b4c65bb11833e0e", "html_url": "https://github.com/rust-lang/rust/commit/f6d54aa0c165da52560e5c032b4c65bb11833e0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6d54aa0c165da52560e5c032b4c65bb11833e0e/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "720205480098bf08a201f4114d057573a5ece8e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/720205480098bf08a201f4114d057573a5ece8e8", "html_url": "https://github.com/rust-lang/rust/commit/720205480098bf08a201f4114d057573a5ece8e8"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "4ad71ab4913bab6cade7e7d1585bc5831a186062", "filename": "compiler/rustc_mir/src/monomorphize/polymorphize.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f6d54aa0c165da52560e5c032b4c65bb11833e0e/compiler%2Frustc_mir%2Fsrc%2Fmonomorphize%2Fpolymorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6d54aa0c165da52560e5c032b4c65bb11833e0e/compiler%2Frustc_mir%2Fsrc%2Fmonomorphize%2Fpolymorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fmonomorphize%2Fpolymorphize.rs?ref=f6d54aa0c165da52560e5c032b4c65bb11833e0e", "patch": "@@ -5,7 +5,7 @@\n //! generic parameters are unused (and eventually, in what ways generic parameters are used - only\n //! for their size, offset of a field, etc.).\n \n-use rustc_hir::{def::DefKind, def_id::DefId};\n+use rustc_hir::{def::DefKind, def_id::DefId, ConstContext};\n use rustc_index::bit_set::FiniteBitSet;\n use rustc_middle::mir::{\n     visit::{TyContext, Visitor},\n@@ -56,7 +56,7 @@ fn unused_generic_params(tcx: TyCtxt<'_>, def_id: DefId) -> FiniteBitSet<u32> {\n     // Exit early when there is no MIR available.\n     let context = tcx.hir().body_const_context(def_id.expect_local());\n     match context {\n-        Some(ConstContext::Fn) | None if !tcx.is_mir_available(def_id) => {\n+        Some(ConstContext::ConstFn) | None if !tcx.is_mir_available(def_id) => {\n             debug!(\"unused_generic_params: (no mir available) def_id={:?}\", def_id);\n             return FiniteBitSet::new_empty();\n         }\n@@ -80,7 +80,7 @@ fn unused_generic_params(tcx: TyCtxt<'_>, def_id: DefId) -> FiniteBitSet<u32> {\n     let body = match context {\n         // Const functions are actually called and should thus be considered for polymorphization\n         // via their runtime MIR\n-        Some(ConstContext::Fn) | None => tcx.optimized_mir(def_id),\n+        Some(ConstContext::ConstFn) | None => tcx.optimized_mir(def_id),\n         Some(_) => tcx.mir_for_ctfe(def_id),\n     };\n     let mut vis = MarkUsedGenericParams { tcx, def_id, unused_parameters: &mut unused_parameters };"}]}