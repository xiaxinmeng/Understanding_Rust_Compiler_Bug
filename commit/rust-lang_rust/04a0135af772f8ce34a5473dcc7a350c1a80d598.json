{"sha": "04a0135af772f8ce34a5473dcc7a350c1a80d598", "node_id": "C_kwDOAAsO6NoAKDA0YTAxMzVhZjc3MmY4Y2UzNGE1NDczZGNjN2EzNTBjMWE4MGQ1OTg", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-04T19:12:40Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-04T19:12:40Z"}, "message": "make unicode benchmark not take 20s", "tree": {"sha": "3a483e82056da4fa3bc6e789719332b0b1d523e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a483e82056da4fa3bc6e789719332b0b1d523e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04a0135af772f8ce34a5473dcc7a350c1a80d598", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04a0135af772f8ce34a5473dcc7a350c1a80d598", "html_url": "https://github.com/rust-lang/rust/commit/04a0135af772f8ce34a5473dcc7a350c1a80d598", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04a0135af772f8ce34a5473dcc7a350c1a80d598/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25cbfcc5be6245ffce5fb39474f777b4885e5f61", "url": "https://api.github.com/repos/rust-lang/rust/commits/25cbfcc5be6245ffce5fb39474f777b4885e5f61", "html_url": "https://github.com/rust-lang/rust/commit/25cbfcc5be6245ffce5fb39474f777b4885e5f61"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3cf25ba9cf6c287a9d75cc9c993541d38b4dbf60", "filename": "bench-cargo-miri/unicode/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04a0135af772f8ce34a5473dcc7a350c1a80d598/bench-cargo-miri%2Funicode%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04a0135af772f8ce34a5473dcc7a350c1a80d598/bench-cargo-miri%2Funicode%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/bench-cargo-miri%2Funicode%2Fsrc%2Fmain.rs?ref=04a0135af772f8ce34a5473dcc7a350c1a80d598", "patch": "@@ -14,7 +14,7 @@ fn all_valid_chars() -> impl Iterator<Item = char> {\n \n fn main() {\n     // Take only the first few chars because we don't want to wait all day\n-    for c in all_valid_chars().take(2_000) {\n+    for c in all_valid_chars().take(1_500) {\n         let _ = UnicodeXID::is_xid_continue(c);\n     }\n }"}]}