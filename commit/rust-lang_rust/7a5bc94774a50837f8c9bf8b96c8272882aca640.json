{"sha": "7a5bc94774a50837f8c9bf8b96c8272882aca640", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhNWJjOTQ3NzRhNTA4MzdmOGM5YmY4Yjk2YzgyNzI4ODJhY2E2NDA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-31T13:30:42Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-31T13:30:42Z"}, "message": "complete self", "tree": {"sha": "7d96566cbbf7bdd636fd095acb6bff12bba1ec13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d96566cbbf7bdd636fd095acb6bff12bba1ec13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a5bc94774a50837f8c9bf8b96c8272882aca640", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a5bc94774a50837f8c9bf8b96c8272882aca640", "html_url": "https://github.com/rust-lang/rust/commit/7a5bc94774a50837f8c9bf8b96c8272882aca640", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a5bc94774a50837f8c9bf8b96c8272882aca640/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdb9b4cbf417976739de5147938e2c3080e497b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdb9b4cbf417976739de5147938e2c3080e497b9", "html_url": "https://github.com/rust-lang/rust/commit/cdb9b4cbf417976739de5147938e2c3080e497b9"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "f3058c02314125f2dbe59ee548fabd630b6bc3a7", "filename": "crates/libeditor/src/completion.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7a5bc94774a50837f8c9bf8b96c8272882aca640/crates%2Flibeditor%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a5bc94774a50837f8c9bf8b96c8272882aca640/crates%2Flibeditor%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Fcompletion.rs?ref=7a5bc94774a50837f8c9bf8b96c8272882aca640", "patch": "@@ -142,6 +142,12 @@ fn complete_fn(name_ref: ast::NameRef, scopes: &FnScopes, acc: &mut Vec<Completi\n                 snippet: None,\n             })\n     );\n+    if scopes.self_param.is_some() {\n+        acc.push(CompletionItem {\n+            name: \"self\".to_string(),\n+            snippet: None,\n+        })\n+    }\n }\n \n #[cfg(test)]\n@@ -249,6 +255,13 @@ mod tests {\n                CompletionItem { name: \"foo\", snippet: None }]\"#)\n     }\n \n+    #[test]\n+    fn test_complete_self() {\n+        check_scope_completion(r\"\n+            impl S { fn foo(&self) { <|> } }\n+        \", r#\"[CompletionItem { name: \"self\", snippet: None }]\"#)\n+    }\n+\n     #[test]\n     fn test_completion_kewords() {\n         check_snippet_completion(r\""}, {"sha": "78e9c061ccbec5a494e8db0e0140f9ec26f4c553", "filename": "crates/libeditor/src/scope/fn_scope.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7a5bc94774a50837f8c9bf8b96c8272882aca640/crates%2Flibeditor%2Fsrc%2Fscope%2Ffn_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a5bc94774a50837f8c9bf8b96c8272882aca640/crates%2Flibeditor%2Fsrc%2Fscope%2Ffn_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Fscope%2Ffn_scope.rs?ref=7a5bc94774a50837f8c9bf8b96c8272882aca640", "patch": "@@ -13,13 +13,17 @@ type ScopeId = usize;\n \n #[derive(Debug)]\n pub struct FnScopes {\n+    pub self_param: Option<SyntaxNode>,\n     scopes: Vec<ScopeData>,\n     scope_for: HashMap<SyntaxNode, ScopeId>,\n }\n \n impl FnScopes {\n     pub fn new(fn_def: ast::FnDef) -> FnScopes {\n         let mut scopes = FnScopes {\n+            self_param: fn_def.param_list()\n+                .and_then(|it| it.self_param())\n+                .map(|it| it.syntax().owned()),\n             scopes: Vec::new(),\n             scope_for: HashMap::new()\n         };"}, {"sha": "50dc41b2739288ccbfc6a6825ca4df9f25f9fa8f", "filename": "crates/libsyntax2/src/ast/generated.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/7a5bc94774a50837f8c9bf8b96c8272882aca640/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a5bc94774a50837f8c9bf8b96c8272882aca640/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs?ref=7a5bc94774a50837f8c9bf8b96c8272882aca640", "patch": "@@ -1168,6 +1168,9 @@ impl<'a> ParamList<'a> {\n     pub fn params(self) -> impl Iterator<Item = Param<'a>> + 'a {\n         super::children(self)\n     }\n+pub fn self_param(self) -> Option<SelfParam<'a>> {\n+        super::child_opt(self)\n+    }\n }\n \n // ParenExpr\n@@ -1579,6 +1582,24 @@ impl<'a> Root<'a> {\n     }\n }\n \n+// SelfParam\n+#[derive(Debug, Clone, Copy)]\n+pub struct SelfParam<'a> {\n+    syntax: SyntaxNodeRef<'a>,\n+}\n+\n+impl<'a> AstNode<'a> for SelfParam<'a> {\n+    fn cast(syntax: SyntaxNodeRef<'a>) -> Option<Self> {\n+        match syntax.kind() {\n+            SELF_PARAM => Some(SelfParam { syntax }),\n+            _ => None,\n+        }\n+    }\n+    fn syntax(self) -> SyntaxNodeRef<'a> { self.syntax }\n+}\n+\n+impl<'a> SelfParam<'a> {}\n+\n // SlicePat\n #[derive(Debug, Clone, Copy)]\n pub struct SlicePat<'a> {"}, {"sha": "5225212298ef14c5dbf58d57132b8dffb09689ab", "filename": "crates/libsyntax2/src/grammar.ron", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a5bc94774a50837f8c9bf8b96c8272882aca640/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/7a5bc94774a50837f8c9bf8b96c8272882aca640/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron?ref=7a5bc94774a50837f8c9bf8b96c8272882aca640", "patch": "@@ -488,10 +488,12 @@ Grammar(\n             ]\n         ),\n         \"ParamList\": (\n+            options: [ \"SelfParam\" ],\n             collections: [\n                 [\"params\", \"Param\"]\n             ]\n         ),\n+        \"SelfParam\": (),\n         \"Param\": (\n             options: [ \"Pat\" ],\n         ),"}]}