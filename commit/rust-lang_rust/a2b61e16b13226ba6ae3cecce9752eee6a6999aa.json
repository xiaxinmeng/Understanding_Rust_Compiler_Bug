{"sha": "a2b61e16b13226ba6ae3cecce9752eee6a6999aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyYjYxZTE2YjEzMjI2YmE2YWUzY2VjY2U5NzUyZWVlNmE2OTk5YWE=", "commit": {"author": {"name": "Lorenz", "email": "lorenzb@student.ethz.ch", "date": "2015-05-30T12:25:58Z"}, "committer": {"name": "Lorenz", "email": "lorenzb@student.ethz.ch", "date": "2015-05-30T12:25:58Z"}, "message": "Extend rust reference with a section about subtyping", "tree": {"sha": "521b74d250a6e145af6f78ae310855447d8832fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/521b74d250a6e145af6f78ae310855447d8832fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2b61e16b13226ba6ae3cecce9752eee6a6999aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2b61e16b13226ba6ae3cecce9752eee6a6999aa", "html_url": "https://github.com/rust-lang/rust/commit/a2b61e16b13226ba6ae3cecce9752eee6a6999aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2b61e16b13226ba6ae3cecce9752eee6a6999aa/comments", "author": {"login": "lorenzb", "id": 1148586, "node_id": "MDQ6VXNlcjExNDg1ODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1148586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lorenzb", "html_url": "https://github.com/lorenzb", "followers_url": "https://api.github.com/users/lorenzb/followers", "following_url": "https://api.github.com/users/lorenzb/following{/other_user}", "gists_url": "https://api.github.com/users/lorenzb/gists{/gist_id}", "starred_url": "https://api.github.com/users/lorenzb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lorenzb/subscriptions", "organizations_url": "https://api.github.com/users/lorenzb/orgs", "repos_url": "https://api.github.com/users/lorenzb/repos", "events_url": "https://api.github.com/users/lorenzb/events{/privacy}", "received_events_url": "https://api.github.com/users/lorenzb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lorenzb", "id": 1148586, "node_id": "MDQ6VXNlcjExNDg1ODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1148586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lorenzb", "html_url": "https://github.com/lorenzb", "followers_url": "https://api.github.com/users/lorenzb/followers", "following_url": "https://api.github.com/users/lorenzb/following{/other_user}", "gists_url": "https://api.github.com/users/lorenzb/gists{/gist_id}", "starred_url": "https://api.github.com/users/lorenzb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lorenzb/subscriptions", "organizations_url": "https://api.github.com/users/lorenzb/orgs", "repos_url": "https://api.github.com/users/lorenzb/repos", "events_url": "https://api.github.com/users/lorenzb/events{/privacy}", "received_events_url": "https://api.github.com/users/lorenzb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "621a10e7f32d790c39a0b4528369cf7959dd7d34", "url": "https://api.github.com/repos/rust-lang/rust/commits/621a10e7f32d790c39a0b4528369cf7959dd7d34", "html_url": "https://github.com/rust-lang/rust/commit/621a10e7f32d790c39a0b4528369cf7959dd7d34"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "68c17c04079bff669ac346159c92205d425bc574", "filename": "src/doc/reference.md", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a2b61e16b13226ba6ae3cecce9752eee6a6999aa/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/a2b61e16b13226ba6ae3cecce9752eee6a6999aa/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=a2b61e16b13226ba6ae3cecce9752eee6a6999aa", "patch": "@@ -3608,6 +3608,26 @@ The notation `&self` is a shorthand for `self: &Self`. In this case,\n in the impl, `Self` refers to the value of type `String` that is the\n receiver for a call to the method `make_string`.\n \n+## Subtyping\n+\n+Subtyping is implicit and can occur at any stage in type checking or\n+inference. Subtyping in Rust is very restricted and occurs only due to\n+variance with respect to lifetimes and between types with higher ranked\n+lifetimes. If we were to erase lifetimes from types, then the only subtyping\n+would be due to type equality.\n+\n+Consider the following example: string literals always have `'static`\n+lifetime. Nevertheless, we can assign `s` to `t`:\n+\n+```\n+fn bar<'a>() {\n+    let s: &'static str = \"hi\";\n+    let t: &'a str = s;\n+}\n+```\n+Since `'static` \"lives longer\" than `'a`, `&'static str` is a subtype of\n+`&'a str`.\n+\n # Special traits\n \n Several traits define special evaluation behavior."}]}