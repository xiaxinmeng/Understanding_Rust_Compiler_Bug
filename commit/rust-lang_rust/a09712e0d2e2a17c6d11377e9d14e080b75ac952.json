{"sha": "a09712e0d2e2a17c6d11377e9d14e080b75ac952", "node_id": "C_kwDOAAsO6NoAKGEwOTcxMmUwZDJlMmExN2M2ZDExMzc3ZTlkMTRlMDgwYjc1YWM5NTI", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-01-14T12:36:56Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-01-14T14:18:11Z"}, "message": "Use fs::remove_dir_all instead of cargo clean", "tree": {"sha": "e3d5b276667d4978d687cbd5e6cf94560b75adf8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3d5b276667d4978d687cbd5e6cf94560b75adf8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a09712e0d2e2a17c6d11377e9d14e080b75ac952", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a09712e0d2e2a17c6d11377e9d14e080b75ac952", "html_url": "https://github.com/rust-lang/rust/commit/a09712e0d2e2a17c6d11377e9d14e080b75ac952", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a09712e0d2e2a17c6d11377e9d14e080b75ac952/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bc113fb3cc69c143c7fcb6b4c22856953dbbe09", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bc113fb3cc69c143c7fcb6b4c22856953dbbe09", "html_url": "https://github.com/rust-lang/rust/commit/9bc113fb3cc69c143c7fcb6b4c22856953dbbe09"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "4203a3859e1a167bcad4141d7b698908fa9024da", "filename": "build_system/tests.rs", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a09712e0d2e2a17c6d11377e9d14e080b75ac952/build_system%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a09712e0d2e2a17c6d11377e9d14e080b75ac952/build_system%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Ftests.rs?ref=a09712e0d2e2a17c6d11377e9d14e080b75ac952", "patch": "@@ -119,7 +119,7 @@ pub(crate) static LIBCORE_TESTS: CargoProject =\n \n const EXTENDED_SYSROOT_SUITE: &[TestCase] = &[\n     TestCase::custom(\"test.rust-random/rand\", &|runner| {\n-        spawn_and_wait(RAND.clean(&runner.target_compiler.cargo, &runner.dirs));\n+        RAND.clean(&runner.dirs);\n \n         if runner.is_native {\n             eprintln!(\"[TEST] rust-random/rand\");\n@@ -134,11 +134,11 @@ const EXTENDED_SYSROOT_SUITE: &[TestCase] = &[\n         }\n     }),\n     TestCase::custom(\"test.simple-raytracer\", &|runner| {\n-        spawn_and_wait(SIMPLE_RAYTRACER.clean(&runner.host_compiler.cargo, &runner.dirs));\n+        SIMPLE_RAYTRACER.clean(&runner.dirs);\n         spawn_and_wait(SIMPLE_RAYTRACER.build(&runner.target_compiler, &runner.dirs));\n     }),\n     TestCase::custom(\"test.libcore\", &|runner| {\n-        spawn_and_wait(LIBCORE_TESTS.clean(&runner.host_compiler.cargo, &runner.dirs));\n+        LIBCORE_TESTS.clean(&runner.dirs);\n \n         if runner.is_native {\n             spawn_and_wait(LIBCORE_TESTS.test(&runner.target_compiler, &runner.dirs));\n@@ -150,7 +150,7 @@ const EXTENDED_SYSROOT_SUITE: &[TestCase] = &[\n         }\n     }),\n     TestCase::custom(\"test.regex-shootout-regex-dna\", &|runner| {\n-        spawn_and_wait(REGEX.clean(&runner.target_compiler.cargo, &runner.dirs));\n+        REGEX.clean(&runner.dirs);\n \n         // newer aho_corasick versions throw a deprecation warning\n         let lint_rust_flags = format!(\"{} --cap-lints warn\", runner.target_compiler.rustflags);\n@@ -194,7 +194,7 @@ const EXTENDED_SYSROOT_SUITE: &[TestCase] = &[\n         }\n     }),\n     TestCase::custom(\"test.regex\", &|runner| {\n-        spawn_and_wait(REGEX.clean(&runner.host_compiler.cargo, &runner.dirs));\n+        REGEX.clean(&runner.dirs);\n \n         // newer aho_corasick versions throw a deprecation warning\n         let lint_rust_flags = format!(\"{} --cap-lints warn\", runner.target_compiler.rustflags);\n@@ -221,7 +221,7 @@ const EXTENDED_SYSROOT_SUITE: &[TestCase] = &[\n         }\n     }),\n     TestCase::custom(\"test.portable-simd\", &|runner| {\n-        spawn_and_wait(PORTABLE_SIMD.clean(&runner.host_compiler.cargo, &runner.dirs));\n+        PORTABLE_SIMD.clean(&runner.dirs);\n \n         let mut build_cmd = PORTABLE_SIMD.build(&runner.target_compiler, &runner.dirs);\n         build_cmd.arg(\"--all-targets\");\n@@ -293,7 +293,6 @@ struct TestRunner {\n     is_native: bool,\n     jit_supported: bool,\n     dirs: Dirs,\n-    host_compiler: Compiler,\n     target_compiler: Compiler,\n }\n \n@@ -303,8 +302,6 @@ impl TestRunner {\n         let jit_supported =\n             is_native && host_triple.contains(\"x86_64\") && !host_triple.contains(\"windows\");\n \n-        let host_compiler = Compiler::clif_with_triple(&dirs, host_triple);\n-\n         let mut target_compiler = Compiler::clif_with_triple(&dirs, target_triple);\n         if !is_native {\n             target_compiler.set_cross_linker_and_runner();\n@@ -323,7 +320,7 @@ impl TestRunner {\n             target_compiler.rustflags.push_str(\" -Clink-arg=-undefined -Clink-arg=dynamic_lookup\");\n         }\n \n-        Self { is_native, jit_supported, dirs, host_compiler, target_compiler }\n+        Self { is_native, jit_supported, dirs, target_compiler }\n     }\n \n     pub fn run_testsuite(&self, tests: &[TestCase]) {"}, {"sha": "935177a00ba87f8d43b795879f7bc6baa4baf821", "filename": "build_system/utils.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a09712e0d2e2a17c6d11377e9d14e080b75ac952/build_system%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a09712e0d2e2a17c6d11377e9d14e080b75ac952/build_system%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Futils.rs?ref=a09712e0d2e2a17c6d11377e9d14e080b75ac952", "patch": "@@ -146,9 +146,8 @@ impl CargoProject {\n         cmd\n     }\n \n-    #[must_use]\n-    pub(crate) fn clean(&self, cargo: &Path, dirs: &Dirs) -> Command {\n-        self.base_cmd(\"clean\", cargo, dirs)\n+    pub(crate) fn clean(&self, dirs: &Dirs) {\n+        let _ = fs::remove_dir_all(self.target_dir(dirs));\n     }\n \n     #[must_use]"}]}