{"sha": "19b7a7d803b61456f9e14cad8d90fe26dea4b934", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5YjdhN2Q4MDNiNjE0NTZmOWUxNGNhZDhkOTBmZTI2ZGVhNGI5MzQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-08T00:00:11Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-08T00:29:06Z"}, "message": "Revert \"Mangle exported names using node IDs rather than types\"\n\nThis reverts commit c83d61de936f2910001fe72de01ac58479d90524.", "tree": {"sha": "02d27693d99290c5cbeaeaa6fb0a8025541c6d92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02d27693d99290c5cbeaeaa6fb0a8025541c6d92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19b7a7d803b61456f9e14cad8d90fe26dea4b934", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19b7a7d803b61456f9e14cad8d90fe26dea4b934", "html_url": "https://github.com/rust-lang/rust/commit/19b7a7d803b61456f9e14cad8d90fe26dea4b934", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19b7a7d803b61456f9e14cad8d90fe26dea4b934/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e42c9a367aa924963db462aa686324766e260b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e42c9a367aa924963db462aa686324766e260b3", "html_url": "https://github.com/rust-lang/rust/commit/1e42c9a367aa924963db462aa686324766e260b3"}], "stats": {"total": 30, "additions": 10, "deletions": 20}, "files": [{"sha": "eb936aafd40278a5ba2bd91dc767c85c9f6be244", "filename": "src/rustc/back/link.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/19b7a7d803b61456f9e14cad8d90fe26dea4b934/src%2Frustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19b7a7d803b61456f9e14cad8d90fe26dea4b934/src%2Frustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fback%2Flink.rs?ref=19b7a7d803b61456f9e14cad8d90fe26dea4b934", "patch": "@@ -485,14 +485,15 @@ fn mangle(ss: path) -> str {\n     n\n }\n \n-fn exported_name(path: path, id: ast::node_id, _vers: str) -> str {\n+fn exported_name(path: path, hash: str, _vers: str) -> str {\n     // FIXME: versioning isn't working yet\n-    ret mangle(path + [path_name(int::str(id))]); //  + \"@\" + vers;\n+    ret mangle(path + [path_name(hash)]); //  + \"@\" + vers;\n+\n }\n \n-fn mangle_exported_name(ccx: @crate_ctxt, path: path, id: ast::node_id)\n-    -> str {\n-    ret exported_name(path, id, ccx.link_meta.vers);\n+fn mangle_exported_name(ccx: @crate_ctxt, path: path, t: ty::t) -> str {\n+    let hash = get_symbol_hash(ccx, t);\n+    ret exported_name(path, hash, ccx.link_meta.vers);\n }\n \n fn mangle_internal_name_by_type_only(ccx: @crate_ctxt, t: ty::t, name: str) ->"}, {"sha": "ed1c95dcd4a753cda0a1eaf4bc2365532c2e1820", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/19b7a7d803b61456f9e14cad8d90fe26dea4b934/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19b7a7d803b61456f9e14cad8d90fe26dea4b934/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=19b7a7d803b61456f9e14cad8d90fe26dea4b934", "patch": "@@ -1911,7 +1911,7 @@ fn monomorphic_fn(ccx: @crate_ctxt, fn_id: ast::def_id, real_substs: [ty::t],\n     let llfty = type_of_fn_from_ty(ccx, mono_ty);\n \n     let pt = *pt + [path_name(ccx.names(name))];\n-    let s = mangle_exported_name(ccx, pt, fn_id.node);\n+    let s = mangle_exported_name(ccx, pt, mono_ty);\n     let lldecl = decl_internal_cdecl_fn(ccx.llmod, s, llfty);\n     ccx.monomorphized.insert(hash_id, lldecl);\n     ccx.item_symbols.insert(fn_id.node, s);\n@@ -4418,7 +4418,7 @@ fn register_fn_full(ccx: @crate_ctxt, sp: span, path: path,\n fn register_fn_fuller(ccx: @crate_ctxt, sp: span, path: path,\n                       node_id: ast::node_id, node_type: ty::t,\n                       cc: lib::llvm::CallConv, llfty: TypeRef) -> ValueRef {\n-    let ps: str = mangle_exported_name(ccx, path, node_id);\n+    let ps: str = mangle_exported_name(ccx, path, node_type);\n     let llfn: ValueRef = decl_fn(ccx.llmod, ps, cc, llfty);\n     ccx.item_symbols.insert(node_id, ps);\n \n@@ -4547,7 +4547,7 @@ fn get_item_val(ccx: @crate_ctxt, id: ast::node_id) -> ValueRef {\n             alt check i.node {\n               ast::item_const(_, _) {\n                 let typ = ty::node_id_to_type(ccx.tcx, i.id);\n-                let s = mangle_exported_name(ccx, my_path, i.id);\n+                let s = mangle_exported_name(ccx, my_path, typ);\n                 let g = str::as_c_str(s, {|buf|\n                     llvm::LLVMAddGlobal(ccx.llmod, type_of(ccx, typ), buf)\n                 });\n@@ -4634,7 +4634,7 @@ fn trans_constant(ccx: @crate_ctxt, it: @ast::item) {\n         for vec::each(variants) {|variant|\n             let p = path + [path_name(variant.node.name),\n                             path_name(\"discrim\")];\n-            let s = mangle_exported_name(ccx, p, it.id);\n+            let s = mangle_exported_name(ccx, p, ty::mk_int(ccx.tcx));\n             let disr_val = vi[i].disr_val;\n             note_unique_llvm_symbol(ccx, s);\n             let discrim_gvar = str::as_c_str(s, {|buf|"}, {"sha": "2f920e419a2c00edbebb14ee745b9d2fce3349d1", "filename": "src/test/run-pass/issue-2074.rs", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1e42c9a367aa924963db462aa686324766e260b3/src%2Ftest%2Frun-pass%2Fissue-2074.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e42c9a367aa924963db462aa686324766e260b3/src%2Ftest%2Frun-pass%2Fissue-2074.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2074.rs?ref=1e42c9a367aa924963db462aa686324766e260b3", "patch": "@@ -1,11 +0,0 @@\n-fn main(args: [str]) {\n-    let one = fn@() -> uint {\n-        enum r { a };\n-        ret a as uint;\n-    };\n-    let two = fn@() -> uint {\n-        enum r { a };\n-        ret a as uint;\n-    };\n-    one(); two();\n-}"}]}