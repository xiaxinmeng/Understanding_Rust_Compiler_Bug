{"sha": "a89ed49d3d01abbd49889832d87650b6c99ff85c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4OWVkNDlkM2QwMWFiYmQ0OTg4OTgzMmQ4NzY1MGI2Yzk5ZmY4NWM=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-07-31T22:32:42Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-07-31T22:32:58Z"}, "message": "Add hash tests: idempotent, no_bytes_dropped.", "tree": {"sha": "bf087b7f700ead17dc838938d2d25d4fa47c62ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf087b7f700ead17dc838938d2d25d4fa47c62ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a89ed49d3d01abbd49889832d87650b6c99ff85c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a89ed49d3d01abbd49889832d87650b6c99ff85c", "html_url": "https://github.com/rust-lang/rust/commit/a89ed49d3d01abbd49889832d87650b6c99ff85c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a89ed49d3d01abbd49889832d87650b6c99ff85c/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "513557b465a6393aebf8d309320c7eaab9ceae2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/513557b465a6393aebf8d309320c7eaab9ceae2c", "html_url": "https://github.com/rust-lang/rust/commit/513557b465a6393aebf8d309320c7eaab9ceae2c"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "8f8f7dd40ed9f0735f361cbfa9e7750b0fd4a227", "filename": "src/libcore/hash.rs", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/a89ed49d3d01abbd49889832d87650b6c99ff85c/src%2Flibcore%2Fhash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a89ed49d3d01abbd49889832d87650b6c99ff85c/src%2Flibcore%2Fhash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhash.rs?ref=a89ed49d3d01abbd49889832d87650b6c99ff85c", "patch": "@@ -401,3 +401,45 @@ fn test_hash_uint() {\n     assert hash_u64(val as u64) != hash_uint(val as uint);\n     assert hash_u32(val as u32) == hash_uint(val as uint);\n }\n+\n+#[test]\n+fn test_hash_idempotent() {\n+    let val64 = 0xdeadbeef_deadbeef_u64;\n+    assert hash_u64(val64) == hash_u64(val64);\n+    let val32 = 0xdeadbeef_u32;\n+    assert hash_u32(val32) == hash_u32(val32);\n+}\n+\n+#[test]\n+fn test_hash_no_bytes_dropped_64() {\n+    let val = 0xdeadbeef_deadbeef_u64;\n+\n+    assert hash_u64(val) != hash_u64(zero_byte(val, 0));\n+    assert hash_u64(val) != hash_u64(zero_byte(val, 1));\n+    assert hash_u64(val) != hash_u64(zero_byte(val, 2));\n+    assert hash_u64(val) != hash_u64(zero_byte(val, 3));\n+    assert hash_u64(val) != hash_u64(zero_byte(val, 4));\n+    assert hash_u64(val) != hash_u64(zero_byte(val, 5));\n+    assert hash_u64(val) != hash_u64(zero_byte(val, 6));\n+    assert hash_u64(val) != hash_u64(zero_byte(val, 7));\n+\n+    fn zero_byte(val: u64, byte: uint) -> u64 {\n+        assert 0 <= byte; assert byte < 8;\n+        val & !(0xff << (byte * 8))\n+    }\n+}\n+\n+#[test]\n+fn test_hash_no_bytes_dropped_32() {\n+    let val = 0xdeadbeef_u32;\n+\n+    assert hash_u32(val) != hash_u32(zero_byte(val, 0));\n+    assert hash_u32(val) != hash_u32(zero_byte(val, 1));\n+    assert hash_u32(val) != hash_u32(zero_byte(val, 2));\n+    assert hash_u32(val) != hash_u32(zero_byte(val, 3));\n+\n+    fn zero_byte(val: u32, byte: uint) -> u32 {\n+        assert 0 <= byte; assert byte < 4;\n+        val & !(0xff << (byte * 8))\n+    }\n+}"}]}