{"sha": "cbbdca059404a102db9daf2fa50ca8c1c9fc5ad2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiYmRjYTA1OTQwNGExMDJkYjlkYWYyZmE1MGNhOGMxYzlmYzVhZDI=", "commit": {"author": {"name": "Tim Diekmann", "email": "tim.diekmann@3dvision.de", "date": "2020-03-25T18:08:56Z"}, "committer": {"name": "Tim Diekmann", "email": "tim.diekmann@3dvision.de", "date": "2020-03-26T16:13:31Z"}, "message": "Fix wording in `RawVec::from_raw_parts(_in)`", "tree": {"sha": "1fab62a561213631d96a700d928f69755648d0b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fab62a561213631d96a700d928f69755648d0b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbbdca059404a102db9daf2fa50ca8c1c9fc5ad2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbbdca059404a102db9daf2fa50ca8c1c9fc5ad2", "html_url": "https://github.com/rust-lang/rust/commit/cbbdca059404a102db9daf2fa50ca8c1c9fc5ad2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbbdca059404a102db9daf2fa50ca8c1c9fc5ad2/comments", "author": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b02e53f197566a88e175cddbf1e9c338744fd51a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b02e53f197566a88e175cddbf1e9c338744fd51a", "html_url": "https://github.com/rust-lang/rust/commit/b02e53f197566a88e175cddbf1e9c338744fd51a"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "cbafeae6417a09a198ec9d16f880f736224212bd", "filename": "src/liballoc/raw_vec.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cbbdca059404a102db9daf2fa50ca8c1c9fc5ad2/src%2Fliballoc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbbdca059404a102db9daf2fa50ca8c1c9fc5ad2/src%2Fliballoc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fraw_vec.rs?ref=cbbdca059404a102db9daf2fa50ca8c1c9fc5ad2", "patch": "@@ -104,7 +104,7 @@ impl<T> RawVec<T, Global> {\n     ///\n     /// The `ptr` must be allocated (on the system heap), and with the given `capacity`.\n     /// The `capacity` cannot exceed `isize::MAX` for sized types. (only a concern on 32-bit\n-    /// systems). ZSTs may have a capacity up to `usize::MAX`.\n+    /// systems). ZST vectors may have a capacity up to `usize::MAX`.\n     /// If the `ptr` and `capacity` come from a `RawVec`, then this is guaranteed.\n     #[inline]\n     pub unsafe fn from_raw_parts(ptr: *mut T, capacity: usize) -> Self {\n@@ -165,7 +165,7 @@ impl<T, A: AllocRef> RawVec<T, A> {\n     ///\n     /// The `ptr` must be allocated (via the given allocator `a`), and with the given `capacity`.\n     /// The `capacity` cannot exceed `isize::MAX` for sized types. (only a concern on 32-bit\n-    /// systems). ZSTs may have a capacity up to `usize::MAX`.\n+    /// systems). ZST vectors may have a capacity up to `usize::MAX`.\n     /// If the `ptr` and `capacity` come from a `RawVec` created via `a`, then this is guaranteed.\n     #[inline]\n     pub unsafe fn from_raw_parts_in(ptr: *mut T, capacity: usize, a: A) -> Self {"}]}