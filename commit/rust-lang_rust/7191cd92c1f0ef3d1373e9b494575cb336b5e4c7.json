{"sha": "7191cd92c1f0ef3d1373e9b494575cb336b5e4c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxOTFjZDkyYzFmMGVmM2QxMzczZTliNDk0NTc1Y2IzMzZiNWU0Yzc=", "commit": {"author": {"name": "Richo Healey", "email": "richo@psych0tik.net", "date": "2014-11-21T01:24:18Z"}, "committer": {"name": "Richo Healey", "email": "richo@psych0tik.net", "date": "2014-11-21T19:20:02Z"}, "message": "lldb: Clean up struct printing", "tree": {"sha": "29b86065d5ba827208b68662c905595b895ed713", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29b86065d5ba827208b68662c905595b895ed713"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7191cd92c1f0ef3d1373e9b494575cb336b5e4c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7191cd92c1f0ef3d1373e9b494575cb336b5e4c7", "html_url": "https://github.com/rust-lang/rust/commit/7191cd92c1f0ef3d1373e9b494575cb336b5e4c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7191cd92c1f0ef3d1373e9b494575cb336b5e4c7/comments", "author": {"login": "richo", "id": 476418, "node_id": "MDQ6VXNlcjQ3NjQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richo", "id": 476418, "node_id": "MDQ6VXNlcjQ3NjQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ab01048d5c3bed1f3e8e1d00a33d8d597fc449e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ab01048d5c3bed1f3e8e1d00a33d8d597fc449e", "html_url": "https://github.com/rust-lang/rust/commit/0ab01048d5c3bed1f3e8e1d00a33d8d597fc449e"}], "stats": {"total": 36, "additions": 15, "deletions": 21}, "files": [{"sha": "642235ed4e3804eb5d4f81b2b6ee0de98e002cc7", "filename": "src/etc/lldb_rust_formatters.py", "status": "modified", "additions": 15, "deletions": 21, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/7191cd92c1f0ef3d1373e9b494575cb336b5e4c7/src%2Fetc%2Flldb_rust_formatters.py", "raw_url": "https://github.com/rust-lang/rust/raw/7191cd92c1f0ef3d1373e9b494575cb336b5e4c7/src%2Fetc%2Flldb_rust_formatters.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flldb_rust_formatters.py?ref=7191cd92c1f0ef3d1373e9b494575cb336b5e4c7", "patch": "@@ -71,39 +71,33 @@ def print_struct_val_starting_from(field_start_index, val, internal_dict):\n   t = val.GetType()\n   has_field_names = type_has_field_names(t)\n   type_name = extract_type_name(t.GetName())\n-  output = \"\"\n-\n-  if not type_name.startswith(\"(\"):\n-    # this is a tuple, so don't print the type name\n-    output += type_name\n \n   if has_field_names:\n-    output += \" { \\n\"\n+      template = \"%(type_name)s {\\n%(body)s\\n}\"\n+      separator = \", \\n\"\n   else:\n-    output += \"(\"\n+      template = \"%(type_name)s(%(body)s)\"\n+      separator = \", \"\n+\n+  if type_name.startswith(\"(\"):\n+    # this is a tuple, so don't print the type name\n+    type_name = \"\"\n \n   num_children = val.num_children\n \n-  for child_index in range(field_start_index, num_children):\n+  def render_child(child_index):\n+    this = \"\"\n     if has_field_names:\n       field_name = t.GetFieldAtIndex(child_index).GetName()\n-      output += field_name + \": \"\n+      this += field_name + \": \"\n \n     field_val = val.GetChildAtIndex(child_index)\n-    output += print_val(field_val, internal_dict)\n+    return this + print_val(field_val, internal_dict)\n \n-    if child_index != num_children - 1:\n-      output += \", \"\n+  body = separator.join([render_child(idx) for idx in range(field_start_index, num_children)])\n \n-    if has_field_names:\n-      output += \"\\n\"\n-\n-  if has_field_names:\n-    output += \"}\"\n-  else:\n-    output += \")\"\n-\n-  return output\n+  return template % {\"type_name\": type_name,\n+                     \"body\": body}\n \n \n def print_enum_val(val, internal_dict):"}]}