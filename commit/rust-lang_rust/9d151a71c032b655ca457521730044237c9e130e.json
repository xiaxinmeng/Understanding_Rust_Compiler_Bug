{"sha": "9d151a71c032b655ca457521730044237c9e130e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkMTUxYTcxYzAzMmI2NTVjYTQ1NzUyMTczMDA0NDIzN2M5ZTEzMGU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-05-02T15:37:59Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-05-02T15:49:26Z"}, "message": "do not fail if len(rendered_lines) is == 1\n\nalso handle more rendered-lines", "tree": {"sha": "23e19200592f3534ee6d0fbafeac61c6482ad370", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23e19200592f3534ee6d0fbafeac61c6482ad370"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d151a71c032b655ca457521730044237c9e130e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d151a71c032b655ca457521730044237c9e130e", "html_url": "https://github.com/rust-lang/rust/commit/9d151a71c032b655ca457521730044237c9e130e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d151a71c032b655ca457521730044237c9e130e/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f359aa276216aa74868b4ead5fea9a83a8397b27", "url": "https://api.github.com/repos/rust-lang/rust/commits/f359aa276216aa74868b4ead5fea9a83a8397b27", "html_url": "https://github.com/rust-lang/rust/commit/f359aa276216aa74868b4ead5fea9a83a8397b27"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "1ec4a0157426ae709a26f42098f665b697492165", "filename": "src/libsyntax/errors/snippet/mod.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9d151a71c032b655ca457521730044237c9e130e/src%2Flibsyntax%2Ferrors%2Fsnippet%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d151a71c032b655ca457521730044237c9e130e/src%2Flibsyntax%2Ferrors%2Fsnippet%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ferrors%2Fsnippet%2Fmod.rs?ref=9d151a71c032b655ca457521730044237c9e130e", "patch": "@@ -475,30 +475,34 @@ impl FileInfo {\n             while let Some(line) = next_line {\n                 if line.annotations.is_empty() { break; }\n \n-                let mut rendered_line = self.render_line(line);\n+                let mut rendered_lines = self.render_line(line);\n+                assert!(!rendered_lines.is_empty());\n                 if old_school {\n                     match self.primary_span {\n                         Some(span) => {\n                             let lo = codemap.lookup_char_pos(span.lo);\n-                            rendered_line[0].text.insert(0, StyledString {\n+                            rendered_lines[0].text.insert(0, StyledString {\n                                 text: format!(\":{} \", lo.line),\n                                 style: Style::LineAndColumn,\n                             });\n-                            rendered_line[0].text.insert(0, StyledString {\n+                            rendered_lines[0].text.insert(0, StyledString {\n                                 text: lo.file.name.clone(),\n                                 style: Style::FileNameStyle,\n                             });\n-                            let gap_amount = rendered_line[0].text[0].text.len() +\n-                                rendered_line[0].text[1].text.len();\n-                            rendered_line[1].text.insert(0, StyledString {\n-                                text: vec![\" \"; gap_amount].join(\"\"),\n-                                style: Style::NoStyle\n-                            });\n+                            let gap_amount =\n+                                rendered_lines[0].text[0].text.len() +\n+                                rendered_lines[0].text[1].text.len();\n+                            for i in 1..rendered_lines.len() {\n+                                rendered_lines[i].text.insert(0, StyledString {\n+                                    text: vec![\" \"; gap_amount].join(\"\"),\n+                                    style: Style::NoStyle\n+                                });\n+                            }\n                         }\n                         _ =>()\n                     }\n                 }\n-                output.append(&mut rendered_line);\n+                output.append(&mut rendered_lines);\n                 next_line = lines_iter.next();\n             }\n "}]}