{"sha": "e4b84fbf36d04e54f68f914f724c8e804233d3aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0Yjg0ZmJmMzZkMDRlNTRmNjhmOTE0ZjcyNGM4ZTgwNDIzM2QzYWE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-04T14:17:20Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-04T14:17:20Z"}, "message": "Assignment expression", "tree": {"sha": "3e38d49ae28b0600c8c17de9488e7de77d8f9cec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e38d49ae28b0600c8c17de9488e7de77d8f9cec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4b84fbf36d04e54f68f914f724c8e804233d3aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4b84fbf36d04e54f68f914f724c8e804233d3aa", "html_url": "https://github.com/rust-lang/rust/commit/e4b84fbf36d04e54f68f914f724c8e804233d3aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4b84fbf36d04e54f68f914f724c8e804233d3aa/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82efdff34bf24680bef58eca399ec3f20748a96a", "url": "https://api.github.com/repos/rust-lang/rust/commits/82efdff34bf24680bef58eca399ec3f20748a96a", "html_url": "https://github.com/rust-lang/rust/commit/82efdff34bf24680bef58eca399ec3f20748a96a"}], "stats": {"total": 120, "additions": 74, "deletions": 46}, "files": [{"sha": "a50ec2a093055b48223169244df7c8a7af66bd1c", "filename": "src/algo/walk.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e4b84fbf36d04e54f68f914f724c8e804233d3aa/src%2Falgo%2Fwalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4b84fbf36d04e54f68f914f724c8e804233d3aa/src%2Falgo%2Fwalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Falgo%2Fwalk.rs?ref=e4b84fbf36d04e54f68f914f724c8e804233d3aa", "patch": "@@ -6,6 +6,7 @@ pub fn preorder<'a>(root: SyntaxNodeRef<'a>) -> impl Iterator<Item = SyntaxNodeR\n         WalkEvent::Exit(_) => None,\n     })\n }\n+\n #[derive(Debug, Copy, Clone)]\n pub enum WalkEvent<'a> {\n     Enter(SyntaxNodeRef<'a>),"}, {"sha": "6831aef66819388ceda8495fafe30c8217f014c5", "filename": "src/grammar/expressions/mod.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e4b84fbf36d04e54f68f914f724c8e804233d3aa/src%2Fgrammar%2Fexpressions%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4b84fbf36d04e54f68f914f724c8e804233d3aa/src%2Fgrammar%2Fexpressions%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fexpressions%2Fmod.rs?ref=e4b84fbf36d04e54f68f914f724c8e804233d3aa", "patch": "@@ -35,13 +35,15 @@ struct Restrictions {\n \n // test expr_binding_power\n // fn foo() {\n-//     1 + 2 * 3 == 1 * 2 + 3\n+//     1 + 2 * 3 == 1 * 2 + 3;\n+//     *x = 1 + 1;\n // }\n fn bp_of(op: SyntaxKind) -> u8 {\n     match op {\n-        EQEQ | NEQ => 1,\n-        MINUS | PLUS => 2,\n-        STAR | SLASH => 3,\n+        EQ => 1,\n+        EQEQ | NEQ => 2,\n+        MINUS | PLUS => 3,\n+        STAR | SLASH => 4,\n         _ => 0\n     }\n }\n@@ -106,7 +108,7 @@ fn unary_expr(p: &mut Parser, r: Restrictions) -> Option<CompletedMarker> {\n             return Some(postfix_expr(p, lhs))\n         }\n     };\n-    expr(p);\n+    unary_expr(p, r);\n     Some(m.complete(p, kind))\n }\n \n@@ -247,7 +249,7 @@ fn struct_lit(p: &mut Parser) {\n \n fn bin_expr(p: &mut Parser, r: Restrictions, lhs: CompletedMarker, bp: u8) -> CompletedMarker {\n     assert!(match p.current() {\n-        MINUS | PLUS | STAR | SLASH | EQEQ | NEQ => true,\n+        MINUS | PLUS | STAR | SLASH | EQEQ | NEQ | EQ => true,\n         _ => false,\n     });\n     let m = lhs.precede(p);"}, {"sha": "87afb036eeebc33ad575fc269bae7c4890a0756b", "filename": "tests/data/parser/inline/0074_expr_binding_power.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e4b84fbf36d04e54f68f914f724c8e804233d3aa/tests%2Fdata%2Fparser%2Finline%2F0074_expr_binding_power.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4b84fbf36d04e54f68f914f724c8e804233d3aa/tests%2Fdata%2Fparser%2Finline%2F0074_expr_binding_power.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0074_expr_binding_power.rs?ref=e4b84fbf36d04e54f68f914f724c8e804233d3aa", "patch": "@@ -1,3 +1,4 @@\n fn foo() {\n-    1 + 2 * 3 == 1 * 2 + 3\n+    1 + 2 * 3 == 1 * 2 + 3;\n+    *x = 1 + 1;\n }"}, {"sha": "384fd43540f130ae10902c9c15381192ee21a02d", "filename": "tests/data/parser/inline/0074_expr_binding_power.txt", "status": "modified", "additions": 63, "deletions": 39, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/e4b84fbf36d04e54f68f914f724c8e804233d3aa/tests%2Fdata%2Fparser%2Finline%2F0074_expr_binding_power.txt", "raw_url": "https://github.com/rust-lang/rust/raw/e4b84fbf36d04e54f68f914f724c8e804233d3aa/tests%2Fdata%2Fparser%2Finline%2F0074_expr_binding_power.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0074_expr_binding_power.txt?ref=e4b84fbf36d04e54f68f914f724c8e804233d3aa", "patch": "@@ -1,5 +1,5 @@\n-FILE@[0; 40)\n-  FN_ITEM@[0; 40)\n+FILE@[0; 57)\n+  FN_ITEM@[0; 57)\n     FN_KW@[0; 2)\n     NAME@[2; 6)\n       WHITESPACE@[2; 3)\n@@ -8,41 +8,65 @@ FILE@[0; 40)\n       L_PAREN@[6; 7)\n       R_PAREN@[7; 8)\n       WHITESPACE@[8; 9)\n-    BLOCK_EXPR@[9; 40)\n+    BLOCK_EXPR@[9; 57)\n       L_CURLY@[9; 10)\n-      BIN_EXPR@[10; 38)\n-        BIN_EXPR@[10; 25)\n-          LITERAL@[10; 17)\n-            WHITESPACE@[10; 15)\n-            INT_NUMBER@[15; 16) \"1\"\n-            WHITESPACE@[16; 17)\n-          PLUS@[17; 18)\n-          BIN_EXPR@[18; 25)\n-            LITERAL@[18; 21)\n-              WHITESPACE@[18; 19)\n-              INT_NUMBER@[19; 20) \"2\"\n-              WHITESPACE@[20; 21)\n-            STAR@[21; 22)\n-            LITERAL@[22; 25)\n-              WHITESPACE@[22; 23)\n-              INT_NUMBER@[23; 24) \"3\"\n-              WHITESPACE@[24; 25)\n-        EQEQ@[25; 27)\n-        BIN_EXPR@[27; 38)\n-          BIN_EXPR@[27; 34)\n-            LITERAL@[27; 30)\n-              WHITESPACE@[27; 28)\n-              INT_NUMBER@[28; 29) \"1\"\n-              WHITESPACE@[29; 30)\n-            STAR@[30; 31)\n-            LITERAL@[31; 34)\n-              WHITESPACE@[31; 32)\n-              INT_NUMBER@[32; 33) \"2\"\n-              WHITESPACE@[33; 34)\n-          PLUS@[34; 35)\n-          LITERAL@[35; 38)\n-            WHITESPACE@[35; 36)\n-            INT_NUMBER@[36; 37) \"3\"\n-            WHITESPACE@[37; 38)\n-      R_CURLY@[38; 39)\n-      WHITESPACE@[39; 40)\n+      EXPR_STMT@[10; 43)\n+        BIN_EXPR@[10; 37)\n+          BIN_EXPR@[10; 25)\n+            LITERAL@[10; 17)\n+              WHITESPACE@[10; 15)\n+              INT_NUMBER@[15; 16) \"1\"\n+              WHITESPACE@[16; 17)\n+            PLUS@[17; 18)\n+            BIN_EXPR@[18; 25)\n+              LITERAL@[18; 21)\n+                WHITESPACE@[18; 19)\n+                INT_NUMBER@[19; 20) \"2\"\n+                WHITESPACE@[20; 21)\n+              STAR@[21; 22)\n+              LITERAL@[22; 25)\n+                WHITESPACE@[22; 23)\n+                INT_NUMBER@[23; 24) \"3\"\n+                WHITESPACE@[24; 25)\n+          EQEQ@[25; 27)\n+          BIN_EXPR@[27; 37)\n+            BIN_EXPR@[27; 34)\n+              LITERAL@[27; 30)\n+                WHITESPACE@[27; 28)\n+                INT_NUMBER@[28; 29) \"1\"\n+                WHITESPACE@[29; 30)\n+              STAR@[30; 31)\n+              LITERAL@[31; 34)\n+                WHITESPACE@[31; 32)\n+                INT_NUMBER@[32; 33) \"2\"\n+                WHITESPACE@[33; 34)\n+            PLUS@[34; 35)\n+            LITERAL@[35; 37)\n+              WHITESPACE@[35; 36)\n+              INT_NUMBER@[36; 37) \"3\"\n+        SEMI@[37; 38)\n+        WHITESPACE@[38; 43)\n+      EXPR_STMT@[43; 55)\n+        BIN_EXPR@[43; 53)\n+          DEREF_EXPR@[43; 46)\n+            STAR@[43; 44)\n+            PATH_EXPR@[44; 46)\n+              PATH@[44; 46)\n+                PATH_SEGMENT@[44; 46)\n+                  NAME_REF@[44; 46)\n+                    IDENT@[44; 45) \"x\"\n+                    WHITESPACE@[45; 46)\n+          EQ@[46; 47)\n+          BIN_EXPR@[47; 53)\n+            LITERAL@[47; 50)\n+              WHITESPACE@[47; 48)\n+              INT_NUMBER@[48; 49) \"1\"\n+              WHITESPACE@[49; 50)\n+            PLUS@[50; 51)\n+            LITERAL@[51; 53)\n+              WHITESPACE@[51; 52)\n+              INT_NUMBER@[52; 53) \"1\"\n+        SEMI@[53; 54)\n+        WHITESPACE@[54; 55)\n+      R_CURLY@[55; 56)\n+      WHITESPACE@[56; 57)"}]}