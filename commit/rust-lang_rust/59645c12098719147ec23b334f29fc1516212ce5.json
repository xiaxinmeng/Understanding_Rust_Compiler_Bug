{"sha": "59645c12098719147ec23b334f29fc1516212ce5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5NjQ1YzEyMDk4NzE5MTQ3ZWMyM2IzMzRmMjlmYzE1MTYyMTJjZTU=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-04-01T14:16:58Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-04-01T14:16:58Z"}, "message": "back: link: remove dead code", "tree": {"sha": "2560f4f68a3f4e8751a852428b9d0f46395cd5fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2560f4f68a3f4e8751a852428b9d0f46395cd5fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59645c12098719147ec23b334f29fc1516212ce5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59645c12098719147ec23b334f29fc1516212ce5", "html_url": "https://github.com/rust-lang/rust/commit/59645c12098719147ec23b334f29fc1516212ce5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59645c12098719147ec23b334f29fc1516212ce5/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74ddaa27e759c1b00cf1e369d17bec4be5c16aee", "url": "https://api.github.com/repos/rust-lang/rust/commits/74ddaa27e759c1b00cf1e369d17bec4be5c16aee", "html_url": "https://github.com/rust-lang/rust/commit/74ddaa27e759c1b00cf1e369d17bec4be5c16aee"}], "stats": {"total": 10, "additions": 0, "deletions": 10}, "files": [{"sha": "e9292f54a4b266f6c7c27152f130d44596087416", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/59645c12098719147ec23b334f29fc1516212ce5/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59645c12098719147ec23b334f29fc1516212ce5/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=59645c12098719147ec23b334f29fc1516212ce5", "patch": "@@ -687,16 +687,6 @@ pub fn mangle_exported_name(ccx: &CrateContext, path: PathElems,\n     exported_name(path, hash, ccx.link_meta.crateid.version_or_default())\n }\n \n-pub fn mangle_internal_name_by_type_only(ccx: &CrateContext,\n-                                         t: ty::t,\n-                                         name: &str) -> ~str {\n-    let s = ppaux::ty_to_short_str(ccx.tcx(), t);\n-    let path = [PathName(token::intern(name)),\n-                PathName(token::intern(s))];\n-    let hash = get_symbol_hash(ccx, t);\n-    mangle(ast_map::Values(path.iter()), Some(hash.as_slice()), None)\n-}\n-\n pub fn mangle_internal_name_by_type_and_seq(ccx: &CrateContext,\n                                             t: ty::t,\n                                             name: &str) -> ~str {"}]}