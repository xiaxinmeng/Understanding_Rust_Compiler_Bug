{"sha": "6b3d3803eb8437907153bbb1b3c3978b29cd3a3b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiM2QzODAzZWI4NDM3OTA3MTUzYmJiMWIzYzM5NzhiMjljZDNhM2I=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-06-08T00:50:45Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-06-08T00:52:48Z"}, "message": "Clarify restrictions on ne\n\nI can't think of any sane cases where this restriction would not hold,\nand the standard library seems to assume it pretty much everywhere.", "tree": {"sha": "2378b0d96f006e4dd83fceaab9e36ab502415e07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2378b0d96f006e4dd83fceaab9e36ab502415e07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b3d3803eb8437907153bbb1b3c3978b29cd3a3b", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b3d3803eb8437907153bbb1b3c3978b29cd3a3b", "html_url": "https://github.com/rust-lang/rust/commit/6b3d3803eb8437907153bbb1b3c3978b29cd3a3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b3d3803eb8437907153bbb1b3c3978b29cd3a3b/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92221aba7b5f3e1688548cb97f51a21da981e3e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/92221aba7b5f3e1688548cb97f51a21da981e3e2", "html_url": "https://github.com/rust-lang/rust/commit/92221aba7b5f3e1688548cb97f51a21da981e3e2"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "b25f69bca40b8f361e080b7b65221033d9a979c4", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6b3d3803eb8437907153bbb1b3c3978b29cd3a3b/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b3d3803eb8437907153bbb1b3c3978b29cd3a3b/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=6b3d3803eb8437907153bbb1b3c3978b29cd3a3b", "patch": "@@ -43,8 +43,10 @@\n /// equivalence relation. For example, in floating point numbers `NaN != NaN`,\n /// so floating point types implement `PartialEq` but not `Eq`.\n ///\n-/// PartialEq only requires the `eq` method to be implemented; `ne` is its\n-/// negation by default.\n+/// PartialEq only requires the `eq` method to be implemented; `ne` is defined\n+/// in terms of it by default. Any manual implementation of `ne` *must* respect\n+/// the rule that `eq` is a strict inverse of `ne`; that is, `!(a == b)` if and\n+/// only if `a != b`.\n ///\n /// Eventually, this will be implemented by default for types that implement\n /// `Eq`."}]}