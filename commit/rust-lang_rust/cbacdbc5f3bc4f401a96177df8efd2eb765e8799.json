{"sha": "cbacdbc5f3bc4f401a96177df8efd2eb765e8799", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiYWNkYmM1ZjNiYzRmNDAxYTk2MTc3ZGY4ZWZkMmViNzY1ZTg3OTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-30T12:41:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-30T12:41:22Z"}, "message": "auto merge of #16598 : bkoropoff/rust/import-shadow-name, r=alexcrichton\n\nThis partially alleviates the confusing behavior in issue #16597", "tree": {"sha": "3fbb3f862a421b6793ec3b99a1510a25ce71e6f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fbb3f862a421b6793ec3b99a1510a25ce71e6f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbacdbc5f3bc4f401a96177df8efd2eb765e8799", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbacdbc5f3bc4f401a96177df8efd2eb765e8799", "html_url": "https://github.com/rust-lang/rust/commit/cbacdbc5f3bc4f401a96177df8efd2eb765e8799", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbacdbc5f3bc4f401a96177df8efd2eb765e8799/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d398eb76ae5fdb7c08bbb7c0e3d85dc22d42c5ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/d398eb76ae5fdb7c08bbb7c0e3d85dc22d42c5ce", "html_url": "https://github.com/rust-lang/rust/commit/d398eb76ae5fdb7c08bbb7c0e3d85dc22d42c5ce"}, {"sha": "6bbec28ea0193b09dbdfc2669b94ec7603506d21", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bbec28ea0193b09dbdfc2669b94ec7603506d21", "html_url": "https://github.com/rust-lang/rust/commit/6bbec28ea0193b09dbdfc2669b94ec7603506d21"}], "stats": {"total": 43, "additions": 32, "deletions": 11}, "files": [{"sha": "0c8697d31f3c98dd2023d1013d9578b96344b004", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/cbacdbc5f3bc4f401a96177df8efd2eb765e8799/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbacdbc5f3bc4f401a96177df8efd2eb765e8799/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=cbacdbc5f3bc4f401a96177df8efd2eb765e8799", "patch": "@@ -2822,9 +2822,10 @@ impl<'a> Resolver<'a> {\n                  .contains_key(&name) {\n             match import_resolution.type_target {\n                 Some(ref target) if !target.shadowable => {\n-                    self.session.span_err(import_span,\n-                                          \"import conflicts with imported \\\n-                                           crate in this module\");\n+                    let msg = format!(\"import `{}` conflicts with imported \\\n+                                       crate in this module\",\n+                                      token::get_name(name).get());\n+                    self.session.span_err(import_span, msg.as_slice());\n                 }\n                 Some(_) | None => {}\n             }\n@@ -2845,9 +2846,10 @@ impl<'a> Resolver<'a> {\n                 match *name_bindings.value_def.borrow() {\n                     None => {}\n                     Some(ref value) => {\n-                        self.session.span_err(import_span,\n-                                              \"import conflicts with value \\\n-                                               in this module\");\n+                        let msg = format!(\"import `{}` conflicts with value \\\n+                                           in this module\",\n+                                          token::get_name(name).get());\n+                        self.session.span_err(import_span, msg.as_slice());\n                         match value.value_span {\n                             None => {}\n                             Some(span) => {\n@@ -2867,9 +2869,10 @@ impl<'a> Resolver<'a> {\n                 match *name_bindings.type_def.borrow() {\n                     None => {}\n                     Some(ref ty) => {\n-                        self.session.span_err(import_span,\n-                                              \"import conflicts with type in \\\n-                                               this module\");\n+                        let msg = format!(\"import `{}` conflicts with type in \\\n+                                           this module\",\n+                                          token::get_name(name).get());\n+                        self.session.span_err(import_span, msg.as_slice());\n                         match ty.type_span {\n                             None => {}\n                             Some(span) => {"}, {"sha": "f27b11d5411c9589b417d9acf0bc93a92b92e812", "filename": "src/test/compile-fail/resolve-conflict-import-vs-extern-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cbacdbc5f3bc4f401a96177df8efd2eb765e8799/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-import-vs-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbacdbc5f3bc4f401a96177df8efd2eb765e8799/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-import-vs-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-import-vs-extern-crate.rs?ref=cbacdbc5f3bc4f401a96177df8efd2eb765e8799", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::slice as std; //~ ERROR import conflicts with imported crate\n+use std::slice as std; //~ ERROR import `std` conflicts with imported crate\n \n fn main() {\n }"}, {"sha": "96800918351c139becbaac93aac5efdb58d746e0", "filename": "src/test/compile-fail/resolve-conflict-item-vs-import.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cbacdbc5f3bc4f401a96177df8efd2eb765e8799/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-item-vs-import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbacdbc5f3bc4f401a96177df8efd2eb765e8799/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-item-vs-import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-item-vs-import.rs?ref=cbacdbc5f3bc4f401a96177df8efd2eb765e8799", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use std::mem::transmute;\n-//~^ ERROR import conflicts with value in this module\n+//~^ ERROR import `transmute` conflicts with value in this module\n \n fn transmute() {}\n "}, {"sha": "fa072fa62ab7ba5892f205f5c61adf1c644a0aaa", "filename": "src/test/compile-fail/resolve-conflict-type-vs-import.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/cbacdbc5f3bc4f401a96177df8efd2eb765e8799/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-type-vs-import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbacdbc5f3bc4f401a96177df8efd2eb765e8799/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-type-vs-import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-type-vs-import.rs?ref=cbacdbc5f3bc4f401a96177df8efd2eb765e8799", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::slice::Items;\n+//~^ ERROR import `Items` conflicts with type in this module\n+\n+struct Items;\n+\n+fn main() {\n+}\n+"}]}