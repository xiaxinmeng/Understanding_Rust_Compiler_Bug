{"sha": "5a4c04cc2cddb3d0da846096494a723315dd2975", "node_id": "C_kwDOAAsO6NoAKDVhNGMwNGNjMmNkZGIzZDBkYTg0NjA5NjQ5NGE3MjMzMTVkZDI5NzU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-27T18:40:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-27T18:40:29Z"}, "message": "Rollup merge of #111656 - finnbear:string_leak_unbounded_lifetime, r=Amanieu\n\nUse an unbounded lifetime in `String::leak`.\n\nUsing `'a` instead of `'static` is predicted to make the process of making `String` generic over an allocator easier/less of a breaking change.\n\nSee:\n- https://github.com/rust-lang/rust/pull/109814#issuecomment-1550164195\n- https://github.com/rust-lang/rust/pull/109814#issuecomment-1550250163\n\nACP: https://github.com/rust-lang/libs-team/issues/109", "tree": {"sha": "d89fd1e1c07961ff24157a6c2671827b0c59468d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d89fd1e1c07961ff24157a6c2671827b0c59468d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a4c04cc2cddb3d0da846096494a723315dd2975", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkck6dCRBK7hj4Ov3rIwAAIoQIADmJUYpzwAlGKFQVncj+ybYJ\n4Wtsdj0UEOrZdxxR+JvgnXbPaAdaUBpMtsMyvJihxpfnkuCfu/0TsHLwb5x31TWX\neWL0A3zxK2iVizjiEbS5ilKXLOcXYtbypEmDdd5SCFrDKe9SGLSdsaTaHvnkhqIp\nf1wGzLq2R8Uv7HisJMbJXnds71hphRxFkytZVjp4PKQdDPUpntdvsBCohNkIm59k\nzX2Xr5XQL4+LshDgN/uAPpTNJ4IQ29N/Ss+/0B6BNvUi1IWFskn6F07etTF7Dn1B\n/TRymcZxZvywJEj/v6GT5d2o3aSOMX9tQwOXgl+21q59jZVkLmauz6A7G8Xfcfs=\n=JzEQ\n-----END PGP SIGNATURE-----\n", "payload": "tree d89fd1e1c07961ff24157a6c2671827b0c59468d\nparent 97fae38bf92a80c6ba41bf2a195afb2300aae275\nparent f0c9c1eb19864d95e6348d79c54fa4a412019f3a\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1685212829 +0200\ncommitter GitHub <noreply@github.com> 1685212829 +0200\n\nRollup merge of #111656 - finnbear:string_leak_unbounded_lifetime, r=Amanieu\n\nUse an unbounded lifetime in `String::leak`.\n\nUsing `'a` instead of `'static` is predicted to make the process of making `String` generic over an allocator easier/less of a breaking change.\n\nSee:\n- https://github.com/rust-lang/rust/pull/109814#issuecomment-1550164195\n- https://github.com/rust-lang/rust/pull/109814#issuecomment-1550250163\n\nACP: https://github.com/rust-lang/libs-team/issues/109\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a4c04cc2cddb3d0da846096494a723315dd2975", "html_url": "https://github.com/rust-lang/rust/commit/5a4c04cc2cddb3d0da846096494a723315dd2975", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a4c04cc2cddb3d0da846096494a723315dd2975/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97fae38bf92a80c6ba41bf2a195afb2300aae275", "url": "https://api.github.com/repos/rust-lang/rust/commits/97fae38bf92a80c6ba41bf2a195afb2300aae275", "html_url": "https://github.com/rust-lang/rust/commit/97fae38bf92a80c6ba41bf2a195afb2300aae275"}, {"sha": "f0c9c1eb19864d95e6348d79c54fa4a412019f3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0c9c1eb19864d95e6348d79c54fa4a412019f3a", "html_url": "https://github.com/rust-lang/rust/commit/f0c9c1eb19864d95e6348d79c54fa4a412019f3a"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c524d4c036709c4c8f4fb3f49adfb5cc9a330199", "filename": "library/alloc/src/string.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4c04cc2cddb3d0da846096494a723315dd2975/library%2Falloc%2Fsrc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4c04cc2cddb3d0da846096494a723315dd2975/library%2Falloc%2Fsrc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fstring.rs?ref=5a4c04cc2cddb3d0da846096494a723315dd2975", "patch": "@@ -1851,7 +1851,7 @@ impl String {\n     }\n \n     /// Consumes and leaks the `String`, returning a mutable reference to the contents,\n-    /// `&'static mut str`.\n+    /// `&'a mut str`.\n     ///\n     /// This is mainly useful for data that lives for the remainder of\n     /// the program's life. Dropping the returned reference will cause a memory\n@@ -1874,7 +1874,7 @@ impl String {\n     /// ```\n     #[unstable(feature = \"string_leak\", issue = \"102929\")]\n     #[inline]\n-    pub fn leak(self) -> &'static mut str {\n+    pub fn leak<'a>(self) -> &'a mut str {\n         let slice = self.vec.leak();\n         unsafe { from_utf8_unchecked_mut(slice) }\n     }"}]}