{"sha": "8f94d9bb0828a2dfcc1dd3258de7775b9bae2cc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmOTRkOWJiMDgyOGEyZGZjYzFkZDMyNThkZTc3NzViOWJhZTJjYzg=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2020-01-06T00:11:27Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2020-01-06T00:11:27Z"}, "message": "Fix ICE in const pretty printing and resolve FIXME\n\nConsts now have a `fmt::Display` impl, so we can just use that to pretty-print.", "tree": {"sha": "6b4ce3b89d16e44bf2a115b2b74270641cafcd6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b4ce3b89d16e44bf2a115b2b74270641cafcd6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f94d9bb0828a2dfcc1dd3258de7775b9bae2cc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f94d9bb0828a2dfcc1dd3258de7775b9bae2cc8", "html_url": "https://github.com/rust-lang/rust/commit/8f94d9bb0828a2dfcc1dd3258de7775b9bae2cc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f94d9bb0828a2dfcc1dd3258de7775b9bae2cc8/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "760ce94c69ca510d44087291c311296f6d9ccdf5", "url": "https://api.github.com/repos/rust-lang/rust/commits/760ce94c69ca510d44087291c311296f6d9ccdf5", "html_url": "https://github.com/rust-lang/rust/commit/760ce94c69ca510d44087291c311296f6d9ccdf5"}], "stats": {"total": 17, "additions": 5, "deletions": 12}, "files": [{"sha": "f5b0090a8aae13c15dc3317f5bba61ed40f2f5f1", "filename": "src/librustc/ty/print/obsolete.rs", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8f94d9bb0828a2dfcc1dd3258de7775b9bae2cc8/src%2Flibrustc%2Fty%2Fprint%2Fobsolete.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f94d9bb0828a2dfcc1dd3258de7775b9bae2cc8/src%2Flibrustc%2Fty%2Fprint%2Fobsolete.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fprint%2Fobsolete.rs?ref=8f94d9bb0828a2dfcc1dd3258de7775b9bae2cc8", "patch": "@@ -165,19 +165,12 @@ impl DefPathBasedNames<'tcx> {\n     }\n \n     // Pushes the the name of the specified const to the provided string.\n-    // If `debug` is true, usually-unprintable consts (such as `Infer`) will be printed,\n-    // as well as the unprintable types of constants (see `push_type_name` for more details).\n-    pub fn push_const_name(&self, c: &Const<'tcx>, output: &mut String, debug: bool) {\n-        if let ty::ConstKind::Value(_) = c.val {\n-            // FIXME(const_generics): we could probably do a better job here.\n-            write!(output, \"{:?}\", c).unwrap()\n-        } else if debug {\n-            write!(output, \"{:?}\", c).unwrap()\n-        } else {\n-            bug!(\"DefPathBasedNames: trying to create const name for unexpected const: {:?}\", c,);\n-        }\n+    // If `debug` is true, the unprintable types of constants will be printed with `fmt::Debug`\n+    // (see `push_type_name` for more details).\n+    pub fn push_const_name(&self, ct: &Const<'tcx>, output: &mut String, debug: bool) {\n+        write!(output, \"{}\", ct).unwrap();\n         output.push_str(\": \");\n-        self.push_type_name(c.ty, output, debug);\n+        self.push_type_name(ct.ty, output, debug);\n     }\n \n     pub fn push_def_path(&self, def_id: DefId, output: &mut String) {"}]}