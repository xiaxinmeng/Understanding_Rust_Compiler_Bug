{"sha": "4730cdf8250192d1fb268dd027b9cb40fa6fe370", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3MzBjZGY4MjUwMTkyZDFmYjI2OGRkMDI3YjljYjQwZmE2ZmUzNzA=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-02-14T11:48:46Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-02-14T13:26:47Z"}, "message": "fix a bug in drop code of structs with unsized fields", "tree": {"sha": "ec2aec26ce8c62a36c19cc18ad22be609e74e36c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec2aec26ce8c62a36c19cc18ad22be609e74e36c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4730cdf8250192d1fb268dd027b9cb40fa6fe370", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlijBZcACgkQpp+NIls6\n19kdGhAAtyiXaJyKimlvufL+xb9a+JTIf6F1mfGgMScIBZJu9anTuYtvS8PpKjLa\nHON3+9Uj+gS8mzp8dmsFMzYIwOaDwypuTgyJnGYxA/DvQSq6ULhzFBwqthoG8luq\nVkHj76oh8YtmWuMlBrn2tAsj5AhxzKB3SvpkBQ5Se1tcJ7sIWWh+wDq3PXc4dmL3\no743Yi9Oqbx0FG+JKay091262EQ8swdowQDt0ZMwaHS2CcgIzc2j6YmSURlgTzPw\ntR5+ssAMwKstRlLAp43ZpsWuXXRSvqnFtZhFQC1+IEie4DbGsps6eO6FjF14+CpJ\nLQT3ywOWKnZqQNFJ71xvbps7yvIyT+yE/e8jOA9Z0Cy9GEYwJOeRPTGNv/HA9/8w\n6DE4Q/D6cOLUrxfFuvqaccH4oe6L+I+cmHpvtHepTf5EulCyDHOd9AsdsGzXUFHY\nSsjrr7GRRc6Jcx2g94gdStwOskizqoXRmKAMFyfnfw4Cx44J83gnH5gOVOcxHE3l\nVXtf4Q9AlMlf6ptRts+NWvrXs0NyAFYIJIN9wph6339Q1p7fkIgTlM2VkE7dKMYP\nWUDNoSdJmXd+o/9Nlb/7yVnVa2KMdwqSVd++qSmIZcnvvuG+lPDLiEhVa5l0Kn7A\nPTPtlVWg9xfNo7UjrWIr5EOmJFIcFXMnD124SUCIgw6HZoEjThU=\n=3Pg2\n-----END PGP SIGNATURE-----", "payload": "tree ec2aec26ce8c62a36c19cc18ad22be609e74e36c\nparent eeae478e7428f40959d048adce14605c47a6d378\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1487072926 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1487078807 +0100\n\nfix a bug in drop code of structs with unsized fields"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4730cdf8250192d1fb268dd027b9cb40fa6fe370", "html_url": "https://github.com/rust-lang/rust/commit/4730cdf8250192d1fb268dd027b9cb40fa6fe370", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4730cdf8250192d1fb268dd027b9cb40fa6fe370/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eeae478e7428f40959d048adce14605c47a6d378", "url": "https://api.github.com/repos/rust-lang/rust/commits/eeae478e7428f40959d048adce14605c47a6d378", "html_url": "https://github.com/rust-lang/rust/commit/eeae478e7428f40959d048adce14605c47a6d378"}], "stats": {"total": 39, "additions": 34, "deletions": 5}, "files": [{"sha": "71f3d46736605bd2a95cdd62164c9f97aa7a0d71", "filename": "src/terminator/drop.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4730cdf8250192d1fb268dd027b9cb40fa6fe370/src%2Fterminator%2Fdrop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4730cdf8250192d1fb268dd027b9cb40fa6fe370/src%2Fterminator%2Fdrop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fdrop.rs?ref=4730cdf8250192d1fb268dd027b9cb40fa6fe370", "patch": "@@ -94,10 +94,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n             ty::TyAdt(adt_def, substs) => {\n                 // FIXME: some structs are represented as ByValPair\n                 let mut lval = self.force_allocation(lval)?;\n-                let adt_ptr = match lval {\n-                    Lvalue::Ptr { ptr, .. } => ptr,\n-                    _ => bug!(\"force allocation can only yield Lvalue::Ptr\"),\n-                };\n+                let (adt_ptr, extra) = lval.to_ptr_and_extra();\n \n                 // run drop impl before the fields' drop impls\n                 if let Some(drop_def_id) = adt_def.destructor() {\n@@ -109,7 +106,13 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                         traits::VtableImpl(data) => data,\n                         _ => bug!(\"dtor for {:?} is not an impl???\", ty)\n                     };\n-                    drop.push((drop_def_id, Value::ByVal(PrimVal::Ptr(adt_ptr)), vtable.substs));\n+                    let val = match extra {\n+                        LvalueExtra::None => Value::ByVal(PrimVal::Ptr(adt_ptr)),\n+                        LvalueExtra::DowncastVariant(_) => bug!(\"downcast variant in drop\"),\n+                        LvalueExtra::Length(n) => Value::ByValPair(PrimVal::Ptr(adt_ptr), PrimVal::from_u128(n as u128)),\n+                        LvalueExtra::Vtable(vtable) => Value::ByValPair(PrimVal::Ptr(adt_ptr), PrimVal::Ptr(vtable)),\n+                    };\n+                    drop.push((drop_def_id, val, vtable.substs));\n                 }\n \n                 let layout = self.type_layout(ty)?;"}, {"sha": "62626d75865cfc87f424ae16bf1c01705b0cc716", "filename": "tests/run-pass/issue-26709.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/4730cdf8250192d1fb268dd027b9cb40fa6fe370/tests%2Frun-pass%2Fissue-26709.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4730cdf8250192d1fb268dd027b9cb40fa6fe370/tests%2Frun-pass%2Fissue-26709.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fissue-26709.rs?ref=4730cdf8250192d1fb268dd027b9cb40fa6fe370", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Wrapper<'a, T: ?Sized>(&'a mut i32, T);\n+\n+impl<'a, T: ?Sized> Drop for Wrapper<'a, T> {\n+    fn drop(&mut self) {\n+        *self.0 = 432;\n+    }\n+}\n+\n+fn main() {\n+    let mut x = 0;\n+    {\n+        let wrapper = Box::new(Wrapper(&mut x, 123));\n+        let _: Box<Wrapper<Send>> = wrapper;\n+    }\n+    assert_eq!(432, x)\n+}"}]}