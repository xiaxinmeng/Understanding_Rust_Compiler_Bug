{"sha": "16d13a5a4b77ea543850a216a0ad8453ebade3cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2ZDEzYTVhNGI3N2VhNTQzODUwYTIxNmEwYWQ4NDUzZWJhZGUzY2Q=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-21T14:12:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-21T14:12:43Z"}, "message": "Auto merge of #6611 - pastchick3:master, r=flip1995\n\nFix the reversed suggestion message of `stable_sort_primitive`.\n\nNow Clippy emits `stable_sort_primitive` warning as follows:\n\n```\nwarning: used sort instead of sort_unstable to sort primitive type `usize`\n  --> src\\asm.rs:41:13\n   |\n41 |             self.successors.sort();\n   |             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.successors.sort_unstable()`\n   |\n   = note: `#[warn(clippy::stable_sort_primitive)]` on by default\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#stable_sort_primitive\n```\n\nI think the position of `sort` and `sort_unstable` in the first line should be reversed.\n\nchangelog: Fix the reversed suggestion message of `stable_sort_primitive`.", "tree": {"sha": "4ce7b181513f780ffed254734978beeaa60aa266", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ce7b181513f780ffed254734978beeaa60aa266"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16d13a5a4b77ea543850a216a0ad8453ebade3cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16d13a5a4b77ea543850a216a0ad8453ebade3cd", "html_url": "https://github.com/rust-lang/rust/commit/16d13a5a4b77ea543850a216a0ad8453ebade3cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16d13a5a4b77ea543850a216a0ad8453ebade3cd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d990c31990e72dfdff361c384da7550968e2822a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d990c31990e72dfdff361c384da7550968e2822a", "html_url": "https://github.com/rust-lang/rust/commit/d990c31990e72dfdff361c384da7550968e2822a"}, {"sha": "e42208f1b7befe316e32c66b6dc6d242a56f4d84", "url": "https://api.github.com/repos/rust-lang/rust/commits/e42208f1b7befe316e32c66b6dc6d242a56f4d84", "html_url": "https://github.com/rust-lang/rust/commit/e42208f1b7befe316e32c66b6dc6d242a56f4d84"}], "stats": {"total": 58, "additions": 39, "deletions": 19}, "files": [{"sha": "276a9338819d9303c544411021dd419f2d4daa19", "filename": "clippy_lints/src/stable_sort_primitive.rs", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/16d13a5a4b77ea543850a216a0ad8453ebade3cd/clippy_lints%2Fsrc%2Fstable_sort_primitive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16d13a5a4b77ea543850a216a0ad8453ebade3cd/clippy_lints%2Fsrc%2Fstable_sort_primitive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstable_sort_primitive.rs?ref=16d13a5a4b77ea543850a216a0ad8453ebade3cd", "patch": "@@ -1,4 +1,4 @@\n-use crate::utils::{is_slice_of_primitives, span_lint_and_sugg, sugg::Sugg};\n+use crate::utils::{is_slice_of_primitives, span_lint_and_then, sugg::Sugg};\n \n use if_chain::if_chain;\n \n@@ -107,25 +107,32 @@ fn detect_stable_sort_primitive(cx: &LateContext<'_>, expr: &Expr<'_>) -> Option\n impl LateLintPass<'_> for StableSortPrimitive {\n     fn check_expr(&mut self, cx: &LateContext<'_>, expr: &Expr<'_>) {\n         if let Some(detection) = detect_stable_sort_primitive(cx, expr) {\n-            span_lint_and_sugg(\n+            span_lint_and_then(\n                 cx,\n                 STABLE_SORT_PRIMITIVE,\n                 expr.span,\n                 format!(\n-                    \"used {} instead of {} to sort primitive type `{}`\",\n+                    \"used `{}` on primitive type `{}`\",\n                     detection.method.stable_name(),\n-                    detection.method.unstable_name(),\n                     detection.slice_type,\n                 )\n                 .as_str(),\n-                \"try\",\n-                format!(\n-                    \"{}.{}({})\",\n-                    detection.slice_name,\n-                    detection.method.unstable_name(),\n-                    detection.method_args\n-                ),\n-                Applicability::MachineApplicable,\n+                |diag| {\n+                    diag.span_suggestion(\n+                        expr.span,\n+                        \"try\",\n+                        format!(\n+                            \"{}.{}({})\",\n+                            detection.slice_name,\n+                            detection.method.unstable_name(),\n+                            detection.method_args,\n+                        ),\n+                        Applicability::MachineApplicable,\n+                    );\n+                    diag.note(\n+                        \"an unstable sort would perform faster without any observable difference for this data type\",\n+                    );\n+                },\n             );\n         }\n     }"}, {"sha": "b8d22ed250467b533789ed47155142fcc5ec2d00", "filename": "tests/ui/stable_sort_primitive.stderr", "status": "modified", "additions": 20, "deletions": 7, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/16d13a5a4b77ea543850a216a0ad8453ebade3cd/tests%2Fui%2Fstable_sort_primitive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/16d13a5a4b77ea543850a216a0ad8453ebade3cd/tests%2Fui%2Fstable_sort_primitive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstable_sort_primitive.stderr?ref=16d13a5a4b77ea543850a216a0ad8453ebade3cd", "patch": "@@ -1,46 +1,59 @@\n-error: used sort instead of sort_unstable to sort primitive type `i32`\n+error: used `sort` on primitive type `i32`\n   --> $DIR/stable_sort_primitive.rs:7:5\n    |\n LL |     vec.sort();\n    |     ^^^^^^^^^^ help: try: `vec.sort_unstable()`\n    |\n    = note: `-D clippy::stable-sort-primitive` implied by `-D warnings`\n+   = note: an unstable sort would perform faster without any observable difference for this data type\n \n-error: used sort instead of sort_unstable to sort primitive type `bool`\n+error: used `sort` on primitive type `bool`\n   --> $DIR/stable_sort_primitive.rs:9:5\n    |\n LL |     vec.sort();\n    |     ^^^^^^^^^^ help: try: `vec.sort_unstable()`\n+   |\n+   = note: an unstable sort would perform faster without any observable difference for this data type\n \n-error: used sort instead of sort_unstable to sort primitive type `char`\n+error: used `sort` on primitive type `char`\n   --> $DIR/stable_sort_primitive.rs:11:5\n    |\n LL |     vec.sort();\n    |     ^^^^^^^^^^ help: try: `vec.sort_unstable()`\n+   |\n+   = note: an unstable sort would perform faster without any observable difference for this data type\n \n-error: used sort instead of sort_unstable to sort primitive type `str`\n+error: used `sort` on primitive type `str`\n   --> $DIR/stable_sort_primitive.rs:13:5\n    |\n LL |     vec.sort();\n    |     ^^^^^^^^^^ help: try: `vec.sort_unstable()`\n+   |\n+   = note: an unstable sort would perform faster without any observable difference for this data type\n \n-error: used sort instead of sort_unstable to sort primitive type `tuple`\n+error: used `sort` on primitive type `tuple`\n   --> $DIR/stable_sort_primitive.rs:15:5\n    |\n LL |     vec.sort();\n    |     ^^^^^^^^^^ help: try: `vec.sort_unstable()`\n+   |\n+   = note: an unstable sort would perform faster without any observable difference for this data type\n \n-error: used sort instead of sort_unstable to sort primitive type `array`\n+error: used `sort` on primitive type `array`\n   --> $DIR/stable_sort_primitive.rs:17:5\n    |\n LL |     vec.sort();\n    |     ^^^^^^^^^^ help: try: `vec.sort_unstable()`\n+   |\n+   = note: an unstable sort would perform faster without any observable difference for this data type\n \n-error: used sort instead of sort_unstable to sort primitive type `i32`\n+error: used `sort` on primitive type `i32`\n   --> $DIR/stable_sort_primitive.rs:19:5\n    |\n LL |     arr.sort();\n    |     ^^^^^^^^^^ help: try: `arr.sort_unstable()`\n+   |\n+   = note: an unstable sort would perform faster without any observable difference for this data type\n \n error: aborting due to 7 previous errors\n "}]}