{"sha": "b528cc90bc35a111125bfd2382bfcdcd345cea69", "node_id": "C_kwDOAAsO6NoAKGI1MjhjYzkwYmMzNWExMTExMjViZmQyMzgyYmZjZGNkMzQ1Y2VhNjk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-24T09:24:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-24T09:24:41Z"}, "message": "Auto merge of #10391 - ldm0:ldm0_fix_unwrap_in_tests, r=xFrednet\n\nFix test function checker in `unwrap_used`, `expect_used`\n\nAfter #9686 , `unwrap` and `expect` in integration tests and raw test functions won't be allowed.\n\nfixes #10011\nfixes #10238\nfixes #10264\n\n---\n\nchangelog: Fix: [`expect_used`], [`unwrap_used`], [`dbg_macro`], [`print_stdout`], [`print_stderr`]: No longer lint in test functions, if the related configuration is set\n[#10391](https://github.com/rust-lang/rust-clippy/pull/10391)\n<!-- changelog_checked -->", "tree": {"sha": "f435ea1d976e7ba9ad2f0a30f725c29c4147ad63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f435ea1d976e7ba9ad2f0a30f725c29c4147ad63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b528cc90bc35a111125bfd2382bfcdcd345cea69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b528cc90bc35a111125bfd2382bfcdcd345cea69", "html_url": "https://github.com/rust-lang/rust/commit/b528cc90bc35a111125bfd2382bfcdcd345cea69", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b528cc90bc35a111125bfd2382bfcdcd345cea69/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "659112ca956c70e9983c9e1e3d1e3a7abec63110", "url": "https://api.github.com/repos/rust-lang/rust/commits/659112ca956c70e9983c9e1e3d1e3a7abec63110", "html_url": "https://github.com/rust-lang/rust/commit/659112ca956c70e9983c9e1e3d1e3a7abec63110"}, {"sha": "84ceca852eee1bcfcc987fc6d98e22e7395b4c69", "url": "https://api.github.com/repos/rust-lang/rust/commits/84ceca852eee1bcfcc987fc6d98e22e7395b4c69", "html_url": "https://github.com/rust-lang/rust/commit/84ceca852eee1bcfcc987fc6d98e22e7395b4c69"}], "stats": {"total": 52, "additions": 38, "deletions": 14}, "files": [{"sha": "33f2b5c1de99c0eb1c08dd0da516dacb620d82e1", "filename": "book/src/lint_configuration.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b528cc90bc35a111125bfd2382bfcdcd345cea69/book%2Fsrc%2Flint_configuration.md", "raw_url": "https://github.com/rust-lang/rust/raw/b528cc90bc35a111125bfd2382bfcdcd345cea69/book%2Fsrc%2Flint_configuration.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/book%2Fsrc%2Flint_configuration.md?ref=b528cc90bc35a111125bfd2382bfcdcd345cea69", "patch": "@@ -472,31 +472,31 @@ The maximum size of a file included via `include_bytes!()` or `include_str!()`,\n \n \n ### allow-expect-in-tests\n-Whether `expect` should be allowed within `#[cfg(test)]`\n+Whether `expect` should be allowed in test functions or `#[cfg(test)]`\n \n **Default Value:** `false` (`bool`)\n \n * [expect_used](https://rust-lang.github.io/rust-clippy/master/index.html#expect_used)\n \n \n ### allow-unwrap-in-tests\n-Whether `unwrap` should be allowed in test cfg\n+Whether `unwrap` should be allowed in test functions or `#[cfg(test)]`\n \n **Default Value:** `false` (`bool`)\n \n * [unwrap_used](https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used)\n \n \n ### allow-dbg-in-tests\n-Whether `dbg!` should be allowed in test functions\n+Whether `dbg!` should be allowed in test functions or `#[cfg(test)]`\n \n **Default Value:** `false` (`bool`)\n \n * [dbg_macro](https://rust-lang.github.io/rust-clippy/master/index.html#dbg_macro)\n \n \n ### allow-print-in-tests\n-Whether print macros (ex. `println!`) should be allowed in test functions\n+Whether print macros (ex. `println!`) should be allowed in test functions or `#[cfg(test)]`\n \n **Default Value:** `false` (`bool`)\n "}, {"sha": "614610335a1343e5e6c92ced38e01266e6b039f1", "filename": "clippy_lints/src/methods/expect_used.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b528cc90bc35a111125bfd2382bfcdcd345cea69/clippy_lints%2Fsrc%2Fmethods%2Fexpect_used.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b528cc90bc35a111125bfd2382bfcdcd345cea69/clippy_lints%2Fsrc%2Fmethods%2Fexpect_used.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fexpect_used.rs?ref=b528cc90bc35a111125bfd2382bfcdcd345cea69", "patch": "@@ -1,6 +1,6 @@\n use clippy_utils::diagnostics::span_lint_and_help;\n-use clippy_utils::is_in_cfg_test;\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::{is_in_cfg_test, is_in_test_function};\n use rustc_hir as hir;\n use rustc_lint::LateContext;\n use rustc_span::sym;\n@@ -27,7 +27,7 @@ pub(super) fn check(\n \n     let method = if is_err { \"expect_err\" } else { \"expect\" };\n \n-    if allow_expect_in_tests && is_in_cfg_test(cx.tcx, expr.hir_id) {\n+    if allow_expect_in_tests && (is_in_test_function(cx.tcx, expr.hir_id) || is_in_cfg_test(cx.tcx, expr.hir_id)) {\n         return;\n     }\n "}, {"sha": "5e4c3daee644702e43edd19e03be2110d4dc5e1f", "filename": "clippy_lints/src/methods/unwrap_used.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b528cc90bc35a111125bfd2382bfcdcd345cea69/clippy_lints%2Fsrc%2Fmethods%2Funwrap_used.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b528cc90bc35a111125bfd2382bfcdcd345cea69/clippy_lints%2Fsrc%2Fmethods%2Funwrap_used.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funwrap_used.rs?ref=b528cc90bc35a111125bfd2382bfcdcd345cea69", "patch": "@@ -1,6 +1,6 @@\n use clippy_utils::diagnostics::span_lint_and_help;\n use clippy_utils::ty::is_type_diagnostic_item;\n-use clippy_utils::{is_in_cfg_test, is_lint_allowed};\n+use clippy_utils::{is_in_cfg_test, is_in_test_function, is_lint_allowed};\n use rustc_hir as hir;\n use rustc_lint::LateContext;\n use rustc_span::sym;\n@@ -27,7 +27,7 @@ pub(super) fn check(\n \n     let method_suffix = if is_err { \"_err\" } else { \"\" };\n \n-    if allow_unwrap_in_tests && is_in_cfg_test(cx.tcx, expr.hir_id) {\n+    if allow_unwrap_in_tests && (is_in_test_function(cx.tcx, expr.hir_id) || is_in_cfg_test(cx.tcx, expr.hir_id)) {\n         return;\n     }\n "}, {"sha": "5f74de5a2886713de93e9c4e220ab6d81f1f003a", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b528cc90bc35a111125bfd2382bfcdcd345cea69/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b528cc90bc35a111125bfd2382bfcdcd345cea69/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=b528cc90bc35a111125bfd2382bfcdcd345cea69", "patch": "@@ -419,19 +419,19 @@ define_Conf! {\n     (max_include_file_size: u64 = 1_000_000),\n     /// Lint: EXPECT_USED.\n     ///\n-    /// Whether `expect` should be allowed within `#[cfg(test)]`\n+    /// Whether `expect` should be allowed in test functions or `#[cfg(test)]`\n     (allow_expect_in_tests: bool = false),\n     /// Lint: UNWRAP_USED.\n     ///\n-    /// Whether `unwrap` should be allowed in test cfg\n+    /// Whether `unwrap` should be allowed in test functions or `#[cfg(test)]`\n     (allow_unwrap_in_tests: bool = false),\n     /// Lint: DBG_MACRO.\n     ///\n-    /// Whether `dbg!` should be allowed in test functions\n+    /// Whether `dbg!` should be allowed in test functions or `#[cfg(test)]`\n     (allow_dbg_in_tests: bool = false),\n     /// Lint: PRINT_STDOUT, PRINT_STDERR.\n     ///\n-    /// Whether print macros (ex. `println!`) should be allowed in test functions\n+    /// Whether print macros (ex. `println!`) should be allowed in test functions or `#[cfg(test)]`\n     (allow_print_in_tests: bool = false),\n     /// Lint: RESULT_LARGE_ERR.\n     ///"}, {"sha": "89f142a150d95247776cc94ee68085483240a87e", "filename": "tests/ui-toml/expect_used/expect_used.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b528cc90bc35a111125bfd2382bfcdcd345cea69/tests%2Fui-toml%2Fexpect_used%2Fexpect_used.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b528cc90bc35a111125bfd2382bfcdcd345cea69/tests%2Fui-toml%2Fexpect_used%2Fexpect_used.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fexpect_used%2Fexpect_used.rs?ref=b528cc90bc35a111125bfd2382bfcdcd345cea69", "patch": "@@ -16,6 +16,18 @@ fn main() {\n     expect_result();\n }\n \n+#[test]\n+fn test_expect_option() {\n+    let opt = Some(0);\n+    let _ = opt.expect(\"\");\n+}\n+\n+#[test]\n+fn test_expect_result() {\n+    let res: Result<u8, ()> = Ok(0);\n+    let _ = res.expect(\"\");\n+}\n+\n #[cfg(test)]\n mod issue9612 {\n     // should not lint in `#[cfg(test)]` modules"}, {"sha": "6525ea5bfc3fcf39a6226a6a3868b9e777afa80d", "filename": "tests/ui-toml/unwrap_used/unwrap_used.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b528cc90bc35a111125bfd2382bfcdcd345cea69/tests%2Fui-toml%2Funwrap_used%2Funwrap_used.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b528cc90bc35a111125bfd2382bfcdcd345cea69/tests%2Fui-toml%2Funwrap_used%2Funwrap_used.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Funwrap_used%2Funwrap_used.rs?ref=b528cc90bc35a111125bfd2382bfcdcd345cea69", "patch": "@@ -66,6 +66,12 @@ fn main() {\n     }\n }\n \n+#[test]\n+fn test() {\n+    let boxed_slice: Box<[u8]> = Box::new([0, 1, 2, 3]);\n+    let _ = boxed_slice.get(1).unwrap();\n+}\n+\n #[cfg(test)]\n mod issue9612 {\n     // should not lint in `#[cfg(test)]` modules"}, {"sha": "8a32750e3c92d974ced3168c5e8c52043ad894fa", "filename": "tests/ui-toml/unwrap_used/unwrap_used.stderr", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b528cc90bc35a111125bfd2382bfcdcd345cea69/tests%2Fui-toml%2Funwrap_used%2Funwrap_used.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b528cc90bc35a111125bfd2382bfcdcd345cea69/tests%2Fui-toml%2Funwrap_used%2Funwrap_used.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Funwrap_used%2Funwrap_used.stderr?ref=b528cc90bc35a111125bfd2382bfcdcd345cea69", "patch": "@@ -188,10 +188,16 @@ LL |         let _ = some_vec.get_mut(0..1).unwrap().to_vec();\n    = help: if you don't want to handle the `None` case gracefully, consider using `expect()` to provide a better panic message\n \n error: called `.get().unwrap()` on a slice. Using `[]` is more clear and more concise\n-  --> $DIR/unwrap_used.rs:84:17\n+  --> $DIR/unwrap_used.rs:72:13\n+   |\n+LL |     let _ = boxed_slice.get(1).unwrap();\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&boxed_slice[1]`\n+\n+error: called `.get().unwrap()` on a slice. Using `[]` is more clear and more concise\n+  --> $DIR/unwrap_used.rs:90:17\n    |\n LL |         let _ = Box::new([0]).get(1).unwrap();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&Box::new([0])[1]`\n \n-error: aborting due to 27 previous errors\n+error: aborting due to 28 previous errors\n "}]}