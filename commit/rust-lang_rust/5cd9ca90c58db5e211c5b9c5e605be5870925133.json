{"sha": "5cd9ca90c58db5e211c5b9c5e605be5870925133", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjZDljYTkwYzU4ZGI1ZTIxMWM1YjljNWU2MDViZTU4NzA5MjUxMzM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-01-21T22:45:23Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-01-21T22:45:23Z"}, "message": "mk: Remove all perf-related targets\n\nI don't believe these have been used at all recently, and I doubt many of them\nstill work, so remove the stale support.", "tree": {"sha": "f1516c6bf12fb5e6941d913cbb751933c601a815", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1516c6bf12fb5e6941d913cbb751933c601a815"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cd9ca90c58db5e211c5b9c5e605be5870925133", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cd9ca90c58db5e211c5b9c5e605be5870925133", "html_url": "https://github.com/rust-lang/rust/commit/5cd9ca90c58db5e211c5b9c5e605be5870925133", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cd9ca90c58db5e211c5b9c5e605be5870925133/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46dcffd05b46e62c27629f4231fc794e94e614a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/46dcffd05b46e62c27629f4231fc794e94e614a8", "html_url": "https://github.com/rust-lang/rust/commit/46dcffd05b46e62c27629f4231fc794e94e614a8"}], "stats": {"total": 84, "additions": 2, "deletions": 82}, "files": [{"sha": "e41ce56b9ed0c9b5d87e928cfbff73e79b1760bb", "filename": "Makefile.in", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5cd9ca90c58db5e211c5b9c5e605be5870925133/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/5cd9ca90c58db5e211c5b9c5e605be5870925133/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=5cd9ca90c58db5e211c5b9c5e605be5870925133", "patch": "@@ -220,19 +220,12 @@ endif\n # The test suite\n ifneq ($(strip $(findstring check,$(MAKECMDGOALS)) \\\n                $(findstring test,$(MAKECMDGOALS))  \\\n-               $(findstring perf,$(MAKECMDGOALS))  \\\n                $(findstring tidy,$(MAKECMDGOALS))),)\n   CFG_INFO := $(info cfg: including test rules)\n   include $(CFG_SRC_DIR)mk/tests.mk\n   include $(CFG_SRC_DIR)mk/grammar.mk\n endif\n \n-# Performance and benchmarking\n-ifneq ($(findstring perf,$(MAKECMDGOALS)),)\n-  CFG_INFO := $(info cfg: including perf rules)\n-  include $(CFG_SRC_DIR)mk/perf.mk\n-endif\n-\n # Copy all the distributables to another directory for binary install\n ifneq ($(strip $(findstring prepare,$(MAKECMDGOALS)) \\\n                $(findstring dist,$(MAKECMDGOALS)) \\"}, {"sha": "9d75771dc80a862833c91a6ab8a5c23c1a76c0dc", "filename": "mk/main.mk", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5cd9ca90c58db5e211c5b9c5e605be5870925133/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/5cd9ca90c58db5e211c5b9c5e605be5870925133/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=5cd9ca90c58db5e211c5b9c5e605be5870925133", "patch": "@@ -522,14 +522,6 @@ STAGE$(1)_T_$(2)_H_$(3) := \\\n \t\t$$(CFG_RUSTC_FLAGS) $$(EXTRAFLAGS_STAGE$(1)) --target=$(2)) \\\n                 $$(RUSTC_FLAGS_$(2))\n \n-PERF_STAGE$(1)_T_$(2)_H_$(3) := \\\n-\t$$(Q)$$(call CFG_RUN_TARG_$(3),$(1), \\\n-\t\t$$(CFG_PERF_TOOL) \\\n-\t\t$$(HBIN$(1)_H_$(3))/rustc$$(X_$(3)) \\\n-\t\t--cfg $$(CFGFLAG$(1)_T_$(2)_H_$(3)) \\\n-\t\t$$(CFG_RUSTC_FLAGS) $$(EXTRAFLAGS_STAGE$(1)) --target=$(2)) \\\n-                $$(RUSTC_FLAGS_$(2))\n-\n endef\n \n $(foreach build,$(CFG_HOST), \\"}, {"sha": "16cbaab495d8256a8dfc4feea72921c44ccd19af", "filename": "mk/perf.mk", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/46dcffd05b46e62c27629f4231fc794e94e614a8/mk%2Fperf.mk", "raw_url": "https://github.com/rust-lang/rust/raw/46dcffd05b46e62c27629f4231fc794e94e614a8/mk%2Fperf.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fperf.mk?ref=46dcffd05b46e62c27629f4231fc794e94e614a8", "patch": "@@ -1,25 +0,0 @@\n-# Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-\n-ifdef CFG_PERF_TOOL\n-rustc-perf$(X): $(CFG_BUILD)/stage2/bin/rustc$(X_$(CFG_BUILD))\n-\t@$(call E, perf compile: $@)\n-\t$(PERF_STAGE2_T_$(CFG_BUILD)_H_$(CFG_BUILD)) \\\n-\t\t -o $@ $(COMPILER_CRATE) >rustc-perf.err 2>&1\n-\t$(Q)rm -f $(LIBRUSTC_GLOB)\n-else\n-rustc-perf$(X): $(CFG_BUILD)/stage2/bin/rustc$(X_$(CFG_BUILD))\n-\t$(Q)touch $@\n-endif\n-\n-perf: check-stage2-perf rustc-perf$(X_$(CFG_BUILD))\n-\t$(Q)find $(CFG_BUILD)/test/perf -name \\*.err | xargs cat\n-\t$(Q)cat rustc-perf.err"}, {"sha": "9c74e657a846442979684e70b479db988915326e", "filename": "mk/platform.mk", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5cd9ca90c58db5e211c5b9c5e605be5870925133/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/5cd9ca90c58db5e211c5b9c5e605be5870925133/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=5cd9ca90c58db5e211c5b9c5e605be5870925133", "patch": "@@ -77,23 +77,6 @@ define DEF_GOOD_VALGRIND\n endef\n $(foreach t,$(CFG_TARGET),$(eval $(call DEF_GOOD_VALGRIND,$(t))))\n \n-ifneq ($(findstring linux,$(CFG_OSTYPE)),)\n-  ifdef CFG_PERF\n-    ifneq ($(CFG_PERF_WITH_LOGFD),)\n-        CFG_PERF_TOOL := $(CFG_PERF) stat -r 3 --log-fd 2\n-    else\n-        CFG_PERF_TOOL := $(CFG_PERF) stat -r 3\n-    endif\n-  else\n-    ifdef CFG_VALGRIND\n-      CFG_PERF_TOOL := \\\n-        $(CFG_VALGRIND) --tool=cachegrind --cache-sim=yes --branch-sim=yes\n-    else\n-      CFG_PERF_TOOL := /usr/bin/time --verbose\n-    endif\n-  endif\n-endif\n-\n AR := ar\n \n define SET_FROM_CFG"}, {"sha": "b3f7278ad62ccb6c45d7c31996f356d044452939", "filename": "mk/tests.mk", "status": "modified", "additions": 2, "deletions": 25, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/5cd9ca90c58db5e211c5b9c5e605be5870925133/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/5cd9ca90c58db5e211c5b9c5e605be5870925133/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=5cd9ca90c58db5e211c5b9c5e605be5870925133", "patch": "@@ -50,11 +50,6 @@ ifdef CFG_VALGRIND\n   CTEST_RUNTOOL = --runtool \"$(CFG_VALGRIND)\"\n endif\n \n-# Arguments to the perf tests\n-ifdef CFG_PERF_TOOL\n-  CTEST_PERF_RUNTOOL = --runtool \"$(CFG_PERF_TOOL)\"\n-endif\n-\n CTEST_TESTARGS := $(TESTARGS)\n \n # --bench is only relevant for crate tests, not for the compile tests\n@@ -70,12 +65,6 @@ endif\n # This prevents tests from failing with some locales (fixes #17423).\n export LC_ALL=C\n \n-# If we're running perf then set this environment variable\n-# to put the benchmarks into 'hard mode'\n-ifeq ($(MAKECMDGOALS),perf)\n-  export RUST_BENCH=1\n-endif\n-\n TEST_LOG_FILE=tmp/check-stage$(1)-T-$(2)-H-$(3)-$(4).log\n TEST_OK_FILE=tmp/check-stage$(1)-T-$(2)-H-$(3)-$(4).ok\n \n@@ -486,10 +475,6 @@ CODEGEN_RS := $(wildcard $(S)src/test/codegen/*.rs)\n CODEGEN_CC := $(wildcard $(S)src/test/codegen/*.cc)\n RUSTDOCCK_RS := $(wildcard $(S)src/test/rustdoc/*.rs)\n \n-# perf tests are the same as bench tests only they run under\n-# a performance monitor.\n-PERF_RS := $(wildcard $(S)src/test/bench/*.rs)\n-\n RPASS_TESTS := $(RPASS_RS)\n RPASS_VALGRIND_TESTS := $(RPASS_VALGRIND_RS)\n RPASS_FULL_TESTS := $(RPASS_FULL_RS)\n@@ -499,7 +484,6 @@ RFAIL_TESTS := $(RFAIL_RS)\n CFAIL_TESTS := $(CFAIL_RS)\n PFAIL_TESTS := $(PFAIL_RS)\n BENCH_TESTS := $(BENCH_RS)\n-PERF_TESTS := $(PERF_RS)\n PRETTY_TESTS := $(PRETTY_RS)\n DEBUGINFO_GDB_TESTS := $(DEBUGINFO_GDB_RS)\n DEBUGINFO_LLDB_TESTS := $(DEBUGINFO_LLDB_RS)\n@@ -551,11 +535,6 @@ CTEST_BUILD_BASE_bench = bench\n CTEST_MODE_bench = run-pass\n CTEST_RUNTOOL_bench = $(CTEST_RUNTOOL)\n \n-CTEST_SRC_BASE_perf = bench\n-CTEST_BUILD_BASE_perf = perf\n-CTEST_MODE_perf = run-pass\n-CTEST_RUNTOOL_perf = $(CTEST_PERF_RUNTOOL)\n-\n CTEST_SRC_BASE_debuginfo-gdb = debuginfo\n CTEST_BUILD_BASE_debuginfo-gdb = debuginfo-gdb\n CTEST_MODE_debuginfo-gdb = debuginfo-gdb\n@@ -625,7 +604,7 @@ TEST_SREQ$(1)_T_$(2)_H_$(3) = \\\n \t$$(HBIN$(1)_H_$(3))/compiletest$$(X_$(3)) \\\n \t$$(SREQ$(1)_T_$(2)_H_$(3))\n \n-# Rules for the cfail/rfail/rpass/bench/perf test runner\n+# Rules for the cfail/rfail/rpass/bench test runner\n \n # The tests select when to use debug configuration on their own;\n # remove directive, if present, from CFG_RUSTC_FLAGS (issue #7898).\n@@ -689,7 +668,6 @@ CTEST_DEPS_rfail_$(1)-T-$(2)-H-$(3) = $$(RFAIL_TESTS)\n CTEST_DEPS_cfail_$(1)-T-$(2)-H-$(3) = $$(CFAIL_TESTS)\n CTEST_DEPS_pfail_$(1)-T-$(2)-H-$(3) = $$(PFAIL_TESTS)\n CTEST_DEPS_bench_$(1)-T-$(2)-H-$(3) = $$(BENCH_TESTS)\n-CTEST_DEPS_perf_$(1)-T-$(2)-H-$(3) = $$(PERF_TESTS)\n CTEST_DEPS_debuginfo-gdb_$(1)-T-$(2)-H-$(3) = $$(DEBUGINFO_GDB_TESTS)\n CTEST_DEPS_debuginfo-lldb_$(1)-T-$(2)-H-$(3) = $$(DEBUGINFO_LLDB_TESTS) \\\n                                                $(S)src/etc/lldb_batchmode.py \\\n@@ -761,7 +739,7 @@ endif\n endef\n \n CTEST_NAMES = rpass rpass-valgrind rpass-full rfail-full cfail-full rfail cfail pfail \\\n-\tbench perf debuginfo-gdb debuginfo-lldb codegen rustdocck\n+\tbench debuginfo-gdb debuginfo-lldb codegen rustdocck\n \n $(foreach host,$(CFG_HOST), \\\n  $(eval $(foreach target,$(CFG_TARGET), \\\n@@ -934,7 +912,6 @@ TEST_GROUPS = \\\n \tcfail \\\n \tpfail \\\n \tbench \\\n-\tperf \\\n \trmake \\\n \trustdocck \\\n \tdebuginfo-gdb \\"}]}