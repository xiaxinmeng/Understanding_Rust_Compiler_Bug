{"sha": "b3763862280946cab09cbedc4ad5626ebd95a5b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzNzYzODYyMjgwOTQ2Y2FiMDljYmVkYzRhZDU2MjZlYmQ5NWE1YjI=", "commit": {"author": {"name": "Thomas Jespersen", "email": "laumann.thomas@gmail.com", "date": "2017-03-17T22:11:27Z"}, "committer": {"name": "Thomas Jespersen", "email": "tj@asseco.dk", "date": "2017-03-30T11:51:16Z"}, "message": "Replace hardcoded forward slash with path::MAIN_SEPARATOR\n\nFixes #40149", "tree": {"sha": "a4e09d57e1e409228dbd96ef09d78798f5f6d7f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4e09d57e1e409228dbd96ef09d78798f5f6d7f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3763862280946cab09cbedc4ad5626ebd95a5b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3763862280946cab09cbedc4ad5626ebd95a5b2", "html_url": "https://github.com/rust-lang/rust/commit/b3763862280946cab09cbedc4ad5626ebd95a5b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3763862280946cab09cbedc4ad5626ebd95a5b2/comments", "author": null, "committer": null, "parents": [{"sha": "fe151194e9a919ab23c2bb356767a5cbfa3811e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe151194e9a919ab23c2bb356767a5cbfa3811e7", "html_url": "https://github.com/rust-lang/rust/commit/fe151194e9a919ab23c2bb356767a5cbfa3811e7"}], "stats": {"total": 47, "additions": 41, "deletions": 6}, "files": [{"sha": "f5c188f7a7537bc336b27f57a4351596eea47a87", "filename": "src/libstd/sys_common/backtrace.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b3763862280946cab09cbedc4ad5626ebd95a5b2/src%2Flibstd%2Fsys_common%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3763862280946cab09cbedc4ad5626ebd95a5b2/src%2Flibstd%2Fsys_common%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Fbacktrace.rs?ref=b3763862280946cab09cbedc4ad5626ebd95a5b2", "patch": "@@ -19,7 +19,7 @@ use io;\n use libc;\n use str;\n use sync::atomic::{self, Ordering};\n-use path::Path;\n+use path::{self, Path};\n use sys::mutex::Mutex;\n use ptr;\n \n@@ -262,7 +262,7 @@ fn output_fileline(w: &mut Write, file: &[u8], line: libc::c_int,\n         if let Ok(cwd) = env::current_dir() {\n             if let Ok(stripped) = file_path.strip_prefix(&cwd) {\n                 if let Some(s) = stripped.to_str() {\n-                    write!(w, \"  at ./{}:{}\", s, line)?;\n+                    write!(w, \"  at .{}{}:{}\", path::MAIN_SEPARATOR, s, line)?;\n                     already_printed = true;\n                 }\n             }"}, {"sha": "c2c3e5a6855af4ca8e415b7bbc5f3a48e97c6920", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b3763862280946cab09cbedc4ad5626ebd95a5b2/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3763862280946cab09cbedc4ad5626ebd95a5b2/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=b3763862280946cab09cbedc4ad5626ebd95a5b2", "patch": "@@ -59,7 +59,7 @@ use util::ThinVec;\n \n use std::collections::HashSet;\n use std::{cmp, mem, slice};\n-use std::path::{Path, PathBuf};\n+use std::path::{self, Path, PathBuf};\n \n bitflags! {\n     flags Restrictions: u8 {\n@@ -5146,7 +5146,7 @@ impl<'a> Parser<'a> {\n     pub fn default_submod_path(id: ast::Ident, dir_path: &Path, codemap: &CodeMap) -> ModulePath {\n         let mod_name = id.to_string();\n         let default_path_str = format!(\"{}.rs\", mod_name);\n-        let secondary_path_str = format!(\"{}/mod.rs\", mod_name);\n+        let secondary_path_str = format!(\"{}{}mod.rs\", mod_name, path::MAIN_SEPARATOR);\n         let default_path = dir_path.join(&default_path_str);\n         let secondary_path = dir_path.join(&secondary_path_str);\n         let default_exists = codemap.file_exists(&default_path);\n@@ -5224,8 +5224,9 @@ impl<'a> Parser<'a> {\n             };\n             err.span_note(id_sp,\n                           &format!(\"maybe move this module `{0}` to its own directory \\\n-                                     via `{0}/mod.rs`\",\n-                                    this_module));\n+                                    via `{0}{1}mod.rs`\",\n+                                   this_module,\n+                                   path::MAIN_SEPARATOR));\n             if paths.path_exists {\n                 err.span_note(id_sp,\n                               &format!(\"... or maybe `use` the module `{}` instead \\"}, {"sha": "4bc6e706d4284861a4b2f9ca2473db98f1896fe5", "filename": "src/test/parse-fail/mod_file_not_exist.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3763862280946cab09cbedc4ad5626ebd95a5b2/src%2Ftest%2Fparse-fail%2Fmod_file_not_exist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3763862280946cab09cbedc4ad5626ebd95a5b2/src%2Ftest%2Fparse-fail%2Fmod_file_not_exist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fmod_file_not_exist.rs?ref=b3763862280946cab09cbedc4ad5626ebd95a5b2", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-windows\n+\n // compile-flags: -Z parse-only\n \n mod not_a_real_file; //~ ERROR file not found for module `not_a_real_file`"}, {"sha": "c58603b43989f81bae935b329238f813def4cad6", "filename": "src/test/parse-fail/mod_file_not_exist_windows.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/b3763862280946cab09cbedc4ad5626ebd95a5b2/src%2Ftest%2Fparse-fail%2Fmod_file_not_exist_windows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3763862280946cab09cbedc4ad5626ebd95a5b2/src%2Ftest%2Fparse-fail%2Fmod_file_not_exist_windows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fmod_file_not_exist_windows.rs?ref=b3763862280946cab09cbedc4ad5626ebd95a5b2", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-gnu\n+// ignore-android\n+// ignore-bitrig\n+// ignore-macos\n+// ignore-dragonfly\n+// ignore-freebsd\n+// ignore-haiku\n+// ignore-ios\n+// ignore-linux\n+// ignore-netbsd\n+// ignore-openbsd\n+// ignore-solaris\n+// ignore-emscripten\n+\n+// compile-flags: -Z parse-only\n+\n+mod not_a_real_file; //~ ERROR file not found for module `not_a_real_file`\n+//~^ HELP name the file either not_a_real_file.rs or not_a_real_file\\mod.rs inside the directory\n+\n+fn main() {\n+    assert_eq!(mod_file_aux::bar(), 10);\n+}"}]}