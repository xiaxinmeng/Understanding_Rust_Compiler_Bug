{"sha": "575f6098da83cef33676ef67e39b73b2b910a042", "node_id": "C_kwDOAAsO6NoAKDU3NWY2MDk4ZGE4M2NlZjMzNjc2ZWY2N2UzOWI3M2IyYjkxMGEwNDI", "commit": {"author": {"name": "SLASHLogin", "email": "loginmlgxd@gmail.com", "date": "2022-08-25T13:34:30Z"}, "committer": {"name": "SLASHLogin", "email": "loginmlgxd@gmail.com", "date": "2022-11-09T13:56:20Z"}, "message": "Port unknown feature diagnostic to the new framework", "tree": {"sha": "d6c39e411c4e351d4f0ba47faf90e2d613bccc38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6c39e411c4e351d4f0ba47faf90e2d613bccc38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/575f6098da83cef33676ef67e39b73b2b910a042", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/575f6098da83cef33676ef67e39b73b2b910a042", "html_url": "https://github.com/rust-lang/rust/commit/575f6098da83cef33676ef67e39b73b2b910a042", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/575f6098da83cef33676ef67e39b73b2b910a042/comments", "author": {"login": "SLASHLogin", "id": 24846525, "node_id": "MDQ6VXNlcjI0ODQ2NTI1", "avatar_url": "https://avatars.githubusercontent.com/u/24846525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SLASHLogin", "html_url": "https://github.com/SLASHLogin", "followers_url": "https://api.github.com/users/SLASHLogin/followers", "following_url": "https://api.github.com/users/SLASHLogin/following{/other_user}", "gists_url": "https://api.github.com/users/SLASHLogin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SLASHLogin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SLASHLogin/subscriptions", "organizations_url": "https://api.github.com/users/SLASHLogin/orgs", "repos_url": "https://api.github.com/users/SLASHLogin/repos", "events_url": "https://api.github.com/users/SLASHLogin/events{/privacy}", "received_events_url": "https://api.github.com/users/SLASHLogin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SLASHLogin", "id": 24846525, "node_id": "MDQ6VXNlcjI0ODQ2NTI1", "avatar_url": "https://avatars.githubusercontent.com/u/24846525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SLASHLogin", "html_url": "https://github.com/SLASHLogin", "followers_url": "https://api.github.com/users/SLASHLogin/followers", "following_url": "https://api.github.com/users/SLASHLogin/following{/other_user}", "gists_url": "https://api.github.com/users/SLASHLogin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SLASHLogin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SLASHLogin/subscriptions", "organizations_url": "https://api.github.com/users/SLASHLogin/orgs", "repos_url": "https://api.github.com/users/SLASHLogin/repos", "events_url": "https://api.github.com/users/SLASHLogin/events{/privacy}", "received_events_url": "https://api.github.com/users/SLASHLogin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0aaad9e757207657064d70bf9e6c1e6eb327bf15", "url": "https://api.github.com/repos/rust-lang/rust/commits/0aaad9e757207657064d70bf9e6c1e6eb327bf15", "html_url": "https://github.com/rust-lang/rust/commit/0aaad9e757207657064d70bf9e6c1e6eb327bf15"}], "stats": {"total": 69, "additions": 52, "deletions": 17}, "files": [{"sha": "b1f85e656b8219505c01e36a6c02f44ab56f4e38", "filename": "compiler/rustc_codegen_llvm/src/errors.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/575f6098da83cef33676ef67e39b73b2b910a042/compiler%2Frustc_codegen_llvm%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/575f6098da83cef33676ef67e39b73b2b910a042/compiler%2Frustc_codegen_llvm%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Ferrors.rs?ref=575f6098da83cef33676ef67e39b73b2b910a042", "patch": "@@ -0,0 +1,33 @@\n+use rustc_errors::DiagnosticBuilder;\n+use rustc_session::SessionDiagnostic;\n+use rustc_errors::fluent;\n+\n+pub(crate) enum UnknownCTargetFeature {\n+    UnknownFeaturePrefix { feature: String },\n+    UnknownFeature { feature: String, rust_feature: Option<String> },\n+}\n+\n+impl SessionDiagnostic<'_, ()> for UnknownCTargetFeature {\n+    fn into_diagnostic(self, sess: &'_ rustc_session::parse::ParseSess) -> DiagnosticBuilder<'_, ()> {\n+        match self {\n+            UnknownCTargetFeature::UnknownFeaturePrefix { feature } => {\n+                let mut diag = sess.struct_warn(fluent::codegen_llvm::unknown_ctarget_feature);\n+                diag.set_arg(\"feature\", feature);\n+                diag.note(fluent::codegen_llvm::unknown_feature_prefix);\n+                diag\n+            }\n+            UnknownCTargetFeature::UnknownFeature { feature, rust_feature } => {\n+                let mut diag = sess.struct_warn(fluent::codegen_llvm::unknown_ctarget_feature);\n+                diag.set_arg(\"feature\", feature);\n+                diag.note(fluent::codegen_llvm::unknown_feature);\n+                if let Some(rust_feature) = rust_feature {\n+                    diag.help(fluent::codegen_llvm::rust_feature);\n+                    diag.set_arg(\"rust_feature\", rust_feature);\n+                } else {\n+                    diag.note(fluent::codegen_llvm::unknown_feature_fill_request);\n+                }\n+                diag\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "af632b2ff54b9a9a66b8c21a962af4ab5f07d115", "filename": "compiler/rustc_codegen_llvm/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/575f6098da83cef33676ef67e39b73b2b910a042/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/575f6098da83cef33676ef67e39b73b2b910a042/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs?ref=575f6098da83cef33676ef67e39b73b2b910a042", "patch": "@@ -62,6 +62,7 @@ mod context;\n mod coverageinfo;\n mod debuginfo;\n mod declare;\n+mod errors;\n mod intrinsic;\n \n // The following is a work around that replaces `pub mod llvm;` and that fixes issue 53912."}, {"sha": "f8f174692c06c240aa86579a1ab0f0cf3e92f5ab", "filename": "compiler/rustc_codegen_llvm/src/llvm_util.rs", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/575f6098da83cef33676ef67e39b73b2b910a042/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/575f6098da83cef33676ef67e39b73b2b910a042/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs?ref=575f6098da83cef33676ef67e39b73b2b910a042", "patch": "@@ -1,5 +1,6 @@\n use crate::back::write::create_informational_target_machine;\n use crate::llvm;\n+use crate::errors::UnknownCTargetFeature;\n use libc::c_int;\n use rustc_codegen_ssa::target_features::{\n     supported_target_features, tied_target_features, RUSTC_SPECIFIC_FEATURES,\n@@ -434,12 +435,7 @@ pub(crate) fn global_llvm_features(sess: &Session, diagnostics: bool) -> Vec<Str\n                 Some(c @ '+' | c @ '-') => c,\n                 Some(_) => {\n                     if diagnostics {\n-                        let mut diag = sess.struct_warn(&format!(\n-                            \"unknown feature specified for `-Ctarget-feature`: `{}`\",\n-                            s\n-                        ));\n-                        diag.note(\"features must begin with a `+` to enable or `-` to disable it\");\n-                        diag.emit();\n+                        sess.emit_warning(UnknownCTargetFeature::UnknownFeaturePrefix { feature: s.to_string() });\n                     }\n                     return None;\n                 }\n@@ -456,17 +452,7 @@ pub(crate) fn global_llvm_features(sess: &Session, diagnostics: bool) -> Vec<Str\n                         None\n                     }\n                 });\n-                let mut diag = sess.struct_warn(&format!(\n-                    \"unknown feature specified for `-Ctarget-feature`: `{}`\",\n-                    feature\n-                ));\n-                diag.note(\"it is still passed through to the codegen backend\");\n-                if let Some(rust_feature) = rust_feature {\n-                    diag.help(&format!(\"you might have meant: `{}`\", rust_feature));\n-                } else {\n-                    diag.note(\"consider filing a feature request\");\n-                }\n-                diag.emit();\n+                sess.emit_warning(UnknownCTargetFeature::UnknownFeature { feature: feature.to_string(), rust_feature: rust_feature.map(|f| f.to_string()) });\n             }\n \n             if diagnostics {"}, {"sha": "3c644d77bb7a8f9bcff50e0ecc3bd260cde01e57", "filename": "compiler/rustc_error_messages/locales/en-US/codegen_llvm.ftl", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/575f6098da83cef33676ef67e39b73b2b910a042/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fcodegen_llvm.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/575f6098da83cef33676ef67e39b73b2b910a042/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fcodegen_llvm.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fcodegen_llvm.ftl?ref=575f6098da83cef33676ef67e39b73b2b910a042", "patch": "@@ -0,0 +1,14 @@\n+codegen_llvm_unknown_ctarget_feature = \n+    unknown feature specified for `-Ctarget-feature`: `{$feature}`\n+\n+codegen_llvm_unknown_feature_prefix = \n+    features must begin with a `+` to enable or `-` to disable it\n+\n+codegen_llvm_unknown_feature = \n+    it is still passed through to the codegen backend\n+\n+codegen_llvm_rust_feature =\n+    you might have meant: `{$rust_feature}`\n+\n+codegen_llvm_unknown_feature_fill_request =\n+    consider filing a feature request\n\\ No newline at end of file"}, {"sha": "e34acba105776e461e74a5fb26031baec679f729", "filename": "compiler/rustc_error_messages/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/575f6098da83cef33676ef67e39b73b2b910a042/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/575f6098da83cef33676ef67e39b73b2b910a042/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs?ref=575f6098da83cef33676ef67e39b73b2b910a042", "patch": "@@ -42,6 +42,7 @@ fluent_messages! {\n     borrowck => \"../locales/en-US/borrowck.ftl\",\n     builtin_macros => \"../locales/en-US/builtin_macros.ftl\",\n     codegen_gcc => \"../locales/en-US/codegen_gcc.ftl\",\n+    codegen_llvm => \"../locales/en-US/codegen_llvm.ftl\",\n     codegen_ssa => \"../locales/en-US/codegen_ssa.ftl\",\n     compiletest => \"../locales/en-US/compiletest.ftl\",\n     const_eval => \"../locales/en-US/const_eval.ftl\","}]}