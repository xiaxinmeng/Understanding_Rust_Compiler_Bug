{"sha": "99e075ff293f56376a3ad27d7fcb038d0e2b5595", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5ZTA3NWZmMjkzZjU2Mzc2YTNhZDI3ZDdmY2IwMzhkMGUyYjU1OTU=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-12-01T10:50:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-01T10:50:18Z"}, "message": "Rollup merge of #79525 - jyn514:feature-gate-normalize, r=GuillaumeGomez\n\nAdd -Z normalize-docs and enable it for compiler docs\n\nWorks around https://github.com/rust-lang/rust/issues/79459 by only enabling normalization for the compiler itself (and anyone who opts-in on nightly). Eventually I want to remove this and enable normalization by default, but that's turned out to be [really hard](https://rust-lang.zulipchat.com/#narrow/stream/182449-t-compiler.2Fhelp/topic/How.20do.20I.20normalize.20projection.20types.20to.20a.20single.20type.3F/near/218125195).\n\nThis uses a command line option instead of a feature gate so it's easier to pass it to all crates at once. Theoretically it's better to use a feature gate instead so that it's easier for people to use on docs.rs, but I'm also not terribly concerned with how easy it to use a temporary hack.\n\nAddresses https://github.com/rust-lang/rust/issues/77459.", "tree": {"sha": "2d13f4df98f86154f3e88cc5282c0da933a2cb12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d13f4df98f86154f3e88cc5282c0da933a2cb12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99e075ff293f56376a3ad27d7fcb038d0e2b5595", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfxh/qCRBK7hj4Ov3rIwAAdHIIAFuLsCNfIYHImxkYSui8WTEU\n56/1THQ9j9LxwUOQ1cYN2QgM+OWPEEjPcukrLkL9LLi0iX+6HRr68YuXo0gSbgxZ\n3SGFM+PA5ztv6ZVoCTkcNJL1YgO6YOpqv+guZmZlR06lmz30RRPe/6XMPPhEZqjl\nT87Z4PnoKDAUeq3E27EL4QfpLvvqQHoL4Pu2lzc+Bv2qYYBlcGhX7FCuOKsqcbjP\nc2/O3qwqrm8GcIUiZby70Ng8iKu51QICwCa1xLjIrel1CnKAJ7k93uTHmR3boVLH\nLcoiCbUEnSiX3rEV1NQCBk7l6o/dJHzXg9QZT4Mro50BHuAw7YYZf7OlQ0xwdqQ=\n=nlKQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 2d13f4df98f86154f3e88cc5282c0da933a2cb12\nparent 36ce8db2290c32e1d1f2acc422d5ddb28ed9a9a9\nparent 95a6427d2c4d4ad53931d1f7e8932a61ba0e9601\nauthor Mara Bos <m-ou.se@m-ou.se> 1606819818 +0000\ncommitter GitHub <noreply@github.com> 1606819818 +0000\n\nRollup merge of #79525 - jyn514:feature-gate-normalize, r=GuillaumeGomez\n\nAdd -Z normalize-docs and enable it for compiler docs\n\nWorks around https://github.com/rust-lang/rust/issues/79459 by only enabling normalization for the compiler itself (and anyone who opts-in on nightly). Eventually I want to remove this and enable normalization by default, but that's turned out to be [really hard](https://rust-lang.zulipchat.com/#narrow/stream/182449-t-compiler.2Fhelp/topic/How.20do.20I.20normalize.20projection.20types.20to.20a.20single.20type.3F/near/218125195).\n\nThis uses a command line option instead of a feature gate so it's easier to pass it to all crates at once. Theoretically it's better to use a feature gate instead so that it's easier for people to use on docs.rs, but I'm also not terribly concerned with how easy it to use a temporary hack.\n\nAddresses https://github.com/rust-lang/rust/issues/77459.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99e075ff293f56376a3ad27d7fcb038d0e2b5595", "html_url": "https://github.com/rust-lang/rust/commit/99e075ff293f56376a3ad27d7fcb038d0e2b5595", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99e075ff293f56376a3ad27d7fcb038d0e2b5595/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36ce8db2290c32e1d1f2acc422d5ddb28ed9a9a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/36ce8db2290c32e1d1f2acc422d5ddb28ed9a9a9", "html_url": "https://github.com/rust-lang/rust/commit/36ce8db2290c32e1d1f2acc422d5ddb28ed9a9a9"}, {"sha": "95a6427d2c4d4ad53931d1f7e8932a61ba0e9601", "url": "https://api.github.com/repos/rust-lang/rust/commits/95a6427d2c4d4ad53931d1f7e8932a61ba0e9601", "html_url": "https://github.com/rust-lang/rust/commit/95a6427d2c4d4ad53931d1f7e8932a61ba0e9601"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "66c709b4080986dd3df8bf3e8db9558ea28ae0d9", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/99e075ff293f56376a3ad27d7fcb038d0e2b5595/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99e075ff293f56376a3ad27d7fcb038d0e2b5595/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=99e075ff293f56376a3ad27d7fcb038d0e2b5595", "patch": "@@ -996,6 +996,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"run LLVM in non-parallel mode (while keeping codegen-units and ThinLTO)\"),\n     no_profiler_runtime: bool = (false, parse_no_flag, [TRACKED],\n         \"prevent automatic injection of the profiler_builtins crate\"),\n+    normalize_docs: bool = (false, parse_bool, [TRACKED],\n+        \"normalize associated items in rustdoc when generating documentation\"),\n     osx_rpath_install_name: bool = (false, parse_bool, [TRACKED],\n         \"pass `-install_name @rpath/...` to the macOS linker (default: no)\"),\n     panic_abort_tests: bool = (false, parse_bool, [TRACKED],"}, {"sha": "b5bbb6372ee6ced5efe36fcc06d937b269441fa1", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=99e075ff293f56376a3ad27d7fcb038d0e2b5595", "patch": "@@ -731,6 +731,7 @@ impl<'a> Builder<'a> {\n             .env(\"CFG_RELEASE_CHANNEL\", &self.config.channel)\n             .env(\"RUSTDOC_REAL\", self.rustdoc(compiler))\n             .env(\"RUSTC_BOOTSTRAP\", \"1\")\n+            .arg(\"-Znormalize_docs\")\n             .arg(\"-Winvalid_codeblock_attributes\");\n         if self.config.deny_warnings {\n             cmd.arg(\"-Dwarnings\");"}, {"sha": "a296a1fe3f4fef002564335004ec3bcc9c622ce0", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=99e075ff293f56376a3ad27d7fcb038d0e2b5595", "patch": "@@ -527,6 +527,7 @@ impl Step for Rustc {\n         cargo.rustdocflag(\"--document-private-items\");\n         cargo.rustdocflag(\"--enable-index-page\");\n         cargo.rustdocflag(\"-Zunstable-options\");\n+        cargo.rustdocflag(\"-Znormalize-docs\");\n         compile::rustc_cargo(builder, &mut cargo, target);\n \n         // Only include compiler crates, no dependencies of those, such as `libc`."}, {"sha": "8431f8d95f5a6e481bda4a0ec809687da0609b9f", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=99e075ff293f56376a3ad27d7fcb038d0e2b5595", "patch": "@@ -1515,9 +1515,12 @@ impl Clean<Type> for hir::Ty<'_> {\n }\n \n /// Returns `None` if the type could not be normalized\n-#[allow(unreachable_code, unused_variables)]\n fn normalize(cx: &DocContext<'tcx>, ty: Ty<'_>) -> Option<Ty<'tcx>> {\n-    return None; // HACK: low-churn fix for #79459 while we wait for a trait normalization fix\n+    // HACK: low-churn fix for #79459 while we wait for a trait normalization fix\n+    if !cx.tcx.sess.opts.debugging_opts.normalize_docs {\n+        return None;\n+    }\n+\n     use crate::rustc_trait_selection::infer::TyCtxtInferExt;\n     use crate::rustc_trait_selection::traits::query::normalize::AtExt;\n     use rustc_middle::traits::ObligationCause;"}, {"sha": "ad1a868ee32b8ddfc6e8748a7480aa3a5652d58b", "filename": "src/test/rustdoc/normalize-assoc-item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Ftest%2Frustdoc%2Fnormalize-assoc-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Ftest%2Frustdoc%2Fnormalize-assoc-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fnormalize-assoc-item.rs?ref=99e075ff293f56376a3ad27d7fcb038d0e2b5595", "patch": "@@ -1,7 +1,7 @@\n // ignore-tidy-linelength\n // aux-build:normalize-assoc-item.rs\n // build-aux-docs\n-// ignore-test\n+// compile-flags:-Znormalize-docs\n \n pub trait Trait {\n     type X;"}]}