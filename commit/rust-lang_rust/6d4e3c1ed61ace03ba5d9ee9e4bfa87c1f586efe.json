{"sha": "6d4e3c1ed61ace03ba5d9ee9e4bfa87c1f586efe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkNGUzYzFlZDYxYWNlMDNiYTVkOWVlOWU0YmZhODdjMWY1ODZlZmU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-02T07:09:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-02T07:09:38Z"}, "message": "Auto merge of #84750 - jyn514:nix-cargo, r=Mark-Simulacrum\n\nDon't download cargo twice when download-rustc is set\n\nPreviously, this caused a bug on NixOS:\n\n1. bootstrap.py would download and patch stage0/cargo\n2. bootstrap.py would download nightly cargo, but extract it to\n   stage0/cargo instead of ci-rustc/cargo. It would still try (and fail) to patch ci-rustc/cargo.\n3. bootstrap.py would fail to build rustbuild because stage0/cargo\n   wasn't patched.\n\nThe \"proper\" fix is to extract nightly cargo to ci-rustc instead, but it\ndoesn't seem to be necessary at all, so this just skips downloading it\ninstead.\n\nFixes https://github.com/rust-lang/rust/issues/84702", "tree": {"sha": "030f553b38affefb32393e7f94be1bbf011b8751", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/030f553b38affefb32393e7f94be1bbf011b8751"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d4e3c1ed61ace03ba5d9ee9e4bfa87c1f586efe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d4e3c1ed61ace03ba5d9ee9e4bfa87c1f586efe", "html_url": "https://github.com/rust-lang/rust/commit/6d4e3c1ed61ace03ba5d9ee9e4bfa87c1f586efe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d4e3c1ed61ace03ba5d9ee9e4bfa87c1f586efe/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e244e840f2ada19616ad3f18c388de9ea37a2550", "url": "https://api.github.com/repos/rust-lang/rust/commits/e244e840f2ada19616ad3f18c388de9ea37a2550", "html_url": "https://github.com/rust-lang/rust/commit/e244e840f2ada19616ad3f18c388de9ea37a2550"}, {"sha": "69f3ead6b0fde6e52f9b0207548c83fdc6b206cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/69f3ead6b0fde6e52f9b0207548c83fdc6b206cb", "html_url": "https://github.com/rust-lang/rust/commit/69f3ead6b0fde6e52f9b0207548c83fdc6b206cb"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "356d9f5d1ff27eb16b382a2be1b6371083ec41fc", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6d4e3c1ed61ace03ba5d9ee9e4bfa87c1f586efe/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/6d4e3c1ed61ace03ba5d9ee9e4bfa87c1f586efe/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=6d4e3c1ed61ace03ba5d9ee9e4bfa87c1f586efe", "patch": "@@ -414,18 +414,20 @@ def download_toolchain(self, stage0=True, rustc_channel=None):\n             filename = \"rustc-{}-{}{}\".format(rustc_channel, self.build,\n                                               tarball_suffix)\n             self._download_component_helper(filename, \"rustc\", tarball_suffix, stage0)\n-            filename = \"cargo-{}-{}{}\".format(rustc_channel, self.build,\n-                                              tarball_suffix)\n-            self._download_component_helper(filename, \"cargo\", tarball_suffix)\n-            if not stage0:\n+            # download-rustc doesn't need its own cargo, it can just use beta's.\n+            if stage0:\n+                filename = \"cargo-{}-{}{}\".format(rustc_channel, self.build,\n+                                                tarball_suffix)\n+                self._download_component_helper(filename, \"cargo\", tarball_suffix)\n+                self.fix_bin_or_dylib(\"{}/bin/cargo\".format(bin_root))\n+            else:\n                 filename = \"rustc-dev-{}-{}{}\".format(rustc_channel, self.build, tarball_suffix)\n                 self._download_component_helper(\n                     filename, \"rustc-dev\", tarball_suffix, stage0\n                 )\n \n             self.fix_bin_or_dylib(\"{}/bin/rustc\".format(bin_root))\n             self.fix_bin_or_dylib(\"{}/bin/rustdoc\".format(bin_root))\n-            self.fix_bin_or_dylib(\"{}/bin/cargo\".format(bin_root))\n             lib_dir = \"{}/lib\".format(bin_root)\n             for lib in os.listdir(lib_dir):\n                 if lib.endswith(\".so\"):"}]}