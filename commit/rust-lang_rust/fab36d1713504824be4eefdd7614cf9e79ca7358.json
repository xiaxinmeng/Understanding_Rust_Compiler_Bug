{"sha": "fab36d1713504824be4eefdd7614cf9e79ca7358", "node_id": "C_kwDOAAsO6NoAKGZhYjM2ZDE3MTM1MDQ4MjRiZTRlZWZkZDc2MTRjZjllNzljYTczNTg", "commit": {"author": {"name": "sigaloid", "email": "69441971+sigaloid@users.noreply.github.com", "date": "2022-07-26T01:58:30Z"}, "committer": {"name": "sigaloid", "email": "69441971+sigaloid@users.noreply.github.com", "date": "2022-07-26T01:58:30Z"}, "message": "Add comments about stdout locking", "tree": {"sha": "b5683bbd859bf27a6924425af77cf1f760e15788", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5683bbd859bf27a6924425af77cf1f760e15788"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fab36d1713504824be4eefdd7614cf9e79ca7358", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fab36d1713504824be4eefdd7614cf9e79ca7358", "html_url": "https://github.com/rust-lang/rust/commit/fab36d1713504824be4eefdd7614cf9e79ca7358", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fab36d1713504824be4eefdd7614cf9e79ca7358/comments", "author": {"login": "sigaloid", "id": 69441971, "node_id": "MDQ6VXNlcjY5NDQxOTcx", "avatar_url": "https://avatars.githubusercontent.com/u/69441971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sigaloid", "html_url": "https://github.com/sigaloid", "followers_url": "https://api.github.com/users/sigaloid/followers", "following_url": "https://api.github.com/users/sigaloid/following{/other_user}", "gists_url": "https://api.github.com/users/sigaloid/gists{/gist_id}", "starred_url": "https://api.github.com/users/sigaloid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sigaloid/subscriptions", "organizations_url": "https://api.github.com/users/sigaloid/orgs", "repos_url": "https://api.github.com/users/sigaloid/repos", "events_url": "https://api.github.com/users/sigaloid/events{/privacy}", "received_events_url": "https://api.github.com/users/sigaloid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sigaloid", "id": 69441971, "node_id": "MDQ6VXNlcjY5NDQxOTcx", "avatar_url": "https://avatars.githubusercontent.com/u/69441971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sigaloid", "html_url": "https://github.com/sigaloid", "followers_url": "https://api.github.com/users/sigaloid/followers", "following_url": "https://api.github.com/users/sigaloid/following{/other_user}", "gists_url": "https://api.github.com/users/sigaloid/gists{/gist_id}", "starred_url": "https://api.github.com/users/sigaloid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sigaloid/subscriptions", "organizations_url": "https://api.github.com/users/sigaloid/orgs", "repos_url": "https://api.github.com/users/sigaloid/repos", "events_url": "https://api.github.com/users/sigaloid/events{/privacy}", "received_events_url": "https://api.github.com/users/sigaloid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a86705942c4cfaaee60f2e7308ca2bca703a710f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a86705942c4cfaaee60f2e7308ca2bca703a710f", "html_url": "https://github.com/rust-lang/rust/commit/a86705942c4cfaaee60f2e7308ca2bca703a710f"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "00473f50a63eb20f6c37eec0113d5da820c79e57", "filename": "library/std/src/macros.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/fab36d1713504824be4eefdd7614cf9e79ca7358/library%2Fstd%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fab36d1713504824be4eefdd7614cf9e79ca7358/library%2Fstd%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fmacros.rs?ref=fab36d1713504824be4eefdd7614cf9e79ca7358", "patch": "@@ -27,12 +27,23 @@ macro_rules! panic {\n /// necessary to use [`io::stdout().flush()`][flush] to ensure the output is emitted\n /// immediately.\n ///\n+/// The `print!` macro will lock the standard output on each call. If you call\n+/// `print!` within a hot loop, this behavior may be the bottleneck of the loop.\n+/// To avoid this, lock stdout with [`io::stdout().lock()`][lock]:\n+/// ```\n+/// use std::io::{stdout, Write};\n+///\n+/// let mut lock = stdout().lock();\n+/// write!(lock, \"hello world\").unwrap();\n+/// ```\n+///\n /// Use `print!` only for the primary output of your program. Use\n /// [`eprint!`] instead to print error and progress messages.\n ///\n /// [flush]: crate::io::Write::flush\n /// [`println!`]: crate::println\n /// [`eprint!`]: crate::eprint\n+/// [lock]: crate::io::Stdout\n ///\n /// # Panics\n ///\n@@ -75,11 +86,22 @@ macro_rules! print {\n /// This macro uses the same syntax as [`format!`], but writes to the standard output instead.\n /// See [`std::fmt`] for more information.\n ///\n+/// The `println!` macro will lock the standard output on each call. If you call\n+/// `println!` within a hot loop, this behavior may be the bottleneck of the loop.\n+/// To avoid this, lock stdout with [`io::stdout().lock()`][lock]:\n+/// ```\n+/// use std::io::{stdout, Write};\n+///\n+/// let mut lock = stdout().lock();\n+/// writeln!(lock, \"hello world\").unwrap();\n+/// ```\n+///\n /// Use `println!` only for the primary output of your program. Use\n /// [`eprintln!`] instead to print error and progress messages.\n ///\n /// [`std::fmt`]: crate::fmt\n /// [`eprintln!`]: crate::eprintln\n+/// [lock]: crate::io::Stdout\n ///\n /// # Panics\n ///"}]}