{"sha": "5f57ac5725653a76a54f810abcb3a6f935c12065", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmNTdhYzU3MjU2NTNhNzZhNTRmODEwYWJjYjNhNmY5MzVjMTIwNjU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-07-18T14:29:40Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-07-18T14:29:40Z"}, "message": "Workaround a bug", "tree": {"sha": "94b0661ba1f6676f8b4da3431b133a812aebf0e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94b0661ba1f6676f8b4da3431b133a812aebf0e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f57ac5725653a76a54f810abcb3a6f935c12065", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f57ac5725653a76a54f810abcb3a6f935c12065", "html_url": "https://github.com/rust-lang/rust/commit/5f57ac5725653a76a54f810abcb3a6f935c12065", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f57ac5725653a76a54f810abcb3a6f935c12065/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5951efb7489b3f44699a04905c9025a12d8b8ce3", "url": "https://api.github.com/repos/rust-lang/rust/commits/5951efb7489b3f44699a04905c9025a12d8b8ce3", "html_url": "https://github.com/rust-lang/rust/commit/5951efb7489b3f44699a04905c9025a12d8b8ce3"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "835b0e813b573fdda4b3c223e1c1a8dd0870a19c", "filename": "Readme.md", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5f57ac5725653a76a54f810abcb3a6f935c12065/Readme.md", "raw_url": "https://github.com/rust-lang/rust/raw/5f57ac5725653a76a54f810abcb3a6f935c12065/Readme.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Readme.md?ref=5f57ac5725653a76a54f810abcb3a6f935c12065", "patch": "@@ -47,4 +47,10 @@ $ ./build.sh\n * [ ] Some rvalue's\n \n * [ ] Inline assembly\n-* [ ] Custom sections\n\\ No newline at end of file\n+* [ ] Custom sections\n+\n+## Known errors\n+\n+* [ ] cranelift-module api seems to be used wrong, thus causing panic for some consts\n+* [ ] cranelift-codegen doesn't have encodings for some instructions for types smaller than I32\n+* [ ] `thread 'main' panicked at 'assertion failed: !value.has_escaping_regions()', librustc/ty/sty.rs:754:9` in cton_sig_from_mono_fn_sig\n\\ No newline at end of file"}, {"sha": "2e17b318fcb504fa404f52e0144a0dad7de61450", "filename": "src/constant.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5f57ac5725653a76a54f810abcb3a6f935c12065/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f57ac5725653a76a54f810abcb3a6f935c12065/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=5f57ac5725653a76a54f810abcb3a6f935c12065", "patch": "@@ -35,6 +35,11 @@ pub fn trans_constant<'a, 'tcx: 'a>(fx: &mut FunctionCx<'a, 'tcx>, const_: &Cons\n             CValue::Func(func_ref, layout)\n         }\n         _ => {\n+            if true {\n+                // TODO: cranelift-module api seems to be used wrong,\n+                // thus causing panics for some consts, so this disables it\n+                return CValue::ByRef(fx.bcx.ins().iconst(types::I64, 0), layout);\n+            }\n             let mut memory = Memory::<CompileTimeEvaluator>::new(fx.tcx.at(DUMMY_SP), ());\n             let alloc = fx.tcx.const_value_to_allocation(value);\n             //println!(\"const value: {:?} allocation: {:?}\", value, alloc);"}]}