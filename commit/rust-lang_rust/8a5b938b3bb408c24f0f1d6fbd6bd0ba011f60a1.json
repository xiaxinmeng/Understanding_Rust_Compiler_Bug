{"sha": "8a5b938b3bb408c24f0f1d6fbd6bd0ba011f60a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhNWI5MzhiM2JiNDA4YzI0ZjBmMWQ2ZmJkNmJkMGJhMDExZjYwYTE=", "commit": {"author": {"name": "Liigo Zhuang", "email": "com.liigo@gmail.com", "date": "2014-02-12T00:40:52Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-13T20:50:25Z"}, "message": "Move base64 and hex from libextra to libserialize", "tree": {"sha": "b5f1173c784526986a62971a4b03bd9bf3df9cf6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5f1173c784526986a62971a4b03bd9bf3df9cf6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a5b938b3bb408c24f0f1d6fbd6bd0ba011f60a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a5b938b3bb408c24f0f1d6fbd6bd0ba011f60a1", "html_url": "https://github.com/rust-lang/rust/commit/8a5b938b3bb408c24f0f1d6fbd6bd0ba011f60a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a5b938b3bb408c24f0f1d6fbd6bd0ba011f60a1/comments", "author": {"login": "liigo", "id": 346530, "node_id": "MDQ6VXNlcjM0NjUzMA==", "avatar_url": "https://avatars.githubusercontent.com/u/346530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liigo", "html_url": "https://github.com/liigo", "followers_url": "https://api.github.com/users/liigo/followers", "following_url": "https://api.github.com/users/liigo/following{/other_user}", "gists_url": "https://api.github.com/users/liigo/gists{/gist_id}", "starred_url": "https://api.github.com/users/liigo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liigo/subscriptions", "organizations_url": "https://api.github.com/users/liigo/orgs", "repos_url": "https://api.github.com/users/liigo/repos", "events_url": "https://api.github.com/users/liigo/events{/privacy}", "received_events_url": "https://api.github.com/users/liigo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7dc187afd8a19dad05dbf1a689e6b6f400f7bc0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7dc187afd8a19dad05dbf1a689e6b6f400f7bc0a", "html_url": "https://github.com/rust-lang/rust/commit/7dc187afd8a19dad05dbf1a689e6b6f400f7bc0a"}], "stats": {"total": 34, "additions": 19, "deletions": 15}, "files": [{"sha": "e0200f48cfecad7f1ddd759ff5d9740de7304c27", "filename": "src/libextra/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8a5b938b3bb408c24f0f1d6fbd6bd0ba011f60a1/src%2Flibextra%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a5b938b3bb408c24f0f1d6fbd6bd0ba011f60a1/src%2Flibextra%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Flib.rs?ref=8a5b938b3bb408c24f0f1d6fbd6bd0ba011f60a1", "patch": "@@ -59,11 +59,9 @@ pub mod url;\n pub mod json;\n pub mod tempfile;\n pub mod time;\n-pub mod base64;\n pub mod workcache;\n pub mod enum_set;\n pub mod stats;\n-pub mod hex;\n \n #[cfg(unicode)]\n mod unicode;"}, {"sha": "957ca3b46c9d1f4f2fd413ed9f256022e82d17e9", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8a5b938b3bb408c24f0f1d6fbd6bd0ba011f60a1/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a5b938b3bb408c24f0f1d6fbd6bd0ba011f60a1/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=8a5b938b3bb408c24f0f1d6fbd6bd0ba011f60a1", "patch": "@@ -34,7 +34,7 @@ use std::run;\n use std::str;\n use std::io;\n use std::io::fs;\n-use extra::hex::ToHex;\n+use serialize::hex::ToHex;\n use extra::tempfile::TempDir;\n use syntax::abi;\n use syntax::ast;"}, {"sha": "940cebf78471ee6b9c6d96b7ed4807fb1319e4ad", "filename": "src/librustc/util/sha2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8a5b938b3bb408c24f0f1d6fbd6bd0ba011f60a1/src%2Flibrustc%2Futil%2Fsha2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a5b938b3bb408c24f0f1d6fbd6bd0ba011f60a1/src%2Flibrustc%2Futil%2Fsha2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fsha2.rs?ref=8a5b938b3bb408c24f0f1d6fbd6bd0ba011f60a1", "patch": "@@ -16,7 +16,7 @@ use std::iter::range_step;\n use std::num::Zero;\n use std::vec;\n use std::vec::bytes::{MutableByteVector, copy_memory};\n-use extra::hex::ToHex;\n+use serialize::hex::ToHex;\n \n /// Write a u32 into a vector, which must be 4 bytes long. The value is written in big-endian\n /// format.\n@@ -529,7 +529,7 @@ mod tests {\n     use std::vec;\n     use std::rand::isaac::IsaacRng;\n     use std::rand::Rng;\n-    use extra::hex::FromHex;\n+    use serialize::hex::FromHex;\n \n     // A normal addition - no overflow occurs\n     #[test]"}, {"sha": "c22eefdb3302076bf5777251a3069c3f7a016639", "filename": "src/libserialize/base64.rs", "status": "renamed", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8a5b938b3bb408c24f0f1d6fbd6bd0ba011f60a1/src%2Flibserialize%2Fbase64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a5b938b3bb408c24f0f1d6fbd6bd0ba011f60a1/src%2Flibserialize%2Fbase64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fbase64.rs?ref=8a5b938b3bb408c24f0f1d6fbd6bd0ba011f60a1", "patch": "@@ -63,8 +63,8 @@ impl<'a> ToBase64 for &'a [u8] {\n      * # Example\n      *\n      * ```rust\n-     * extern mod extra;\n-     * use extra::base64::{ToBase64, STANDARD};\n+     * extern mod serialize;\n+     * use serialize::base64::{ToBase64, STANDARD};\n      *\n      * fn main () {\n      *     let str = [52,32].to_base64(STANDARD);\n@@ -189,8 +189,8 @@ impl<'a> FromBase64 for &'a str {\n      * This converts a string literal to base64 and back.\n      *\n      * ```rust\n-     * extern mod extra;\n-     * use extra::base64::{ToBase64, FromBase64, STANDARD};\n+     * extern mod serialize;\n+     * use serialize::base64::{ToBase64, FromBase64, STANDARD};\n      * use std::str;\n      *\n      * fn main () {\n@@ -261,8 +261,8 @@ impl<'a> FromBase64 for &'a str {\n \n #[cfg(test)]\n mod test {\n-    use test::BenchHarness;\n-    use base64::*;\n+    use extra::test::BenchHarness;\n+    use base64::{Config, FromBase64, ToBase64, STANDARD, URL_SAFE};\n \n     #[test]\n     fn test_to_base64_basic() {", "previous_filename": "src/libextra/base64.rs"}, {"sha": "409bf4af809928a430e86d2bc479f3a7a90a18c5", "filename": "src/libserialize/hex.rs", "status": "renamed", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8a5b938b3bb408c24f0f1d6fbd6bd0ba011f60a1/src%2Flibserialize%2Fhex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a5b938b3bb408c24f0f1d6fbd6bd0ba011f60a1/src%2Flibserialize%2Fhex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fhex.rs?ref=8a5b938b3bb408c24f0f1d6fbd6bd0ba011f60a1", "patch": "@@ -28,7 +28,8 @@ impl<'a> ToHex for &'a [u8] {\n      * # Example\n      *\n      * ```rust\n-     * use extra::hex::ToHex;\n+     * extern mod serialize;\n+     * use serialize::hex::ToHex;\n      *\n      * fn main () {\n      *     let str = [52,32].to_hex();\n@@ -88,7 +89,8 @@ impl<'a> FromHex for &'a str {\n      * This converts a string literal to hexadecimal and back.\n      *\n      * ```rust\n-     * use extra::hex::{FromHex, ToHex};\n+     * extern mod serialize;\n+     * use serialize::hex::{FromHex, ToHex};\n      * use std::str;\n      *\n      * fn main () {\n@@ -137,8 +139,8 @@ impl<'a> FromHex for &'a str {\n \n #[cfg(test)]\n mod tests {\n-    use test::BenchHarness;\n-    use hex::*;\n+    use extra::test::BenchHarness;\n+    use hex::{FromHex, ToHex};\n \n     #[test]\n     pub fn test_to_hex() {", "previous_filename": "src/libextra/hex.rs"}, {"sha": "3b71b2237b17661df9333bbc88bb1909724d3998", "filename": "src/libserialize/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8a5b938b3bb408c24f0f1d6fbd6bd0ba011f60a1/src%2Flibserialize%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a5b938b3bb408c24f0f1d6fbd6bd0ba011f60a1/src%2Flibserialize%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Flib.rs?ref=8a5b938b3bb408c24f0f1d6fbd6bd0ba011f60a1", "patch": "@@ -30,4 +30,8 @@ pub use self::serialize::{Decoder, Encoder, Decodable, Encodable,\n     DecoderHelpers, EncoderHelpers};\n \n mod serialize;\n+\n+pub mod base64;\n pub mod ebml;\n+pub mod hex;\n+"}]}