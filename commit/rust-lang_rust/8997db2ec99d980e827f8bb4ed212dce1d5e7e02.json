{"sha": "8997db2ec99d980e827f8bb4ed212dce1d5e7e02", "node_id": "C_kwDOAAsO6NoAKDg5OTdkYjJlYzk5ZDk4MGU4MjdmOGJiNGVkMjEyZGNlMWQ1ZTdlMDI", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-05-31T23:00:14Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-05-31T23:00:14Z"}, "message": "paper over platform differences", "tree": {"sha": "11101702ab526e1134cfcf657907c6566c946c04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11101702ab526e1134cfcf657907c6566c946c04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8997db2ec99d980e827f8bb4ed212dce1d5e7e02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8997db2ec99d980e827f8bb4ed212dce1d5e7e02", "html_url": "https://github.com/rust-lang/rust/commit/8997db2ec99d980e827f8bb4ed212dce1d5e7e02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a448744a2b4f90c135f9425df0437970aa9d5fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a448744a2b4f90c135f9425df0437970aa9d5fa", "html_url": "https://github.com/rust-lang/rust/commit/9a448744a2b4f90c135f9425df0437970aa9d5fa"}], "stats": {"total": 48, "additions": 30, "deletions": 18}, "files": [{"sha": "bb87b132f32270b18be4f75460ce6b106d07bf9e", "filename": "tests/compile-fail/alloc/global_system_mixup.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/tests%2Fcompile-fail%2Falloc%2Fglobal_system_mixup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/tests%2Fcompile-fail%2Falloc%2Fglobal_system_mixup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Falloc%2Fglobal_system_mixup.rs?ref=8997db2ec99d980e827f8bb4ed212dce1d5e7e02", "patch": "@@ -3,6 +3,8 @@\n // error-pattern: which is Rust heap memory, using\n \n // normalize-stderr-test: \"using [A-Za-z]+ heap deallocation operation\" -> \"using PLATFORM heap deallocation operation\"\n+// normalize-stderr-test: \"\\| +\\^+\" -> \"| ^\"\n+// normalize-stderr-test: \"libc::free\\([^()]*\\)|unsafe \\{ HeapFree\\([^()]*\\) \\};\" -> \"FREE();\"\n \n #![feature(allocator_api, slice_ptr_get)]\n "}, {"sha": "a3b9009e30354151095766340947d7e352e0851a", "filename": "tests/compile-fail/alloc/global_system_mixup.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/tests%2Fcompile-fail%2Falloc%2Fglobal_system_mixup.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/tests%2Fcompile-fail%2Falloc%2Fglobal_system_mixup.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Falloc%2Fglobal_system_mixup.stderr?ref=8997db2ec99d980e827f8bb4ed212dce1d5e7e02", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: deallocating ALLOC, which is Rust heap memory, using PLATFORM heap deallocation operation\n   --> RUSTLIB/std/src/sys/PLATFORM/alloc.rs:LL:CC\n    |\n-LL |         libc::free(ptr as *mut libc::c_void)\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ deallocating ALLOC, which is Rust heap memory, using PLATFORM heap deallocation operation\n+LL |         FREE();\n+   | ^ deallocating ALLOC, which is Rust heap memory, using PLATFORM heap deallocation operation\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n@@ -13,7 +13,7 @@ note: inside `main` at $DIR/global_system_mixup.rs:LL:CC\n   --> $DIR/global_system_mixup.rs:LL:CC\n    |\n LL |     unsafe { System.deallocate(ptr, l); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | ^\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "f3af66a79abc473bb2e20de46469f26c3d58fcae", "filename": "tests/compile-fail/panic/double_panic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/tests%2Fcompile-fail%2Fpanic%2Fdouble_panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/tests%2Fcompile-fail%2Fpanic%2Fdouble_panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpanic%2Fdouble_panic.rs?ref=8997db2ec99d980e827f8bb4ed212dce1d5e7e02", "patch": "@@ -1,4 +1,6 @@\n // error-pattern: the program aborted\n+// normalize-stderr-test: \"\\| +\\^+\" -> \"| ^\"\n+// normalize-stderr-test: \"unsafe \\{ libc::abort\\(\\) \\}|crate::intrinsics::abort\\(\\);\" -> \"ABORT();\"\n \n struct Foo;\n impl Drop for Foo {"}, {"sha": "0dbd68c0984f9fd2e59800ea8bcc1916da50e6f7", "filename": "tests/compile-fail/panic/double_panic.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/tests%2Fcompile-fail%2Fpanic%2Fdouble_panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/tests%2Fcompile-fail%2Fpanic%2Fdouble_panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpanic%2Fdouble_panic.stderr?ref=8997db2ec99d980e827f8bb4ed212dce1d5e7e02", "patch": "@@ -68,8 +68,8 @@ thread panicked while panicking. aborting.\n error: abnormal termination: the program aborted execution\n   --> RUSTLIB/std/src/sys/PLATFORM/mod.rs:LL:CC\n    |\n-LL |     unsafe { libc::abort() }\n-   |              ^^^^^^^^^^^^^ the program aborted execution\n+LL |     ABORT();\n+   | ^ the program aborted execution\n    |\n    = note: inside `std::sys::PLATFORM::abort_internal` at RUSTLIB/std/src/sys/PLATFORM/mod.rs:LL:CC\n    = note: inside `std::panicking::rust_panic_with_hook` at RUSTLIB/std/src/panicking.rs:LL:CC\n@@ -80,7 +80,7 @@ note: inside `<Foo as std::ops::Drop>::drop` at RUSTLIB/std/src/panic.rs:LL:CC\n   --> $DIR/double_panic.rs:LL:CC\n    |\n LL |         panic!(\"second\");\n-   |         ^^^^^^^^^^^^^^^^\n+   | ^\n    = note: inside `std::ptr::drop_in_place::<Foo> - shim(Some(Foo))` at RUSTLIB/core/src/ptr/mod.rs:LL:CC\n note: inside `main` at $DIR/double_panic.rs:LL:CC\n   --> $DIR/double_panic.rs:LL:CC"}, {"sha": "9c094c659837a3e42e3f07ce4335ec174137b72e", "filename": "tests/compile-fail/panic/panic_abort1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort1.rs?ref=8997db2ec99d980e827f8bb4ed212dce1d5e7e02", "patch": "@@ -1,4 +1,6 @@\n // error-pattern: the program aborted execution\n+// normalize-stderr-test: \"\\| +\\^+\" -> \"| ^\"\n+// normalize-stderr-test: \"libc::abort\\(\\);|core::intrinsics::abort\\(\\);\" -> \"ABORT();\"\n // compile-flags: -C panic=abort\n \n fn main() {"}, {"sha": "9610a161280a012adb89e9fdd023dbdc49e7f387", "filename": "tests/compile-fail/panic/panic_abort1.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort1.stderr?ref=8997db2ec99d980e827f8bb4ed212dce1d5e7e02", "patch": "@@ -3,8 +3,8 @@ note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n error: abnormal termination: the program aborted execution\n   --> RUSTLIB/panic_abort/src/lib.rs:LL:CC\n    |\n-LL |                 libc::abort();\n-   |                 ^^^^^^^^^^^^^ the program aborted execution\n+LL |                 ABORT();\n+   | ^ the program aborted execution\n    |\n    = note: inside `panic_abort::__rust_start_panic::abort` at RUSTLIB/panic_abort/src/lib.rs:LL:CC\n    = note: inside `panic_abort::__rust_start_panic` at RUSTLIB/panic_abort/src/lib.rs:LL:CC\n@@ -17,7 +17,7 @@ note: inside `main` at RUSTLIB/std/src/panic.rs:LL:CC\n   --> $DIR/panic_abort1.rs:LL:CC\n    |\n LL |     std::panic!(\"panicking from libstd\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | ^\n    = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "7eb9a3c24aa246029b4db1d9ad371a0a707c7209", "filename": "tests/compile-fail/panic/panic_abort2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort2.rs?ref=8997db2ec99d980e827f8bb4ed212dce1d5e7e02", "patch": "@@ -1,4 +1,6 @@\n // error-pattern: the program aborted execution\n+// normalize-stderr-test: \"\\| +\\^+\" -> \"| ^\"\n+// normalize-stderr-test: \"libc::abort\\(\\);|core::intrinsics::abort\\(\\);\" -> \"ABORT();\"\n // compile-flags: -C panic=abort\n \n fn main() {"}, {"sha": "0c446323a77912665e0c13087a8d7caed92390a9", "filename": "tests/compile-fail/panic/panic_abort2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort2.stderr?ref=8997db2ec99d980e827f8bb4ed212dce1d5e7e02", "patch": "@@ -3,8 +3,8 @@ note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n error: abnormal termination: the program aborted execution\n   --> RUSTLIB/panic_abort/src/lib.rs:LL:CC\n    |\n-LL |                 libc::abort();\n-   |                 ^^^^^^^^^^^^^ the program aborted execution\n+LL |                 ABORT();\n+   | ^ the program aborted execution\n    |\n    = note: inside `panic_abort::__rust_start_panic::abort` at RUSTLIB/panic_abort/src/lib.rs:LL:CC\n    = note: inside `panic_abort::__rust_start_panic` at RUSTLIB/panic_abort/src/lib.rs:LL:CC\n@@ -18,7 +18,7 @@ note: inside `main` at RUSTLIB/std/src/panic.rs:LL:CC\n   --> $DIR/panic_abort2.rs:LL:CC\n    |\n LL |     std::panic!(\"{}-panicking from libstd\", 42);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | ^\n    = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "1940b48bad78d1fd93f4b639e71f533a8c8b6853", "filename": "tests/compile-fail/panic/panic_abort3.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort3.rs?ref=8997db2ec99d980e827f8bb4ed212dce1d5e7e02", "patch": "@@ -1,4 +1,6 @@\n // error-pattern: the program aborted execution\n+// normalize-stderr-test: \"\\| +\\^+\" -> \"| ^\"\n+// normalize-stderr-test: \"libc::abort\\(\\);|core::intrinsics::abort\\(\\);\" -> \"ABORT();\"\n // compile-flags: -C panic=abort\n \n fn main() {"}, {"sha": "2d7b576372e0822098b24706d2ca01c5a3155180", "filename": "tests/compile-fail/panic/panic_abort3.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort3.stderr?ref=8997db2ec99d980e827f8bb4ed212dce1d5e7e02", "patch": "@@ -3,8 +3,8 @@ note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n error: abnormal termination: the program aborted execution\n   --> RUSTLIB/panic_abort/src/lib.rs:LL:CC\n    |\n-LL |                 libc::abort();\n-   |                 ^^^^^^^^^^^^^ the program aborted execution\n+LL |                 ABORT();\n+   | ^ the program aborted execution\n    |\n    = note: inside `panic_abort::__rust_start_panic::abort` at RUSTLIB/panic_abort/src/lib.rs:LL:CC\n    = note: inside `panic_abort::__rust_start_panic` at RUSTLIB/panic_abort/src/lib.rs:LL:CC\n@@ -19,7 +19,7 @@ note: inside `main` at RUSTLIB/core/src/panic.rs:LL:CC\n   --> $DIR/panic_abort3.rs:LL:CC\n    |\n LL |     core::panic!(\"panicking from libcore\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | ^\n    = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "e5190ea0765d13ece0b738c8507b102a1b7be6a7", "filename": "tests/compile-fail/panic/panic_abort4.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort4.rs?ref=8997db2ec99d980e827f8bb4ed212dce1d5e7e02", "patch": "@@ -1,4 +1,6 @@\n // error-pattern: the program aborted execution\n+// normalize-stderr-test: \"\\| +\\^+\" -> \"| ^\"\n+// normalize-stderr-test: \"libc::abort\\(\\);|core::intrinsics::abort\\(\\);\" -> \"ABORT();\"\n // compile-flags: -C panic=abort\n \n fn main() {"}, {"sha": "b0b11248104d99c99000f5db344ebd1edc8a98c2", "filename": "tests/compile-fail/panic/panic_abort4.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8997db2ec99d980e827f8bb4ed212dce1d5e7e02/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpanic%2Fpanic_abort4.stderr?ref=8997db2ec99d980e827f8bb4ed212dce1d5e7e02", "patch": "@@ -3,8 +3,8 @@ note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n error: abnormal termination: the program aborted execution\n   --> RUSTLIB/panic_abort/src/lib.rs:LL:CC\n    |\n-LL |                 libc::abort();\n-   |                 ^^^^^^^^^^^^^ the program aborted execution\n+LL |                 ABORT();\n+   | ^ the program aborted execution\n    |\n    = note: inside `panic_abort::__rust_start_panic::abort` at RUSTLIB/panic_abort/src/lib.rs:LL:CC\n    = note: inside `panic_abort::__rust_start_panic` at RUSTLIB/panic_abort/src/lib.rs:LL:CC\n@@ -18,7 +18,7 @@ note: inside `main` at RUSTLIB/core/src/panic.rs:LL:CC\n   --> $DIR/panic_abort4.rs:LL:CC\n    |\n LL |     core::panic!(\"{}-panicking from libcore\", 42);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | ^\n    = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}]}