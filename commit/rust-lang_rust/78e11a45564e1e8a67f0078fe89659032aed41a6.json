{"sha": "78e11a45564e1e8a67f0078fe89659032aed41a6", "node_id": "C_kwDOAAsO6NoAKDc4ZTExYTQ1NTY0ZTFlOGE2N2YwMDc4ZmU4OTY1OTAzMmFlZDQxYTY", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-12-22T11:45:36Z"}, "committer": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2023-01-07T09:58:07Z"}, "message": "Apply review suggestions\n\nSigned-off-by: Yuki Okushi <jtitor@2k36.org>", "tree": {"sha": "74564849d41607cad98130670b02e76032853382", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74564849d41607cad98130670b02e76032853382"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78e11a45564e1e8a67f0078fe89659032aed41a6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgHhkVL0/9C9iZr1PMss4Lz7KmAH\nPO6dU/JqcK/z29OHQAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQNtjCzTHzuiVBLeBT9QIa+fqpgVFpF3tmOZbRteUqhRpWEifGeSzqNRrxYUIhuOMlM\neYHH4lryCgwomrw5QXvgI=\n-----END SSH SIGNATURE-----", "payload": "tree 74564849d41607cad98130670b02e76032853382\nparent 75f1dfcc3236029bbd33799b94742424711e0376\nauthor Yuki Okushi <jtitor@2k36.org> 1671709536 +0900\ncommitter Yuki Okushi <jtitor@2k36.org> 1673085487 +0900\n\nApply review suggestions\n\nSigned-off-by: Yuki Okushi <jtitor@2k36.org>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78e11a45564e1e8a67f0078fe89659032aed41a6", "html_url": "https://github.com/rust-lang/rust/commit/78e11a45564e1e8a67f0078fe89659032aed41a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78e11a45564e1e8a67f0078fe89659032aed41a6/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75f1dfcc3236029bbd33799b94742424711e0376", "url": "https://api.github.com/repos/rust-lang/rust/commits/75f1dfcc3236029bbd33799b94742424711e0376", "html_url": "https://github.com/rust-lang/rust/commit/75f1dfcc3236029bbd33799b94742424711e0376"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "e647dbe2514dba6107d22bbcb237f43dc0af63a2", "filename": "src/test/codegen/issue-86106.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/78e11a45564e1e8a67f0078fe89659032aed41a6/src%2Ftest%2Fcodegen%2Fissue-86106.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78e11a45564e1e8a67f0078fe89659032aed41a6/src%2Ftest%2Fcodegen%2Fissue-86106.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fissue-86106.rs?ref=78e11a45564e1e8a67f0078fe89659032aed41a6", "patch": "@@ -1,27 +1,26 @@\n // min-llvm-version: 15.0\n-// compile-flags: -C opt-level=3 -C target-cpu=native\n+// compile-flags: -C opt-level=3\n \n // The below two functions ensure that both `String::new()` and `\"\".to_string()`\n // produce the identical code.\n \n #![crate_type = \"lib\"]\n \n // CHECK-LABEL: @string_new = unnamed_addr alias void (ptr), ptr @empty_to_string\n-// CHECK: define void @empty_to_string\n #[no_mangle]\n pub fn string_new() -> String {\n     String::new()\n }\n \n+// CHECK-LABEL: define void @empty_to_string\n #[no_mangle]\n pub fn empty_to_string() -> String {\n     // CHECK-NOT: load i8\n-    // CHECK: store i64\n+    // CHECK: store i{{32|64}}\n     // CHECK-NEXT: getelementptr\n     // CHECK-NEXT: store ptr\n     // CHECK-NEXT: getelementptr\n-    // CHECK-NOT: store i8\n-    // CHECK-NEXT: store i64\n+    // CHECK-NEXT: store i{{32|64}}\n     // CHECK-NEXT: ret void\n     \"\".to_string()\n }\n@@ -32,25 +31,25 @@ pub fn empty_to_string() -> String {\n // CHECK-LABEL: @empty_vec\n #[no_mangle]\n pub fn empty_vec() -> Vec<u8> {\n-    // CHECK: store i64\n+    // CHECK: store i{{32|64}}\n     // CHECK-NOT: load i8\n     // CHECK-NEXT: getelementptr\n     // CHECK-NEXT: store ptr\n     // CHECK-NEXT: getelementptr\n-    // CHECK-NEXT: store i64\n+    // CHECK-NEXT: store i{{32|64}}\n     // CHECK-NEXT: ret void\n     vec![]\n }\n \n // CHECK-LABEL: @empty_vec_clone\n #[no_mangle]\n pub fn empty_vec_clone() -> Vec<u8> {\n-    // CHECK: store i64\n+    // CHECK: store i{{32|64}}\n     // CHECK-NOT: load i8\n     // CHECK-NEXT: getelementptr\n     // CHECK-NEXT: store ptr\n     // CHECK-NEXT: getelementptr\n-    // CHECK-NEXT: store i64\n+    // CHECK-NEXT: store i{{32|64}}\n     // CHECK-NEXT: ret void\n     vec![].clone()\n }"}]}