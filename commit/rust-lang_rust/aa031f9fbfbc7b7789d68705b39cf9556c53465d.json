{"sha": "aa031f9fbfbc7b7789d68705b39cf9556c53465d", "node_id": "C_kwDOAAsO6NoAKGFhMDMxZjlmYmZiYzdiNzc4OWQ2ODcwNWIzOWNmOTU1NmM1MzQ2NWQ", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-08-07T17:12:33Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-08-07T17:12:33Z"}, "message": "Fail gracefully when const pattern is not structural match.", "tree": {"sha": "5219c4f5e8a1013f4eeaf3a2ccef23c09f1ec474", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5219c4f5e8a1013f4eeaf3a2ccef23c09f1ec474"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa031f9fbfbc7b7789d68705b39cf9556c53465d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa031f9fbfbc7b7789d68705b39cf9556c53465d", "html_url": "https://github.com/rust-lang/rust/commit/aa031f9fbfbc7b7789d68705b39cf9556c53465d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa031f9fbfbc7b7789d68705b39cf9556c53465d/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55f46419afd2e49acfc6be176ad4aeadaa5686d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/55f46419afd2e49acfc6be176ad4aeadaa5686d7", "html_url": "https://github.com/rust-lang/rust/commit/55f46419afd2e49acfc6be176ad4aeadaa5686d7"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "f2045ac19cac42920293ecc3b71d865cf5cb29a9", "filename": "compiler/rustc_mir_build/src/thir/pattern/const_to_pat.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/aa031f9fbfbc7b7789d68705b39cf9556c53465d/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fconst_to_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa031f9fbfbc7b7789d68705b39cf9556c53465d/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fconst_to_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fconst_to_pat.rs?ref=aa031f9fbfbc7b7789d68705b39cf9556c53465d", "patch": "@@ -168,7 +168,12 @@ impl<'a, 'tcx> ConstToPat<'a, 'tcx> {\n         // once indirect_structural_match is a full fledged error, this\n         // level of indirection can be eliminated\n \n-        let inlined_const_as_pat = self.recur(cv, mir_structural_match_violation).unwrap();\n+        let inlined_const_as_pat =\n+            self.recur(cv, mir_structural_match_violation).unwrap_or_else(|_| Pat {\n+                span: self.span,\n+                ty: cv.ty(),\n+                kind: Box::new(PatKind::Constant { value: cv }),\n+            });\n \n         if self.include_lint_checks && !self.saw_const_match_error.get() {\n             // If we were able to successfully convert the const to some pat,"}, {"sha": "e1ccda71d40eaf5d352fd572a582db497704c826", "filename": "src/test/ui/consts/const_in_pattern/incomplete-slice.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/aa031f9fbfbc7b7789d68705b39cf9556c53465d/src%2Ftest%2Fui%2Fconsts%2Fconst_in_pattern%2Fincomplete-slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa031f9fbfbc7b7789d68705b39cf9556c53465d/src%2Ftest%2Fui%2Fconsts%2Fconst_in_pattern%2Fincomplete-slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_in_pattern%2Fincomplete-slice.rs?ref=aa031f9fbfbc7b7789d68705b39cf9556c53465d", "patch": "@@ -0,0 +1,15 @@\n+#[derive(PartialEq)]\n+enum E {\n+    A,\n+}\n+\n+const E_SL: &[E] = &[E::A];\n+\n+fn main() {\n+    match &[][..] {\n+        //~^ ERROR non-exhaustive patterns: `&_` not covered [E0004]\n+        E_SL => {}\n+        //~^ WARN to use a constant of type `E` in a pattern, `E` must be annotated with `#[derive(PartialEq, Eq)]`\n+        //~| WARN this was previously accepted by the compiler but is being phased out\n+    }\n+}"}, {"sha": "0ff70837138431f8ccd49d5f2842c6690464c599", "filename": "src/test/ui/consts/const_in_pattern/incomplete-slice.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/aa031f9fbfbc7b7789d68705b39cf9556c53465d/src%2Ftest%2Fui%2Fconsts%2Fconst_in_pattern%2Fincomplete-slice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aa031f9fbfbc7b7789d68705b39cf9556c53465d/src%2Ftest%2Fui%2Fconsts%2Fconst_in_pattern%2Fincomplete-slice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_in_pattern%2Fincomplete-slice.stderr?ref=aa031f9fbfbc7b7789d68705b39cf9556c53465d", "patch": "@@ -0,0 +1,26 @@\n+warning: to use a constant of type `E` in a pattern, `E` must be annotated with `#[derive(PartialEq, Eq)]`\n+  --> $DIR/incomplete-slice.rs:11:9\n+   |\n+LL |         E_SL => {}\n+   |         ^^^^\n+   |\n+   = note: `#[warn(indirect_structural_match)]` on by default\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/62411>\n+\n+error[E0004]: non-exhaustive patterns: `&_` not covered\n+  --> $DIR/incomplete-slice.rs:9:11\n+   |\n+LL |     match &[][..] {\n+   |           ^^^^^^^ pattern `&_` not covered\n+   |\n+   = note: the matched value is of type `&[E]`\n+help: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern or an explicit pattern as shown\n+   |\n+LL ~         E_SL => {}\n+LL +         &_ => todo!()\n+   |\n+\n+error: aborting due to previous error; 1 warning emitted\n+\n+For more information about this error, try `rustc --explain E0004`."}]}