{"sha": "0b0ca597bf25d13e4493c72843389cc9e47425b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiMGNhNTk3YmYyNWQxM2U0NDkzYzcyODQzMzg5Y2M5ZTQ3NDI1YjY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-04-07T23:09:12Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-04-19T18:53:34Z"}, "message": "librustc: Improve inlining behavior.", "tree": {"sha": "892baff0bb00ae6e09778764f82e45c037f284e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/892baff0bb00ae6e09778764f82e45c037f284e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b0ca597bf25d13e4493c72843389cc9e47425b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b0ca597bf25d13e4493c72843389cc9e47425b6", "html_url": "https://github.com/rust-lang/rust/commit/0b0ca597bf25d13e4493c72843389cc9e47425b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b0ca597bf25d13e4493c72843389cc9e47425b6/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca8e99fd78ab9b56c5bdc61027b032ad52c2ec8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca8e99fd78ab9b56c5bdc61027b032ad52c2ec8b", "html_url": "https://github.com/rust-lang/rust/commit/ca8e99fd78ab9b56c5bdc61027b032ad52c2ec8b"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "252a10f8a8bbc965607ac1607459f58ebb619f2c", "filename": "src/librustc/middle/trans/closure.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0b0ca597bf25d13e4493c72843389cc9e47425b6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b0ca597bf25d13e4493c72843389cc9e47425b6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs?ref=0b0ca597bf25d13e4493c72843389cc9e47425b6", "patch": "@@ -409,6 +409,15 @@ pub fn trans_expr_fn(bcx: block,\n                                                  ~\"expr_fn\");\n     let llfn = decl_internal_cdecl_fn(ccx.llmod, s, llfnty);\n \n+    // Always mark inline if this is a loop body. This is important for\n+    // performance on many programs with tight loops.\n+    if is_loop_body.is_some() {\n+        set_always_inline(llfn);\n+    } else {\n+        // Can't hurt.\n+        set_inline_hint(llfn);\n+    }\n+\n     let Result {bcx: bcx, val: closure} = match sigil {\n         ast::BorrowedSigil | ast::ManagedSigil | ast::OwnedSigil => {\n             let cap_vars = *ccx.maps.capture_map.get(&user_id);"}]}