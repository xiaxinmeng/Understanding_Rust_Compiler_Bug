{"sha": "7dc38369c00380f8ec23f8b3bf4cfc0ea5c94bcf", "node_id": "C_kwDOAAsO6NoAKDdkYzM4MzY5YzAwMzgwZjhlYzIzZjhiM2JmNGNmYzBlYTVjOTRiY2Y", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2021-11-10T18:47:00Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2021-11-10T18:47:00Z"}, "message": "Disable `.debug_aranges` for all wasm targets\n\nThis follows from discussion on\nhttps://bugs.llvm.org/show_bug.cgi?id=52442 where it looks like this\nsection doesn't make sense for wasm targets.", "tree": {"sha": "bea076b77cb31298faa9e37fe5c339acd14a53c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bea076b77cb31298faa9e37fe5c339acd14a53c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7dc38369c00380f8ec23f8b3bf4cfc0ea5c94bcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7dc38369c00380f8ec23f8b3bf4cfc0ea5c94bcf", "html_url": "https://github.com/rust-lang/rust/commit/7dc38369c00380f8ec23f8b3bf4cfc0ea5c94bcf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7dc38369c00380f8ec23f8b3bf4cfc0ea5c94bcf/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a442353f37a9959c2149927382bb8261d980e76", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a442353f37a9959c2149927382bb8261d980e76", "html_url": "https://github.com/rust-lang/rust/commit/9a442353f37a9959c2149927382bb8261d980e76"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "3393c9baa28e3889804ea05a13d1af1fcfff261b", "filename": "compiler/rustc_codegen_llvm/src/llvm_util.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7dc38369c00380f8ec23f8b3bf4cfc0ea5c94bcf/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dc38369c00380f8ec23f8b3bf4cfc0ea5c94bcf/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs?ref=7dc38369c00380f8ec23f8b3bf4cfc0ea5c94bcf", "patch": "@@ -75,14 +75,8 @@ unsafe fn configure_llvm(sess: &Session) {\n         if sess.print_llvm_passes() {\n             add(\"-debug-pass=Structure\", false);\n         }\n-        if !sess.opts.debugging_opts.no_generate_arange_section\n-            // FIXME: An LLVM bug [1] means that if this option is enabled for\n-            // wasm64 then LLVM will crash when generating debuginfo. Assuming\n-            // that this gets fixed in LLVM 14 this condition here is a\n-            // workaround to work with versions of LLVM 13 and prior.\n-            //\n-            // [1]: https://bugs.llvm.org/show_bug.cgi?id=52376\n-            && (sess.target.arch != \"wasm64\" || llvm_util::get_version() >= (14, 0, 0))\n+        if sess.target.generate_arange_section\n+            && !sess.opts.debugging_opts.no_generate_arange_section\n         {\n             add(\"-generate-arange-section\", false);\n         }"}, {"sha": "0771f9985350020449f02ec968c3b4fb78f81b1d", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7dc38369c00380f8ec23f8b3bf4cfc0ea5c94bcf/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dc38369c00380f8ec23f8b3bf4cfc0ea5c94bcf/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=7dc38369c00380f8ec23f8b3bf4cfc0ea5c94bcf", "patch": "@@ -1357,6 +1357,9 @@ pub struct TargetOptions {\n \n     /// Minimum number of bits in #[repr(C)] enum. Defaults to 32.\n     pub c_enum_min_bits: u64,\n+\n+    /// Whether or not the DWARF `.debug_aranges` section should be generated.\n+    pub generate_arange_section: bool,\n }\n \n impl Default for TargetOptions {\n@@ -1462,6 +1465,7 @@ impl Default for TargetOptions {\n             supported_sanitizers: SanitizerSet::empty(),\n             default_adjusted_cabi: None,\n             c_enum_min_bits: 32,\n+            generate_arange_section: true,\n         }\n     }\n }\n@@ -2047,6 +2051,7 @@ impl Target {\n         key!(supported_sanitizers, SanitizerSet)?;\n         key!(default_adjusted_cabi, Option<Abi>)?;\n         key!(c_enum_min_bits, u64);\n+        key!(generate_arange_section, bool);\n \n         if base.is_builtin {\n             // This can cause unfortunate ICEs later down the line.\n@@ -2286,6 +2291,7 @@ impl ToJson for Target {\n         target_option_val!(split_debuginfo);\n         target_option_val!(supported_sanitizers);\n         target_option_val!(c_enum_min_bits);\n+        target_option_val!(generate_arange_section);\n \n         if let Some(abi) = self.default_adjusted_cabi {\n             d.insert(\"default-adjusted-cabi\".to_string(), Abi::name(abi).to_json());"}, {"sha": "24e9c62516999dc612dfb74f25481603c86fb284", "filename": "compiler/rustc_target/src/spec/wasm_base.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7dc38369c00380f8ec23f8b3bf4cfc0ea5c94bcf/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dc38369c00380f8ec23f8b3bf4cfc0ea5c94bcf/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm_base.rs?ref=7dc38369c00380f8ec23f8b3bf4cfc0ea5c94bcf", "patch": "@@ -128,6 +128,12 @@ pub fn options() -> TargetOptions {\n         // gdb scripts don't work on wasm blobs\n         emit_debug_gdb_scripts: false,\n \n+        // There's more discussion of this at\n+        // https://bugs.llvm.org/show_bug.cgi?id=52442 but the general result is\n+        // that this isn't useful for wasm and has tricky issues with\n+        // representation, so this is disabled.\n+        generate_arange_section: false,\n+\n         ..Default::default()\n     }\n }"}]}