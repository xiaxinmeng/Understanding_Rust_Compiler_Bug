{"sha": "80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwZmIzZjMxMzljN2RlZTdmMjExOTY0YzZhMGIzY2NiMDRiODNkNWU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-15T11:38:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-15T11:38:24Z"}, "message": "Auto merge of #74576 - myfreeweb:freebsd-sanitizers, r=oli-obk\n\nAdd sanitizer support on FreeBSD\n\nRestarting #47337. Everything is better now, no more weird llvm problems, well not everything:\n\nUnfortunately, the sanitizers don't have proper support for versioned symbols (https://github.com/google/sanitizers/issues/628), so `libc`'s usage of `stat@FBSD_1.0` and so on explodes, e.g. in calling `std::fs::metadata`.\n\nBuilding std (now easy thanks to cargo `-Zbuild-std`) and libc with `freebsd12/13` config via the `LIBC_CI=1` env variable is a good workaround\u2026\n\n```\nLIBC_CI=1 RUSTFLAGS=\"-Z sanitizer=address\" cargo +san-test -Zbuild-std run --target x86_64-unknown-freebsd --verbose\n```\n\n\u2026*except* std won't build because there's no `st_lspare` in the ino64 version of the struct, so an std patch is required:\n\n```diff\n--- i/src/libstd/os/freebsd/fs.rs\n+++ w/src/libstd/os/freebsd/fs.rs\n@@ -66,8 +66,6 @@ pub trait MetadataExt {\n     fn st_flags(&self) -> u32;\n     #[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]\n     fn st_gen(&self) -> u32;\n-    #[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]\n-    fn st_lspare(&self) -> u32;\n }\n\n #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n@@ -136,7 +134,4 @@ impl MetadataExt for Metadata {\n     fn st_flags(&self) -> u32 {\n         self.as_inner().as_inner().st_flags as u32\n     }\n-    fn st_lspare(&self) -> u32 {\n-        self.as_inner().as_inner().st_lspare as u32\n-    }\n }\n```\n\nI guess std could like.. detect that `libc` isn't built for the old ABI, and replace the implementation of `st_lspare` with a panic?", "tree": {"sha": "75b4e6ba2a2080af0d2a6f36a64d7b52c0e8a20e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75b4e6ba2a2080af0d2a6f36a64d7b52c0e8a20e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e", "html_url": "https://github.com/rust-lang/rust/commit/80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e58871d25c9ef4d2edbc331dedcc7f0543eea15", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e58871d25c9ef4d2edbc331dedcc7f0543eea15", "html_url": "https://github.com/rust-lang/rust/commit/1e58871d25c9ef4d2edbc331dedcc7f0543eea15"}, {"sha": "ddbc45673b11f706e94fa17730eaa5c113f224d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddbc45673b11f706e94fa17730eaa5c113f224d7", "html_url": "https://github.com/rust-lang/rust/commit/ddbc45673b11f706e94fa17730eaa5c113f224d7"}], "stats": {"total": 43, "additions": 35, "deletions": 8}, "files": [{"sha": "04bfed12153ec42a3f3e69893fd2a2ffe80a3a0e", "filename": "library/std/build.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e/library%2Fstd%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e/library%2Fstd%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fbuild.rs?ref=80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e", "patch": "@@ -16,6 +16,9 @@ fn main() {\n     } else if target.contains(\"freebsd\") {\n         println!(\"cargo:rustc-link-lib=execinfo\");\n         println!(\"cargo:rustc-link-lib=pthread\");\n+        if env::var(\"RUST_STD_FREEBSD_12_ABI\").is_ok() {\n+            println!(\"cargo:rustc-cfg=freebsd12\");\n+        }\n     } else if target.contains(\"netbsd\") {\n         println!(\"cargo:rustc-link-lib=pthread\");\n         println!(\"cargo:rustc-link-lib=rt\");"}, {"sha": "1eda8690d5d1b0584b4493d6b21a9110a901ad97", "filename": "library/std/src/os/freebsd/fs.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e/library%2Fstd%2Fsrc%2Fos%2Ffreebsd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e/library%2Fstd%2Fsrc%2Fos%2Ffreebsd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Ffreebsd%2Ffs.rs?ref=80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e", "patch": "@@ -74,7 +74,14 @@ pub trait MetadataExt {\n impl MetadataExt for Metadata {\n     #[allow(deprecated)]\n     fn as_raw_stat(&self) -> &raw::stat {\n-        unsafe { &*(self.as_inner().as_inner() as *const libc::stat as *const raw::stat) }\n+        // The methods below use libc::stat, so they work fine when libc is built with FreeBSD 12 ABI.\n+        // This method would just return nonsense.\n+        #[cfg(freebsd12)]\n+        panic!(\"as_raw_stat not supported with FreeBSD 12 ABI\");\n+        #[cfg(not(freebsd12))]\n+        unsafe {\n+            &*(self.as_inner().as_inner() as *const libc::stat as *const raw::stat)\n+        }\n     }\n     fn st_dev(&self) -> u64 {\n         self.as_inner().as_inner().st_dev as u64\n@@ -136,6 +143,11 @@ impl MetadataExt for Metadata {\n     fn st_flags(&self) -> u32 {\n         self.as_inner().as_inner().st_flags as u32\n     }\n+    #[cfg(freebsd12)]\n+    fn st_lspare(&self) -> u32 {\n+        panic!(\"st_lspare not supported with FreeBSD 12 ABI\");\n+    }\n+    #[cfg(not(freebsd12))]\n     fn st_lspare(&self) -> u32 {\n         self.as_inner().as_inner().st_lspare as u32\n     }"}, {"sha": "f1bc3d11d8b770cdb25a00446f864579e78ad894", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e", "patch": "@@ -794,6 +794,7 @@ fn supported_sanitizers(\n         }\n         \"x86_64-apple-darwin\" => darwin_libs(\"osx\", &[\"asan\", \"lsan\", \"tsan\"]),\n         \"x86_64-fuchsia\" => common_libs(\"fuchsia\", \"x86_64\", &[\"asan\"]),\n+        \"x86_64-unknown-freebsd\" => common_libs(\"freebsd\", \"x86_64\", &[\"asan\", \"msan\", \"tsan\"]),\n         \"x86_64-unknown-linux-gnu\" => {\n             common_libs(\"linux\", \"x86_64\", &[\"asan\", \"lsan\", \"msan\", \"tsan\"])\n         }"}, {"sha": "bfc768f9935126d63ab7e15813133e19c5809096", "filename": "src/ci/docker/host-x86_64/dist-x86_64-freebsd/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-freebsd%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-freebsd%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-freebsd%2FDockerfile?ref=80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e", "patch": "@@ -29,5 +29,5 @@ ENV \\\n \n ENV HOSTS=x86_64-unknown-freebsd\n \n-ENV RUST_CONFIGURE_ARGS --enable-extended --enable-profiler --disable-docs\n+ENV RUST_CONFIGURE_ARGS --enable-extended --enable-profiler --enable-sanitizers --disable-docs\n ENV SCRIPT python3 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "bfcf979d1254865292d66958bcb165a9635f4719", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e", "patch": "@@ -822,6 +822,7 @@ fn link_sanitizer_runtime(sess: &Session, linker: &mut dyn Linker, name: &str) {\n         \"aarch64-fuchsia\"\n         | \"aarch64-unknown-linux-gnu\"\n         | \"x86_64-fuchsia\"\n+        | \"x86_64-unknown-freebsd\"\n         | \"x86_64-unknown-linux-gnu\" => {\n             let filename = format!(\"librustc{}_rt.{}.a\", channel, name);\n             let path = default_tlib.join(&filename);"}, {"sha": "66dbe53bac3871c14d006523605f5542b29a0446", "filename": "src/librustc_session/session.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e/src%2Flibrustc_session%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e/src%2Flibrustc_session%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Fsession.rs?ref=80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e", "patch": "@@ -1453,14 +1453,19 @@ fn validate_commandline_args_with_session_available(sess: &Session) {\n         \"aarch64-unknown-linux-gnu\",\n         \"x86_64-apple-darwin\",\n         \"x86_64-fuchsia\",\n+        \"x86_64-unknown-freebsd\",\n         \"x86_64-unknown-linux-gnu\",\n     ];\n     const LSAN_SUPPORTED_TARGETS: &[&str] =\n         &[\"aarch64-unknown-linux-gnu\", \"x86_64-apple-darwin\", \"x86_64-unknown-linux-gnu\"];\n     const MSAN_SUPPORTED_TARGETS: &[&str] =\n-        &[\"aarch64-unknown-linux-gnu\", \"x86_64-unknown-linux-gnu\"];\n-    const TSAN_SUPPORTED_TARGETS: &[&str] =\n-        &[\"aarch64-unknown-linux-gnu\", \"x86_64-apple-darwin\", \"x86_64-unknown-linux-gnu\"];\n+        &[\"aarch64-unknown-linux-gnu\", \"x86_64-unknown-freebsd\", \"x86_64-unknown-linux-gnu\"];\n+    const TSAN_SUPPORTED_TARGETS: &[&str] = &[\n+        \"aarch64-unknown-linux-gnu\",\n+        \"x86_64-apple-darwin\",\n+        \"x86_64-unknown-freebsd\",\n+        \"x86_64-unknown-linux-gnu\",\n+    ];\n \n     // Sanitizers can only be used on some tested platforms.\n     for s in sess.opts.debugging_opts.sanitizer {"}, {"sha": "a776bb0bfe4811678c43954344fbd9f4b0e0dbce", "filename": "src/tools/compiletest/src/util.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs?ref=80fb3f3139c7dee7f211964c6a0b3ccb04b83d5e", "patch": "@@ -87,17 +87,22 @@ pub const ASAN_SUPPORTED_TARGETS: &'static [&'static str] = &[\n     \"aarch64-unknown-linux-gnu\",\n     \"x86_64-apple-darwin\",\n     \"x86_64-fuchsia\",\n+    \"x86_64-unknown-freebsd\",\n     \"x86_64-unknown-linux-gnu\",\n ];\n \n pub const LSAN_SUPPORTED_TARGETS: &'static [&'static str] =\n     &[\"aarch64-unknown-linux-gnu\", \"x86_64-apple-darwin\", \"x86_64-unknown-linux-gnu\"];\n \n pub const MSAN_SUPPORTED_TARGETS: &'static [&'static str] =\n-    &[\"aarch64-unknown-linux-gnu\", \"x86_64-unknown-linux-gnu\"];\n+    &[\"aarch64-unknown-linux-gnu\", \"x86_64-unknown-freebsd\", \"x86_64-unknown-linux-gnu\"];\n \n-pub const TSAN_SUPPORTED_TARGETS: &'static [&'static str] =\n-    &[\"aarch64-unknown-linux-gnu\", \"x86_64-apple-darwin\", \"x86_64-unknown-linux-gnu\"];\n+pub const TSAN_SUPPORTED_TARGETS: &'static [&'static str] = &[\n+    \"aarch64-unknown-linux-gnu\",\n+    \"x86_64-apple-darwin\",\n+    \"x86_64-unknown-freebsd\",\n+    \"x86_64-unknown-linux-gnu\",\n+];\n \n const BIG_ENDIAN: &'static [&'static str] = &[\n     \"armebv7r\","}]}