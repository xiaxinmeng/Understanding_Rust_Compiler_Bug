{"sha": "a98dc9b3e7d9f4f6c5a3ef850aa6a08c28a55ce1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5OGRjOWIzZTdkOWY0ZjZjNWEzZWY4NTBhYTZhMDhjMjhhNTVjZTE=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-03-11T23:55:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-11T23:55:13Z"}, "message": "Rollup merge of #82571 - aDotInTheVoid:reexport-tests, r=CraftSpider\n\nRustdoc Json: Add tests for Reexports, and improve jsondocck\n\nThe two changes are orthognal, so you can land just one if you want, but the improved errors realy helped write the tests.\n\nNotably does not have the case from #80664, but I want to have all the ajacent cases tested before starting work on that to ensure I dont break anything.\n\nImproves #81359\n\ncc ```@CraftSpider```\n\nr? ```@jyn514```\n\n```@rustbot``` modify labels: +A-testsuite +T-rustdoc +A-rustdoc-json", "tree": {"sha": "33938445c709d4060699dbfef033a1fcd0e545a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33938445c709d4060699dbfef033a1fcd0e545a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a98dc9b3e7d9f4f6c5a3ef850aa6a08c28a55ce1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgSq3iCRBK7hj4Ov3rIwAAdHIIAFwcmVIlIRtphtklzJoWXSci\nMPpo6gznTewELfvk6IgBC47maLWVgAeNlmRVZALZLFEwlyYJ/l6nTgdMQqcecezh\nwCeOj+6eIy+ge3RL23+UnpyAkyTg5scdUNBKKPrSLb2lUmLtrreCIh0piIoCZwqD\nLim/r5GpAp+1obxIFamja8eIo1En5XGIBKY6QGgR6meU+y9NcBTFXlMU+SVDtDMA\nj/dR+zkPXESCU/w3SG3PVd/tzvQFnHUuMEgQjAIzKAchDaWPoEjdaY+XvqjUA6mV\nHYlIb9t4WCI/XipyMI26GAwt7QSjMaEZ5T6+P84N8IZgxkWn5KIKIDQKMOaq/4s=\n=fuhM\n-----END PGP SIGNATURE-----\n", "payload": "tree 33938445c709d4060699dbfef033a1fcd0e545a1\nparent 2f0bbc0d1d1ee137d226ea1c6d703e81d5b3660e\nparent 5f24798b9e228438973a8abeee1a2d5ea016f335\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1615506913 +0900\ncommitter GitHub <noreply@github.com> 1615506913 +0900\n\nRollup merge of #82571 - aDotInTheVoid:reexport-tests, r=CraftSpider\n\nRustdoc Json: Add tests for Reexports, and improve jsondocck\n\nThe two changes are orthognal, so you can land just one if you want, but the improved errors realy helped write the tests.\n\nNotably does not have the case from #80664, but I want to have all the ajacent cases tested before starting work on that to ensure I dont break anything.\n\nImproves #81359\n\ncc ```@CraftSpider```\n\nr? ```@jyn514```\n\n```@rustbot``` modify labels: +A-testsuite +T-rustdoc +A-rustdoc-json\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a98dc9b3e7d9f4f6c5a3ef850aa6a08c28a55ce1", "html_url": "https://github.com/rust-lang/rust/commit/a98dc9b3e7d9f4f6c5a3ef850aa6a08c28a55ce1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a98dc9b3e7d9f4f6c5a3ef850aa6a08c28a55ce1/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f0bbc0d1d1ee137d226ea1c6d703e81d5b3660e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f0bbc0d1d1ee137d226ea1c6d703e81d5b3660e", "html_url": "https://github.com/rust-lang/rust/commit/2f0bbc0d1d1ee137d226ea1c6d703e81d5b3660e"}, {"sha": "5f24798b9e228438973a8abeee1a2d5ea016f335", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f24798b9e228438973a8abeee1a2d5ea016f335", "html_url": "https://github.com/rust-lang/rust/commit/5f24798b9e228438973a8abeee1a2d5ea016f335"}], "stats": {"total": 116, "additions": 114, "deletions": 2}, "files": [{"sha": "831c185f6b136d1f45735d14017cc1b0a3f63396", "filename": "src/test/rustdoc-json/reexport/glob_extern.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a98dc9b3e7d9f4f6c5a3ef850aa6a08c28a55ce1/src%2Ftest%2Frustdoc-json%2Freexport%2Fglob_extern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a98dc9b3e7d9f4f6c5a3ef850aa6a08c28a55ce1/src%2Ftest%2Frustdoc-json%2Freexport%2Fglob_extern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Freexport%2Fglob_extern.rs?ref=a98dc9b3e7d9f4f6c5a3ef850aa6a08c28a55ce1", "patch": "@@ -0,0 +1,17 @@\n+// edition:2018\n+\n+#![no_core]\n+#![feature(no_core)]\n+\n+// @!has glob_extern.json \"$.index[*][?(@.name=='mod1')]\"\n+mod mod1 {\n+    extern \"C\" {\n+        // @set public_fn_id = - \"$.index[*][?(@.name=='public_fn')].id\"\n+        pub fn public_fn();\n+        // @!has - \"$.index[*][?(@.name=='private_fn')]\"\n+        fn private_fn();\n+    }\n+}\n+\n+// @has - \"$.index[*][?(@.name=='glob_extern')].inner.items[*]\" $public_fn_id\n+pub use mod1::*;"}, {"sha": "e907de9236776fc209d3be17525e8913f5279b89", "filename": "src/test/rustdoc-json/reexport/glob_private.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/a98dc9b3e7d9f4f6c5a3ef850aa6a08c28a55ce1/src%2Ftest%2Frustdoc-json%2Freexport%2Fglob_private.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a98dc9b3e7d9f4f6c5a3ef850aa6a08c28a55ce1/src%2Ftest%2Frustdoc-json%2Freexport%2Fglob_private.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Freexport%2Fglob_private.rs?ref=a98dc9b3e7d9f4f6c5a3ef850aa6a08c28a55ce1", "patch": "@@ -0,0 +1,27 @@\n+// edition:2018\n+\n+#![no_core]\n+#![feature(no_core)]\n+\n+// @!has glob_private.json \"$.index[*][?(@.name=='mod1')]\"\n+mod mod1 {\n+    // @!has - \"$.index[*][?(@.name=='mod2')]\"\n+    mod mod2 {\n+        // @set m2pub_id = - \"$.index[*][?(@.name=='Mod2Public')].id\"\n+        pub struct Mod2Public;\n+\n+        // @!has - \"$.index[*][?(@.name=='Mod2Private')]\"\n+        struct Mod2Private;\n+    }\n+    pub use self::mod2::*;\n+\n+    // @set m1pub_id = - \"$.index[*][?(@.name=='Mod1Public')].id\"\n+    pub struct Mod1Public;\n+\n+    // @!has - \"$.index[*][?(@.name=='Mod1Private')]\"\n+    struct Mod1Private;\n+}\n+pub use mod1::*;\n+\n+// @has - \"$.index[*][?(@.name=='glob_private')].inner.items[*]\" $m2pub_id\n+// @has - \"$.index[*][?(@.name=='glob_private')].inner.items[*]\" $m1pub_id"}, {"sha": "8c2d7200d0c01fa050f22e66918b59aeb194fe6d", "filename": "src/test/rustdoc-json/reexport/rename_public.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a98dc9b3e7d9f4f6c5a3ef850aa6a08c28a55ce1/src%2Ftest%2Frustdoc-json%2Freexport%2Frename_public.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a98dc9b3e7d9f4f6c5a3ef850aa6a08c28a55ce1/src%2Ftest%2Frustdoc-json%2Freexport%2Frename_public.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Freexport%2Frename_public.rs?ref=a98dc9b3e7d9f4f6c5a3ef850aa6a08c28a55ce1", "patch": "@@ -0,0 +1,17 @@\n+// edition:2018\n+\n+#![no_core]\n+#![feature(no_core)]\n+\n+// @set inner_id = rename_public.json \"$.index[*][?(@.name=='inner')].id\"\n+// @has - \"$.index[*][?(@.name=='rename_public')].inner.items[*]\" $inner_id\n+pub mod inner {\n+    // @set public_id = - \"$.index[*][?(@.name=='Public')].id\"\n+    // @has - \"$.index[*][?(@.name=='inner')].inner.items[*]\" $public_id\n+    pub struct Public;\n+}\n+// @set import_id = - \"$.index[*][?(@.inner.name=='NewName')].id\"\n+// @!has - \"$.index[*][?(@.inner.name=='Public')]\"\n+// @has - \"$.index[*][?(@.name=='rename_public')].inner.items[*]\" $import_id\n+// @is - \"$.index[*][?(@.inner.name=='NewName')].inner.span\" \\\"inner::Public\\\"\n+pub use inner::Public as NewName;"}, {"sha": "658b121e6ce97d46e1983b8e3ecfbe86272a7c47", "filename": "src/test/rustdoc-json/reexport/simple_private.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a98dc9b3e7d9f4f6c5a3ef850aa6a08c28a55ce1/src%2Ftest%2Frustdoc-json%2Freexport%2Fsimple_private.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a98dc9b3e7d9f4f6c5a3ef850aa6a08c28a55ce1/src%2Ftest%2Frustdoc-json%2Freexport%2Fsimple_private.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Freexport%2Fsimple_private.rs?ref=a98dc9b3e7d9f4f6c5a3ef850aa6a08c28a55ce1", "patch": "@@ -0,0 +1,13 @@\n+// edition:2018\n+\n+#![no_core]\n+#![feature(no_core)]\n+\n+// @!has simple_private.json \"$.index[*][?(@.name=='inner')]\"\n+mod inner {\n+    // @set pub_id = - \"$.index[*][?(@.name=='Public')].id\"\n+    pub struct Public;\n+}\n+\n+// @has - \"$.index[*][?(@.name=='simple_private')].inner.items[*]\" $pub_id\n+pub use inner::Public;"}, {"sha": "0c97a2e7b40a212a32efcbe7d52a1b6e0e8a671f", "filename": "src/test/rustdoc-json/reexport/simple_public.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a98dc9b3e7d9f4f6c5a3ef850aa6a08c28a55ce1/src%2Ftest%2Frustdoc-json%2Freexport%2Fsimple_public.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a98dc9b3e7d9f4f6c5a3ef850aa6a08c28a55ce1/src%2Ftest%2Frustdoc-json%2Freexport%2Fsimple_public.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Freexport%2Fsimple_public.rs?ref=a98dc9b3e7d9f4f6c5a3ef850aa6a08c28a55ce1", "patch": "@@ -0,0 +1,18 @@\n+// edition:2018\n+\n+#![no_core]\n+#![feature(no_core)]\n+\n+// @set inner_id = simple_public.json \"$.index[*][?(@.name=='inner')].id\"\n+// @has - \"$.index[*][?(@.name=='simple_public')].inner.items[*]\" $inner_id\n+pub mod inner {\n+\n+    // @set public_id = - \"$.index[*][?(@.name=='Public')].id\"\n+    // @has - \"$.index[*][?(@.name=='inner')].inner.items[*]\" $public_id\n+    pub struct Public;\n+}\n+\n+// @set import_id = - \"$.index[*][?(@.inner.name=='Public')].id\"\n+// @has - \"$.index[*][?(@.name=='simple_public')].inner.items[*]\" $import_id\n+// @is - \"$.index[*][?(@.inner.name=='Public')].inner.span\" \\\"inner::Public\\\"\n+pub use inner::Public;"}, {"sha": "bcb3f6922efaabe02ca480b930a439e8b0a75cb3", "filename": "src/tools/jsondocck/src/main.rs", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a98dc9b3e7d9f4f6c5a3ef850aa6a08c28a55ce1/src%2Ftools%2Fjsondocck%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a98dc9b3e7d9f4f6c5a3ef850aa6a08c28a55ce1/src%2Ftools%2Fjsondocck%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fjsondocck%2Fsrc%2Fmain.rs?ref=a98dc9b3e7d9f4f6c5a3ef850aa6a08c28a55ce1", "patch": "@@ -205,7 +205,21 @@ fn check_command(command: Command, cache: &mut Cache) -> Result<(), CkError> {\n                     let val = cache.get_value(&command.args[0])?;\n                     let results = select(&val, &command.args[1]).unwrap();\n                     let pat = string_to_value(&command.args[2], cache);\n-                    results.contains(&pat.as_ref())\n+                    let has = results.contains(&pat.as_ref());\n+                    // Give better error for when @has check fails\n+                    if !command.negated && !has {\n+                        return Err(CkError::FailedCheck(\n+                            format!(\n+                                \"{} matched to {:?} but didn't have {:?}\",\n+                                &command.args[1],\n+                                results,\n+                                pat.as_ref()\n+                            ),\n+                            command,\n+                        ));\n+                    } else {\n+                        has\n+                    }\n                 }\n                 _ => unreachable!(),\n             }\n@@ -233,7 +247,13 @@ fn check_command(command: Command, cache: &mut Cache) -> Result<(), CkError> {\n             assert_eq!(command.args[1], \"=\", \"Expected an `=`\");\n             let val = cache.get_value(&command.args[2])?;\n             let results = select(&val, &command.args[3]).unwrap();\n-            assert_eq!(results.len(), 1);\n+            assert_eq!(\n+                results.len(),\n+                1,\n+                \"Didn't get 1 result for `{}`: got {:?}\",\n+                command.args[3],\n+                results\n+            );\n             match results.len() {\n                 0 => false,\n                 1 => {"}]}