{"sha": "94a084a4b45afe0bb8c1b1206184d4d0db4f4ec0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0YTA4NGE0YjQ1YWZlMGJiOGMxYjEyMDYxODRkNGQwZGI0ZjRlYzA=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-08-20T01:28:31Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-08-21T14:50:32Z"}, "message": "Fix crash(!) by using the *Rust fn type* not the extern fn type\n\ncc #3678", "tree": {"sha": "a5c924670718d8f367c38b4c60d9232daf50d993", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5c924670718d8f367c38b4c60d9232daf50d993"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94a084a4b45afe0bb8c1b1206184d4d0db4f4ec0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94a084a4b45afe0bb8c1b1206184d4d0db4f4ec0", "html_url": "https://github.com/rust-lang/rust/commit/94a084a4b45afe0bb8c1b1206184d4d0db4f4ec0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94a084a4b45afe0bb8c1b1206184d4d0db4f4ec0/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c75e926126435c3ea65b027ea9669213cfdae33", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c75e926126435c3ea65b027ea9669213cfdae33", "html_url": "https://github.com/rust-lang/rust/commit/4c75e926126435c3ea65b027ea9669213cfdae33"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "bd4e50e01b5d0e045f29c579664aa8939a82fe0e", "filename": "src/librustc/middle/trans/foreign.rs", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/94a084a4b45afe0bb8c1b1206184d4d0db4f4ec0/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94a084a4b45afe0bb8c1b1206184d4d0db4f4ec0/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs?ref=94a084a4b45afe0bb8c1b1206184d4d0db4f4ec0", "patch": "@@ -21,6 +21,7 @@ use middle::trans::cabi;\n use middle::trans::build::*;\n use middle::trans::builder::noname;\n use middle::trans::common::*;\n+use middle::trans::llrepr::LlvmRepr;\n use middle::trans::type_of::*;\n use middle::trans::type_of;\n use middle::ty;\n@@ -399,7 +400,29 @@ pub fn trans_rust_fn_with_foreign_abi(ccx: @mut CrateContext,\n             ccx, vec::append_one((*path).clone(), ast_map::path_name(\n                 special_idents::clownshoe_abi\n             )));\n-        let llty = type_of_fn_from_ty(ccx, t);\n+\n+        // Compute the LLVM type that the function would have if it\n+        // were just a normal Rust function. This will be the type of\n+        // the wrappee fn.\n+        let llty = match ty::get(t).sty {\n+            ty::ty_bare_fn(ref f) => {\n+                assert!(!f.abis.is_rust() && !f.abis.is_intrinsic());\n+                type_of_rust_fn(ccx, f.sig.inputs, f.sig.output)\n+            }\n+            _ => {\n+                ccx.sess.bug(fmt!(\"build_rust_fn: extern fn %s has ty %s, \\\n+                                  expected a bare fn ty\",\n+                                  path.repr(tcx),\n+                                  t.repr(tcx)));\n+            }\n+        };\n+\n+        debug!(\"build_rust_fn: path=%s id=%? t=%s llty=%s\",\n+               path.repr(tcx),\n+               id,\n+               t.repr(tcx),\n+               llty.llrepr(ccx));\n+\n         let llfndecl = base::decl_internal_cdecl_fn(ccx.llmod, ps, llty);\n         base::trans_fn(ccx,\n                        (*path).clone(),"}]}