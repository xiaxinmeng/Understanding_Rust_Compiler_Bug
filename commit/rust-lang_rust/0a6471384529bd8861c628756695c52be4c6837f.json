{"sha": "0a6471384529bd8861c628756695c52be4c6837f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhNjQ3MTM4NDUyOWJkODg2MWM2Mjg3NTY2OTVjNTJiZTRjNjgzN2Y=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-17T16:26:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-17T16:26:05Z"}, "message": "Merge #8067\n\n8067: Check whether cursor is on and not between intra doc links in goto_definition r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "de13e9e2b264161d9b695a746a794cfa56a0a515", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de13e9e2b264161d9b695a746a794cfa56a0a515"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a6471384529bd8861c628756695c52be4c6837f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgUi2dCRBK7hj4Ov3rIwAAdHIIAF7CSZJI+XYV11Kso7ClLkyE\nhPn62Hd9JTcVvQqVvhJKlGDDo27gDaFwuprSoUxvFFQ38mn4wLhcWadigOo0v/pt\n4buIQ7w6kFlvGlxOGXI2bidb23tE1TNPV3AMk/O+k45kHjqBkWnoWcd44CpEn1WY\n6Q9mS0hPfwIMsDuDqfW9KmVokrOMd0IBZ5tG8+9pakiR6tp/hlYjE84DYYe4D6q1\nZueAh8bRhccaB42D7ODdHeoW7t11lhk/WXfkMNZAscoaWvxJSedR5Sl+X8DWZ2LB\nnifoShI/Qjm9gBJO8yiohKTHu+3AotlVL5dhIizkRXHkEoQnpqLs2vJP5hlmmKM=\n=bwdp\n-----END PGP SIGNATURE-----\n", "payload": "tree de13e9e2b264161d9b695a746a794cfa56a0a515\nparent edf11480ceae1ef77d7084604011c0ef6f692c72\nparent 5481c78f32cdf4fd61dab239d7c4675929fd2ba8\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1615998365 +0000\ncommitter GitHub <noreply@github.com> 1615998365 +0000\n\nMerge #8067\n\n8067: Check whether cursor is on and not between intra doc links in goto_definition r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a6471384529bd8861c628756695c52be4c6837f", "html_url": "https://github.com/rust-lang/rust/commit/0a6471384529bd8861c628756695c52be4c6837f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a6471384529bd8861c628756695c52be4c6837f/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edf11480ceae1ef77d7084604011c0ef6f692c72", "url": "https://api.github.com/repos/rust-lang/rust/commits/edf11480ceae1ef77d7084604011c0ef6f692c72", "html_url": "https://github.com/rust-lang/rust/commit/edf11480ceae1ef77d7084604011c0ef6f692c72"}, {"sha": "5481c78f32cdf4fd61dab239d7c4675929fd2ba8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5481c78f32cdf4fd61dab239d7c4675929fd2ba8", "html_url": "https://github.com/rust-lang/rust/commit/5481c78f32cdf4fd61dab239d7c4675929fd2ba8"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "598b47e417c9e5d0a4cabaf3ff6f280cee978a90", "filename": "crates/ide/src/goto_definition.rs", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0a6471384529bd8861c628756695c52be4c6837f/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a6471384529bd8861c628756695c52be4c6837f/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_definition.rs?ref=0a6471384529bd8861c628756695c52be4c6837f", "patch": "@@ -1,11 +1,14 @@\n+use std::ops::Range;\n+\n use either::Either;\n use hir::{HasAttrs, ModuleDef, Semantics};\n use ide_db::{\n     defs::{Definition, NameClass, NameRefClass},\n     RootDatabase,\n };\n use syntax::{\n-    ast, match_ast, AstNode, AstToken, SyntaxKind::*, SyntaxToken, TextSize, TokenAtOffset, T,\n+    ast, match_ast, AstNode, AstToken, SyntaxKind::*, SyntaxToken, TextRange, TextSize,\n+    TokenAtOffset, T,\n };\n \n use crate::{\n@@ -92,15 +95,18 @@ fn extract_positioned_link_from_comment(\n     position: FilePosition,\n     comment: &ast::Comment,\n ) -> Option<(String, Option<hir::Namespace>)> {\n-    let comment_range = comment.syntax().text_range();\n     let doc_comment = comment.doc_comment()?;\n+    let comment_start =\n+        comment.syntax().text_range().start() + TextSize::from(comment.prefix().len() as u32);\n     let def_links = extract_definitions_from_markdown(doc_comment);\n-    let start = comment_range.start() + TextSize::from(comment.prefix().len() as u32);\n-    let (def_link, ns, _) = def_links.iter().min_by_key(|(_, _, def_link_range)| {\n-        let matched_position = start + TextSize::from(def_link_range.start as u32);\n-        position.offset.checked_sub(matched_position).unwrap_or_else(|| comment_range.end())\n+    let (def_link, ns, _) = def_links.into_iter().find(|&(_, _, Range { start, end })| {\n+        TextRange::at(\n+            comment_start + TextSize::from(start as u32),\n+            TextSize::from((end - start) as u32),\n+        )\n+        .contains(position.offset)\n     })?;\n-    Some((def_link.to_string(), *ns))\n+    Some((def_link, ns))\n }\n \n fn pick_best(tokens: TokenAtOffset<SyntaxToken>) -> Option<SyntaxToken> {\n@@ -1134,7 +1140,7 @@ fn foo<'foo>(_: &'foo ()) {\n     fn goto_def_for_intra_doc_link_same_file() {\n         check(\n             r#\"\n-/// Blah, [`bar`](bar) .. [`foo`](foo)$0 has [`bar`](bar)\n+/// Blah, [`bar`](bar) .. [`foo`](foo$0) has [`bar`](bar)\n pub fn bar() { }\n \n /// You might want to see [`std::fs::read()`] too."}]}