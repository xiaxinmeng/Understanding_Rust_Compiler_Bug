{"sha": "15b7a087471533086df538bc1a21b475f3ef032e", "node_id": "C_kwDOAAsO6NoAKDE1YjdhMDg3NDcxNTMzMDg2ZGY1MzhiYzFhMjFiNDc1ZjNlZjAzMmU", "commit": {"author": {"name": "Mads Marquart", "email": "mads@marquart.dk", "date": "2022-07-30T03:11:00Z"}, "committer": {"name": "Mads Marquart", "email": "mads@marquart.dk", "date": "2022-07-30T03:14:54Z"}, "message": "Fix unwinding when debug assertions are enabled\n\nThis came up on armv7-apple-ios when using -Zbuild-std", "tree": {"sha": "e31c03b766ec7e3556f2a32dd2715acf1437b8f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e31c03b766ec7e3556f2a32dd2715acf1437b8f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15b7a087471533086df538bc1a21b475f3ef032e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15b7a087471533086df538bc1a21b475f3ef032e", "html_url": "https://github.com/rust-lang/rust/commit/15b7a087471533086df538bc1a21b475f3ef032e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15b7a087471533086df538bc1a21b475f3ef032e/comments", "author": {"login": "madsmtm", "id": 10577181, "node_id": "MDQ6VXNlcjEwNTc3MTgx", "avatar_url": "https://avatars.githubusercontent.com/u/10577181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madsmtm", "html_url": "https://github.com/madsmtm", "followers_url": "https://api.github.com/users/madsmtm/followers", "following_url": "https://api.github.com/users/madsmtm/following{/other_user}", "gists_url": "https://api.github.com/users/madsmtm/gists{/gist_id}", "starred_url": "https://api.github.com/users/madsmtm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madsmtm/subscriptions", "organizations_url": "https://api.github.com/users/madsmtm/orgs", "repos_url": "https://api.github.com/users/madsmtm/repos", "events_url": "https://api.github.com/users/madsmtm/events{/privacy}", "received_events_url": "https://api.github.com/users/madsmtm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "madsmtm", "id": 10577181, "node_id": "MDQ6VXNlcjEwNTc3MTgx", "avatar_url": "https://avatars.githubusercontent.com/u/10577181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madsmtm", "html_url": "https://github.com/madsmtm", "followers_url": "https://api.github.com/users/madsmtm/followers", "following_url": "https://api.github.com/users/madsmtm/following{/other_user}", "gists_url": "https://api.github.com/users/madsmtm/gists{/gist_id}", "starred_url": "https://api.github.com/users/madsmtm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madsmtm/subscriptions", "organizations_url": "https://api.github.com/users/madsmtm/orgs", "repos_url": "https://api.github.com/users/madsmtm/repos", "events_url": "https://api.github.com/users/madsmtm/events{/privacy}", "received_events_url": "https://api.github.com/users/madsmtm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "211637d0802a1c17d41b414e091e9a8691b26068", "url": "https://api.github.com/repos/rust-lang/rust/commits/211637d0802a1c17d41b414e091e9a8691b26068", "html_url": "https://github.com/rust-lang/rust/commit/211637d0802a1c17d41b414e091e9a8691b26068"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "a596592311a640c000f8116fee3eece7e02f30f0", "filename": "library/panic_unwind/src/gcc.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/15b7a087471533086df538bc1a21b475f3ef032e/library%2Fpanic_unwind%2Fsrc%2Fgcc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15b7a087471533086df538bc1a21b475f3ef032e/library%2Fpanic_unwind%2Fsrc%2Fgcc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fpanic_unwind%2Fsrc%2Fgcc.rs?ref=15b7a087471533086df538bc1a21b475f3ef032e", "patch": "@@ -306,7 +306,9 @@ unsafe fn find_eh_action(context: *mut uw::_Unwind_Context) -> Result<EHAction,\n     let eh_context = EHContext {\n         // The return address points 1 byte past the call instruction,\n         // which could be in the next IP range in LSDA range table.\n-        ip: if ip_before_instr != 0 { ip } else { ip - 1 },\n+        //\n+        // `ip = -1` has special meaning, so use wrapping sub to allow for that\n+        ip: if ip_before_instr != 0 { ip } else { ip.wrapping_sub(1) },\n         func_start: uw::_Unwind_GetRegionStart(context),\n         get_text_start: &|| uw::_Unwind_GetTextRelBase(context),\n         get_data_start: &|| uw::_Unwind_GetDataRelBase(context),"}]}