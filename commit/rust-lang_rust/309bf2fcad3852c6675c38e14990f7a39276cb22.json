{"sha": "309bf2fcad3852c6675c38e14990f7a39276cb22", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwOWJmMmZjYWQzODUyYzY2NzVjMzhlMTQ5OTBmN2EzOTI3NmNiMjI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-10T12:38:11Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-10T18:24:42Z"}, "message": "lowering: extract lower_expr_range_closed", "tree": {"sha": "e9e110dd036cc9bb123278238209a9146c27cd15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9e110dd036cc9bb123278238209a9146c27cd15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/309bf2fcad3852c6675c38e14990f7a39276cb22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/309bf2fcad3852c6675c38e14990f7a39276cb22", "html_url": "https://github.com/rust-lang/rust/commit/309bf2fcad3852c6675c38e14990f7a39276cb22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/309bf2fcad3852c6675c38e14990f7a39276cb22/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c789e7a5cc156d6ceccab6581229c0433d284568", "url": "https://api.github.com/repos/rust-lang/rust/commits/c789e7a5cc156d6ceccab6581229c0433d284568", "html_url": "https://github.com/rust-lang/rust/commit/c789e7a5cc156d6ceccab6581229c0433d284568"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "6ae39d192c36a2a474219244916fc0ef787b372e", "filename": "src/librustc/hir/lowering/expr.rs", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/309bf2fcad3852c6675c38e14990f7a39276cb22/src%2Flibrustc%2Fhir%2Flowering%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/309bf2fcad3852c6675c38e14990f7a39276cb22/src%2Flibrustc%2Fhir%2Flowering%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering%2Fexpr.rs?ref=309bf2fcad3852c6675c38e14990f7a39276cb22", "patch": "@@ -362,18 +362,8 @@ impl LoweringContext<'_> {\n             ExprKind::Index(ref el, ref er) => {\n                 hir::ExprKind::Index(P(self.lower_expr(el)), P(self.lower_expr(er)))\n             }\n-            // Desugar `<start>..=<end>` into `std::ops::RangeInclusive::new(<start>, <end>)`.\n             ExprKind::Range(Some(ref e1), Some(ref e2), RangeLimits::Closed) => {\n-                let id = self.next_id();\n-                let e1 = self.lower_expr(e1);\n-                let e2 = self.lower_expr(e2);\n-                self.expr_call_std_assoc_fn(\n-                    id,\n-                    e.span,\n-                    &[sym::ops, sym::RangeInclusive],\n-                    \"new\",\n-                    hir_vec![e1, e2],\n-                )\n+                self.lower_expr_range_closed(e.span, e1, e2)\n             }\n             ExprKind::Range(ref e1, ref e2, lims) => {\n                 self.lower_expr_range(e.span, e1.as_deref(), e2.as_deref(), lims)\n@@ -459,6 +449,20 @@ impl LoweringContext<'_> {\n         }\n     }\n \n+    /// Desugar `<start>..=<end>` into `std::ops::RangeInclusive::new(<start>, <end>)`.\n+    fn lower_expr_range_closed(&mut self, span: Span, e1: &Expr, e2: &Expr) -> hir::ExprKind {\n+        let id = self.next_id();\n+        let e1 = self.lower_expr(e1);\n+        let e2 = self.lower_expr(e2);\n+        self.expr_call_std_assoc_fn(\n+            id,\n+            span,\n+            &[sym::ops, sym::RangeInclusive],\n+            \"new\",\n+            hir_vec![e1, e2],\n+        )\n+    }\n+\n     fn lower_expr_range(\n         &mut self,\n         span: Span,"}]}