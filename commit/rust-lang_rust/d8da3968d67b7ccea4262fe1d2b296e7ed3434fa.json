{"sha": "d8da3968d67b7ccea4262fe1d2b296e7ed3434fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4ZGEzOTY4ZDY3YjdjY2VhNDI2MmZlMWQyYjI5NmU3ZWQzNDM0ZmE=", "commit": {"author": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-01-29T01:43:55Z"}, "committer": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-01-29T01:43:55Z"}, "message": "Change function name, comments, and error message", "tree": {"sha": "30fbeb6d51942606de2d73e0e3aac263fbea1837", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30fbeb6d51942606de2d73e0e3aac263fbea1837"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8da3968d67b7ccea4262fe1d2b296e7ed3434fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8da3968d67b7ccea4262fe1d2b296e7ed3434fa", "html_url": "https://github.com/rust-lang/rust/commit/d8da3968d67b7ccea4262fe1d2b296e7ed3434fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8da3968d67b7ccea4262fe1d2b296e7ed3434fa/comments", "author": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "committer": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90f3aae2dead72d502ec4e25a659efb159186f19", "url": "https://api.github.com/repos/rust-lang/rust/commits/90f3aae2dead72d502ec4e25a659efb159186f19", "html_url": "https://github.com/rust-lang/rust/commit/90f3aae2dead72d502ec4e25a659efb159186f19"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "c5017dc85bbd317f49986a2068f7bd59b356abef", "filename": "src/shims/fs.rs", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d8da3968d67b7ccea4262fe1d2b296e7ed3434fa/src%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8da3968d67b7ccea4262fe1d2b296e7ed3434fa/src%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ffs.rs?ref=d8da3968d67b7ccea4262fe1d2b296e7ed3434fa", "patch": "@@ -347,7 +347,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             Some(metadata) => metadata,\n             None => return Ok(-1),\n         };\n-        stat_write_buf(this, metadata, buf_op)\n+        stat_macos_write_buf(this, metadata, buf_op)\n     }\n \n     fn stat_or_lstat(\n@@ -369,7 +369,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             Some(metadata) => metadata,\n             None => return Ok(-1),\n         };\n-        stat_write_buf(this, metadata, buf_op)\n+        stat_macos_write_buf(this, metadata, buf_op)\n     }\n \n     fn statx(\n@@ -427,17 +427,23 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             this.read_scalar(dirfd_op)?.to_machine_isize(&*this.tcx)?.try_into().map_err(|e| {\n                 err_unsup_format!(\"Failed to convert pointer sized operand to integer: {}\", e)\n             })?;\n-        // we only support interpreting `path` as an absolute directory or as a directory relative\n-        // to `dirfd` when the latter is `AT_FDCWD`. The behavior of `statx` with a relative path\n-        // and a directory file descriptor other than `AT_FDCWD` is specified but it cannot be\n-        // tested from `libstd`. If you found this error, please open an issue reporting it.\n+        // We only support:\n+        // * interpreting `path` as an absolute directory,\n+        // * interpreting `path` as a path relative to `dirfd` when the latter is `AT_FDCWD`, or\n+        // * interpreting `dirfd` as any file descriptor when `path` is empty and AT_EMPTY_PATH is\n+        // set.\n+        // The behavior of `statx` with a relative path and a directory file descriptor other than\n+        // `AT_FDCWD` is specified but it cannot be tested from `libstd`. If you found this error,\n+        // please open an issue reporting it.\n         if !(\n             path.is_absolute() ||\n             dirfd == this.eval_libc_i32(\"AT_FDCWD\")? ||\n             (path.as_os_str().is_empty() && empty_path_flag)\n         ) {\n             throw_unsup_format!(\n-                \"Using statx with a relative path and a file descriptor different from `AT_FDCWD` is not supported\"\n+                \"Using statx is only supported with absolute paths, relative paths with the file \\\n+                descriptor `AT_FDCWD`, and empty paths with the `AT_EMPTY_PATH` flag set and any \\\n+                file descriptor\"\n             )\n         }\n \n@@ -631,7 +637,7 @@ impl FileMetadata {\n     }\n }\n \n-fn stat_write_buf<'tcx, 'mir>(\n+fn stat_macos_write_buf<'tcx, 'mir>(\n     ecx: &mut MiriEvalContext<'mir, 'tcx>,\n     metadata: FileMetadata,\n     buf_op: OpTy<'tcx, Tag>,"}]}