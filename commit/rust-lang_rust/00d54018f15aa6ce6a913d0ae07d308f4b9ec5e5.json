{"sha": "00d54018f15aa6ce6a913d0ae07d308f4b9ec5e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwZDU0MDE4ZjE1YWE2Y2U2YTkxM2QwYWUwN2QzMDhmNGI5ZWM1ZTU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-08T06:29:09Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-08T16:37:01Z"}, "message": "Cleanup decoding and crate searching", "tree": {"sha": "11607d7135f7869f430dca471e8250aa60f29c04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11607d7135f7869f430dca471e8250aa60f29c04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00d54018f15aa6ce6a913d0ae07d308f4b9ec5e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00d54018f15aa6ce6a913d0ae07d308f4b9ec5e5", "html_url": "https://github.com/rust-lang/rust/commit/00d54018f15aa6ce6a913d0ae07d308f4b9ec5e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00d54018f15aa6ce6a913d0ae07d308f4b9ec5e5/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06391dda027ee656f8e96a4eeefe9651fb233f86", "url": "https://api.github.com/repos/rust-lang/rust/commits/06391dda027ee656f8e96a4eeefe9651fb233f86", "html_url": "https://github.com/rust-lang/rust/commit/06391dda027ee656f8e96a4eeefe9651fb233f86"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "6de7d7244fdc3e52dbb921e0a0d1465502c99c4a", "filename": "src/comp/metadata/csearch.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00d54018f15aa6ce6a913d0ae07d308f4b9ec5e5/src%2Fcomp%2Fmetadata%2Fcsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00d54018f15aa6ce6a913d0ae07d308f4b9ec5e5/src%2Fcomp%2Fmetadata%2Fcsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fcsearch.rs?ref=00d54018f15aa6ce6a913d0ae07d308f4b9ec5e5", "patch": "@@ -1,3 +1,5 @@\n+// Searching for information from the cstore\n+\n import syntax::ast;\n import middle::ty;\n import std::io;"}, {"sha": "30d016b2cf17890814ca8740eec23f1d2cb663d7", "filename": "src/comp/metadata/decoder.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/00d54018f15aa6ce6a913d0ae07d308f4b9ec5e5/src%2Fcomp%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00d54018f15aa6ce6a913d0ae07d308f4b9ec5e5/src%2Fcomp%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fdecoder.rs?ref=00d54018f15aa6ce6a913d0ae07d308f4b9ec5e5", "patch": "@@ -1,4 +1,4 @@\n-// Metadata decoding\n+// Decoding metadata from a single crate's metadata\n \n import std::ebml;\n import std::ivec;\n@@ -85,14 +85,21 @@ fn variant_tag_id(&ebml::doc d) -> ast::def_id {\n fn item_type(&ebml::doc item, ast::crate_num this_cnum,\n              ty::ctxt tcx) -> ty::t {\n     fn parse_external_def_id(ast::crate_num this_cnum, str s) -> ast::def_id {\n-        // FIXME: This is completely wrong when linking against a crate\n-        // that, in turn, links against another crate. We need a mapping\n-        // from crate ID to crate \"meta\" attributes as part of the crate\n-        // metadata:\n-\n         auto buf = str::bytes(s);\n         auto external_def_id = parse_def_id(buf);\n-        ret tup(this_cnum, external_def_id._1);\n+\n+        // This item was defined in the crate we're searching if it's has the\n+        // local crate number, otherwise we need to search a different crate\n+        if (external_def_id._0 == ast::local_crate) {\n+            ret tup(this_cnum, external_def_id._1);\n+        } else {\n+            // FIXME: This is completely wrong when linking against a crate\n+            // that, in turn, links against another crate. We need a mapping\n+            // from crate ID to crate \"meta\" attributes as part of the crate\n+            // metadata:\n+            fail \"trying to load type info from a crate that is \\\n+                  defined in a different crate\";\n+        }\n     }\n     auto tp = ebml::get_doc(item, tag_items_data_item_type);\n     ret parse_ty_data(item.data, this_cnum, tp.start, tp.end - tp.start,"}]}