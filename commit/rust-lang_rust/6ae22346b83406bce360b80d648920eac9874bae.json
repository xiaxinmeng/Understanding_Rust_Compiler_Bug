{"sha": "6ae22346b83406bce360b80d648920eac9874bae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhZTIyMzQ2YjgzNDA2YmNlMzYwYjgwZDY0ODkyMGVhYzk4NzRiYWU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-03-15T14:35:35Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-03-22T02:18:56Z"}, "message": "appveyor: Use Ninja to build LLVM on MinGW\n\nI have a suspicion that MinGW's make is the cause of #40546 rather than anything\nelse, but that's purely a suspicion without any facts to back it up. In any case\nwe'll eventually be moving the MSVC build over to Ninja in order to leverage\nsccache regardless, so this commit simply jumpstarts that process by downloading\nNinja for use by MinGW anyway.\n\nI'm not sure if this closes #40546 for real, but this is my current best shot at\nclosing it out, so...\n\nCloses #40546", "tree": {"sha": "c1df9bbdd5a45f199fadd3948c0f315cac08116c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1df9bbdd5a45f199fadd3948c0f315cac08116c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ae22346b83406bce360b80d648920eac9874bae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ae22346b83406bce360b80d648920eac9874bae", "html_url": "https://github.com/rust-lang/rust/commit/6ae22346b83406bce360b80d648920eac9874bae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ae22346b83406bce360b80d648920eac9874bae/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cab4bff3de1a61472f3c2e7752ef54b87344d1c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/cab4bff3de1a61472f3c2e7752ef54b87344d1c9", "html_url": "https://github.com/rust-lang/rust/commit/cab4bff3de1a61472f3c2e7752ef54b87344d1c9"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "0e7ebf12a2a91ad46964477afcdaee128ae893c0", "filename": "appveyor.yml", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6ae22346b83406bce360b80d648920eac9874bae/appveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/6ae22346b83406bce360b80d648920eac9874bae/appveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/appveyor.yml?ref=6ae22346b83406bce360b80d648920eac9874bae", "patch": "@@ -43,14 +43,14 @@ environment:\n   # *not* use debug assertions and llvm assertions. This is because they take\n   # too long on appveyor and this is tested by rustbuild below.\n   - MSYS_BITS: 32\n-    RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu\n+    RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu --enable-ninja\n     SCRIPT: python x.py test\n     MINGW_URL: https://s3.amazonaws.com/rust-lang-ci\n     MINGW_ARCHIVE: i686-4.9.2-release-win32-dwarf-rt_v4-rev4.7z\n     MINGW_DIR: mingw32\n   - MSYS_BITS: 64\n     SCRIPT: python x.py test\n-    RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu\n+    RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu --enable-ninja\n     MINGW_URL: https://s3.amazonaws.com/rust-lang-ci\n     MINGW_ARCHIVE: x86_64-4.9.2-release-win32-seh-rt_v4-rev4.7z\n     MINGW_DIR: mingw64\n@@ -68,15 +68,15 @@ environment:\n     SCRIPT: python x.py dist\n     DEPLOY: 1\n   - MSYS_BITS: 32\n-    RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu --enable-extended\n+    RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu --enable-extended --enable-ninja\n     SCRIPT: python x.py dist\n     MINGW_URL: https://s3.amazonaws.com/rust-lang-ci\n     MINGW_ARCHIVE: i686-4.9.2-release-win32-dwarf-rt_v4-rev4.7z\n     MINGW_DIR: mingw32\n     DEPLOY: 1\n   - MSYS_BITS: 64\n     SCRIPT: python x.py dist\n-    RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu --enable-extended\n+    RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu --enable-extended --enable-ninja\n     MINGW_URL: https://s3.amazonaws.com/rust-lang-ci\n     MINGW_ARCHIVE: x86_64-4.9.2-release-win32-seh-rt_v4-rev4.7z\n     MINGW_DIR: mingw64\n@@ -116,9 +116,16 @@ install:\n \n   # Download and install sccache\n   - appveyor-retry appveyor DownloadFile https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-03-16-sccache-x86_64-pc-windows-msvc\n-  - mv 2017-03-16-sccache-x86_64-pc-windows-msvc sccache\n+  - mv 2017-03-16-sccache-x86_64-pc-windows-msvc sccache.exe\n   - set PATH=%PATH%;%CD%\n \n+  # Download and install ninja\n+  #\n+  # Note that this is originally from the github releases patch of Ninja\n+  - appveyor-retry appveyor DownloadFile https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-03-15-ninja-win.zip\n+  - 7z x 2017-03-15-ninja-win.zip\n+  # - set PATH=%PATH%;%CD% -- this already happens above for sccache\n+\n   # Install InnoSetup to get `iscc` used to produce installers\n   - appveyor-retry choco install -y InnoSetup\n   - set PATH=\"C:\\Program Files (x86)\\Inno Setup 5\";%PATH%"}, {"sha": "52ebf401aefd6d3eff0eab632e4dee97b1df6ac7", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6ae22346b83406bce360b80d648920eac9874bae/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ae22346b83406bce360b80d648920eac9874bae/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=6ae22346b83406bce360b80d648920eac9874bae", "patch": "@@ -23,7 +23,7 @@ use std::process;\n use num_cpus;\n use rustc_serialize::Decodable;\n use toml::{Parser, Decoder, Value};\n-use util::push_exe_path;\n+use util::{exe, push_exe_path};\n \n /// Global configuration for the entire build and/or bootstrap.\n ///\n@@ -584,10 +584,10 @@ impl Config {\n                     self.python = Some(path);\n                 }\n                 \"CFG_ENABLE_CCACHE\" if value == \"1\" => {\n-                    self.ccache = Some(\"ccache\".to_string());\n+                    self.ccache = Some(exe(\"ccache\", &self.build));\n                 }\n                 \"CFG_ENABLE_SCCACHE\" if value == \"1\" => {\n-                    self.ccache = Some(\"sccache\".to_string());\n+                    self.ccache = Some(exe(\"sccache\", &self.build));\n                 }\n                 \"CFG_CONFIGURE_ARGS\" if value.len() > 0 => {\n                     self.configure_args = value.split_whitespace()"}]}