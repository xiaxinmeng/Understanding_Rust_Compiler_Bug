{"sha": "0727994435c75fdedd3e9d226cf434089b0ab585", "node_id": "C_kwDOAAsO6NoAKDA3Mjc5OTQ0MzVjNzVmZGVkZDNlOWQyMjZjZjQzNDA4OWIwYWI1ODU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-06T20:14:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-06T20:14:37Z"}, "message": "Auto merge of #90655 - the8472:drain-dot-dot, r=jyn514\n\nReplace some uses of vec.drain(..) with vec.into_iter()\n\nIntoIter should optimize better than Drain", "tree": {"sha": "2dd2f19b504aa1a0deb7e69a3e25870b0873dd43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2dd2f19b504aa1a0deb7e69a3e25870b0873dd43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0727994435c75fdedd3e9d226cf434089b0ab585", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0727994435c75fdedd3e9d226cf434089b0ab585", "html_url": "https://github.com/rust-lang/rust/commit/0727994435c75fdedd3e9d226cf434089b0ab585", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0727994435c75fdedd3e9d226cf434089b0ab585/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ec7d1dad6dead949a49c76c8ca0425a6e46a223", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ec7d1dad6dead949a49c76c8ca0425a6e46a223", "html_url": "https://github.com/rust-lang/rust/commit/5ec7d1dad6dead949a49c76c8ca0425a6e46a223"}, {"sha": "ff87ff962cc0a267e1261b936227d840eff021e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff87ff962cc0a267e1261b936227d840eff021e9", "html_url": "https://github.com/rust-lang/rust/commit/ff87ff962cc0a267e1261b936227d840eff021e9"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "253ac266bedaa246cc1039b9a6e5191447cb152b", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0727994435c75fdedd3e9d226cf434089b0ab585/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0727994435c75fdedd3e9d226cf434089b0ab585/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=0727994435c75fdedd3e9d226cf434089b0ab585", "patch": "@@ -2665,7 +2665,7 @@ impl<'tcx> UserTypeProjections {\n         mut self,\n         mut f: impl FnMut(UserTypeProjection) -> UserTypeProjection,\n     ) -> Self {\n-        self.contents = self.contents.drain(..).map(|(proj, span)| (f(proj), span)).collect();\n+        self.contents = self.contents.into_iter().map(|(proj, span)| (f(proj), span)).collect();\n         self\n     }\n "}, {"sha": "b51e93a429dffcd8e7cca44ca811a1d24677cbe6", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0727994435c75fdedd3e9d226cf434089b0ab585/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0727994435c75fdedd3e9d226cf434089b0ab585/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=0727994435c75fdedd3e9d226cf434089b0ab585", "patch": "@@ -333,7 +333,7 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n         let candidates = self\n             .r\n             .lookup_import_candidates(ident, ns, &self.parent_scope, is_expected)\n-            .drain(..)\n+            .into_iter()\n             .filter(|ImportSuggestion { did, .. }| {\n                 match (did, res.and_then(|res| res.opt_def_id())) {\n                     (Some(suggestion_did), Some(actual_did)) => *suggestion_did != actual_did,\n@@ -1554,7 +1554,7 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n         if suggest_only_tuple_variants {\n             // Suggest only tuple variants regardless of whether they have fields and do not\n             // suggest path with added parentheses.\n-            let mut suggestable_variants = variants\n+            let suggestable_variants = variants\n                 .iter()\n                 .filter(|(.., kind)| *kind == CtorKind::Fn)\n                 .map(|(variant, ..)| path_names_to_string(variant))\n@@ -1580,7 +1580,7 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n                 err.span_suggestions(\n                     span,\n                     &msg,\n-                    suggestable_variants.drain(..),\n+                    suggestable_variants.into_iter(),\n                     Applicability::MaybeIncorrect,\n                 );\n             }\n@@ -1638,7 +1638,7 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n                 );\n             }\n \n-            let mut suggestable_variants_with_placeholders = variants\n+            let suggestable_variants_with_placeholders = variants\n                 .iter()\n                 .filter(|(_, def_id, kind)| needs_placeholder(*def_id, *kind))\n                 .map(|(variant, _, kind)| (path_names_to_string(variant), kind))\n@@ -1663,7 +1663,7 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n                 err.span_suggestions(\n                     span,\n                     msg,\n-                    suggestable_variants_with_placeholders.drain(..),\n+                    suggestable_variants_with_placeholders.into_iter(),\n                     Applicability::HasPlaceholders,\n                 );\n             }"}]}