{"sha": "4f90c88b4d395b03d6ad96316307b905be1be84a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmOTBjODhiNGQzOTViMDNkNmFkOTYzMTYzMDdiOTA1YmUxYmU4NGE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-04-02T01:53:08Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-04-02T01:53:08Z"}, "message": "Write typarams for variants. Typecheck gets as far as ty.rs now.", "tree": {"sha": "49362cbcbf98cbd182f00976d8d22462be9a63ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49362cbcbf98cbd182f00976d8d22462be9a63ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f90c88b4d395b03d6ad96316307b905be1be84a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f90c88b4d395b03d6ad96316307b905be1be84a", "html_url": "https://github.com/rust-lang/rust/commit/4f90c88b4d395b03d6ad96316307b905be1be84a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f90c88b4d395b03d6ad96316307b905be1be84a/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b7961b64135bb0f3cd1d9f6f78dcec6bb0f598a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b7961b64135bb0f3cd1d9f6f78dcec6bb0f598a", "html_url": "https://github.com/rust-lang/rust/commit/5b7961b64135bb0f3cd1d9f6f78dcec6bb0f598a"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "c3b78662c390d3ea236b7c1605c50085aba854c1", "filename": "src/comp/middle/metadata.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4f90c88b4d395b03d6ad96316307b905be1be84a/src%2Fcomp%2Fmiddle%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f90c88b4d395b03d6ad96316307b905be1be84a/src%2Fcomp%2Fmiddle%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fmetadata.rs?ref=4f90c88b4d395b03d6ad96316307b905be1be84a", "patch": "@@ -360,7 +360,8 @@ fn encode_obj_type_id(&ebml.writer ebml_w, &ast.def_id id) {\n \n fn encode_tag_variant_info(@trans.crate_ctxt cx, &ebml.writer ebml_w,\n                            ast.def_id did, vec[ast.variant] variants,\n-                           &mutable vec[tup(int, uint)] index) {\n+                           &mutable vec[tup(int, uint)] index,\n+                           vec[ast.ty_param] ty_params) {\n     for (ast.variant variant in variants) {\n         index += vec(tup(variant.node.id._1, ebml_w.writer.tell()));\n \n@@ -373,6 +374,7 @@ fn encode_tag_variant_info(@trans.crate_ctxt cx, &ebml.writer ebml_w,\n             encode_symbol(cx, ebml_w, variant.node.id);\n         }\n         encode_discriminant(cx, ebml_w, variant.node.id);\n+        encode_type_params(ebml_w, ty_params);\n         ebml.end_tag(ebml_w);\n     }\n }\n@@ -428,7 +430,7 @@ fn encode_info_for_item(@trans.crate_ctxt cx, &ebml.writer ebml_w,\n             }\n             ebml.end_tag(ebml_w);\n \n-            encode_tag_variant_info(cx, ebml_w, did, variants, index);\n+            encode_tag_variant_info(cx, ebml_w, did, variants, index, tps);\n         }\n         case (ast.item_obj(?id, _, ?tps, ?odid, ?ann)) {\n             ebml.start_tag(ebml_w, tag_items_data_item);"}]}