{"sha": "cdd6d39eccb687f20113893902eafd8ba81b4acf", "node_id": "C_kwDOAAsO6NoAKGNkZDZkMzllY2NiNjg3ZjIwMTEzODkzOTAyZWFmZDhiYTgxYjRhY2Y", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-03-11T12:38:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-11T12:38:37Z"}, "message": "Rollup merge of #94776 - martingms:optimize-escape-default, r=nnethercote\n\nOptimize ascii::escape_default\n\n`ascii::escape_default` showed up as a hot function when compiling `deunicode-1.3.1` in `@nnethercote's` [analysis](https://hackmd.io/mxdn4U58Su-UQXwzOHpHag) of `@lqd's` [rustc-benchmarking-data](https://github.com/lqd/rustc-benchmarking-data).\nAfter taking a look at the generated assembly it looked like a LUT-based approach could be faster for `hexify()`-ing ascii characters, so that's what this PR implements\n\nThe patch looks like it provides about a 1-2% improvement in instructions for that particular crate. This should definitely be verified with a perf run as I'm still getting used to the `rustc-perf` tooling and might easily have made an error!", "tree": {"sha": "93f2bb9412734f3c27a53e51c461ee9aba72cb3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93f2bb9412734f3c27a53e51c461ee9aba72cb3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdd6d39eccb687f20113893902eafd8ba81b4acf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiK0LOCRBK7hj4Ov3rIwAAeWwIAFS5g/E1f3n+vNJwo7rgX0IW\nFg8jR2IZHPJ4GI84aug2Dv9pFl0EPKUQmzAJFRwdJWuu7lppU11CTzWtZ6KGUKA3\nkhzcM87KGgBdZN8i5Jc/ATqSfDXCWiTuKTiZIVzye7WEG2Y1KovVw4FvToRCL27H\nxtIZTo7vmnqv+3I79qNl7k6hTlPK0vAA4Z/bgHBFDjEnLNYmZoC+31YT9h712fZ7\n6vtNljOiQdOTKhMET/mjhDAQJnJ28snod+O/l9ZKotixY2KAbx5SAcqLS1J9fymI\naEdrCKuOuSLy0grCw4zH7QMeAAdZELtjgx4ItDyP3UUMdd3Cr5JLjGu/B0rnPAQ=\n=heZ7\n-----END PGP SIGNATURE-----\n", "payload": "tree 93f2bb9412734f3c27a53e51c461ee9aba72cb3b\nparent b711d17c374d7538c8f716cbeaf0fe8c6f7cd691\nparent c62ab422d06410772e364c61741376e10b39fff8\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1647002317 +0100\ncommitter GitHub <noreply@github.com> 1647002317 +0100\n\nRollup merge of #94776 - martingms:optimize-escape-default, r=nnethercote\n\nOptimize ascii::escape_default\n\n`ascii::escape_default` showed up as a hot function when compiling `deunicode-1.3.1` in `@nnethercote's` [analysis](https://hackmd.io/mxdn4U58Su-UQXwzOHpHag) of `@lqd's` [rustc-benchmarking-data](https://github.com/lqd/rustc-benchmarking-data).\nAfter taking a look at the generated assembly it looked like a LUT-based approach could be faster for `hexify()`-ing ascii characters, so that's what this PR implements\n\nThe patch looks like it provides about a 1-2% improvement in instructions for that particular crate. This should definitely be verified with a perf run as I'm still getting used to the `rustc-perf` tooling and might easily have made an error!\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdd6d39eccb687f20113893902eafd8ba81b4acf", "html_url": "https://github.com/rust-lang/rust/commit/cdd6d39eccb687f20113893902eafd8ba81b4acf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdd6d39eccb687f20113893902eafd8ba81b4acf/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b711d17c374d7538c8f716cbeaf0fe8c6f7cd691", "url": "https://api.github.com/repos/rust-lang/rust/commits/b711d17c374d7538c8f716cbeaf0fe8c6f7cd691", "html_url": "https://github.com/rust-lang/rust/commit/b711d17c374d7538c8f716cbeaf0fe8c6f7cd691"}, {"sha": "c62ab422d06410772e364c61741376e10b39fff8", "url": "https://api.github.com/repos/rust-lang/rust/commits/c62ab422d06410772e364c61741376e10b39fff8", "html_url": "https://github.com/rust-lang/rust/commit/c62ab422d06410772e364c61741376e10b39fff8"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "8a4cb78cc7f92f5a2fabedad3f3342389d7b3b48", "filename": "library/core/src/ascii.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cdd6d39eccb687f20113893902eafd8ba81b4acf/library%2Fcore%2Fsrc%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdd6d39eccb687f20113893902eafd8ba81b4acf/library%2Fcore%2Fsrc%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fascii.rs?ref=cdd6d39eccb687f20113893902eafd8ba81b4acf", "patch": "@@ -98,22 +98,20 @@ pub fn escape_default(c: u8) -> EscapeDefault {\n         b'\\'' => ([b'\\\\', b'\\'', 0, 0], 2),\n         b'\"' => ([b'\\\\', b'\"', 0, 0], 2),\n         b'\\x20'..=b'\\x7e' => ([c, 0, 0, 0], 1),\n-        _ => ([b'\\\\', b'x', hexify(c >> 4), hexify(c & 0xf)], 4),\n+        _ => {\n+            let hex_digits: &[u8; 16] = b\"0123456789abcdef\";\n+            ([b'\\\\', b'x', hex_digits[(c >> 4) as usize], hex_digits[(c & 0xf) as usize]], 4)\n+        }\n     };\n \n     return EscapeDefault { range: 0..len, data };\n-\n-    fn hexify(b: u8) -> u8 {\n-        match b {\n-            0..=9 => b'0' + b,\n-            _ => b'a' + b - 10,\n-        }\n-    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Iterator for EscapeDefault {\n     type Item = u8;\n+\n+    #[inline]\n     fn next(&mut self) -> Option<u8> {\n         self.range.next().map(|i| self.data[i as usize])\n     }"}]}