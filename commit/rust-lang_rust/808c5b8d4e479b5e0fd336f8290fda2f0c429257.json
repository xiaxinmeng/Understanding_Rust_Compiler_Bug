{"sha": "808c5b8d4e479b5e0fd336f8290fda2f0c429257", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwOGM1YjhkNGU0NzliNWUwZmQzMzZmODI5MGZkYTJmMGM0MjkyNTc=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-05-20T02:08:59Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-05-20T02:09:32Z"}, "message": "Test fixes, use LLVMConstFCmp in ConstFCmp", "tree": {"sha": "7419c878d0dd8d1cc7d7b2dd55e7b4c3cdffc7ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7419c878d0dd8d1cc7d7b2dd55e7b4c3cdffc7ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/808c5b8d4e479b5e0fd336f8290fda2f0c429257", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/808c5b8d4e479b5e0fd336f8290fda2f0c429257", "html_url": "https://github.com/rust-lang/rust/commit/808c5b8d4e479b5e0fd336f8290fda2f0c429257", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/808c5b8d4e479b5e0fd336f8290fda2f0c429257/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b97642758fb2c060ec689c540576d308fc081f1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b97642758fb2c060ec689c540576d308fc081f1e", "html_url": "https://github.com/rust-lang/rust/commit/b97642758fb2c060ec689c540576d308fc081f1e"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "9198991e5360e7e0635df886ff1e1d6ee3a27967", "filename": "src/librustc/lib/llvm.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/808c5b8d4e479b5e0fd336f8290fda2f0c429257/src%2Flibrustc%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/808c5b8d4e479b5e0fd336f8290fda2f0c429257/src%2Flibrustc%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib%2Fllvm.rs?ref=808c5b8d4e479b5e0fd336f8290fda2f0c429257", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use core::hashmap::HashMap;\n-use core::libc::c_uint;\n+use core::libc::{c_uint, c_ushort};\n \n pub type Opcode = u32;\n pub type Bool = c_uint;\n@@ -221,7 +221,7 @@ pub mod llvm {\n     use super::{SectionIteratorRef, TargetDataRef, TypeKind, TypeRef, UseRef};\n     use super::{ValueRef};\n \n-    use core::libc::{c_char, c_int, c_longlong, c_uint, c_ulonglong};\n+    use core::libc::{c_char, c_int, c_longlong, c_ushort, c_uint, c_ulonglong};\n \n     #[link_args = \"-Lrustllvm -lrustllvm\"]\n     #[link_name = \"rustllvm\"]\n@@ -452,9 +452,9 @@ pub mod llvm {\n         #[fast_ffi]\n         pub unsafe fn LLVMConstAllOnes(Ty: TypeRef) -> ValueRef;\n         #[fast_ffi]\n-        pub unsafe fn LLVMConstICmp(Pred: c_uint, V1: ValueRef, V2: ValueRef) -> ValueRef;\n+        pub unsafe fn LLVMConstICmp(Pred: c_ushort, V1: ValueRef, V2: ValueRef) -> ValueRef;\n         #[fast_ffi]\n-        pub unsafe fn LLVMConstFCmp(Pred: c_uint, V1: ValueRef, V2: ValueRef) -> ValueRef;\n+        pub unsafe fn LLVMConstFCmp(Pred: c_ushort, V1: ValueRef, V2: ValueRef) -> ValueRef;\n         /* only for int/vector */\n         #[fast_ffi]\n         pub unsafe fn LLVMGetUndef(Ty: TypeRef) -> ValueRef;\n@@ -1920,12 +1920,12 @@ pub fn SetLinkage(Global: ValueRef, Link: Linkage) {\n \n pub fn ConstICmp(Pred: IntPredicate, V1: ValueRef, V2: ValueRef) -> ValueRef {\n     unsafe {\n-        llvm::LLVMConstICmp(Pred as c_uint, V1, V2)\n+        llvm::LLVMConstICmp(Pred as c_ushort, V1, V2)\n     }\n }\n pub fn ConstFCmp(Pred: RealPredicate, V1: ValueRef, V2: ValueRef) -> ValueRef {\n     unsafe {\n-        llvm::LLVMConstICmp(Pred as c_uint, V1, V2)\n+        llvm::LLVMConstFCmp(Pred as c_ushort, V1, V2)\n     }\n }\n /* Memory-managed object interface to type handles. */"}, {"sha": "cd87ca3ab537ec1eafbdae570199961fec38a69d", "filename": "src/test/run-pass/const-binops.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/808c5b8d4e479b5e0fd336f8290fda2f0c429257/src%2Ftest%2Frun-pass%2Fconst-binops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/808c5b8d4e479b5e0fd336f8290fda2f0c429257/src%2Ftest%2Frun-pass%2Fconst-binops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-binops.rs?ref=808c5b8d4e479b5e0fd336f8290fda2f0c429257", "patch": "@@ -38,23 +38,23 @@ static z: bool = 1.0 == 1.0;\n \n static aa: bool = 1 <= 2;\n static ab: bool = -1 <= 2;\n-static ac: bool = 1.0 <= 2;\n+static ac: bool = 1.0 <= 2.0;\n \n static ad: bool = 1 < 2;\n static ae: bool = -1 < 2;\n-static af: bool = 1.0 < 2;\n+static af: bool = 1.0 < 2.0;\n \n static ag: bool = 1 != 2;\n static ah: bool = -1 != 2;\n-static ai: bool = 1.0 != 2;\n+static ai: bool = 1.0 != 2.0;\n \n static aj: bool = 2 >= 1;\n static ak: bool = 2 >= -2;\n-static al: bool = 1.0 >= -2;\n+static al: bool = 1.0 >= -2.0;\n \n static am: bool = 2 > 1;\n static an: bool = 2 > -2;\n-static ao: bool = 1.0 > -2;\n+static ao: bool = 1.0 > -2.0;\n \n fn main() {\n     assert_eq!(a, -1);\n@@ -63,7 +63,7 @@ fn main() {\n \n     assert_eq!(c, -1);\n     assert_eq!(d, 0);\n-    assert_approx_eq!(e, -0.3);\n+    assert_approx_eq!(e, 0.3);\n \n     assert_eq!(e2, -9);\n     assert_eq!(f, 9);"}]}