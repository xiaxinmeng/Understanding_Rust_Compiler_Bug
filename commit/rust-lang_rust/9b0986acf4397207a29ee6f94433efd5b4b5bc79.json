{"sha": "9b0986acf4397207a29ee6f94433efd5b4b5bc79", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliMDk4NmFjZjQzOTcyMDdhMjllZTZmOTQ0MzNlZmQ1YjRiNWJjNzk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-06-08T00:43:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-06-08T00:43:32Z"}, "message": "auto merge of #7001 : alco/rust/tutorial-for-loop, r=bstrie\n\nThe \"4.3 Loops\" section only describes `while` and `loop`. We then see `for`\r\nused in a code sample at the end of the \"13. Vectors and strings\" section,\r\nbut it's explained for the first time only in the next section --\r\n\"14. Closures\".\r\n\r\nIt is worth mentioning it in \"4.3 Loops\".\r\n\r\n---\r\n\r\nFeel free to reword it and commit yourself if you don't like my wording.", "tree": {"sha": "36f8fa49dc7d856a6e1345de702c36d9fdeab42b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36f8fa49dc7d856a6e1345de702c36d9fdeab42b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b0986acf4397207a29ee6f94433efd5b4b5bc79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b0986acf4397207a29ee6f94433efd5b4b5bc79", "html_url": "https://github.com/rust-lang/rust/commit/9b0986acf4397207a29ee6f94433efd5b4b5bc79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b0986acf4397207a29ee6f94433efd5b4b5bc79/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8cf2f8056d29423430b723acd70e525d1249a32", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8cf2f8056d29423430b723acd70e525d1249a32", "html_url": "https://github.com/rust-lang/rust/commit/b8cf2f8056d29423430b723acd70e525d1249a32"}, {"sha": "83b68a2f69471e0217422cf30d6c45ec4fe28b70", "url": "https://api.github.com/repos/rust-lang/rust/commits/83b68a2f69471e0217422cf30d6c45ec4fe28b70", "html_url": "https://github.com/rust-lang/rust/commit/83b68a2f69471e0217422cf30d6c45ec4fe28b70"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "56630d0c9c6ea146466ad5b6081f9f4ce8944468", "filename": "doc/tutorial.md", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9b0986acf4397207a29ee6f94433efd5b4b5bc79/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/9b0986acf4397207a29ee6f94433efd5b4b5bc79/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=9b0986acf4397207a29ee6f94433efd5b4b5bc79", "patch": "@@ -569,8 +569,10 @@ loop {\n This code prints out a weird sequence of numbers and stops as soon as\n it finds one that can be divided by five.\n \n-For more involved iteration, such as enumerating the elements of a\n-collection, Rust uses [higher-order functions](#closures).\n+Rust also has a `for` construct. It's different from C's `for` and it works\n+best when iterating over collections. See the section on [closures](#closures)\n+to find out how to use `for` and higher-order functions for enumerating\n+elements of a collection.\n \n # Data structures\n \n@@ -1393,6 +1395,7 @@ assert!(crayons.len() == 3);\n assert!(!crayons.is_empty());\n \n // Iterate over a vector, obtaining a pointer to each element\n+// (`for` is explained in the next section)\n for crayons.each |crayon| {\n     let delicious_crayon_wax = unwrap_crayon(*crayon);\n     eat_crayon_wax(delicious_crayon_wax);"}]}