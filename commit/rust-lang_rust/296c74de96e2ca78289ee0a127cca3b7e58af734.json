{"sha": "296c74de96e2ca78289ee0a127cca3b7e58af734", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5NmM3NGRlOTZlMmNhNzgyODllZTBhMTI3Y2NhM2I3ZTU4YWY3MzQ=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-01-26T08:54:19Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-01-26T08:58:56Z"}, "message": "Default to Pentium 4 as the x86 target CPU on Windows/Linux/DragonFly\n\nLimiting ourselves to a generic x86 instruction set doesn't seem useful.\nBoth users running those systems on original i386 hardware might as well\nmanually specify a target cpu ;-)\n\nClang uses the same default.", "tree": {"sha": "e6bc96f56484f6251741ff8b6ee9d6f50c645ed8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6bc96f56484f6251741ff8b6ee9d6f50c645ed8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/296c74de96e2ca78289ee0a127cca3b7e58af734", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/296c74de96e2ca78289ee0a127cca3b7e58af734", "html_url": "https://github.com/rust-lang/rust/commit/296c74de96e2ca78289ee0a127cca3b7e58af734", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/296c74de96e2ca78289ee0a127cca3b7e58af734/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bca25aeeb40b220d7330d71cd4906acafc32ebe7", "url": "https://api.github.com/repos/rust-lang/rust/commits/bca25aeeb40b220d7330d71cd4906acafc32ebe7", "html_url": "https://github.com/rust-lang/rust/commit/bca25aeeb40b220d7330d71cd4906acafc32ebe7"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "249f2d440e68155fd01960d9924930cadfe85a6d", "filename": "src/librustc_back/target/i686_pc_windows_gnu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/296c74de96e2ca78289ee0a127cca3b7e58af734/src%2Flibrustc_back%2Ftarget%2Fi686_pc_windows_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/296c74de96e2ca78289ee0a127cca3b7e58af734/src%2Flibrustc_back%2Ftarget%2Fi686_pc_windows_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_pc_windows_gnu.rs?ref=296c74de96e2ca78289ee0a127cca3b7e58af734", "patch": "@@ -12,6 +12,7 @@ use target::Target;\n \n pub fn target() -> Target {\n     let mut options = super::windows_base::opts();\n+    options.cpu = \"pentium4\".to_string();\n \n     // Mark all dynamic libraries and executables as compatible with the larger 4GiB address\n     // space available to x86 Windows binaries on x86_64."}, {"sha": "4450d8d67782d48fc899cdd684d38f447ccd7caf", "filename": "src/librustc_back/target/i686_unknown_dragonfly.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/296c74de96e2ca78289ee0a127cca3b7e58af734/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_dragonfly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/296c74de96e2ca78289ee0a127cca3b7e58af734/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_dragonfly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_dragonfly.rs?ref=296c74de96e2ca78289ee0a127cca3b7e58af734", "patch": "@@ -12,6 +12,7 @@ use target::Target;\n \n pub fn target() -> Target {\n     let mut base = super::dragonfly_base::opts();\n+    base.cpu = \"pentium4\".to_string();\n     base.pre_link_args.push(\"-m32\".to_string());\n \n     Target {"}, {"sha": "f21f6adfb4c0c2a03eb28a5e0aed816508b0e59a", "filename": "src/librustc_back/target/i686_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/296c74de96e2ca78289ee0a127cca3b7e58af734/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/296c74de96e2ca78289ee0a127cca3b7e58af734/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_linux_gnu.rs?ref=296c74de96e2ca78289ee0a127cca3b7e58af734", "patch": "@@ -12,6 +12,7 @@ use target::Target;\n \n pub fn target() -> Target {\n     let mut base = super::linux_base::opts();\n+    base.cpu = \"pentium4\".to_string();\n     base.pre_link_args.push(\"-m32\".to_string());\n \n     Target {"}]}