{"sha": "d7544fe987104ad0a82b1929b819cfd7e2321bb2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3NTQ0ZmU5ODcxMDRhZDBhODJiMTkyOWI4MTljZmQ3ZTIzMjFiYjI=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-06-25T00:02:24Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-06-29T08:39:38Z"}, "message": "Add two tests for the case of the recurring closure.", "tree": {"sha": "8e1ac915c3922e126c011c507c50a1065f02b68a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e1ac915c3922e126c011c507c50a1065f02b68a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7544fe987104ad0a82b1929b819cfd7e2321bb2", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7544fe987104ad0a82b1929b819cfd7e2321bb2", "html_url": "https://github.com/rust-lang/rust/commit/d7544fe987104ad0a82b1929b819cfd7e2321bb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7544fe987104ad0a82b1929b819cfd7e2321bb2/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4722e53332a854228a2db6a682da5e0017fe73e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4722e53332a854228a2db6a682da5e0017fe73e", "html_url": "https://github.com/rust-lang/rust/commit/d4722e53332a854228a2db6a682da5e0017fe73e"}], "stats": {"total": 88, "additions": 88, "deletions": 0}, "files": [{"sha": "bfb1e910495dedfa24e90c14fec9589b71131a56", "filename": "src/test/compile-fail/the-case-of-the-recurring-closure-2.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/d7544fe987104ad0a82b1929b819cfd7e2321bb2/src%2Ftest%2Fcompile-fail%2Fthe-case-of-the-recurring-closure-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7544fe987104ad0a82b1929b819cfd7e2321bb2/src%2Ftest%2Fcompile-fail%2Fthe-case-of-the-recurring-closure-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fthe-case-of-the-recurring-closure-2.rs?ref=d7544fe987104ad0a82b1929b819cfd7e2321bb2", "patch": "@@ -0,0 +1,44 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Tests correct kind-checking of the reason stack closures without the :Copy\n+// bound must be noncopyable. For details see\n+// http://smallcultfollowing.com/babysteps/blog/2013/04/30/the-case-of-the-recurring-closure/\n+\n+struct R<'self> {\n+    // This struct is needed to create the\n+    // otherwise infinite type of a fn that\n+    // accepts itself as argument:\n+    c: &'self fn:Copy(&R, bool)\n+}\n+\n+fn innocent_looking_victim() {\n+    let mut x = Some(~\"hello\");\n+    do conspirator |f, writer| {\n+        if writer {\n+            x = None; //~ ERROR cannot implicitly borrow\n+        } else {\n+            match x {\n+                Some(ref msg) => {\n+                    (f.c)(f, true);\n+                    println(fmt!(\"%?\", msg));\n+                },\n+                None => fail!(\"oops\"),\n+            }\n+        }\n+    }\n+}\n+\n+fn conspirator(f: &fn:Copy(&R, bool)) {\n+    let r = R {c: f};\n+    f(&r, false)\n+}\n+\n+fn main() { innocent_looking_victim() }"}, {"sha": "f05c30c3355e0830b57d1425204ad4fd22a1e4fd", "filename": "src/test/compile-fail/the-case-of-the-recurring-closure.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/d7544fe987104ad0a82b1929b819cfd7e2321bb2/src%2Ftest%2Fcompile-fail%2Fthe-case-of-the-recurring-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7544fe987104ad0a82b1929b819cfd7e2321bb2/src%2Ftest%2Fcompile-fail%2Fthe-case-of-the-recurring-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fthe-case-of-the-recurring-closure.rs?ref=d7544fe987104ad0a82b1929b819cfd7e2321bb2", "patch": "@@ -0,0 +1,44 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Tests correct kind-checking of the reason stack closures without the :Copy\n+// bound must be noncopyable. For details see\n+// http://smallcultfollowing.com/babysteps/blog/2013/04/30/the-case-of-the-recurring-closure/\n+\n+struct R<'self> {\n+    // This struct is needed to create the\n+    // otherwise infinite type of a fn that\n+    // accepts itself as argument:\n+    c: &'self fn(&R, bool)\n+}\n+\n+fn innocent_looking_victim() {\n+    let mut x = Some(~\"hello\");\n+    do conspirator |f, writer| {\n+        if writer {\n+            x = None;\n+        } else {\n+            match x {\n+                Some(ref msg) => {\n+                    (f.c)(f, true);\n+                    println(fmt!(\"%?\", msg));\n+                },\n+                None => fail!(\"oops\"),\n+            }\n+        }\n+    }\n+}\n+\n+fn conspirator(f: &fn(&R, bool)) {\n+    let r = R {c: f};\n+    f(&r, false) //~ ERROR use of moved value\n+}\n+\n+fn main() { innocent_looking_victim() }"}]}