{"sha": "5159b32997c92323ac7dd746b6898c1e96e7078c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxNTliMzI5OTdjOTIzMjNhYzdkZDc0NmI2ODk4YzFlOTZlNzA3OGM=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-11-07T16:00:51Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-11-07T16:00:51Z"}, "message": "mir: remove a hacky recursive helper function", "tree": {"sha": "a4e2ffb5255d0114600ae2dea9691ff4bdcf8005", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4e2ffb5255d0114600ae2dea9691ff4bdcf8005"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5159b32997c92323ac7dd746b6898c1e96e7078c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5159b32997c92323ac7dd746b6898c1e96e7078c", "html_url": "https://github.com/rust-lang/rust/commit/5159b32997c92323ac7dd746b6898c1e96e7078c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5159b32997c92323ac7dd746b6898c1e96e7078c/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddd4b194a0c28065a277c1f964aa931cc021b5c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddd4b194a0c28065a277c1f964aa931cc021b5c6", "html_url": "https://github.com/rust-lang/rust/commit/ddd4b194a0c28065a277c1f964aa931cc021b5c6"}], "stats": {"total": 15, "additions": 5, "deletions": 10}, "files": [{"sha": "c5add6260789a34e485f5852b45695cc3d093374", "filename": "src/librustc_mir/transform/promote_consts.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5159b32997c92323ac7dd746b6898c1e96e7078c/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5159b32997c92323ac7dd746b6898c1e96e7078c/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs?ref=5159b32997c92323ac7dd746b6898c1e96e7078c", "patch": "@@ -310,16 +310,11 @@ impl<'a, 'tcx> Promoter<'a, 'tcx> {\n                     match statement.kind {\n                         StatementKind::Assign(_, box Rvalue::Ref(_, _, ref mut place)) => {\n                             // Find the underlying local for this (necessarily interior) borrow.\n-                            // HACK(eddyb) using a recursive function because of mutable borrows.\n-                            fn interior_base<'a, 'tcx>(place: &'a mut Place<'tcx>)\n-                                                       -> &'a mut Place<'tcx> {\n-                                if let Place::Projection(ref mut proj) = *place {\n-                                    assert_ne!(proj.elem, ProjectionElem::Deref);\n-                                    return interior_base(&mut proj.base);\n-                                }\n-                                place\n-                            }\n-                            let place = interior_base(place);\n+                            let mut place = place;\n+                            while let Place::Projection(ref mut proj) = *place {\n+                                assert_ne!(proj.elem, ProjectionElem::Deref);\n+                                place = &mut proj.base;\n+                            };\n \n                             let ty = place.ty(local_decls, self.tcx).to_ty(self.tcx);\n                             let span = statement.source_info.span;"}]}