{"sha": "29045b699ebaa2b9f90b7186c735c642d939e9cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5MDQ1YjY5OWViYWEyYjlmOTBiNzE4NmM3MzVjNjQyZDkzOWU5Y2Y=", "commit": {"author": {"name": "Prabakaran Kumaresshan", "email": "4676330+nixphix@users.noreply.github.com", "date": "2020-08-11T08:26:07Z"}, "committer": {"name": "Prabakaran Kumaresshan", "email": "4676330+nixphix@users.noreply.github.com", "date": "2020-08-11T09:50:01Z"}, "message": "Switch to intra-doc links in library/std/src/os/*/fs.rs", "tree": {"sha": "6283f2f9ab81a7530ac2104e65af4653b0b0e885", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6283f2f9ab81a7530ac2104e65af4653b0b0e885"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29045b699ebaa2b9f90b7186c735c642d939e9cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29045b699ebaa2b9f90b7186c735c642d939e9cf", "html_url": "https://github.com/rust-lang/rust/commit/29045b699ebaa2b9f90b7186c735c642d939e9cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29045b699ebaa2b9f90b7186c735c642d939e9cf/comments", "author": {"login": "nixphix", "id": 4676330, "node_id": "MDQ6VXNlcjQ2NzYzMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/4676330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nixphix", "html_url": "https://github.com/nixphix", "followers_url": "https://api.github.com/users/nixphix/followers", "following_url": "https://api.github.com/users/nixphix/following{/other_user}", "gists_url": "https://api.github.com/users/nixphix/gists{/gist_id}", "starred_url": "https://api.github.com/users/nixphix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nixphix/subscriptions", "organizations_url": "https://api.github.com/users/nixphix/orgs", "repos_url": "https://api.github.com/users/nixphix/repos", "events_url": "https://api.github.com/users/nixphix/events{/privacy}", "received_events_url": "https://api.github.com/users/nixphix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nixphix", "id": 4676330, "node_id": "MDQ6VXNlcjQ2NzYzMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/4676330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nixphix", "html_url": "https://github.com/nixphix", "followers_url": "https://api.github.com/users/nixphix/followers", "following_url": "https://api.github.com/users/nixphix/following{/other_user}", "gists_url": "https://api.github.com/users/nixphix/gists{/gist_id}", "starred_url": "https://api.github.com/users/nixphix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nixphix/subscriptions", "organizations_url": "https://api.github.com/users/nixphix/orgs", "repos_url": "https://api.github.com/users/nixphix/repos", "events_url": "https://api.github.com/users/nixphix/events{/privacy}", "received_events_url": "https://api.github.com/users/nixphix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c336d46263999cce87de899220d7b92d11f1c85", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c336d46263999cce87de899220d7b92d11f1c85", "html_url": "https://github.com/rust-lang/rust/commit/4c336d46263999cce87de899220d7b92d11f1c85"}], "stats": {"total": 46, "additions": 23, "deletions": 23}, "files": [{"sha": "6aeef330dfa24b38e590baf3b4d370bbb3924c07", "filename": "library/std/src/os/android/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Fandroid%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Fandroid%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fandroid%2Ffs.rs?ref=29045b699ebaa2b9f90b7186c735c642d939e9cf", "patch": "@@ -8,7 +8,7 @@ use crate::os::android::raw;\n \n /// OS-specific extensions to [`fs::Metadata`].\n ///\n-/// [`fs::Metadata`]: ../../../../std/fs/struct.Metadata.html\n+/// [`fs::Metadata`]: crate::fs::Metadata\n #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n pub trait MetadataExt {\n     /// Gain a reference to the underlying `stat` structure which contains"}, {"sha": "e4c4e04cd30aa87a378772280433f5fce7a413a6", "filename": "library/std/src/os/dragonfly/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Fdragonfly%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Fdragonfly%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fdragonfly%2Ffs.rs?ref=29045b699ebaa2b9f90b7186c735c642d939e9cf", "patch": "@@ -8,7 +8,7 @@ use crate::os::dragonfly::raw;\n \n /// OS-specific extensions to [`fs::Metadata`].\n ///\n-/// [`fs::Metadata`]: ../../../../std/fs/struct.Metadata.html\n+/// [`fs::Metadata`]: crate::fs::Metadata\n #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n pub trait MetadataExt {\n     /// Gain a reference to the underlying `stat` structure which contains"}, {"sha": "d4f758a3457fe3266bfda5e1d2787177d69fa270", "filename": "library/std/src/os/emscripten/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Femscripten%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Femscripten%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Femscripten%2Ffs.rs?ref=29045b699ebaa2b9f90b7186c735c642d939e9cf", "patch": "@@ -8,7 +8,7 @@ use crate::os::emscripten::raw;\n \n /// OS-specific extensions to [`fs::Metadata`].\n ///\n-/// [`fs::Metadata`]: ../../../../std/fs/struct.Metadata.html\n+/// [`fs::Metadata`]: crate::fs::Metadata\n #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n pub trait MetadataExt {\n     /// Gain a reference to the underlying `stat` structure which contains"}, {"sha": "c6a00e179bd7fb736105294724c98d299159ed40", "filename": "library/std/src/os/freebsd/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Ffreebsd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Ffreebsd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Ffreebsd%2Ffs.rs?ref=29045b699ebaa2b9f90b7186c735c642d939e9cf", "patch": "@@ -8,7 +8,7 @@ use crate::os::freebsd::raw;\n \n /// OS-specific extensions to [`fs::Metadata`].\n ///\n-/// [`fs::Metadata`]: ../../../../std/fs/struct.Metadata.html\n+/// [`fs::Metadata`]: crate::fs::Metadata\n #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n pub trait MetadataExt {\n     /// Gain a reference to the underlying `stat` structure which contains"}, {"sha": "b48a46f9124a916fa6e429ba1bf811294dcaee5f", "filename": "library/std/src/os/fuchsia/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Ffuchsia%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Ffuchsia%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Ffuchsia%2Ffs.rs?ref=29045b699ebaa2b9f90b7186c735c642d939e9cf", "patch": "@@ -5,7 +5,7 @@ use crate::sys_common::AsInner;\n \n /// OS-specific extensions to [`fs::Metadata`].\n ///\n-/// [`fs::Metadata`]: ../../../../std/fs/struct.Metadata.html\n+/// [`fs::Metadata`]: crate::fs::Metadata\n #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n pub trait MetadataExt {\n     #[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"}, {"sha": "28015f62526331698937d416eb6810c085072912", "filename": "library/std/src/os/haiku/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Fhaiku%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Fhaiku%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fhaiku%2Ffs.rs?ref=29045b699ebaa2b9f90b7186c735c642d939e9cf", "patch": "@@ -8,7 +8,7 @@ use crate::os::haiku::raw;\n \n /// OS-specific extensions to [`fs::Metadata`].\n ///\n-/// [`fs::Metadata`]: ../../../../std/fs/struct.Metadata.html\n+/// [`fs::Metadata`]: crate::fs::Metadata\n #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n pub trait MetadataExt {\n     /// Gain a reference to the underlying `stat` structure which contains"}, {"sha": "021d154ff5a8a6e7dd75aae9ecc514297187866f", "filename": "library/std/src/os/illumos/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Fillumos%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Fillumos%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fillumos%2Ffs.rs?ref=29045b699ebaa2b9f90b7186c735c642d939e9cf", "patch": "@@ -8,7 +8,7 @@ use crate::os::illumos::raw;\n \n /// OS-specific extensions to [`fs::Metadata`].\n ///\n-/// [`fs::Metadata`]: ../../../../std/fs/struct.Metadata.html\n+/// [`fs::Metadata`]: crate::fs::Metadata\n #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n pub trait MetadataExt {\n     /// Gain a reference to the underlying `stat` structure which contains"}, {"sha": "2c5e38a803d30a2c4efcf3095679466450eb3f6c", "filename": "library/std/src/os/ios/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Fios%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Fios%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fios%2Ffs.rs?ref=29045b699ebaa2b9f90b7186c735c642d939e9cf", "patch": "@@ -8,7 +8,7 @@ use crate::os::ios::raw;\n \n /// OS-specific extensions to [`fs::Metadata`].\n ///\n-/// [`fs::Metadata`]: ../../../../std/fs/struct.Metadata.html\n+/// [`fs::Metadata`]: crate::fs::Metadata\n #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n pub trait MetadataExt {\n     /// Gain a reference to the underlying `stat` structure which contains"}, {"sha": "1314f3eeb97c758226cd653c1b63427c33395b8c", "filename": "library/std/src/os/linux/fs.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Flinux%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Flinux%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Flinux%2Ffs.rs?ref=29045b699ebaa2b9f90b7186c735c642d939e9cf", "patch": "@@ -8,7 +8,7 @@ use crate::os::linux::raw;\n \n /// OS-specific extensions to [`fs::Metadata`].\n ///\n-/// [`fs::Metadata`]: ../../../../std/fs/struct.Metadata.html\n+/// [`fs::Metadata`]: crate::fs::Metadata\n #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n pub trait MetadataExt {\n     /// Gain a reference to the underlying `stat` structure which contains\n@@ -18,7 +18,7 @@ pub trait MetadataExt {\n     /// Unix platforms. The `os::unix::fs::MetadataExt` trait contains the\n     /// cross-Unix abstractions contained within the raw stat.\n     ///\n-    /// [`stat`]: ../../../../std/os/linux/raw/struct.stat.html\n+    /// [`stat`]: crate::os::linux::raw::stat\n     ///\n     /// # Examples\n     ///\n@@ -196,7 +196,7 @@ pub trait MetadataExt {\n     fn st_atime(&self) -> i64;\n     /// Returns the last access time of the file, in nanoseconds since [`st_atime`].\n     ///\n-    /// [`st_atime`]: #tymethod.st_atime\n+    /// [`st_atime`]: Metadata::st_atime\n     ///\n     /// # Examples\n     ///\n@@ -232,7 +232,7 @@ pub trait MetadataExt {\n     fn st_mtime(&self) -> i64;\n     /// Returns the last modification time of the file, in nanoseconds since [`st_mtime`].\n     ///\n-    /// [`st_mtime`]: #tymethod.st_mtime\n+    /// [`st_mtime`]: Metadata::st_mtime\n     ///\n     /// # Examples\n     ///\n@@ -268,7 +268,7 @@ pub trait MetadataExt {\n     fn st_ctime(&self) -> i64;\n     /// Returns the last status change time of the file, in nanoseconds since [`st_ctime`].\n     ///\n-    /// [`st_ctime`]: #tymethod.st_ctime\n+    /// [`st_ctime`]: Metadata::st_ctime\n     ///\n     /// # Examples\n     ///"}, {"sha": "4152c3529361ded6e8e560da87860fc0bb9eea4d", "filename": "library/std/src/os/macos/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Fmacos%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Fmacos%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fmacos%2Ffs.rs?ref=29045b699ebaa2b9f90b7186c735c642d939e9cf", "patch": "@@ -8,7 +8,7 @@ use crate::os::macos::raw;\n \n /// OS-specific extensions to [`fs::Metadata`].\n ///\n-/// [`fs::Metadata`]: ../../../../std/fs/struct.Metadata.html\n+/// [`fs::Metadata`]: crate::fs::Metadata\n #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n pub trait MetadataExt {\n     /// Gain a reference to the underlying `stat` structure which contains"}, {"sha": "6b29a40d2b5452bc08d644c3bd92b8fd89774e1d", "filename": "library/std/src/os/netbsd/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Fnetbsd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Fnetbsd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fnetbsd%2Ffs.rs?ref=29045b699ebaa2b9f90b7186c735c642d939e9cf", "patch": "@@ -8,7 +8,7 @@ use crate::os::netbsd::raw;\n \n /// OS-specific extensions to [`fs::Metadata`].\n ///\n-/// [`fs::Metadata`]: ../../../../std/fs/struct.Metadata.html\n+/// [`fs::Metadata`]: crate::fs::Metadata\n #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n pub trait MetadataExt {\n     /// Gain a reference to the underlying `stat` structure which contains"}, {"sha": "3143dc95fdf44adb0098920a1a4f78c2791cc2c7", "filename": "library/std/src/os/openbsd/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Fopenbsd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Fopenbsd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fopenbsd%2Ffs.rs?ref=29045b699ebaa2b9f90b7186c735c642d939e9cf", "patch": "@@ -8,7 +8,7 @@ use crate::os::openbsd::raw;\n \n /// OS-specific extensions to [`fs::Metadata`].\n ///\n-/// [`fs::Metadata`]: ../../../../std/fs/struct.Metadata.html\n+/// [`fs::Metadata`]: crate::fs::Metadata\n #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n pub trait MetadataExt {\n     /// Gain a reference to the underlying `stat` structure which contains"}, {"sha": "22e1500b11306139335cc32d7cf5f9ddf3de983f", "filename": "library/std/src/os/redox/fs.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Fredox%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Fredox%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fredox%2Ffs.rs?ref=29045b699ebaa2b9f90b7186c735c642d939e9cf", "patch": "@@ -8,7 +8,7 @@ use crate::os::redox::raw;\n \n /// OS-specific extensions to [`fs::Metadata`].\n ///\n-/// [`fs::Metadata`]: ../../../../std/fs/struct.Metadata.html\n+/// [`fs::Metadata`]: crate::fs::Metadata\n #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n pub trait MetadataExt {\n     /// Gain a reference to the underlying `stat` structure which contains\n@@ -18,7 +18,7 @@ pub trait MetadataExt {\n     /// Unix platforms. The `os::unix::fs::MetadataExt` trait contains the\n     /// cross-Unix abstractions contained within the raw stat.\n     ///\n-    /// [`stat`]: ../../../../std/os/redox/raw/struct.stat.html\n+    /// [`stat`]: crate::os::redox::raw::stat\n     ///\n     /// # Examples\n     ///\n@@ -200,7 +200,7 @@ pub trait MetadataExt {\n     fn st_atime(&self) -> i64;\n     /// Returns the last access time of the file, in nanoseconds since [`st_atime`].\n     ///\n-    /// [`st_atime`]: #tymethod.st_atime\n+    /// [`st_atime`]: Metadata::st_atime\n     ///\n     /// # Examples\n     ///\n@@ -236,7 +236,7 @@ pub trait MetadataExt {\n     fn st_mtime(&self) -> i64;\n     /// Returns the last modification time of the file, in nanoseconds since [`st_mtime`].\n     ///\n-    /// [`st_mtime`]: #tymethod.st_mtime\n+    /// [`st_mtime`]: Metadata::st_mtime\n     ///\n     /// # Examples\n     ///\n@@ -272,7 +272,7 @@ pub trait MetadataExt {\n     fn st_ctime(&self) -> i64;\n     /// Returns the last status change time of the file, in nanoseconds since [`st_ctime`].\n     ///\n-    /// [`st_ctime`]: #tymethod.st_ctime\n+    /// [`st_ctime`]: Metadata::st_ctime\n     ///\n     /// # Examples\n     ///"}, {"sha": "908c5c38a842e83ac4817f684dd06d5e3e24b992", "filename": "library/std/src/os/solaris/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Fsolaris%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Fsolaris%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fsolaris%2Ffs.rs?ref=29045b699ebaa2b9f90b7186c735c642d939e9cf", "patch": "@@ -8,7 +8,7 @@ use crate::os::solaris::raw;\n \n /// OS-specific extensions to [`fs::Metadata`].\n ///\n-/// [`fs::Metadata`]: ../../../../std/fs/struct.Metadata.html\n+/// [`fs::Metadata`]: crate::fs::Metadata\n #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n pub trait MetadataExt {\n     /// Gain a reference to the underlying `stat` structure which contains"}, {"sha": "5a7e5bcaa7600a92061908eca7fbaa33a5776da2", "filename": "library/std/src/os/vxworks/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Fvxworks%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29045b699ebaa2b9f90b7186c735c642d939e9cf/library%2Fstd%2Fsrc%2Fos%2Fvxworks%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fvxworks%2Ffs.rs?ref=29045b699ebaa2b9f90b7186c735c642d939e9cf", "patch": "@@ -4,7 +4,7 @@ use crate::fs::Metadata;\n use crate::sys_common::AsInner;\n \n ///\n-/// [`fs::Metadata`]: ../../../../std/fs/struct.Metadata.html\n+/// [`fs::Metadata`]: crate::fs::Metadata\n #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n pub trait MetadataExt {\n     #[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"}]}