{"sha": "8caf60407033e84592821a3f7b3917fe80d343e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjYWY2MDQwNzAzM2U4NDU5MjgyMWEzZjdiMzkxN2ZlODBkMzQzZTA=", "commit": {"author": {"name": "David Hewitt", "email": "1939362+davidhewitt@users.noreply.github.com", "date": "2020-06-27T17:13:47Z"}, "committer": {"name": "David Hewitt", "email": "1939362+davidhewitt@users.noreply.github.com", "date": "2020-06-27T17:13:47Z"}, "message": "Improve messaging from PR feedback", "tree": {"sha": "627b417ef3241ff71679dfc7ada0f1d15a896ca6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/627b417ef3241ff71679dfc7ada0f1d15a896ca6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8caf60407033e84592821a3f7b3917fe80d343e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8caf60407033e84592821a3f7b3917fe80d343e0", "html_url": "https://github.com/rust-lang/rust/commit/8caf60407033e84592821a3f7b3917fe80d343e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8caf60407033e84592821a3f7b3917fe80d343e0/comments", "author": {"login": "davidhewitt", "id": 1939362, "node_id": "MDQ6VXNlcjE5MzkzNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1939362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidhewitt", "html_url": "https://github.com/davidhewitt", "followers_url": "https://api.github.com/users/davidhewitt/followers", "following_url": "https://api.github.com/users/davidhewitt/following{/other_user}", "gists_url": "https://api.github.com/users/davidhewitt/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidhewitt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidhewitt/subscriptions", "organizations_url": "https://api.github.com/users/davidhewitt/orgs", "repos_url": "https://api.github.com/users/davidhewitt/repos", "events_url": "https://api.github.com/users/davidhewitt/events{/privacy}", "received_events_url": "https://api.github.com/users/davidhewitt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidhewitt", "id": 1939362, "node_id": "MDQ6VXNlcjE5MzkzNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1939362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidhewitt", "html_url": "https://github.com/davidhewitt", "followers_url": "https://api.github.com/users/davidhewitt/followers", "following_url": "https://api.github.com/users/davidhewitt/following{/other_user}", "gists_url": "https://api.github.com/users/davidhewitt/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidhewitt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidhewitt/subscriptions", "organizations_url": "https://api.github.com/users/davidhewitt/orgs", "repos_url": "https://api.github.com/users/davidhewitt/repos", "events_url": "https://api.github.com/users/davidhewitt/events{/privacy}", "received_events_url": "https://api.github.com/users/davidhewitt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b95f3102d657a5cd0549213a073b28c7e0fe609", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b95f3102d657a5cd0549213a073b28c7e0fe609", "html_url": "https://github.com/rust-lang/rust/commit/6b95f3102d657a5cd0549213a073b28c7e0fe609"}], "stats": {"total": 35, "additions": 12, "deletions": 23}, "files": [{"sha": "16e11fecf2963b9fc88e26c1ad66f4e366f09382", "filename": "src/librustc_builtin_macros/format.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8caf60407033e84592821a3f7b3917fe80d343e0/src%2Flibrustc_builtin_macros%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8caf60407033e84592821a3f7b3917fe80d343e0/src%2Flibrustc_builtin_macros%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fformat.rs?ref=8caf60407033e84592821a3f7b3917fe80d343e0", "patch": "@@ -507,8 +507,8 @@ impl<'a, 'b> Context<'a, 'b> {\n                             .features\n                             .map_or(false, |features| features.format_args_capture);\n \n-                        // For the moment capturing variables from format strings expanded from\n-                        // literals is disabled (see RFC #2795)\n+                        // For the moment capturing variables from format strings expanded from macros is\n+                        // disabled (see RFC #2795)\n                         let can_capture = capture_feature_enabled && self.is_literal;\n \n                         if can_capture {\n@@ -541,15 +541,11 @@ impl<'a, 'b> Context<'a, 'b> {\n                                      when the format string is expanded from a macro\",\n                                 );\n                             } else if self.ecx.parse_sess().unstable_features.is_nightly_build() {\n-                                err.note(&format!(\n-                                    \"did you intend to capture a variable `{}` from \\\n-                                     the surrounding scope?\",\n+                                err.help(&format!(\n+                                    \"if you intended to capture `{}` from the surrounding scope, add \\\n+                                     `#![feature(format_args_capture)]` to the crate attributes\",\n                                     name\n                                 ));\n-                                err.help(\n-                                    \"add `#![feature(format_args_capture)]` to the crate \\\n-                                     attributes to enable\",\n-                                );\n                             }\n \n                             err.emit();"}, {"sha": "f08f1651cb62260237cc5f88e50df0fcf106a072", "filename": "src/test/ui/fmt/feature-gate-format-args-capture.stderr", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8caf60407033e84592821a3f7b3917fe80d343e0/src%2Ftest%2Fui%2Ffmt%2Ffeature-gate-format-args-capture.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8caf60407033e84592821a3f7b3917fe80d343e0/src%2Ftest%2Fui%2Ffmt%2Ffeature-gate-format-args-capture.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffmt%2Ffeature-gate-format-args-capture.stderr?ref=8caf60407033e84592821a3f7b3917fe80d343e0", "patch": "@@ -4,17 +4,15 @@ error: there is no argument named `foo`\n LL |     format!(\"{foo}\");\n    |              ^^^^^\n    |\n-   = note: did you intend to capture a variable `foo` from the surrounding scope?\n-   = help: add `#![feature(format_args_capture)]` to the crate attributes to enable\n+   = help: if you intended to capture `foo` from the surrounding scope, add `#![feature(format_args_capture)]` to the crate attributes\n \n error: there is no argument named `foo`\n   --> $DIR/feature-gate-format-args-capture.rs:5:13\n    |\n LL |     panic!(\"{foo} {bar}\", bar=1);\n    |             ^^^^^\n    |\n-   = note: did you intend to capture a variable `foo` from the surrounding scope?\n-   = help: add `#![feature(format_args_capture)]` to the crate attributes to enable\n+   = help: if you intended to capture `foo` from the surrounding scope, add `#![feature(format_args_capture)]` to the crate attributes\n \n error: aborting due to 2 previous errors\n "}, {"sha": "0ff478826f728cc8810c4b65404687c15e5a22e3", "filename": "src/test/ui/if/ifmt-bad-arg.stderr", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8caf60407033e84592821a3f7b3917fe80d343e0/src%2Ftest%2Fui%2Fif%2Fifmt-bad-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8caf60407033e84592821a3f7b3917fe80d343e0/src%2Ftest%2Fui%2Fif%2Fifmt-bad-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fif%2Fifmt-bad-arg.stderr?ref=8caf60407033e84592821a3f7b3917fe80d343e0", "patch": "@@ -64,26 +64,23 @@ error: there is no argument named `foo`\n LL |     format!(\"{} {foo} {} {bar} {}\", 1, 2, 3);\n    |                 ^^^^^\n    |\n-   = note: did you intend to capture a variable `foo` from the surrounding scope?\n-   = help: add `#![feature(format_args_capture)]` to the crate attributes to enable\n+   = help: if you intended to capture `foo` from the surrounding scope, add `#![feature(format_args_capture)]` to the crate attributes\n \n error: there is no argument named `bar`\n   --> $DIR/ifmt-bad-arg.rs:27:26\n    |\n LL |     format!(\"{} {foo} {} {bar} {}\", 1, 2, 3);\n    |                          ^^^^^\n    |\n-   = note: did you intend to capture a variable `bar` from the surrounding scope?\n-   = help: add `#![feature(format_args_capture)]` to the crate attributes to enable\n+   = help: if you intended to capture `bar` from the surrounding scope, add `#![feature(format_args_capture)]` to the crate attributes\n \n error: there is no argument named `foo`\n   --> $DIR/ifmt-bad-arg.rs:31:14\n    |\n LL |     format!(\"{foo}\");\n    |              ^^^^^\n    |\n-   = note: did you intend to capture a variable `foo` from the surrounding scope?\n-   = help: add `#![feature(format_args_capture)]` to the crate attributes to enable\n+   = help: if you intended to capture `foo` from the surrounding scope, add `#![feature(format_args_capture)]` to the crate attributes\n \n error: multiple unused formatting arguments\n   --> $DIR/ifmt-bad-arg.rs:32:17\n@@ -165,8 +162,7 @@ error: there is no argument named `valueb`\n LL |     format!(\"{valuea} {valueb}\", valuea=5, valuec=7);\n    |                       ^^^^^^^^\n    |\n-   = note: did you intend to capture a variable `valueb` from the surrounding scope?\n-   = help: add `#![feature(format_args_capture)]` to the crate attributes to enable\n+   = help: if you intended to capture `valueb` from the surrounding scope, add `#![feature(format_args_capture)]` to the crate attributes\n \n error: named argument never used\n   --> $DIR/ifmt-bad-arg.rs:45:51\n@@ -218,8 +214,7 @@ error: there is no argument named `foo`\n LL |         {foo}\n    |         ^^^^^\n    |\n-   = note: did you intend to capture a variable `foo` from the surrounding scope?\n-   = help: add `#![feature(format_args_capture)]` to the crate attributes to enable\n+   = help: if you intended to capture `foo` from the surrounding scope, add `#![feature(format_args_capture)]` to the crate attributes\n \n error: invalid format string: expected `'}'`, found `'t'`\n   --> $DIR/ifmt-bad-arg.rs:75:1"}]}