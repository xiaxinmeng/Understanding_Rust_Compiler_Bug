{"sha": "533ce9a7a69b60a191a9d0598e3072db0552e5f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzM2NlOWE3YTY5YjYwYTE5MWE5ZDA1OThlMzA3MmRiMDU1MmU1Zjc=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-07-02T10:16:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-02T10:16:49Z"}, "message": "Rollup merge of #34566 - ollie27:linkchecker_invalid_urls, r=alexcrichton\n\nReject invalid urls in linkchecker\n\nFor example root-relative links will now be rejected.\n\nAlso remove some exceptions which have since been fixed and fix a typo in\nthe broken redirect handling.", "tree": {"sha": "c2fc5487de76fa0f32cf45f142e682254ea96759", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2fc5487de76fa0f32cf45f142e682254ea96759"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/533ce9a7a69b60a191a9d0598e3072db0552e5f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/533ce9a7a69b60a191a9d0598e3072db0552e5f7", "html_url": "https://github.com/rust-lang/rust/commit/533ce9a7a69b60a191a9d0598e3072db0552e5f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/533ce9a7a69b60a191a9d0598e3072db0552e5f7/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76705df226f0a172531d3405fa85689bdf7547f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/76705df226f0a172531d3405fa85689bdf7547f7", "html_url": "https://github.com/rust-lang/rust/commit/76705df226f0a172531d3405fa85689bdf7547f7"}, {"sha": "01386e649265a71d9d91cf9ec138d6f046dc438b", "url": "https://api.github.com/repos/rust-lang/rust/commits/01386e649265a71d9d91cf9ec138d6f046dc438b", "html_url": "https://github.com/rust-lang/rust/commit/01386e649265a71d9d91cf9ec138d6f046dc438b"}], "stats": {"total": 43, "additions": 20, "deletions": 23}, "files": [{"sha": "80c37d5597592de4e873a4876f1b274219c8e837", "filename": "src/tools/linkchecker/main.rs", "status": "modified", "additions": 20, "deletions": 23, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/533ce9a7a69b60a191a9d0598e3072db0552e5f7/src%2Ftools%2Flinkchecker%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/533ce9a7a69b60a191a9d0598e3072db0552e5f7/src%2Ftools%2Flinkchecker%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Flinkchecker%2Fmain.rs?ref=533ce9a7a69b60a191a9d0598e3072db0552e5f7", "patch": "@@ -138,22 +138,6 @@ fn check(cache: &mut Cache,\n         return None;\n     }\n \n-    if file.ends_with(\"std/sys/ext/index.html\") {\n-        return None;\n-    }\n-\n-    if let Some(file) = file.to_str() {\n-        // FIXME(#31948)\n-        if file.contains(\"ParseFloatError\") {\n-            return None;\n-        }\n-        // weird reexports, but this module is on its way out, so chalk it up to\n-        // \"rustdoc weirdness\" and move on from there\n-        if file.contains(\"scoped_tls\") {\n-            return None;\n-        }\n-    }\n-\n     let mut parser = UrlParser::new();\n     parser.base_url(base);\n \n@@ -170,12 +154,24 @@ fn check(cache: &mut Cache,\n \n     // Search for anything that's the regex 'href[ ]*=[ ]*\".*?\"'\n     with_attrs_in_source(&contents, \" href\", |url, i| {\n+        // Ignore external URLs\n+        if url.starts_with(\"http:\") || url.starts_with(\"https:\") ||\n+           url.starts_with(\"javascript:\") || url.starts_with(\"ftp:\") ||\n+           url.starts_with(\"irc:\") || url.starts_with(\"data:\") {\n+            return;\n+        }\n         // Once we've plucked out the URL, parse it using our base url and\n-        // then try to extract a file path. If either of these fail then we\n-        // just keep going.\n+        // then try to extract a file path.\n         let (parsed_url, path) = match url_to_file_path(&parser, url) {\n             Some((url, path)) => (url, PathBuf::from(path)),\n-            None => return,\n+            None => {\n+                *errors = true;\n+                println!(\"{}:{}: invalid link - {}\",\n+                         pretty_file.display(),\n+                         i + 1,\n+                         url);\n+                return;\n+            }\n         };\n \n         // Alright, if we've found a file name then this file had better\n@@ -197,10 +193,11 @@ fn check(cache: &mut Cache,\n                 Ok(res) => res,\n                 Err(LoadError::IOError(err)) => panic!(format!(\"{}\", err)),\n                 Err(LoadError::BrokenRedirect(target, _)) => {\n-                    print!(\"{}:{}: broken redirect to {}\",\n-                           pretty_file.display(),\n-                           i + 1,\n-                           target.display());\n+                    *errors = true;\n+                    println!(\"{}:{}: broken redirect to {}\",\n+                             pretty_file.display(),\n+                             i + 1,\n+                             target.display());\n                     return;\n                 }\n                 Err(LoadError::IsRedirect) => unreachable!(),"}]}