{"sha": "45f14a8c9026b33dc278000a5fc120e9667806ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1ZjE0YThjOTAyNmIzM2RjMjc4MDAwYTVmYzEyMGU5NjY3ODA2ZmY=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2019-07-17T06:19:29Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2019-08-13T20:02:52Z"}, "message": "refactor `len` and `contains` to iterate instead of recurse", "tree": {"sha": "b9249446b7294fe7e47a0f31eb6339ecc3ef627b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9249446b7294fe7e47a0f31eb6339ecc3ef627b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45f14a8c9026b33dc278000a5fc120e9667806ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45f14a8c9026b33dc278000a5fc120e9667806ff", "html_url": "https://github.com/rust-lang/rust/commit/45f14a8c9026b33dc278000a5fc120e9667806ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45f14a8c9026b33dc278000a5fc120e9667806ff/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "070c83d5a96d26240824abdb3c38ecdb860710f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/070c83d5a96d26240824abdb3c38ecdb860710f5", "html_url": "https://github.com/rust-lang/rust/commit/070c83d5a96d26240824abdb3c38ecdb860710f5"}], "stats": {"total": 56, "additions": 16, "deletions": 40}, "files": [{"sha": "ea771d9f20f8b69a60068870ba93060854736233", "filename": "src/librustc_data_structures/tiny_list.rs", "status": "modified", "additions": 16, "deletions": 40, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/45f14a8c9026b33dc278000a5fc120e9667806ff/src%2Flibrustc_data_structures%2Ftiny_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45f14a8c9026b33dc278000a5fc120e9667806ff/src%2Flibrustc_data_structures%2Ftiny_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Ftiny_list.rs?ref=45f14a8c9026b33dc278000a5fc120e9667806ff", "patch": "@@ -20,7 +20,6 @@ pub struct TinyList<T: PartialEq> {\n }\n \n impl<T: PartialEq> TinyList<T> {\n-\n     #[inline]\n     pub fn new() -> TinyList<T> {\n         TinyList {\n@@ -60,20 +59,24 @@ impl<T: PartialEq> TinyList<T> {\n \n     #[inline]\n     pub fn contains(&self, data: &T) -> bool {\n-        if let Some(ref head) = self.head {\n-            head.contains(data)\n-        } else {\n-            false\n+        let mut elem = self.head.as_ref();\n+        while let Some(ref e) = elem {\n+            if &e.data == data {\n+                return true;\n+            }\n+            elem = e.next.as_ref().map(|e| &**e);\n         }\n+        false\n     }\n \n     #[inline]\n     pub fn len(&self) -> usize {\n-        if let Some(ref head) = self.head {\n-            head.len()\n-        } else {\n-            0\n+        let (mut elem, mut count) = (self.head.as_ref(), 0);\n+        while let Some(ref e) = elem {\n+            count += 1;\n+            elem = e.next.as_ref().map(|e| &**e);\n         }\n+        count\n     }\n }\n \n@@ -84,40 +87,13 @@ struct Element<T: PartialEq> {\n }\n \n impl<T: PartialEq> Element<T> {\n-\n     fn remove_next(&mut self, data: &T) -> bool {\n-        let new_next = if let Some(ref mut next) = self.next {\n-            if next.data != *data {\n-                return next.remove_next(data)\n-            } else {\n-                next.next.take()\n-            }\n-        } else {\n-            return false\n+        let new_next = match self.next {\n+            Some(ref mut next) if next.data == *data => next.next.take(),\n+            Some(ref mut next) => return next.remove_next(data),\n+            None => return false,\n         };\n-\n         self.next = new_next;\n-\n         true\n     }\n-\n-    fn len(&self) -> usize {\n-        if let Some(ref next) = self.next {\n-            1 + next.len()\n-        } else {\n-            1\n-        }\n-    }\n-\n-    fn contains(&self, data: &T) -> bool {\n-        if self.data == *data {\n-            return true\n-        }\n-\n-        if let Some(ref next) = self.next {\n-            next.contains(data)\n-        } else {\n-            false\n-        }\n-    }\n }"}]}