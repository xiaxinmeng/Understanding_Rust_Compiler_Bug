{"sha": "db1a274bf54343605c8ac3a38a6c69f7d930192b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiMWEyNzRiZjU0MzQzNjA1YzhhYzNhMzhhNmM2OWY3ZDkzMDE5MmI=", "commit": {"author": {"name": "Fedor Indutny", "email": "fedor.indutny@gmail.com", "date": "2013-05-07T21:01:04Z"}, "committer": {"name": "Fedor Indutny", "email": "fedor.indutny@gmail.com", "date": "2013-05-07T21:04:41Z"}, "message": "io: handle fread() errors\n\nWhen, occasionally, trying to read directory instead of file, `fread()`\nreturns `EISDIR` error. And, considering, absence of error handling,\n`read_whole_stream()` just loops indefinitely.", "tree": {"sha": "c46a9d8f2b73a34032b94df37983c53aba5f8195", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c46a9d8f2b73a34032b94df37983c53aba5f8195"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db1a274bf54343605c8ac3a38a6c69f7d930192b", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db1a274bf54343605c8ac3a38a6c69f7d930192b", "html_url": "https://github.com/rust-lang/rust/commit/db1a274bf54343605c8ac3a38a6c69f7d930192b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db1a274bf54343605c8ac3a38a6c69f7d930192b/comments", "author": {"login": "indutny", "id": 238531, "node_id": "MDQ6VXNlcjIzODUzMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/238531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/indutny", "html_url": "https://github.com/indutny", "followers_url": "https://api.github.com/users/indutny/followers", "following_url": "https://api.github.com/users/indutny/following{/other_user}", "gists_url": "https://api.github.com/users/indutny/gists{/gist_id}", "starred_url": "https://api.github.com/users/indutny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/indutny/subscriptions", "organizations_url": "https://api.github.com/users/indutny/orgs", "repos_url": "https://api.github.com/users/indutny/repos", "events_url": "https://api.github.com/users/indutny/events{/privacy}", "received_events_url": "https://api.github.com/users/indutny/received_events", "type": "User", "site_admin": false}, "committer": {"login": "indutny", "id": 238531, "node_id": "MDQ6VXNlcjIzODUzMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/238531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/indutny", "html_url": "https://github.com/indutny", "followers_url": "https://api.github.com/users/indutny/followers", "following_url": "https://api.github.com/users/indutny/following{/other_user}", "gists_url": "https://api.github.com/users/indutny/gists{/gist_id}", "starred_url": "https://api.github.com/users/indutny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/indutny/subscriptions", "organizations_url": "https://api.github.com/users/indutny/orgs", "repos_url": "https://api.github.com/users/indutny/repos", "events_url": "https://api.github.com/users/indutny/events{/privacy}", "received_events_url": "https://api.github.com/users/indutny/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "452817b854868d934643cc9e0a8848404ea4ee10", "url": "https://api.github.com/repos/rust-lang/rust/commits/452817b854868d934643cc9e0a8848404ea4ee10", "html_url": "https://github.com/rust-lang/rust/commit/452817b854868d934643cc9e0a8848404ea4ee10"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "64b69a7928b5fd0eec925bff45bc7d68d8532fc1", "filename": "src/libcore/io.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/db1a274bf54343605c8ac3a38a6c69f7d930192b/src%2Flibcore%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db1a274bf54343605c8ac3a38a6c69f7d930192b/src%2Flibcore%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fio.rs?ref=db1a274bf54343605c8ac3a38a6c69f7d930192b", "patch": "@@ -868,9 +868,19 @@ impl Reader for *libc::FILE {\n                 assert!(buf_len >= len);\n \n                 let count = libc::fread(buf_p as *mut c_void, 1u as size_t,\n-                                        len as size_t, *self);\n+                                        len as size_t, *self) as uint;\n+                if count < len {\n+                  match libc::ferror(*self) {\n+                    0 => (),\n+                    _ => {\n+                      error!(\"error reading buffer\");\n+                      error!(\"%s\", os::last_os_error());\n+                      fail!();\n+                    }\n+                  }\n+                }\n \n-                count as uint\n+                count\n             }\n         }\n     }"}]}