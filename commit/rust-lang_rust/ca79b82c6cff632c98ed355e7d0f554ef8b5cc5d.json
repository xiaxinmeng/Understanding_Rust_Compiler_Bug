{"sha": "ca79b82c6cff632c98ed355e7d0f554ef8b5cc5d", "node_id": "C_kwDOAAsO6NoAKGNhNzliODJjNmNmZjYzMmM5OGVkMzU1ZTdkMGY1NTRlZjhiNWNjNWQ", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-04-03T15:23:08Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-04-03T15:25:06Z"}, "message": "Never consider int and float vars for `FnPtr` candidates\n\nThis solves a regression where `0.0.cmp()` was ambiguous when a custom\ntrait with a `cmp` method was in scope.\n\nFOr integers it shouldn't be a problem in practice so I wasn't able to\nadd a test.", "tree": {"sha": "8c72de4afd01f3cbf4ed0be8904c8426290631ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c72de4afd01f3cbf4ed0be8904c8426290631ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca79b82c6cff632c98ed355e7d0f554ef8b5cc5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca79b82c6cff632c98ed355e7d0f554ef8b5cc5d", "html_url": "https://github.com/rust-lang/rust/commit/ca79b82c6cff632c98ed355e7d0f554ef8b5cc5d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca79b82c6cff632c98ed355e7d0f554ef8b5cc5d/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0eed58a1e78eb1a25bb54076e4b0f7ea5ff7401", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0eed58a1e78eb1a25bb54076e4b0f7ea5ff7401", "html_url": "https://github.com/rust-lang/rust/commit/d0eed58a1e78eb1a25bb54076e4b0f7ea5ff7401"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "090312338e00967e6496a2d141c4756fb0379f7e", "filename": "compiler/rustc_trait_selection/src/traits/select/candidate_assembly.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ca79b82c6cff632c98ed355e7d0f554ef8b5cc5d/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca79b82c6cff632c98ed355e7d0f554ef8b5cc5d/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs?ref=ca79b82c6cff632c98ed355e7d0f554ef8b5cc5d", "patch": "@@ -998,8 +998,14 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n             | ty::Alias(..)\n             | ty::Param(..)\n             | ty::Bound(..)\n-            | ty::Error(_) => {}\n-            ty::Infer(_) => {\n+            | ty::Error(_)\n+            | ty::Infer(\n+                ty::InferTy::IntVar(_)\n+                | ty::InferTy::FloatVar(_)\n+                | ty::InferTy::FreshIntTy(_)\n+                | ty::InferTy::FreshFloatTy(_),\n+            ) => {}\n+            ty::Infer(ty::InferTy::TyVar(_) | ty::InferTy::FreshTy(_)) => {\n                 candidates.ambiguous = true;\n             }\n         }"}, {"sha": "b58e62536d604edc425ec6e620d7acd9f6a55b2f", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ca79b82c6cff632c98ed355e7d0f554ef8b5cc5d/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca79b82c6cff632c98ed355e7d0f554ef8b5cc5d/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=ca79b82c6cff632c98ed355e7d0f554ef8b5cc5d", "patch": "@@ -177,14 +177,14 @@ struct TraitObligationStack<'prev, 'tcx> {\n }\n \n struct SelectionCandidateSet<'tcx> {\n-    // A list of candidates that definitely apply to the current\n-    // obligation (meaning: types unify).\n+    /// A list of candidates that definitely apply to the current\n+    /// obligation (meaning: types unify).\n     vec: Vec<SelectionCandidate<'tcx>>,\n \n-    // If `true`, then there were candidates that might or might\n-    // not have applied, but we couldn't tell. This occurs when some\n-    // of the input types are type variables, in which case there are\n-    // various \"builtin\" rules that might or might not trigger.\n+    /// If `true`, then there were candidates that might or might\n+    /// not have applied, but we couldn't tell. This occurs when some\n+    /// of the input types are type variables, in which case there are\n+    /// various \"builtin\" rules that might or might not trigger.\n     ambiguous: bool,\n }\n "}, {"sha": "eec7da044c0d50c089051ca311707d4410e5ed5f", "filename": "tests/ui/fn/fn-ptr-trait-int-float-infer-var.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ca79b82c6cff632c98ed355e7d0f554ef8b5cc5d/tests%2Fui%2Ffn%2Ffn-ptr-trait-int-float-infer-var.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca79b82c6cff632c98ed355e7d0f554ef8b5cc5d/tests%2Fui%2Ffn%2Ffn-ptr-trait-int-float-infer-var.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffn%2Ffn-ptr-trait-int-float-infer-var.rs?ref=ca79b82c6cff632c98ed355e7d0f554ef8b5cc5d", "patch": "@@ -0,0 +1,10 @@\n+// check-pass\n+trait MyCmp {\n+    fn cmp(&self) {}\n+}\n+impl MyCmp for f32 {}\n+\n+fn main() {\n+    // Ensure that `impl<F: FnPtr> Ord for F` is never considered for int and float infer vars.\n+    0.0.cmp();\n+}"}]}