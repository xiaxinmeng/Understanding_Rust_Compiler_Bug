{"sha": "24af94b4748593dc7450b0c7d972d774c601e677", "node_id": "C_kwDOAAsO6NoAKDI0YWY5NGI0NzQ4NTkzZGM3NDUwYjBjN2Q5NzJkNzc0YzYwMWU2Nzc", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-04-11T22:18:49Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-04-11T22:19:40Z"}, "message": "fix: Unset test feature in rustc source crates", "tree": {"sha": "86900268c180ff45bc1534b6c95e4746b87113c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86900268c180ff45bc1534b6c95e4746b87113c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24af94b4748593dc7450b0c7d972d774c601e677", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24af94b4748593dc7450b0c7d972d774c601e677", "html_url": "https://github.com/rust-lang/rust/commit/24af94b4748593dc7450b0c7d972d774c601e677", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24af94b4748593dc7450b0c7d972d774c601e677/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b90df7997d891d89e658a7781cc4a52fba38aa40", "url": "https://api.github.com/repos/rust-lang/rust/commits/b90df7997d891d89e658a7781cc4a52fba38aa40", "html_url": "https://github.com/rust-lang/rust/commit/b90df7997d891d89e658a7781cc4a52fba38aa40"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "8c08fdcd2ea3814379b8bfba63a4cef6084240f4", "filename": "crates/hir_expand/src/db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24af94b4748593dc7450b0c7d972d774c601e677/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24af94b4748593dc7450b0c7d972d774c601e677/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fdb.rs?ref=24af94b4748593dc7450b0c7d972d774c601e677", "patch": "@@ -263,7 +263,7 @@ fn parse_macro_expansion(\n                 .collect::<Vec<_>>()\n                 .join(\"\\n\");\n \n-        tracing::warn!(\n+        tracing::debug!(\n             \"fail on macro_parse: (reason: {:?} macro_call: {:#}) parents: {}\",\n             err,\n             node.value,"}, {"sha": "3ceb04693940be56d41e361671568f6adb591a53", "filename": "crates/project_model/src/workspace.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/24af94b4748593dc7450b0c7d972d774c601e677/crates%2Fproject_model%2Fsrc%2Fworkspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24af94b4748593dc7450b0c7d972d774c601e677/crates%2Fproject_model%2Fsrc%2Fworkspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fworkspace.rs?ref=24af94b4748593dc7450b0c7d972d774c601e677", "patch": "@@ -663,6 +663,7 @@ fn cargo_to_crate_graph(\n                 load,\n                 &mut crate_graph,\n                 &cfg_options,\n+                override_cfg,\n                 load_proc_macro,\n                 &mut pkg_to_lib_crate,\n                 &public_deps,\n@@ -723,6 +724,7 @@ fn handle_rustc_crates(\n     load: &mut dyn FnMut(&AbsPath) -> Option<FileId>,\n     crate_graph: &mut CrateGraph,\n     cfg_options: &CfgOptions,\n+    override_cfg: &CfgOverrides,\n     load_proc_macro: &mut dyn FnMut(&str, &AbsPath) -> Vec<ProcMacro>,\n     pkg_to_lib_crate: &mut FxHashMap<la_arena::Idx<crate::PackageData>, CrateId>,\n     public_deps: &SysrootPublicDeps,\n@@ -749,6 +751,28 @@ fn handle_rustc_crates(\n             for dep in &rustc_workspace[pkg].dependencies {\n                 queue.push_back(dep.pkg);\n             }\n+\n+            let mut cfg_options = cfg_options;\n+            let mut replaced_cfg_options;\n+\n+            let overrides = match override_cfg {\n+                CfgOverrides::Wildcard(cfg_diff) => Some(cfg_diff),\n+                CfgOverrides::Selective(cfg_overrides) => cfg_overrides.get(&cargo[pkg].name),\n+            };\n+\n+            if let Some(overrides) = overrides {\n+                // FIXME: this is sort of a hack to deal with #![cfg(not(test))] vanishing such as seen\n+                // in ed25519_dalek (#7243), and libcore (#9203) (although you only hit that one while\n+                // working on rust-lang/rust as that's the only time it appears outside sysroot).\n+                //\n+                // A more ideal solution might be to reanalyze crates based on where the cursor is and\n+                // figure out the set of cfgs that would have to apply to make it active.\n+\n+                replaced_cfg_options = cfg_options.clone();\n+                replaced_cfg_options.apply_diff(overrides.clone());\n+                cfg_options = &replaced_cfg_options;\n+            };\n+\n             for &tgt in rustc_workspace[pkg].targets.iter() {\n                 if rustc_workspace[tgt].kind != TargetKind::Lib {\n                     continue;"}, {"sha": "e305212165ca4c0fe1b5088d64967d13fe2a7933", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24af94b4748593dc7450b0c7d972d774c601e677/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24af94b4748593dc7450b0c7d972d774c601e677/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=24af94b4748593dc7450b0c7d972d774c601e677", "patch": "@@ -190,7 +190,7 @@ impl GlobalState {\n         // NOTE: don't count blocking select! call as a loop-turn time\n         let _p = profile::span(\"GlobalState::handle_event\");\n \n-        tracing::info!(\"handle_event({:?})\", event);\n+        tracing::debug!(\"handle_event({:?})\", event);\n         let task_queue_len = self.task_pool.handle.len();\n         if task_queue_len > 0 {\n             tracing::info!(\"task queue len: {}\", task_queue_len);"}]}