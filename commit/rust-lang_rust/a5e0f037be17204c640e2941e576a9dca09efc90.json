{"sha": "a5e0f037be17204c640e2941e576a9dca09efc90", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1ZTBmMDM3YmUxNzIwNGM2NDBlMjk0MWU1NzZhOWRjYTA5ZWZjOTA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-19T07:48:25Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-19T08:04:59Z"}, "message": "rustdoc: Add path_pass for recording full paths to mods", "tree": {"sha": "7680033969abfcdac62464c75104ce823aaca6e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7680033969abfcdac62464c75104ce823aaca6e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5e0f037be17204c640e2941e576a9dca09efc90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5e0f037be17204c640e2941e576a9dca09efc90", "html_url": "https://github.com/rust-lang/rust/commit/a5e0f037be17204c640e2941e576a9dca09efc90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5e0f037be17204c640e2941e576a9dca09efc90/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c54f53b9d9f67dd4596aac36e59fa6e5d725aaf5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c54f53b9d9f67dd4596aac36e59fa6e5d725aaf5", "html_url": "https://github.com/rust-lang/rust/commit/c54f53b9d9f67dd4596aac36e59fa6e5d725aaf5"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "9bcdde561c4e342f45e2014cc48bdedc4db4b3a3", "filename": "src/rustdoc/path_pass.rs", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/a5e0f037be17204c640e2941e576a9dca09efc90/src%2Frustdoc%2Fpath_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5e0f037be17204c640e2941e576a9dca09efc90/src%2Frustdoc%2Fpath_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fpath_pass.rs?ref=a5e0f037be17204c640e2941e576a9dca09efc90", "patch": "@@ -0,0 +1,49 @@\n+#[doc = \"Records the full path to items\"];\n+\n+export mk_pass;\n+\n+fn mk_pass() -> pass { run }\n+\n+type ctxt = {\n+    srv: astsrv::srv,\n+    mutable path: [str]\n+};\n+\n+fn run(srv: astsrv::srv, doc: doc::cratedoc) -> doc::cratedoc {\n+    let ctxt = {\n+        srv: srv,\n+        mutable path: []\n+    };\n+    let fold = fold::fold({\n+        fold_mod: fn~(\n+            f: fold::fold<ctxt>,\n+            d: doc::moddoc\n+        ) -> doc::moddoc {\n+            fold_mod(f, d)\n+        }\n+        with *fold::default_seq_fold(ctxt)\n+    });\n+    fold.fold_crate(fold, doc)\n+}\n+\n+fn fold_mod(fold: fold::fold<ctxt>, doc: doc::moddoc) -> doc::moddoc {\n+    let is_topmod = doc.id == rustc::syntax::ast::crate_node_id;\n+\n+    if !is_topmod { vec::push(fold.ctxt.path, doc.name); }\n+    let doc = fold::default_seq_fold_mod(fold, doc);\n+    if !is_topmod { vec::pop(fold.ctxt.path); }\n+    ~{\n+        path: fold.ctxt.path\n+        with *doc\n+    }\n+}\n+\n+#[test]\n+fn should_record_mod_paths() {\n+    let source = \"mod a { mod b { mod c { } } mod d { mod e { } } }\";\n+    let srv = astsrv::mk_srv_from_str(source);\n+    let doc = extract::from_srv(srv, \"\");\n+    let doc = run(srv, doc);\n+    assert doc.topmod.mods[0].mods[0].mods[0].path == [\"a\", \"b\"];\n+    assert doc.topmod.mods[0].mods[1].mods[0].path == [\"a\", \"d\"];\n+}\n\\ No newline at end of file"}, {"sha": "12a8733a9b2b111cbe84d70904bdbc9ae7efa700", "filename": "src/rustdoc/rustdoc.rc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a5e0f037be17204c640e2941e576a9dca09efc90/src%2Frustdoc%2Frustdoc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/a5e0f037be17204c640e2941e576a9dca09efc90/src%2Frustdoc%2Frustdoc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Frustdoc.rc?ref=a5e0f037be17204c640e2941e576a9dca09efc90", "patch": "@@ -18,6 +18,7 @@ mod attr_parser;\n mod doc;\n mod gen;\n mod fold;\n+mod path_pass;\n mod attr_pass;\n mod tystr_pass;\n mod prune_undoc_pass;"}, {"sha": "b1314ecb39b331cbf2cbd03ea873d15bb61ec880", "filename": "src/rustdoc/rustdoc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a5e0f037be17204c640e2941e576a9dca09efc90/src%2Frustdoc%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5e0f037be17204c640e2941e576a9dca09efc90/src%2Frustdoc%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Frustdoc.rs?ref=a5e0f037be17204c640e2941e576a9dca09efc90", "patch": "@@ -93,6 +93,7 @@ fn run(source_file: str) {\n     let doc = extract::from_srv(srv, default_name);\n     run_passes(srv, doc, [\n         attr_pass::mk_pass(),\n+        path_pass::mk_pass(),\n         // FIXME: This pass should be optional\n         prune_undoc_pass::mk_pass(),\n         tystr_pass::mk_pass(),"}]}