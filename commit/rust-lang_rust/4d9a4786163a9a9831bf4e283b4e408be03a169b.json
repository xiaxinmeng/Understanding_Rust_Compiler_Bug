{"sha": "4d9a4786163a9a9831bf4e283b4e408be03a169b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkOWE0Nzg2MTYzYTlhOTgzMWJmNGUyODNiNGU0MDhiZTAzYTE2OWI=", "commit": {"author": {"name": "Stuart Pernsteiner", "email": "spernsteiner@mozilla.com", "date": "2014-08-29T19:46:04Z"}, "committer": {"name": "Stuart Pernsteiner", "email": "spernsteiner@mozilla.com", "date": "2014-09-05T16:18:57Z"}, "message": "add workaround for mingw `ld --force-exe-suffix` behavior", "tree": {"sha": "e1d42ddf0a71df13a8c38331d4e7f2e2d93a9f01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1d42ddf0a71df13a8c38331d4e7f2e2d93a9f01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d9a4786163a9a9831bf4e283b4e408be03a169b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d9a4786163a9a9831bf4e283b4e408be03a169b", "html_url": "https://github.com/rust-lang/rust/commit/4d9a4786163a9a9831bf4e283b4e408be03a169b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d9a4786163a9a9831bf4e283b4e408be03a169b/comments", "author": {"login": "spernsteiner", "id": 3031136, "node_id": "MDQ6VXNlcjMwMzExMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3031136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spernsteiner", "html_url": "https://github.com/spernsteiner", "followers_url": "https://api.github.com/users/spernsteiner/followers", "following_url": "https://api.github.com/users/spernsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/spernsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/spernsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spernsteiner/subscriptions", "organizations_url": "https://api.github.com/users/spernsteiner/orgs", "repos_url": "https://api.github.com/users/spernsteiner/repos", "events_url": "https://api.github.com/users/spernsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/spernsteiner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spernsteiner", "id": 3031136, "node_id": "MDQ6VXNlcjMwMzExMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3031136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spernsteiner", "html_url": "https://github.com/spernsteiner", "followers_url": "https://api.github.com/users/spernsteiner/followers", "following_url": "https://api.github.com/users/spernsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/spernsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/spernsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spernsteiner/subscriptions", "organizations_url": "https://api.github.com/users/spernsteiner/orgs", "repos_url": "https://api.github.com/users/spernsteiner/repos", "events_url": "https://api.github.com/users/spernsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/spernsteiner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b676fb7603cd2aa4e0506cb5b67d48c9da1123f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b676fb7603cd2aa4e0506cb5b67d48c9da1123f", "html_url": "https://github.com/rust-lang/rust/commit/1b676fb7603cd2aa4e0506cb5b67d48c9da1123f"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "506d3585016964f2bb6d08271affac26ae731fd9", "filename": "src/librustc/back/write.rs", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/4d9a4786163a9a9831bf4e283b4e408be03a169b/src%2Flibrustc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d9a4786163a9a9831bf4e283b4e408be03a169b/src%2Flibrustc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Fwrite.rs?ref=4d9a4786163a9a9831bf4e283b4e408be03a169b", "patch": "@@ -607,6 +607,19 @@ pub fn run_passes(sess: &Session,\n     };\n \n     let link_obj = |output_path: &Path| {\n+        // Some builds of MinGW GCC will pass --force-exe-suffix to ld, which\n+        // will automatically add a .exe extension if the extension is not\n+        // already .exe or .dll.  To ensure consistent behavior on Windows, we\n+        // add the .exe suffix explicitly and then rename the output file to\n+        // the desired path.  This will give the correct behavior whether or\n+        // not GCC adds --force-exe-suffix.\n+        let windows_output_path =\n+            if sess.targ_cfg.os == abi::OsWindows {\n+                Some(output_path.with_extension(\"o.exe\"))\n+            } else {\n+                None\n+            };\n+\n         let pname = get_cc_prog(sess);\n         let mut cmd = Command::new(pname.as_slice());\n \n@@ -617,7 +630,9 @@ pub fn run_passes(sess: &Session,\n             cmd.arg(crate_output.with_extension(format!(\"{}.o\", index).as_slice()));\n         }\n \n-        cmd.arg(\"-r\").arg(\"-o\").arg(output_path);\n+        cmd.arg(\"-r\")\n+           .arg(\"-o\")\n+           .arg(windows_output_path.as_ref().unwrap_or(output_path));\n \n         if (sess.opts.debugging_opts & config::PRINT_LINK_ARGS) != 0 {\n             println!(\"{}\", &cmd);\n@@ -635,6 +650,15 @@ pub fn run_passes(sess: &Session,\n                 sess.abort_if_errors();\n             },\n         }\n+\n+        match windows_output_path {\n+            Some(ref windows_path) => {\n+                fs::rename(windows_path, output_path).unwrap();\n+            },\n+            None => {\n+                // The file is already named according to `output_path`.\n+            }\n+        }\n     };\n \n     // Flag to indicate whether the user explicitly requested bitcode."}]}