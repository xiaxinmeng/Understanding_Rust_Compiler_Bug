{"sha": "f408b1caa3acdaf7b05498963e70da7f662bf2e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0MDhiMWNhYTNhY2RhZjdiMDU0OTg5NjNlNzBkYTdmNjYyYmYyZTM=", "commit": {"author": {"name": "gfreezy", "email": "gfreezy@gmail.com", "date": "2019-01-01T14:10:11Z"}, "committer": {"name": "gfreezy", "email": "gfreezy@gmail.com", "date": "2019-01-01T14:10:11Z"}, "message": "complete \"use crate\" for \"use cr\" too", "tree": {"sha": "d0878a66e5dd011ef84c191c49f189e754ef155c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0878a66e5dd011ef84c191c49f189e754ef155c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f408b1caa3acdaf7b05498963e70da7f662bf2e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f408b1caa3acdaf7b05498963e70da7f662bf2e3", "html_url": "https://github.com/rust-lang/rust/commit/f408b1caa3acdaf7b05498963e70da7f662bf2e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f408b1caa3acdaf7b05498963e70da7f662bf2e3/comments", "author": {"login": "gfreezy", "id": 510012, "node_id": "MDQ6VXNlcjUxMDAxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/510012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gfreezy", "html_url": "https://github.com/gfreezy", "followers_url": "https://api.github.com/users/gfreezy/followers", "following_url": "https://api.github.com/users/gfreezy/following{/other_user}", "gists_url": "https://api.github.com/users/gfreezy/gists{/gist_id}", "starred_url": "https://api.github.com/users/gfreezy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gfreezy/subscriptions", "organizations_url": "https://api.github.com/users/gfreezy/orgs", "repos_url": "https://api.github.com/users/gfreezy/repos", "events_url": "https://api.github.com/users/gfreezy/events{/privacy}", "received_events_url": "https://api.github.com/users/gfreezy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gfreezy", "id": 510012, "node_id": "MDQ6VXNlcjUxMDAxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/510012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gfreezy", "html_url": "https://github.com/gfreezy", "followers_url": "https://api.github.com/users/gfreezy/followers", "following_url": "https://api.github.com/users/gfreezy/following{/other_user}", "gists_url": "https://api.github.com/users/gfreezy/gists{/gist_id}", "starred_url": "https://api.github.com/users/gfreezy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gfreezy/subscriptions", "organizations_url": "https://api.github.com/users/gfreezy/orgs", "repos_url": "https://api.github.com/users/gfreezy/repos", "events_url": "https://api.github.com/users/gfreezy/events{/privacy}", "received_events_url": "https://api.github.com/users/gfreezy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc2d7d1e1f03faa4566dea8b60eca860bcf9eb04", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc2d7d1e1f03faa4566dea8b60eca860bcf9eb04", "html_url": "https://github.com/rust-lang/rust/commit/fc2d7d1e1f03faa4566dea8b60eca860bcf9eb04"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "a6fbd1e811a499909f83d89e00c304a4bea8840c", "filename": "crates/ra_analysis/src/completion/complete_keyword.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f408b1caa3acdaf7b05498963e70da7f662bf2e3/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f408b1caa3acdaf7b05498963e70da7f662bf2e3/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs?ref=f408b1caa3acdaf7b05498963e70da7f662bf2e3", "patch": "@@ -21,9 +21,20 @@ pub(super) fn complete_expr_keyword(acc: &mut Completions, ctx: &CompletionConte\n \n     // complete keyword \"crate\" in use stmt\n     if let (Some(use_item), None) = (&ctx.use_item_syntax, &ctx.path_prefix) {\n-        if use_item.use_tree().is_none() {\n+        let mut complete_crate = false;\n+        let use_tree = use_item.use_tree();\n+        if let Some(use_tree) = use_tree {\n+            let tree_str = use_tree.syntax().text().to_string();\n+            if tree_str != \"crate\" && \"crate\".starts_with(&tree_str) {\n+                complete_crate = true;\n+            }\n+        } else {\n+            complete_crate = true;\n+        }\n+        if complete_crate {\n             CompletionItem::new(CompletionKind::Keyword, \"crate\")\n                 .kind(CompletionItemKind::Keyword)\n+                .lookup_by(\"crate\")\n                 .add_to(acc);\n         }\n     }\n@@ -280,13 +291,14 @@ mod tests {\n         )\n     }\n \n+    #[test]\n     fn completes_crate_in_use_stmt() {\n         check_keyword_completion(\n             r\"\n             use <|>\n             \",\n             r#\"\n-            crate\n+            crate \"crate\"\n             \"#,\n         );\n         // No completion: lambda isolates control flow"}]}