{"sha": "db7ad648e7e17eff0f66de2c25c4d581982f981f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiN2FkNjQ4ZTdlMTdlZmYwZjY2ZGUyYzI1YzRkNTgxOTgyZjk4MWY=", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-04-25T14:07:01Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-04-25T14:18:15Z"}, "message": "Fix ICE checking for feature gated const fn", "tree": {"sha": "091355b775d6d8414c5e7b834522bd0d4419c072", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/091355b775d6d8414c5e7b834522bd0d4419c072"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db7ad648e7e17eff0f66de2c25c4d581982f981f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nComment: Created with Krypton\n\niF4EABYKAAYFAmCFejEACgkQ2lnoZDo37Qb9SQD+LuioyMTD8JJdzL2aw/dbCUok\nHDYXs/1SrYl9cdBXMrMBAKBMoqgKq6UokHD/D4zglu7yFIV7k6bKAzZrJH3FPPkD\n=RsjV\n-----END PGP SIGNATURE-----", "payload": "tree 091355b775d6d8414c5e7b834522bd0d4419c072\nparent 08e36d7527c6f65b8f537c4644c762efe09880c5\nauthor Jason Newcomb <jsnewcomb@pm.me> 1619359621 -0400\ncommitter Jason Newcomb <jsnewcomb@pm.me> 1619360295 -0400\n\nFix ICE checking for feature gated const fn\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db7ad648e7e17eff0f66de2c25c4d581982f981f", "html_url": "https://github.com/rust-lang/rust/commit/db7ad648e7e17eff0f66de2c25c4d581982f981f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db7ad648e7e17eff0f66de2c25c4d581982f981f/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08e36d7527c6f65b8f537c4644c762efe09880c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/08e36d7527c6f65b8f537c4644c762efe09880c5", "html_url": "https://github.com/rust-lang/rust/commit/08e36d7527c6f65b8f537c4644c762efe09880c5"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "a08dcf19e5b51481398f933bd35f1bf4401f2ae4", "filename": "clippy_utils/src/qualify_min_const_fn.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/db7ad648e7e17eff0f66de2c25c4d581982f981f/clippy_utils%2Fsrc%2Fqualify_min_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db7ad648e7e17eff0f66de2c25c4d581982f981f/clippy_utils%2Fsrc%2Fqualify_min_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fqualify_min_const_fn.rs?ref=db7ad648e7e17eff0f66de2c25c4d581982f981f", "patch": "@@ -364,7 +364,7 @@ fn check_terminator(\n \n fn is_const_fn(tcx: TyCtxt<'_>, def_id: DefId, msrv: Option<&RustcVersion>) -> bool {\n     rustc_mir::const_eval::is_const_fn(tcx, def_id)\n-        && if let Some(const_stab) = tcx.lookup_const_stability(def_id) {\n+        && tcx.lookup_const_stability(def_id).map_or(true, |const_stab| {\n             if let rustc_attr::StabilityLevel::Stable { since } = const_stab.level {\n                 // Checking MSRV is manually necessary because `rustc` has no such concept. This entire\n                 // function could be removed if `rustc` provided a MSRV-aware version of `is_const_fn`.\n@@ -375,10 +375,8 @@ fn is_const_fn(tcx: TyCtxt<'_>, def_id: DefId, msrv: Option<&RustcVersion>) -> b\n                         .expect(\"`rustc_attr::StabilityLevel::Stable::since` is ill-formatted\"),\n                 )\n             } else {\n-                // `rustc_mir::const_eval::is_const_fn` should return false for unstably const functions.\n-                unreachable!();\n+                // Unstable const fn with the feature enabled.\n+                msrv.is_none()\n             }\n-        } else {\n-            true\n-        }\n+        })\n }"}, {"sha": "ca563ba097851b3b8a005ec203fcac9480e43aea", "filename": "tests/ui/crashes/ice-7126.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/db7ad648e7e17eff0f66de2c25c4d581982f981f/tests%2Fui%2Fcrashes%2Fice-7126.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db7ad648e7e17eff0f66de2c25c4d581982f981f/tests%2Fui%2Fcrashes%2Fice-7126.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-7126.rs?ref=db7ad648e7e17eff0f66de2c25c4d581982f981f", "patch": "@@ -0,0 +1,14 @@\n+// This test requires a feature gated const fn and will stop working in the future.\n+\n+#![feature(const_btree_new)]\n+\n+use std::collections::BTreeMap;\n+\n+struct Foo(BTreeMap<i32, i32>);\n+impl Foo {\n+    fn new() -> Self {\n+        Self(BTreeMap::new())\n+    }\n+}\n+\n+fn main() {}"}]}