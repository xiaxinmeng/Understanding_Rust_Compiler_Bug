{"sha": "29bf389034db9a0de4ec2dbd7492c1f75caf4a60", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5YmYzODkwMzRkYjlhMGRlNGVjMmRiZDc0OTJjMWY3NWNhZjRhNjA=", "commit": {"author": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-18T21:15:14Z"}, "committer": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-19T20:12:18Z"}, "message": "Actually fix at_ts doc comment (committed wrong file :P)", "tree": {"sha": "fe34e70340039c9f0b7105b0f49d995c9e28f114", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe34e70340039c9f0b7105b0f49d995c9e28f114"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29bf389034db9a0de4ec2dbd7492c1f75caf4a60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29bf389034db9a0de4ec2dbd7492c1f75caf4a60", "html_url": "https://github.com/rust-lang/rust/commit/29bf389034db9a0de4ec2dbd7492c1f75caf4a60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29bf389034db9a0de4ec2dbd7492c1f75caf4a60/comments", "author": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "012537bd6cdf2348dc7bc4ec89c8ecbb9578f5b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/012537bd6cdf2348dc7bc4ec89c8ecbb9578f5b3", "html_url": "https://github.com/rust-lang/rust/commit/012537bd6cdf2348dc7bc4ec89c8ecbb9578f5b3"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "02421def1600bd465a9ce7ea2844b049eb87f6c9", "filename": "crates/ra_syntax/src/parser_api.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29bf389034db9a0de4ec2dbd7492c1f75caf4a60/crates%2Fra_syntax%2Fsrc%2Fparser_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29bf389034db9a0de4ec2dbd7492c1f75caf4a60/crates%2Fra_syntax%2Fsrc%2Fparser_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparser_api.rs?ref=29bf389034db9a0de4ec2dbd7492c1f75caf4a60", "patch": "@@ -36,7 +36,7 @@ impl<'t> Parser<'t> {\n         self.current() == kind\n     }\n \n-    /// Checks if the current token is `kind`.\n+    /// Checks if the current token is in `kinds`.\n     pub(crate) fn at_ts(&self, kinds: TokenSet) -> bool {\n         kinds.contains(self.current())\n     }"}]}