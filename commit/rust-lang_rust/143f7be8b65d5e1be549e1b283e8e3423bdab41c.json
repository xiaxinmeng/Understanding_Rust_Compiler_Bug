{"sha": "143f7be8b65d5e1be549e1b283e8e3423bdab41c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0M2Y3YmU4YjY1ZDVlMWJlNTQ5ZTFiMjgzZThlMzQyM2JkYWI0MWM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-04-10T12:35:28Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-04-11T15:36:52Z"}, "message": "Remove strings fulfilled with whitespaces in code block headers", "tree": {"sha": "cbb1a20f32ed000ec153c41f04c464fe580d6371", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cbb1a20f32ed000ec153c41f04c464fe580d6371"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/143f7be8b65d5e1be549e1b283e8e3423bdab41c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/143f7be8b65d5e1be549e1b283e8e3423bdab41c", "html_url": "https://github.com/rust-lang/rust/commit/143f7be8b65d5e1be549e1b283e8e3423bdab41c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/143f7be8b65d5e1be549e1b283e8e3423bdab41c/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4aecf52dba643bf938a572d506995c5cad4602e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4aecf52dba643bf938a572d506995c5cad4602e", "html_url": "https://github.com/rust-lang/rust/commit/d4aecf52dba643bf938a572d506995c5cad4602e"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "c59101cc779968eea9f7f7f3e772f3359ac6e401", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/143f7be8b65d5e1be549e1b283e8e3423bdab41c/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/143f7be8b65d5e1be549e1b283e8e3423bdab41c/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=143f7be8b65d5e1be549e1b283e8e3423bdab41c", "patch": "@@ -469,28 +469,28 @@ impl LangString {\n         );\n \n         for token in tokens {\n-            match token {\n+            match token.trim() {\n                 \"\" => {},\n                 \"should_panic\" => {\n                     data.should_panic = true;\n                     seen_rust_tags = seen_other_tags == false;\n                 }\n-                \"no_run\" => { data.no_run = true; seen_rust_tags = seen_other_tags == false; }\n-                \"ignore\" => { data.ignore = true; seen_rust_tags = seen_other_tags == false; }\n+                \"no_run\" => { data.no_run = true; seen_rust_tags = !seen_other_tags; }\n+                \"ignore\" => { data.ignore = true; seen_rust_tags = !seen_other_tags; }\n                 \"rust\" => { data.rust = true; seen_rust_tags = true; }\n                 \"test_harness\" => {\n                     data.test_harness = true;\n-                    seen_rust_tags = seen_other_tags == false || seen_rust_tags == true;\n+                    seen_rust_tags = !seen_other_tags || seen_rust_tags;\n                 }\n                 \"compile_fail\" if allow_compile_fail => {\n                     data.compile_fail = true;\n-                    seen_rust_tags = seen_other_tags == false || seen_rust_tags == true;\n+                    seen_rust_tags = !seen_other_tags || seen_rust_tags;\n                     data.no_run = true;\n                 }\n                 x if allow_error_code_check && x.starts_with(\"E\") && x.len() == 5 => {\n                     if let Ok(_) = x[1..].parse::<u32>() {\n                         data.error_codes.push(x.to_owned());\n-                        seen_rust_tags = seen_other_tags == false || seen_rust_tags == true;\n+                        seen_rust_tags = !seen_other_tags || seen_rust_tags;\n                     } else {\n                         seen_other_tags = true;\n                     }\n@@ -680,6 +680,7 @@ mod tests {\n         t(\"{.example .rust}\",      false,        false,  false,  true,  false, false, Vec::new());\n         t(\"{.test_harness .rust}\", false,        false,  false,  true,  true,  false, Vec::new());\n         t(\"text, no_run\",          false,        true,   false,  false, false, false, Vec::new());\n+        t(\"text,no_run\",           false,        true,   false,  false, false, false, Vec::new());\n     }\n \n     #[test]"}]}