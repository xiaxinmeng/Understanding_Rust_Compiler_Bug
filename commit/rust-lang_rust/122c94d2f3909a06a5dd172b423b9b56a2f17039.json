{"sha": "122c94d2f3909a06a5dd172b423b9b56a2f17039", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyMmM5NGQyZjM5MDlhMDZhNWRkMTcyYjQyM2I5YjU2YTJmMTcwMzk=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2014-02-07T23:46:25Z"}, "committer": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2014-02-08T06:31:51Z"}, "message": "Implement BytesContainer for MaybeOwned", "tree": {"sha": "eef34be7c31f29664de6e3212a69052f3030a9ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eef34be7c31f29664de6e3212a69052f3030a9ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/122c94d2f3909a06a5dd172b423b9b56a2f17039", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/122c94d2f3909a06a5dd172b423b9b56a2f17039", "html_url": "https://github.com/rust-lang/rust/commit/122c94d2f3909a06a5dd172b423b9b56a2f17039", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/122c94d2f3909a06a5dd172b423b9b56a2f17039/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28467f5d197d1455e922711a28ea4a19702dbda9", "url": "https://api.github.com/repos/rust-lang/rust/commits/28467f5d197d1455e922711a28ea4a19702dbda9", "html_url": "https://github.com/rust-lang/rust/commit/28467f5d197d1455e922711a28ea4a19702dbda9"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "fd75a486e8d64f6df044b743a1aefff2211da0fc", "filename": "src/libstd/path/mod.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/122c94d2f3909a06a5dd172b423b9b56a2f17039/src%2Flibstd%2Fpath%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/122c94d2f3909a06a5dd172b423b9b56a2f17039/src%2Flibstd%2Fpath%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath%2Fmod.rs?ref=122c94d2f3909a06a5dd172b423b9b56a2f17039", "patch": "@@ -591,6 +591,23 @@ impl BytesContainer for CString {\n     }\n }\n \n+impl<'a> BytesContainer for str::MaybeOwned<'a> {\n+    #[inline]\n+    fn container_as_bytes<'b>(&'b self) -> &'b [u8] {\n+        self.as_slice().as_bytes()\n+    }\n+    #[inline]\n+    fn container_into_owned_bytes(self) -> ~[u8] {\n+        self.into_owned().into_bytes()\n+    }\n+    #[inline]\n+    fn container_as_str<'b>(&'b self) -> Option<&'b str> {\n+        Some(self.as_slice())\n+    }\n+    #[inline]\n+    fn is_str(_: Option<str::MaybeOwned>) -> bool { true }\n+}\n+\n #[inline(always)]\n fn contains_nul(v: &[u8]) -> bool {\n     v.iter().any(|&x| x == 0)"}]}