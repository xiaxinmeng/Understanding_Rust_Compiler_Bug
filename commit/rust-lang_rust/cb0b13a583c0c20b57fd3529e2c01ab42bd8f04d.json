{"sha": "cb0b13a583c0c20b57fd3529e2c01ab42bd8f04d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiMGIxM2E1ODNjMGMyMGI1N2ZkMzUyOWUyYzAxYWI0MmJkOGYwNGQ=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-07-27T20:32:16Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-08-11T12:09:08Z"}, "message": "Fix another missing fields diagnostics", "tree": {"sha": "1a055f84a1b4ee0fd352aa1b8191096f1070ef50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a055f84a1b4ee0fd352aa1b8191096f1070ef50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb0b13a583c0c20b57fd3529e2c01ab42bd8f04d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb0b13a583c0c20b57fd3529e2c01ab42bd8f04d", "html_url": "https://github.com/rust-lang/rust/commit/cb0b13a583c0c20b57fd3529e2c01ab42bd8f04d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb0b13a583c0c20b57fd3529e2c01ab42bd8f04d/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee1586c1ed058ff0f090b552d52fe6bbe2dd7f7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee1586c1ed058ff0f090b552d52fe6bbe2dd7f7f", "html_url": "https://github.com/rust-lang/rust/commit/ee1586c1ed058ff0f090b552d52fe6bbe2dd7f7f"}], "stats": {"total": 63, "additions": 19, "deletions": 44}, "files": [{"sha": "48b578fb0ee89ecca6aaf95f7bb1a4d3b3f4d97f", "filename": "crates/ra_hir_ty/src/diagnostics.rs", "status": "modified", "additions": 11, "deletions": 39, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/cb0b13a583c0c20b57fd3529e2c01ab42bd8f04d/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb0b13a583c0c20b57fd3529e2c01ab42bd8f04d/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics.rs?ref=cb0b13a583c0c20b57fd3529e2c01ab42bd8f04d", "patch": "@@ -59,8 +59,8 @@ impl AstDiagnostic for NoSuchField {\n pub struct MissingFields {\n     pub file: HirFileId,\n     pub field_list: AstPtr<ast::RecordExprFieldList>,\n+    pub field_list_parent_path: Option<AstPtr<ast::Path>>,\n     pub missed_fields: Vec<Name>,\n-    pub list_parent_path: Option<AstPtr<ast::Path>>,\n }\n \n impl Diagnostic for MissingFields {\n@@ -76,7 +76,7 @@ impl Diagnostic for MissingFields {\n     }\n \n     fn source(&self) -> InFile<SyntaxNodePtr> {\n-        self.list_parent_path\n+        self.field_list_parent_path\n             .clone()\n             .map(|path| InFile { file_id: self.file, value: path.into() })\n             .unwrap_or_else(|| self.fix_source())\n@@ -100,6 +100,7 @@ impl AstDiagnostic for MissingFields {\n pub struct MissingPatFields {\n     pub file: HirFileId,\n     pub field_list: AstPtr<ast::RecordPatFieldList>,\n+    pub field_list_parent_path: Option<AstPtr<ast::Path>>,\n     pub missed_fields: Vec<Name>,\n }\n \n@@ -114,6 +115,12 @@ impl Diagnostic for MissingPatFields {\n     fn fix_source(&self) -> InFile<SyntaxNodePtr> {\n         InFile { file_id: self.file, value: self.field_list.clone().into() }\n     }\n+    fn source(&self) -> InFile<SyntaxNodePtr> {\n+        self.field_list_parent_path\n+            .clone()\n+            .map(|path| InFile { file_id: self.file, value: path.into() })\n+            .unwrap_or_else(|| self.fix_source())\n+    }\n     fn as_any(&self) -> &(dyn Any + Send + 'static) {\n         self\n     }\n@@ -326,41 +333,6 @@ mod tests {\n         assert_eq!(annotations, actual);\n     }\n \n-    #[test]\n-    fn structure_name_highlighted_for_missing_fields() {\n-        check_diagnostics(\n-            r#\"\n-struct Beefy {\n-    one: i32,\n-    two: i32,\n-    three: i32,\n-    four: i32,\n-    five: i32,\n-    six: i32,\n-    seven: i32,\n-    eight: i32,\n-    nine: i32,\n-    ten: i32,\n-}\n-fn baz() {\n-    let zz = Beefy {\n-           //^^^^^ Missing structure fields:\n-           //    |    - seven\n-        one: (),\n-        two: (),\n-        three: (),\n-        four: (),\n-        five: (),\n-        six: (),\n-        eight: (),\n-        nine: (),\n-        ten: (),\n-    };\n-}\n-\"#,\n-        );\n-    }\n-\n     #[test]\n     fn no_such_field_diagnostics() {\n         check_diagnostics(\n@@ -491,8 +463,8 @@ impl Foo {\n struct S { foo: i32, bar: () }\n fn baz(s: S) {\n     let S { foo: _ } = s;\n-        //^^^^^^^^^^ Missing structure fields:\n-        //         | - bar\n+      //^ Missing structure fields:\n+      //| - bar\n }\n \"#,\n         );"}, {"sha": "98959ab684ae90423646f4a9bed41f49da2ac765", "filename": "crates/ra_hir_ty/src/diagnostics/expr.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cb0b13a583c0c20b57fd3529e2c01ab42bd8f04d/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb0b13a583c0c20b57fd3529e2c01ab42bd8f04d/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs?ref=cb0b13a583c0c20b57fd3529e2c01ab42bd8f04d", "patch": "@@ -110,8 +110,8 @@ impl<'a, 'b> ExprValidator<'a, 'b> {\n                     self.sink.push(MissingFields {\n                         file: source_ptr.file_id,\n                         field_list: AstPtr::new(&field_list),\n+                        field_list_parent_path: record_lit.path().map(|path| AstPtr::new(&path)),\n                         missed_fields,\n-                        list_parent_path: record_lit.path().map(|path| AstPtr::new(&path)),\n                     })\n                 }\n             }\n@@ -141,6 +141,9 @@ impl<'a, 'b> ExprValidator<'a, 'b> {\n                         self.sink.push(MissingPatFields {\n                             file: source_ptr.file_id,\n                             field_list: AstPtr::new(&field_list),\n+                            field_list_parent_path: record_pat\n+                                .path()\n+                                .map(|path| AstPtr::new(&path)),\n                             missed_fields,\n                         })\n                     }"}, {"sha": "deca244dbbab5956f098401070a81aa398f9eb81", "filename": "crates/ra_hir_ty/src/diagnostics/match_check.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cb0b13a583c0c20b57fd3529e2c01ab42bd8f04d/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics%2Fmatch_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb0b13a583c0c20b57fd3529e2c01ab42bd8f04d/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics%2Fmatch_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics%2Fmatch_check.rs?ref=cb0b13a583c0c20b57fd3529e2c01ab42bd8f04d", "patch": "@@ -1161,15 +1161,15 @@ fn main() {\n         //^ Missing match arm\n     match a {\n         Either::A { } => (),\n-                //^^^ Missing structure fields:\n-                //  | - foo\n+      //^^^^^^^^^ Missing structure fields:\n+      //        | - foo\n         Either::B => (),\n     }\n     match a {\n         //^ Missing match arm\n         Either::A { } => (),\n-    }           //^^^ Missing structure fields:\n-                //  | - foo\n+    } //^^^^^^^^^ Missing structure fields:\n+      //        | - foo\n \n     match a {\n         Either::A { foo: true } => (),"}]}