{"sha": "6ce37e8dd708a021602c65f2b2f757d719be8040", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjZTM3ZThkZDcwOGEwMjE2MDJjNjVmMmIyZjc1N2Q3MTliZTgwNDA=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-04-01T14:18:53Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-04-01T14:18:53Z"}, "message": "metadata: csearch: remove dead code", "tree": {"sha": "a8532b3fd147d3b48228c6a4af3e2d54f8700d5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8532b3fd147d3b48228c6a4af3e2d54f8700d5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ce37e8dd708a021602c65f2b2f757d719be8040", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ce37e8dd708a021602c65f2b2f757d719be8040", "html_url": "https://github.com/rust-lang/rust/commit/6ce37e8dd708a021602c65f2b2f757d719be8040", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ce37e8dd708a021602c65f2b2f757d719be8040/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86e6a80d8d9ea65f708ce7c8dc3b2ffd6ce8f3d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/86e6a80d8d9ea65f708ce7c8dc3b2ffd6ce8f3d4", "html_url": "https://github.com/rust-lang/rust/commit/86e6a80d8d9ea65f708ce7c8dc3b2ffd6ce8f3d4"}], "stats": {"total": 21, "additions": 0, "deletions": 21}, "files": [{"sha": "4300c2eedbf6d03de76c35f43b4f000be6cc8e71", "filename": "src/librustc/metadata/csearch.rs", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6ce37e8dd708a021602c65f2b2f757d719be8040/src%2Flibrustc%2Fmetadata%2Fcsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ce37e8dd708a021602c65f2b2f757d719be8040/src%2Flibrustc%2Fmetadata%2Fcsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcsearch.rs?ref=6ce37e8dd708a021602c65f2b2f757d719be8040", "patch": "@@ -37,12 +37,6 @@ pub fn get_symbol(cstore: &cstore::CStore, def: ast::DefId) -> ~str {\n     return decoder::get_symbol(cdata, def.node);\n }\n \n-pub fn get_type_param_count(cstore: &cstore::CStore, def: ast::DefId)\n-                         -> uint {\n-    let cdata = cstore.get_crate_data(def.krate).data();\n-    return decoder::get_type_param_count(cdata, def.node);\n-}\n-\n /// Iterates over all the language items in the given crate.\n pub fn each_lang_item(cstore: &cstore::CStore,\n                       cnum: ast::CrateNum,\n@@ -244,21 +238,6 @@ pub fn get_impl_vtables(tcx: &ty::ctxt,\n     decoder::get_impl_vtables(cdata, def.node, tcx)\n }\n \n-pub fn get_impl_method(cstore: &cstore::CStore,\n-                       def: ast::DefId,\n-                       mname: ast::Ident)\n-                    -> Option<ast::DefId> {\n-    let cdata = cstore.get_crate_data(def.krate);\n-    decoder::get_impl_method(cstore.intr.clone(), cdata, def.node, mname)\n-}\n-\n-pub fn get_item_visibility(cstore: &cstore::CStore,\n-                           def_id: ast::DefId)\n-                        -> ast::Visibility {\n-    let cdata = cstore.get_crate_data(def_id.krate);\n-    decoder::get_item_visibility(cdata, def_id.node)\n-}\n-\n pub fn get_native_libraries(cstore: &cstore::CStore,\n                             crate_num: ast::CrateNum)\n                                 -> Vec<(cstore::NativeLibaryKind, ~str)> {"}]}