{"sha": "2cff30b17a5409e15134f8634444069fc6f21cb6", "node_id": "C_kwDOAAsO6NoAKDJjZmYzMGIxN2E1NDA5ZTE1MTM0Zjg2MzQ0NDQwNjlmYzZmMjFjYjY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-04T21:52:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-04T21:52:21Z"}, "message": "Auto merge of #90536 - crlf0710:fix_vtable_hrtb, r=jackh726\n\nErase regions within `vtable_trait_first_method_offset`\n\nFixes #90177 .\n\nr? `@jackh726`", "tree": {"sha": "7bd5980739a20bce2ae37563144d9f2c7c4e29fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bd5980739a20bce2ae37563144d9f2c7c4e29fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cff30b17a5409e15134f8634444069fc6f21cb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cff30b17a5409e15134f8634444069fc6f21cb6", "html_url": "https://github.com/rust-lang/rust/commit/2cff30b17a5409e15134f8634444069fc6f21cb6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cff30b17a5409e15134f8634444069fc6f21cb6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4961b107f204e15b26961eab0685df6be3ab03c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4961b107f204e15b26961eab0685df6be3ab03c6", "html_url": "https://github.com/rust-lang/rust/commit/4961b107f204e15b26961eab0685df6be3ab03c6"}, {"sha": "8841204cc66f66e0e090b4a0c876e861e4cc75f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8841204cc66f66e0e090b4a0c876e861e4cc75f7", "html_url": "https://github.com/rust-lang/rust/commit/8841204cc66f66e0e090b4a0c876e861e4cc75f7"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "8f247184e880873d6f1d4a1419ee959c2753b16e", "filename": "compiler/rustc_trait_selection/src/traits/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2cff30b17a5409e15134f8634444069fc6f21cb6/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cff30b17a5409e15134f8634444069fc6f21cb6/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs?ref=2cff30b17a5409e15134f8634444069fc6f21cb6", "patch": "@@ -748,6 +748,9 @@ fn vtable_trait_first_method_offset<'tcx>(\n ) -> usize {\n     let (trait_to_be_found, trait_owning_vtable) = key;\n \n+    // #90177\n+    let trait_to_be_found_erased = tcx.erase_regions(trait_to_be_found);\n+\n     let vtable_segment_callback = {\n         let mut vtable_base = 0;\n \n@@ -757,7 +760,7 @@ fn vtable_trait_first_method_offset<'tcx>(\n                     vtable_base += COMMON_VTABLE_ENTRIES.len();\n                 }\n                 VtblSegment::TraitOwnEntries { trait_ref, emit_vptr } => {\n-                    if trait_ref == trait_to_be_found {\n+                    if tcx.erase_regions(trait_ref) == trait_to_be_found_erased {\n                         return ControlFlow::Break(vtable_base);\n                     }\n                     vtable_base += util::count_own_vtable_entries(tcx, trait_ref);"}, {"sha": "b151a9d3ab6599d709582fe830669db42e4dbfae", "filename": "src/test/ui/hrtb/issue-90177.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/2cff30b17a5409e15134f8634444069fc6f21cb6/src%2Ftest%2Fui%2Fhrtb%2Fissue-90177.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cff30b17a5409e15134f8634444069fc6f21cb6/src%2Ftest%2Fui%2Fhrtb%2Fissue-90177.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhrtb%2Fissue-90177.rs?ref=2cff30b17a5409e15134f8634444069fc6f21cb6", "patch": "@@ -0,0 +1,32 @@\n+// check-pass\n+\n+trait Base<'f> {\n+    type Assoc;\n+\n+    fn do_something(&self);\n+}\n+\n+trait ForAnyLifetime: for<'f> Base<'f> {}\n+\n+impl<T> ForAnyLifetime for T where T: for<'f> Base<'f> {}\n+\n+trait CanBeDynamic: ForAnyLifetime + for<'f> Base<'f, Assoc = ()> {}\n+\n+fn foo(a: &dyn CanBeDynamic) {\n+    a.do_something();\n+}\n+\n+struct S;\n+\n+impl<'a> Base<'a> for S {\n+    type Assoc = ();\n+\n+    fn do_something(&self) {}\n+}\n+\n+impl CanBeDynamic for S {}\n+\n+fn main() {\n+    let s = S;\n+    foo(&s);\n+}"}]}