{"sha": "4f61ce23fc8fd3a29d00da1ca5e1f75b7931f9f2", "node_id": "C_kwDOAAsO6NoAKDRmNjFjZTIzZmM4ZmQzYTI5ZDAwZGExY2E1ZTFmNzViNzkzMWY5ZjI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-20T06:10:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-20T06:10:32Z"}, "message": "Rollup merge of #109323 - joboet:ignore_ds_store_tidy, r=ozkanonur\n\nIgnore files in .gitignore in mir opt check\n\nThis caused `./x test tidy` to fail for me when Finder (macOS) added `.DS_Store` files. They are ignored by git, so tidy should ignore them, too.", "tree": {"sha": "cf99ed93d33df5ab494448408d617b7460620b8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf99ed93d33df5ab494448408d617b7460620b8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f61ce23fc8fd3a29d00da1ca5e1f75b7931f9f2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkF/jYCRBK7hj4Ov3rIwAAkywIAIuB0zSj6QXoopRJk80+7NnL\nOEeWnWOxZXqOMqbagZ+8zWSzrc7KYWy7GIp63eGlSuL1DRa57iKqPKn53jm9MyuY\n4iZk2Bzp1alLlEfW1w8/AMnZInC/bhnl4nGnada2niJ4SUlsY6jiUEt7bQ4bNe3W\nbHI+zVzOcZIQQ8iLyGnb7qsqJNKwirOnJ/diuNI3fEwoitscuPYCASI8lWIzYdFd\n0XS4TQo8Ca8Wz6ty4kBmIoJEJPQfHA8K7nbAc/xAtCSlKT7JBQg+6kfVBzKbA6ll\nXUnRw1tCH4NdzT9sBYhGuav0r0a+kH8mM+gqaidFnH1y1SZrObImQMa3eW34aXU=\n=zPwB\n-----END PGP SIGNATURE-----\n", "payload": "tree cf99ed93d33df5ab494448408d617b7460620b8b\nparent 7c69f98563c24c407d18de8bbd05aa7ce162558b\nparent 500ad266199ee2ea30ff022e3247e8a11979fec3\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1679292632 +0100\ncommitter GitHub <noreply@github.com> 1679292632 +0100\n\nRollup merge of #109323 - joboet:ignore_ds_store_tidy, r=ozkanonur\n\nIgnore files in .gitignore in mir opt check\n\nThis caused `./x test tidy` to fail for me when Finder (macOS) added `.DS_Store` files. They are ignored by git, so tidy should ignore them, too.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f61ce23fc8fd3a29d00da1ca5e1f75b7931f9f2", "html_url": "https://github.com/rust-lang/rust/commit/4f61ce23fc8fd3a29d00da1ca5e1f75b7931f9f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f61ce23fc8fd3a29d00da1ca5e1f75b7931f9f2/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c69f98563c24c407d18de8bbd05aa7ce162558b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c69f98563c24c407d18de8bbd05aa7ce162558b", "html_url": "https://github.com/rust-lang/rust/commit/7c69f98563c24c407d18de8bbd05aa7ce162558b"}, {"sha": "500ad266199ee2ea30ff022e3247e8a11979fec3", "url": "https://api.github.com/repos/rust-lang/rust/commits/500ad266199ee2ea30ff022e3247e8a11979fec3", "html_url": "https://github.com/rust-lang/rust/commit/500ad266199ee2ea30ff022e3247e8a11979fec3"}], "stats": {"total": 41, "additions": 22, "deletions": 19}, "files": [{"sha": "b316e9e9009fcad18fee617ac01f0cc158227eb5", "filename": "src/tools/tidy/src/mir_opt_tests.rs", "status": "modified", "additions": 22, "deletions": 19, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/4f61ce23fc8fd3a29d00da1ca5e1f75b7931f9f2/src%2Ftools%2Ftidy%2Fsrc%2Fmir_opt_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61ce23fc8fd3a29d00da1ca5e1f75b7931f9f2/src%2Ftools%2Ftidy%2Fsrc%2Fmir_opt_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmir_opt_tests.rs?ref=4f61ce23fc8fd3a29d00da1ca5e1f75b7931f9f2", "patch": "@@ -3,19 +3,24 @@\n use std::collections::HashSet;\n use std::path::{Path, PathBuf};\n \n+use crate::walk::walk_no_read;\n+\n fn check_unused_files(path: &Path, bless: bool, bad: &mut bool) {\n     let mut rs_files = Vec::<PathBuf>::new();\n     let mut output_files = HashSet::<PathBuf>::new();\n-    let files = walkdir::WalkDir::new(&path.join(\"mir-opt\")).into_iter();\n \n-    for file in files.filter_map(Result::ok).filter(|e| e.file_type().is_file()) {\n-        let filepath = file.path();\n-        if filepath.extension() == Some(\"rs\".as_ref()) {\n-            rs_files.push(filepath.to_owned());\n-        } else {\n-            output_files.insert(filepath.to_owned());\n-        }\n-    }\n+    walk_no_read(\n+        &[&path.join(\"mir-opt\")],\n+        |path| path.file_name() == Some(\"README.md\".as_ref()),\n+        &mut |file| {\n+            let filepath = file.path();\n+            if filepath.extension() == Some(\"rs\".as_ref()) {\n+                rs_files.push(filepath.to_owned());\n+            } else {\n+                output_files.insert(filepath.to_owned());\n+            }\n+        },\n+    );\n \n     for file in rs_files {\n         for bw in [32, 64] {\n@@ -26,16 +31,14 @@ fn check_unused_files(path: &Path, bless: bool, bad: &mut bool) {\n     }\n \n     for extra in output_files {\n-        if extra.file_name() != Some(\"README.md\".as_ref()) {\n-            if !bless {\n-                tidy_error!(\n-                    bad,\n-                    \"the following output file is not associated with any mir-opt test, you can remove it: {}\",\n-                    extra.display()\n-                );\n-            } else {\n-                let _ = std::fs::remove_file(extra);\n-            }\n+        if !bless {\n+            tidy_error!(\n+                bad,\n+                \"the following output file is not associated with any mir-opt test, you can remove it: {}\",\n+                extra.display()\n+            );\n+        } else {\n+            let _ = std::fs::remove_file(extra);\n         }\n     }\n }"}]}