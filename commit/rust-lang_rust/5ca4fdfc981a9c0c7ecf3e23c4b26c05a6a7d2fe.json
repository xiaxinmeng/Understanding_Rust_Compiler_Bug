{"sha": "5ca4fdfc981a9c0c7ecf3e23c4b26c05a6a7d2fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjYTRmZGZjOTgxYTljMGM3ZWNmM2UyM2M0YjI2YzA1YTZhN2QyZmU=", "commit": {"author": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-02-25T05:26:34Z"}, "committer": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-03-07T04:41:57Z"}, "message": "Convert trans_tuple_struct to trans::adt.\n\nSurely this cannot be the best way to get the type.", "tree": {"sha": "937865bbf949285233c40a09d4367c3584a73d33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/937865bbf949285233c40a09d4367c3584a73d33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ca4fdfc981a9c0c7ecf3e23c4b26c05a6a7d2fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ca4fdfc981a9c0c7ecf3e23c4b26c05a6a7d2fe", "html_url": "https://github.com/rust-lang/rust/commit/5ca4fdfc981a9c0c7ecf3e23c4b26c05a6a7d2fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ca4fdfc981a9c0c7ecf3e23c4b26c05a6a7d2fe/comments", "author": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29d0430c56276da7371a845008bef3d1361b842e", "url": "https://api.github.com/repos/rust-lang/rust/commits/29d0430c56276da7371a845008bef3d1361b842e", "html_url": "https://github.com/rust-lang/rust/commit/29d0430c56276da7371a845008bef3d1361b842e"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "9120ac3083a027858a3d97ba7f8154211cf3efc2", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5ca4fdfc981a9c0c7ecf3e23c4b26c05a6a7d2fe/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ca4fdfc981a9c0c7ecf3e23c4b26c05a6a7d2fe/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=5ca4fdfc981a9c0c7ecf3e23c4b26c05a6a7d2fe", "patch": "@@ -1938,8 +1938,23 @@ pub fn trans_tuple_struct(ccx: @CrateContext,\n     let arg_tys = ty::ty_fn_args(node_id_type(bcx, ctor_id));\n     let bcx = copy_args_to_allocas(fcx, bcx, fn_args, raw_llargs, arg_tys);\n \n+    // XXX is there a better way to reconstruct the ty::t?\n+    let ty_param_substs = match param_substs {\n+        Some(ref substs) => /*bad*/copy substs.tys,\n+        None => ~[]\n+    };\n+    let ctor_ty = ty::subst_tps(ccx.tcx, ty_param_substs, None,\n+                                ty::node_id_to_type(ccx.tcx, ctor_id));\n+    let tup_ty = match ty::get(ctor_ty).sty {\n+        ty::ty_bare_fn(ref bft) => bft.sig.output,\n+        _ => ccx.sess.bug(fmt!(\"trans_tuple_struct: unexpected ctor \\\n+                                return type %s\",\n+                               ty_to_str(ccx.tcx, ctor_ty)))\n+    };\n+    let repr = adt::represent_type(ccx, tup_ty);\n+\n     for fields.eachi |i, field| {\n-        let lldestptr = GEPi(bcx, fcx.llretptr, [0, 0, i]);\n+        let lldestptr = adt::trans_GEP(bcx, &repr, fcx.llretptr, 0, i);\n         let llarg = match fcx.llargs.get(&field.node.id) {\n             local_mem(x) => x,\n             _ => {"}]}