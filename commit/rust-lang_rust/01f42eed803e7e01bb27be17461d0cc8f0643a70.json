{"sha": "01f42eed803e7e01bb27be17461d0cc8f0643a70", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxZjQyZWVkODAzZTdlMDFiYjI3YmUxNzQ2MWQwY2M4ZjA2NDNhNzA=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2014-01-09T07:12:23Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2014-01-09T07:12:23Z"}, "message": "Start the span for a path in a view_path at the correct place (at the start of the path, rather than at the start of the view_path).", "tree": {"sha": "39a1354bba62627427520c577efc52e43456b7ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39a1354bba62627427520c577efc52e43456b7ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01f42eed803e7e01bb27be17461d0cc8f0643a70", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01f42eed803e7e01bb27be17461d0cc8f0643a70", "html_url": "https://github.com/rust-lang/rust/commit/01f42eed803e7e01bb27be17461d0cc8f0643a70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01f42eed803e7e01bb27be17461d0cc8f0643a70/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7613b15fdbbb9bf770a2c731f4135886b0ff3cf0", "url": "https://api.github.com/repos/rust-lang/rust/commits/7613b15fdbbb9bf770a2c731f4135886b0ff3cf0", "html_url": "https://github.com/rust-lang/rust/commit/7613b15fdbbb9bf770a2c731f4135886b0ff3cf0"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "26653fe4a1ef649d013f4660cb539971b4dd7751", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/01f42eed803e7e01bb27be17461d0cc8f0643a70/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01f42eed803e7e01bb27be17461d0cc8f0643a70/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=01f42eed803e7e01bb27be17461d0cc8f0643a70", "patch": "@@ -4925,14 +4925,15 @@ impl Parser {\n           token::EQ => {\n             // x = foo::bar\n             self.bump();\n+            let path_lo = self.span.lo;\n             path = ~[self.parse_ident()];\n             while self.token == token::MOD_SEP {\n                 self.bump();\n                 let id = self.parse_ident();\n                 path.push(id);\n             }\n             let path = ast::Path {\n-                span: mk_sp(lo, self.span.hi),\n+                span: mk_sp(path_lo, self.span.hi),\n                 global: false,\n                 segments: path.move_iter().map(|identifier| {\n                     ast::PathSegment {"}]}