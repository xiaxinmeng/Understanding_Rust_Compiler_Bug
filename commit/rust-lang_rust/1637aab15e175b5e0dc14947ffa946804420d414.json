{"sha": "1637aab15e175b5e0dc14947ffa946804420d414", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2MzdhYWIxNWUxNzViNWUwZGMxNDk0N2ZmYTk0NjgwNDQyMGQ0MTQ=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-01-06T22:21:41Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-02-16T10:57:49Z"}, "message": "Make librustc_mir compile.", "tree": {"sha": "aa6b9bd37c92238e1cbcf0ab92d7e6986923b36e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa6b9bd37c92238e1cbcf0ab92d7e6986923b36e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1637aab15e175b5e0dc14947ffa946804420d414", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1637aab15e175b5e0dc14947ffa946804420d414", "html_url": "https://github.com/rust-lang/rust/commit/1637aab15e175b5e0dc14947ffa946804420d414", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1637aab15e175b5e0dc14947ffa946804420d414/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b57cb3cbed8674aa480bff450affa62ac6b75bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b57cb3cbed8674aa480bff450affa62ac6b75bf", "html_url": "https://github.com/rust-lang/rust/commit/4b57cb3cbed8674aa480bff450affa62ac6b75bf"}], "stats": {"total": 106, "additions": 55, "deletions": 51}, "files": [{"sha": "46cfe0897a9ac86149a600d69681a6a76767d902", "filename": "src/librustc_mir/borrow_check/constraint_generation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Fconstraint_generation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Fconstraint_generation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fconstraint_generation.rs?ref=1637aab15e175b5e0dc14947ffa946804420d414", "patch": "@@ -1,4 +1,3 @@\n-use rustc::infer::InferCtxt;\n use rustc::mir::visit::TyContext;\n use rustc::mir::visit::Visitor;\n use rustc::mir::{\n@@ -8,6 +7,7 @@ use rustc::mir::{\n use rustc::ty::fold::TypeFoldable;\n use rustc::ty::subst::SubstsRef;\n use rustc::ty::{self, RegionVid, Ty};\n+use rustc_infer::infer::InferCtxt;\n \n use crate::borrow_check::{\n     borrow_set::BorrowSet, facts::AllFacts, location::LocationTable, nll::ToRegionVid,"}, {"sha": "d1a03c4158068513e2a68a5fa28ad3e42cbf15ea", "filename": "src/librustc_mir/borrow_check/diagnostics/conflict_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs?ref=1637aab15e175b5e0dc14947ffa946804420d414", "patch": "@@ -3,14 +3,14 @@ use rustc::mir::{\n     FakeReadCause, Local, LocalDecl, LocalInfo, LocalKind, Location, Operand, Place, PlaceRef,\n     ProjectionElem, Rvalue, Statement, StatementKind, TerminatorKind, VarBindingForm,\n };\n-use rustc::traits::error_reporting::suggest_constraining_type_param;\n use rustc::ty::{self, Ty};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::{AsyncGeneratorKind, GeneratorKind};\n use rustc_index::vec::Idx;\n+use rustc_infer::traits::error_reporting::suggest_constraining_type_param;\n use rustc_span::source_map::DesugaringKind;\n use rustc_span::Span;\n "}, {"sha": "6475677988fbb74efbcfb025415ebfaa1a0e292d", "filename": "src/librustc_mir/borrow_check/diagnostics/explain_borrow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fexplain_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fexplain_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fexplain_borrow.rs?ref=1637aab15e175b5e0dc14947ffa946804420d414", "patch": "@@ -2,7 +2,6 @@\n \n use std::collections::VecDeque;\n \n-use rustc::infer::NLLRegionVariableOrigin;\n use rustc::mir::{\n     Body, CastKind, ConstraintCategory, FakeReadCause, Local, Location, Operand, Place, Rvalue,\n     Statement, StatementKind, TerminatorKind,\n@@ -12,6 +11,7 @@ use rustc::ty::{self, RegionVid, TyCtxt};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_index::vec::IndexVec;\n+use rustc_infer::infer::NLLRegionVariableOrigin;\n use rustc_span::symbol::Symbol;\n use rustc_span::Span;\n "}, {"sha": "a3e0e51c5b64dd454dd7d8b0b05e0ec97ab5e348", "filename": "src/librustc_mir/borrow_check/diagnostics/region_errors.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs?ref=1637aab15e175b5e0dc14947ffa946804420d414", "patch": "@@ -1,11 +1,11 @@\n //! Error reporting machinery for lifetime errors.\n \n-use rustc::infer::{\n-    error_reporting::nice_region_error::NiceRegionError, opaque_types, NLLRegionVariableOrigin,\n-};\n use rustc::mir::ConstraintCategory;\n use rustc::ty::{self, RegionVid, Ty};\n use rustc_errors::{Applicability, DiagnosticBuilder};\n+use rustc_infer::infer::{\n+    error_reporting::nice_region_error::NiceRegionError, opaque_types, NLLRegionVariableOrigin,\n+};\n use rustc_span::symbol::kw;\n use rustc_span::Span;\n "}, {"sha": "aeb29d2e11eb0205c04a311069e884053471e32f", "filename": "src/librustc_mir/borrow_check/member_constraints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Fmember_constraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Fmember_constraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmember_constraints.rs?ref=1637aab15e175b5e0dc14947ffa946804420d414", "patch": "@@ -1,5 +1,5 @@\n use crate::rustc::ty::{self, Ty};\n-use rustc::infer::region_constraints::MemberConstraint;\n+use rustc::infer::MemberConstraint;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def_id::DefId;\n use rustc_index::vec::IndexVec;"}, {"sha": "a3edfb662c50ea9cbb3402e77c8f3ef97e591887", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=1637aab15e175b5e0dc14947ffa946804420d414", "patch": "@@ -1,6 +1,5 @@\n //! This query borrow-checks the MIR to (further) ensure it is not broken.\n \n-use rustc::infer::InferCtxt;\n use rustc::lint::builtin::MUTABLE_BORROW_RESERVATION_CONFLICT;\n use rustc::lint::builtin::UNUSED_MUT;\n use rustc::mir::{\n@@ -20,6 +19,7 @@ use rustc_hir as hir;\n use rustc_hir::{def_id::DefId, HirId, Node};\n use rustc_index::bit_set::BitSet;\n use rustc_index::vec::IndexVec;\n+use rustc_infer::infer::{InferCtxt, TyCtxtInferExt};\n \n use either::Either;\n use smallvec::SmallVec;"}, {"sha": "ba0f2e8a7ad764191746079883101e71885dec81", "filename": "src/librustc_mir/borrow_check/nll.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs?ref=1637aab15e175b5e0dc14947ffa946804420d414", "patch": "@@ -1,6 +1,5 @@\n //! The entry point of the NLL borrow checker.\n \n-use rustc::infer::InferCtxt;\n use rustc::mir::{\n     BasicBlock, Body, BodyAndCache, ClosureOutlivesSubject, ClosureRegionRequirements, LocalKind,\n     Location, Promoted, ReadOnlyBodyAndCache,\n@@ -10,6 +9,7 @@ use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::Diagnostic;\n use rustc_hir::def_id::DefId;\n use rustc_index::vec::IndexVec;\n+use rustc_infer::infer::InferCtxt;\n use rustc_span::symbol::sym;\n use std::env;\n use std::fmt::Debug;"}, {"sha": "369e540231168f0ddbd6ce51778b9e1fab75f3b6", "filename": "src/librustc_mir/borrow_check/region_infer/dump_mir.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fdump_mir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fdump_mir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fdump_mir.rs?ref=1637aab15e175b5e0dc14947ffa946804420d414", "patch": "@@ -4,7 +4,7 @@\n //! context internal state.\n \n use super::{OutlivesConstraint, RegionInferenceContext};\n-use rustc::infer::NLLRegionVariableOrigin;\n+use rustc_infer::infer::NLLRegionVariableOrigin;\n use std::io::{self, Write};\n \n // Room for \"'_#NNNNr\" before things get misaligned."}, {"sha": "144f655420b36541571ab5907c65fcc585070bfc", "filename": "src/librustc_mir/borrow_check/region_infer/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fmod.rs?ref=1637aab15e175b5e0dc14947ffa946804420d414", "patch": "@@ -1,9 +1,6 @@\n use std::collections::VecDeque;\n use std::rc::Rc;\n \n-use rustc::infer::canonical::QueryOutlivesConstraint;\n-use rustc::infer::region_constraints::{GenericKind, VarInfos, VerifyBound};\n-use rustc::infer::{InferCtxt, NLLRegionVariableOrigin, RegionVariableOrigin};\n use rustc::mir::{\n     Body, ClosureOutlivesRequirement, ClosureOutlivesSubject, ClosureRegionRequirements,\n     ConstraintCategory, Local, Location,\n@@ -15,6 +12,9 @@ use rustc_data_structures::graph::scc::Sccs;\n use rustc_hir::def_id::DefId;\n use rustc_index::bit_set::BitSet;\n use rustc_index::vec::IndexVec;\n+use rustc_infer::infer::canonical::QueryOutlivesConstraint;\n+use rustc_infer::infer::region_constraints::{GenericKind, VarInfos, VerifyBound};\n+use rustc_infer::infer::{InferCtxt, NLLRegionVariableOrigin, RegionVariableOrigin};\n use rustc_span::Span;\n \n use crate::borrow_check::{"}, {"sha": "15bbc5677daddbbaa80680476c5b758bd050348f", "filename": "src/librustc_mir/borrow_check/region_infer/opaque_types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fopaque_types.rs?ref=1637aab15e175b5e0dc14947ffa946804420d414", "patch": "@@ -1,7 +1,7 @@\n-use rustc::infer::InferCtxt;\n use rustc::ty::{self, TyCtxt, TypeFoldable};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def_id::DefId;\n+use rustc_infer::infer::InferCtxt;\n use rustc_span::Span;\n \n use super::RegionInferenceContext;"}, {"sha": "a63d18c27f1195a8a854fa1da3cbaa6c986d8406", "filename": "src/librustc_mir/borrow_check/renumber.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Frenumber.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Frenumber.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Frenumber.rs?ref=1637aab15e175b5e0dc14947ffa946804420d414", "patch": "@@ -1,9 +1,9 @@\n-use rustc::infer::{InferCtxt, NLLRegionVariableOrigin};\n use rustc::mir::visit::{MutVisitor, TyContext};\n use rustc::mir::{BodyAndCache, Location, PlaceElem, Promoted};\n use rustc::ty::subst::SubstsRef;\n use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n use rustc_index::vec::IndexVec;\n+use rustc_infer::infer::{InferCtxt, NLLRegionVariableOrigin};\n \n /// Replaces all free regions appearing in the MIR with fresh\n /// inference variables, returning the number of variables created."}, {"sha": "576759c2a3574ba66675dcf0e211c9707b1d9c49", "filename": "src/librustc_mir/borrow_check/type_check/constraint_conversion.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fconstraint_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fconstraint_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fconstraint_conversion.rs?ref=1637aab15e175b5e0dc14947ffa946804420d414", "patch": "@@ -1,12 +1,12 @@\n-use rustc::infer::canonical::QueryOutlivesConstraint;\n-use rustc::infer::canonical::QueryRegionConstraints;\n-use rustc::infer::outlives::env::RegionBoundPairs;\n-use rustc::infer::outlives::obligations::{TypeOutlives, TypeOutlivesDelegate};\n-use rustc::infer::region_constraints::{GenericKind, VerifyBound};\n-use rustc::infer::{self, InferCtxt, SubregionOrigin};\n use rustc::mir::ConstraintCategory;\n use rustc::ty::subst::GenericArgKind;\n use rustc::ty::{self, TyCtxt};\n+use rustc_infer::infer::canonical::QueryOutlivesConstraint;\n+use rustc_infer::infer::canonical::QueryRegionConstraints;\n+use rustc_infer::infer::outlives::env::RegionBoundPairs;\n+use rustc_infer::infer::outlives::obligations::{TypeOutlives, TypeOutlivesDelegate};\n+use rustc_infer::infer::region_constraints::{GenericKind, VerifyBound};\n+use rustc_infer::infer::{self, InferCtxt, SubregionOrigin};\n use rustc_span::DUMMY_SP;\n \n use crate::borrow_check::{"}, {"sha": "137216531a369e69b8eaaf89846bbe70edf91540", "filename": "src/librustc_mir/borrow_check/type_check/free_region_relations.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Ffree_region_relations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Ffree_region_relations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Ffree_region_relations.rs?ref=1637aab15e175b5e0dc14947ffa946804420d414", "patch": "@@ -1,12 +1,12 @@\n-use rustc::infer::canonical::QueryRegionConstraints;\n-use rustc::infer::region_constraints::GenericKind;\n-use rustc::infer::InferCtxt;\n use rustc::mir::ConstraintCategory;\n-use rustc::traits::query::outlives_bounds::{self, OutlivesBound};\n-use rustc::traits::query::type_op::{self, TypeOp};\n use rustc::ty::free_region_map::FreeRegionRelations;\n use rustc::ty::{self, RegionVid, Ty, TyCtxt};\n use rustc_data_structures::transitive_relation::TransitiveRelation;\n+use rustc_infer::infer::canonical::QueryRegionConstraints;\n+use rustc_infer::infer::region_constraints::GenericKind;\n+use rustc_infer::infer::InferCtxt;\n+use rustc_infer::traits::query::outlives_bounds::{self, OutlivesBound};\n+use rustc_infer::traits::query::type_op::{self, TypeOp};\n use rustc_span::DUMMY_SP;\n use std::rc::Rc;\n "}, {"sha": "37cf77b7095c6c70334c8f121f52e0bfd39bdedf", "filename": "src/librustc_mir/borrow_check/type_check/input_output.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Finput_output.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Finput_output.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Finput_output.rs?ref=1637aab15e175b5e0dc14947ffa946804420d414", "patch": "@@ -7,9 +7,9 @@\n //! `RETURN_PLACE` the MIR arguments) are always fully normalized (and\n //! contain revealed `impl Trait` values).\n \n-use rustc::infer::LateBoundRegionConversionTime;\n use rustc::mir::*;\n use rustc::ty::Ty;\n+use rustc_infer::infer::LateBoundRegionConversionTime;\n \n use rustc_index::vec::Idx;\n use rustc_span::Span;"}, {"sha": "4c8deb0ecf84a547bd52d4d8c591be1b2c34d53a", "filename": "src/librustc_mir/borrow_check/type_check/liveness/trace.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Ftrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Ftrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Ftrace.rs?ref=1637aab15e175b5e0dc14947ffa946804420d414", "patch": "@@ -1,11 +1,11 @@\n-use rustc::infer::canonical::QueryRegionConstraints;\n use rustc::mir::{BasicBlock, ConstraintCategory, Local, Location, ReadOnlyBodyAndCache};\n-use rustc::traits::query::dropck_outlives::DropckOutlivesResult;\n-use rustc::traits::query::type_op::outlives::DropckOutlives;\n-use rustc::traits::query::type_op::TypeOp;\n use rustc::ty::{Ty, TypeFoldable};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_index::bit_set::HybridBitSet;\n+use rustc_infer::infer::canonical::QueryRegionConstraints;\n+use rustc_infer::traits::query::dropck_outlives::DropckOutlivesResult;\n+use rustc_infer::traits::query::type_op::outlives::DropckOutlives;\n+use rustc_infer::traits::query::type_op::TypeOp;\n use std::rc::Rc;\n \n use crate::dataflow::generic::ResultsCursor;"}, {"sha": "c92486213fd3e38f3ce7e9c43f1d8c074859e9e9", "filename": "src/librustc_mir/borrow_check/type_check/mod.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs?ref=1637aab15e175b5e0dc14947ffa946804420d414", "patch": "@@ -5,19 +5,10 @@ use std::{fmt, iter, mem};\n \n use either::Either;\n \n-use rustc::infer::canonical::QueryRegionConstraints;\n-use rustc::infer::opaque_types::GenerateMemberConstraints;\n-use rustc::infer::outlives::env::RegionBoundPairs;\n-use rustc::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n-use rustc::infer::{InferCtxt, InferOk, LateBoundRegionConversionTime, NLLRegionVariableOrigin};\n use rustc::mir::tcx::PlaceTy;\n use rustc::mir::visit::{NonMutatingUseContext, PlaceContext, Visitor};\n use rustc::mir::AssertKind;\n use rustc::mir::*;\n-use rustc::traits::query::type_op;\n-use rustc::traits::query::type_op::custom::CustomTypeOp;\n-use rustc::traits::query::{Fallible, NoSolution};\n-use rustc::traits::{self, ObligationCause, PredicateObligations};\n use rustc::ty::adjustment::PointerCast;\n use rustc::ty::cast::CastTy;\n use rustc::ty::fold::TypeFoldable;\n@@ -32,6 +23,17 @@ use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_index::vec::{Idx, IndexVec};\n+use rustc_infer::infer::canonical::QueryRegionConstraints;\n+use rustc_infer::infer::opaque_types::GenerateMemberConstraints;\n+use rustc_infer::infer::outlives::env::RegionBoundPairs;\n+use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n+use rustc_infer::infer::{\n+    InferCtxt, InferOk, LateBoundRegionConversionTime, NLLRegionVariableOrigin,\n+};\n+use rustc_infer::traits::query::type_op;\n+use rustc_infer::traits::query::type_op::custom::CustomTypeOp;\n+use rustc_infer::traits::query::{Fallible, NoSolution};\n+use rustc_infer::traits::{self, ObligationCause, PredicateObligations};\n use rustc_span::{Span, DUMMY_SP};\n \n use crate::dataflow::generic::ResultsCursor;"}, {"sha": "31507a184d8f914d0898ee844adbf53ff7bf27b2", "filename": "src/librustc_mir/borrow_check/type_check/relate_tys.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Frelate_tys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Frelate_tys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Frelate_tys.rs?ref=1637aab15e175b5e0dc14947ffa946804420d414", "patch": "@@ -1,10 +1,10 @@\n-use rustc::infer::nll_relate::{NormalizationStrategy, TypeRelating, TypeRelatingDelegate};\n-use rustc::infer::{InferCtxt, NLLRegionVariableOrigin};\n use rustc::mir::ConstraintCategory;\n-use rustc::traits::query::Fallible;\n-use rustc::traits::DomainGoal;\n use rustc::ty::relate::TypeRelation;\n use rustc::ty::{self, Ty};\n+use rustc_infer::infer::nll_relate::{NormalizationStrategy, TypeRelating, TypeRelatingDelegate};\n+use rustc_infer::infer::{InferCtxt, NLLRegionVariableOrigin};\n+use rustc_infer::traits::query::Fallible;\n+use rustc_infer::traits::DomainGoal;\n \n use crate::borrow_check::constraints::OutlivesConstraint;\n use crate::borrow_check::type_check::{BorrowCheckContext, Locations};"}, {"sha": "0913de63e8ef100102fd037fe6d2b6733e200522", "filename": "src/librustc_mir/borrow_check/universal_regions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Funiversal_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Fborrow_check%2Funiversal_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Funiversal_regions.rs?ref=1637aab15e175b5e0dc14947ffa946804420d414", "patch": "@@ -13,7 +13,6 @@\n //! just returns them for other code to use.\n \n use either::Either;\n-use rustc::infer::{InferCtxt, NLLRegionVariableOrigin};\n use rustc::middle::lang_items;\n use rustc::ty::fold::TypeFoldable;\n use rustc::ty::subst::{InternalSubsts, Subst, SubstsRef};\n@@ -24,6 +23,7 @@ use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::{BodyOwnerKind, HirId};\n use rustc_index::vec::{Idx, IndexVec};\n+use rustc_infer::infer::{InferCtxt, NLLRegionVariableOrigin};\n use std::iter;\n \n use crate::borrow_check::nll::ToRegionVid;"}, {"sha": "167d8145c030f2d259690cdb0c15e8b37bd52997", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=1637aab15e175b5e0dc14947ffa946804420d414", "patch": "@@ -3,12 +3,13 @@\n use rustc::middle::lang_items;\n use rustc::mir::visit::{MutatingUseContext, NonMutatingUseContext, PlaceContext, Visitor};\n use rustc::mir::*;\n-use rustc::traits::{self, TraitEngine};\n use rustc::ty::cast::CastTy;\n use rustc::ty::{self, TyCtxt};\n use rustc_errors::struct_span_err;\n use rustc_hir::{def_id::DefId, HirId};\n use rustc_index::bit_set::BitSet;\n+use rustc_infer::infer::TyCtxtInferExt;\n+use rustc_infer::traits::{self, TraitEngine};\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n "}, {"sha": "91d134fbb0066b296df84b56669bda5cbb302c0b", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=1637aab15e175b5e0dc14947ffa946804420d414", "patch": "@@ -14,7 +14,6 @@ use rustc::mir::{\n     SourceInfo, SourceScope, SourceScopeData, Statement, StatementKind, Terminator, TerminatorKind,\n     UnOp, RETURN_PLACE,\n };\n-use rustc::traits;\n use rustc::ty::layout::{\n     HasDataLayout, HasTyCtxt, LayoutError, LayoutOf, Size, TargetDataLayout, TyLayout,\n };\n@@ -25,6 +24,7 @@ use rustc_hir::def::DefKind;\n use rustc_hir::def_id::DefId;\n use rustc_hir::HirId;\n use rustc_index::vec::IndexVec;\n+use rustc_infer::traits;\n use rustc_span::Span;\n use syntax::ast::Mutability;\n "}, {"sha": "8b7d0637c0343f9823bb55dcd7025f56dfc976e9", "filename": "src/librustc_mir_build/build/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir_build%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir_build%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fmod.rs?ref=1637aab15e175b5e0dc14947ffa946804420d414", "patch": "@@ -12,6 +12,7 @@ use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::{GeneratorKind, HirIdMap, Node};\n use rustc_index::vec::{Idx, IndexVec};\n+use rustc_infer::infer::TyCtxtInferExt;\n use rustc_span::symbol::kw;\n use rustc_span::Span;\n use rustc_target::spec::abi::Abi;"}, {"sha": "ee62af7f8519d295b5caa4d475818104aa9bb4eb", "filename": "src/librustc_mir_build/hair/cx/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fmod.rs?ref=1637aab15e175b5e0dc14947ffa946804420d414", "patch": "@@ -5,7 +5,6 @@\n use crate::hair::util::UserAnnotatedTyHelpers;\n use crate::hair::*;\n \n-use rustc::infer::InferCtxt;\n use rustc::middle::region;\n use rustc::mir::interpret::{LitToConstError, LitToConstInput};\n use rustc::ty::layout::VariantIdx;\n@@ -16,6 +15,7 @@ use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::Node;\n use rustc_index::vec::Idx;\n+use rustc_infer::infer::InferCtxt;\n use rustc_span::symbol::{sym, Symbol};\n use syntax::ast;\n use syntax::attr;"}, {"sha": "27d1bce76edc5f3003a1413c6c6c61f70c296ab2", "filename": "src/librustc_mir_build/hair/pattern/const_to_pat.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fconst_to_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1637aab15e175b5e0dc14947ffa946804420d414/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fconst_to_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fconst_to_pat.rs?ref=1637aab15e175b5e0dc14947ffa946804420d414", "patch": "@@ -1,10 +1,10 @@\n-use rustc::infer::InferCtxt;\n use rustc::lint;\n use rustc::mir::Field;\n-use rustc::traits::predicate_for_trait_def;\n-use rustc::traits::{self, ObligationCause, PredicateObligation};\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc_hir as hir;\n+use rustc_infer::infer::{InferCtxt, TyCtxtInferExt};\n+use rustc_infer::traits::predicate_for_trait_def;\n+use rustc_infer::traits::{self, ObligationCause, PredicateObligation};\n \n use rustc_index::vec::Idx;\n "}]}