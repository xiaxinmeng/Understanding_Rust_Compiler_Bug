{"sha": "53b70a83c6931d2d22c99e2aecbc2ac89076123b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzYjcwYTgzYzY5MzFkMmQyMmM5OWUyYWVjYmMyYWM4OTA3NjEyM2I=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-04-01T14:33:30Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-04-02T15:17:23Z"}, "message": "middle: trans: tvec: remove dead code", "tree": {"sha": "eebb1aa3dd10470f3e8c7f1365e1c8e311716d70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eebb1aa3dd10470f3e8c7f1365e1c8e311716d70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53b70a83c6931d2d22c99e2aecbc2ac89076123b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53b70a83c6931d2d22c99e2aecbc2ac89076123b", "html_url": "https://github.com/rust-lang/rust/commit/53b70a83c6931d2d22c99e2aecbc2ac89076123b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53b70a83c6931d2d22c99e2aecbc2ac89076123b/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bc2c3b2b4c9176840a7dd99303778e4b40fd01a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bc2c3b2b4c9176840a7dd99303778e4b40fd01a", "html_url": "https://github.com/rust-lang/rust/commit/4bc2c3b2b4c9176840a7dd99303778e4b40fd01a"}], "stats": {"total": 30, "additions": 0, "deletions": 30}, "files": [{"sha": "d8154c6b1f5b5818871d4bca3c41a77d922e9c72", "filename": "src/librustc/middle/trans/tvec.rs", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/53b70a83c6931d2d22c99e2aecbc2ac89076123b/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53b70a83c6931d2d22c99e2aecbc2ac89076123b/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftvec.rs?ref=53b70a83c6931d2d22c99e2aecbc2ac89076123b", "patch": "@@ -55,14 +55,6 @@ pub fn get_fill(bcx: &Block, vptr: ValueRef) -> ValueRef {\n     Load(bcx, GEPi(bcx, vptr, [0u, abi::vec_elt_fill]))\n }\n \n-pub fn set_fill(bcx: &Block, vptr: ValueRef, fill: ValueRef) {\n-    Store(bcx, fill, GEPi(bcx, vptr, [0u, abi::vec_elt_fill]));\n-}\n-\n-pub fn get_alloc(bcx: &Block, vptr: ValueRef) -> ValueRef {\n-    Load(bcx, GEPi(bcx, vptr, [0u, abi::vec_elt_alloc]))\n-}\n-\n pub fn get_dataptr(bcx: &Block, vptr: ValueRef) -> ValueRef {\n     let _icx = push_ctxt(\"tvec::get_dataptr\");\n     GEPi(bcx, vptr, [0u, abi::vec_elt_elems, 0u])\n@@ -102,15 +94,6 @@ pub fn alloc_raw<'a>(\n     }\n }\n \n-pub fn alloc_uniq_raw<'a>(\n-                      bcx: &'a Block<'a>,\n-                      unit_ty: ty::t,\n-                      fill: ValueRef,\n-                      alloc: ValueRef)\n-                      -> Result<'a> {\n-    alloc_raw(bcx, unit_ty, fill, alloc, heap_exchange)\n-}\n-\n pub fn alloc_uniq_vec<'a>(\n                  bcx: &'a Block<'a>,\n                  unit_ty: ty::t,\n@@ -693,19 +676,6 @@ pub fn iter_vec_raw<'r,\n     }\n }\n \n-pub fn iter_vec_uniq<'r,\n-                     'b>(\n-                     bcx: &'b Block<'b>,\n-                     vptr: ValueRef,\n-                     vec_ty: ty::t,\n-                     fill: ValueRef,\n-                     f: iter_vec_block<'r,'b>)\n-                     -> &'b Block<'b> {\n-    let _icx = push_ctxt(\"tvec::iter_vec_uniq\");\n-    let data_ptr = get_dataptr(bcx, vptr);\n-    iter_vec_raw(bcx, data_ptr, vec_ty, fill, f)\n-}\n-\n pub fn iter_vec_unboxed<'r,\n                         'b>(\n                         bcx: &'b Block<'b>,"}]}