{"sha": "d718bc292d342a99580ec971dc7e873e5fc6e5c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3MThiYzI5MmQzNDJhOTk1ODBlYzk3MWRjN2U4NzNlNWZjNmU1YzQ=", "commit": {"author": {"name": "Michael Arntzenius", "email": "daekharel@gmail.com", "date": "2012-11-28T17:35:08Z"}, "committer": {"name": "Michael Arntzenius", "email": "daekharel@gmail.com", "date": "2012-11-28T17:35:08Z"}, "message": "libcore/to_bytes.rs: add IterBytes impls for pairs and triples", "tree": {"sha": "985586dd6ee66013f8d3a251a271d28e3a45da1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/985586dd6ee66013f8d3a251a271d28e3a45da1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d718bc292d342a99580ec971dc7e873e5fc6e5c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d718bc292d342a99580ec971dc7e873e5fc6e5c4", "html_url": "https://github.com/rust-lang/rust/commit/d718bc292d342a99580ec971dc7e873e5fc6e5c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d718bc292d342a99580ec971dc7e873e5fc6e5c4/comments", "author": {"login": "rntz", "id": 16143, "node_id": "MDQ6VXNlcjE2MTQz", "avatar_url": "https://avatars.githubusercontent.com/u/16143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rntz", "html_url": "https://github.com/rntz", "followers_url": "https://api.github.com/users/rntz/followers", "following_url": "https://api.github.com/users/rntz/following{/other_user}", "gists_url": "https://api.github.com/users/rntz/gists{/gist_id}", "starred_url": "https://api.github.com/users/rntz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rntz/subscriptions", "organizations_url": "https://api.github.com/users/rntz/orgs", "repos_url": "https://api.github.com/users/rntz/repos", "events_url": "https://api.github.com/users/rntz/events{/privacy}", "received_events_url": "https://api.github.com/users/rntz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rntz", "id": 16143, "node_id": "MDQ6VXNlcjE2MTQz", "avatar_url": "https://avatars.githubusercontent.com/u/16143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rntz", "html_url": "https://github.com/rntz", "followers_url": "https://api.github.com/users/rntz/followers", "following_url": "https://api.github.com/users/rntz/following{/other_user}", "gists_url": "https://api.github.com/users/rntz/gists{/gist_id}", "starred_url": "https://api.github.com/users/rntz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rntz/subscriptions", "organizations_url": "https://api.github.com/users/rntz/orgs", "repos_url": "https://api.github.com/users/rntz/repos", "events_url": "https://api.github.com/users/rntz/events{/privacy}", "received_events_url": "https://api.github.com/users/rntz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68c73dc5f29bf75d6c76054ebfaf2fbb3751a71b", "url": "https://api.github.com/repos/rust-lang/rust/commits/68c73dc5f29bf75d6c76054ebfaf2fbb3751a71b", "html_url": "https://github.com/rust-lang/rust/commit/68c73dc5f29bf75d6c76054ebfaf2fbb3751a71b"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "3aaa3ab8d91832b720c2b03b56e4d75bf1f3dda1", "filename": "src/libcore/to_bytes.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d718bc292d342a99580ec971dc7e873e5fc6e5c4/src%2Flibcore%2Fto_bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d718bc292d342a99580ec971dc7e873e5fc6e5c4/src%2Flibcore%2Fto_bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fto_bytes.rs?ref=d718bc292d342a99580ec971dc7e873e5fc6e5c4", "patch": "@@ -191,6 +191,25 @@ impl<A: IterBytes> &[A]: IterBytes {\n     }\n }\n \n+impl<A: IterBytes, B: IterBytes> (A,B): IterBytes {\n+  #[inline(always)]\n+  pure fn iter_bytes(lsb0: bool, f: Cb) {\n+    let &(ref a, ref b) = &self;\n+    a.iter_bytes(lsb0, f);\n+    b.iter_bytes(lsb0, f);\n+  }\n+}\n+\n+impl<A: IterBytes, B: IterBytes, C: IterBytes> (A,B,C): IterBytes {\n+  #[inline(always)]\n+  pure fn iter_bytes(lsb0: bool, f: Cb) {\n+    let &(ref a, ref b, ref c) = &self;\n+    a.iter_bytes(lsb0, f);\n+    b.iter_bytes(lsb0, f);\n+    c.iter_bytes(lsb0, f);\n+  }\n+}\n+\n // Move this to vec, probably.\n pure fn borrow<A>(a: &x/[A]) -> &x/[A] {\n     a"}]}