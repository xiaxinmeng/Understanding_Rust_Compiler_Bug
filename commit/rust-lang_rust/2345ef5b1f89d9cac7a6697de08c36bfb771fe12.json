{"sha": "2345ef5b1f89d9cac7a6697de08c36bfb771fe12", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzNDVlZjViMWY4OWQ5Y2FjN2E2Njk3ZGUwOGMzNmJmYjc3MWZlMTI=", "commit": {"author": {"name": "PunitLodha", "email": "punitlodha@pm.me", "date": "2020-11-14T13:51:33Z"}, "committer": {"name": "PunitLodha", "email": "punitlodha@pm.me", "date": "2020-11-25T15:29:29Z"}, "message": "added lints str_to_string and string_to_string", "tree": {"sha": "e0390dba94781e9c2c4186ec1ad29a471cf5a8b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0390dba94781e9c2c4186ec1ad29a471cf5a8b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2345ef5b1f89d9cac7a6697de08c36bfb771fe12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2345ef5b1f89d9cac7a6697de08c36bfb771fe12", "html_url": "https://github.com/rust-lang/rust/commit/2345ef5b1f89d9cac7a6697de08c36bfb771fe12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/comments", "author": {"login": "PunitLodha", "id": 48253287, "node_id": "MDQ6VXNlcjQ4MjUzMjg3", "avatar_url": "https://avatars.githubusercontent.com/u/48253287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PunitLodha", "html_url": "https://github.com/PunitLodha", "followers_url": "https://api.github.com/users/PunitLodha/followers", "following_url": "https://api.github.com/users/PunitLodha/following{/other_user}", "gists_url": "https://api.github.com/users/PunitLodha/gists{/gist_id}", "starred_url": "https://api.github.com/users/PunitLodha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PunitLodha/subscriptions", "organizations_url": "https://api.github.com/users/PunitLodha/orgs", "repos_url": "https://api.github.com/users/PunitLodha/repos", "events_url": "https://api.github.com/users/PunitLodha/events{/privacy}", "received_events_url": "https://api.github.com/users/PunitLodha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "PunitLodha", "id": 48253287, "node_id": "MDQ6VXNlcjQ4MjUzMjg3", "avatar_url": "https://avatars.githubusercontent.com/u/48253287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PunitLodha", "html_url": "https://github.com/PunitLodha", "followers_url": "https://api.github.com/users/PunitLodha/followers", "following_url": "https://api.github.com/users/PunitLodha/following{/other_user}", "gists_url": "https://api.github.com/users/PunitLodha/gists{/gist_id}", "starred_url": "https://api.github.com/users/PunitLodha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PunitLodha/subscriptions", "organizations_url": "https://api.github.com/users/PunitLodha/orgs", "repos_url": "https://api.github.com/users/PunitLodha/repos", "events_url": "https://api.github.com/users/PunitLodha/events{/privacy}", "received_events_url": "https://api.github.com/users/PunitLodha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32c51d2c58c36df312d61a49a3512beb29c19636", "url": "https://api.github.com/repos/rust-lang/rust/commits/32c51d2c58c36df312d61a49a3512beb29c19636", "html_url": "https://github.com/rust-lang/rust/commit/32c51d2c58c36df312d61a49a3512beb29c19636"}], "stats": {"total": 280, "additions": 189, "deletions": 91}, "files": [{"sha": "bec0c9f93a0d294d27f7dc025363daf37ae3abb3", "filename": "clippy_lints/src/deprecated_lints.rs", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/clippy_lints%2Fsrc%2Fdeprecated_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/clippy_lints%2Fsrc%2Fdeprecated_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdeprecated_lints.rs?ref=2345ef5b1f89d9cac7a6697de08c36bfb771fe12", "patch": "@@ -51,26 +51,6 @@ declare_deprecated_lint! {\n     \"`Vec::as_mut_slice` has been stabilized in 1.7\"\n }\n \n-declare_deprecated_lint! {\n-    /// **What it does:** Nothing. This lint has been deprecated.\n-    ///\n-    /// **Deprecation reason:** This used to check for `.to_string()` method calls on values\n-    /// of type `&str`. This is not unidiomatic and with specialization coming, `to_string` could be\n-    /// specialized to be as efficient as `to_owned`.\n-    pub STR_TO_STRING,\n-    \"using `str::to_string` is common even today and specialization will likely happen soon\"\n-}\n-\n-declare_deprecated_lint! {\n-    /// **What it does:** Nothing. This lint has been deprecated.\n-    ///\n-    /// **Deprecation reason:** This used to check for `.to_string()` method calls on values\n-    /// of type `String`. This is not unidiomatic and with specialization coming, `to_string` could be\n-    /// specialized to be as efficient as `clone`.\n-    pub STRING_TO_STRING,\n-    \"using `string::to_string` is common even today and specialization will likely happen soon\"\n-}\n-\n declare_deprecated_lint! {\n     /// **What it does:** Nothing. This lint has been deprecated.\n     ///"}, {"sha": "67a3a3fcf48a047636ab2666a358bde8f4334b3f", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 6, "deletions": 16, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=2345ef5b1f89d9cac7a6697de08c36bfb771fe12", "patch": "@@ -441,14 +441,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         \"clippy::unstable_as_mut_slice\",\n         \"`Vec::as_mut_slice` has been stabilized in 1.7\",\n     );\n-    store.register_removed(\n-        \"clippy::str_to_string\",\n-        \"using `str::to_string` is common even today and specialization will likely happen soon\",\n-    );\n-    store.register_removed(\n-        \"clippy::string_to_string\",\n-        \"using `string::to_string` is common even today and specialization will likely happen soon\",\n-    );\n     store.register_removed(\n         \"clippy::misaligned_transmute\",\n         \"this lint has been split into cast_ptr_alignment and transmute_ptr_to_ptr\",\n@@ -840,6 +832,8 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &strings::STRING_ADD_ASSIGN,\n         &strings::STRING_FROM_UTF8_AS_BYTES,\n         &strings::STRING_LIT_AS_BYTES,\n+        &strings::STRING_TO_STRING,\n+        &strings::STR_TO_STRING,\n         &suspicious_trait_impl::SUSPICIOUS_ARITHMETIC_IMPL,\n         &suspicious_trait_impl::SUSPICIOUS_OP_ASSIGN_IMPL,\n         &swap::ALMOST_SWAPPED,\n@@ -1186,6 +1180,8 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_early_pass(|| box asm_syntax::InlineAsmX86AttSyntax);\n     store.register_early_pass(|| box asm_syntax::InlineAsmX86IntelSyntax);\n     store.register_late_pass(|| box undropped_manually_drops::UndroppedManuallyDrops);\n+    store.register_late_pass(|| box strings::StrToString);\n+    store.register_late_pass(|| box strings::StringToString);\n \n \n     store.register_group(true, \"clippy::restriction\", Some(\"clippy_restriction\"), vec![\n@@ -1228,6 +1224,8 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&shadow::SHADOW_REUSE),\n         LintId::of(&shadow::SHADOW_SAME),\n         LintId::of(&strings::STRING_ADD),\n+        LintId::of(&strings::STRING_TO_STRING),\n+        LintId::of(&strings::STR_TO_STRING),\n         LintId::of(&types::RC_BUFFER),\n         LintId::of(&unwrap_in_result::UNWRAP_IN_RESULT),\n         LintId::of(&verbose_file_reads::VERBOSE_FILE_READS),\n@@ -1943,14 +1941,6 @@ fn register_removed_non_tool_lints(store: &mut rustc_lint::LintStore) {\n         \"unstable_as_mut_slice\",\n         \"`Vec::as_mut_slice` has been stabilized in 1.7\",\n     );\n-    store.register_removed(\n-        \"str_to_string\",\n-        \"using `str::to_string` is common even today and specialization will likely happen soon\",\n-    );\n-    store.register_removed(\n-        \"string_to_string\",\n-        \"using `string::to_string` is common even today and specialization will likely happen soon\",\n-    );\n     store.register_removed(\n         \"misaligned_transmute\",\n         \"this lint has been split into cast_ptr_alignment and transmute_ptr_to_ptr\","}, {"sha": "42c45be3b45d8b640968b7123ecb7b544f35af2e", "filename": "clippy_lints/src/strings.rs", "status": "modified", "additions": 99, "deletions": 1, "changes": 100, "blob_url": "https://github.com/rust-lang/rust/blob/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/clippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/clippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrings.rs?ref=2345ef5b1f89d9cac7a6697de08c36bfb771fe12", "patch": "@@ -2,6 +2,7 @@ use rustc_errors::Applicability;\n use rustc_hir::{BinOpKind, BorrowKind, Expr, ExprKind, LangItem, QPath};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_middle::lint::in_external_macro;\n+use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;\n use rustc_span::sym;\n@@ -11,7 +12,7 @@ use if_chain::if_chain;\n use crate::utils::SpanlessEq;\n use crate::utils::{\n     get_parent_expr, is_allowed, is_type_diagnostic_item, match_function_call, method_calls, paths, span_lint,\n-    span_lint_and_sugg,\n+    span_lint_and_help, span_lint_and_sugg,\n };\n \n declare_clippy_lint! {\n@@ -289,3 +290,100 @@ impl<'tcx> LateLintPass<'tcx> for StringLitAsBytes {\n         }\n     }\n }\n+\n+declare_clippy_lint! {\n+    /// **What it does:** This lint checks for `.to_string()` method calls on values of type `&str`.\n+    ///\n+    /// **Why is this bad?** The `to_string` method is also used on other types to convert them to a string.\n+    /// When called on a `&str` it turns the `&str` into the owned variant `String`, which can be better\n+    /// expressed with `.to_owned()`.\n+    ///\n+    /// **Known problems:** None.\n+    ///\n+    /// **Example:**\n+    ///\n+    /// ```rust\n+    /// // example code where clippy issues a warning\n+    /// let _ = \"str\".to_string();\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// // example code which does not raise clippy warning\n+    /// let _ = \"str\".to_owned();\n+    /// ```\n+    pub STR_TO_STRING,\n+    restriction,\n+    \"using `to_string()` on a `&str`, which should be `to_owned()`\"\n+}\n+\n+declare_lint_pass!(StrToString => [STR_TO_STRING]);\n+\n+impl LateLintPass<'_> for StrToString {\n+    fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &Expr<'_>) {\n+        if_chain! {\n+            if let ExprKind::MethodCall(path, _, args, _) = &expr.kind;\n+            if path.ident.name == sym!(to_string);\n+            let ty = cx.typeck_results().expr_ty(&args[0]);\n+            if let ty::Ref(_, ty, ..) = ty.kind();\n+            if *ty.kind() == ty::Str;\n+            then {\n+                span_lint_and_help(\n+                    cx,\n+                    STR_TO_STRING,\n+                    expr.span,\n+                    \"`to_string()` called on a `&str`\",\n+                    None,\n+                    \"consider using `.to_owned()`\",\n+                );\n+            }\n+        }\n+    }\n+}\n+\n+declare_clippy_lint! {\n+    /// **What it does:** This lint checks for `.to_string()` method calls on values of type `String`.\n+    ///\n+    /// **Why is this bad?** The `to_string` method is also used on other types to convert them to a string.\n+    /// When called on a `String` it only clones the `String`, which can be better expressed with `.clone()`.\n+    /// **Known problems:** None.\n+    ///\n+    /// **Example:**\n+    ///\n+    /// ```rust\n+    /// // example code where clippy issues a warning\n+    /// let msg = String::from(\"Hello World\");\n+    /// let _ = msg.to_string();\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// // example code which does not raise clippy warning\n+    /// let msg = String::from(\"Hello World\");\n+    /// let _ = msg.clone();\n+    /// ```\n+    pub STRING_TO_STRING,\n+    restriction,\n+    \"using `to_string()` on a `String`, which should be `clone()`\"\n+}\n+\n+declare_lint_pass!(StringToString => [STRING_TO_STRING]);\n+\n+impl LateLintPass<'_> for StringToString {\n+    fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &Expr<'_>) {\n+        if_chain! {\n+            if let ExprKind::MethodCall(path, _, args, _) = &expr.kind;\n+            if path.ident.name == sym!(to_string);\n+            let ty = cx.typeck_results().expr_ty(&args[0]);\n+            if is_type_diagnostic_item(cx, ty, sym!(string_type));\n+            then {\n+                span_lint_and_help(\n+                    cx,\n+                    STRING_TO_STRING,\n+                    expr.span,\n+                    \"`to_string()` called on a `String`\",\n+                    None,\n+                    \"consider using `.clone()`\",\n+                );\n+            }\n+        }\n+    }\n+}"}, {"sha": "a104f687bdf663b3c660725a177b0973cc1659ee", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=2345ef5b1f89d9cac7a6697de08c36bfb771fe12", "patch": "@@ -2237,6 +2237,13 @@ vec![\n         deprecation: None,\n         module: \"stable_sort_primitive\",\n     },\n+    Lint {\n+        name: \"str_to_string\",\n+        group: \"restriction\",\n+        desc: \"using `to_string()` on a `&str`, which should be `to_owned()`\",\n+        deprecation: None,\n+        module: \"strings\",\n+    },\n     Lint {\n         name: \"string_add\",\n         group: \"restriction\",\n@@ -2272,6 +2279,13 @@ vec![\n         deprecation: None,\n         module: \"strings\",\n     },\n+    Lint {\n+        name: \"string_to_string\",\n+        group: \"restriction\",\n+        desc: \"using `to_string()` on a `String`, which should be `clone()`\",\n+        deprecation: None,\n+        module: \"strings\",\n+    },\n     Lint {\n         name: \"struct_excessive_bools\",\n         group: \"pedantic\","}, {"sha": "e1ee8dbca2c04286a9924606d4865aae056c1e10", "filename": "tests/ui/deprecated.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/tests%2Fui%2Fdeprecated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/tests%2Fui%2Fdeprecated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdeprecated.rs?ref=2345ef5b1f89d9cac7a6697de08c36bfb771fe12", "patch": "@@ -1,5 +1,3 @@\n-#[warn(clippy::str_to_string)]\n-#[warn(clippy::string_to_string)]\n #[warn(clippy::unstable_as_slice)]\n #[warn(clippy::unstable_as_mut_slice)]\n #[warn(clippy::misaligned_transmute)]"}, {"sha": "edbb891afe07bdb9cfd6e9d2c84d158c400c5b86", "filename": "tests/ui/deprecated.stderr", "status": "modified", "additions": 17, "deletions": 29, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/tests%2Fui%2Fdeprecated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/tests%2Fui%2Fdeprecated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdeprecated.stderr?ref=2345ef5b1f89d9cac7a6697de08c36bfb771fe12", "patch": "@@ -1,88 +1,76 @@\n-error: lint `clippy::str_to_string` has been removed: `using `str::to_string` is common even today and specialization will likely happen soon`\n-  --> $DIR/deprecated.rs:1:8\n-   |\n-LL | #[warn(clippy::str_to_string)]\n-   |        ^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: `-D renamed-and-removed-lints` implied by `-D warnings`\n-\n-error: lint `clippy::string_to_string` has been removed: `using `string::to_string` is common even today and specialization will likely happen soon`\n-  --> $DIR/deprecated.rs:2:8\n-   |\n-LL | #[warn(clippy::string_to_string)]\n-   |        ^^^^^^^^^^^^^^^^^^^^^^^^\n-\n error: lint `clippy::unstable_as_slice` has been removed: ``Vec::as_slice` has been stabilized in 1.7`\n-  --> $DIR/deprecated.rs:3:8\n+  --> $DIR/deprecated.rs:1:8\n    |\n LL | #[warn(clippy::unstable_as_slice)]\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D renamed-and-removed-lints` implied by `-D warnings`\n \n error: lint `clippy::unstable_as_mut_slice` has been removed: ``Vec::as_mut_slice` has been stabilized in 1.7`\n-  --> $DIR/deprecated.rs:4:8\n+  --> $DIR/deprecated.rs:2:8\n    |\n LL | #[warn(clippy::unstable_as_mut_slice)]\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: lint `clippy::misaligned_transmute` has been removed: `this lint has been split into cast_ptr_alignment and transmute_ptr_to_ptr`\n-  --> $DIR/deprecated.rs:5:8\n+  --> $DIR/deprecated.rs:3:8\n    |\n LL | #[warn(clippy::misaligned_transmute)]\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: lint `clippy::unused_collect` has been removed: ``collect` has been marked as #[must_use] in rustc and that covers all cases of this lint`\n-  --> $DIR/deprecated.rs:6:8\n+  --> $DIR/deprecated.rs:4:8\n    |\n LL | #[warn(clippy::unused_collect)]\n    |        ^^^^^^^^^^^^^^^^^^^^^^\n \n error: lint `clippy::invalid_ref` has been removed: `superseded by rustc lint `invalid_value``\n-  --> $DIR/deprecated.rs:7:8\n+  --> $DIR/deprecated.rs:5:8\n    |\n LL | #[warn(clippy::invalid_ref)]\n    |        ^^^^^^^^^^^^^^^^^^^\n \n error: lint `clippy::into_iter_on_array` has been removed: `this lint has been uplifted to rustc and is now called `array_into_iter``\n-  --> $DIR/deprecated.rs:8:8\n+  --> $DIR/deprecated.rs:6:8\n    |\n LL | #[warn(clippy::into_iter_on_array)]\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: lint `clippy::unused_label` has been removed: `this lint has been uplifted to rustc and is now called `unused_labels``\n-  --> $DIR/deprecated.rs:9:8\n+  --> $DIR/deprecated.rs:7:8\n    |\n LL | #[warn(clippy::unused_label)]\n    |        ^^^^^^^^^^^^^^^^^^^^\n \n error: lint `clippy::regex_macro` has been removed: `the regex! macro has been removed from the regex crate in 2018`\n-  --> $DIR/deprecated.rs:10:8\n+  --> $DIR/deprecated.rs:8:8\n    |\n LL | #[warn(clippy::regex_macro)]\n    |        ^^^^^^^^^^^^^^^^^^^\n \n error: lint `clippy::drop_bounds` has been removed: `this lint has been uplifted to rustc and is now called `drop_bounds``\n-  --> $DIR/deprecated.rs:11:8\n+  --> $DIR/deprecated.rs:9:8\n    |\n LL | #[warn(clippy::drop_bounds)]\n    |        ^^^^^^^^^^^^^^^^^^^\n \n error: lint `clippy::temporary_cstring_as_ptr` has been removed: `this lint has been uplifted to rustc and is now called `temporary_cstring_as_ptr``\n-  --> $DIR/deprecated.rs:12:8\n+  --> $DIR/deprecated.rs:10:8\n    |\n LL | #[warn(clippy::temporary_cstring_as_ptr)]\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: lint `clippy::panic_params` has been removed: `this lint has been uplifted to rustc and is now called `panic_fmt``\n-  --> $DIR/deprecated.rs:13:8\n+  --> $DIR/deprecated.rs:11:8\n    |\n LL | #[warn(clippy::panic_params)]\n    |        ^^^^^^^^^^^^^^^^^^^^\n \n-error: lint `clippy::str_to_string` has been removed: `using `str::to_string` is common even today and specialization will likely happen soon`\n+error: lint `clippy::unstable_as_slice` has been removed: ``Vec::as_slice` has been stabilized in 1.7`\n   --> $DIR/deprecated.rs:1:8\n    |\n-LL | #[warn(clippy::str_to_string)]\n-   |        ^^^^^^^^^^^^^^^^^^^^^\n+LL | #[warn(clippy::unstable_as_slice)]\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 14 previous errors\n+error: aborting due to 12 previous errors\n "}, {"sha": "e89dca4fcfd4cf3ea6625b8d2e159f1e98956924", "filename": "tests/ui/deprecated_old.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/tests%2Fui%2Fdeprecated_old.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/tests%2Fui%2Fdeprecated_old.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdeprecated_old.rs?ref=2345ef5b1f89d9cac7a6697de08c36bfb771fe12", "patch": "@@ -1,5 +1,3 @@\n-#[warn(str_to_string)]\n-#[warn(string_to_string)]\n #[warn(unstable_as_slice)]\n #[warn(unstable_as_mut_slice)]\n #[warn(misaligned_transmute)]"}, {"sha": "2fe1facf0c72de582fef93a36a28527e32dc12c2", "filename": "tests/ui/deprecated_old.stderr", "status": "modified", "additions": 9, "deletions": 21, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/tests%2Fui%2Fdeprecated_old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/tests%2Fui%2Fdeprecated_old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdeprecated_old.stderr?ref=2345ef5b1f89d9cac7a6697de08c36bfb771fe12", "patch": "@@ -1,40 +1,28 @@\n-error: lint `str_to_string` has been removed: `using `str::to_string` is common even today and specialization will likely happen soon`\n-  --> $DIR/deprecated_old.rs:1:8\n-   |\n-LL | #[warn(str_to_string)]\n-   |        ^^^^^^^^^^^^^\n-   |\n-   = note: `-D renamed-and-removed-lints` implied by `-D warnings`\n-\n-error: lint `string_to_string` has been removed: `using `string::to_string` is common even today and specialization will likely happen soon`\n-  --> $DIR/deprecated_old.rs:2:8\n-   |\n-LL | #[warn(string_to_string)]\n-   |        ^^^^^^^^^^^^^^^^\n-\n error: lint `unstable_as_slice` has been removed: ``Vec::as_slice` has been stabilized in 1.7`\n-  --> $DIR/deprecated_old.rs:3:8\n+  --> $DIR/deprecated_old.rs:1:8\n    |\n LL | #[warn(unstable_as_slice)]\n    |        ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D renamed-and-removed-lints` implied by `-D warnings`\n \n error: lint `unstable_as_mut_slice` has been removed: ``Vec::as_mut_slice` has been stabilized in 1.7`\n-  --> $DIR/deprecated_old.rs:4:8\n+  --> $DIR/deprecated_old.rs:2:8\n    |\n LL | #[warn(unstable_as_mut_slice)]\n    |        ^^^^^^^^^^^^^^^^^^^^^\n \n error: lint `misaligned_transmute` has been removed: `this lint has been split into cast_ptr_alignment and transmute_ptr_to_ptr`\n-  --> $DIR/deprecated_old.rs:5:8\n+  --> $DIR/deprecated_old.rs:3:8\n    |\n LL | #[warn(misaligned_transmute)]\n    |        ^^^^^^^^^^^^^^^^^^^^\n \n-error: lint `str_to_string` has been removed: `using `str::to_string` is common even today and specialization will likely happen soon`\n+error: lint `unstable_as_slice` has been removed: ``Vec::as_slice` has been stabilized in 1.7`\n   --> $DIR/deprecated_old.rs:1:8\n    |\n-LL | #[warn(str_to_string)]\n-   |        ^^^^^^^^^^^^^\n+LL | #[warn(unstable_as_slice)]\n+   |        ^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 4 previous errors\n "}, {"sha": "08f734025181c612ee3c7139d94edb363e574852", "filename": "tests/ui/str_to_string.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/tests%2Fui%2Fstr_to_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/tests%2Fui%2Fstr_to_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstr_to_string.rs?ref=2345ef5b1f89d9cac7a6697de08c36bfb771fe12", "patch": "@@ -0,0 +1,7 @@\n+#![warn(clippy::str_to_string)]\n+\n+fn main() {\n+    let hello = \"hello world\".to_string();\n+    let msg = &hello[..];\n+    msg.to_string();\n+}"}, {"sha": "b1f73eda5d26c2e75c10e87d81aec835dd309462", "filename": "tests/ui/str_to_string.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/tests%2Fui%2Fstr_to_string.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/tests%2Fui%2Fstr_to_string.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstr_to_string.stderr?ref=2345ef5b1f89d9cac7a6697de08c36bfb771fe12", "patch": "@@ -0,0 +1,19 @@\n+error: `to_string()` called on a `&str`\n+  --> $DIR/str_to_string.rs:4:17\n+   |\n+LL |     let hello = \"hello world\".to_string();\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::str-to-string` implied by `-D warnings`\n+   = help: consider using `.to_owned()`\n+\n+error: `to_string()` called on a `&str`\n+  --> $DIR/str_to_string.rs:6:5\n+   |\n+LL |     msg.to_string();\n+   |     ^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using `.to_owned()`\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "4c66855f709411358f81e4af29ac3f2f07c03bc3", "filename": "tests/ui/string_to_string.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/tests%2Fui%2Fstring_to_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/tests%2Fui%2Fstring_to_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_to_string.rs?ref=2345ef5b1f89d9cac7a6697de08c36bfb771fe12", "patch": "@@ -0,0 +1,7 @@\n+#![warn(clippy::string_to_string)]\n+#![allow(clippy::redundant_clone)]\n+\n+fn main() {\n+    let mut message = String::from(\"Hello\");\n+    let mut v = message.to_string();\n+}"}, {"sha": "1ebd17999bd8ffae49af1238cb617fb62972ce7b", "filename": "tests/ui/string_to_string.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/tests%2Fui%2Fstring_to_string.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2345ef5b1f89d9cac7a6697de08c36bfb771fe12/tests%2Fui%2Fstring_to_string.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_to_string.stderr?ref=2345ef5b1f89d9cac7a6697de08c36bfb771fe12", "patch": "@@ -0,0 +1,11 @@\n+error: `to_string()` called on a `String`\n+  --> $DIR/string_to_string.rs:6:17\n+   |\n+LL |     let mut v = message.to_string();\n+   |                 ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::string-to-string` implied by `-D warnings`\n+   = help: consider using `.clone()`\n+\n+error: aborting due to previous error\n+"}]}