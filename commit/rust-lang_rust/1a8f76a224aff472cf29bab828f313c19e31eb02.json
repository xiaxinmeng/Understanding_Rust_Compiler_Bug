{"sha": "1a8f76a224aff472cf29bab828f313c19e31eb02", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhOGY3NmEyMjRhZmY0NzJjZjI5YmFiODI4ZjMxM2MxOWUzMWViMDI=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-06-16T15:45:58Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-06-16T19:51:20Z"}, "message": "Don't complete visibility accessors after existing ones", "tree": {"sha": "bf7b7c157e632be799980ed18e60b8a584b854ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf7b7c157e632be799980ed18e60b8a584b854ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a8f76a224aff472cf29bab828f313c19e31eb02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a8f76a224aff472cf29bab828f313c19e31eb02", "html_url": "https://github.com/rust-lang/rust/commit/1a8f76a224aff472cf29bab828f313c19e31eb02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a8f76a224aff472cf29bab828f313c19e31eb02/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d338a803941c2b0ac83decfcdfac33c09dfaa971", "url": "https://api.github.com/repos/rust-lang/rust/commits/d338a803941c2b0ac83decfcdfac33c09dfaa971", "html_url": "https://github.com/rust-lang/rust/commit/d338a803941c2b0ac83decfcdfac33c09dfaa971"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "0bfdf9603e5a592e79c6c7148c5653e83a85a411", "filename": "crates/ide_completion/src/completions/keyword.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1a8f76a224aff472cf29bab828f313c19e31eb02/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fkeyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a8f76a224aff472cf29bab828f313c19e31eb02/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fkeyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fkeyword.rs?ref=1a8f76a224aff472cf29bab828f313c19e31eb02", "patch": "@@ -75,7 +75,9 @@ pub(crate) fn complete_expr_keyword(acc: &mut Completions, ctx: &CompletionConte\n         return;\n     }\n \n-    if expects_item || ctx.expects_non_trait_assoc_item() || ctx.expect_record_field() {\n+    if !ctx.has_visibility_prev_sibling()\n+        && (expects_item || ctx.expects_non_trait_assoc_item() || ctx.expect_record_field())\n+    {\n         add_keyword(\"pub(crate)\", \"pub(crate) \");\n         add_keyword(\"pub\", \"pub \");\n     }"}, {"sha": "3885db70214a8f3a4f8684153e6dff340aa8d363", "filename": "crates/ide_completion/src/context.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1a8f76a224aff472cf29bab828f313c19e31eb02/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a8f76a224aff472cf29bab828f313c19e31eb02/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcontext.rs?ref=1a8f76a224aff472cf29bab828f313c19e31eb02", "patch": "@@ -302,6 +302,10 @@ impl<'a> CompletionContext<'a> {\n         )\n     }\n \n+    pub(crate) fn has_visibility_prev_sibling(&self) -> bool {\n+        matches!(self.prev_sibling, Some(ImmediatePrevSibling::Visibility))\n+    }\n+\n     pub(crate) fn after_if(&self) -> bool {\n         matches!(self.prev_sibling, Some(ImmediatePrevSibling::IfExpr))\n     }"}, {"sha": "345977d48bfc2c399603a2005a6892d50bc12814", "filename": "crates/ide_completion/src/patterns.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1a8f76a224aff472cf29bab828f313c19e31eb02/crates%2Fide_completion%2Fsrc%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a8f76a224aff472cf29bab828f313c19e31eb02/crates%2Fide_completion%2Fsrc%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fpatterns.rs?ref=1a8f76a224aff472cf29bab828f313c19e31eb02", "patch": "@@ -19,6 +19,7 @@ pub(crate) enum ImmediatePrevSibling {\n     IfExpr,\n     TraitDefName,\n     ImplDefType,\n+    Visibility,\n }\n \n /// Direct parent \"thing\" of what we are currently completing.\n@@ -79,6 +80,17 @@ pub(crate) fn determine_prev_sibling(name_like: &ast::NameLike) -> Option<Immedi\n         _ => node,\n     };\n     let prev_sibling = non_trivia_sibling(node.into(), Direction::Prev)?.into_node()?;\n+    if prev_sibling.kind() == ERROR {\n+        let prev_sibling = prev_sibling.first_child()?;\n+        let res = match_ast! {\n+            match prev_sibling {\n+                // vis followed by random ident will always error the parser\n+                ast::Visibility(_it) => ImmediatePrevSibling::Visibility,\n+                _ => return None,\n+            }\n+        };\n+        return Some(res);\n+    }\n     let res = match_ast! {\n         match prev_sibling {\n             ast::ExprStmt(it) => {\n@@ -421,4 +433,9 @@ mod tests {\n         check_prev_sibling(r\"fn foo() { if true {} w$0\", ImmediatePrevSibling::IfExpr);\n         check_prev_sibling(r\"fn foo() { if true {}; w$0\", None);\n     }\n+\n+    #[test]\n+    fn test_vis_prev_sibling() {\n+        check_prev_sibling(r\"pub w$0\", ImmediatePrevSibling::Visibility);\n+    }\n }"}, {"sha": "e7b77d7e7bade12ee3899ce1cd9f20d686d382f4", "filename": "crates/ide_completion/src/tests/item_list.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a8f76a224aff472cf29bab828f313c19e31eb02/crates%2Fide_completion%2Fsrc%2Ftests%2Fitem_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a8f76a224aff472cf29bab828f313c19e31eb02/crates%2Fide_completion%2Fsrc%2Ftests%2Fitem_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Fitem_list.rs?ref=1a8f76a224aff472cf29bab828f313c19e31eb02", "patch": "@@ -146,8 +146,6 @@ const CONST: () = ();\n \n pub $0\"#,\n         expect![[r##\"\n-            kw pub(crate)\n-            kw pub\n             kw unsafe\n             kw fn\n             kw const"}]}