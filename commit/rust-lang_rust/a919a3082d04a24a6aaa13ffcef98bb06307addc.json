{"sha": "a919a3082d04a24a6aaa13ffcef98bb06307addc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5MTlhMzA4MmQwNGEyNGE2YWFhMTNmZmNlZjk4YmIwNjMwN2FkZGM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-03T14:23:05Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-03T14:23:05Z"}, "message": "More snapshot logic refactoring.", "tree": {"sha": "8451b0595c3ae849d8f19a7488a9d64396c19a5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8451b0595c3ae849d8f19a7488a9d64396c19a5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a919a3082d04a24a6aaa13ffcef98bb06307addc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a919a3082d04a24a6aaa13ffcef98bb06307addc", "html_url": "https://github.com/rust-lang/rust/commit/a919a3082d04a24a6aaa13ffcef98bb06307addc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a919a3082d04a24a6aaa13ffcef98bb06307addc/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73961cc1ee1e208c75de4eab20762f422101c5d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/73961cc1ee1e208c75de4eab20762f422101c5d2", "html_url": "https://github.com/rust-lang/rust/commit/73961cc1ee1e208c75de4eab20762f422101c5d2"}], "stats": {"total": 107, "additions": 57, "deletions": 50}, "files": [{"sha": "9a076af0176bc66c22f1a574d7289e5592d4dd3d", "filename": "src/etc/get-snapshot.py", "status": "modified", "additions": 27, "deletions": 22, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/a919a3082d04a24a6aaa13ffcef98bb06307addc/src%2Fetc%2Fget-snapshot.py", "raw_url": "https://github.com/rust-lang/rust/raw/a919a3082d04a24a6aaa13ffcef98bb06307addc/src%2Fetc%2Fget-snapshot.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fget-snapshot.py?ref=a919a3082d04a24a6aaa13ffcef98bb06307addc", "patch": "@@ -24,43 +24,48 @@ def unpack_snapshot(snap):\n   tar.close()\n   shutil.rmtree(download_unpack_base)\n \n-def determine_last_snapshot_for_platform():\n-  lines = open(snapshotfile).readlines();\n+def determine_curr_snapshot_for_platform():\n \n+  i = 0\n   platform = get_platform()\n \n-  found = False\n+  found_file = False\n+  found_snap = False\n   hsh = None\n   date = None\n   rev = None\n \n-  for ln in range(len(lines) - 1, -1, -1):\n-    parsed = parse_line(ln, lines[ln])\n-    if (not parsed): continue\n-\n-    if parsed[\"type\"] == \"file\":\n-      if parsed[\"platform\"] == platform:\n-        hsh = parsed[\"hash\"]\n-    elif parsed[\"type\"] == \"snapshot\":\n-      date = parsed[\"date\"]\n-      rev = parsed[\"rev\"]\n-      found = True\n-      break\n-    elif parsed[\"type\"] == \"transition\" and not foundSnapshot:\n-      raise Exception(\"working on a transition, not updating stage0\")\n-\n-  if not found:\n+  with open(snapshotfile) as f:\n+    for line in f.xreadlines():\n+      i += 1\n+      parsed = parse_line(i, line)\n+      if (not parsed): continue\n+\n+      if parsed[\"type\"] == \"transition\":\n+        raise Exception(\"working on a transition, not updating stage0\")\n+\n+      if found_snap and parsed[\"type\"] == \"file\":\n+        if parsed[\"platform\"] == platform:\n+          hsh = parsed[\"hash\"]\n+          found_file = True\n+          break;\n+      elif parsed[\"type\"] == \"snapshot\":\n+        date = parsed[\"date\"]\n+        rev = parsed[\"rev\"]\n+        found_snap = True\n+\n+  if not found_snap:\n     raise Exception(\"no snapshot entries in file\")\n \n-  if not hsh:\n+  if not found_file:\n     raise Exception(\"no snapshot file found for platform %s, rev %s\" %\n                     (platform, rev))\n \n-  return full_snapshot_name(date, rev, get_kernel(), get_cpu(), hsh)\n+  return full_snapshot_name(date, rev, get_platform(), hsh)\n \n # Main\n \n-snap = determine_last_snapshot_for_platform()\n+snap = determine_curr_snapshot_for_platform()\n dl = os.path.join(download_dir_base, snap)\n url = download_url_base + \"/\" + snap\n print(\"determined most recent snapshot: \" + snap)"}, {"sha": "d02c09487ee51bbf49dc8092b97468569fc02498", "filename": "src/etc/make-snapshot.py", "status": "modified", "additions": 2, "deletions": 22, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a919a3082d04a24a6aaa13ffcef98bb06307addc/src%2Fetc%2Fmake-snapshot.py", "raw_url": "https://github.com/rust-lang/rust/raw/a919a3082d04a24a6aaa13ffcef98bb06307addc/src%2Fetc%2Fmake-snapshot.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmake-snapshot.py?ref=a919a3082d04a24a6aaa13ffcef98bb06307addc", "patch": "@@ -1,24 +1,4 @@\n #!/usr/bin/env python\n \n-import shutil, tarfile\n-from snapshot import *\n-\n-kernel = get_kernel()\n-cpu = get_cpu()\n-rev = local_rev_short_sha()\n-date = local_rev_committer_date().split()[0]\n-\n-file0 = partial_snapshot_name(date, rev, kernel, cpu)\n-\n-tar = tarfile.open(file0, \"w:bz2\")\n-for name in snapshot_files[kernel]:\n-    tar.add(os.path.join(\"stage2\", name),\n-            os.path.join(\"rust-stage0\", name))\n-tar.close()\n-\n-h = hash_file(file0)\n-file1 = full_snapshot_name(date, rev, kernel, cpu, h)\n-\n-shutil.move(file0, file1)\n-\n-print(file1)\n+import snapshot\n+print(snapshot.make_snapshot())"}, {"sha": "28f94290badd43d63ca002bb92bcf72815ec351a", "filename": "src/etc/snapshot.py", "status": "modified", "additions": 27, "deletions": 6, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/a919a3082d04a24a6aaa13ffcef98bb06307addc/src%2Fetc%2Fsnapshot.py", "raw_url": "https://github.com/rust-lang/rust/raw/a919a3082d04a24a6aaa13ffcef98bb06307addc/src%2Fetc%2Fsnapshot.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fsnapshot.py?ref=a919a3082d04a24a6aaa13ffcef98bb06307addc", "patch": "@@ -37,13 +37,13 @@ def parse_line(n, line):\n           \"rev\": match.group(3)}\n \n \n-def partial_snapshot_name(date, rev, kernel, cpu):\n-  return (\"rust-stage0-%s-%s-%s-%s.tar.bz2\"\n-          % (date, rev, kernel, cpu))\n+def partial_snapshot_name(date, rev, platform):\n+  return (\"rust-stage0-%s-%s-%s.tar.bz2\"\n+          % (date, rev, platform))\n \n-def full_snapshot_name(date, rev, kernel, cpu, hsh):\n-  return (\"rust-stage0-%s-%s-%s-%s-%s.tar.bz2\"\n-          % (date, rev, kernel, cpu, hsh))\n+def full_snapshot_name(date, rev, platform, hsh):\n+  return (\"rust-stage0-%s-%s-%s-%s.tar.bz2\"\n+          % (date, rev, platform, hsh))\n \n \n def get_kernel():\n@@ -98,3 +98,24 @@ def hash_file(x):\n     h = hashlib.sha1()\n     h.update(open(x, \"rb\").read())\n     return scrub(h.hexdigest())\n+\n+\n+def make_snapshot():\n+    kernel = get_kernel()\n+    platform = get_platform()\n+    rev = local_rev_short_sha()\n+    date = local_rev_committer_date().split()[0]\n+\n+    file0 = partial_snapshot_name(date, rev, platform)\n+\n+    tar = tarfile.open(file0, \"w:bz2\")\n+    for name in snapshot_files[kernel]:\n+    tar.add(os.path.join(\"stage2\", name),\n+    os.path.join(\"rust-stage0\", name))\n+    tar.close()\n+\n+    h = hash_file(file0)\n+    file1 = full_snapshot_name(date, rev, platform, h)\n+\n+    shutil.move(file0, file1)\n+    return file1"}, {"sha": "8ca9cd50a6404d90a912dcf84886dea3cde2866f", "filename": "src/snapshots.txt", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a919a3082d04a24a6aaa13ffcef98bb06307addc/src%2Fsnapshots.txt", "raw_url": "https://github.com/rust-lang/rust/raw/a919a3082d04a24a6aaa13ffcef98bb06307addc/src%2Fsnapshots.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsnapshots.txt?ref=a919a3082d04a24a6aaa13ffcef98bb06307addc", "patch": "@@ -1,4 +1,5 @@\n S 2011-05-02 ed40c85\n+  linux-i386 de76e0930be363af87e32ba65e3d6b1284633550\n   winnt-i386 e69c11fbc62639ac3a3eef7ea36c9ad77209e2b1\n \n S 2011-04-29 7b95b5c"}]}