{"sha": "6161758b6dc5f656378eb5ae191808e441167daa", "node_id": "C_kwDOAAsO6NoAKDYxNjE3NThiNmRjNWY2NTYzNzhlYjVhZTE5MTgwOGU0NDExNjdkYWE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-24T21:12:38Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-24T21:36:58Z"}, "message": "Rename some compare_method functions", "tree": {"sha": "227c3ee91c138a26f2a1e87064543eae748cf1d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/227c3ee91c138a26f2a1e87064543eae748cf1d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6161758b6dc5f656378eb5ae191808e441167daa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6161758b6dc5f656378eb5ae191808e441167daa", "html_url": "https://github.com/rust-lang/rust/commit/6161758b6dc5f656378eb5ae191808e441167daa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6161758b6dc5f656378eb5ae191808e441167daa/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e4f4660ebb4533de629b5d7d8ac10ed572d0f2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e4f4660ebb4533de629b5d7d8ac10ed572d0f2e", "html_url": "https://github.com/rust-lang/rust/commit/7e4f4660ebb4533de629b5d7d8ac10ed572d0f2e"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "899363a9e511f45699465ce723f0aa91b07708e5", "filename": "compiler/rustc_hir_analysis/src/check/check.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6161758b6dc5f656378eb5ae191808e441167daa/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6161758b6dc5f656378eb5ae191808e441167daa/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcheck.rs?ref=6161758b6dc5f656378eb5ae191808e441167daa", "patch": "@@ -2,7 +2,7 @@ use crate::check::intrinsicck::InlineAsmCtxt;\n use crate::errors::LinkageType;\n \n use super::compare_method::check_type_bounds;\n-use super::compare_method::{compare_impl_method, compare_ty_impl};\n+use super::compare_method::{compare_impl_method, compare_impl_ty};\n use super::*;\n use rustc_attr as attr;\n use rustc_errors::{Applicability, ErrorGuaranteed, MultiSpan};\n@@ -774,7 +774,7 @@ fn check_impl_items_against_trait<'tcx>(\n         let impl_item_full = tcx.hir().impl_item(impl_item.id);\n         match impl_item_full.kind {\n             hir::ImplItemKind::Const(..) => {\n-                let _ = tcx.compare_assoc_const_impl_item_with_trait_item((\n+                let _ = tcx.compare_impl_const((\n                     impl_item.id.owner_id.def_id,\n                     ty_impl_item.trait_item_def_id.unwrap(),\n                 ));\n@@ -791,7 +791,7 @@ fn check_impl_items_against_trait<'tcx>(\n             }\n             hir::ImplItemKind::Type(impl_ty) => {\n                 let opt_trait_span = tcx.hir().span_if_local(ty_trait_item.def_id);\n-                compare_ty_impl(\n+                compare_impl_ty(\n                     tcx,\n                     &ty_impl_item,\n                     impl_ty.span,"}, {"sha": "0fb605b77ea45d2dc24dbea0bdf1ef64739d4d83", "filename": "compiler/rustc_hir_analysis/src/check/compare_method.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6161758b6dc5f656378eb5ae191808e441167daa/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6161758b6dc5f656378eb5ae191808e441167daa/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_method.rs?ref=6161758b6dc5f656378eb5ae191808e441167daa", "patch": "@@ -1516,8 +1516,8 @@ fn compare_generic_param_kinds<'tcx>(\n     Ok(())\n }\n \n-/// Use `tcx.compare_assoc_const_impl_item_with_trait_item` instead\n-pub(crate) fn raw_compare_const_impl(\n+/// Use `tcx.compare_impl_const` instead\n+pub(crate) fn compare_impl_const_raw(\n     tcx: TyCtxt<'_>,\n     (impl_const_item_def, trait_const_item_def): (LocalDefId, DefId),\n ) -> Result<(), ErrorGuaranteed> {\n@@ -1623,7 +1623,7 @@ pub(crate) fn raw_compare_const_impl(\n     Ok(())\n }\n \n-pub(crate) fn compare_ty_impl<'tcx>(\n+pub(crate) fn compare_impl_ty<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     impl_ty: &ty::AssocItem,\n     impl_ty_span: Span,"}, {"sha": "86e60a1ed93ac86096a1693a7a3b5a022dcee855", "filename": "compiler/rustc_hir_analysis/src/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6161758b6dc5f656378eb5ae191808e441167daa/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6161758b6dc5f656378eb5ae191808e441167daa/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmod.rs?ref=6161758b6dc5f656378eb5ae191808e441167daa", "patch": "@@ -104,7 +104,7 @@ pub fn provide(providers: &mut Providers) {\n         check_mod_item_types,\n         region_scope_tree,\n         collect_trait_impl_trait_tys,\n-        compare_assoc_const_impl_item_with_trait_item: compare_method::raw_compare_const_impl,\n+        compare_impl_const: compare_method::compare_impl_const_raw,\n         ..*providers\n     };\n }"}, {"sha": "3e1ef5059aa1fc9fbf0728788b5da8c5c244a38f", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6161758b6dc5f656378eb5ae191808e441167daa/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6161758b6dc5f656378eb5ae191808e441167daa/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=6161758b6dc5f656378eb5ae191808e441167daa", "patch": "@@ -1836,7 +1836,7 @@ impl<'tcx> TypeErrCtxt<'_, 'tcx> {\n \n         // In some (most?) cases cause.body_id points to actual body, but in some cases\n         // it's an actual definition. According to the comments (e.g. in\n-        // rustc_hir_analysis/check/compare_method.rs:compare_predicate_entailment) the latter\n+        // rustc_hir_analysis/check/compare_method.rs:compare_method_predicate_entailment) the latter\n         // is relied upon by some other code. This might (or might not) need cleanup.\n         let body_owner_def_id =\n             self.tcx.hir().opt_local_def_id(cause.body_id).unwrap_or_else(|| {"}, {"sha": "5200628370e598b57bbbab364880a9aa5f2d671b", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6161758b6dc5f656378eb5ae191808e441167daa/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6161758b6dc5f656378eb5ae191808e441167daa/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=6161758b6dc5f656378eb5ae191808e441167daa", "patch": "@@ -2117,7 +2117,7 @@ rustc_queries! {\n         desc { \"checking to see if `{}` permits being left zeroed\", key.ty }\n     }\n \n-    query compare_assoc_const_impl_item_with_trait_item(\n+    query compare_impl_const(\n         key: (LocalDefId, DefId)\n     ) -> Result<(), ErrorGuaranteed> {\n         desc { |tcx| \"checking assoc const `{}` has the same type as trait item\", tcx.def_path_str(key.0.to_def_id()) }"}, {"sha": "8d46ba320fc031d56044b43e3a4225e711c02bfc", "filename": "compiler/rustc_ty_utils/src/instance.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6161758b6dc5f656378eb5ae191808e441167daa/compiler%2Frustc_ty_utils%2Fsrc%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6161758b6dc5f656378eb5ae191808e441167daa/compiler%2Frustc_ty_utils%2Fsrc%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Finstance.rs?ref=6161758b6dc5f656378eb5ae191808e441167daa", "patch": "@@ -194,7 +194,7 @@ fn resolve_associated_item<'tcx>(\n                 && trait_item_id != leaf_def.item.def_id\n                 && let Some(leaf_def_item) = leaf_def.item.def_id.as_local()\n             {\n-                tcx.compare_assoc_const_impl_item_with_trait_item((\n+                tcx.compare_impl_const((\n                     leaf_def_item,\n                     trait_item_id,\n                 ))?;"}]}