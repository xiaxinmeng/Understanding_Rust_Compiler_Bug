{"sha": "d4449945a069d26035afe9d8627414f6dfc8bf0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0NDQ5OTQ1YTA2OWQyNjAzNWFmZTlkODYyNzQxNGY2ZGZjOGJmMGE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-03-16T12:45:21Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-03-17T09:52:52Z"}, "message": "hack around non-terminating macro expansion", "tree": {"sha": "14f85ed306eb8d63ff711c758b3746be04ce458d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14f85ed306eb8d63ff711c758b3746be04ce458d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4449945a069d26035afe9d8627414f6dfc8bf0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4449945a069d26035afe9d8627414f6dfc8bf0a", "html_url": "https://github.com/rust-lang/rust/commit/d4449945a069d26035afe9d8627414f6dfc8bf0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4449945a069d26035afe9d8627414f6dfc8bf0a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2a6c1736295a5fffa5ac0d0fee835cdc719ada3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2a6c1736295a5fffa5ac0d0fee835cdc719ada3", "html_url": "https://github.com/rust-lang/rust/commit/b2a6c1736295a5fffa5ac0d0fee835cdc719ada3"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "2dafd68f624e53a4e5b2d6b7576da177d92525bc", "filename": "crates/ra_mbe/src/mbe_expander.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d4449945a069d26035afe9d8627414f6dfc8bf0a/crates%2Fra_mbe%2Fsrc%2Fmbe_expander.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4449945a069d26035afe9d8627414f6dfc8bf0a/crates%2Fra_mbe%2Fsrc%2Fmbe_expander.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fmbe_expander.rs?ref=d4449945a069d26035afe9d8627414f6dfc8bf0a", "patch": "@@ -155,7 +155,14 @@ fn match_lhs(pattern: &crate::Subtree, input: &mut TtCursor) -> Result<Bindings,\n                 _ => return Err(ExpandError::UnexpectedToken),\n             },\n             crate::TokenTree::Repeat(crate::Repeat { subtree, kind: _, separator }) => {\n+                // Dirty hack to make macro-expansion terminate.\n+                // This should be replaced by a propper macro-by-example implementation\n+                let mut limit = 128;\n                 while let Ok(nested) = match_lhs(subtree, input) {\n+                    limit -= 1;\n+                    if limit == 0 {\n+                        break;\n+                    }\n                     res.push_nested(nested)?;\n                     if let Some(separator) = *separator {\n                         if !input.is_eof() {\n@@ -196,7 +203,14 @@ fn expand_tt(\n         crate::TokenTree::Repeat(repeat) => {\n             let mut token_trees = Vec::new();\n             nesting.push(0);\n+            // Dirty hack to make macro-expansion terminate.\n+            // This should be replaced by a propper macro-by-example implementation\n+            let mut limit = 128;\n             while let Ok(t) = expand_subtree(&repeat.subtree, bindings, nesting) {\n+                limit -= 1;\n+                if limit == 0 {\n+                    break;\n+                }\n                 let idx = nesting.pop().unwrap();\n                 nesting.push(idx + 1);\n                 token_trees.push(t.into())"}]}