{"sha": "0850bad94dab9499a6dde0f303a73220a21a2f71", "node_id": "C_kwDOAAsO6NoAKDA4NTBiYWQ5NGRhYjk0OTlhNmRkZTBmMzAzYTczMjIwYTIxYTJmNzE", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-04T13:12:22Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-04T13:12:22Z"}, "message": "extra assertion, extra sure", "tree": {"sha": "96e8e0f3473c79a124d8cd05f40911abb59e183e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96e8e0f3473c79a124d8cd05f40911abb59e183e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0850bad94dab9499a6dde0f303a73220a21a2f71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0850bad94dab9499a6dde0f303a73220a21a2f71", "html_url": "https://github.com/rust-lang/rust/commit/0850bad94dab9499a6dde0f303a73220a21a2f71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0850bad94dab9499a6dde0f303a73220a21a2f71/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "595dd976bdcf54f9de336fcf4665d87e426ffc35", "url": "https://api.github.com/repos/rust-lang/rust/commits/595dd976bdcf54f9de336fcf4665d87e426ffc35", "html_url": "https://github.com/rust-lang/rust/commit/595dd976bdcf54f9de336fcf4665d87e426ffc35"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "dec7fa8c4aa96f635ce18964061156a7bd7d1e30", "filename": "compiler/rustc_const_eval/src/interpret/operator.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0850bad94dab9499a6dde0f303a73220a21a2f71/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0850bad94dab9499a6dde0f303a73220a21a2f71/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperator.rs?ref=0850bad94dab9499a6dde0f303a73220a21a2f71", "patch": "@@ -32,6 +32,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             let pair = Immediate::ScalarPair(val.into(), Scalar::from_bool(overflowed).into());\n             self.write_immediate(pair, dest)?;\n         } else {\n+            assert!(self.tcx.sess.opts.debugging_opts.randomize_layout);\n             // With randomized layout, `(int, bool)` might cease to be a `ScalarPair`, so we have to\n             // do a component-wise write here. This code path is slower than the above because\n             // `place_field` will have to `force_allocate` locals here."}]}