{"sha": "9e02642fb3f1f78793c24bbad9c39368e2024968", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllMDI2NDJmYjNmMWY3ODc5M2MyNGJiYWQ5YzM5MzY4ZTIwMjQ5Njg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-26T10:58:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-26T10:58:34Z"}, "message": "Rollup merge of #77211 - est31:remove_unused_allow, r=oli-obk\n\nRemove unused #[allow(...)] statements from compiler/", "tree": {"sha": "617cba4274a10947caff435bda020c5c55ac787f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/617cba4274a10947caff435bda020c5c55ac787f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e02642fb3f1f78793c24bbad9c39368e2024968", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfbx7aCRBK7hj4Ov3rIwAAdHIIAIFBnL+Brwv2P9ugLB6GZb/v\nIEZ0WlmZBe6PcCqNrHvnHIMBLHINIVvcfRTU9BfeqDIPiD5LsaoWAgp0P9guOGah\n/HWnobSMUH59OYnmnzHJfJxRXSdym4rzpc3Q62xT7cQ6o8vygDWtsIEEPEnhs266\n/fgoMUd1sI/uCmLOm66SoB2+ooVNSk2D43pqbqWkYIHXneuBbrBIYKG932lCIuwz\nz09sIktzFWLPqOGwX0pRqhq3jM7VHe+wEJHQ08mUOF8lvGmecEX8T3IYo0uyc8Yl\nz3LTDoSYh6iEx0fspc6mwDlmc9ohJaZlFReFU07Y12zglHcnOkY31SnQpQOpwPU=\n=M/ZN\n-----END PGP SIGNATURE-----\n", "payload": "tree 617cba4274a10947caff435bda020c5c55ac787f\nparent 259e9477f4305f4939ced7fc6561ac7a615780ce\nparent 12187b7f860e8e823eb5e399946746c4d2c1b1a7\nauthor Ralf Jung <post@ralfj.de> 1601117914 +0200\ncommitter GitHub <noreply@github.com> 1601117914 +0200\n\nRollup merge of #77211 - est31:remove_unused_allow, r=oli-obk\n\nRemove unused #[allow(...)] statements from compiler/\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e02642fb3f1f78793c24bbad9c39368e2024968", "html_url": "https://github.com/rust-lang/rust/commit/9e02642fb3f1f78793c24bbad9c39368e2024968", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e02642fb3f1f78793c24bbad9c39368e2024968/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "259e9477f4305f4939ced7fc6561ac7a615780ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/259e9477f4305f4939ced7fc6561ac7a615780ce", "html_url": "https://github.com/rust-lang/rust/commit/259e9477f4305f4939ced7fc6561ac7a615780ce"}, {"sha": "12187b7f860e8e823eb5e399946746c4d2c1b1a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/12187b7f860e8e823eb5e399946746c4d2c1b1a7", "html_url": "https://github.com/rust-lang/rust/commit/12187b7f860e8e823eb5e399946746c4d2c1b1a7"}], "stats": {"total": 30, "additions": 2, "deletions": 28}, "files": [{"sha": "166f7f53c41ac103c7226a4f65c21e3bc361be5b", "filename": "compiler/rustc_arena/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_arena%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_arena%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_arena%2Fsrc%2Flib.rs?ref=9e02642fb3f1f78793c24bbad9c39368e2024968", "patch": "@@ -15,7 +15,6 @@\n #![feature(new_uninit)]\n #![feature(maybe_uninit_slice)]\n #![cfg_attr(test, feature(test))]\n-#![allow(deprecated)]\n \n use rustc_data_structures::cold_path;\n use smallvec::SmallVec;"}, {"sha": "0c172dc33baf00c27b419e0c05ab50b3e55112c2", "filename": "compiler/rustc_codegen_llvm/src/builder.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs?ref=9e02642fb3f1f78793c24bbad9c39368e2024968", "patch": "@@ -930,7 +930,6 @@ impl BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n         unsafe { llvm::LLVMBuildSelect(self.llbuilder, cond, then_val, else_val, UNNAMED) }\n     }\n \n-    #[allow(dead_code)]\n     fn va_arg(&mut self, list: &'ll Value, ty: &'ll Type) -> &'ll Value {\n         unsafe { llvm::LLVMBuildVAArg(self.llbuilder, list, ty, UNNAMED) }\n     }"}, {"sha": "0992410a728bdac420428421d783add0e2bc3e91", "filename": "compiler/rustc_codegen_llvm/src/common.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcommon.rs?ref=9e02642fb3f1f78793c24bbad9c39368e2024968", "patch": "@@ -1,5 +1,3 @@\n-#![allow(non_camel_case_types, non_snake_case)]\n-\n //! Code that is useful in various codegen modules.\n \n use crate::consts::{self, const_alloc_to_llvm};"}, {"sha": "987149cb4c25c53ac587ea1c6d97fcbf920522bc", "filename": "compiler/rustc_codegen_llvm/src/debuginfo/metadata.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs?ref=9e02642fb3f1f78793c24bbad9c39368e2024968", "patch": "@@ -1845,7 +1845,6 @@ impl<'tcx> VariantInfo<'_, 'tcx> {\n         None\n     }\n \n-    #[allow(dead_code)]\n     fn is_artificial(&self) -> bool {\n         match self {\n             VariantInfo::Generator { .. } => true,"}, {"sha": "22ed4dd7576b594374e427c5fa0a51a5062eb840", "filename": "compiler/rustc_codegen_llvm/src/va_arg.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_codegen_llvm%2Fsrc%2Fva_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_codegen_llvm%2Fsrc%2Fva_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fva_arg.rs?ref=9e02642fb3f1f78793c24bbad9c39368e2024968", "patch": "@@ -11,7 +11,6 @@ use rustc_middle::ty::layout::HasTyCtxt;\n use rustc_middle::ty::Ty;\n use rustc_target::abi::{Align, HasDataLayout, LayoutOf, Size};\n \n-#[allow(dead_code)]\n fn round_pointer_up_to_alignment(\n     bx: &mut Builder<'a, 'll, 'tcx>,\n     addr: &'ll Value,"}, {"sha": "780b1d2cd9433cc698a4d85061084bf888fe238b", "filename": "compiler/rustc_codegen_ssa/src/common.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_codegen_ssa%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_codegen_ssa%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fcommon.rs?ref=9e02642fb3f1f78793c24bbad9c39368e2024968", "patch": "@@ -1,4 +1,4 @@\n-#![allow(non_camel_case_types, non_snake_case)]\n+#![allow(non_camel_case_types)]\n \n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n@@ -25,7 +25,6 @@ pub enum IntPredicate {\n     IntSLE,\n }\n \n-#[allow(dead_code)]\n pub enum RealPredicate {\n     RealPredicateFalse,\n     RealOEQ,\n@@ -60,7 +59,6 @@ pub enum AtomicRmwBinOp {\n }\n \n pub enum AtomicOrdering {\n-    #[allow(dead_code)]\n     NotAtomic,\n     Unordered,\n     Monotonic,"}, {"sha": "90b0f25475181ecf5888e48632f6a948e4db649e", "filename": "compiler/rustc_data_structures/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs?ref=9e02642fb3f1f78793c24bbad9c39368e2024968", "patch": "@@ -7,7 +7,6 @@\n //! This API is completely unstable and subject to change.\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n-#![allow(incomplete_features)]\n #![feature(array_windows)]\n #![feature(control_flow_enum)]\n #![feature(in_band_lifetimes)]"}, {"sha": "820d664c07d924eda931c4a8f0859a6b621162a4", "filename": "compiler/rustc_hir/src/intravisit.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_hir%2Fsrc%2Fintravisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_hir%2Fsrc%2Fintravisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fintravisit.rs?ref=9e02642fb3f1f78793c24bbad9c39368e2024968", "patch": "@@ -256,7 +256,6 @@ pub trait Visitor<'v>: Sized {\n     /// patterns described on `itemlikevisit::ItemLikeVisitor`. The only\n     /// reason to override this method is if you want a nested pattern\n     /// but cannot supply a `Map`; see `nested_visit_map` for advice.\n-    #[allow(unused_variables)]\n     fn visit_nested_item(&mut self, id: ItemId) {\n         let opt_item = self.nested_visit_map().inter().map(|map| map.item(id.id));\n         walk_list!(self, visit_item, opt_item);\n@@ -265,7 +264,6 @@ pub trait Visitor<'v>: Sized {\n     /// Like `visit_nested_item()`, but for trait items. See\n     /// `visit_nested_item()` for advice on when to override this\n     /// method.\n-    #[allow(unused_variables)]\n     fn visit_nested_trait_item(&mut self, id: TraitItemId) {\n         let opt_item = self.nested_visit_map().inter().map(|map| map.trait_item(id));\n         walk_list!(self, visit_trait_item, opt_item);\n@@ -274,7 +272,6 @@ pub trait Visitor<'v>: Sized {\n     /// Like `visit_nested_item()`, but for impl items. See\n     /// `visit_nested_item()` for advice on when to override this\n     /// method.\n-    #[allow(unused_variables)]\n     fn visit_nested_impl_item(&mut self, id: ImplItemId) {\n         let opt_item = self.nested_visit_map().inter().map(|map| map.impl_item(id));\n         walk_list!(self, visit_impl_item, opt_item);"}, {"sha": "07a55c7f859c34f08dc6ee173edebbf92550baf0", "filename": "compiler/rustc_infer/src/infer/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs?ref=9e02642fb3f1f78793c24bbad9c39368e2024968", "patch": "@@ -1278,7 +1278,6 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n     }\n \n     /// Gives temporary access to the region constraint data.\n-    #[allow(non_camel_case_types)] // bug with impl trait\n     pub fn with_region_constraints<R>(\n         &self,\n         op: impl FnOnce(&RegionConstraintData<'tcx>) -> R,"}, {"sha": "9925444b869f95a8730a6c455c7db51a49ddfd50", "filename": "compiler/rustc_lint/src/types.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs?ref=9e02642fb3f1f78793c24bbad9c39368e2024968", "patch": "@@ -1,5 +1,3 @@\n-#![allow(non_snake_case)]\n-\n use crate::{LateContext, LateLintPass, LintContext};\n use rustc_ast as ast;\n use rustc_attr as attr;"}, {"sha": "a381290d46f97362974270c4409b8685f60715e2", "filename": "compiler/rustc_llvm/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_llvm%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_llvm%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fsrc%2Flib.rs?ref=9e02642fb3f1f78793c24bbad9c39368e2024968", "patch": "@@ -21,7 +21,6 @@ impl RustString {\n \n /// Appending to a Rust string -- used by RawRustStringOstream.\n #[no_mangle]\n-#[allow(improper_ctypes_definitions)]\n pub unsafe extern \"C\" fn LLVMRustStringWriteImpl(\n     sr: &RustString,\n     ptr: *const c_char,"}, {"sha": "e7c054653accbd81de47e37af896a3cb0d71cd8d", "filename": "compiler/rustc_macros/src/query.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_macros%2Fsrc%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_macros%2Fsrc%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fquery.rs?ref=9e02642fb3f1f78793c24bbad9c39368e2024968", "patch": "@@ -9,7 +9,6 @@ use syn::{\n     ReturnType, Token, Type,\n };\n \n-#[allow(non_camel_case_types)]\n mod kw {\n     syn::custom_keyword!(query);\n }"}, {"sha": "94d4ad78e8d90373d748e8adaa1476e1002f1453", "filename": "compiler/rustc_macros/src/symbols.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_macros%2Fsrc%2Fsymbols.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_macros%2Fsrc%2Fsymbols.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fsymbols.rs?ref=9e02642fb3f1f78793c24bbad9c39368e2024968", "patch": "@@ -4,7 +4,6 @@ use std::collections::HashSet;\n use syn::parse::{Parse, ParseStream, Result};\n use syn::{braced, parse_macro_input, Ident, LitStr, Token};\n \n-#[allow(non_camel_case_types)]\n mod kw {\n     syn::custom_keyword!(Keywords);\n     syn::custom_keyword!(Symbols);"}, {"sha": "da857b0a403b4f909e8d0d9a332a7c5714577516", "filename": "compiler/rustc_middle/src/util/common.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_middle%2Fsrc%2Futil%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_middle%2Fsrc%2Futil%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Futil%2Fcommon.rs?ref=9e02642fb3f1f78793c24bbad9c39368e2024968", "patch": "@@ -1,5 +1,3 @@\n-#![allow(non_camel_case_types)]\n-\n use rustc_data_structures::sync::Lock;\n \n use std::fmt::Debug;"}, {"sha": "6c5d42296f72bdb7dcf6b00170fd14bab0f99b5e", "filename": "compiler/rustc_mir/src/borrow_check/prefixes.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fprefixes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fprefixes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fprefixes.rs?ref=9e02642fb3f1f78793c24bbad9c39368e2024968", "patch": "@@ -33,7 +33,6 @@ pub(super) struct Prefixes<'cx, 'tcx> {\n }\n \n #[derive(Copy, Clone, PartialEq, Eq, Debug)]\n-#[allow(dead_code)]\n pub(super) enum PrefixSet {\n     /// Doesn't stop until it returns the base case (a Local or\n     /// Static prefix)."}, {"sha": "7c630259186032e245999763c8184d41b68214ce", "filename": "compiler/rustc_mir/src/dataflow/move_paths/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_mir%2Fsrc%2Fdataflow%2Fmove_paths%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_mir%2Fsrc%2Fdataflow%2Fmove_paths%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fdataflow%2Fmove_paths%2Fmod.rs?ref=9e02642fb3f1f78793c24bbad9c39368e2024968", "patch": "@@ -144,7 +144,6 @@ impl<'tcx> fmt::Display for MovePath<'tcx> {\n     }\n }\n \n-#[allow(unused)]\n struct MovePathLinearIter<'a, 'tcx, F> {\n     next: Option<(MovePathIndex, &'a MovePath<'tcx>)>,\n     fetch_next: F,"}, {"sha": "12a268d5b1dda15a1204bbd88afb89c6b90aedd3", "filename": "compiler/rustc_session/src/filesearch.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_session%2Fsrc%2Ffilesearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_session%2Fsrc%2Ffilesearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Ffilesearch.rs?ref=9e02642fb3f1f78793c24bbad9c39368e2024968", "patch": "@@ -1,5 +1,3 @@\n-#![allow(non_camel_case_types)]\n-\n pub use self::FileMatch::*;\n \n use std::borrow::Cow;"}, {"sha": "e40067202e112c40c5aed680bc8fe9874799d273", "filename": "compiler/rustc_trait_selection/src/traits/auto_trait.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fauto_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fauto_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fauto_trait.rs?ref=9e02642fb3f1f78793c24bbad9c39368e2024968", "patch": "@@ -32,6 +32,7 @@ pub enum AutoTraitResult<A> {\n     NegativeImpl,\n }\n \n+#[allow(dead_code)]\n impl<A> AutoTraitResult<A> {\n     fn is_auto(&self) -> bool {\n         match *self {"}, {"sha": "c93087a18cf04575340da0d5a5b7b4727da5e012", "filename": "compiler/rustc_trait_selection/src/traits/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs?ref=9e02642fb3f1f78793c24bbad9c39368e2024968", "patch": "@@ -2,7 +2,6 @@\n //!\n //! [rustc dev guide]: https://rustc-dev-guide.rust-lang.org/traits/resolution.html\n \n-#[allow(dead_code)]\n pub mod auto_trait;\n mod chalk_fulfill;\n pub mod codegen;"}, {"sha": "57f1fedacbe5a38d6fc12633990c28f46e405414", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=9e02642fb3f1f78793c24bbad9c39368e2024968", "patch": "@@ -2148,7 +2148,6 @@ trait TraitObligationExt<'tcx> {\n }\n \n impl<'tcx> TraitObligationExt<'tcx> for TraitObligation<'tcx> {\n-    #[allow(unused_comparisons)]\n     fn derived_cause(\n         &self,\n         variant: fn(DerivedObligationCause<'tcx>) -> ObligationCauseCode<'tcx>,"}, {"sha": "e8fa2b13a9f24fe3e84e4722431daa6de0ba72db", "filename": "compiler/rustc_typeck/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_typeck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e02642fb3f1f78793c24bbad9c39368e2024968/compiler%2Frustc_typeck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Flib.rs?ref=9e02642fb3f1f78793c24bbad9c39368e2024968", "patch": "@@ -56,7 +56,6 @@ This API is completely unstable and subject to change.\n */\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n-#![allow(non_camel_case_types)]\n #![feature(bool_to_option)]\n #![feature(box_syntax)]\n #![feature(crate_visibility_modifier)]"}]}