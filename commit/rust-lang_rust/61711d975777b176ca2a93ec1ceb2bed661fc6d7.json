{"sha": "61711d975777b176ca2a93ec1ceb2bed661fc6d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxNzExZDk3NTc3N2IxNzZjYTJhOTNlYzFjZWIyYmVkNjYxZmM2ZDc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-12-22T04:02:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-22T04:02:28Z"}, "message": "Merge #6984\n\n6984: Remove TextMate grammar r=dustypomerleau a=lnicola\n\nCloses #6267\r\n\r\nThis is now included upstream in VS Code.\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "02c906f5af35a810fefa2ee46905f79ccd44c497", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02c906f5af35a810fefa2ee46905f79ccd44c497"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61711d975777b176ca2a93ec1ceb2bed661fc6d7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf4W/UCRBK7hj4Ov3rIwAAdHIIAAL/7nd3XpoIDFVlctFzDUq+\nh5Rmylzj0bd4I7GHDcex54u5ZHRe7l5+OYQpkLUXkgTIIObVNC9DVbA0zC6DJq8z\n+aSGDSQtqsD/o+PTo3AyM7w8iPjTuwqyDCoBpYfweCaaJ6k2GQAd1seXFdkTCmEe\nFCfn/lXcil3IDA0dDVFG/Z7kFu6QPhbpW9JBDQjPt4ZL6uDIGIcxMUmomKRaI9bC\nmM1WoZQq4Vmunhs7bETR5ji3H0Erp5xjNQyn1jTgPSxE7yI8P8XeY7ITmW5X6HL6\nyQcXyl4H1Fd2UNoWTYyi672uLgpouatIB/RD6BOGrkfSh6tzfigqDPFgio/KMJI=\n=jBPA\n-----END PGP SIGNATURE-----\n", "payload": "tree 02c906f5af35a810fefa2ee46905f79ccd44c497\nparent ba71685343ccdca9de3899d2ae634aaa8185c359\nparent 133a32d446c90ebcf1fc6591ca41928d911fe2af\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1608609748 +0000\ncommitter GitHub <noreply@github.com> 1608609748 +0000\n\nMerge #6984\n\n6984: Remove TextMate grammar r=dustypomerleau a=lnicola\n\nCloses #6267\r\n\r\nThis is now included upstream in VS Code.\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61711d975777b176ca2a93ec1ceb2bed661fc6d7", "html_url": "https://github.com/rust-lang/rust/commit/61711d975777b176ca2a93ec1ceb2bed661fc6d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61711d975777b176ca2a93ec1ceb2bed661fc6d7/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba71685343ccdca9de3899d2ae634aaa8185c359", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba71685343ccdca9de3899d2ae634aaa8185c359", "html_url": "https://github.com/rust-lang/rust/commit/ba71685343ccdca9de3899d2ae634aaa8185c359"}, {"sha": "133a32d446c90ebcf1fc6591ca41928d911fe2af", "url": "https://api.github.com/repos/rust-lang/rust/commits/133a32d446c90ebcf1fc6591ca41928d911fe2af", "html_url": "https://github.com/rust-lang/rust/commit/133a32d446c90ebcf1fc6591ca41928d911fe2af"}], "stats": {"total": 1146, "additions": 0, "deletions": 1146}, "files": [{"sha": "c1cf00fa01414977212571c7c7cff6a266cd56af", "filename": "editors/code/.vscodeignore", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/61711d975777b176ca2a93ec1ceb2bed661fc6d7/editors%2Fcode%2F.vscodeignore", "raw_url": "https://github.com/rust-lang/rust/raw/61711d975777b176ca2a93ec1ceb2bed661fc6d7/editors%2Fcode%2F.vscodeignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2F.vscodeignore?ref=61711d975777b176ca2a93ec1ceb2bed661fc6d7", "patch": "@@ -4,6 +4,5 @@\n !package.json\n !package-lock.json\n !ra_syntax_tree.tmGrammar.json\n-!rust.tmGrammar.json\n !icon.png\n !README.md"}, {"sha": "abcc84edacbe6889ce77915a713767f05ad9a31f", "filename": "editors/code/package.json", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/61711d975777b176ca2a93ec1ceb2bed661fc6d7/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/61711d975777b176ca2a93ec1ceb2bed661fc6d7/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=61711d975777b176ca2a93ec1ceb2bed661fc6d7", "patch": "@@ -748,11 +748,6 @@\n             }\n         ],\n         \"grammars\": [\n-            {\n-                \"language\": \"rust\",\n-                \"scopeName\": \"source.rust\",\n-                \"path\": \"rust.tmGrammar.json\"\n-            },\n             {\n                 \"language\": \"ra_syntax_tree\",\n                 \"scopeName\": \"source.ra_syntax_tree\","}, {"sha": "4759bb116232dcd8c671f450416b5ffde3fc7724", "filename": "editors/code/rust.tmGrammar.json", "status": "removed", "additions": 0, "deletions": 1140, "changes": 1140, "blob_url": "https://github.com/rust-lang/rust/blob/ba71685343ccdca9de3899d2ae634aaa8185c359/editors%2Fcode%2Frust.tmGrammar.json", "raw_url": "https://github.com/rust-lang/rust/raw/ba71685343ccdca9de3899d2ae634aaa8185c359/editors%2Fcode%2Frust.tmGrammar.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Frust.tmGrammar.json?ref=ba71685343ccdca9de3899d2ae634aaa8185c359", "patch": "@@ -1,1140 +0,0 @@\n-{\n-    \"$schema\": \"https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json\",\n-    \"name\": \"Rust\",\n-    \"fileTypes\": [\n-        \"rs\"\n-    ],\n-    \"scopeName\": \"source.rust\",\n-    \"patterns\": [\n-        {\n-            \"comment\": \"boxed slice literal\",\n-            \"begin\": \"(<)(\\\\[)\",\n-            \"beginCaptures\": {\n-                \"1\": {\n-                    \"name\": \"punctuation.brackets.angle.rust\"\n-                },\n-                \"2\": {\n-                    \"name\": \"punctuation.brackets.square.rust\"\n-                }\n-            },\n-            \"end\": \">\",\n-            \"endCaptures\": {\n-                \"0\": {\n-                    \"name\": \"punctuation.brackets.angle.rust\"\n-                }\n-            },\n-            \"patterns\": [\n-                {\n-                    \"include\": \"#block-comments\"\n-                },\n-                {\n-                    \"include\": \"#comments\"\n-                },\n-                {\n-                    \"include\": \"#gtypes\"\n-                },\n-                {\n-                    \"include\": \"#lvariables\"\n-                },\n-                {\n-                    \"include\": \"#lifetimes\"\n-                },\n-                {\n-                    \"include\": \"#punctuation\"\n-                },\n-                {\n-                    \"include\": \"#types\"\n-                }\n-            ]\n-        },\n-        {\n-            \"comment\": \"macro type metavariables\",\n-            \"name\": \"meta.macro.metavariable.type.rust\",\n-            \"match\": \"(\\\\$)((crate)|([A-Z][A-Za-z0-9_]*))((:)(block|expr|ident|item|lifetime|literal|meta|path?|stmt|tt|ty|vis))?\",\n-            \"captures\": {\n-                \"1\": {\n-                    \"name\": \"keyword.operator.macro.dollar.rust\"\n-                },\n-                \"3\": {\n-                    \"name\": \"keyword.other.crate.rust\"\n-                },\n-                \"4\": {\n-                    \"name\": \"entity.name.type.metavariable.rust\"\n-                },\n-                \"6\": {\n-                    \"name\": \"keyword.operator.key-value.rust\"\n-                },\n-                \"7\": {\n-                    \"name\": \"variable.other.metavariable.specifier.rust\"\n-                }\n-            },\n-            \"patterns\": [\n-                {\n-                    \"include\": \"#keywords\"\n-                }\n-            ]\n-        },\n-        {\n-            \"comment\": \"macro metavariables\",\n-            \"name\": \"meta.macro.metavariable.rust\",\n-            \"match\": \"(\\\\$)([a-z][A-Za-z0-9_]*)((:)(block|expr|ident|item|lifetime|literal|meta|path?|stmt|tt|ty|vis))?\",\n-            \"captures\": {\n-                \"1\": {\n-                    \"name\": \"keyword.operator.macro.dollar.rust\"\n-                },\n-                \"2\": {\n-                    \"name\": \"variable.other.metavariable.name.rust\"\n-                },\n-                \"4\": {\n-                    \"name\": \"keyword.operator.key-value.rust\"\n-                },\n-                \"5\": {\n-                    \"name\": \"variable.other.metavariable.specifier.rust\"\n-                }\n-            },\n-            \"patterns\": [\n-                {\n-                    \"include\": \"#keywords\"\n-                }\n-            ]\n-        },\n-        {\n-            \"comment\": \"macro rules\",\n-            \"name\": \"meta.macro.rules.rust\",\n-            \"match\": \"\\\\b(macro_rules!)\\\\s+(([a-z0-9_]+)|([A-Z][a-z0-9_]*))\\\\s+(\\\\{)\",\n-            \"captures\": {\n-                \"1\": {\n-                    \"name\": \"entity.name.function.macro.rules.rust\"\n-                },\n-                \"3\": {\n-                    \"name\": \"entity.name.function.macro.rust\"\n-                },\n-                \"4\": {\n-                    \"name\": \"entity.name.type.macro.rust\"\n-                },\n-                \"5\": {\n-                    \"name\": \"punctuation.brackets.curly.rust\"\n-                }\n-            }\n-        },\n-        {\n-            \"comment\": \"attributes\",\n-            \"name\": \"meta.attribute.rust\",\n-            \"begin\": \"(#)(\\\\!?)(\\\\[)\",\n-            \"beginCaptures\": {\n-                \"1\": {\n-                    \"name\": \"punctuation.definition.attribute.rust\"\n-                },\n-                \"2\": {\n-                    \"name\": \"keyword.operator.attribute.inner.rust\"\n-                },\n-                \"3\": {\n-                    \"name\": \"punctuation.brackets.attribute.rust\"\n-                }\n-            },\n-            \"end\": \"\\\\]\",\n-            \"endCaptures\": {\n-                \"0\": {\n-                    \"name\": \"punctuation.brackets.attribute.rust\"\n-                }\n-            },\n-            \"patterns\": [\n-                {\n-                    \"include\": \"#block-comments\"\n-                },\n-                {\n-                    \"include\": \"#comments\"\n-                },\n-                {\n-                    \"include\": \"#keywords\"\n-                },\n-                {\n-                    \"include\": \"#punctuation\"\n-                },\n-                {\n-                    \"include\": \"#strings\"\n-                },\n-                {\n-                    \"include\": \"#gtypes\"\n-                },\n-                {\n-                    \"include\": \"#types\"\n-                }\n-            ]\n-        },\n-        {\n-            \"comment\": \"modules\",\n-            \"match\": \"(mod)\\\\s+((?:r#(?!crate|[Ss]elf|super))?[a-z][A-Za-z0-9_]*)\",\n-            \"captures\": {\n-                \"1\": {\n-                    \"name\": \"storage.type.rust\"\n-                },\n-                \"2\": {\n-                    \"name\": \"entity.name.module.rust\"\n-                }\n-            }\n-        },\n-        {\n-            \"comment\": \"external crate imports\",\n-            \"name\": \"meta.import.rust\",\n-            \"begin\": \"\\\\b(extern)\\\\s+(crate)\",\n-            \"beginCaptures\": {\n-                \"1\": {\n-                    \"name\": \"storage.type.rust\"\n-                },\n-                \"2\": {\n-                    \"name\": \"keyword.other.crate.rust\"\n-                }\n-            },\n-            \"end\": \";\",\n-            \"endCaptures\": {\n-                \"0\": {\n-                    \"name\": \"punctuation.semi.rust\"\n-                }\n-            },\n-            \"patterns\": [\n-                {\n-                    \"include\": \"#block-comments\"\n-                },\n-                {\n-                    \"include\": \"#comments\"\n-                },\n-                {\n-                    \"include\": \"#keywords\"\n-                },\n-                {\n-                    \"include\": \"#punctuation\"\n-                }\n-            ]\n-        },\n-        {\n-            \"comment\": \"use statements\",\n-            \"name\": \"meta.use.rust\",\n-            \"begin\": \"\\\\b(use)\\\\s\",\n-            \"beginCaptures\": {\n-                \"1\": {\n-                    \"name\": \"keyword.other.rust\"\n-                }\n-            },\n-            \"end\": \";\",\n-            \"endCaptures\": {\n-                \"0\": {\n-                    \"name\": \"punctuation.semi.rust\"\n-                }\n-            },\n-            \"patterns\": [\n-                {\n-                    \"include\": \"#block-comments\"\n-                },\n-                {\n-                    \"include\": \"#comments\"\n-                },\n-                {\n-                    \"include\": \"#keywords\"\n-                },\n-                {\n-                    \"include\": \"#namespaces\"\n-                },\n-                {\n-                    \"include\": \"#punctuation\"\n-                },\n-                {\n-                    \"include\": \"#types\"\n-                },\n-                {\n-                    \"include\": \"#lvariables\"\n-                }\n-            ]\n-        },\n-        {\n-            \"include\": \"#block-comments\"\n-        },\n-        {\n-            \"include\": \"#comments\"\n-        },\n-        {\n-            \"include\": \"#lvariables\"\n-        },\n-        {\n-            \"include\": \"#constants\"\n-        },\n-        {\n-            \"include\": \"#gtypes\"\n-        },\n-        {\n-            \"include\": \"#functions\"\n-        },\n-        {\n-            \"include\": \"#types\"\n-        },\n-        {\n-            \"include\": \"#keywords\"\n-        },\n-        {\n-            \"include\": \"#lifetimes\"\n-        },\n-        {\n-            \"include\": \"#macros\"\n-        },\n-        {\n-            \"include\": \"#namespaces\"\n-        },\n-        {\n-            \"include\": \"#punctuation\"\n-        },\n-        {\n-            \"include\": \"#strings\"\n-        },\n-        {\n-            \"include\": \"#variables\"\n-        }\n-    ],\n-    \"repository\": {\n-        \"comments\": {\n-            \"patterns\": [\n-                {\n-                    \"comment\": \"documentation comments\",\n-                    \"name\": \"comment.line.documentation.rust\",\n-                    \"match\": \"^\\\\s*///.*\"\n-                },\n-                {\n-                    \"comment\": \"line comments\",\n-                    \"name\": \"comment.line.double-slash.rust\",\n-                    \"match\": \"\\\\s*//.*\"\n-                }\n-            ]\n-        },\n-        \"block-comments\": {\n-            \"patterns\": [\n-                {\n-                    \"comment\": \"empty block comments\",\n-                    \"name\": \"comment.block.rust\",\n-                    \"match\": \"/\\\\*\\\\*/\"\n-                },\n-                {\n-                    \"comment\": \"block documentation comments\",\n-                    \"name\": \"comment.block.documentation.rust\",\n-                    \"begin\": \"/\\\\*\\\\*\",\n-                    \"end\": \"\\\\*/\",\n-                    \"patterns\": [\n-                        {\n-                            \"include\": \"#block-comments\"\n-                        }\n-                    ]\n-                },\n-                {\n-                    \"comment\": \"block comments\",\n-                    \"name\": \"comment.block.rust\",\n-                    \"begin\": \"/\\\\*(?!\\\\*)\",\n-                    \"end\": \"\\\\*/\",\n-                    \"patterns\": [\n-                        {\n-                            \"include\": \"#block-comments\"\n-                        }\n-                    ]\n-                }\n-            ]\n-        },\n-        \"constants\": {\n-            \"patterns\": [\n-                {\n-                    \"comment\": \"ALL CAPS constants\",\n-                    \"name\": \"constant.other.caps.rust\",\n-                    \"match\": \"\\\\b[A-Z]{2}[A-Z0-9_]*\\\\b\"\n-                },\n-                {\n-                    \"comment\": \"constant declarations\",\n-                    \"match\": \"\\\\b(const)\\\\s+([A-Z][A-Za-z0-9_]*)\\\\b\",\n-                    \"captures\": {\n-                        \"1\": {\n-                            \"name\": \"storage.type.rust\"\n-                        },\n-                        \"2\": {\n-                            \"name\": \"constant.other.caps.rust\"\n-                        }\n-                    }\n-                },\n-                {\n-                    \"comment\": \"decimal integers and floats\",\n-                    \"name\": \"constant.numeric.decimal.rust\",\n-                    \"match\": \"\\\\b\\\\d[\\\\d_]*(\\\\.?)[\\\\d_]*(?:(E)([+-])([\\\\d_]+))?(f32|f64|i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)?\\\\b\",\n-                    \"captures\": {\n-                        \"1\": {\n-                            \"name\": \"punctuation.separator.dot.decimal.rust\"\n-                        },\n-                        \"2\": {\n-                            \"name\": \"keyword.operator.exponent.rust\"\n-                        },\n-                        \"3\": {\n-                            \"name\": \"keyword.operator.exponent.sign.rust\"\n-                        },\n-                        \"4\": {\n-                            \"name\": \"constant.numeric.decimal.exponent.mantissa.rust\"\n-                        },\n-                        \"5\": {\n-                            \"name\": \"entity.name.type.numeric.rust\"\n-                        }\n-                    }\n-                },\n-                {\n-                    \"comment\": \"hexadecimal integers\",\n-                    \"name\": \"constant.numeric.hex.rust\",\n-                    \"match\": \"\\\\b0x[\\\\da-fA-F_]+(i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)?\\\\b\",\n-                    \"captures\": {\n-                        \"1\": {\n-                            \"name\": \"entity.name.type.numeric.rust\"\n-                        }\n-                    }\n-                },\n-                {\n-                    \"comment\": \"octal integers\",\n-                    \"name\": \"constant.numeric.oct.rust\",\n-                    \"match\": \"\\\\b0o[0-7_]+(i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)?\\\\b\",\n-                    \"captures\": {\n-                        \"1\": {\n-                            \"name\": \"entity.name.type.numeric.rust\"\n-                        }\n-                    }\n-                },\n-                {\n-                    \"comment\": \"binary integers\",\n-                    \"name\": \"constant.numeric.bin.rust\",\n-                    \"match\": \"\\\\b0b[01_]+(i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)?\\\\b\",\n-                    \"captures\": {\n-                        \"1\": {\n-                            \"name\": \"entity.name.type.numeric.rust\"\n-                        }\n-                    }\n-                },\n-                {\n-                    \"comment\": \"booleans\",\n-                    \"name\": \"constant.language.bool.rust\",\n-                    \"match\": \"\\\\b(true|false)\\\\b\"\n-                }\n-            ]\n-        },\n-        \"escapes\": {\n-            \"comment\": \"escapes: ASCII, byte, Unicode, quote, regex\",\n-            \"name\": \"constant.character.escape.rust\",\n-            \"match\": \"(\\\\\\\\)(?:(?:(x[0-7][0-7a-fA-F])|(u(\\\\{)[\\\\da-fA-F]{4,6}(\\\\}))|.))\",\n-            \"captures\": {\n-                \"1\": {\n-                    \"name\": \"constant.character.escape.backslash.rust\"\n-                },\n-                \"2\": {\n-                    \"name\": \"constant.character.escape.bit.rust\"\n-                },\n-                \"3\": {\n-                    \"name\": \"constant.character.escape.unicode.rust\"\n-                },\n-                \"4\": {\n-                    \"name\": \"constant.character.escape.unicode.punctuation.rust\"\n-                },\n-                \"5\": {\n-                    \"name\": \"constant.character.escape.unicode.punctuation.rust\"\n-                }\n-            }\n-        },\n-        \"functions\": {\n-            \"patterns\": [\n-                {\n-                    \"comment\": \"pub as a function\",\n-                    \"match\": \"\\\\b(pub)(\\\\()\",\n-                    \"captures\": {\n-                        \"1\": {\n-                            \"name\": \"keyword.other.rust\"\n-                        },\n-                        \"2\": {\n-                            \"name\": \"punctuation.brackets.round.rust\"\n-                        }\n-                    }\n-                },\n-                {\n-                    \"comment\": \"function definition\",\n-                    \"name\": \"meta.function.definition.rust\",\n-                    \"begin\": \"\\\\b(fn)\\\\s+((?:r#(?!crate|[Ss]elf|super))?[A-Za-z0-9_]+)((\\\\()|(<))\",\n-                    \"beginCaptures\": {\n-                        \"1\": {\n-                            \"name\": \"keyword.other.fn.rust\"\n-                        },\n-                        \"2\": {\n-                            \"name\": \"entity.name.function.rust\"\n-                        },\n-                        \"4\": {\n-                            \"name\": \"punctuation.brackets.round.rust\"\n-                        },\n-                        \"5\": {\n-                            \"name\": \"punctuation.brackets.angle.rust\"\n-                        }\n-                    },\n-                    \"end\": \"\\\\{|;\",\n-                    \"endCaptures\": {\n-                        \"0\": {\n-                            \"name\": \"punctuation.brackets.curly.rust\"\n-                        }\n-                    },\n-                    \"patterns\": [\n-                        {\n-                            \"include\": \"#block-comments\"\n-                        },\n-                        {\n-                            \"include\": \"#comments\"\n-                        },\n-                        {\n-                            \"include\": \"#keywords\"\n-                        },\n-                        {\n-                            \"include\": \"#lvariables\"\n-                        },\n-                        {\n-                            \"include\": \"#constants\"\n-                        },\n-                        {\n-                            \"include\": \"#gtypes\"\n-                        },\n-                        {\n-                            \"include\": \"#functions\"\n-                        },\n-                        {\n-                            \"include\": \"#lifetimes\"\n-                        },\n-                        {\n-                            \"include\": \"#macros\"\n-                        },\n-                        {\n-                            \"include\": \"#namespaces\"\n-                        },\n-                        {\n-                            \"include\": \"#punctuation\"\n-                        },\n-                        {\n-                            \"include\": \"#strings\"\n-                        },\n-                        {\n-                            \"include\": \"#types\"\n-                        },\n-                        {\n-                            \"include\": \"#variables\"\n-                        }\n-                    ]\n-                },\n-                {\n-                    \"comment\": \"function/method calls, chaining\",\n-                    \"name\": \"meta.function.call.rust\",\n-                    \"begin\": \"((?:r#(?!crate|[Ss]elf|super))?[A-Za-z0-9_]+)(\\\\()\",\n-                    \"beginCaptures\": {\n-                        \"1\": {\n-                            \"name\": \"entity.name.function.rust\"\n-                        },\n-                        \"2\": {\n-                            \"name\": \"punctuation.brackets.round.rust\"\n-                        }\n-                    },\n-                    \"end\": \"\\\\)\",\n-                    \"endCaptures\": {\n-                        \"0\": {\n-                            \"name\": \"punctuation.brackets.round.rust\"\n-                        }\n-                    },\n-                    \"patterns\": [\n-                        {\n-                            \"include\": \"#block-comments\"\n-                        },\n-                        {\n-                            \"include\": \"#comments\"\n-                        },\n-                        {\n-                            \"include\": \"#keywords\"\n-                        },\n-                        {\n-                            \"include\": \"#lvariables\"\n-                        },\n-                        {\n-                            \"include\": \"#constants\"\n-                        },\n-                        {\n-                            \"include\": \"#gtypes\"\n-                        },\n-                        {\n-                            \"include\": \"#functions\"\n-                        },\n-                        {\n-                            \"include\": \"#lifetimes\"\n-                        },\n-                        {\n-                            \"include\": \"#macros\"\n-                        },\n-                        {\n-                            \"include\": \"#namespaces\"\n-                        },\n-                        {\n-                            \"include\": \"#punctuation\"\n-                        },\n-                        {\n-                            \"include\": \"#strings\"\n-                        },\n-                        {\n-                            \"include\": \"#types\"\n-                        },\n-                        {\n-                            \"include\": \"#variables\"\n-                        }\n-                    ]\n-                },\n-                {\n-                    \"comment\": \"function/method calls with turbofish\",\n-                    \"name\": \"meta.function.call.rust\",\n-                    \"begin\": \"((?:r#(?!crate|[Ss]elf|super))?[A-Za-z0-9_]+)(?=::<.*>\\\\()\",\n-                    \"beginCaptures\": {\n-                        \"1\": {\n-                            \"name\": \"entity.name.function.rust\"\n-                        }\n-                    },\n-                    \"end\": \"\\\\)\",\n-                    \"endCaptures\": {\n-                        \"0\": {\n-                            \"name\": \"punctuation.brackets.round.rust\"\n-                        }\n-                    },\n-                    \"patterns\": [\n-                        {\n-                            \"include\": \"#block-comments\"\n-                        },\n-                        {\n-                            \"include\": \"#comments\"\n-                        },\n-                        {\n-                            \"include\": \"#keywords\"\n-                        },\n-                        {\n-                            \"include\": \"#lvariables\"\n-                        },\n-                        {\n-                            \"include\": \"#constants\"\n-                        },\n-                        {\n-                            \"include\": \"#gtypes\"\n-                        },\n-                        {\n-                            \"include\": \"#functions\"\n-                        },\n-                        {\n-                            \"include\": \"#lifetimes\"\n-                        },\n-                        {\n-                            \"include\": \"#macros\"\n-                        },\n-                        {\n-                            \"include\": \"#namespaces\"\n-                        },\n-                        {\n-                            \"include\": \"#punctuation\"\n-                        },\n-                        {\n-                            \"include\": \"#strings\"\n-                        },\n-                        {\n-                            \"include\": \"#types\"\n-                        },\n-                        {\n-                            \"include\": \"#variables\"\n-                        }\n-                    ]\n-                }\n-            ]\n-        },\n-        \"keywords\": {\n-            \"patterns\": [\n-                {\n-                    \"comment\": \"control flow keywords\",\n-                    \"name\": \"keyword.control.rust\",\n-                    \"match\": \"\\\\b(await|break|continue|do|else|for|if|loop|match|return|try|while|yield)\\\\b\"\n-                },\n-                {\n-                    \"comment\": \"storage keywords\",\n-                    \"name\": \"storage.type.rust\",\n-                    \"match\": \"\\\\b(const|enum|extern|let|macro|mod|struct|trait|type)\\\\b\"\n-                },\n-                {\n-                    \"comment\": \"storage modifiers\",\n-                    \"name\": \"storage.modifier.rust\",\n-                    \"match\": \"\\\\b(abstract|static)\\\\b\"\n-                },\n-                {\n-                    \"comment\": \"other keywords\",\n-                    \"name\": \"keyword.other.rust\",\n-                    \"match\": \"\\\\b(as|async|become|box|dyn|move|final|impl|in|override|priv|pub|ref|typeof|union|unsafe|unsized|use|virtual|where)\\\\b\"\n-                },\n-                {\n-                    \"comment\": \"fn\",\n-                    \"name\": \"keyword.other.fn.rust\",\n-                    \"match\": \"\\\\bfn\\\\b\"\n-                },\n-                {\n-                    \"comment\": \"crate\",\n-                    \"name\": \"keyword.other.crate.rust\",\n-                    \"match\": \"\\\\bcrate\\\\b\"\n-                },\n-                {\n-                    \"comment\": \"mut\",\n-                    \"name\": \"storage.modifier.mut.rust\",\n-                    \"match\": \"\\\\bmut\\\\b\"\n-                },\n-                {\n-                    \"comment\": \"logical operators\",\n-                    \"name\": \"keyword.operator.logical.rust\",\n-                    \"match\": \"(\\\\^|\\\\||\\\\|\\\\||&&|<<|>>|!)(?!=)\"\n-                },\n-                {\n-                    \"comment\": \"logical AND, borrow references\",\n-                    \"name\": \"keyword.operator.borrow.and.rust\",\n-                    \"match\": \"&(?![&=])\"\n-                },\n-                {\n-                    \"comment\": \"assignment operators\",\n-                    \"name\": \"keyword.operator.assignment.rust\",\n-                    \"match\": \"(\\\\+=|-=|\\\\*=|/=|%=|\\\\^=|&=|\\\\|=|<<=|>>=)\"\n-                },\n-                {\n-                    \"comment\": \"single equal\",\n-                    \"name\": \"keyword.operator.assignment.equal.rust\",\n-                    \"match\": \"(?<![<>])=(?!=|>)\"\n-                },\n-                {\n-                    \"comment\": \"comparison operators\",\n-                    \"name\": \"keyword.operator.comparison.rust\",\n-                    \"match\": \"(=(=)?(?!>)|!=|<=|(?<!=)>=)\"\n-                },\n-                {\n-                    \"comment\": \"math operators\",\n-                    \"name\": \"keyword.operator.math.rust\",\n-                    \"match\": \"(([+%]|(\\\\*(?!\\\\w)))(?!=))|(-(?!>))|(/(?!/))\"\n-                },\n-                {\n-                    \"comment\": \"less than, greater than (special case)\",\n-                    \"match\": \"(?:\\\\b|(?:(\\\\))|(\\\\])|(\\\\})))[ \\\\t]+([<>])[ \\\\t]+(?:\\\\b|(?:(\\\\()|(\\\\[)|(\\\\{)))\",\n-                    \"captures\": {\n-                        \"1\": {\n-                            \"name\": \"punctuation.brackets.round.rust\"\n-                        },\n-                        \"2\": {\n-                            \"name\": \"punctuation.brackets.square.rust\"\n-                        },\n-                        \"3\": {\n-                            \"name\": \"punctuation.brackets.curly.rust\"\n-                        },\n-                        \"4\": {\n-                            \"name\": \"keyword.operator.comparison.rust\"\n-                        },\n-                        \"5\": {\n-                            \"name\": \"punctuation.brackets.round.rust\"\n-                        },\n-                        \"6\": {\n-                            \"name\": \"punctuation.brackets.square.rust\"\n-                        },\n-                        \"7\": {\n-                            \"name\": \"punctuation.brackets.curly.rust\"\n-                        }\n-                    }\n-                },\n-                {\n-                    \"comment\": \"namespace operator\",\n-                    \"name\": \"keyword.operator.namespace.rust\",\n-                    \"match\": \"::\"\n-                },\n-                {\n-                    \"comment\": \"dereference asterisk\",\n-                    \"match\": \"(\\\\*)(?=\\\\w+)\",\n-                    \"captures\": {\n-                        \"1\": {\n-                            \"name\": \"keyword.operator.dereference.rust\"\n-                        }\n-                    }\n-                },\n-                {\n-                    \"comment\": \"subpattern binding\",\n-                    \"name\": \"keyword.operator.subpattern.rust\",\n-                    \"match\": \"@\"\n-                },\n-                {\n-                    \"comment\": \"dot access\",\n-                    \"name\": \"keyword.operator.access.dot.rust\",\n-                    \"match\": \"\\\\.(?!\\\\.)\"\n-                },\n-                {\n-                    \"comment\": \"ranges, range patterns\",\n-                    \"name\": \"keyword.operator.range.rust\",\n-                    \"match\": \"\\\\.{2}(=|\\\\.)?\"\n-                },\n-                {\n-                    \"comment\": \"colon\",\n-                    \"name\": \"keyword.operator.key-value.rust\",\n-                    \"match\": \":(?!:)\"\n-                },\n-                {\n-                    \"comment\": \"dashrocket, skinny arrow\",\n-                    \"name\": \"keyword.operator.arrow.skinny.rust\",\n-                    \"match\": \"->\"\n-                },\n-                {\n-                    \"comment\": \"hashrocket, fat arrow\",\n-                    \"name\": \"keyword.operator.arrow.fat.rust\",\n-                    \"match\": \"=>\"\n-                },\n-                {\n-                    \"comment\": \"dollar macros\",\n-                    \"name\": \"keyword.operator.macro.dollar.rust\",\n-                    \"match\": \"\\\\$\"\n-                },\n-                {\n-                    \"comment\": \"question mark operator, questionably sized, macro kleene matcher\",\n-                    \"name\": \"keyword.operator.question.rust\",\n-                    \"match\": \"\\\\?\"\n-                }\n-            ]\n-        },\n-        \"interpolations\": {\n-            \"comment\": \"curly brace interpolations\",\n-            \"name\": \"meta.interpolation.rust\",\n-            \"match\": \"({)[^\\\"{}]*(})\",\n-            \"captures\": {\n-                \"1\": {\n-                    \"name\": \"punctuation.definition.interpolation.rust\"\n-                },\n-                \"2\": {\n-                    \"name\": \"punctuation.definition.interpolation.rust\"\n-                }\n-            }\n-        },\n-        \"lifetimes\": {\n-            \"patterns\": [\n-                {\n-                    \"comment\": \"named lifetime parameters\",\n-                    \"match\": \"(['])([a-zA-Z_][0-9a-zA-Z_]*)(?!['])\\\\b\",\n-                    \"captures\": {\n-                        \"1\": {\n-                            \"name\": \"punctuation.definition.lifetime.rust\"\n-                        },\n-                        \"2\": {\n-                            \"name\": \"entity.name.type.lifetime.rust\"\n-                        }\n-                    }\n-                },\n-                {\n-                    \"comment\": \"borrowing references to named lifetimes\",\n-                    \"match\": \"(\\\\&)(['])([a-zA-Z_][0-9a-zA-Z_]*)(?!['])\\\\b\",\n-                    \"captures\": {\n-                        \"1\": {\n-                            \"name\": \"keyword.operator.borrow.rust\"\n-                        },\n-                        \"2\": {\n-                            \"name\": \"punctuation.definition.lifetime.rust\"\n-                        },\n-                        \"3\": {\n-                            \"name\": \"entity.name.type.lifetime.rust\"\n-                        }\n-                    }\n-                }\n-            ]\n-        },\n-        \"macros\": {\n-            \"patterns\": [\n-                {\n-                    \"comment\": \"macros\",\n-                    \"name\": \"meta.macro.rust\",\n-                    \"match\": \"(([a-z_][A-Za-z0-9_]*!)|([A-Z_][A-Za-z0-9_]*!))\",\n-                    \"captures\": {\n-                        \"2\": {\n-                            \"name\": \"entity.name.function.macro.rust\"\n-                        },\n-                        \"3\": {\n-                            \"name\": \"entity.name.type.macro.rust\"\n-                        }\n-                    }\n-                }\n-            ]\n-        },\n-        \"namespaces\": {\n-            \"patterns\": [\n-                {\n-                    \"comment\": \"namespace (non-type, non-function path segment)\",\n-                    \"match\": \"(?<![A-Za-z0-9_])([a-z0-9_]+)((?<!super|self)::)\",\n-                    \"captures\": {\n-                        \"1\": {\n-                            \"name\": \"entity.name.namespace.rust\"\n-                        },\n-                        \"2\": {\n-                            \"name\": \"keyword.operator.namespace.rust\"\n-                        }\n-                    }\n-                }\n-            ]\n-        },\n-        \"types\": {\n-            \"patterns\": [\n-                {\n-                    \"comment\": \"numeric types\",\n-                    \"match\": \"(?<![A-Za-z])(f32|f64|i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)\\\\b\",\n-                    \"captures\": {\n-                        \"1\": {\n-                            \"name\": \"entity.name.type.numeric.rust\"\n-                        }\n-                    }\n-                },\n-                {\n-                    \"comment\": \"parameterized types\",\n-                    \"begin\": \"\\\\b([A-Z][A-Za-z0-9]*)(<)\",\n-                    \"beginCaptures\": {\n-                        \"1\": {\n-                            \"name\": \"entity.name.type.rust\"\n-                        },\n-                        \"2\": {\n-                            \"name\": \"punctuation.brackets.angle.rust\"\n-                        }\n-                    },\n-                    \"end\": \">\",\n-                    \"endCaptures\": {\n-                        \"0\": {\n-                            \"name\": \"punctuation.brackets.angle.rust\"\n-                        }\n-                    },\n-                    \"patterns\": [\n-                        {\n-                            \"include\": \"#block-comments\"\n-                        },\n-                        {\n-                            \"include\": \"#comments\"\n-                        },\n-                        {\n-                            \"include\": \"#keywords\"\n-                        },\n-                        {\n-                            \"include\": \"#lvariables\"\n-                        },\n-                        {\n-                            \"include\": \"#lifetimes\"\n-                        },\n-                        {\n-                            \"include\": \"#punctuation\"\n-                        },\n-                        {\n-                            \"include\": \"#types\"\n-                        },\n-                        {\n-                            \"include\": \"#variables\"\n-                        }\n-                    ]\n-                },\n-                {\n-                    \"comment\": \"primitive types\",\n-                    \"name\": \"entity.name.type.primitive.rust\",\n-                    \"match\": \"\\\\b(bool|char|str)\\\\b\"\n-                },\n-                {\n-                    \"comment\": \"trait declarations\",\n-                    \"match\": \"\\\\b(trait)\\\\s+([A-Z][A-Za-z0-9]*)\\\\b\",\n-                    \"captures\": {\n-                        \"1\": {\n-                            \"name\": \"storage.type.rust\"\n-                        },\n-                        \"2\": {\n-                            \"name\": \"entity.name.type.trait.rust\"\n-                        }\n-                    }\n-                },\n-                {\n-                    \"comment\": \"struct declarations\",\n-                    \"match\": \"\\\\b(struct)\\\\s+([A-Z][A-Za-z0-9]*)\\\\b\",\n-                    \"captures\": {\n-                        \"1\": {\n-                            \"name\": \"storage.type.rust\"\n-                        },\n-                        \"2\": {\n-                            \"name\": \"entity.name.type.struct.rust\"\n-                        }\n-                    }\n-                },\n-                {\n-                    \"comment\": \"enum declarations\",\n-                    \"match\": \"\\\\b(enum)\\\\s+([A-Z][A-Za-z0-9_]*)\\\\b\",\n-                    \"captures\": {\n-                        \"1\": {\n-                            \"name\": \"storage.type.rust\"\n-                        },\n-                        \"2\": {\n-                            \"name\": \"entity.name.type.enum.rust\"\n-                        }\n-                    }\n-                },\n-                {\n-                    \"comment\": \"type declarations\",\n-                    \"match\": \"\\\\b(type)\\\\s+([A-Z][A-Za-z0-9_]*)\\\\b\",\n-                    \"captures\": {\n-                        \"1\": {\n-                            \"name\": \"storage.type.rust\"\n-                        },\n-                        \"2\": {\n-                            \"name\": \"entity.name.type.declaration.rust\"\n-                        }\n-                    }\n-                },\n-                {\n-                    \"comment\": \"types\",\n-                    \"name\": \"entity.name.type.rust\",\n-                    \"match\": \"\\\\b[A-Z][A-Za-z0-9]*\\\\b(?!!)\"\n-                }\n-            ]\n-        },\n-        \"gtypes\": {\n-            \"patterns\": [\n-                {\n-                    \"comment\": \"option types\",\n-                    \"name\": \"entity.name.type.option.rust\",\n-                    \"match\": \"\\\\b(Some|None)\\\\b\"\n-                },\n-                {\n-                    \"comment\": \"result types\",\n-                    \"name\": \"entity.name.type.result.rust\",\n-                    \"match\": \"\\\\b(Ok|Err)\\\\b\"\n-                }\n-            ]\n-        },\n-        \"punctuation\": {\n-            \"patterns\": [\n-                {\n-                    \"comment\": \"comma\",\n-                    \"name\": \"punctuation.comma.rust\",\n-                    \"match\": \",\"\n-                },\n-                {\n-                    \"comment\": \"curly braces\",\n-                    \"name\": \"punctuation.brackets.curly.rust\",\n-                    \"match\": \"[{}]\"\n-                },\n-                {\n-                    \"comment\": \"parentheses, round brackets\",\n-                    \"name\": \"punctuation.brackets.round.rust\",\n-                    \"match\": \"[()]\"\n-                },\n-                {\n-                    \"comment\": \"semicolon\",\n-                    \"name\": \"punctuation.semi.rust\",\n-                    \"match\": \";\"\n-                },\n-                {\n-                    \"comment\": \"square brackets\",\n-                    \"name\": \"punctuation.brackets.square.rust\",\n-                    \"match\": \"[\\\\[\\\\]]\"\n-                },\n-                {\n-                    \"comment\": \"angle brackets\",\n-                    \"name\": \"punctuation.brackets.angle.rust\",\n-                    \"match\": \"(?<!=)[<>]\"\n-                }\n-            ]\n-        },\n-        \"strings\": {\n-            \"patterns\": [\n-                {\n-                    \"comment\": \"double-quoted strings and byte strings\",\n-                    \"name\": \"string.quoted.double.rust\",\n-                    \"begin\": \"(b?)(\\\")\",\n-                    \"beginCaptures\": {\n-                        \"1\": {\n-                            \"name\": \"string.quoted.byte.raw.rust\"\n-                        },\n-                        \"2\": {\n-                            \"name\": \"punctuation.definition.string.rust\"\n-                        }\n-                    },\n-                    \"end\": \"\\\"\",\n-                    \"endCaptures\": {\n-                        \"0\": {\n-                            \"name\": \"punctuation.definition.string.rust\"\n-                        }\n-                    },\n-                    \"patterns\": [\n-                        {\n-                            \"include\": \"#escapes\"\n-                        },\n-                        {\n-                            \"include\": \"#interpolations\"\n-                        }\n-                    ]\n-                },\n-                {\n-                    \"comment\": \"double-quoted raw strings and raw byte strings\",\n-                    \"name\": \"string.quoted.double.rust\",\n-                    \"begin\": \"(b?r)(#*)(\\\")\",\n-                    \"beginCaptures\": {\n-                        \"1\": {\n-                            \"name\": \"string.quoted.byte.raw.rust\"\n-                        },\n-                        \"2\": {\n-                            \"name\": \"punctuation.definition.string.raw.rust\"\n-                        },\n-                        \"3\": {\n-                            \"name\": \"punctuation.definition.string.rust\"\n-                        }\n-                    },\n-                    \"end\": \"(\\\")(\\\\2)\",\n-                    \"endCaptures\": {\n-                        \"1\": {\n-                            \"name\": \"punctuation.definition.string.rust\"\n-                        },\n-                        \"2\": {\n-                            \"name\": \"punctuation.definition.string.raw.rust\"\n-                        }\n-                    }\n-                },\n-                {\n-                    \"comment\": \"characters and bytes\",\n-                    \"name\": \"string.quoted.single.char.rust\",\n-                    \"begin\": \"(b)?(')\",\n-                    \"beginCaptures\": {\n-                        \"1\": {\n-                            \"name\": \"string.quoted.byte.raw.rust\"\n-                        },\n-                        \"2\": {\n-                            \"name\": \"punctuation.definition.char.rust\"\n-                        }\n-                    },\n-                    \"end\": \"'\",\n-                    \"endCaptures\": {\n-                        \"0\": {\n-                            \"name\": \"punctuation.definition.char.rust\"\n-                        }\n-                    },\n-                    \"patterns\": [\n-                        {\n-                            \"include\": \"#escapes\"\n-                        }\n-                    ]\n-                }\n-            ]\n-        },\n-        \"lvariables\": {\n-            \"patterns\": [\n-                {\n-                    \"comment\": \"self\",\n-                    \"name\": \"variable.language.self.rust\",\n-                    \"match\": \"\\\\b[Ss]elf\\\\b\"\n-                },\n-                {\n-                    \"comment\": \"super\",\n-                    \"name\": \"variable.language.super.rust\",\n-                    \"match\": \"\\\\bsuper\\\\b\"\n-                }\n-            ]\n-        },\n-        \"variables\": {\n-            \"patterns\": [\n-                {\n-                    \"comment\": \"variables\",\n-                    \"name\": \"variable.other.rust\",\n-                    \"match\": \"\\\\b(?<!(?<!\\\\.)\\\\.)(?:r#(?!(crate|[Ss]elf|super)))?[a-z0-9_]+\\\\b\"\n-                }\n-            ]\n-        }\n-    }\n-}"}]}