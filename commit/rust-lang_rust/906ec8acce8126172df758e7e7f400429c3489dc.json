{"sha": "906ec8acce8126172df758e7e7f400429c3489dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwNmVjOGFjY2U4MTI2MTcyZGY3NThlN2U3ZjQwMDQyOWMzNDg5ZGM=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-02-20T21:20:01Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-02-23T19:53:51Z"}, "message": "move collapse and unindent docs passes earlier", "tree": {"sha": "b8bf502da2cf139d64f82dfb74b53b7249fedd7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8bf502da2cf139d64f82dfb74b53b7249fedd7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/906ec8acce8126172df758e7e7f400429c3489dc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAlxxpNgWHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdLsiCACPbCPXB3rKuLdYwKhrEzo6jvBO\n0EzeoeYMxmt9Lwn4o3bJlbFR3bGglXFvT5BfKCtmCAnCvQVHi3125rMH9PSoZktm\nbo7DO1oagZSMGRgTviEfeg0FhUjwHvM44c4+sfLXwM/Eff9Qo6X8SAufyPLImuu/\nd+vT/PR3gxIxE7PT4ksOToXw5TYCkuNnSe8ZqtA/K3OfkV+xnsnhBBTgGoEEupx1\ntA1RfqNb++QR5L+USV2F7Jh/d+VsqDZ358aNWJds7XQpNo6yQmyz6YpJjuH/z6SD\nA5VErUiyzfBAuTQV60fYZW67MYJ0QrN/bIMfWOA8YkD/7sVGXmi+odeFXo0y\n=F32z\n-----END PGP SIGNATURE-----", "payload": "tree b8bf502da2cf139d64f82dfb74b53b7249fedd7a\nparent 7f19f161f24c9a02ff8c3f73122d0b015039221f\nauthor Andy Russell <arussell123@gmail.com> 1550697601 -0500\ncommitter Andy Russell <arussell123@gmail.com> 1550951631 -0500\n\nmove collapse and unindent docs passes earlier\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/906ec8acce8126172df758e7e7f400429c3489dc", "html_url": "https://github.com/rust-lang/rust/commit/906ec8acce8126172df758e7e7f400429c3489dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/906ec8acce8126172df758e7e7f400429c3489dc/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f19f161f24c9a02ff8c3f73122d0b015039221f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f19f161f24c9a02ff8c3f73122d0b015039221f", "html_url": "https://github.com/rust-lang/rust/commit/7f19f161f24c9a02ff8c3f73122d0b015039221f"}], "stats": {"total": 56, "additions": 40, "deletions": 16}, "files": [{"sha": "399f8261d21ec4689abea52f8637a1ea5da6e1e5", "filename": "src/librustdoc/passes/collapse_docs.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/906ec8acce8126172df758e7e7f400429c3489dc/src%2Flibrustdoc%2Fpasses%2Fcollapse_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/906ec8acce8126172df758e7e7f400429c3489dc/src%2Flibrustdoc%2Fpasses%2Fcollapse_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollapse_docs.rs?ref=906ec8acce8126172df758e7e7f400429c3489dc", "patch": "@@ -1,12 +1,13 @@\n use crate::clean::{self, DocFragment, Item};\n+use crate::core::DocContext;\n use crate::fold;\n use crate::fold::{DocFolder};\n use crate::passes::Pass;\n \n use std::mem::replace;\n \n pub const COLLAPSE_DOCS: Pass =\n-    Pass::late(\"collapse-docs\", collapse_docs,\n+    Pass::early(\"collapse-docs\", collapse_docs,\n         \"concatenates all document attributes into one document attribute\");\n \n #[derive(Copy, Clone, Debug, PartialEq, Eq)]\n@@ -26,7 +27,7 @@ impl DocFragment {\n     }\n }\n \n-pub fn collapse_docs(krate: clean::Crate) -> clean::Crate {\n+pub fn collapse_docs(krate: clean::Crate, _: &DocContext<'_, '_, '_>) -> clean::Crate {\n     Collapser.fold_crate(krate)\n }\n "}, {"sha": "db2bb89843848505cb253a3140624938323ea4b6", "filename": "src/librustdoc/passes/mod.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/906ec8acce8126172df758e7e7f400429c3489dc/src%2Flibrustdoc%2Fpasses%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/906ec8acce8126172df758e7e7f400429c3489dc/src%2Flibrustdoc%2Fpasses%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fmod.rs?ref=906ec8acce8126172df758e7e7f400429c3489dc", "patch": "@@ -141,27 +141,27 @@ pub const PASSES: &'static [Pass] = &[\n ];\n \n /// The list of passes run by default.\n-pub const DEFAULT_PASSES: &'static [&'static str] = &[\n+pub const DEFAULT_PASSES: &[&str] = &[\n     \"collect-trait-impls\",\n+    \"collapse-docs\",\n+    \"unindent-comments\",\n     \"check-private-items-doc-tests\",\n     \"strip-hidden\",\n     \"strip-private\",\n     \"collect-intra-doc-links\",\n     \"check-code-block-syntax\",\n-    \"collapse-docs\",\n-    \"unindent-comments\",\n     \"propagate-doc-cfg\",\n ];\n \n /// The list of default passes run with `--document-private-items` is passed to rustdoc.\n-pub const DEFAULT_PRIVATE_PASSES: &'static [&'static str] = &[\n+pub const DEFAULT_PRIVATE_PASSES: &[&str] = &[\n     \"collect-trait-impls\",\n+    \"collapse-docs\",\n+    \"unindent-comments\",\n     \"check-private-items-doc-tests\",\n     \"strip-priv-imports\",\n     \"collect-intra-doc-links\",\n     \"check-code-block-syntax\",\n-    \"collapse-docs\",\n-    \"unindent-comments\",\n     \"propagate-doc-cfg\",\n ];\n \n@@ -438,11 +438,11 @@ crate fn source_span_for_markdown_range(\n         .span_to_snippet(span_of_attrs(attrs))\n         .ok()?;\n \n-    let starting_line = markdown[..md_range.start].lines().count() - 1;\n-    let ending_line = markdown[..md_range.end].lines().count() - 1;\n+    let starting_line = markdown[..md_range.start].matches('\\n').count();\n+    let ending_line = starting_line + markdown[md_range.start..md_range.end].matches('\\n').count();\n \n-    // We use `split_terminator('\\n')` instead of `lines()` when counting bytes so that we only\n-    // we can treat CRLF and LF line endings the same way.\n+    // We use `split_terminator('\\n')` instead of `lines()` when counting bytes so that we treat\n+    // CRLF and LF line endings the same way.\n     let mut src_lines = snippet.split_terminator('\\n');\n     let md_lines = markdown.split_terminator('\\n');\n "}, {"sha": "c32c3556a57287061bf8fb46f5d8eb8cce1909bf", "filename": "src/librustdoc/passes/unindent_comments.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/906ec8acce8126172df758e7e7f400429c3489dc/src%2Flibrustdoc%2Fpasses%2Funindent_comments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/906ec8acce8126172df758e7e7f400429c3489dc/src%2Flibrustdoc%2Fpasses%2Funindent_comments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Funindent_comments.rs?ref=906ec8acce8126172df758e7e7f400429c3489dc", "patch": "@@ -3,14 +3,15 @@ use std::string::String;\n use std::usize;\n \n use crate::clean::{self, DocFragment, Item};\n+use crate::core::DocContext;\n use crate::fold::{self, DocFolder};\n use crate::passes::Pass;\n \n pub const UNINDENT_COMMENTS: Pass =\n-    Pass::late(\"unindent-comments\", unindent_comments,\n+    Pass::early(\"unindent-comments\", unindent_comments,\n         \"removes excess indentation on comments in order for markdown to like it\");\n \n-pub fn unindent_comments(krate: clean::Crate) -> clean::Crate {\n+pub fn unindent_comments(krate: clean::Crate, _: &DocContext<'_, '_, '_>) -> clean::Crate {\n     CommentCleaner.fold_crate(krate)\n }\n "}, {"sha": "60fc131dbda175029f36eb46e5f501cf6238ccef", "filename": "src/test/rustdoc-ui/intra-links-warning.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/906ec8acce8126172df758e7e7f400429c3489dc/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/906ec8acce8126172df758e7e7f400429c3489dc/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.stderr?ref=906ec8acce8126172df758e7e7f400429c3489dc", "patch": "@@ -105,8 +105,8 @@ LL | | /// [error]\n    |\n    = note: the link appears in this line:\n            \n-            [error]\n-             ^^^^^\n+           [error]\n+            ^^^^^\n    = help: to escape `[` and `]` characters, just add '/' before them like `/[` or `/]`\n \n warning: `[error1]` cannot be resolved, ignoring it..."}, {"sha": "5e5ddebe108845387808d56a696e836f2f26de39", "filename": "src/test/rustdoc-ui/issue-58473-2.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/906ec8acce8126172df758e7e7f400429c3489dc/src%2Ftest%2Frustdoc-ui%2Fissue-58473-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/906ec8acce8126172df758e7e7f400429c3489dc/src%2Ftest%2Frustdoc-ui%2Fissue-58473-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fissue-58473-2.rs?ref=906ec8acce8126172df758e7e7f400429c3489dc", "patch": "@@ -0,0 +1,12 @@\n+// compile-pass\n+\n+#![deny(private_doc_tests)]\n+\n+mod foo {\n+    /**\n+    Does nothing, returns `()`\n+\n+    yadda-yadda-yadda\n+    */\n+    fn foo() {}\n+}"}, {"sha": "0e5be3292c05341f7b640f33882d799251008f2b", "filename": "src/test/rustdoc-ui/issue-58473.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/906ec8acce8126172df758e7e7f400429c3489dc/src%2Ftest%2Frustdoc-ui%2Fissue-58473.rs", "raw_url": "https://github.com/rust-lang/rust/raw/906ec8acce8126172df758e7e7f400429c3489dc/src%2Ftest%2Frustdoc-ui%2Fissue-58473.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fissue-58473.rs?ref=906ec8acce8126172df758e7e7f400429c3489dc", "patch": "@@ -0,0 +1,10 @@\n+// compile-pass\n+\n+pub trait Foo {\n+    /**\n+    Does nothing, returns `()`\n+\n+    yadda-yadda-yadda\n+    */\n+    fn foo() {}\n+}"}]}