{"sha": "b21d9d307b5fdb1e423d786f9899757b42957b07", "node_id": "C_kwDOAAsO6NoAKGIyMWQ5ZDMwN2I1ZmRiMWU0MjNkNzg2Zjk4OTk3NTdiNDI5NTdiMDc", "commit": {"author": {"name": "xphoniex", "email": "xphoniex@users.noreply.github.com", "date": "2022-09-06T04:38:29Z"}, "committer": {"name": "xphoniex", "email": "xphoniex@users.noreply.github.com", "date": "2022-09-06T04:38:29Z"}, "message": "Suggest `unwrap_or_default` when closure returns `\"\".to_string`\n\nSigned-off-by: xphoniex <xphoniex@users.noreply.github.com>", "tree": {"sha": "3bf59292db77196028206ee8818b57cbf4d8e2f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bf59292db77196028206ee8818b57cbf4d8e2f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b21d9d307b5fdb1e423d786f9899757b42957b07", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJWBAABCgBAFiEEzQvESk/9zH1kodd6GwfNQlp1yssFAmMWzsoiHHhwaG9uaWV4\nQHVzZXJzLm5vcmVwbHkuZ2l0aHViLmNvbQAKCRAbB81CWnXKy37aD/9ukarSs+oK\nenZVNIdfLrqby2Iu8zPJT2nB6SUBB0RbrIOrokhx7cNXGpKhfO8IqiiYSs0V52qV\nJMBcthwQsEusZ5zQG2FB61FlK411HCH6fi9tkQajR15Ye0afAzkJuhvZrLE7DFR/\nRSThrwkJZhW6U/HSSWbinbnoYgB12lgmvnmrdQKnKu1rHbPNepb2w0VA/ZcofQoF\n4PhVps4SXz+1vNCDlFkQmczpWeBQQdxIzjPOM9gAIXoGwHGzCe1txfCIskOfYNn8\nHOdI9T6h9e/IcRjeWPhtUo7nBxW0fxnFsGwqn7N1Y1c/0Vo1+Hl4CdvW7TM2VNSZ\nVOTFZwsvL7vNarps0vARsiJtto29Y5FkOi3Eag299Wobf1/q+XxBxTKMZ6smrYHo\nPJLukGsIYTSf9Mn2DJS7eu+yi6BZtQgHlgtSrFmGZpd/uKceXmA86cgDn4ABcY08\ne3Th0+OUW1ATrMTZlivQMTM5qbH0gxDfH9aZg7uHnUlnMafTyyp9IdWfO2hQFnp9\nBmYF3cDsqwcuw8jVYnYmjBa0hd0kJB3WfsVMRfOWSvu+/bM1JSYIr54w3MIcwOus\nHayTj1nvz6Mc0tBWUkvbZ81sDfmfCRWHg9s+44Nlf/ZzbMySCXL34m7BC529g2pM\nnsBTO2bOEB1FpsSMlqhM+8vta0QfAPAfwA==\n=55Pc\n-----END PGP SIGNATURE-----", "payload": "tree 3bf59292db77196028206ee8818b57cbf4d8e2f7\nparent 99ab5fe53a421e0ae3f1d922442fb994bcfcaf24\nauthor xphoniex <xphoniex@users.noreply.github.com> 1662439109 +0000\ncommitter xphoniex <xphoniex@users.noreply.github.com> 1662439109 +0000\n\nSuggest `unwrap_or_default` when closure returns `\"\".to_string`\n\nSigned-off-by: xphoniex <xphoniex@users.noreply.github.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b21d9d307b5fdb1e423d786f9899757b42957b07", "html_url": "https://github.com/rust-lang/rust/commit/b21d9d307b5fdb1e423d786f9899757b42957b07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b21d9d307b5fdb1e423d786f9899757b42957b07/comments", "author": {"login": "xphoniex", "id": 14107758, "node_id": "MDQ6VXNlcjE0MTA3NzU4", "avatar_url": "https://avatars.githubusercontent.com/u/14107758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xphoniex", "html_url": "https://github.com/xphoniex", "followers_url": "https://api.github.com/users/xphoniex/followers", "following_url": "https://api.github.com/users/xphoniex/following{/other_user}", "gists_url": "https://api.github.com/users/xphoniex/gists{/gist_id}", "starred_url": "https://api.github.com/users/xphoniex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xphoniex/subscriptions", "organizations_url": "https://api.github.com/users/xphoniex/orgs", "repos_url": "https://api.github.com/users/xphoniex/repos", "events_url": "https://api.github.com/users/xphoniex/events{/privacy}", "received_events_url": "https://api.github.com/users/xphoniex/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xphoniex", "id": 14107758, "node_id": "MDQ6VXNlcjE0MTA3NzU4", "avatar_url": "https://avatars.githubusercontent.com/u/14107758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xphoniex", "html_url": "https://github.com/xphoniex", "followers_url": "https://api.github.com/users/xphoniex/followers", "following_url": "https://api.github.com/users/xphoniex/following{/other_user}", "gists_url": "https://api.github.com/users/xphoniex/gists{/gist_id}", "starred_url": "https://api.github.com/users/xphoniex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xphoniex/subscriptions", "organizations_url": "https://api.github.com/users/xphoniex/orgs", "repos_url": "https://api.github.com/users/xphoniex/repos", "events_url": "https://api.github.com/users/xphoniex/events{/privacy}", "received_events_url": "https://api.github.com/users/xphoniex/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99ab5fe53a421e0ae3f1d922442fb994bcfcaf24", "url": "https://api.github.com/repos/rust-lang/rust/commits/99ab5fe53a421e0ae3f1d922442fb994bcfcaf24", "html_url": "https://github.com/rust-lang/rust/commit/99ab5fe53a421e0ae3f1d922442fb994bcfcaf24"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "d3630b7d08eaa5d9ac105fe9db2fbecdd6b530ea", "filename": "clippy_lints/src/methods/unwrap_or_else_default.rs", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b21d9d307b5fdb1e423d786f9899757b42957b07/clippy_lints%2Fsrc%2Fmethods%2Funwrap_or_else_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b21d9d307b5fdb1e423d786f9899757b42957b07/clippy_lints%2Fsrc%2Fmethods%2Funwrap_or_else_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funwrap_or_else_default.rs?ref=b21d9d307b5fdb1e423d786f9899757b42957b07", "patch": "@@ -5,10 +5,11 @@ use clippy_utils::{\n     diagnostics::span_lint_and_sugg, is_default_equivalent_call, source::snippet_with_applicability,\n     ty::is_type_diagnostic_item,\n };\n+use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_lint::LateContext;\n-use rustc_span::sym;\n+use rustc_span::{sym, symbol};\n \n pub(super) fn check<'tcx>(\n     cx: &LateContext<'tcx>,\n@@ -25,7 +26,7 @@ pub(super) fn check<'tcx>(\n \n     if_chain! {\n         if is_option || is_result;\n-        if is_default_equivalent_call(cx, u_arg);\n+        if closure_body_returns_empty_to_string(cx, u_arg) || is_default_equivalent_call(cx, u_arg);\n         then {\n             let mut applicability = Applicability::MachineApplicable;\n \n@@ -44,3 +45,22 @@ pub(super) fn check<'tcx>(\n         }\n     }\n }\n+\n+fn closure_body_returns_empty_to_string(cx: &LateContext<'_>, e: &hir::Expr<'_>) -> bool {\n+    if let hir::ExprKind::Closure(&hir::Closure { body, .. }) = e.kind {\n+        let body = cx.tcx.hir().body(body);\n+\n+        if body.params.is_empty()\n+            && let hir::Expr{ kind, .. } = &body.value\n+            && let hir::ExprKind::MethodCall(hir::PathSegment {ident, ..}, [self_arg], _) = kind\n+            && ident == &symbol::Ident::from_str(\"to_string\")\n+            && let hir::Expr{ kind, .. } = self_arg\n+            && let hir::ExprKind::Lit(lit) = kind\n+            && let LitKind::Str(symbol::kw::Empty, _) = lit.node\n+        {\n+            return true;\n+        }\n+    }\n+\n+    false\n+}"}, {"sha": "84f779569ff9dd7e863d37e33411a608e05e9196", "filename": "tests/ui/unwrap_or_else_default.fixed", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b21d9d307b5fdb1e423d786f9899757b42957b07/tests%2Fui%2Funwrap_or_else_default.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/b21d9d307b5fdb1e423d786f9899757b42957b07/tests%2Fui%2Funwrap_or_else_default.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funwrap_or_else_default.fixed?ref=b21d9d307b5fdb1e423d786f9899757b42957b07", "patch": "@@ -69,6 +69,9 @@ fn unwrap_or_else_default() {\n \n     let with_default_type: Option<Vec<u64>> = None;\n     with_default_type.unwrap_or_default();\n+\n+    let empty_string = None::<String>;\n+    empty_string.unwrap_or_default();\n }\n \n fn main() {}"}, {"sha": "1735bd5808e5a94713e2593874ff8305a73f6cb1", "filename": "tests/ui/unwrap_or_else_default.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b21d9d307b5fdb1e423d786f9899757b42957b07/tests%2Fui%2Funwrap_or_else_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b21d9d307b5fdb1e423d786f9899757b42957b07/tests%2Fui%2Funwrap_or_else_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funwrap_or_else_default.rs?ref=b21d9d307b5fdb1e423d786f9899757b42957b07", "patch": "@@ -69,6 +69,9 @@ fn unwrap_or_else_default() {\n \n     let with_default_type: Option<Vec<u64>> = None;\n     with_default_type.unwrap_or_else(Vec::new);\n+\n+    let empty_string = None::<String>;\n+    empty_string.unwrap_or_else(|| \"\".to_string());\n }\n \n fn main() {}"}, {"sha": "d2b9212223f7795957c33f5549a84e9af0a74f53", "filename": "tests/ui/unwrap_or_else_default.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b21d9d307b5fdb1e423d786f9899757b42957b07/tests%2Fui%2Funwrap_or_else_default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b21d9d307b5fdb1e423d786f9899757b42957b07/tests%2Fui%2Funwrap_or_else_default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funwrap_or_else_default.stderr?ref=b21d9d307b5fdb1e423d786f9899757b42957b07", "patch": "@@ -30,5 +30,11 @@ error: use of `.unwrap_or_else(..)` to construct default value\n LL |     with_default_type.unwrap_or_else(Vec::new);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `with_default_type.unwrap_or_default()`\n \n-error: aborting due to 5 previous errors\n+error: use of `.unwrap_or_else(..)` to construct default value\n+  --> $DIR/unwrap_or_else_default.rs:74:5\n+   |\n+LL |     empty_string.unwrap_or_else(|| \"\".to_string());\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `empty_string.unwrap_or_default()`\n+\n+error: aborting due to 6 previous errors\n "}]}