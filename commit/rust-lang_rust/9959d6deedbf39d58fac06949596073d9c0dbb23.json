{"sha": "9959d6deedbf39d58fac06949596073d9c0dbb23", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5NTlkNmRlZWRiZjM5ZDU4ZmFjMDY5NDk1OTYwNzNkOWMwZGJiMjM=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-12-20T22:43:07Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-01-13T03:25:51Z"}, "message": "Only suggest `..` if more than one field is missing", "tree": {"sha": "bbb82c5d94aed4e35eacf9572400c75ea7016ad7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbb82c5d94aed4e35eacf9572400c75ea7016ad7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9959d6deedbf39d58fac06949596073d9c0dbb23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9959d6deedbf39d58fac06949596073d9c0dbb23", "html_url": "https://github.com/rust-lang/rust/commit/9959d6deedbf39d58fac06949596073d9c0dbb23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9959d6deedbf39d58fac06949596073d9c0dbb23/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe82cc38a0b3e39b9425090e2107c0ba15760491", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe82cc38a0b3e39b9425090e2107c0ba15760491", "html_url": "https://github.com/rust-lang/rust/commit/fe82cc38a0b3e39b9425090e2107c0ba15760491"}], "stats": {"total": 203, "additions": 68, "deletions": 135}, "files": [{"sha": "a863fc95e0ea10c3273ca0abc7f256106d6d5fa5", "filename": "compiler/rustc_typeck/src/check/pat.rs", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/9959d6deedbf39d58fac06949596073d9c0dbb23/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9959d6deedbf39d58fac06949596073d9c0dbb23/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs?ref=9959d6deedbf39d58fac06949596073d9c0dbb23", "patch": "@@ -1061,27 +1061,30 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 wildcard_sugg = String::from(\", \") + &wildcard_sugg;\n             }\n \n-            err.span_suggestion(\n+            err.span_suggestion_short(\n                 after_fields_span,\n                 \"use `_` to explicitly ignore each field\",\n                 wildcard_sugg,\n                 Applicability::MaybeIncorrect,\n             );\n \n-            if subpats.is_empty() || all_wildcards {\n-                err.span_suggestion(\n-                    all_fields_span,\n-                    \"use `..` to ignore all fields\",\n-                    String::from(\"..\"),\n-                    Applicability::MaybeIncorrect,\n-                );\n-            } else {\n-                err.span_suggestion(\n-                    after_fields_span,\n-                    \"use `..` to ignore the rest of the fields\",\n-                    String::from(\", ..\"),\n-                    Applicability::MaybeIncorrect,\n-                );\n+            // Only suggest `..` if more than one field is missing.\n+            if fields.len() - subpats.len() > 1 {\n+                if subpats.is_empty() || all_wildcards {\n+                    err.span_suggestion_short(\n+                        all_fields_span,\n+                        \"use `..` to ignore all fields\",\n+                        String::from(\"..\"),\n+                        Applicability::MaybeIncorrect,\n+                    );\n+                } else {\n+                    err.span_suggestion_short(\n+                        after_fields_span,\n+                        \"use `..` to ignore the rest of the fields\",\n+                        String::from(\", ..\"),\n+                        Applicability::MaybeIncorrect,\n+                    );\n+                }\n             }\n         }\n "}, {"sha": "42859406e178d78bda82ad091041200ec9f0b08d", "filename": "src/test/ui/destructuring-assignment/tuple_struct_destructure_fail.stderr", "status": "modified", "additions": 8, "deletions": 20, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/9959d6deedbf39d58fac06949596073d9c0dbb23/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure_fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9959d6deedbf39d58fac06949596073d9c0dbb23/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure_fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure_fail.stderr?ref=9959d6deedbf39d58fac06949596073d9c0dbb23", "patch": "@@ -30,16 +30,10 @@ LL | struct TupleStruct<S, T>(S, T);\n    | ------------------------------- tuple struct defined here\n ...\n LL |     TupleStruct(_) = TupleStruct(1, 2);\n-   |     ^^^^^^^^^^^^^^ expected 2 fields, found 1\n-   |\n-help: use `_` to explicitly ignore each field\n-   |\n-LL |     TupleStruct(_, _) = TupleStruct(1, 2);\n-   |                  ^^^\n-help: use `..` to ignore all fields\n-   |\n-LL |     TupleStruct(..) = TupleStruct(1, 2);\n-   |                 ^^\n+   |     ^^^^^^^^^^^^^-\n+   |     |            |\n+   |     |            help: use `_` to explicitly ignore each field\n+   |     expected 2 fields, found 1\n \n error[E0023]: this pattern has 3 fields, but the corresponding tuple variant has 2 fields\n   --> $DIR/tuple_struct_destructure_fail.rs:34:5\n@@ -57,16 +51,10 @@ LL |     SingleVariant(S, T)\n    |     ------------------- tuple variant defined here\n ...\n LL |     Enum::SingleVariant(_) = Enum::SingleVariant(1, 2);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^ expected 2 fields, found 1\n-   |\n-help: use `_` to explicitly ignore each field\n-   |\n-LL |     Enum::SingleVariant(_, _) = Enum::SingleVariant(1, 2);\n-   |                          ^^^\n-help: use `..` to ignore all fields\n-   |\n-LL |     Enum::SingleVariant(..) = Enum::SingleVariant(1, 2);\n-   |                         ^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^-\n+   |     |                    |\n+   |     |                    help: use `_` to explicitly ignore each field\n+   |     expected 2 fields, found 1\n \n error[E0070]: invalid left-hand side of assignment\n   --> $DIR/tuple_struct_destructure_fail.rs:40:12"}, {"sha": "0c6f496cf43538681103ffab9075c920beadcb75", "filename": "src/test/ui/error-codes/E0023.stderr", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9959d6deedbf39d58fac06949596073d9c0dbb23/src%2Ftest%2Fui%2Ferror-codes%2FE0023.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9959d6deedbf39d58fac06949596073d9c0dbb23/src%2Ftest%2Fui%2Ferror-codes%2FE0023.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0023.stderr?ref=9959d6deedbf39d58fac06949596073d9c0dbb23", "patch": "@@ -5,16 +5,10 @@ LL |     Apple(String, String),\n    |     --------------------- tuple variant defined here\n ...\n LL |         Fruit::Apple(a) => {},\n-   |         ^^^^^^^^^^^^^^^ expected 2 fields, found 1\n-   |\n-help: use `_` to explicitly ignore each field\n-   |\n-LL |         Fruit::Apple(a, _) => {},\n-   |                       ^^^\n-help: use `..` to ignore the rest of the fields\n-   |\n-LL |         Fruit::Apple(a, ..) => {},\n-   |                       ^^^^\n+   |         ^^^^^^^^^^^^^^-\n+   |         |             |\n+   |         |             help: use `_` to explicitly ignore each field\n+   |         expected 2 fields, found 1\n \n error[E0023]: this pattern has 3 fields, but the corresponding tuple variant has 2 fields\n   --> $DIR/E0023.rs:12:9"}, {"sha": "86be8e7db4e6fe9ad81dc9b858dedbb3874d3024", "filename": "src/test/ui/issues/issue-67037-pat-tup-scrut-ty-diff-less-fields.stderr", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9959d6deedbf39d58fac06949596073d9c0dbb23/src%2Ftest%2Fui%2Fissues%2Fissue-67037-pat-tup-scrut-ty-diff-less-fields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9959d6deedbf39d58fac06949596073d9c0dbb23/src%2Ftest%2Fui%2Fissues%2Fissue-67037-pat-tup-scrut-ty-diff-less-fields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-67037-pat-tup-scrut-ty-diff-less-fields.stderr?ref=9959d6deedbf39d58fac06949596073d9c0dbb23", "patch": "@@ -16,16 +16,10 @@ LL | struct P<T>(T); // 1 type parameter wanted\n    | --------------- tuple struct defined here\n ...\n LL |     let P() = U {};\n-   |         ^^^ expected 1 field, found 0\n-   |\n-help: use `_` to explicitly ignore each field\n-   |\n-LL |     let P(_) = U {};\n-   |           ^\n-help: use `..` to ignore all fields\n-   |\n-LL |     let P(..) = U {};\n-   |           ^^\n+   |         ^^-\n+   |         | |\n+   |         | help: use `_` to explicitly ignore each field\n+   |         expected 1 field, found 0\n \n error: aborting due to 2 previous errors\n "}, {"sha": "9479e365aee68d399209b4bd4dc4b68eb2b50845", "filename": "src/test/ui/issues/issue-72574-2.stderr", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9959d6deedbf39d58fac06949596073d9c0dbb23/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9959d6deedbf39d58fac06949596073d9c0dbb23/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.stderr?ref=9959d6deedbf39d58fac06949596073d9c0dbb23", "patch": "@@ -25,16 +25,10 @@ LL | struct Binder(i32, i32, i32);\n    | ----------------------------- tuple struct defined here\n ...\n LL |         Binder(_a, _x @ ..) => {}\n-   |         ^^^^^^^^^^^^^^^^^^^ expected 3 fields, found 2\n-   |\n-help: use `_` to explicitly ignore each field\n-   |\n-LL |         Binder(_a, _x @ .., _) => {}\n-   |                           ^^^\n-help: use `..` to ignore the rest of the fields\n-   |\n-LL |         Binder(_a, _x @ .., ..) => {}\n-   |                           ^^^^\n+   |         ^^^^^^^^^^^^^^^^^^-\n+   |         |                 |\n+   |         |                 help: use `_` to explicitly ignore each field\n+   |         expected 3 fields, found 2\n \n error: aborting due to 3 previous errors\n "}, {"sha": "0bb5e726ccbd85a37f074e2b0c43a119be112cbf", "filename": "src/test/ui/match/match-pattern-field-mismatch.stderr", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9959d6deedbf39d58fac06949596073d9c0dbb23/src%2Ftest%2Fui%2Fmatch%2Fmatch-pattern-field-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9959d6deedbf39d58fac06949596073d9c0dbb23/src%2Ftest%2Fui%2Fmatch%2Fmatch-pattern-field-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-pattern-field-mismatch.stderr?ref=9959d6deedbf39d58fac06949596073d9c0dbb23", "patch": "@@ -5,16 +5,10 @@ LL |         Rgb(usize, usize, usize),\n    |         ------------------------ tuple variant defined here\n ...\n LL |           Color::Rgb(_, _) => { }\n-   |           ^^^^^^^^^^^^^^^^ expected 3 fields, found 2\n-   |\n-help: use `_` to explicitly ignore each field\n-   |\n-LL |           Color::Rgb(_, _, _) => { }\n-   |                          ^^^\n-help: use `..` to ignore all fields\n-   |\n-LL |           Color::Rgb(..) => { }\n-   |                      ^^\n+   |           ^^^^^^^^^^^^^^^-\n+   |           |              |\n+   |           |              help: use `_` to explicitly ignore each field\n+   |           expected 3 fields, found 2\n \n error: aborting due to previous error\n "}, {"sha": "49011d83e50755a116014a35738da9dbdc2a61db", "filename": "src/test/ui/pattern/issue-74539.stderr", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9959d6deedbf39d58fac06949596073d9c0dbb23/src%2Ftest%2Fui%2Fpattern%2Fissue-74539.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9959d6deedbf39d58fac06949596073d9c0dbb23/src%2Ftest%2Fui%2Fpattern%2Fissue-74539.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fissue-74539.stderr?ref=9959d6deedbf39d58fac06949596073d9c0dbb23", "patch": "@@ -25,16 +25,10 @@ LL |     A(u8, u8),\n    |     --------- tuple variant defined here\n ...\n LL |         E::A(x @ ..) => {\n-   |         ^^^^^^^^^^^^ expected 2 fields, found 1\n-   |\n-help: use `_` to explicitly ignore each field\n-   |\n-LL |         E::A(x @ .., _) => {\n-   |                    ^^^\n-help: use `..` to ignore the rest of the fields\n-   |\n-LL |         E::A(x @ .., ..) => {\n-   |                    ^^^^\n+   |         ^^^^^^^^^^^-\n+   |         |          |\n+   |         |          help: use `_` to explicitly ignore each field\n+   |         expected 2 fields, found 1\n \n error: aborting due to 3 previous errors\n "}, {"sha": "f86d617801455906f854fe89d53d5bf872f852d0", "filename": "src/test/ui/pattern/pat-tuple-underfield.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9959d6deedbf39d58fac06949596073d9c0dbb23/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9959d6deedbf39d58fac06949596073d9c0dbb23/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.rs?ref=9959d6deedbf39d58fac06949596073d9c0dbb23", "patch": "@@ -8,13 +8,11 @@ fn main() {\n         S(x) => {}\n         //~^ ERROR this pattern has 1 field, but the corresponding tuple struct has 2 fields\n         //~| HELP use `_` to explicitly ignore each field\n-        //~| HELP use `..` to ignore the rest of the fields\n     }\n     match S(0, 1.0) {\n         S(_) => {}\n         //~^ ERROR this pattern has 1 field, but the corresponding tuple struct has 2 fields\n         //~| HELP use `_` to explicitly ignore each field\n-        //~| HELP use `..` to ignore all fields\n     }\n     match S(0, 1.0) {\n         S() => {}\n@@ -27,13 +25,11 @@ fn main() {\n         E::S(x) => {}\n         //~^ ERROR this pattern has 1 field, but the corresponding tuple variant has 2 fields\n         //~| HELP use `_` to explicitly ignore each field\n-        //~| HELP use `..` to ignore the rest of the fields\n     }\n     match E::S(0, 1.0) {\n         E::S(_) => {}\n         //~^ ERROR this pattern has 1 field, but the corresponding tuple variant has 2 fields\n         //~| HELP use `_` to explicitly ignore each field\n-        //~| HELP use `..` to ignore all fields\n     }\n     match E::S(0, 1.0) {\n         E::S() => {}"}, {"sha": "6e7afd8e57b1df439ff0f26657073aad595aff93", "filename": "src/test/ui/pattern/pat-tuple-underfield.stderr", "status": "modified", "additions": 22, "deletions": 46, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/9959d6deedbf39d58fac06949596073d9c0dbb23/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9959d6deedbf39d58fac06949596073d9c0dbb23/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr?ref=9959d6deedbf39d58fac06949596073d9c0dbb23", "patch": "@@ -1,5 +1,5 @@\n error[E0532]: expected unit struct, unit variant or constant, found tuple variant `E::S`\n-  --> $DIR/pat-tuple-underfield.rs:45:9\n+  --> $DIR/pat-tuple-underfield.rs:41:9\n    |\n LL |     S(i32, f32),\n    |     ----------- `E::S` defined here\n@@ -14,37 +14,25 @@ LL | struct S(i32, f32);\n    | ------------------- tuple struct defined here\n ...\n LL |         S(x) => {}\n-   |         ^^^^ expected 2 fields, found 1\n-   |\n-help: use `_` to explicitly ignore each field\n-   |\n-LL |         S(x, _) => {}\n-   |            ^^^\n-help: use `..` to ignore the rest of the fields\n-   |\n-LL |         S(x, ..) => {}\n-   |            ^^^^\n+   |         ^^^-\n+   |         |  |\n+   |         |  help: use `_` to explicitly ignore each field\n+   |         expected 2 fields, found 1\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple struct has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:14:9\n+  --> $DIR/pat-tuple-underfield.rs:13:9\n    |\n LL | struct S(i32, f32);\n    | ------------------- tuple struct defined here\n ...\n LL |         S(_) => {}\n-   |         ^^^^ expected 2 fields, found 1\n-   |\n-help: use `_` to explicitly ignore each field\n-   |\n-LL |         S(_, _) => {}\n-   |            ^^^\n-help: use `..` to ignore all fields\n-   |\n-LL |         S(..) => {}\n-   |           ^^\n+   |         ^^^-\n+   |         |  |\n+   |         |  help: use `_` to explicitly ignore each field\n+   |         expected 2 fields, found 1\n \n error[E0023]: this pattern has 0 fields, but the corresponding tuple struct has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:20:9\n+  --> $DIR/pat-tuple-underfield.rs:18:9\n    |\n LL | struct S(i32, f32);\n    | ------------------- tuple struct defined here\n@@ -62,43 +50,31 @@ LL |         S(..) => {}\n    |           ^^\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:27:9\n+  --> $DIR/pat-tuple-underfield.rs:25:9\n    |\n LL |     S(i32, f32),\n    |     ----------- tuple variant defined here\n ...\n LL |         E::S(x) => {}\n-   |         ^^^^^^^ expected 2 fields, found 1\n-   |\n-help: use `_` to explicitly ignore each field\n-   |\n-LL |         E::S(x, _) => {}\n-   |               ^^^\n-help: use `..` to ignore the rest of the fields\n-   |\n-LL |         E::S(x, ..) => {}\n-   |               ^^^^\n+   |         ^^^^^^-\n+   |         |     |\n+   |         |     help: use `_` to explicitly ignore each field\n+   |         expected 2 fields, found 1\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:33:9\n+  --> $DIR/pat-tuple-underfield.rs:30:9\n    |\n LL |     S(i32, f32),\n    |     ----------- tuple variant defined here\n ...\n LL |         E::S(_) => {}\n-   |         ^^^^^^^ expected 2 fields, found 1\n-   |\n-help: use `_` to explicitly ignore each field\n-   |\n-LL |         E::S(_, _) => {}\n-   |               ^^^\n-help: use `..` to ignore all fields\n-   |\n-LL |         E::S(..) => {}\n-   |              ^^\n+   |         ^^^^^^-\n+   |         |     |\n+   |         |     help: use `_` to explicitly ignore each field\n+   |         expected 2 fields, found 1\n \n error[E0023]: this pattern has 0 fields, but the corresponding tuple variant has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:39:9\n+  --> $DIR/pat-tuple-underfield.rs:35:9\n    |\n LL |     S(i32, f32),\n    |     ----------- tuple variant defined here"}]}