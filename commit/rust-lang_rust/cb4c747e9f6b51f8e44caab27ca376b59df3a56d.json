{"sha": "cb4c747e9f6b51f8e44caab27ca376b59df3a56d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiNGM3NDdlOWY2YjUxZjhlNDRjYWFiMjdjYTM3NmI1OWRmM2E1NmQ=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-05T21:19:50Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-06T02:06:21Z"}, "message": "Add section on lvals, rvals and temps.", "tree": {"sha": "54192c1c2745b18f07dad8cb2236d37e2eb98cd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54192c1c2745b18f07dad8cb2236d37e2eb98cd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb4c747e9f6b51f8e44caab27ca376b59df3a56d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb4c747e9f6b51f8e44caab27ca376b59df3a56d", "html_url": "https://github.com/rust-lang/rust/commit/cb4c747e9f6b51f8e44caab27ca376b59df3a56d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb4c747e9f6b51f8e44caab27ca376b59df3a56d/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c2c6947256db3841ceb3253ebace259a72dd917", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c2c6947256db3841ceb3253ebace259a72dd917", "html_url": "https://github.com/rust-lang/rust/commit/6c2c6947256db3841ceb3253ebace259a72dd917"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "e514990ab8eca2c53984a16af15bfb89f5290f77", "filename": "doc/rust.md", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/cb4c747e9f6b51f8e44caab27ca376b59df3a56d/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/cb4c747e9f6b51f8e44caab27ca376b59df3a56d/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=cb4c747e9f6b51f8e44caab27ca376b59df3a56d", "patch": "@@ -1468,6 +1468,25 @@ structure of expressions. Blocks themselves are expressions, so the nesting\n sequence of block, statement, expression, and block can repeatedly nest to an\n arbitrary depth.\n \n+#### Lvalues, rvalues and temporaries\n+\n+Expressions are divided into two main categories: _lvalues_ and _rvalues_.\n+Likewise within each expression, sub-expressions may occur in _lvalue context_ or _rvalue context_.\n+The evaluation of an expression depends both on its own category and the context it occurs within.\n+\n+Path, field and index expressions are lvalues.\n+All other expressions are rvalues.\n+\n+The left operand of an assignment expression and the operand of the borrow operator are lvalue contexts.\n+All other expression contexts are rvalue contexts.\n+\n+When an lvalue is evaluated in an _lvalue context_, it denotes a memory location;\n+when evaluated in an _rvalue context_, it denotes the value held _in_ that memory location.\n+\n+When an rvalue is used in lvalue context, a temporary un-named lvalue is created and used instead.\n+A temporary's lifetime equals the largest lifetime of any borrowed pointer that points to it.\n+\n+\n ### Literal expressions\n \n A _literal expression_ consists of one of the [literal](#literals)"}]}