{"sha": "30f458ed1e5d4997ee70cb2347edbea6683f8922", "node_id": "C_kwDOAAsO6NoAKDMwZjQ1OGVkMWU1ZDQ5OTdlZTcwY2IyMzQ3ZWRiZWE2NjgzZjg5MjI", "commit": {"author": {"name": "ickk", "email": "git@ickk.io", "date": "2023-04-07T08:07:11Z"}, "committer": {"name": "ickk", "email": "git@ickk.io", "date": "2023-04-07T08:07:11Z"}, "message": "update tests/ui", "tree": {"sha": "79853b2fe130af11cd18b5a8e972acf78d9f697d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79853b2fe130af11cd18b5a8e972acf78d9f697d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30f458ed1e5d4997ee70cb2347edbea6683f8922", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30f458ed1e5d4997ee70cb2347edbea6683f8922", "html_url": "https://github.com/rust-lang/rust/commit/30f458ed1e5d4997ee70cb2347edbea6683f8922", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30f458ed1e5d4997ee70cb2347edbea6683f8922/comments", "author": {"login": "ickk", "id": 17050131, "node_id": "MDQ6VXNlcjE3MDUwMTMx", "avatar_url": "https://avatars.githubusercontent.com/u/17050131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ickk", "html_url": "https://github.com/ickk", "followers_url": "https://api.github.com/users/ickk/followers", "following_url": "https://api.github.com/users/ickk/following{/other_user}", "gists_url": "https://api.github.com/users/ickk/gists{/gist_id}", "starred_url": "https://api.github.com/users/ickk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ickk/subscriptions", "organizations_url": "https://api.github.com/users/ickk/orgs", "repos_url": "https://api.github.com/users/ickk/repos", "events_url": "https://api.github.com/users/ickk/events{/privacy}", "received_events_url": "https://api.github.com/users/ickk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ickk", "id": 17050131, "node_id": "MDQ6VXNlcjE3MDUwMTMx", "avatar_url": "https://avatars.githubusercontent.com/u/17050131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ickk", "html_url": "https://github.com/ickk", "followers_url": "https://api.github.com/users/ickk/followers", "following_url": "https://api.github.com/users/ickk/following{/other_user}", "gists_url": "https://api.github.com/users/ickk/gists{/gist_id}", "starred_url": "https://api.github.com/users/ickk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ickk/subscriptions", "organizations_url": "https://api.github.com/users/ickk/orgs", "repos_url": "https://api.github.com/users/ickk/repos", "events_url": "https://api.github.com/users/ickk/events{/privacy}", "received_events_url": "https://api.github.com/users/ickk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "726598ed9ad7d1566e5a6d915673a22b907c3552", "url": "https://api.github.com/repos/rust-lang/rust/commits/726598ed9ad7d1566e5a6d915673a22b907c3552", "html_url": "https://github.com/rust-lang/rust/commit/726598ed9ad7d1566e5a6d915673a22b907c3552"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "a61411d6eb6e749752da743d11eec454850d9018", "filename": "tests/ui/const-generics/defaults/doesnt_infer.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/30f458ed1e5d4997ee70cb2347edbea6683f8922/tests%2Fui%2Fconst-generics%2Fdefaults%2Fdoesnt_infer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/30f458ed1e5d4997ee70cb2347edbea6683f8922/tests%2Fui%2Fconst-generics%2Fdefaults%2Fdoesnt_infer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fdefaults%2Fdoesnt_infer.stderr?ref=30f458ed1e5d4997ee70cb2347edbea6683f8922", "patch": "@@ -4,7 +4,7 @@ error[E0282]: type annotations needed for `Foo<N>`\n LL |     let foo = Foo::foo();\n    |         ^^^\n    |\n-help: consider giving `foo` an explicit type, where the the value of const parameter `N` is specified\n+help: consider giving `foo` an explicit type, where the value of const parameter `N` is specified\n    |\n LL |     let foo: Foo<N> = Foo::foo();\n    |            ++++++++"}, {"sha": "97ed53fb3ce56a9b4f39d93f69bc2f3194bb8625", "filename": "tests/ui/inference/issue-83606.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/30f458ed1e5d4997ee70cb2347edbea6683f8922/tests%2Fui%2Finference%2Fissue-83606.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/30f458ed1e5d4997ee70cb2347edbea6683f8922/tests%2Fui%2Finference%2Fissue-83606.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finference%2Fissue-83606.stderr?ref=30f458ed1e5d4997ee70cb2347edbea6683f8922", "patch": "@@ -4,7 +4,7 @@ error[E0282]: type annotations needed for `[usize; N]`\n LL |     let _ = foo(\"foo\");\n    |         ^\n    |\n-help: consider giving this pattern a type, where the the value of const parameter `N` is specified\n+help: consider giving this pattern a type, where the value of const parameter `N` is specified\n    |\n LL |     let _: [usize; N] = foo(\"foo\");\n    |          ++++++++++++"}, {"sha": "4fd9f3030fc55ffa24c8218ac70e45b9357f2469", "filename": "tests/ui/issues/issue-98299.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/30f458ed1e5d4997ee70cb2347edbea6683f8922/tests%2Fui%2Fissues%2Fissue-98299.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/30f458ed1e5d4997ee70cb2347edbea6683f8922/tests%2Fui%2Fissues%2Fissue-98299.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-98299.stderr?ref=30f458ed1e5d4997ee70cb2347edbea6683f8922", "patch": "@@ -4,7 +4,7 @@ error[E0282]: type annotations needed for `SmallCString<N>`\n LL |     SmallCString::try_from(p).map(|cstr| cstr);\n    |                                    ^^^^\n    |\n-help: consider giving this closure parameter an explicit type, where the the value of const parameter `N` is specified\n+help: consider giving this closure parameter an explicit type, where the value of const parameter `N` is specified\n    |\n LL |     SmallCString::try_from(p).map(|cstr: SmallCString<N>| cstr);\n    |                                        +++++++++++++++++"}]}