{"sha": "106385cb9140626166a99d11451e5b4912c602c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwNjM4NWNiOTE0MDYyNjE2NmE5OWQxMTQ1MWU1YjQ5MTJjNjAyYzc=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-01-08T19:19:44Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-01-08T22:57:03Z"}, "message": "make spawned fn copy mode so that bare fns can be used", "tree": {"sha": "a76eb24b651e5770664d779b29f329d2a61b5c4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a76eb24b651e5770664d779b29f329d2a61b5c4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/106385cb9140626166a99d11451e5b4912c602c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/106385cb9140626166a99d11451e5b4912c602c7", "html_url": "https://github.com/rust-lang/rust/commit/106385cb9140626166a99d11451e5b4912c602c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/106385cb9140626166a99d11451e5b4912c602c7/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d3f892f3568d6641a39a9fabb8a44b7d0d85a25", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d3f892f3568d6641a39a9fabb8a44b7d0d85a25", "html_url": "https://github.com/rust-lang/rust/commit/7d3f892f3568d6641a39a9fabb8a44b7d0d85a25"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "4a966d91fbb349473640755e902e3ab4a695b074", "filename": "src/libcore/task.rs", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/106385cb9140626166a99d11451e5b4912c602c7/src%2Flibcore%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/106385cb9140626166a99d11451e5b4912c602c7/src%2Flibcore%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftask.rs?ref=106385cb9140626166a99d11451e5b4912c602c7", "patch": "@@ -110,7 +110,7 @@ Returns:\n \n A handle to the new task\n */\n-fn spawn(-f: sendfn()) -> task {\n+fn spawn(+f: sendfn()) -> task {\n     spawn_inner(f, none)\n }\n \n@@ -139,7 +139,7 @@ A task that sends notification upon termination\n */\n type joinable_task = (task, comm::port<task_notification>);\n \n-fn spawn_joinable(-f: sendfn()) -> joinable_task {\n+fn spawn_joinable(+f: sendfn()) -> joinable_task {\n     let notify_port = comm::port();\n     let notify_chan = comm::chan(notify_port);\n     let task = spawn_inner(f, some(notify_chan));\n@@ -189,6 +189,29 @@ tag task_notification {\n     exit(task, task_result);\n }\n \n+/*\n+type connected_fn<ToCh, FrCh> = sendfn(comm::chan<FrCh>, comm::port<ToCh>);\n+type connected_task<ToCh, FrCh> = {\n+    port: comm::port<FrCh>,\n+    chan: comm::chan<ToCh>,\n+    task: task\n+};\n+fn spawn_connected<ToCh:send, FrCh:send>(f: connected_fn<ToCh, FrCh>)\n+    -> connected_fn {\n+    let from_child_port = comm::port<FrCh>();\n+    let from_child_chan = comm::chan(from_child_port);\n+    let get_to_child_port = comm::port<comm::chan<ToCh>>();\n+    let get_to_child_chan = comm::chan(to_child_port);\n+    let child_task = spawn(sendfn[move f]() {\n+        let to_child_port = comm::port<ToCh>();\n+        comm::send(get_to_child_chan, to_child_port);\n+        f(from_child_chan, to_child_port);\n+    });\n+    let to_child_chan = comm::recv(get_out);\n+    ret {port: from_child_port, chan: to_child_chan, task: child_task};\n+}\n+*/\n+\n /* Section: Operations */\n \n /*"}, {"sha": "fe1b926160a547fed7e927dae10b82e6549a3cda", "filename": "src/test/run-fail/task-spawn-barefn.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/106385cb9140626166a99d11451e5b4912c602c7/src%2Ftest%2Frun-fail%2Ftask-spawn-barefn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/106385cb9140626166a99d11451e5b4912c602c7/src%2Ftest%2Frun-fail%2Ftask-spawn-barefn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ftask-spawn-barefn.rs?ref=106385cb9140626166a99d11451e5b4912c602c7", "patch": "@@ -0,0 +1,11 @@\n+// error-pattern:Ensure that the child task runs by failing\n+\n+fn main() {\n+    // the purpose of this test is to make sure that task::spawn()\n+    // works when provided with a bare function:\n+    task::spawn(startfn);\n+}\n+\n+fn startfn() {\n+    assert str::is_empty(\"Ensure that the child task runs by failing\");\n+}"}]}