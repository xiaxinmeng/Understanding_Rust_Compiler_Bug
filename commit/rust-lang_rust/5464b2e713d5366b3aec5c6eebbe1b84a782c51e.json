{"sha": "5464b2e713d5366b3aec5c6eebbe1b84a782c51e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0NjRiMmU3MTNkNTM2NmIzYWVjNWM2ZWViYmUxYjg0YTc4MmM1MWU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-08-30T12:36:24Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-09-02T10:29:11Z"}, "message": "Remove optimization_fuel_crate from Session", "tree": {"sha": "eb682be717041546c5bd7156d23f4b28cf748ebe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb682be717041546c5bd7156d23f4b28cf748ebe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5464b2e713d5366b3aec5c6eebbe1b84a782c51e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5464b2e713d5366b3aec5c6eebbe1b84a782c51e", "html_url": "https://github.com/rust-lang/rust/commit/5464b2e713d5366b3aec5c6eebbe1b84a782c51e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5464b2e713d5366b3aec5c6eebbe1b84a782c51e/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b27ccbc7e1e6a04d749e244a3c13f72ca38e80e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/b27ccbc7e1e6a04d749e244a3c13f72ca38e80e7", "html_url": "https://github.com/rust-lang/rust/commit/b27ccbc7e1e6a04d749e244a3c13f72ca38e80e7"}], "stats": {"total": 7, "additions": 1, "deletions": 6}, "files": [{"sha": "89fa0d6dd994c4db0800b839d561df6ed3d7e3f3", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5464b2e713d5366b3aec5c6eebbe1b84a782c51e/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5464b2e713d5366b3aec5c6eebbe1b84a782c51e/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=5464b2e713d5366b3aec5c6eebbe1b84a782c51e", "patch": "@@ -170,9 +170,6 @@ pub struct Session {\n     /// Data about code being compiled, gathered during compilation.\n     pub code_stats: CodeStats,\n \n-    /// If `-zfuel=crate=n` is specified, `Some(crate)`.\n-    optimization_fuel_crate: Option<String>,\n-\n     /// Tracks fuel info if `-zfuel=crate=n` is specified.\n     optimization_fuel: Lock<OptimizationFuel>,\n \n@@ -890,7 +887,7 @@ impl Session {\n     /// This expends fuel if applicable, and records fuel if applicable.\n     pub fn consider_optimizing<T: Fn() -> String>(&self, crate_name: &str, msg: T) -> bool {\n         let mut ret = true;\n-        if let Some(ref c) = self.optimization_fuel_crate {\n+        if let Some(c) = self.opts.debugging_opts.fuel.as_ref().map(|i| &i.0) {\n             if c == crate_name {\n                 assert_eq!(self.threads(), 1);\n                 let mut fuel = self.optimization_fuel.lock();\n@@ -1261,7 +1258,6 @@ pub fn build_session(\n     let local_crate_source_file =\n         local_crate_source_file.map(|path| file_path_mapping.map_prefix(path).0);\n \n-    let optimization_fuel_crate = sopts.debugging_opts.fuel.as_ref().map(|i| i.0.clone());\n     let optimization_fuel = Lock::new(OptimizationFuel {\n         remaining: sopts.debugging_opts.fuel.as_ref().map_or(0, |i| i.1),\n         out_of_fuel: false,\n@@ -1314,7 +1310,6 @@ pub fn build_session(\n             normalize_projection_ty: AtomicUsize::new(0),\n         },\n         code_stats: Default::default(),\n-        optimization_fuel_crate,\n         optimization_fuel,\n         print_fuel_crate,\n         print_fuel,"}]}