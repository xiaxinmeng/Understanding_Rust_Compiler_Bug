{"sha": "178b0c2e9954ede56d552f8a625ef59524ab3f60", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3OGIwYzJlOTk1NGVkZTU2ZDU1MmY4YTYyNWVmNTk1MjRhYjNmNjA=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-01T14:42:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-01T14:42:54Z"}, "message": "Rollup merge of #73805 - poliorcetics:type-keyword, r=kennytm\n\nDocument the type keyword\n\nPartial fix of #34601.\n\nTwo small examples, one clarifying that `type` only defines an alias, not a completely new type, the other explaining the use in traits.\n\n@rustbot modify labels: T-doc,C-enhancement", "tree": {"sha": "d18177c710cff2bf230a59591842769591e7bd7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d18177c710cff2bf230a59591842769591e7bd7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/178b0c2e9954ede56d552f8a625ef59524ab3f60", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe/KDvCRBK7hj4Ov3rIwAAdHIIAAl9lmpcv2DQSVvih70h9mLB\nFUilBxe2XCz4V7IjRq1NcHx4qCCoSsmTSdgzAfpWlyE9S90QZAc5yvXN+Tv9OIWa\nrK+OfBm42rSnSrTfK0QzUyfEWGlVh3FGhD66QJIcZTHJhPMEv+BMLNRLmrr7gRNv\nLE6XLOIS5t7aNucUjkhSPhCCnMyMkzvtqrxhkIoRo2v4ihOF6JHSAApxEh/mYtof\niJaVqrsmyXWWZt3qCdNDhGtaxDIyBRutQevI2trxFIUBEXk20ZgQq4OWsg4uGS3Q\n/WcR2RMSVRT1PsY8rUktB+B2Yih7+lmL+bM+4LVmPQsS+87DGR2JpbiVDdlERHs=\n=6r2f\n-----END PGP SIGNATURE-----\n", "payload": "tree d18177c710cff2bf230a59591842769591e7bd7a\nparent ec41d01d4f7c668a75eff1ba724b8a67c7ec90b4\nparent e611a3fb8423f178e856813fc1a1f2397980bd8a\nauthor Manish Goregaokar <manishsmail@gmail.com> 1593614574 -0700\ncommitter GitHub <noreply@github.com> 1593614574 -0700\n\nRollup merge of #73805 - poliorcetics:type-keyword, r=kennytm\n\nDocument the type keyword\n\nPartial fix of #34601.\n\nTwo small examples, one clarifying that `type` only defines an alias, not a completely new type, the other explaining the use in traits.\n\n@rustbot modify labels: T-doc,C-enhancement\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/178b0c2e9954ede56d552f8a625ef59524ab3f60", "html_url": "https://github.com/rust-lang/rust/commit/178b0c2e9954ede56d552f8a625ef59524ab3f60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/178b0c2e9954ede56d552f8a625ef59524ab3f60/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec41d01d4f7c668a75eff1ba724b8a67c7ec90b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec41d01d4f7c668a75eff1ba724b8a67c7ec90b4", "html_url": "https://github.com/rust-lang/rust/commit/ec41d01d4f7c668a75eff1ba724b8a67c7ec90b4"}, {"sha": "e611a3fb8423f178e856813fc1a1f2397980bd8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e611a3fb8423f178e856813fc1a1f2397980bd8a", "html_url": "https://github.com/rust-lang/rust/commit/e611a3fb8423f178e856813fc1a1f2397980bd8a"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "0b3386c05d54b35d755dac6efea756958b78c08e", "filename": "src/libstd/keyword_docs.rs", "status": "modified", "additions": 37, "deletions": 2, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/178b0c2e9954ede56d552f8a625ef59524ab3f60/src%2Flibstd%2Fkeyword_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/178b0c2e9954ede56d552f8a625ef59524ab3f60/src%2Flibstd%2Fkeyword_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fkeyword_docs.rs?ref=178b0c2e9954ede56d552f8a625ef59524ab3f60", "patch": "@@ -1536,9 +1536,44 @@ mod true_keyword {}\n //\n /// Define an alias for an existing type.\n ///\n-/// The documentation for this keyword is [not yet complete]. Pull requests welcome!\n+/// The syntax is `type Name = ExistingType;`.\n ///\n-/// [not yet complete]: https://github.com/rust-lang/rust/issues/34601\n+/// # Examples\n+///\n+/// `type` does **not** create a new type:\n+///\n+/// ```rust\n+/// type Meters = u32;\n+/// type Kilograms = u32;\n+///\n+/// let m: Meters = 3;\n+/// let k: Kilograms = 3;\n+///\n+/// assert_eq!(m, k);\n+/// ```\n+///\n+/// In traits, `type` is used to declare an [associated type]:\n+///\n+/// ```rust\n+/// trait Iterator {\n+///     // associated type declaration\n+///     type Item;\n+///     fn next(&mut self) -> Option<Self::Item>;\n+/// }\n+///\n+/// struct Once<T>(Option<T>);\n+///\n+/// impl<T> Iterator for Once<T> {\n+///     // associated type definition\n+///     type Item = T;\n+///     fn next(&mut self) -> Option<Self::Item> {\n+///         self.0.take()\n+///     }\n+/// }\n+/// ```\n+///\n+/// [`trait`]: keyword.trait.html\n+/// [associated type]: ../reference/items/associated-items.html#associated-types\n mod type_keyword {}\n \n #[doc(keyword = \"unsafe\")]"}]}