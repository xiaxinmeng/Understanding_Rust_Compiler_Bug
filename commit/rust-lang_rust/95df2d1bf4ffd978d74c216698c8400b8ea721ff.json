{"sha": "95df2d1bf4ffd978d74c216698c8400b8ea721ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1ZGYyZDFiZjRmZmQ5NzhkNzRjMjE2Njk4Yzg0MDBiOGVhNzIxZmY=", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2016-08-13T21:23:38Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2016-08-13T21:23:38Z"}, "message": "Update to rustc 1.12.0-nightly (1deb02ea6 2016-08-12)", "tree": {"sha": "eced9b0d31b49dc47988572e2df9fbfd0b79aab6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eced9b0d31b49dc47988572e2df9fbfd0b79aab6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95df2d1bf4ffd978d74c216698c8400b8ea721ff", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXr4/aAAoJEPm6FDuV/22C2m0QAINIDxwJMY7QVKaqAdt+BMOO\n/O+6UA2BPSe84nBPHqad/t6KsELYUys9KkWVi6Ltkd65A6dymIc6jXKWSopAlDRl\n4uXYToeIkHgukqO4zfOnLdBrUBlk9sw2ioU12djKwUpD3l5CmlWzbDpVQ3Tszd62\nWq2Vl/WGIDwr/9j/5Uhjc8pJIqb9BO3ruUKafGwxuTB8MeFMh/GNgX4uphoUPhn/\nqqamRZpDjELlxXtc6TwDu9wEf4ohyg44/q2UylzQa1Xg3WBpNRUS9n9syQlUuPGC\nLQzlTi6EOibC+Eo7y5tYRU/AP8vLmvMJnZp8VVmbX8f+k68LMsexl8Kshgx396qL\nSqEvfDp6WeAEeDjhGPtB1F7wrPZN9Z3tdjHx+iQMxXzMTLVBtXiTjpnEyfmwVRVP\nPeaJUkipsf8rTFOt9mWrVZC+k8tJlGbXjGYP3dR7sDkVTAjeTN/rDx2fwhF74oe6\nLoS44KaH2AT2LoR2my2oVb0oGhTiuh8/I8LMBHwnnFCsQ0qLuQ7gAA8xag0WKtPp\n4sY4YVRlDG5jpr05nqfVqMhIyhcHsY40a4HZYmk4Ic4gVHdWtKjJ2pCPye3+e9gN\nbRoKJSVDrsLxNIiuXNMvm9BbLKCIoDlOtCbP/QORfRcJfUPyan1/njW8FnCUetg2\nB4+nhSYT7f0WX11jovc5\n=rofj\n-----END PGP SIGNATURE-----", "payload": "tree eced9b0d31b49dc47988572e2df9fbfd0b79aab6\nparent 4aae2b60bc365f2502a74a8cf612b7e95a613014\nauthor David Tolnay <dtolnay@gmail.com> 1471123418 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1471123418 -0700\n\nUpdate to rustc 1.12.0-nightly (1deb02ea6 2016-08-12)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95df2d1bf4ffd978d74c216698c8400b8ea721ff", "html_url": "https://github.com/rust-lang/rust/commit/95df2d1bf4ffd978d74c216698c8400b8ea721ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95df2d1bf4ffd978d74c216698c8400b8ea721ff/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4aae2b60bc365f2502a74a8cf612b7e95a613014", "url": "https://api.github.com/repos/rust-lang/rust/commits/4aae2b60bc365f2502a74a8cf612b7e95a613014", "html_url": "https://github.com/rust-lang/rust/commit/4aae2b60bc365f2502a74a8cf612b7e95a613014"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "62174f0359599fe4835975806ab4c00ae1164fa4", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/95df2d1bf4ffd978d74c216698c8400b8ea721ff/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95df2d1bf4ffd978d74c216698c8400b8ea721ff/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=95df2d1bf4ffd978d74c216698c8400b8ea721ff", "patch": "@@ -5,7 +5,7 @@ use rustc::hir::map::Node;\n use rustc::lint::{LintContext, LateContext, Level, Lint};\n use rustc::middle::cstore;\n use rustc::session::Session;\n-use rustc::traits::ProjectionMode;\n+use rustc::traits::Reveal;\n use rustc::traits;\n use rustc::ty::subst::Subst;\n use rustc::ty;\n@@ -274,7 +274,7 @@ pub fn implements_trait<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, ty: ty::Ty<'tcx>,\n     cx.tcx.populate_implementations_for_trait_if_necessary(trait_id);\n \n     let ty = cx.tcx.erase_regions(&ty);\n-    cx.tcx.infer_ctxt(None, None, ProjectionMode::Any).enter(|infcx| {\n+    cx.tcx.infer_ctxt(None, None, Reveal::All).enter(|infcx| {\n         let obligation = cx.tcx.predicate_for_trait_def(traits::ObligationCause::dummy(),\n                                                         trait_id,\n                                                         0,\n@@ -709,7 +709,7 @@ pub fn return_ty<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, fn_item: NodeId) -> Optio\n // not for type parameters.\n pub fn same_tys<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, a: ty::Ty<'tcx>, b: ty::Ty<'tcx>, parameter_item: NodeId) -> bool {\n     let parameter_env = ty::ParameterEnvironment::for_item(cx.tcx, parameter_item);\n-    cx.tcx.infer_ctxt(None, Some(parameter_env), ProjectionMode::Any).enter(|infcx| {\n+    cx.tcx.infer_ctxt(None, Some(parameter_env), Reveal::All).enter(|infcx| {\n         let new_a = a.subst(infcx.tcx, infcx.parameter_environment.free_substs);\n         let new_b = b.subst(infcx.tcx, infcx.parameter_environment.free_substs);\n         infcx.can_equate(&new_a, &new_b).is_ok()"}]}