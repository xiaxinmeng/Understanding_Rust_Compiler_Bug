{"sha": "b3d99cb63f3125a7b7a5c7cdaa99b7561517d11b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzZDk5Y2I2M2YzMTI1YTdiN2E1YzdjZGFhOTliNzU2MTUxN2QxMWI=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-06-23T01:16:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-23T01:16:26Z"}, "message": "Rollup merge of #73600 - Aaron1011:fix/move-in-macro, r=ecstatic-morse\n\nFix spurious 'value moved here in previous iteration of loop' messages\n\nFixes #46099\n\nPreviously, we would check the 'move' and 'use' spans to see if we\nshould emit this message. However, this can give false positives when\nmacros are involved, since two distinct expressions may end up with the\nsame span.\n\nInstead, we check the actual MIR `Location`, which eliminates false\npositives.", "tree": {"sha": "fb2f3925ed6bc4f04acd83dcef22c85f2592180d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb2f3925ed6bc4f04acd83dcef22c85f2592180d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3d99cb63f3125a7b7a5c7cdaa99b7561517d11b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe8VfqCRBK7hj4Ov3rIwAAdHIIAAo0F1/OR/PjGGwj8YUhhvMb\nAyMqG8e+CkOZs/wYXECIjL7h2QNXWZY4wPm99IedRGqDxx3f44ckeg04YIvZ4dtk\nc5n3+z1BBeGAzHvG/hoZA6eUR7HGB3ahzxq2Knlxw/2PmZ7kciUJtR/JwzeKhU8D\nUVDiYPL7GwmZjouXIQOvB67qbeg8weNm58zbJ7ug5sQUPyMNBPsY2f2vQ0F1X4we\nt0pxfjPYLz35WP4YznFUEpwwK5VLHvxVxvgfQv89q+ybUUx8NWstxjrdYOAqXbYE\nskkcfR6JeIBSS0tPj1WXCkb6maO8Tdn4ihMGBQ40yDcNurJaVYPT2WphcrRqLos=\n=w1OO\n-----END PGP SIGNATURE-----\n", "payload": "tree fb2f3925ed6bc4f04acd83dcef22c85f2592180d\nparent 490d820a25a37369f67a44fecf3805560835c527\nparent 953104e60cac57929846a3c3b776f12135c4b398\nauthor Dylan DPC <dylan.dpc@gmail.com> 1592874986 +0200\ncommitter GitHub <noreply@github.com> 1592874986 +0200\n\nRollup merge of #73600 - Aaron1011:fix/move-in-macro, r=ecstatic-morse\n\nFix spurious 'value moved here in previous iteration of loop' messages\n\nFixes #46099\n\nPreviously, we would check the 'move' and 'use' spans to see if we\nshould emit this message. However, this can give false positives when\nmacros are involved, since two distinct expressions may end up with the\nsame span.\n\nInstead, we check the actual MIR `Location`, which eliminates false\npositives.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3d99cb63f3125a7b7a5c7cdaa99b7561517d11b", "html_url": "https://github.com/rust-lang/rust/commit/b3d99cb63f3125a7b7a5c7cdaa99b7561517d11b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3d99cb63f3125a7b7a5c7cdaa99b7561517d11b/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "490d820a25a37369f67a44fecf3805560835c527", "url": "https://api.github.com/repos/rust-lang/rust/commits/490d820a25a37369f67a44fecf3805560835c527", "html_url": "https://github.com/rust-lang/rust/commit/490d820a25a37369f67a44fecf3805560835c527"}, {"sha": "953104e60cac57929846a3c3b776f12135c4b398", "url": "https://api.github.com/repos/rust-lang/rust/commits/953104e60cac57929846a3c3b776f12135c4b398", "html_url": "https://github.com/rust-lang/rust/commit/953104e60cac57929846a3c3b776f12135c4b398"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "8d7944004c75e2fdf9f1366e4df35fe329ec5185", "filename": "src/librustc_mir/borrow_check/diagnostics/conflict_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3d99cb63f3125a7b7a5c7cdaa99b7561517d11b/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3d99cb63f3125a7b7a5c7cdaa99b7561517d11b/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs?ref=b3d99cb63f3125a7b7a5c7cdaa99b7561517d11b", "patch": "@@ -138,7 +138,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n \n                 let move_msg = if move_spans.for_closure() { \" into closure\" } else { \"\" };\n \n-                if span == move_span {\n+                if location == move_out.source {\n                     err.span_label(\n                         span,\n                         format!(\"value moved{} here, in previous iteration of loop\", move_msg),"}, {"sha": "576fe1f4c89052e47edd8d3977b3f2250c8d1796", "filename": "src/test/ui/moves/issue-46099-move-in-macro.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b3d99cb63f3125a7b7a5c7cdaa99b7561517d11b/src%2Ftest%2Fui%2Fmoves%2Fissue-46099-move-in-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3d99cb63f3125a7b7a5c7cdaa99b7561517d11b/src%2Ftest%2Fui%2Fmoves%2Fissue-46099-move-in-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fissue-46099-move-in-macro.rs?ref=b3d99cb63f3125a7b7a5c7cdaa99b7561517d11b", "patch": "@@ -0,0 +1,15 @@\n+// Regression test for issue #46099\n+// Tests that we don't emit spurious\n+// 'value moved in previous iteration of loop' message\n+\n+macro_rules! test {\n+    ($v:expr) => {{\n+        drop(&$v);\n+        $v\n+    }}\n+}\n+\n+fn main() {\n+    let b = Box::new(true);\n+    test!({b}); //~ ERROR use of moved value\n+}"}, {"sha": "83c99db87095179d6f7c906f12b4e6d8c3fdad41", "filename": "src/test/ui/moves/issue-46099-move-in-macro.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b3d99cb63f3125a7b7a5c7cdaa99b7561517d11b/src%2Ftest%2Fui%2Fmoves%2Fissue-46099-move-in-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b3d99cb63f3125a7b7a5c7cdaa99b7561517d11b/src%2Ftest%2Fui%2Fmoves%2Fissue-46099-move-in-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fissue-46099-move-in-macro.stderr?ref=b3d99cb63f3125a7b7a5c7cdaa99b7561517d11b", "patch": "@@ -0,0 +1,14 @@\n+error[E0382]: use of moved value: `b`\n+  --> $DIR/issue-46099-move-in-macro.rs:14:12\n+   |\n+LL |     let b = Box::new(true);\n+   |         - move occurs because `b` has type `std::boxed::Box<bool>`, which does not implement the `Copy` trait\n+LL |     test!({b});\n+   |            ^\n+   |            |\n+   |            value moved here\n+   |            value used here after move\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0382`."}, {"sha": "00d89f550714c4af313a32be92e70a0841f4e2ab", "filename": "src/test/ui/moves/move-in-guard-2.stderr", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b3d99cb63f3125a7b7a5c7cdaa99b7561517d11b/src%2Ftest%2Fui%2Fmoves%2Fmove-in-guard-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b3d99cb63f3125a7b7a5c7cdaa99b7561517d11b/src%2Ftest%2Fui%2Fmoves%2Fmove-in-guard-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fmove-in-guard-2.stderr?ref=b3d99cb63f3125a7b7a5c7cdaa99b7561517d11b", "patch": "@@ -5,7 +5,10 @@ LL |     let x: Box<_> = box 1;\n    |         - move occurs because `x` has type `std::boxed::Box<i32>`, which does not implement the `Copy` trait\n ...\n LL |         (_, 2) if take(x) => (),\n-   |                        ^ value moved here, in previous iteration of loop\n+   |                        ^\n+   |                        |\n+   |                        value moved here\n+   |                        value used here after move\n \n error: aborting due to previous error\n "}]}