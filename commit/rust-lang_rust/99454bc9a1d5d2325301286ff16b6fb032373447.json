{"sha": "99454bc9a1d5d2325301286ff16b6fb032373447", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5NDU0YmM5YTFkNWQyMzI1MzAxMjg2ZmYxNmI2ZmIwMzIzNzM0NDc=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2018-12-27T10:19:20Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2018-12-27T10:19:20Z"}, "message": "rustup https://github.com/rust-lang/rust/pull/57069", "tree": {"sha": "82966c2bf9434c46337d871d01417d5b5945306e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82966c2bf9434c46337d871d01417d5b5945306e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99454bc9a1d5d2325301286ff16b6fb032373447", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99454bc9a1d5d2325301286ff16b6fb032373447", "html_url": "https://github.com/rust-lang/rust/commit/99454bc9a1d5d2325301286ff16b6fb032373447", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99454bc9a1d5d2325301286ff16b6fb032373447/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19af82c0ad1efe243afb7aa2b69d0accb3b47c83", "url": "https://api.github.com/repos/rust-lang/rust/commits/19af82c0ad1efe243afb7aa2b69d0accb3b47c83", "html_url": "https://github.com/rust-lang/rust/commit/19af82c0ad1efe243afb7aa2b69d0accb3b47c83"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d226c6559c316f18c1e11ecf6c1ca3fb4c93cdc7", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/99454bc9a1d5d2325301286ff16b6fb032373447/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99454bc9a1d5d2325301286ff16b6fb032373447/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=99454bc9a1d5d2325301286ff16b6fb032373447", "patch": "@@ -292,7 +292,7 @@ fn check_tts<'a>(cx: &EarlyContext<'a>, tts: &ThinTokenStream, is_write: bool) -\n     };\n     let tmp = fmtstr.clone();\n     let mut args = vec![];\n-    let mut fmt_parser = Parser::new(&tmp, None);\n+    let mut fmt_parser = Parser::new(&tmp, None, Vec::new(), false);\n     while let Some(piece) = fmt_parser.next() {\n         if !fmt_parser.errors.is_empty() {\n             return (None, expr);"}]}