{"sha": "879d8f707056530b4b3054a3c089f9c21a72ee46", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3OWQ4ZjcwNzA1NjUzMGI0YjMwNTRhM2MwODlmOWMyMWE3MmVlNDY=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-05-24T09:12:33Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-05-24T18:49:38Z"}, "message": "Properly check defined bits range", "tree": {"sha": "ba1c5ab3907b54a7b939526ac6aca5c6854aa4ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba1c5ab3907b54a7b939526ac6aca5c6854aa4ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/879d8f707056530b4b3054a3c089f9c21a72ee46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/879d8f707056530b4b3054a3c089f9c21a72ee46", "html_url": "https://github.com/rust-lang/rust/commit/879d8f707056530b4b3054a3c089f9c21a72ee46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/879d8f707056530b4b3054a3c089f9c21a72ee46/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfd5fb51027b4baa854242e1c941a48e4e850e47", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfd5fb51027b4baa854242e1c941a48e4e850e47", "html_url": "https://github.com/rust-lang/rust/commit/cfd5fb51027b4baa854242e1c941a48e4e850e47"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "4305d6dd7c54da0fefb46723cb05f5a2d616d352", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/879d8f707056530b4b3054a3c089f9c21a72ee46/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/879d8f707056530b4b3054a3c089f9c21a72ee46/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=879d8f707056530b4b3054a3c089f9c21a72ee46", "patch": "@@ -233,7 +233,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> Memory<'a, 'mir, 'tcx, M> {\n                 (ptr.offset.bytes(), alloc.align)\n             }\n             Scalar::Bits { bits, defined } => {\n-                if defined <= self.pointer_size().bits() as u8 {\n+                if (defined as u64) < self.pointer_size().bits() {\n                     return err!(ReadUndefBytes);\n                 }\n                 // FIXME: what on earth does this line do? docs or fix needed!\n@@ -750,7 +750,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> Memory<'a, 'mir, 'tcx, M> {\n                 val.offset.bytes() as u128\n             }\n \n-            Scalar::Bits { bits, defined } if defined >= size.bits() as u8 && defined != 0 => bits,\n+            Scalar::Bits { bits, defined } if defined as u64 >= size.bits() && size.bits() != 0 => bits,\n \n             Scalar::Bits { .. } => {\n                 self.check_align(ptr.into(), ptr_align)?;"}]}