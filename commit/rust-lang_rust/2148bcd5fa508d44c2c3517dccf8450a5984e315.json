{"sha": "2148bcd5fa508d44c2c3517dccf8450a5984e315", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxNDhiY2Q1ZmE1MDhkNDRjMmMzNTE3ZGNjZjg0NTBhNTk4NGUzMTU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-01-07T03:41:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-01-07T03:41:00Z"}, "message": "Auto merge of #47157 - malbarbo:shared-build-musl, r=alexcrichton\n\nci: use a shared script to build musl\n\nThe dist-x86_64-musl, dist-various-1 and dist-i586-gnu-i686-musl builders had different scripts to build musl. This PR creates an unified script, which makes it easier to add new musl targets and update musl and libunwind (used in the musl targets).\n\nThe libunwind is update from 3.7 to 3.9 for dist-x86_64-musl and dist-i586-gnu-i686-musl (dist-various-1 already used 3.9 version).", "tree": {"sha": "41eaa48c2092ff13159f7ac2f04072f3b0c5cb28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41eaa48c2092ff13159f7ac2f04072f3b0c5cb28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2148bcd5fa508d44c2c3517dccf8450a5984e315", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2148bcd5fa508d44c2c3517dccf8450a5984e315", "html_url": "https://github.com/rust-lang/rust/commit/2148bcd5fa508d44c2c3517dccf8450a5984e315", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2148bcd5fa508d44c2c3517dccf8450a5984e315/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a704583d43dda19c2542845d8efd61bd4e1d82f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a704583d43dda19c2542845d8efd61bd4e1d82f1", "html_url": "https://github.com/rust-lang/rust/commit/a704583d43dda19c2542845d8efd61bd4e1d82f1"}, {"sha": "00b54130874b6a6541626b9b023948440fe11141", "url": "https://api.github.com/repos/rust-lang/rust/commits/00b54130874b6a6541626b9b023948440fe11141", "html_url": "https://github.com/rust-lang/rust/commit/00b54130874b6a6541626b9b023948440fe11141"}], "stats": {"total": 416, "additions": 144, "deletions": 272}, "files": [{"sha": "c59476fab009cf7ca4707622d54ab207fccc8297", "filename": "src/ci/docker/dist-i586-gnu-i686-musl/Dockerfile", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2148bcd5fa508d44c2c3517dccf8450a5984e315/src%2Fci%2Fdocker%2Fdist-i586-gnu-i686-musl%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/2148bcd5fa508d44c2c3517dccf8450a5984e315/src%2Fci%2Fdocker%2Fdist-i586-gnu-i686-musl%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i586-gnu-i686-musl%2FDockerfile?ref=2148bcd5fa508d44c2c3517dccf8450a5984e315", "patch": "@@ -17,8 +17,11 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   pkg-config\n \n WORKDIR /build/\n-COPY dist-i586-gnu-i686-musl/musl-libunwind-patch.patch dist-i586-gnu-i686-musl/build-musl.sh /build/\n-RUN sh /build/build-musl.sh && rm -rf /build\n+COPY scripts/musl.sh /build/\n+RUN CC=gcc CFLAGS=\"-m32 -fPIC -Wa,-mrelax-relocations=no\" \\\n+    CXX=g++ CXXFLAGS=\"-m32 -Wa,-mrelax-relocations=no\" \\\n+    bash musl.sh i686 --target=i686 && \\\n+    rm -rf /build\n \n COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh"}, {"sha": "883859d1fa64e89cd09c9c5917255589fd8926c0", "filename": "src/ci/docker/dist-i586-gnu-i686-musl/build-musl.sh", "status": "removed", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/a704583d43dda19c2542845d8efd61bd4e1d82f1/src%2Fci%2Fdocker%2Fdist-i586-gnu-i686-musl%2Fbuild-musl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/a704583d43dda19c2542845d8efd61bd4e1d82f1/src%2Fci%2Fdocker%2Fdist-i586-gnu-i686-musl%2Fbuild-musl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i586-gnu-i686-musl%2Fbuild-musl.sh?ref=a704583d43dda19c2542845d8efd61bd4e1d82f1", "patch": "@@ -1,55 +0,0 @@\n-#!/bin/sh\n-# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-set -ex\n-\n-# We need to mitigate rust-lang/rust#34978 when compiling musl itself as well\n-export CFLAGS=\"-fPIC -Wa,-mrelax-relocations=no\"\n-export CXXFLAGS=\"-Wa,-mrelax-relocations=no\"\n-\n-MUSL=musl-1.1.17\n-curl https://www.musl-libc.org/releases/$MUSL.tar.gz | tar xzf -\n-cd $MUSL\n-CC=gcc \\\n-  CFLAGS=\"$CFLAGS -m32\" \\\n-  ./configure --prefix=/musl-i686 --disable-shared \\\n-    --target=i686\n-make AR=ar RANLIB=ranlib -j10\n-make install\n-cd ..\n-\n-# To build MUSL we're going to need a libunwind lying around, so acquire that\n-# here and build it.\n-curl -L https://github.com/llvm-mirror/llvm/archive/release_37.tar.gz | tar xzf -\n-curl -L https://github.com/llvm-mirror/libunwind/archive/release_37.tar.gz | tar xzf -\n-\n-# Whoa what's this mysterious patch we're applying to libunwind! Why are we\n-# swapping the values of ESP/EBP in libunwind?!\n-#\n-# Discovered in #35599 it turns out that the vanilla build of libunwind is not\n-# suitable for unwinding 32-bit musl. After some investigation it ended up\n-# looking like the register values for ESP/EBP were indeed incorrect (swapped)\n-# in the source. Similar commits in libunwind (r280099 and r282589) have noticed\n-# this for other platforms, and we just need to realize it for musl linux as\n-# well.\n-#\n-# More technical info can be found at #35599\n-cd libunwind-release_37\n-patch -Np1 < /build/musl-libunwind-patch.patch\n-cd ..\n-\n-mkdir libunwind-build\n-cd libunwind-build\n-CFLAGS=\"$CFLAGS -m32\" CXXFLAGS=\"$CXXFLAGS -m32\" cmake ../libunwind-release_37 \\\n-          -DLLVM_PATH=/build/llvm-release_37 \\\n-          -DLIBUNWIND_ENABLE_SHARED=0\n-make -j10\n-cp lib/libunwind.a /musl-i686/lib"}, {"sha": "99cd685b72d1718aaf6933da48fec15b21c91591", "filename": "src/ci/docker/dist-i586-gnu-i686-musl/musl-libunwind-patch.patch", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a704583d43dda19c2542845d8efd61bd4e1d82f1/src%2Fci%2Fdocker%2Fdist-i586-gnu-i686-musl%2Fmusl-libunwind-patch.patch", "raw_url": "https://github.com/rust-lang/rust/raw/a704583d43dda19c2542845d8efd61bd4e1d82f1/src%2Fci%2Fdocker%2Fdist-i586-gnu-i686-musl%2Fmusl-libunwind-patch.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i586-gnu-i686-musl%2Fmusl-libunwind-patch.patch?ref=a704583d43dda19c2542845d8efd61bd4e1d82f1", "patch": "@@ -1,15 +0,0 @@\n-diff --git a/include/libunwind.h b/include/libunwind.h\n-index c5b9633..1360eb2 100644\n---- a/include/libunwind.h\n-+++ b/include/libunwind.h\n-@@ -151,8 +151,8 @@ enum {\n-   UNW_X86_ECX = 1,\n-   UNW_X86_EDX = 2,\n-   UNW_X86_EBX = 3,\n--  UNW_X86_EBP = 4,\n--  UNW_X86_ESP = 5,\n-+  UNW_X86_ESP = 4,\n-+  UNW_X86_EBP = 5,\n-   UNW_X86_ESI = 6,\n-   UNW_X86_EDI = 7\n- };"}, {"sha": "0f08bcddd388fe28c0785ed1f4d01f432d91674e", "filename": "src/ci/docker/dist-various-1/Dockerfile", "status": "modified", "additions": 29, "deletions": 13, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/2148bcd5fa508d44c2c3517dccf8450a5984e315/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/2148bcd5fa508d44c2c3517dccf8450a5984e315/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile?ref=2148bcd5fa508d44c2c3517dccf8450a5984e315", "patch": "@@ -22,23 +22,39 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   libssl-dev \\\n   pkg-config\n \n-WORKDIR /tmp\n+WORKDIR /build\n \n-COPY dist-various-1/build-rumprun.sh /tmp/\n+COPY dist-various-1/build-rumprun.sh /build\n RUN ./build-rumprun.sh\n \n-COPY dist-various-1/build-arm-musl.sh /tmp/\n-RUN ./build-arm-musl.sh\n+COPY dist-various-1/install-x86_64-redox.sh /build\n+RUN ./install-x86_64-redox.sh\n+\n+COPY scripts/musl.sh /build\n+RUN env \\\n+    CC=arm-linux-gnueabi-gcc CFLAGS=\"-march=armv6 -marm\" \\\n+    CXX=arm-linux-gnueabi-g++ CXXFLAGS=\"-march=armv6 -marm\" \\\n+    bash musl.sh arm && \\\n+    env \\\n+    CC=arm-linux-gnueabihf-gcc CFLAGS=\"-march=armv6 -marm\" \\\n+    CXX=arm-linux-gnueabihf-g++ CXXFLAGS=\"-march=armv6 -marm\" \\\n+    bash musl.sh armhf && \\\n+    env \\\n+    CC=arm-linux-gnueabihf-gcc CFLAGS=\"-march=armv7-a\" \\\n+    CXX=arm-linux-gnueabihf-g++ CXXFLAGS=\"-march=armv7-a\" \\\n+    bash musl.sh armv7 && \\\n+    env \\\n+    CC=aarch64-linux-gnu-gcc \\\n+    CXX=aarch64-linux-gnu-g++ \\\n+    bash musl.sh aarch64 && \\\n+    rm -rf /build/*\n \n-COPY dist-various-1/install-mips-musl.sh /tmp/\n+COPY dist-various-1/install-mips-musl.sh /build\n RUN ./install-mips-musl.sh\n \n-COPY dist-various-1/install-mipsel-musl.sh /tmp/\n+COPY dist-various-1/install-mipsel-musl.sh /build\n RUN ./install-mipsel-musl.sh\n \n-COPY dist-various-1/install-x86_64-redox.sh /tmp/\n-RUN ./install-x86_64-redox.sh\n-\n ENV TARGETS=asmjs-unknown-emscripten\n ENV TARGETS=$TARGETS,wasm32-unknown-emscripten\n ENV TARGETS=$TARGETS,x86_64-rumprun-netbsd\n@@ -67,10 +83,10 @@ ENV STAGING_DIR=/tmp\n ENV RUST_CONFIGURE_ARGS \\\n       --enable-extended \\\n       --target=$TARGETS \\\n-      --musl-root-arm=/usr/local/arm-linux-musleabi \\\n-      --musl-root-armhf=/usr/local/arm-linux-musleabihf \\\n-      --musl-root-armv7=/usr/local/armv7-linux-musleabihf \\\n-      --musl-root-aarch64=/usr/local/aarch64-linux-musl\n+      --musl-root-arm=/musl-arm \\\n+      --musl-root-armhf=/musl-armhf \\\n+      --musl-root-armv7=/musl-armv7 \\\n+      --musl-root-aarch64=/musl-aarch64\n ENV SCRIPT python2.7 ../x.py dist --target $TARGETS\n \n # sccache"}, {"sha": "f9444a35a8b7918225c6dff98f0540790e9d5c5a", "filename": "src/ci/docker/dist-various-1/build-arm-musl.sh", "status": "removed", "additions": 0, "deletions": 147, "changes": 147, "blob_url": "https://github.com/rust-lang/rust/blob/a704583d43dda19c2542845d8efd61bd4e1d82f1/src%2Fci%2Fdocker%2Fdist-various-1%2Fbuild-arm-musl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/a704583d43dda19c2542845d8efd61bd4e1d82f1/src%2Fci%2Fdocker%2Fdist-various-1%2Fbuild-arm-musl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-1%2Fbuild-arm-musl.sh?ref=a704583d43dda19c2542845d8efd61bd4e1d82f1", "patch": "@@ -1,147 +0,0 @@\n-#!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-set -ex\n-\n-MUSL=1.1.17\n-\n-hide_output() {\n-  set +x\n-  on_err=\"\n-echo ERROR: An error was encountered with the build.\n-cat /tmp/build.log\n-exit 1\n-\"\n-  trap \"$on_err\" ERR\n-  bash -c \"while true; do sleep 30; echo \\$(date) - building ...; done\" &\n-  PING_LOOP_PID=$!\n-  $@ &> /tmp/build.log\n-  trap - ERR\n-  kill $PING_LOOP_PID\n-  rm /tmp/build.log\n-  set -x\n-}\n-\n-curl -O https://www.musl-libc.org/releases/musl-$MUSL.tar.gz\n-tar xf musl-$MUSL.tar.gz\n-cd musl-$MUSL\n-CC=arm-linux-gnueabi-gcc \\\n-CFLAGS=\"-march=armv6 -marm\" \\\n-    hide_output ./configure \\\n-        --prefix=/usr/local/arm-linux-musleabi \\\n-        --enable-wrapper=gcc\n-hide_output make -j$(nproc)\n-hide_output make install\n-cd ..\n-rm -rf musl-$MUSL\n-\n-tar xf musl-$MUSL.tar.gz\n-cd musl-$MUSL\n-CC=arm-linux-gnueabihf-gcc \\\n-CFLAGS=\"-march=armv6 -marm\" \\\n-    hide_output ./configure \\\n-        --prefix=/usr/local/arm-linux-musleabihf \\\n-        --enable-wrapper=gcc\n-hide_output make -j$(nproc)\n-hide_output make install\n-cd ..\n-rm -rf musl-$MUSL\n-\n-tar xf musl-$MUSL.tar.gz\n-cd musl-$MUSL\n-CC=arm-linux-gnueabihf-gcc \\\n-CFLAGS=\"-march=armv7-a\" \\\n-    hide_output ./configure \\\n-        --prefix=/usr/local/armv7-linux-musleabihf \\\n-        --enable-wrapper=gcc\n-hide_output make -j$(nproc)\n-hide_output make install\n-cd ..\n-rm -rf musl-$MUSL\n-\n-tar xf musl-$MUSL.tar.gz\n-cd musl-$MUSL\n-CC=aarch64-linux-gnu-gcc \\\n-CFLAGS=\"\" \\\n-    hide_output ./configure \\\n-        --prefix=/usr/local/aarch64-linux-musl \\\n-        --enable-wrapper=gcc\n-hide_output make -j$(nproc)\n-hide_output make install\n-cd ..\n-rm -rf musl-$MUSL*\n-\n-ln -nsf ../arm-linux-musleabi/bin/musl-gcc /usr/local/bin/arm-linux-musleabi-gcc\n-ln -nsf ../arm-linux-musleabihf/bin/musl-gcc /usr/local/bin/arm-linux-musleabihf-gcc\n-ln -nsf ../armv7-linux-musleabihf/bin/musl-gcc /usr/local/bin/armv7-linux-musleabihf-gcc\n-ln -nsf ../aarch64-linux-musl/bin/musl-gcc /usr/local/bin/aarch64-unknown-linux-musl-gcc\n-\n-curl -L https://github.com/llvm-mirror/llvm/archive/release_39.tar.gz | tar xzf -\n-curl -L https://github.com/llvm-mirror/libunwind/archive/release_39.tar.gz | tar xzf -\n-\n-mkdir libunwind-build\n-cd libunwind-build\n-cmake ../libunwind-release_39 \\\n-          -DLLVM_PATH=/tmp/llvm-release_39 \\\n-          -DLIBUNWIND_ENABLE_SHARED=0 \\\n-          -DCMAKE_C_COMPILER=arm-linux-gnueabi-gcc \\\n-          -DCMAKE_CXX_COMPILER=arm-linux-gnueabi-g++ \\\n-          -DCMAKE_C_FLAGS=\"-march=armv6 -marm\" \\\n-          -DCMAKE_CXX_FLAGS=\"-march=armv6 -marm\"\n-make -j$(nproc)\n-cp lib/libunwind.a /usr/local/arm-linux-musleabi/lib\n-cd ..\n-rm -rf libunwind-build\n-\n-mkdir libunwind-build\n-cd libunwind-build\n-cmake ../libunwind-release_39 \\\n-          -DLLVM_PATH=/tmp/llvm-release_39 \\\n-          -DLIBUNWIND_ENABLE_SHARED=0 \\\n-          -DCMAKE_C_COMPILER=arm-linux-gnueabihf-gcc \\\n-          -DCMAKE_CXX_COMPILER=arm-linux-gnueabihf-g++ \\\n-          -DCMAKE_C_FLAGS=\"-march=armv6 -marm\" \\\n-          -DCMAKE_CXX_FLAGS=\"-march=armv6 -marm\"\n-make -j$(nproc)\n-cp lib/libunwind.a /usr/local/arm-linux-musleabihf/lib\n-cd ..\n-rm -rf libunwind-build\n-\n-mkdir libunwind-build\n-cd libunwind-build\n-cmake ../libunwind-release_39 \\\n-          -DLLVM_PATH=/tmp/llvm-release_39 \\\n-          -DLIBUNWIND_ENABLE_SHARED=0 \\\n-          -DCMAKE_C_COMPILER=arm-linux-gnueabihf-gcc \\\n-          -DCMAKE_CXX_COMPILER=arm-linux-gnueabihf-g++ \\\n-          -DCMAKE_C_FLAGS=\"-march=armv7-a\" \\\n-          -DCMAKE_CXX_FLAGS=\"-march=armv7-a\"\n-make -j$(nproc)\n-cp lib/libunwind.a /usr/local/armv7-linux-musleabihf/lib\n-cd ..\n-rm -rf libunwind-build\n-\n-mkdir libunwind-build\n-cd libunwind-build\n-cmake ../libunwind-release_39 \\\n-          -DLLVM_PATH=/tmp/llvm-release_39 \\\n-          -DLIBUNWIND_ENABLE_SHARED=0 \\\n-          -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc \\\n-          -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ \\\n-          -DCMAKE_C_FLAGS=\"\" \\\n-          -DCMAKE_CXX_FLAGS=\"\"\n-make -j$(nproc)\n-cp lib/libunwind.a /usr/local/aarch64-linux-musl/lib\n-cd ..\n-rm -rf libunwind-build\n-\n-rm -rf libunwind-release_39\n-rm -rf llvm-release_39"}, {"sha": "77a55b33e41b25963c1af3ba11bc84b7d7dde672", "filename": "src/ci/docker/dist-x86_64-musl/Dockerfile", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2148bcd5fa508d44c2c3517dccf8450a5984e315/src%2Fci%2Fdocker%2Fdist-x86_64-musl%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/2148bcd5fa508d44c2c3517dccf8450a5984e315/src%2Fci%2Fdocker%2Fdist-x86_64-musl%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-musl%2FDockerfile?ref=2148bcd5fa508d44c2c3517dccf8450a5984e315", "patch": "@@ -17,8 +17,14 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   pkg-config\n \n WORKDIR /build/\n-COPY dist-x86_64-musl/build-musl.sh /build/\n-RUN sh /build/build-musl.sh && rm -rf /build\n+\n+COPY scripts/musl.sh /build/\n+# We need to mitigate rust-lang/rust#34978 when compiling musl itself as well\n+RUN CC=gcc \\\n+    CFLAGS=\"-fPIC -Wa,-mrelax-relocations=no\" \\\n+    CXX=g++ \\\n+    CXXFLAGS=\"-Wa,-mrelax-relocations=no\" \\\n+    bash musl.sh x86_64 && rm -rf /build\n \n COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh"}, {"sha": "9be8d001149e9d10788ab6c416cedfa0d2cd010a", "filename": "src/ci/docker/dist-x86_64-musl/build-musl.sh", "status": "removed", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/a704583d43dda19c2542845d8efd61bd4e1d82f1/src%2Fci%2Fdocker%2Fdist-x86_64-musl%2Fbuild-musl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/a704583d43dda19c2542845d8efd61bd4e1d82f1/src%2Fci%2Fdocker%2Fdist-x86_64-musl%2Fbuild-musl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-musl%2Fbuild-musl.sh?ref=a704583d43dda19c2542845d8efd61bd4e1d82f1", "patch": "@@ -1,38 +0,0 @@\n-#!/bin/sh\n-# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-set -ex\n-\n-# We need to mitigate rust-lang/rust#34978 when compiling musl itself as well\n-export CFLAGS=\"-fPIC -Wa,-mrelax-relocations=no\"\n-export CXXFLAGS=\"-Wa,-mrelax-relocations=no\"\n-\n-MUSL=musl-1.1.17\n-curl https://www.musl-libc.org/releases/$MUSL.tar.gz | tar xzf -\n-cd $MUSL\n-./configure --prefix=/musl-x86_64 --disable-shared\n-make -j10\n-make install\n-\n-cd ..\n-rm -rf $MUSL\n-\n-# To build MUSL we're going to need a libunwind lying around, so acquire that\n-# here and build it.\n-curl -L https://github.com/llvm-mirror/llvm/archive/release_37.tar.gz | tar xzf -\n-curl -L https://github.com/llvm-mirror/libunwind/archive/release_37.tar.gz | tar xzf -\n-\n-mkdir libunwind-build\n-cd libunwind-build\n-cmake ../libunwind-release_37 -DLLVM_PATH=/build/llvm-release_37 \\\n-          -DLIBUNWIND_ENABLE_SHARED=0\n-make -j10\n-cp lib/libunwind.a /musl-x86_64/lib"}, {"sha": "b704e37d5929128be514f929b39bd0db551c5334", "filename": "src/ci/docker/scripts/musl.sh", "status": "added", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/2148bcd5fa508d44c2c3517dccf8450a5984e315/src%2Fci%2Fdocker%2Fscripts%2Fmusl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2148bcd5fa508d44c2c3517dccf8450a5984e315/src%2Fci%2Fdocker%2Fscripts%2Fmusl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Fmusl.sh?ref=2148bcd5fa508d44c2c3517dccf8450a5984e315", "patch": "@@ -0,0 +1,102 @@\n+# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+\n+hide_output() {\n+  set +x\n+  on_err=\"\n+echo ERROR: An error was encountered with the build.\n+cat /tmp/build.log\n+exit 1\n+\"\n+  trap \"$on_err\" ERR\n+  bash -c \"while true; do sleep 30; echo \\$(date) - building ...; done\" &\n+  PING_LOOP_PID=$!\n+  $@ &> /tmp/build.log\n+  trap - ERR\n+  kill $PING_LOOP_PID\n+  rm /tmp/build.log\n+  set -x\n+}\n+\n+TAG=$1\n+shift\n+\n+MUSL=musl-1.1.17\n+\n+# may have been downloaded in a previous run\n+if [ ! -d $MUSL ]; then\n+  curl https://www.musl-libc.org/releases/$MUSL.tar.gz | tar xzf -\n+fi\n+\n+cd $MUSL\n+./configure --disable-shared --prefix=/musl-$TAG $@\n+if [ \"$TAG\" = \"i686\" ]; then\n+  hide_output make -j$(nproc) AR=ar RANLIB=ranlib\n+else\n+  hide_output make -j$(nproc)\n+fi\n+hide_output make install\n+hide_output make clean\n+\n+cd ..\n+\n+LLVM=39\n+# may have been downloaded in a previous run\n+if [ ! -d libunwind-release_$LLVM ]; then\n+  curl -L https://github.com/llvm-mirror/llvm/archive/release_$LLVM.tar.gz | tar xzf -\n+  curl -L https://github.com/llvm-mirror/libunwind/archive/release_$LLVM.tar.gz | tar xzf -\n+  # Whoa what's this mysterious patch we're applying to libunwind! Why are we\n+  # swapping the values of ESP/EBP in libunwind?!\n+  #\n+  # Discovered in #35599 it turns out that the vanilla build of libunwind is not\n+  # suitable for unwinding i686 musl. After some investigation it ended up\n+  # looking like the register values for ESP/EBP were indeed incorrect (swapped)\n+  # in the source. Similar commits in libunwind (r280099 and r282589) have noticed\n+  # this for other platforms, and we just need to realize it for musl linux as\n+  # well.\n+  #\n+  # More technical info can be found at #35599\n+  cd libunwind-release_$LLVM\n+  patch -Np1 << EOF\n+diff --git a/include/libunwind.h b/include/libunwind.h\n+index c5b9633..1360eb2 100644\n+--- a/include/libunwind.h\n++++ b/include/libunwind.h\n+@@ -151,8 +151,8 @@ enum {\n+   UNW_X86_ECX = 1,\n+   UNW_X86_EDX = 2,\n+   UNW_X86_EBX = 3,\n+-  UNW_X86_EBP = 4,\n+-  UNW_X86_ESP = 5,\n++  UNW_X86_ESP = 4,\n++  UNW_X86_EBP = 5,\n+   UNW_X86_ESI = 6,\n+   UNW_X86_EDI = 7\n+ };\n+fi\n+EOF\n+  cd ..\n+fi\n+\n+mkdir libunwind-build\n+cd libunwind-build\n+cmake ../libunwind-release_$LLVM \\\n+          -DLLVM_PATH=/build/llvm-release_$LLVM \\\n+          -DLIBUNWIND_ENABLE_SHARED=0 \\\n+          -DCMAKE_C_COMPILER=$CC \\\n+          -DCMAKE_CXX_COMPILER=$CXX \\\n+          -DCMAKE_C_FLAGS=\"$CFLAGS\" \\\n+          -DCMAKE_CXX_FLAGS=\"$CXXFLAGS\"\n+\n+hide_output make -j$(nproc)\n+cp lib/libunwind.a /musl-$TAG/lib\n+cd ../ && rm -rf libunwind-build"}]}