{"sha": "6b8cd40d07ce0cb52891b419ee2b6574caf1e70f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiOGNkNDBkMDdjZTBjYjUyODkxYjQxOWVlMmI2NTc0Y2FmMWU3MGY=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-13T02:07:09Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-13T02:07:09Z"}, "message": "Format where clause on unit struct", "tree": {"sha": "34d6829d9c6944d9589a8bd6d19b6efac65a180f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34d6829d9c6944d9589a8bd6d19b6efac65a180f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b8cd40d07ce0cb52891b419ee2b6574caf1e70f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b8cd40d07ce0cb52891b419ee2b6574caf1e70f", "html_url": "https://github.com/rust-lang/rust/commit/6b8cd40d07ce0cb52891b419ee2b6574caf1e70f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b8cd40d07ce0cb52891b419ee2b6574caf1e70f/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "687b26c688a2d4b05c753923db187e31cdcd057f", "url": "https://api.github.com/repos/rust-lang/rust/commits/687b26c688a2d4b05c753923db187e31cdcd057f", "html_url": "https://github.com/rust-lang/rust/commit/687b26c688a2d4b05c753923db187e31cdcd057f"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "de0dc763e1be42739b0db669698eca4b6e9603be", "filename": "src/items.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6b8cd40d07ce0cb52891b419ee2b6574caf1e70f/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b8cd40d07ce0cb52891b419ee2b6574caf1e70f/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=6b8cd40d07ce0cb52891b419ee2b6574caf1e70f", "patch": "@@ -1095,8 +1095,20 @@ pub fn format_trait(context: &RewriteContext, item: &ast::Item, offset: Indent)\n fn format_unit_struct(context: &RewriteContext, p: &StructParts, offset: Indent) -> Option<String> {\n     let header_str = format_header(p.prefix, p.ident, p.vis);\n     let generics_str = if let Some(generics) = p.generics {\n-        let shape = Shape::indented(offset, context.config).offset_left(header_str.len())?;\n-        rewrite_generics(context, generics, shape, generics.span)?\n+        let hi = if generics.where_clause.predicates.is_empty() {\n+            generics.span.hi()\n+        } else {\n+            generics.where_clause.span.hi()\n+        };\n+        format_generics(\n+            context,\n+            generics,\n+            context.config.item_brace_style(),\n+            BracePos::None,\n+            offset,\n+            mk_sp(generics.span.lo(), hi),\n+            last_line_width(&header_str),\n+        )?\n     } else {\n         String::new()\n     };"}]}