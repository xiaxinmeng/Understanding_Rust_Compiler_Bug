{"sha": "439597bc1b3cbf6c8ceec7c81ae0143baee2c329", "node_id": "C_kwDOAAsO6NoAKDQzOTU5N2JjMWIzY2JmNmM4Y2VlYzdjODFhZTAxNDNiYWVlMmMzMjk", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-09-25T14:23:33Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-09-25T14:23:33Z"}, "message": "Support overriding initial rustc and cargo paths\n\nThis restores functionality broken by #98483. Unfortunately, it doesn't\nadd a test to verify this works, but in this case we notice pretty\nquickly as perf uses this functionality and so reports breakage\nimmediately after merging.", "tree": {"sha": "574c3ef4eb342c6dfc0451af23e1a266fee1f858", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/574c3ef4eb342c6dfc0451af23e1a266fee1f858"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/439597bc1b3cbf6c8ceec7c81ae0143baee2c329", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/439597bc1b3cbf6c8ceec7c81ae0143baee2c329", "html_url": "https://github.com/rust-lang/rust/commit/439597bc1b3cbf6c8ceec7c81ae0143baee2c329", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/439597bc1b3cbf6c8ceec7c81ae0143baee2c329/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f6010b08bd5e5dd0d03d4abf35a3acc4d2433a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f6010b08bd5e5dd0d03d4abf35a3acc4d2433a2", "html_url": "https://github.com/rust-lang/rust/commit/6f6010b08bd5e5dd0d03d4abf35a3acc4d2433a2"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "74530dec97b7065ad3125eeb403a82c54be72ff5", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/439597bc1b3cbf6c8ceec7c81ae0143baee2c329/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439597bc1b3cbf6c8ceec7c81ae0143baee2c329/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=439597bc1b3cbf6c8ceec7c81ae0143baee2c329", "patch": "@@ -901,9 +901,7 @@ impl Config {\n         config.config = toml_path;\n \n         let build = toml.build.unwrap_or_default();\n-        let has_custom_rustc = build.rustc.is_some();\n \n-        set(&mut config.initial_rustc, build.rustc.map(PathBuf::from));\n         set(&mut config.out, flags.build_dir.or_else(|| build.build_dir.map(PathBuf::from)));\n         // NOTE: Bootstrap spawns various commands with different working directories.\n         // To avoid writing to random places on the file system, `config.out` needs to be an absolute path.\n@@ -912,10 +910,14 @@ impl Config {\n             config.out = crate::util::absolute(&config.out);\n         }\n \n-        if !has_custom_rustc && !config.initial_rustc.starts_with(&config.out) {\n-            config.initial_rustc = config.out.join(config.build.triple).join(\"stage0/bin/rustc\");\n-            config.initial_cargo = config.out.join(config.build.triple).join(\"stage0/bin/cargo\");\n-        }\n+        config.initial_rustc = build\n+            .rustc\n+            .map(PathBuf::from)\n+            .unwrap_or_else(|| config.out.join(config.build.triple).join(\"stage0/bin/rustc\"));\n+        config.initial_cargo = build\n+            .cargo\n+            .map(PathBuf::from)\n+            .unwrap_or_else(|| config.out.join(config.build.triple).join(\"stage0/bin/cargo\"));\n \n         // NOTE: it's important this comes *after* we set `initial_rustc` just above.\n         if config.dry_run {"}]}