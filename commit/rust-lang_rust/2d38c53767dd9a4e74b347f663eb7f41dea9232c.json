{"sha": "2d38c53767dd9a4e74b347f663eb7f41dea9232c", "node_id": "C_kwDOAAsO6NoAKDJkMzhjNTM3NjdkZDlhNGU3NGIzNDdmNjYzZWI3ZjQxZGVhOTIzMmM", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-09-29T17:47:55Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-10-03T14:08:52Z"}, "message": "Remove StableHashProvider.", "tree": {"sha": "f7cb884863735212bb8e3a29beffa794d12d61e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7cb884863735212bb8e3a29beffa794d12d61e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d38c53767dd9a4e74b347f663eb7f41dea9232c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d38c53767dd9a4e74b347f663eb7f41dea9232c", "html_url": "https://github.com/rust-lang/rust/commit/2d38c53767dd9a4e74b347f663eb7f41dea9232c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d38c53767dd9a4e74b347f663eb7f41dea9232c/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8961616e6004e204327f575081509b049268762b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8961616e6004e204327f575081509b049268762b", "html_url": "https://github.com/rust-lang/rust/commit/8961616e6004e204327f575081509b049268762b"}], "stats": {"total": 32, "additions": 1, "deletions": 31}, "files": [{"sha": "98dcd62f795c0d4e6042daf61a9bdf5f6851c8bc", "filename": "compiler/rustc_middle/src/ich/hcx.rs", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/2d38c53767dd9a4e74b347f663eb7f41dea9232c/compiler%2Frustc_middle%2Fsrc%2Fich%2Fhcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d38c53767dd9a4e74b347f663eb7f41dea9232c/compiler%2Frustc_middle%2Fsrc%2Fich%2Fhcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fich%2Fhcx.rs?ref=2d38c53767dd9a4e74b347f663eb7f41dea9232c", "patch": "@@ -1,5 +1,4 @@\n use crate::ich;\n-use crate::ty::TyCtxt;\n use rustc_ast as ast;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n@@ -178,35 +177,6 @@ impl<'a> StableHashingContext<'a> {\n     }\n }\n \n-/// Something that can provide a stable hashing context.\n-pub trait StableHashingContextProvider<'a> {\n-    fn get_stable_hashing_context(&self) -> StableHashingContext<'a>;\n-}\n-\n-impl<'a, 'b, T: StableHashingContextProvider<'a>> StableHashingContextProvider<'a> for &'b T {\n-    fn get_stable_hashing_context(&self) -> StableHashingContext<'a> {\n-        (**self).get_stable_hashing_context()\n-    }\n-}\n-\n-impl<'a, 'b, T: StableHashingContextProvider<'a>> StableHashingContextProvider<'a> for &'b mut T {\n-    fn get_stable_hashing_context(&self) -> StableHashingContext<'a> {\n-        (**self).get_stable_hashing_context()\n-    }\n-}\n-\n-impl StableHashingContextProvider<'tcx> for TyCtxt<'tcx> {\n-    fn get_stable_hashing_context(&self) -> StableHashingContext<'tcx> {\n-        (*self).create_stable_hashing_context()\n-    }\n-}\n-\n-impl<'a> StableHashingContextProvider<'a> for StableHashingContext<'a> {\n-    fn get_stable_hashing_context(&self) -> StableHashingContext<'a> {\n-        self.clone()\n-    }\n-}\n-\n impl<'a> HashStable<StableHashingContext<'a>> for ast::NodeId {\n     fn hash_stable(&self, _: &mut StableHashingContext<'a>, _: &mut StableHasher) {\n         panic!(\"Node IDs should not appear in incremental state\");"}, {"sha": "c91b6a8540bc2008beeaf17e78ee7afe75249342", "filename": "compiler/rustc_middle/src/ich/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d38c53767dd9a4e74b347f663eb7f41dea9232c/compiler%2Frustc_middle%2Fsrc%2Fich%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d38c53767dd9a4e74b347f663eb7f41dea9232c/compiler%2Frustc_middle%2Fsrc%2Fich%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fich%2Fmod.rs?ref=2d38c53767dd9a4e74b347f663eb7f41dea9232c", "patch": "@@ -1,6 +1,6 @@\n //! ICH - Incremental Compilation Hash\n \n-pub use self::hcx::{NodeIdHashingMode, StableHashingContext, StableHashingContextProvider};\n+pub use self::hcx::{NodeIdHashingMode, StableHashingContext};\n use rustc_span::symbol::{sym, Symbol};\n \n mod hcx;"}]}