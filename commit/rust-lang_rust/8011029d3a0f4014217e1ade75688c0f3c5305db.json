{"sha": "8011029d3a0f4014217e1ade75688c0f3c5305db", "node_id": "C_kwDOAAsO6NoAKDgwMTEwMjlkM2EwZjQwMTQyMTdlMWFkZTc1Njg4YzBmM2M1MzA1ZGI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-10T20:10:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-10T20:10:54Z"}, "message": "Auto merge of #13975 - DropDemBits:on-enter-after-dot-chains, r=DropDemBits\n\nfix: Suppress extra indent after the end of field and function chains\n\n(spurred on by <https://github.com/rust-lang/rust-analyzer/issues/4182#issuecomment-671275652>)\n\nCaveat that this doesn't work for after tail expressions, although there shouldn't be anything after those anyways.\n\nThis also complicates when to reload the language configuration by nature of now always having a language configuration applicable.\n\nExamples of indentation fixes:\n\n```rs\nfn main() {\n    println!(\"Hello!\"); // < enter here!\n    // ... indents down here\n\n    fs::read_to_string(\"soup\") // < enter here!\n    // ... still indents down here :(\n        .map(|_| ())\n        .map(|_| ()) // < enter here!\n        // ... still indents down here :D\n        .map_err(|_| ())\n        .unwrap(); // < enter here!\n    // ... indents down here :D\n\n    // ... and subsequent enters stay at the same indent\n\n    0.0f64\n        .to_radians()\n        .to_radians()\n        .to_radians() // force semi on a new line\n        ; // < enter here!\n    // ... indents down here :D\n}\n\nfn tail_end() -> i32 {\n    0i32.wrapping_abs()\n        .wrapping_abs()\n        .wrapping_abs()\n        .wrapping_abs() // < enter here!\n        // ... still indents here :shrug:\n}\n```", "tree": {"sha": "c04399f87bf30e92479abf3c51be3f0adab35f26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c04399f87bf30e92479abf3c51be3f0adab35f26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8011029d3a0f4014217e1ade75688c0f3c5305db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8011029d3a0f4014217e1ade75688c0f3c5305db", "html_url": "https://github.com/rust-lang/rust/commit/8011029d3a0f4014217e1ade75688c0f3c5305db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8011029d3a0f4014217e1ade75688c0f3c5305db/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9c020d42677c34b81606acfad35da3aa48fb0f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9c020d42677c34b81606acfad35da3aa48fb0f1", "html_url": "https://github.com/rust-lang/rust/commit/d9c020d42677c34b81606acfad35da3aa48fb0f1"}, {"sha": "c7bd3c682f9141f88b23d2e79c31a0be055c1c83", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7bd3c682f9141f88b23d2e79c31a0be055c1c83", "html_url": "https://github.com/rust-lang/rust/commit/c7bd3c682f9141f88b23d2e79c31a0be055c1c83"}], "stats": {"total": 122, "additions": 74, "deletions": 48}, "files": [{"sha": "1faa0ad91065b51040ae1542af0aba32855f7c55", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 74, "deletions": 48, "changes": 122, "blob_url": "https://github.com/rust-lang/rust/blob/8011029d3a0f4014217e1ade75688c0f3c5305db/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/8011029d3a0f4014217e1ade75688c0f3c5305db/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=8011029d3a0f4014217e1ade75688c0f3c5305db", "patch": "@@ -87,58 +87,84 @@ export class Config {\n      * [1]: https://github.com/Microsoft/vscode/issues/11514#issuecomment-244707076\n      */\n     private configureLanguage() {\n-        if (this.typingContinueCommentsOnNewline && !this.configureLang) {\n+        // Only need to dispose of the config if there's a change\n+        if (this.configureLang) {\n+            this.configureLang.dispose();\n+            this.configureLang = undefined;\n+        }\n+\n+        let onEnterRules: vscode.OnEnterRule[] = [\n+            {\n+                // Carry indentation from the previous line\n+                beforeText: /^\\s*$/,\n+                action: { indentAction: vscode.IndentAction.None },\n+            },\n+            {\n+                // After the end of a function/field chain,\n+                // with the semicolon on the same line\n+                beforeText: /^\\s+\\..*;/,\n+                action: { indentAction: vscode.IndentAction.Outdent },\n+            },\n+            {\n+                // After the end of a function/field chain,\n+                // with semicolon detached from the rest\n+                beforeText: /^\\s+;/,\n+                previousLineText: /^\\s+\\..*/,\n+                action: { indentAction: vscode.IndentAction.Outdent },\n+            },\n+        ];\n+\n+        if (this.typingContinueCommentsOnNewline) {\n             const indentAction = vscode.IndentAction.None;\n \n-            this.configureLang = vscode.languages.setLanguageConfiguration(\"rust\", {\n-                onEnterRules: [\n-                    {\n-                        // Doc single-line comment\n-                        // e.g. ///|\n-                        beforeText: /^\\s*\\/{3}.*$/,\n-                        action: { indentAction, appendText: \"/// \" },\n-                    },\n-                    {\n-                        // Parent doc single-line comment\n-                        // e.g. //!|\n-                        beforeText: /^\\s*\\/{2}\\!.*$/,\n-                        action: { indentAction, appendText: \"//! \" },\n-                    },\n-                    {\n-                        // Begins an auto-closed multi-line comment (standard or parent doc)\n-                        // e.g. /** | */ or /*! | */\n-                        beforeText: /^\\s*\\/\\*(\\*|\\!)(?!\\/)([^\\*]|\\*(?!\\/))*$/,\n-                        afterText: /^\\s*\\*\\/$/,\n-                        action: {\n-                            indentAction: vscode.IndentAction.IndentOutdent,\n-                            appendText: \" * \",\n-                        },\n-                    },\n-                    {\n-                        // Begins a multi-line comment (standard or parent doc)\n-                        // e.g. /** ...| or /*! ...|\n-                        beforeText: /^\\s*\\/\\*(\\*|\\!)(?!\\/)([^\\*]|\\*(?!\\/))*$/,\n-                        action: { indentAction, appendText: \" * \" },\n+            onEnterRules = [\n+                ...onEnterRules,\n+                {\n+                    // Doc single-line comment\n+                    // e.g. ///|\n+                    beforeText: /^\\s*\\/{3}.*$/,\n+                    action: { indentAction, appendText: \"/// \" },\n+                },\n+                {\n+                    // Parent doc single-line comment\n+                    // e.g. //!|\n+                    beforeText: /^\\s*\\/{2}\\!.*$/,\n+                    action: { indentAction, appendText: \"//! \" },\n+                },\n+                {\n+                    // Begins an auto-closed multi-line comment (standard or parent doc)\n+                    // e.g. /** | */ or /*! | */\n+                    beforeText: /^\\s*\\/\\*(\\*|\\!)(?!\\/)([^\\*]|\\*(?!\\/))*$/,\n+                    afterText: /^\\s*\\*\\/$/,\n+                    action: {\n+                        indentAction: vscode.IndentAction.IndentOutdent,\n+                        appendText: \" * \",\n                     },\n-                    {\n-                        // Continues a multi-line comment\n-                        // e.g.  * ...|\n-                        beforeText: /^(\\ \\ )*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\n-                        action: { indentAction, appendText: \"* \" },\n-                    },\n-                    {\n-                        // Dedents after closing a multi-line comment\n-                        // e.g.  */|\n-                        beforeText: /^(\\ \\ )*\\ \\*\\/\\s*$/,\n-                        action: { indentAction, removeText: 1 },\n-                    },\n-                ],\n-            });\n-        }\n-        if (!this.typingContinueCommentsOnNewline && this.configureLang) {\n-            this.configureLang.dispose();\n-            this.configureLang = undefined;\n+                },\n+                {\n+                    // Begins a multi-line comment (standard or parent doc)\n+                    // e.g. /** ...| or /*! ...|\n+                    beforeText: /^\\s*\\/\\*(\\*|\\!)(?!\\/)([^\\*]|\\*(?!\\/))*$/,\n+                    action: { indentAction, appendText: \" * \" },\n+                },\n+                {\n+                    // Continues a multi-line comment\n+                    // e.g.  * ...|\n+                    beforeText: /^(\\ \\ )*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\n+                    action: { indentAction, appendText: \"* \" },\n+                },\n+                {\n+                    // Dedents after closing a multi-line comment\n+                    // e.g.  */|\n+                    beforeText: /^(\\ \\ )*\\ \\*\\/\\s*$/,\n+                    action: { indentAction, removeText: 1 },\n+                },\n+            ];\n         }\n+\n+        this.configureLang = vscode.languages.setLanguageConfiguration(\"rust\", {\n+            onEnterRules,\n+        });\n     }\n \n     // We don't do runtime config validation here for simplicity. More on stackoverflow:"}]}