{"sha": "50ac63b9b179dca946c5fcbd50541359ccfc68c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwYWM2M2I5YjE3OWRjYTk0NmM1ZmNiZDUwNTQxMzU5Y2NmYzY4Yzk=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2017-10-10T22:37:34Z"}, "committer": {"name": "Paul Daniel Faria", "email": "pfaria@localhost.localdomain", "date": "2017-10-13T12:43:27Z"}, "message": "Do not move infcx, just borrow it", "tree": {"sha": "66a636da9a256cf4bcec91c875fa3212fd44945d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66a636da9a256cf4bcec91c875fa3212fd44945d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50ac63b9b179dca946c5fcbd50541359ccfc68c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50ac63b9b179dca946c5fcbd50541359ccfc68c9", "html_url": "https://github.com/rust-lang/rust/commit/50ac63b9b179dca946c5fcbd50541359ccfc68c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50ac63b9b179dca946c5fcbd50541359ccfc68c9/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6c52275c2d191c501b4354fed712e35955ca3c5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c52275c2d191c501b4354fed712e35955ca3c5f", "html_url": "https://github.com/rust-lang/rust/commit/6c52275c2d191c501b4354fed712e35955ca3c5f"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "61e320d9702fe133daa58c3394eddcffb213fc8f", "filename": "src/librustc_mir/transform/nll/infer.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/50ac63b9b179dca946c5fcbd50541359ccfc68c9/src%2Flibrustc_mir%2Ftransform%2Fnll%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50ac63b9b179dca946c5fcbd50541359ccfc68c9/src%2Flibrustc_mir%2Ftransform%2Fnll%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fnll%2Finfer.rs?ref=50ac63b9b179dca946c5fcbd50541359ccfc68c9", "patch": "@@ -80,7 +80,7 @@ impl InferenceContext {\n \n     pub fn solve<'a, 'gcx, 'tcx>(\n         &mut self,\n-        infcx: InferCtxt<'a, 'gcx, 'tcx>,\n+        infcx: &'a InferCtxt<'a, 'gcx, 'tcx>,\n         mir: &'a Mir<'tcx>,\n     ) -> IndexVec<InferenceErrorIndex, InferenceError>\n     where\n@@ -130,12 +130,12 @@ impl InferenceContext {\n }\n \n struct Dfs<'a, 'gcx: 'tcx + 'a, 'tcx: 'a> {\n-    infcx: InferCtxt<'a, 'gcx, 'tcx>,\n+    infcx: &'a InferCtxt<'a, 'gcx, 'tcx>,\n     mir: &'a Mir<'tcx>,\n }\n \n impl<'a, 'gcx: 'tcx, 'tcx: 'a> Dfs<'a, 'gcx, 'tcx> {\n-    fn new(infcx: InferCtxt<'a, 'gcx, 'tcx>, mir: &'a Mir<'tcx>) -> Self {\n+    fn new(infcx: &'a InferCtxt<'a, 'gcx, 'tcx>, mir: &'a Mir<'tcx>) -> Self {\n         Self { infcx, mir }\n     }\n "}, {"sha": "805e9c976e4f0ed6774b1ebfb1e14620b7977bab", "filename": "src/librustc_mir/transform/nll/mod.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/50ac63b9b179dca946c5fcbd50541359ccfc68c9/src%2Flibrustc_mir%2Ftransform%2Fnll%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50ac63b9b179dca946c5fcbd50541359ccfc68c9/src%2Flibrustc_mir%2Ftransform%2Fnll%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fnll%2Fmod.rs?ref=50ac63b9b179dca946c5fcbd50541359ccfc68c9", "patch": "@@ -31,11 +31,12 @@ mod infer;\n struct NLLVisitor<'a, 'gcx: 'a + 'tcx, 'tcx: 'a> {\n     lookup_map: HashMap<RegionVid, Lookup>,\n     regions: IndexVec<RegionIndex, Region>,\n-    infcx: InferCtxt<'a, 'gcx, 'tcx>,\n+    #[allow(dead_code)]\n+    infcx: &'a InferCtxt<'a, 'gcx, 'tcx>,\n }\n \n impl<'a, 'gcx, 'tcx> NLLVisitor<'a, 'gcx, 'tcx> {\n-    pub fn new(infcx: InferCtxt<'a, 'gcx, 'tcx>) -> Self {\n+    pub fn new(infcx: &'a InferCtxt<'a, 'gcx, 'tcx>) -> Self {\n         NLLVisitor {\n             infcx,\n             lookup_map: HashMap::new(),\n@@ -150,7 +151,7 @@ impl MirPass for NLL {\n         tcx.infer_ctxt().enter(|infcx| {\n             // Clone mir so we can mutate it without disturbing the rest of the compiler\n             let mut renumbered_mir = mir.clone();\n-            let mut visitor = NLLVisitor::new(infcx);\n+            let mut visitor = NLLVisitor::new(&infcx);\n             visitor.visit_mir(&mut renumbered_mir);\n             mir_util::dump_mir(tcx, None, \"nll\", &0, source, mir, |pass_where, out| {\n                 if let PassWhere::BeforeCFG = pass_where {\n@@ -162,7 +163,7 @@ impl MirPass for NLL {\n             });\n             let (_lookup_map, regions) = visitor.into_results();\n             let mut inference_context = InferenceContext::new(regions);\n-            inference_context.solve(infcx, &renumbered_mir);\n+            inference_context.solve(&infcx, &renumbered_mir);\n         })\n     }\n }"}]}