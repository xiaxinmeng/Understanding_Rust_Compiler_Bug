{"sha": "10b915fa7e5e7454fceda269f0c4cee10fd90197", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwYjkxNWZhN2U1ZTc0NTRmY2VkYTI2OWYwYzRjZWUxMGZkOTAxOTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-07-13T08:59:12Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-07-13T08:59:12Z"}, "message": "Auto merge of #4268 - mikerite:fix-4260, r=flip1995\n\nFix bug in `implicit_hasher` causing crashes\n\nSkip linting if the type is from an external macro. Closes #4260.\n\nchangelog: Fix bug in `implicit_hasher` causing crashes", "tree": {"sha": "f832230190a749c793c56577d81edfe995caefc8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f832230190a749c793c56577d81edfe995caefc8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10b915fa7e5e7454fceda269f0c4cee10fd90197", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10b915fa7e5e7454fceda269f0c4cee10fd90197", "html_url": "https://github.com/rust-lang/rust/commit/10b915fa7e5e7454fceda269f0c4cee10fd90197", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10b915fa7e5e7454fceda269f0c4cee10fd90197/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0290424bb94aaa7a6d5bc17eb6c616836da27da", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0290424bb94aaa7a6d5bc17eb6c616836da27da", "html_url": "https://github.com/rust-lang/rust/commit/b0290424bb94aaa7a6d5bc17eb6c616836da27da"}, {"sha": "de7749832c5806de67011baa1264982308c73104", "url": "https://api.github.com/repos/rust-lang/rust/commits/de7749832c5806de67011baa1264982308c73104", "html_url": "https://github.com/rust-lang/rust/commit/de7749832c5806de67011baa1264982308c73104"}], "stats": {"total": 36, "additions": 26, "deletions": 10}, "files": [{"sha": "3610c3d12497f03a99f342a967d864e4160c750f", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/10b915fa7e5e7454fceda269f0c4cee10fd90197/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10b915fa7e5e7454fceda269f0c4cee10fd90197/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=10b915fa7e5e7454fceda269f0c4cee10fd90197", "patch": "@@ -2038,6 +2038,9 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for ImplicitHasher {\n                     vis.visit_ty(ty);\n \n                     for target in &vis.found {\n+                        if in_external_macro(cx.sess(), generics.span) {\n+                            continue;\n+                        }\n                         let generics_suggestion_span = generics.span.substitute_dummy({\n                             let pos = snippet_opt(cx, item.span.until(body.arguments[0].pat.span))\n                                 .and_then(|snip| {"}, {"sha": "1eb77c531835a165f898ba04d35ab50b64ae05bb", "filename": "tests/ui/auxiliary/implicit_hasher_macros.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/10b915fa7e5e7454fceda269f0c4cee10fd90197/tests%2Fui%2Fauxiliary%2Fimplicit_hasher_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10b915fa7e5e7454fceda269f0c4cee10fd90197/tests%2Fui%2Fauxiliary%2Fimplicit_hasher_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauxiliary%2Fimplicit_hasher_macros.rs?ref=10b915fa7e5e7454fceda269f0c4cee10fd90197", "patch": "@@ -0,0 +1,6 @@\n+#[macro_export]\n+macro_rules! implicit_hasher_fn {\n+    () => {\n+        pub fn f(input: &HashMap<u32, u32>) {}\n+    };\n+}"}, {"sha": "c0ffa6879ce403b1ea4d1b3f0311e58763c43805", "filename": "tests/ui/implicit_hasher.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/10b915fa7e5e7454fceda269f0c4cee10fd90197/tests%2Fui%2Fimplicit_hasher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10b915fa7e5e7454fceda269f0c4cee10fd90197/tests%2Fui%2Fimplicit_hasher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_hasher.rs?ref=10b915fa7e5e7454fceda269f0c4cee10fd90197", "patch": "@@ -1,5 +1,9 @@\n+// aux-build:implicit_hasher_macros.rs\n #![allow(unused)]\n \n+#[macro_use]\n+extern crate implicit_hasher_macros;\n+\n use std::cmp::Eq;\n use std::collections::{HashMap, HashSet};\n use std::hash::{BuildHasher, Hash};\n@@ -88,4 +92,7 @@ gen!(fn bar);\n pub mod test_macro;\n __implicit_hasher_test_macro!(impl<K, V> for HashMap<K, V> where V: test_macro::A);\n \n+// #4260\n+implicit_hasher_fn!();\n+\n fn main() {}"}, {"sha": "a3bc08afd560b14824b1a6e194edb8b768f9a539", "filename": "tests/ui/implicit_hasher.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/10b915fa7e5e7454fceda269f0c4cee10fd90197/tests%2Fui%2Fimplicit_hasher.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/10b915fa7e5e7454fceda269f0c4cee10fd90197/tests%2Fui%2Fimplicit_hasher.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_hasher.stderr?ref=10b915fa7e5e7454fceda269f0c4cee10fd90197", "patch": "@@ -1,5 +1,5 @@\n error: impl for `HashMap` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:11:35\n+  --> $DIR/implicit_hasher.rs:15:35\n    |\n LL | impl<K: Hash + Eq, V> Foo<i8> for HashMap<K, V> {\n    |                                   ^^^^^^^^^^^^^\n@@ -15,7 +15,7 @@ LL |         (HashMap::default(), HashMap::with_capacity_and_hasher(10, Default:\n    |          ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: impl for `HashMap` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:20:36\n+  --> $DIR/implicit_hasher.rs:24:36\n    |\n LL | impl<K: Hash + Eq, V> Foo<i8> for (HashMap<K, V>,) {\n    |                                    ^^^^^^^^^^^^^\n@@ -29,7 +29,7 @@ LL |         ((HashMap::default(),), (HashMap::with_capacity_and_hasher(10, Defa\n    |           ^^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: impl for `HashMap` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:25:19\n+  --> $DIR/implicit_hasher.rs:29:19\n    |\n LL | impl Foo<i16> for HashMap<String, String> {\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^\n@@ -43,7 +43,7 @@ LL |         (HashMap::default(), HashMap::with_capacity_and_hasher(10, Default:\n    |          ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: impl for `HashSet` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:42:32\n+  --> $DIR/implicit_hasher.rs:46:32\n    |\n LL | impl<T: Hash + Eq> Foo<i8> for HashSet<T> {\n    |                                ^^^^^^^^^^\n@@ -57,7 +57,7 @@ LL |         (HashSet::default(), HashSet::with_capacity_and_hasher(10, Default:\n    |          ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: impl for `HashSet` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:47:19\n+  --> $DIR/implicit_hasher.rs:51:19\n    |\n LL | impl Foo<i16> for HashSet<String> {\n    |                   ^^^^^^^^^^^^^^^\n@@ -71,7 +71,7 @@ LL |         (HashSet::default(), HashSet::with_capacity_and_hasher(10, Default:\n    |          ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: parameter of type `HashMap` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:64:23\n+  --> $DIR/implicit_hasher.rs:68:23\n    |\n LL | pub fn foo(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n    |                       ^^^^^^^^^^^^^^^^^\n@@ -81,7 +81,7 @@ LL | pub fn foo<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32, S>, _s\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^            ^^^^^^^^^^^^^^^^^^^^\n \n error: parameter of type `HashSet` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:64:53\n+  --> $DIR/implicit_hasher.rs:68:53\n    |\n LL | pub fn foo(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n    |                                                     ^^^^^^^^^^^^\n@@ -91,7 +91,7 @@ LL | pub fn foo<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32>, _set:\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                          ^^^^^^^^^^^^^^^\n \n error: impl for `HashMap` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:68:43\n+  --> $DIR/implicit_hasher.rs:72:43\n    |\n LL |         impl<K: Hash + Eq, V> Foo<u8> for HashMap<K, V> {\n    |                                           ^^^^^^^^^^^^^\n@@ -108,7 +108,7 @@ LL |                 (HashMap::default(), HashMap::with_capacity_and_hasher(10,\n    |                  ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: parameter of type `HashMap` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:76:33\n+  --> $DIR/implicit_hasher.rs:80:33\n    |\n LL |         pub fn $name(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n    |                                 ^^^^^^^^^^^^^^^^^\n@@ -121,7 +121,7 @@ LL |         pub fn $name<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^            ^^^^^^^^^^^^^^^^^^^^\n \n error: parameter of type `HashSet` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:76:63\n+  --> $DIR/implicit_hasher.rs:80:63\n    |\n LL |         pub fn $name(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n    |                                                               ^^^^^^^^^^^^"}]}