{"sha": "c7e9bcadaab1665b5e46797984c6a8ab3885718a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3ZTliY2FkYWFiMTY2NWI1ZTQ2Nzk3OTg0YzZhOGFiMzg4NTcxOGE=", "commit": {"author": {"name": "Seiichi Uchida", "email": "topecongiro@localhost.localdomain", "date": "2017-05-01T09:52:43Z"}, "committer": {"name": "Seiichi Uchida", "email": "topecongiro@localhost.localdomain", "date": "2017-05-01T09:52:43Z"}, "message": "Use block indent when visual indent exceeds max_width", "tree": {"sha": "d70894526ddd0f8754623140fc448701a9435403", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d70894526ddd0f8754623140fc448701a9435403"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7e9bcadaab1665b5e46797984c6a8ab3885718a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7e9bcadaab1665b5e46797984c6a8ab3885718a", "html_url": "https://github.com/rust-lang/rust/commit/c7e9bcadaab1665b5e46797984c6a8ab3885718a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7e9bcadaab1665b5e46797984c6a8ab3885718a/comments", "author": null, "committer": null, "parents": [{"sha": "b4833a8c581f92e87eeb0f5a6f11719f4eb94092", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4833a8c581f92e87eeb0f5a6f11719f4eb94092", "html_url": "https://github.com/rust-lang/rust/commit/b4833a8c581f92e87eeb0f5a6f11719f4eb94092"}], "stats": {"total": 66, "additions": 63, "deletions": 3}, "files": [{"sha": "f78dd7bbc5fe6e67bc161485c28891c6d4e77cc0", "filename": "src/expr.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c7e9bcadaab1665b5e46797984c6a8ab3885718a/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7e9bcadaab1665b5e46797984c6a8ab3885718a/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=c7e9bcadaab1665b5e46797984c6a8ab3885718a", "patch": "@@ -2091,13 +2091,15 @@ pub fn rewrite_assign_rhs<S: Into<String>>(context: &RewriteContext,\n             let new_offset = shape.indent.block_indent(context.config);\n             let max_width = try_opt!((shape.width + shape.indent.width())\n                                          .checked_sub(new_offset.width()));\n-            let new_rhs = ex.rewrite(context, Shape::legacy(max_width, new_offset));\n+            let new_shape = Shape::legacy(max_width, new_offset);\n+            let new_rhs = ex.rewrite(context, new_shape);\n \n             // FIXME: DRY!\n             match (rhs, new_rhs) {\n                 (Some(ref orig_rhs), Some(ref replacement_rhs))\n-                    if count_line_breaks(orig_rhs) >\n-                       count_line_breaks(replacement_rhs) + 1 => {\n+                    if count_line_breaks(orig_rhs) > count_line_breaks(replacement_rhs) + 1 ||\n+                       (orig_rhs.rewrite(context, shape).is_none() &&\n+                        replacement_rhs.rewrite(context, new_shape).is_some()) => {\n                     result.push_str(&format!(\"\\n{}\", new_offset.to_string(context.config)));\n                     result.push_str(replacement_rhs);\n                 }"}, {"sha": "34d5bf399544dc85df45491b65f07802f6d22ba4", "filename": "tests/source/large_vec.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/c7e9bcadaab1665b5e46797984c6a8ab3885718a/tests%2Fsource%2Flarge_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7e9bcadaab1665b5e46797984c6a8ab3885718a/tests%2Fsource%2Flarge_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Flarge_vec.rs?ref=c7e9bcadaab1665b5e46797984c6a8ab3885718a", "patch": "@@ -0,0 +1,29 @@\n+// See #1470.\n+\n+impl Environment {\n+    pub fn new_root() -> Rc<RefCell<Environment>> {\n+        let mut env = Environment::new();\n+        let builtin_functions = &[(\"println\",\n+                                   Function::NativeVoid(CallSign {\n+                                                            num_params: 0,\n+                                                            variadic: true,\n+                                                            param_types: vec![],\n+                                                        },\n+                                                        native_println)),\n+                                  (\"run_http_server\",\n+                                   Function::NativeVoid(CallSign {\n+                                                            num_params: 1,\n+                                                            variadic: false,\n+                                                            param_types:\n+                                                                vec![Some(ConstraintType::Function)],\n+                                                        },\n+                                                        native_run_http_server)),\n+                                  (\"len\",\n+                                   Function::NativeReturning(CallSign {\n+                                                                 num_params: 1,\n+                                                                 variadic: false,\n+                                                                 param_types: vec![None],\n+                                                             },\n+                                                             native_len))];\n+    }\n+}"}, {"sha": "44f6d52650c1bfcbb227bf6bb11583ae1a35b8b6", "filename": "tests/target/large_vec.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/c7e9bcadaab1665b5e46797984c6a8ab3885718a/tests%2Ftarget%2Flarge_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7e9bcadaab1665b5e46797984c6a8ab3885718a/tests%2Ftarget%2Flarge_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Flarge_vec.rs?ref=c7e9bcadaab1665b5e46797984c6a8ab3885718a", "patch": "@@ -0,0 +1,29 @@\n+// See #1470.\n+\n+impl Environment {\n+    pub fn new_root() -> Rc<RefCell<Environment>> {\n+        let mut env = Environment::new();\n+        let builtin_functions =\n+            &[(\"println\",\n+               Function::NativeVoid(CallSign {\n+                                        num_params: 0,\n+                                        variadic: true,\n+                                        param_types: vec![],\n+                                    },\n+                                    native_println)),\n+              (\"run_http_server\",\n+               Function::NativeVoid(CallSign {\n+                                        num_params: 1,\n+                                        variadic: false,\n+                                        param_types: vec![Some(ConstraintType::Function)],\n+                                    },\n+                                    native_run_http_server)),\n+              (\"len\",\n+               Function::NativeReturning(CallSign {\n+                                             num_params: 1,\n+                                             variadic: false,\n+                                             param_types: vec![None],\n+                                         },\n+                                         native_len))];\n+    }\n+}"}]}