{"sha": "bb47c5f56c2f6d389879973d6b98fa487b4457fb", "node_id": "C_kwDOAAsO6NoAKGJiNDdjNWY1NmMyZjZkMzg5ODc5OTczZDZiOThmYTQ4N2I0NDU3ZmI", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-03-05T20:58:51Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-03-05T20:58:51Z"}, "message": "fix: Fix macro-calls expanding to items in if/while conditions", "tree": {"sha": "fc29a417ff3f10bf2f43df30106d331eff10c8cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc29a417ff3f10bf2f43df30106d331eff10c8cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb47c5f56c2f6d389879973d6b98fa487b4457fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb47c5f56c2f6d389879973d6b98fa487b4457fb", "html_url": "https://github.com/rust-lang/rust/commit/bb47c5f56c2f6d389879973d6b98fa487b4457fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb47c5f56c2f6d389879973d6b98fa487b4457fb/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8329ba98731a939fe2c6eb878778a6399274ff0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8329ba98731a939fe2c6eb878778a6399274ff0", "html_url": "https://github.com/rust-lang/rust/commit/f8329ba98731a939fe2c6eb878778a6399274ff0"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "195f21cedc37d1de0b5ce541aba0b1303aee7328", "filename": "crates/hir_def/src/body/lower.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/bb47c5f56c2f6d389879973d6b98fa487b4457fb/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb47c5f56c2f6d389879973d6b98fa487b4457fb/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs?ref=bb47c5f56c2f6d389879973d6b98fa487b4457fb", "patch": "@@ -500,14 +500,14 @@ impl ExprCollector<'_> {\n             }\n             ast::Expr::MacroCall(e) => {\n                 let macro_ptr = AstPtr::new(&e);\n-                let mut ids = vec![];\n+                let mut ids = None;\n                 self.collect_macro_call(e, macro_ptr, true, |this, expansion| {\n-                    ids.push(match expansion {\n+                    ids.get_or_insert(match expansion {\n                         Some(it) => this.collect_expr(it),\n                         None => this.alloc_expr(Expr::Missing, syntax_ptr.clone()),\n-                    })\n+                    });\n                 });\n-                ids[0]\n+                ids.unwrap_or_else(|| self.alloc_expr(Expr::Missing, syntax_ptr.clone()))\n             }\n             ast::Expr::MacroStmts(e) => {\n                 e.statements().for_each(|s| self.collect_stmt(s));\n@@ -523,16 +523,16 @@ impl ExprCollector<'_> {\n \n     fn collect_macro_call<F: FnMut(&mut Self, Option<T>), T: ast::AstNode>(\n         &mut self,\n-        e: ast::MacroCall,\n+        mcall: ast::MacroCall,\n         syntax_ptr: AstPtr<ast::MacroCall>,\n         record_diagnostics: bool,\n         mut collector: F,\n     ) {\n         // File containing the macro call. Expansion errors will be attached here.\n         let outer_file = self.expander.current_file_id;\n \n-        let macro_call = self.expander.to_source(AstPtr::new(&e));\n-        let res = self.expander.enter_expand(self.db, e);\n+        let macro_call_ptr = self.expander.to_source(AstPtr::new(&mcall));\n+        let res = self.expander.enter_expand(self.db, mcall);\n \n         let res = match res {\n             Ok(res) => res,\n@@ -567,7 +567,7 @@ impl ExprCollector<'_> {\n \n         match res.value {\n             Some((mark, expansion)) => {\n-                self.source_map.expansions.insert(macro_call, self.expander.current_file_id);\n+                self.source_map.expansions.insert(macro_call_ptr, self.expander.current_file_id);\n \n                 let id = collector(self, Some(expansion));\n                 self.expander.exit(self.db, mark);"}, {"sha": "649a160b33b344c539b444a8003e46920cd33d51", "filename": "crates/hir_expand/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb47c5f56c2f6d389879973d6b98fa487b4457fb/crates%2Fhir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb47c5f56c2f6d389879973d6b98fa487b4457fb/crates%2Fhir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Flib.rs?ref=bb47c5f56c2f6d389879973d6b98fa487b4457fb", "patch": "@@ -894,7 +894,7 @@ impl ExpandTo {\n             | CLOSURE_EXPR | BREAK_EXPR | RETURN_EXPR | MATCH_EXPR | MATCH_ARM | MATCH_GUARD\n             | RECORD_EXPR_FIELD | CALL_EXPR | INDEX_EXPR | METHOD_CALL_EXPR | FIELD_EXPR\n             | AWAIT_EXPR | CAST_EXPR | REF_EXPR | PREFIX_EXPR | RANGE_EXPR | BIN_EXPR\n-            | LET_EXPR => ExpandTo::Expr,\n+            | LET_EXPR | IF_EXPR | WHILE_EXPR => ExpandTo::Expr,\n             LET_STMT => {\n                 // FIXME: Handle LHS Pattern\n                 ExpandTo::Expr"}]}