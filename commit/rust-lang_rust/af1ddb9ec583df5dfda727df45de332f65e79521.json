{"sha": "af1ddb9ec583df5dfda727df45de332f65e79521", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmMWRkYjllYzU4M2RmNWRmZGE3MjdkZjQ1ZGUzMzJmNjVlNzk1MjE=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-02-10T00:43:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-10T00:43:24Z"}, "message": "Rollup merge of #39700 - msopena:master, r=est31\n\nAdding compile fail test for const_indexing feature\n\nFirst attempt at contributing to rust. Picked up an easy feature to test.\n\nIssue #39059\nr? @est31", "tree": {"sha": "1f1bc6b405a633e9ae8e78a32bad5c7d714c4f10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f1bc6b405a633e9ae8e78a32bad5c7d714c4f10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af1ddb9ec583df5dfda727df45de332f65e79521", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af1ddb9ec583df5dfda727df45de332f65e79521", "html_url": "https://github.com/rust-lang/rust/commit/af1ddb9ec583df5dfda727df45de332f65e79521", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af1ddb9ec583df5dfda727df45de332f65e79521/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae5d8fc929d73f0eb6d5a37e44f1c8405b7a13c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae5d8fc929d73f0eb6d5a37e44f1c8405b7a13c1", "html_url": "https://github.com/rust-lang/rust/commit/ae5d8fc929d73f0eb6d5a37e44f1c8405b7a13c1"}, {"sha": "ec4a3cc3710eba9b31e003771994e9b13c47c318", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec4a3cc3710eba9b31e003771994e9b13c47c318", "html_url": "https://github.com/rust-lang/rust/commit/ec4a3cc3710eba9b31e003771994e9b13c47c318"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "0d61878cd8073b25164202a1c41aa42803df15e5", "filename": "src/test/compile-fail/feature-gate-const-indexing.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/af1ddb9ec583df5dfda727df45de332f65e79521/src%2Ftest%2Fcompile-fail%2Ffeature-gate-const-indexing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af1ddb9ec583df5dfda727df45de332f65e79521/src%2Ftest%2Fcompile-fail%2Ffeature-gate-const-indexing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-const-indexing.rs?ref=af1ddb9ec583df5dfda727df45de332f65e79521", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+fn main() {\n+    const ARR: [i32; 6] = [42, 43, 44, 45, 46, 47];\n+    const IDX: usize = 3;\n+    const VAL: i32 = ARR[IDX];\n+    const BLUB: [i32; (ARR[0] - 41) as usize] = [5]; //~ ERROR constant evaluation error\n+}"}, {"sha": "707d5da50bf73e961fa33ecf1614e2212d1c9277", "filename": "src/tools/tidy/src/features.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af1ddb9ec583df5dfda727df45de332f65e79521/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af1ddb9ec583df5dfda727df45de332f65e79521/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs?ref=af1ddb9ec583df5dfda727df45de332f65e79521", "patch": "@@ -167,7 +167,7 @@ pub fn check(path: &Path, bad: &mut bool) {\n     // FIXME get this whitelist empty.\n     let whitelist = vec![\n         \"abi_ptx\", \"simd\", \"static_recursion\",\n-        \"cfg_target_has_atomic\", \"staged_api\", \"const_indexing\",\n+        \"cfg_target_has_atomic\", \"staged_api\",\n         \"unboxed_closures\", \"stmt_expr_attributes\",\n         \"cfg_target_thread_local\", \"unwind_attributes\",\n         \"inclusive_range_syntax\""}]}