{"sha": "8e6cf861e5e1b558b6a03dd0eaabc15b37570063", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlNmNmODYxZTVlMWI1NThiNmEwM2RkMGVhYWJjMTViMzc1NzAwNjM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-05T18:03:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-05T18:03:15Z"}, "message": "Rollup merge of #67010 - estebank:raw-idents, r=Centril\n\nAccurately portray raw identifiers in error messages\n\nWhen refering to or suggesting raw identifiers, refer to them with `r#`.\n\nFix #65634.", "tree": {"sha": "e445f9e8705333bba11b133a94b1c077c89536db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e445f9e8705333bba11b133a94b1c077c89536db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e6cf861e5e1b558b6a03dd0eaabc15b37570063", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd6UZjCRBK7hj4Ov3rIwAAdHIIAGedNK6HHAdvpoTupDEOiid9\nH1kFR0U4SWErFdeCRWFhG/GjYqhjaeVh3GSEARA3C0q+6urdqiFRCPjnoWpCcNEo\ndzK2QJO9BoPpz6qGCfghKXAZiK51Fm6fcnDI7pvxX6ADJlv1WGCWOdHeGLxqWFkc\nwDQcWHjsZqKY1QhWxnGIkhLSAYGcVGrh6pQroTOeNNNvm+l/eGbQ15uCr8JSrUGt\nMYP+UghMa+G60kME/8LucppNuIjp1xnWxHjHyoifQfEH6Nx8/f6F5ZhHmMdPbv0j\nOAefKYUYYTS5awMFhZoNecvVVcPYvnXpQKyhMqtlytOprFjuGhucImZlncdk0l0=\n=iThZ\n-----END PGP SIGNATURE-----\n", "payload": "tree e445f9e8705333bba11b133a94b1c077c89536db\nparent 9a72b42a6d8a2d587a9db4f0073829de118e9997\nparent 0103308ad3745109600541e139af5571838b8791\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1575568995 +0100\ncommitter GitHub <noreply@github.com> 1575568995 +0100\n\nRollup merge of #67010 - estebank:raw-idents, r=Centril\n\nAccurately portray raw identifiers in error messages\n\nWhen refering to or suggesting raw identifiers, refer to them with `r#`.\n\nFix #65634.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e6cf861e5e1b558b6a03dd0eaabc15b37570063", "html_url": "https://github.com/rust-lang/rust/commit/8e6cf861e5e1b558b6a03dd0eaabc15b37570063", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e6cf861e5e1b558b6a03dd0eaabc15b37570063/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a72b42a6d8a2d587a9db4f0073829de118e9997", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a72b42a6d8a2d587a9db4f0073829de118e9997", "html_url": "https://github.com/rust-lang/rust/commit/9a72b42a6d8a2d587a9db4f0073829de118e9997"}, {"sha": "0103308ad3745109600541e139af5571838b8791", "url": "https://api.github.com/repos/rust-lang/rust/commits/0103308ad3745109600541e139af5571838b8791", "html_url": "https://github.com/rust-lang/rust/commit/0103308ad3745109600541e139af5571838b8791"}], "stats": {"total": 69, "additions": 61, "deletions": 8}, "files": [{"sha": "745f7d0276d809b28df9739c6e67ef5cbbeba1e1", "filename": "src/librustc/ty/print/pretty.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8e6cf861e5e1b558b6a03dd0eaabc15b37570063/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e6cf861e5e1b558b6a03dd0eaabc15b37570063/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs?ref=8e6cf861e5e1b558b6a03dd0eaabc15b37570063", "patch": "@@ -1282,6 +1282,9 @@ impl<F: fmt::Write> Printer<'tcx> for FmtPrinter<'_, 'tcx, F> {\n             if !self.empty_path {\n                 write!(self, \"::\")?;\n             }\n+            if ast::Ident::from_str(&name).is_raw_guess() {\n+                write!(self, \"r#\")?;\n+            }\n             write!(self, \"{}\", name)?;\n \n             // FIXME(eddyb) this will print e.g. `{{closure}}#3`, but it"}, {"sha": "807defc51c1d3867b7c82284af1304c81e14fd09", "filename": "src/librustc_parse/parser/module.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e6cf861e5e1b558b6a03dd0eaabc15b37570063/src%2Flibrustc_parse%2Fparser%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e6cf861e5e1b558b6a03dd0eaabc15b37570063/src%2Flibrustc_parse%2Fparser%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fmodule.rs?ref=8e6cf861e5e1b558b6a03dd0eaabc15b37570063", "patch": "@@ -212,13 +212,13 @@ impl<'a> Parser<'a> {\n         // `./<id>.rs` and `./<id>/mod.rs`.\n         let relative_prefix_string;\n         let relative_prefix = if let Some(ident) = relative {\n-            relative_prefix_string = format!(\"{}{}\", ident, path::MAIN_SEPARATOR);\n+            relative_prefix_string = format!(\"{}{}\", ident.name, path::MAIN_SEPARATOR);\n             &relative_prefix_string\n         } else {\n             \"\"\n         };\n \n-        let mod_name = id.to_string();\n+        let mod_name = id.name.to_string();\n         let default_path_str = format!(\"{}{}.rs\", relative_prefix, mod_name);\n         let secondary_path_str = format!(\"{}{}{}mod.rs\",\n                                          relative_prefix, mod_name, path::MAIN_SEPARATOR);"}, {"sha": "c68e03be88c045fb2de599346b6c95c5bef278dd", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8e6cf861e5e1b558b6a03dd0eaabc15b37570063/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e6cf861e5e1b558b6a03dd0eaabc15b37570063/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=8e6cf861e5e1b558b6a03dd0eaabc15b37570063", "patch": "@@ -869,12 +869,18 @@ impl Hash for Ident {\n \n impl fmt::Debug for Ident {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        if self.is_raw_guess() {\n+            write!(f, \"r#\")?;\n+        }\n         write!(f, \"{}{:?}\", self.name, self.span.ctxt())\n     }\n }\n \n impl fmt::Display for Ident {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        if self.is_raw_guess() {\n+            write!(f, \"r#\")?;\n+        }\n         fmt::Display::fmt(&self.name, f)\n     }\n }"}, {"sha": "b928510258b2f4a13fb4601473ff5d2d71e9a362", "filename": "src/test/ui/issues/issue-65634-raw-ident-suggestion.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8e6cf861e5e1b558b6a03dd0eaabc15b37570063/src%2Ftest%2Fui%2Fissues%2Fissue-65634-raw-ident-suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e6cf861e5e1b558b6a03dd0eaabc15b37570063/src%2Ftest%2Fui%2Fissues%2Fissue-65634-raw-ident-suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-65634-raw-ident-suggestion.rs?ref=8e6cf861e5e1b558b6a03dd0eaabc15b37570063", "patch": "@@ -0,0 +1,22 @@\n+#![allow(non_camel_case_types)]\n+\n+trait r#async {\n+    fn r#struct(&self) {\n+        println!(\"async\");\n+    }\n+}\n+\n+trait r#await {\n+    fn r#struct(&self) {\n+        println!(\"await\");\n+    }\n+}\n+\n+struct r#fn {}\n+\n+impl r#async for r#fn {}\n+impl r#await for r#fn {}\n+\n+fn main() {\n+    r#fn {}.r#struct(); //~ ERROR multiple applicable items in scope\n+}"}, {"sha": "c7bb653dc1f147b46c2aa718b54ea1211c2ce2ea", "filename": "src/test/ui/issues/issue-65634-raw-ident-suggestion.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8e6cf861e5e1b558b6a03dd0eaabc15b37570063/src%2Ftest%2Fui%2Fissues%2Fissue-65634-raw-ident-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8e6cf861e5e1b558b6a03dd0eaabc15b37570063/src%2Ftest%2Fui%2Fissues%2Fissue-65634-raw-ident-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-65634-raw-ident-suggestion.stderr?ref=8e6cf861e5e1b558b6a03dd0eaabc15b37570063", "patch": "@@ -0,0 +1,22 @@\n+error[E0034]: multiple applicable items in scope\n+  --> $DIR/issue-65634-raw-ident-suggestion.rs:21:13\n+   |\n+LL |     r#fn {}.r#struct();\n+   |             ^^^^^^^^ multiple `r#struct` found\n+   |\n+note: candidate #1 is defined in an impl of the trait `async` for the type `r#fn`\n+  --> $DIR/issue-65634-raw-ident-suggestion.rs:4:5\n+   |\n+LL |     fn r#struct(&self) {\n+   |     ^^^^^^^^^^^^^^^^^^\n+   = help: to disambiguate the method call, write `async::r#struct(r#fn {})` instead\n+note: candidate #2 is defined in an impl of the trait `await` for the type `r#fn`\n+  --> $DIR/issue-65634-raw-ident-suggestion.rs:10:5\n+   |\n+LL |     fn r#struct(&self) {\n+   |     ^^^^^^^^^^^^^^^^^^\n+   = help: to disambiguate the method call, write `await::r#struct(r#fn {})` instead\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0034`."}, {"sha": "a986980fab97b1d742ef74851ea10dc8234fd12c", "filename": "src/test/ui/parser/raw/raw-literal-keywords.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e6cf861e5e1b558b6a03dd0eaabc15b37570063/src%2Ftest%2Fui%2Fparser%2Fraw%2Fraw-literal-keywords.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e6cf861e5e1b558b6a03dd0eaabc15b37570063/src%2Ftest%2Fui%2Fparser%2Fraw%2Fraw-literal-keywords.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fraw%2Fraw-literal-keywords.rs?ref=8e6cf861e5e1b558b6a03dd0eaabc15b37570063", "patch": "@@ -11,11 +11,11 @@ fn test_union() {\n }\n \n fn test_if_2() {\n-    let _ = r#if; //~ ERROR cannot find value `if` in this scope\n+    let _ = r#if; //~ ERROR cannot find value `r#if` in this scope\n }\n \n fn test_struct_2() {\n-    let _ = r#struct; //~ ERROR cannot find value `struct` in this scope\n+    let _ = r#struct; //~ ERROR cannot find value `r#struct` in this scope\n }\n \n fn test_union_2() {"}, {"sha": "f7b6c894a90fea2ade2bd5a9692ed5cf4cf1b66f", "filename": "src/test/ui/parser/raw/raw-literal-keywords.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e6cf861e5e1b558b6a03dd0eaabc15b37570063/src%2Ftest%2Fui%2Fparser%2Fraw%2Fraw-literal-keywords.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8e6cf861e5e1b558b6a03dd0eaabc15b37570063/src%2Ftest%2Fui%2Fparser%2Fraw%2Fraw-literal-keywords.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fraw%2Fraw-literal-keywords.stderr?ref=8e6cf861e5e1b558b6a03dd0eaabc15b37570063", "patch": "@@ -16,13 +16,13 @@ error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found\n LL |     r#union Test;\n    |             ^^^^ expected one of 8 possible tokens\n \n-error[E0425]: cannot find value `if` in this scope\n+error[E0425]: cannot find value `r#if` in this scope\n   --> $DIR/raw-literal-keywords.rs:14:13\n    |\n LL |     let _ = r#if;\n    |             ^^^^ not found in this scope\n \n-error[E0425]: cannot find value `struct` in this scope\n+error[E0425]: cannot find value `r#struct` in this scope\n   --> $DIR/raw-literal-keywords.rs:18:13\n    |\n LL |     let _ = r#struct;"}, {"sha": "0a8073c0be2ea627cdd59d843d88af9fc9f02db1", "filename": "src/test/ui/suggestions/raw-name-use-suggestion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e6cf861e5e1b558b6a03dd0eaabc15b37570063/src%2Ftest%2Fui%2Fsuggestions%2Fraw-name-use-suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e6cf861e5e1b558b6a03dd0eaabc15b37570063/src%2Ftest%2Fui%2Fsuggestions%2Fraw-name-use-suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fraw-name-use-suggestion.rs?ref=8e6cf861e5e1b558b6a03dd0eaabc15b37570063", "patch": "@@ -5,5 +5,5 @@ mod foo {\n \n fn main() {\n     foo::let(); //~ ERROR expected identifier, found keyword `let`\n-    r#break(); //~ ERROR cannot find function `break` in this scope\n+    r#break(); //~ ERROR cannot find function `r#break` in this scope\n }"}, {"sha": "62b76318e09b5424f1ebab7a3c03c2c55a720237", "filename": "src/test/ui/suggestions/raw-name-use-suggestion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e6cf861e5e1b558b6a03dd0eaabc15b37570063/src%2Ftest%2Fui%2Fsuggestions%2Fraw-name-use-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8e6cf861e5e1b558b6a03dd0eaabc15b37570063/src%2Ftest%2Fui%2Fsuggestions%2Fraw-name-use-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fraw-name-use-suggestion.stderr?ref=8e6cf861e5e1b558b6a03dd0eaabc15b37570063", "patch": "@@ -20,7 +20,7 @@ help: you can escape reserved keywords to use them as identifiers\n LL |     foo::r#let();\n    |          ^^^^^\n \n-error[E0425]: cannot find function `break` in this scope\n+error[E0425]: cannot find function `r#break` in this scope\n   --> $DIR/raw-name-use-suggestion.rs:8:5\n    |\n LL |     r#break();"}]}