{"sha": "c9562fd2d0cac144835e552f299c3a28e0a29ba6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5NTYyZmQyZDBjYWMxNDQ4MzVlNTUyZjI5OWMzYTI4ZTBhMjliYTY=", "commit": {"author": {"name": "JohnTitor", "email": "huyuumi.dev@gmail.com", "date": "2021-03-29T08:32:27Z"}, "committer": {"name": "JohnTitor", "email": "huyuumi.dev@gmail.com", "date": "2021-03-29T08:32:27Z"}, "message": "Prefer 4 spaces", "tree": {"sha": "008db33cc923f84ab441d5d2c2607c5871f2ec90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/008db33cc923f84ab441d5d2c2607c5871f2ec90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9562fd2d0cac144835e552f299c3a28e0a29ba6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9562fd2d0cac144835e552f299c3a28e0a29ba6", "html_url": "https://github.com/rust-lang/rust/commit/c9562fd2d0cac144835e552f299c3a28e0a29ba6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9562fd2d0cac144835e552f299c3a28e0a29ba6/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29d4a7d3777b1c485e173f423d2dee77df93e953", "url": "https://api.github.com/repos/rust-lang/rust/commits/29d4a7d3777b1c485e173f423d2dee77df93e953", "html_url": "https://github.com/rust-lang/rust/commit/29d4a7d3777b1c485e173f423d2dee77df93e953"}], "stats": {"total": 104, "additions": 52, "deletions": 52}, "files": [{"sha": "d24e403e017ef83222d56f27b3ef4c24a23bdc5e", "filename": "src/test/ui/const-generics/defaults/complex-unord-param.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c9562fd2d0cac144835e552f299c3a28e0a29ba6/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcomplex-unord-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9562fd2d0cac144835e552f299c3a28e0a29ba6/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcomplex-unord-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcomplex-unord-param.rs?ref=c9562fd2d0cac144835e552f299c3a28e0a29ba6", "patch": "@@ -6,16 +6,16 @@\n #![allow(dead_code)]\n \n struct NestedArrays<'a, const N: usize, A: 'a, const M: usize, T:'a =u32> {\n-  //[min]~^ ERROR type parameters must be declared prior to const parameters\n-  args: &'a [&'a [T; M]; N],\n-  specifier: A,\n+    //[min]~^ ERROR type parameters must be declared prior to const parameters\n+    args: &'a [&'a [T; M]; N],\n+    specifier: A,\n }\n \n fn main() {\n-  let array = [1, 2, 3];\n-  let nest = [&array];\n-  let _ = NestedArrays {\n-    args: &nest,\n-    specifier: true,\n-  };\n+    let array = [1, 2, 3];\n+    let nest = [&array];\n+    let _ = NestedArrays {\n+        args: &nest,\n+        specifier: true,\n+    };\n }"}, {"sha": "3febb7cffbf157bb77bc067427ed3744dab8edd2", "filename": "src/test/ui/const-generics/defaults/default-annotation.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c9562fd2d0cac144835e552f299c3a28e0a29ba6/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fdefault-annotation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9562fd2d0cac144835e552f299c3a28e0a29ba6/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fdefault-annotation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fdefault-annotation.rs?ref=c9562fd2d0cac144835e552f299c3a28e0a29ba6", "patch": "@@ -13,8 +13,8 @@ pub struct ConstDefaultUnstable<const N: usize = 3>;\n \n #[stable(feature = \"const_default_unstable\", since=\"none\")]\n pub struct ConstDefaultStable<const N: usize = {\n-  #[stable(feature = \"const_default_unstable_val\", since=\"none\")]\n-  3\n+    #[stable(feature = \"const_default_unstable_val\", since=\"none\")]\n+    3\n }>;\n \n fn main() {}"}, {"sha": "d85b756f538dcaca7d7632abb4c6e24bb0b2fb2b", "filename": "src/test/ui/const-generics/defaults/mismatch.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c9562fd2d0cac144835e552f299c3a28e0a29ba6/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fmismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9562fd2d0cac144835e552f299c3a28e0a29ba6/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fmismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fmismatch.rs?ref=c9562fd2d0cac144835e552f299c3a28e0a29ba6", "patch": "@@ -8,16 +8,16 @@ pub struct Example3<const N: usize=13, T=u32>(T);\n pub struct Example4<const N: usize=13, const M: usize=4>;\n \n fn main() {\n-  let e: Example::<13> = ();\n-  //~^ Error: mismatched types\n-  let e: Example2::<u32, 13> = ();\n-  //~^ Error: mismatched types\n-  let e: Example3::<13, u32> = ();\n-  //~^ Error: mismatched types\n-  let e: Example3::<7> = ();\n-  //~^ Error: mismatched types\n-  // FIXME(const_generics_defaults): There should be a note for the error below, but it is\n-  // missing.\n-  let e: Example4::<7> = ();\n-  //~^ Error: mismatched types\n+    let e: Example::<13> = ();\n+    //~^ Error: mismatched types\n+    let e: Example2::<u32, 13> = ();\n+    //~^ Error: mismatched types\n+    let e: Example3::<13, u32> = ();\n+    //~^ Error: mismatched types\n+    let e: Example3::<7> = ();\n+    //~^ Error: mismatched types\n+    // FIXME(const_generics_defaults): There should be a note for the error below, but it is\n+    // missing.\n+    let e: Example4::<7> = ();\n+    //~^ Error: mismatched types\n }"}, {"sha": "ff72c71c40f0f78475f159d768cdd7e4a8aaceda", "filename": "src/test/ui/const-generics/defaults/mismatch.stderr", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/c9562fd2d0cac144835e552f299c3a28e0a29ba6/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fmismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c9562fd2d0cac144835e552f299c3a28e0a29ba6/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fmismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fmismatch.stderr?ref=c9562fd2d0cac144835e552f299c3a28e0a29ba6", "patch": "@@ -1,51 +1,51 @@\n error[E0308]: mismatched types\n-  --> $DIR/mismatch.rs:11:26\n+  --> $DIR/mismatch.rs:11:28\n    |\n-LL |   let e: Example::<13> = ();\n-   |          -------------   ^^ expected struct `Example`, found `()`\n-   |          |\n-   |          expected due to this\n+LL |     let e: Example::<13> = ();\n+   |            -------------   ^^ expected struct `Example`, found `()`\n+   |            |\n+   |            expected due to this\n \n error[E0308]: mismatched types\n-  --> $DIR/mismatch.rs:13:32\n+  --> $DIR/mismatch.rs:13:34\n    |\n-LL |   let e: Example2::<u32, 13> = ();\n-   |          -------------------   ^^ expected struct `Example2`, found `()`\n-   |          |\n-   |          expected due to this\n+LL |     let e: Example2::<u32, 13> = ();\n+   |            -------------------   ^^ expected struct `Example2`, found `()`\n+   |            |\n+   |            expected due to this\n    |\n    = note: expected struct `Example2`\n            found unit type `()`\n \n error[E0308]: mismatched types\n-  --> $DIR/mismatch.rs:15:32\n+  --> $DIR/mismatch.rs:15:34\n    |\n-LL |   let e: Example3::<13, u32> = ();\n-   |          -------------------   ^^ expected struct `Example3`, found `()`\n-   |          |\n-   |          expected due to this\n+LL |     let e: Example3::<13, u32> = ();\n+   |            -------------------   ^^ expected struct `Example3`, found `()`\n+   |            |\n+   |            expected due to this\n    |\n    = note: expected struct `Example3`\n            found unit type `()`\n \n error[E0308]: mismatched types\n-  --> $DIR/mismatch.rs:17:26\n+  --> $DIR/mismatch.rs:17:28\n    |\n-LL |   let e: Example3::<7> = ();\n-   |          -------------   ^^ expected struct `Example3`, found `()`\n-   |          |\n-   |          expected due to this\n+LL |     let e: Example3::<7> = ();\n+   |            -------------   ^^ expected struct `Example3`, found `()`\n+   |            |\n+   |            expected due to this\n    |\n    = note: expected struct `Example3<7_usize>`\n            found unit type `()`\n \n error[E0308]: mismatched types\n-  --> $DIR/mismatch.rs:21:26\n+  --> $DIR/mismatch.rs:21:28\n    |\n-LL |   let e: Example4::<7> = ();\n-   |          -------------   ^^ expected struct `Example4`, found `()`\n-   |          |\n-   |          expected due to this\n+LL |     let e: Example4::<7> = ();\n+   |            -------------   ^^ expected struct `Example4`, found `()`\n+   |            |\n+   |            expected due to this\n \n error: aborting due to 5 previous errors\n "}, {"sha": "b58dee0712a767826502e5e7e6a5ca8feea7e094", "filename": "src/test/ui/const-generics/defaults/needs-feature.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9562fd2d0cac144835e552f299c3a28e0a29ba6/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fneeds-feature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9562fd2d0cac144835e552f299c3a28e0a29ba6/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fneeds-feature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fneeds-feature.rs?ref=c9562fd2d0cac144835e552f299c3a28e0a29ba6", "patch": "@@ -10,5 +10,5 @@ struct A<const N: usize, T=u32>(T);\n //[min]~^ ERROR type parameters must be declared prior\n \n fn main() {\n-  let _: A<3> = A(0);\n+    let _: A<3> = A(0);\n }"}, {"sha": "cb66c7769bb23b263444407daa9cbcd405bb60de", "filename": "src/test/ui/const-generics/defaults/simple-defaults.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c9562fd2d0cac144835e552f299c3a28e0a29ba6/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fsimple-defaults.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9562fd2d0cac144835e552f299c3a28e0a29ba6/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fsimple-defaults.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fsimple-defaults.rs?ref=c9562fd2d0cac144835e552f299c3a28e0a29ba6", "patch": "@@ -6,12 +6,12 @@\n #![allow(dead_code)]\n \n struct FixedOutput<'a, const N: usize, T=u32> {\n-  //[min]~^ ERROR type parameters must be declared prior to const parameters\n-  out: &'a [T; N],\n+    //[min]~^ ERROR type parameters must be declared prior to const parameters\n+    out: &'a [T; N],\n }\n \n trait FixedOutputter {\n-  fn out(&self) -> FixedOutput<'_, 10>;\n+    fn out(&self) -> FixedOutput<'_, 10>;\n }\n \n fn main() {}"}]}