{"sha": "a4e97f5a2b68939c503662369b1f02c478768e6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0ZTk3ZjVhMmI2ODkzOWM1MDM2NjIzNjliMWYwMmM0Nzg3NjhlNmQ=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-01-06T15:57:34Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-01-06T21:53:09Z"}, "message": "Show types when hovering patterns as well", "tree": {"sha": "2a47241c2a73fabb903157dd5cf71671df013980", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a47241c2a73fabb903157dd5cf71671df013980"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4e97f5a2b68939c503662369b1f02c478768e6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4e97f5a2b68939c503662369b1f02c478768e6d", "html_url": "https://github.com/rust-lang/rust/commit/a4e97f5a2b68939c503662369b1f02c478768e6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4e97f5a2b68939c503662369b1f02c478768e6d/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31c1999505ccb51584dee45fb9fa1ffe16b1608e", "url": "https://api.github.com/repos/rust-lang/rust/commits/31c1999505ccb51584dee45fb9fa1ffe16b1608e", "html_url": "https://github.com/rust-lang/rust/commit/31c1999505ccb51584dee45fb9fa1ffe16b1608e"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "ba1fb9beb990f592bd05ebfaeea14f7ef7eb0d34", "filename": "crates/ra_analysis/src/hover.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a4e97f5a2b68939c503662369b1f02c478768e6d/crates%2Fra_analysis%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4e97f5a2b68939c503662369b1f02c478768e6d/crates%2Fra_analysis%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fhover.rs?ref=a4e97f5a2b68939c503662369b1f02c478768e6d", "patch": "@@ -3,7 +3,7 @@ use ra_editor::find_node_at_offset;\n use ra_syntax::{\n     AstNode, SyntaxNode,\n     ast::{self, NameOwner},\n-    algo::{find_covering_node, visit::{visitor, Visitor}},\n+    algo::{find_covering_node, find_leaf_at_offset, visit::{visitor, Visitor}},\n };\n \n use crate::{db::RootDatabase, RangeInfo, FilePosition, FileRange, NavigationTarget};\n@@ -26,13 +26,17 @@ pub(crate) fn hover(\n         }\n     }\n     if range.is_none() {\n-        let expr: ast::Expr = ctry!(find_node_at_offset(file.syntax(), position.offset));\n+        let node = find_leaf_at_offset(file.syntax(), position.offset).find_map(|leaf| {\n+            leaf.ancestors()\n+                .find(|n| ast::Expr::cast(*n).is_some() || ast::Pat::cast(*n).is_some())\n+        });\n+        let node = ctry!(node);\n         let frange = FileRange {\n             file_id: position.file_id,\n-            range: expr.syntax().range(),\n+            range: node.range(),\n         };\n         res.extend(type_of(db, frange)?);\n-        range = Some(expr.syntax().range());\n+        range = Some(node.range());\n     };\n \n     let range = ctry!(range);\n@@ -192,6 +196,13 @@ mod tests {\n         assert_eq!(hover.info, \"i32\");\n     }\n \n+    #[test]\n+    fn hover_for_local_variable_pat() {\n+        let (analysis, position) = single_file_with_position(\"fn func(fo<|>o: i32) {}\");\n+        let hover = analysis.hover(position).unwrap().unwrap();\n+        assert_eq!(hover.info, \"i32\");\n+    }\n+\n     #[test]\n     fn test_type_of_for_function() {\n         let (analysis, range) = single_file_with_range("}]}