{"sha": "9b81dbfef3322ea2c05fe92a2b7cc6bbecbc33fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliODFkYmZlZjMzMjJlYTJjMDVmZTkyYTJiN2NjNmJiZWNiYzMzZmU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-06-03T06:55:32Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-06-03T06:57:32Z"}, "message": "cargo: Require hexidecimals in uuids", "tree": {"sha": "7ade36d0c97bde237a9cd314ba49fe79ed3de63b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ade36d0c97bde237a9cd314ba49fe79ed3de63b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b81dbfef3322ea2c05fe92a2b7cc6bbecbc33fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b81dbfef3322ea2c05fe92a2b7cc6bbecbc33fe", "html_url": "https://github.com/rust-lang/rust/commit/9b81dbfef3322ea2c05fe92a2b7cc6bbecbc33fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b81dbfef3322ea2c05fe92a2b7cc6bbecbc33fe/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fbd5ac0492235f98262182f4dd98c5734ffdc61", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fbd5ac0492235f98262182f4dd98c5734ffdc61", "html_url": "https://github.com/rust-lang/rust/commit/8fbd5ac0492235f98262182f4dd98c5734ffdc61"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "625a494b3f9a8981e3542da04db734c5814df0ad", "filename": "src/cargo/cargo.rs", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9b81dbfef3322ea2c05fe92a2b7cc6bbecbc33fe/src%2Fcargo%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b81dbfef3322ea2c05fe92a2b7cc6bbecbc33fe/src%2Fcargo%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo%2Fcargo.rs?ref=9b81dbfef3322ea2c05fe92a2b7cc6bbecbc33fe", "patch": "@@ -107,7 +107,18 @@ fn is_uuid(id: str) -> bool {\n     let parts = str::split_str(id, \"-\");\n     if vec::len(parts) == 5u {\n         let mut correct = 0u;\n-        vec::iteri(parts) { |i, part|\n+        for vec::eachi(parts) { |i, part|\n+\n+            if !part.all(is_hex_digit) {\n+                ret false;\n+            }\n+\n+            fn is_hex_digit(ch: char) -> bool {\n+                ('0' <= ch && ch <= '9') ||\n+                    ('a' <= ch && ch <= 'f') ||\n+                    ('A' <= ch && ch <= 'F')\n+            }\n+\n             alt i {\n                 0u {\n                     if str::len(part) == 8u {\n@@ -131,17 +142,18 @@ fn is_uuid(id: str) -> bool {\n             ret true;\n         }\n     }\n-    false\n+    ret false;\n }\n \n #[test]\n fn test_is_uuid() {\n-    assert is_uuid(\"aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa\");\n-    assert is_uuid(\"AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA\");\n-    assert is_uuid(\"0AAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAA0\");\n-    assert !is_uuid(\"aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa\");\n+    assert is_uuid(\"aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaafAF09\");\n     assert !is_uuid(\"aaaaaaaa-aaaa-aaaa-aaaaa-aaaaaaaaaaaa\");\n     assert !is_uuid(\"\");\n+    assert !is_uuid(\"aaaaaaaa-aaa -aaaa-aaaa-aaaaaaaaaaaa\");\n+    assert !is_uuid(\"aaaaaaaa-aaa!-aaaa-aaaa-aaaaaaaaaaaa\");\n+    assert !is_uuid(\"aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa-a\");\n+    assert !is_uuid(\"aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa\u0e1b\");\n }\n \n // FIXME: implement URI/URL parsing so we don't have to resort to weak checks"}]}