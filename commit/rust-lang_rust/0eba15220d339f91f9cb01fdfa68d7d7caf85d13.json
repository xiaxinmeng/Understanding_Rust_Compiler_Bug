{"sha": "0eba15220d339f91f9cb01fdfa68d7d7caf85d13", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlYmExNTIyMGQzMzlmOTFmOWNiMDFmZGZhNjhkN2Q3Y2FmODVkMTM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-22T06:54:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-22T06:54:51Z"}, "message": "Rollup merge of #72304 - petrochenkov:sgxunwind, r=nikomatsakis,jethrogb,dingelish\n\nrustc_target: Avoid an inappropriate use of `post_link_objects`\n\nIt isn't supposed to be used for linking libraries.\nAlso linking libunwind unconditionally (and not together with the `src/libunwind` crate) is suspicious.\n\n@jethrogb @VardhanThigle\nCould you verify that it works as expected?", "tree": {"sha": "4e41547e5b4598e7a9587938147069a076be9e94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e41547e5b4598e7a9587938147069a076be9e94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0eba15220d339f91f9cb01fdfa68d7d7caf85d13", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJex3c7CRBK7hj4Ov3rIwAAdHIIADkfwaGCy5yTKnrIDo8ICjaC\n74mtswJgSdgjDBKzQDavmVAjazBs7JsJesheV5/gumYEJhxR4SmTu3SqsClVdCfN\nBQSW6IggihheyZ35jcvGxxIopqNs9vTmuwtjN0evpGhnMHnwUr05c/+tg4GWa1Rn\nBIL4K9DoPcqJdRRlNiNNorVJcDWh8LKj1IsRwVEbFbx2cGt8S+quDeW9Tuz/ERQb\npeCQjvw7jxhI6YdCY2ChYBMvSiRv81NtNtXifG6PgKa7cJXIeEzvfRtgcsFnmJt1\nlRQe7e1SV1QG5Qar0TlUesUwzlfaFiht2MkcGtIvNYGypd8iplm5qI0VNh9qy/4=\n=Ewej\n-----END PGP SIGNATURE-----\n", "payload": "tree 4e41547e5b4598e7a9587938147069a076be9e94\nparent 715f1e84787b0e7a1d8b751eeece53f1afb848b4\nparent ed1297c92a77997178ad7aadb9d0cc087d15e0af\nauthor Ralf Jung <post@ralfj.de> 1590130491 +0200\ncommitter GitHub <noreply@github.com> 1590130491 +0200\n\nRollup merge of #72304 - petrochenkov:sgxunwind, r=nikomatsakis,jethrogb,dingelish\n\nrustc_target: Avoid an inappropriate use of `post_link_objects`\n\nIt isn't supposed to be used for linking libraries.\nAlso linking libunwind unconditionally (and not together with the `src/libunwind` crate) is suspicious.\n\n@jethrogb @VardhanThigle\nCould you verify that it works as expected?\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0eba15220d339f91f9cb01fdfa68d7d7caf85d13", "html_url": "https://github.com/rust-lang/rust/commit/0eba15220d339f91f9cb01fdfa68d7d7caf85d13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0eba15220d339f91f9cb01fdfa68d7d7caf85d13/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "715f1e84787b0e7a1d8b751eeece53f1afb848b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/715f1e84787b0e7a1d8b751eeece53f1afb848b4", "html_url": "https://github.com/rust-lang/rust/commit/715f1e84787b0e7a1d8b751eeece53f1afb848b4"}, {"sha": "ed1297c92a77997178ad7aadb9d0cc087d15e0af", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed1297c92a77997178ad7aadb9d0cc087d15e0af", "html_url": "https://github.com/rust-lang/rust/commit/ed1297c92a77997178ad7aadb9d0cc087d15e0af"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "475a33af29c793a3f7a69a09db2dda9e37ea6a8a", "filename": "src/librustc_target/spec/x86_64_fortanix_unknown_sgx.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0eba15220d339f91f9cb01fdfa68d7d7caf85d13/src%2Flibrustc_target%2Fspec%2Fx86_64_fortanix_unknown_sgx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eba15220d339f91f9cb01fdfa68d7d7caf85d13/src%2Flibrustc_target%2Fspec%2Fx86_64_fortanix_unknown_sgx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_fortanix_unknown_sgx.rs?ref=0eba15220d339f91f9cb01fdfa68d7d7caf85d13", "patch": "@@ -1,6 +1,6 @@\n use std::iter;\n \n-use super::{crt_objects, LinkerFlavor, LldFlavor, PanicStrategy, Target, TargetOptions};\n+use super::{LinkerFlavor, LldFlavor, PanicStrategy, Target, TargetOptions};\n \n pub fn target() -> Result<Target, String> {\n     const PRE_LINK_ARGS: &[&str] = &[\n@@ -68,8 +68,6 @@ pub fn target() -> Result<Target, String> {\n             PRE_LINK_ARGS.iter().cloned().map(String::from).collect(),\n         ))\n         .collect(),\n-        // FIXME: libunwind is certainly not a CRT object, use some other option instead.\n-        post_link_objects: crt_objects::all(\"libunwind.a\"),\n         override_export_symbols: Some(EXPORT_SYMBOLS.iter().cloned().map(String::from).collect()),\n         relax_elf_relocations: true,\n         ..Default::default()"}, {"sha": "cc025da1af5557d7a74cee57ddbfb1f35a04c888", "filename": "src/libunwind/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0eba15220d339f91f9cb01fdfa68d7d7caf85d13/src%2Flibunwind%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eba15220d339f91f9cb01fdfa68d7d7caf85d13/src%2Flibunwind%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibunwind%2Flib.rs?ref=0eba15220d339f91f9cb01fdfa68d7d7caf85d13", "patch": "@@ -27,3 +27,7 @@ extern \"C\" {}\n #[link(name = \"gcc_eh\", kind = \"static-nobundle\", cfg(target_feature = \"crt-static\"))]\n #[link(name = \"gcc_s\", cfg(not(target_feature = \"crt-static\")))]\n extern \"C\" {}\n+\n+#[cfg(all(target_vendor = \"fortanix\", target_env = \"sgx\"))]\n+#[link(name = \"unwind\", kind = \"static-nobundle\")]\n+extern \"C\" {}"}]}