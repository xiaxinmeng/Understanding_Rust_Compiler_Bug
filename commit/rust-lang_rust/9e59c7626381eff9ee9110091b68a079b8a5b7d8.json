{"sha": "9e59c7626381eff9ee9110091b68a079b8a5b7d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllNTljNzYyNjM4MWVmZjllZTkxMTAwOTFiNjhhMDc5YjhhNWI3ZDg=", "commit": {"author": {"name": "root", "email": "root@localhost", "date": "2014-07-17T22:59:09Z"}, "committer": {"name": "root", "email": "root@localhost", "date": "2014-07-17T22:59:09Z"}, "message": "Add more tests for str Chars iterator\n\nTest iterating (decoding) every codepoint.", "tree": {"sha": "d581d239dbebfa1c5626b0da97563ab6c58d8b2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d581d239dbebfa1c5626b0da97563ab6c58d8b2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e59c7626381eff9ee9110091b68a079b8a5b7d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e59c7626381eff9ee9110091b68a079b8a5b7d8", "html_url": "https://github.com/rust-lang/rust/commit/9e59c7626381eff9ee9110091b68a079b8a5b7d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e59c7626381eff9ee9110091b68a079b8a5b7d8/comments", "author": {"login": "invalid-email-address", "id": 148100, "node_id": "MDQ6VXNlcjE0ODEwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/148100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/invalid-email-address", "html_url": "https://github.com/invalid-email-address", "followers_url": "https://api.github.com/users/invalid-email-address/followers", "following_url": "https://api.github.com/users/invalid-email-address/following{/other_user}", "gists_url": "https://api.github.com/users/invalid-email-address/gists{/gist_id}", "starred_url": "https://api.github.com/users/invalid-email-address/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/invalid-email-address/subscriptions", "organizations_url": "https://api.github.com/users/invalid-email-address/orgs", "repos_url": "https://api.github.com/users/invalid-email-address/repos", "events_url": "https://api.github.com/users/invalid-email-address/events{/privacy}", "received_events_url": "https://api.github.com/users/invalid-email-address/received_events", "type": "User", "site_admin": false}, "committer": {"login": "invalid-email-address", "id": 148100, "node_id": "MDQ6VXNlcjE0ODEwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/148100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/invalid-email-address", "html_url": "https://github.com/invalid-email-address", "followers_url": "https://api.github.com/users/invalid-email-address/followers", "following_url": "https://api.github.com/users/invalid-email-address/following{/other_user}", "gists_url": "https://api.github.com/users/invalid-email-address/gists{/gist_id}", "starred_url": "https://api.github.com/users/invalid-email-address/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/invalid-email-address/subscriptions", "organizations_url": "https://api.github.com/users/invalid-email-address/orgs", "repos_url": "https://api.github.com/users/invalid-email-address/repos", "events_url": "https://api.github.com/users/invalid-email-address/events{/privacy}", "received_events_url": "https://api.github.com/users/invalid-email-address/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42357d772b8a3a1ce4395deeac0a5cf1f66e951d", "url": "https://api.github.com/repos/rust-lang/rust/commits/42357d772b8a3a1ce4395deeac0a5cf1f66e951d", "html_url": "https://github.com/rust-lang/rust/commit/42357d772b8a3a1ce4395deeac0a5cf1f66e951d"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "b0c8f17eecc74041f79cbe2f706abf151b9db24f", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/9e59c7626381eff9ee9110091b68a079b8a5b7d8/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e59c7626381eff9ee9110091b68a079b8a5b7d8/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=9e59c7626381eff9ee9110091b68a079b8a5b7d8", "patch": "@@ -808,6 +808,7 @@ impl OwnedStr for String {\n #[cfg(test)]\n mod tests {\n     use std::iter::AdditiveIterator;\n+    use std::iter::range;\n     use std::default::Default;\n     use std::char::Char;\n     use std::clone::Clone;\n@@ -1610,6 +1611,30 @@ mod tests {\n         assert_eq!(pos, v.len());\n     }\n \n+    #[test]\n+    fn test_chars_decoding() {\n+        let mut bytes = [0u8, ..4];\n+        for c in range(0u32, 0x110000).filter_map(|c| ::core::char::from_u32(c)) {\n+            let len = c.encode_utf8(bytes);\n+            let s = ::core::str::from_utf8(bytes.slice_to(len)).unwrap();\n+            if Some(c) != s.chars().next() {\n+                fail!(\"character {:x}={} does not decode correctly\", c as u32, c);\n+            }\n+        }\n+    }\n+\n+    #[test]\n+    fn test_chars_rev_decoding() {\n+        let mut bytes = [0u8, ..4];\n+        for c in range(0u32, 0x110000).filter_map(|c| ::core::char::from_u32(c)) {\n+            let len = c.encode_utf8(bytes);\n+            let s = ::core::str::from_utf8(bytes.slice_to(len)).unwrap();\n+            if Some(c) != s.chars().rev().next() {\n+                fail!(\"character {:x}={} does not decode correctly\", c as u32, c);\n+            }\n+        }\n+    }\n+\n     #[test]\n     fn test_iterator_clone() {\n         let s = \"\u0e28\u0e44\u0e17\u0e22\u4e2d\u534eVi\u1ec7t Nam\";"}]}