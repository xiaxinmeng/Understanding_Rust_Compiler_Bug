{"sha": "774ea808be4bcab4e605635b383ce4c5c9d7742f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3NGVhODA4YmU0YmNhYjRlNjA1NjM1YjM4M2NlNGM1YzlkNzc0MmY=", "commit": {"author": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2019-10-03T13:28:04Z"}, "committer": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2019-10-04T12:47:43Z"}, "message": "replace GeneratorSubsts inside related types", "tree": {"sha": "0bbbe46f4b1c42799e8b1c1e23d94755c98f1c08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0bbbe46f4b1c42799e8b1c1e23d94755c98f1c08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/774ea808be4bcab4e605635b383ce4c5c9d7742f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/774ea808be4bcab4e605635b383ce4c5c9d7742f", "html_url": "https://github.com/rust-lang/rust/commit/774ea808be4bcab4e605635b383ce4c5c9d7742f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/774ea808be4bcab4e605635b383ce4c5c9d7742f/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa7a87be638e4bcf0403f56413e6dbf9892e5582", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa7a87be638e4bcf0403f56413e6dbf9892e5582", "html_url": "https://github.com/rust-lang/rust/commit/fa7a87be638e4bcf0403f56413e6dbf9892e5582"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "bd19a002fe8b7bf676e185b527bd5a034eaa574c", "filename": "src/librustc/infer/opaque_types/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/774ea808be4bcab4e605635b383ce4c5c9d7742f/src%2Flibrustc%2Finfer%2Fopaque_types%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/774ea808be4bcab4e605635b383ce4c5c9d7742f/src%2Flibrustc%2Finfer%2Fopaque_types%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fopaque_types%2Fmod.rs?ref=774ea808be4bcab4e605635b383ce4c5c9d7742f", "patch": "@@ -912,7 +912,7 @@ impl TypeFolder<'tcx> for ReverseMapper<'tcx> {\n                         }\n                     }));\n \n-                self.tcx.mk_generator(def_id, ty::GeneratorSubsts { substs }, movability)\n+                self.tcx.mk_generator(def_id, substs, movability)\n             }\n \n             ty::Param(..) => {"}, {"sha": "2b5212cb7efaa5ca5c095da678a6f079845fd998", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/774ea808be4bcab4e605635b383ce4c5c9d7742f/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/774ea808be4bcab4e605635b383ce4c5c9d7742f/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=774ea808be4bcab4e605635b383ce4c5c9d7742f", "patch": "@@ -15,7 +15,7 @@ use crate::ty::layout::VariantIdx;\n use crate::ty::print::{FmtPrinter, Printer};\n use crate::ty::subst::{Subst, SubstsRef};\n use crate::ty::{\n-    self, AdtDef, CanonicalUserTypeAnnotations, GeneratorSubsts, Region, Ty, TyCtxt,\n+    self, AdtDef, CanonicalUserTypeAnnotations, Region, Ty, TyCtxt,\n     UserTypeAnnotationIndex,\n };\n \n@@ -2189,7 +2189,7 @@ pub enum AggregateKind<'tcx> {\n     Adt(&'tcx AdtDef, VariantIdx, SubstsRef<'tcx>, Option<UserTypeAnnotationIndex>, Option<usize>),\n \n     Closure(DefId, SubstsRef<'tcx>),\n-    Generator(DefId, GeneratorSubsts<'tcx>, hir::GeneratorMovability),\n+    Generator(DefId, SubstsRef<'tcx>, hir::GeneratorMovability),\n }\n \n #[derive(Copy, Clone, Debug, PartialEq, Eq, RustcEncodable, RustcDecodable, HashStable)]"}, {"sha": "d96330bf0a9b4680b88b16328cea577577d4749b", "filename": "src/librustc/traits/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/774ea808be4bcab4e605635b383ce4c5c9d7742f/src%2Flibrustc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/774ea808be4bcab4e605635b383ce4c5c9d7742f/src%2Flibrustc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fmod.rs?ref=774ea808be4bcab4e605635b383ce4c5c9d7742f", "patch": "@@ -610,7 +610,7 @@ pub struct VtableImplData<'tcx, N> {\n #[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, HashStable)]\n pub struct VtableGeneratorData<'tcx, N> {\n     pub generator_def_id: DefId,\n-    pub substs: ty::GeneratorSubsts<'tcx>,\n+    pub substs: SubstsRef<'tcx>,\n     /// Nested obligations. This can be non-empty if the generator\n     /// signature contains associated types.\n     pub nested: Vec<N>"}, {"sha": "eb380eb12d8e7545e572748c9858eef24cd13441", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/774ea808be4bcab4e605635b383ce4c5c9d7742f/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/774ea808be4bcab4e605635b383ce4c5c9d7742f/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=774ea808be4bcab4e605635b383ce4c5c9d7742f", "patch": "@@ -29,7 +29,7 @@ use crate::traits;\n use crate::traits::{Clause, Clauses, GoalKind, Goal, Goals};\n use crate::ty::{self, DefIdTree, Ty, TypeAndMut};\n use crate::ty::{TyS, TyKind, List};\n-use crate::ty::{AdtKind, AdtDef, GeneratorSubsts, Region, Const};\n+use crate::ty::{AdtKind, AdtDef, Region, Const};\n use crate::ty::{PolyFnSig, InferTy, ParamTy, ProjectionTy, ExistentialPredicate, Predicate};\n use crate::ty::RegionKind;\n use crate::ty::{TyVar, TyVid, IntVar, IntVid, FloatVar, FloatVid, ConstVid};"}, {"sha": "ce7e1822d9ab5d6bbc09a6a79f795d0045100553", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/774ea808be4bcab4e605635b383ce4c5c9d7742f/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/774ea808be4bcab4e605635b383ce4c5c9d7742f/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=774ea808be4bcab4e605635b383ce4c5c9d7742f", "patch": "@@ -1410,7 +1410,7 @@ impl<'tcx> LayoutCx<'tcx, TyCtxt<'tcx>> {\n         use SavedLocalEligibility::*;\n         let tcx = self.tcx;\n \n-        let subst_field = |ty: Ty<'tcx>| { ty.subst(tcx, substs.substs) };\n+        let subst_field = |ty: Ty<'tcx>| { ty.subst(tcx, substs) };\n \n         let info = tcx.generator_layout(def_id);\n         let (ineligible_locals, assignments) = self.generator_saved_local_eligibility(&info);\n@@ -1429,7 +1429,7 @@ impl<'tcx> LayoutCx<'tcx, TyCtxt<'tcx>> {\n             .map(|local| subst_field(info.field_tys[local]))\n             .map(|ty| tcx.mk_maybe_uninit(ty))\n             .map(|ty| self.layout_of(ty));\n-        let prefix_layouts = substs.prefix_tys(def_id, tcx)\n+        let prefix_layouts = substs.as_generator().prefix_tys(def_id, tcx)\n             .map(|ty| self.layout_of(ty))\n             .chain(iter::once(Ok(discr_layout)))\n             .chain(promoted_layouts)"}, {"sha": "df39d0ccc9eed08eab509f2504669679056ad7c0", "filename": "src/librustc/ty/print/obsolete.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/774ea808be4bcab4e605635b383ce4c5c9d7742f/src%2Flibrustc%2Fty%2Fprint%2Fobsolete.rs", "raw_url": "https://github.com/rust-lang/rust/raw/774ea808be4bcab4e605635b383ce4c5c9d7742f/src%2Flibrustc%2Fty%2Fprint%2Fobsolete.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fprint%2Fobsolete.rs?ref=774ea808be4bcab4e605635b383ce4c5c9d7742f", "patch": "@@ -8,7 +8,7 @@\n use rustc::hir::def_id::DefId;\n use rustc::mir::interpret::ConstValue;\n use rustc::ty::subst::SubstsRef;\n-use rustc::ty::{self, Const, GeneratorSubsts, Instance, Ty, TyCtxt};\n+use rustc::ty::{self, Const, Instance, Ty, TyCtxt};\n use rustc::{bug, hir};\n use std::fmt::Write;\n use std::iter;"}, {"sha": "54b6fbe7c218c542846f6a7ea895a750ac2b9d44", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/774ea808be4bcab4e605635b383ce4c5c9d7742f/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/774ea808be4bcab4e605635b383ce4c5c9d7742f/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=774ea808be4bcab4e605635b383ce4c5c9d7742f", "patch": "@@ -2110,7 +2110,7 @@ impl<'tcx> TyS<'tcx> {\n         match self.kind {\n             TyKind::Adt(adt, _) => Some(adt.variant_range()),\n             TyKind::Generator(def_id, substs, _) =>\n-                Some(substs.assert_generator().variant_range(def_id, tcx)),\n+                Some(substs.as_generator().variant_range(def_id, tcx)),\n             _ => None,\n         }\n     }"}]}