{"sha": "f9c20ce2445d31b777f3d85ee5da08c201a03feb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5YzIwY2UyNDQ1ZDMxYjc3N2YzZDg1ZWU1ZGEwOGMyMDFhMDNmZWI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-08-13T10:18:35Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-08-13T10:18:35Z"}, "message": "Rustup to rustc 1.38.0-nightly (534b42394 2019-08-09)", "tree": {"sha": "cad85f8d1a95fcd9786f6d6b34eb9886fb65426b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cad85f8d1a95fcd9786f6d6b34eb9886fb65426b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9c20ce2445d31b777f3d85ee5da08c201a03feb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9c20ce2445d31b777f3d85ee5da08c201a03feb", "html_url": "https://github.com/rust-lang/rust/commit/f9c20ce2445d31b777f3d85ee5da08c201a03feb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9c20ce2445d31b777f3d85ee5da08c201a03feb/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5459b157ca6be1c9649709b9109c0ff1c698c537", "url": "https://api.github.com/repos/rust-lang/rust/commits/5459b157ca6be1c9649709b9109c0ff1c698c537", "html_url": "https://github.com/rust-lang/rust/commit/5459b157ca6be1c9649709b9109c0ff1c698c537"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "57898212f342a9e6bb8027a1d280cb93e4e283aa", "filename": "src/intrinsics.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f9c20ce2445d31b777f3d85ee5da08c201a03feb/src%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9c20ce2445d31b777f3d85ee5da08c201a03feb/src%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics.rs?ref=f9c20ce2445d31b777f3d85ee5da08c201a03feb", "patch": "@@ -601,6 +601,34 @@ pub fn codegen_intrinsic_call<'a, 'tcx: 'a>(\n                 }\n             }\n         };\n+        uninit, () {\n+            if ret.layout().abi == Abi::Uninhabited {\n+                crate::trap::trap_panic(fx, \"[panic] Called intrinsic::uninit for uninhabited type.\");\n+                return;\n+            }\n+            match ret {\n+                CPlace::NoPlace(_layout) => unreachable!(\"{:?}\", ret),\n+                CPlace::Var(var, layout) => {\n+                    let clif_ty = fx.clif_type(layout.ty).unwrap();\n+                    let val = match clif_ty {\n+                        types::I8 | types::I16 | types::I32 | types::I64 => fx.bcx.ins().iconst(clif_ty, 42),\n+                        types::F32 => {\n+                            let zero = fx.bcx.ins().iconst(types::I32, 0xdeadbeef);\n+                            fx.bcx.ins().bitcast(types::F32, zero)\n+                        }\n+                        types::F64 => {\n+                            let zero = fx.bcx.ins().iconst(types::I64, 0xcafebabedeadbeefu64 as i64);\n+                            fx.bcx.ins().bitcast(types::F64, zero)\n+                        }\n+                        _ => panic!(\"clif_type returned {}\", clif_ty),\n+                    };\n+                    fx.bcx.def_var(mir_var(var), val);\n+                }\n+                CPlace::Addr(_, _, _) | CPlace::Stack(_, _) => {\n+                    // Don't write to `ret`, as the destination memory is already uninitialized.\n+                }\n+            }\n+        };\n         write_bytes, (c dst, v val, v count) {\n             let pointee_ty = dst.layout().ty.builtin_deref(true).unwrap().ty;\n             let pointee_size = fx.layout_of(pointee_ty).size.bytes();"}]}