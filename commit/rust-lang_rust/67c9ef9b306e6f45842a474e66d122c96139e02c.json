{"sha": "67c9ef9b306e6f45842a474e66d122c96139e02c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3YzllZjliMzA2ZTZmNDU4NDJhNDc0ZTY2ZDEyMmM5NjEzOWUwMmM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-02T03:07:19Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-02T03:07:19Z"}, "message": "rustc: Fix memory corruption with ivectors-inside-ivectors by duplicating *first*, and *then* copying subtypes.", "tree": {"sha": "2309120652cb28300e786a2dca8521d9636534de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2309120652cb28300e786a2dca8521d9636534de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67c9ef9b306e6f45842a474e66d122c96139e02c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67c9ef9b306e6f45842a474e66d122c96139e02c", "html_url": "https://github.com/rust-lang/rust/commit/67c9ef9b306e6f45842a474e66d122c96139e02c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67c9ef9b306e6f45842a474e66d122c96139e02c/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d39c59ae4172b18ea022893a09164dcb6debb1c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d39c59ae4172b18ea022893a09164dcb6debb1c0", "html_url": "https://github.com/rust-lang/rust/commit/d39c59ae4172b18ea022893a09164dcb6debb1c0"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "4e930429afe22cf73a0f73b5923a70b87b5ba99c", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/67c9ef9b306e6f45842a474e66d122c96139e02c/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67c9ef9b306e6f45842a474e66d122c96139e02c/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=67c9ef9b306e6f45842a474e66d122c96139e02c", "patch": "@@ -1945,8 +1945,8 @@ fn make_copy_glue(&@block_ctxt cx, ValueRef v, &ty::t t) {\n     if (ty::type_is_boxed(cx.fcx.lcx.ccx.tcx, t)) {\n         bcx = incr_refcnt_of_boxed(cx, cx.build.Load(v)).bcx;\n     } else if (ty::type_is_structural(cx.fcx.lcx.ccx.tcx, t)) {\n-        bcx = iter_structural_ty(cx, v, t, bind copy_ty(_, _, _)).bcx;\n-        bcx = duplicate_heap_parts_if_necessary(bcx, v, t).bcx;\n+        bcx = duplicate_heap_parts_if_necessary(cx, v, t).bcx;\n+        bcx = iter_structural_ty(bcx, v, t, bind copy_ty(_, _, _)).bcx;\n     } else { bcx = cx; }\n     bcx.build.RetVoid();\n }"}]}