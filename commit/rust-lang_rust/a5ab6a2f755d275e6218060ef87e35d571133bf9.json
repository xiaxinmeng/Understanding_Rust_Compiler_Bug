{"sha": "a5ab6a2f755d275e6218060ef87e35d571133bf9", "node_id": "C_kwDOAAsO6NoAKGE1YWI2YTJmNzU1ZDI3NWU2MjE4MDYwZWY4N2UzNWQ1NzExMzNiZjk", "commit": {"author": {"name": "Akshay", "email": "nerdy@peppe.rs", "date": "2022-02-24T09:50:12Z"}, "committer": {"name": "Akshay", "email": "nerdy@peppe.rs", "date": "2022-02-24T09:50:12Z"}, "message": "add `is_slice` method to `hir::Type`", "tree": {"sha": "643757f43e8f23b36110d8be565871377e8b4a5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/643757f43e8f23b36110d8be565871377e8b4a5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5ab6a2f755d275e6218060ef87e35d571133bf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5ab6a2f755d275e6218060ef87e35d571133bf9", "html_url": "https://github.com/rust-lang/rust/commit/a5ab6a2f755d275e6218060ef87e35d571133bf9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5ab6a2f755d275e6218060ef87e35d571133bf9/comments", "author": {"login": "nerdypepper", "id": 23743547, "node_id": "MDQ6VXNlcjIzNzQzNTQ3", "avatar_url": "https://avatars.githubusercontent.com/u/23743547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nerdypepper", "html_url": "https://github.com/nerdypepper", "followers_url": "https://api.github.com/users/nerdypepper/followers", "following_url": "https://api.github.com/users/nerdypepper/following{/other_user}", "gists_url": "https://api.github.com/users/nerdypepper/gists{/gist_id}", "starred_url": "https://api.github.com/users/nerdypepper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nerdypepper/subscriptions", "organizations_url": "https://api.github.com/users/nerdypepper/orgs", "repos_url": "https://api.github.com/users/nerdypepper/repos", "events_url": "https://api.github.com/users/nerdypepper/events{/privacy}", "received_events_url": "https://api.github.com/users/nerdypepper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nerdypepper", "id": 23743547, "node_id": "MDQ6VXNlcjIzNzQzNTQ3", "avatar_url": "https://avatars.githubusercontent.com/u/23743547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nerdypepper", "html_url": "https://github.com/nerdypepper", "followers_url": "https://api.github.com/users/nerdypepper/followers", "following_url": "https://api.github.com/users/nerdypepper/following{/other_user}", "gists_url": "https://api.github.com/users/nerdypepper/gists{/gist_id}", "starred_url": "https://api.github.com/users/nerdypepper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nerdypepper/subscriptions", "organizations_url": "https://api.github.com/users/nerdypepper/orgs", "repos_url": "https://api.github.com/users/nerdypepper/repos", "events_url": "https://api.github.com/users/nerdypepper/events{/privacy}", "received_events_url": "https://api.github.com/users/nerdypepper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f5f4ccfb1fe517278f5c093e55528d23d9cd1c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f5f4ccfb1fe517278f5c093e55528d23d9cd1c7", "html_url": "https://github.com/rust-lang/rust/commit/1f5f4ccfb1fe517278f5c093e55528d23d9cd1c7"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "bd1e8278d5190af3bcbe305875bc593f0fdcf5e7", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a5ab6a2f755d275e6218060ef87e35d571133bf9/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5ab6a2f755d275e6218060ef87e35d571133bf9/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=a5ab6a2f755d275e6218060ef87e35d571133bf9", "patch": "@@ -2507,6 +2507,10 @@ impl Type {\n         matches!(self.ty.kind(Interner), TyKind::Ref(..))\n     }\n \n+    pub fn is_slice(&self) -> bool {\n+        matches!(self.ty.kind(Interner), TyKind::Slice(..))\n+    }\n+\n     pub fn is_usize(&self) -> bool {\n         matches!(self.ty.kind(Interner), TyKind::Scalar(Scalar::Uint(UintTy::Usize)))\n     }"}]}