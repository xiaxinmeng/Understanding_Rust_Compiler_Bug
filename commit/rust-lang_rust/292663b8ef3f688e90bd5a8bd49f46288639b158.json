{"sha": "292663b8ef3f688e90bd5a8bd49f46288639b158", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5MjY2M2I4ZWYzZjY4OGU5MGJkNWE4YmQ0OWY0NjI4ODYzOWIxNTg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-03T01:44:23Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-03T01:44:23Z"}, "message": "rt: Implement 32-bit __morestack for mac", "tree": {"sha": "96b95e961bc052cfe9dca86d5b9d0d87b62e1f5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96b95e961bc052cfe9dca86d5b9d0d87b62e1f5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/292663b8ef3f688e90bd5a8bd49f46288639b158", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/292663b8ef3f688e90bd5a8bd49f46288639b158", "html_url": "https://github.com/rust-lang/rust/commit/292663b8ef3f688e90bd5a8bd49f46288639b158", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/292663b8ef3f688e90bd5a8bd49f46288639b158/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c254936f326061e98414a668d2fd8a7bee01bbb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c254936f326061e98414a668d2fd8a7bee01bbb7", "html_url": "https://github.com/rust-lang/rust/commit/c254936f326061e98414a668d2fd8a7bee01bbb7"}], "stats": {"total": 84, "additions": 63, "deletions": 21}, "files": [{"sha": "519a5ca77119073a8b538328f469e841878471b9", "filename": "src/rt/arch/i386/morestack.S", "status": "modified", "additions": 54, "deletions": 20, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/292663b8ef3f688e90bd5a8bd49f46288639b158/src%2Frt%2Farch%2Fi386%2Fmorestack.S", "raw_url": "https://github.com/rust-lang/rust/raw/292663b8ef3f688e90bd5a8bd49f46288639b158/src%2Frt%2Farch%2Fi386%2Fmorestack.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2Fmorestack.S?ref=292663b8ef3f688e90bd5a8bd49f46288639b158", "patch": "@@ -5,18 +5,24 @@\n // LLVM generates a call to this to allocate more stack space in a function\n // prolog when we run out.\n \n-#if defined(__APPLE__) || defined(_WIN32)\n-#define UPCALL_NEW_STACK        _upcall_new_stack\n-#define UPCALL_DEL_STACK        _upcall_del_stack\n-#define RUST_GET_TASK           _rust_get_task\n-#define UPCALL_CALL_C           _upcall_call_shim_on_c_stack\n+#if defined(__APPLE__)\n+#define RUST_GET_TASK           L_rust_get_task$stub\n+#define UPCALL_CALL_C           L_upcall_call_shim_on_c_stack$stub\n #define MORESTACK               ___morestack\n #else\n+#if defined(__linux__)\n #define UPCALL_NEW_STACK        upcall_new_stack\n #define UPCALL_DEL_STACK        upcall_del_stack\n #define RUST_GET_TASK           rust_get_task\n #define UPCALL_CALL_C           upcall_call_shim_on_c_stack\n #define MORESTACK               __morestack\n+#else\n+#define UPCALL_NEW_STACK        _upcall_new_stack\n+#define UPCALL_DEL_STACK        _upcall_del_stack\n+#define RUST_GET_TASK           _rust_get_task\n+#define UPCALL_CALL_C           _upcall_call_shim_on_c_stack\n+#define MORESTACK               __morestack\n+#endif\n #endif\n \n // FIXME: Future LLVM patches remove these 8 alignment bytes from\n@@ -43,33 +49,41 @@\n \t.type MORESTACK,@function\n #endif\n \n-#if defined(__linux__)\n+#if defined(__linux__) || defined(__APPLE__)\n MORESTACK:\n \n \tpushl %ebp\n \tmovl %esp, %ebp\n \t\n \t// FIXME (1226): main is compiled with the split-stack prologue,\n \t// causing it to call __morestack, so we have to jump back out\n-\tsubl $24,%esp\n+\tsubl $20,%esp\n \tcalll RUST_GET_TASK\n \ttestl %eax,%eax\n \tjz .L$bail\n \n \t// The arguments to rust_new_stack2\n-\tmovl 36(%esp),%eax  // Size of stack arguments\n+\tmovl 32(%esp),%eax  // Size of stack arguments\n \tmovl %eax,16(%esp)\n-\tleal 44+ALIGNMENT(%esp),%eax // Address of stack arguments\n+\tleal 40+ALIGNMENT(%esp),%eax // Address of stack arguments\n \tmovl %eax,12(%esp)\n-\tmovl 32(%esp),%eax // The amount of stack needed\n+\tmovl 28(%esp),%eax // The amount of stack needed\n \tmovl %eax,8(%esp)\n \n+#ifdef __APPLE__\n+\tcall 1f\n+1:\tpopl %ebx\n+\tmovl L_upcall_new_stack$non_lazy_ptr-1b(%ebx),%ecx\n+\tmovl %ecx, 4(%esp)\n+#else\n \tmovl $UPCALL_NEW_STACK,4(%esp)\n+#endif\n+\n \tleal 8(%esp), %eax\n \tmovl %eax,(%esp)\n \tcall UPCALL_CALL_C\n \n-\tmovl 28(%esp),%edx          // Grab the return pointer.\n+\tmovl 24(%esp),%edx          // Grab the return pointer.\n \taddl $RETURN_OFFSET,%edx    // Skip past the `add esp,4` and the `ret`.\n \n \tmovl %eax,%esp          // Switch stacks.\n@@ -81,7 +95,15 @@ MORESTACK:\n \t// Switch back to the rust stack\n \tmovl %ebp, %esp\n \n+#ifdef __APPLE__\n+\tcall 1f\n+1:\tpopl %ebx\n+\tmovl L_upcall_del_stack$non_lazy_ptr-1b(%ebx),%ecx\n+\tpushl %ecx\n+#else\n \tpushl $UPCALL_DEL_STACK\n+#endif\n+\n \tpushl $0\n \tcall UPCALL_CALL_C\n \n@@ -90,10 +112,10 @@ MORESTACK:\n \tretl $8\n \n .L$bail:\n-\tmovl 28(%esp),%edx\n+\tmovl 24(%esp),%edx\n \taddl $RETURN_OFFSET,%edx\n \t\n-\taddl $24, %esp\n+\taddl $20, %esp\n \tpopl %ebp\n \taddl $4+8+ALIGNMENT,%esp\n \t\n@@ -107,13 +129,25 @@ MORESTACK:\n \n #ifdef __APPLE__\n \n-\t\t.section\t__IMPORT,__pointers,non_lazy_symbol_pointers\n-rust_new_stack_sym:\n-    .indirect_symbol RUST_NEW_STACK\n-    .long 0\n-rust_del_stack_sym:\n-    .indirect_symbol RUST_DEL_STACK\n-    .long 0\n+\t.section __IMPORT,__pointers,non_lazy_symbol_pointers\n+L_upcall_new_stack$non_lazy_ptr:\n+\t.indirect_symbol _upcall_new_stack\n+\t.long 0\n+L_upcall_del_stack$non_lazy_ptr:\n+\t.indirect_symbol _upcall_del_stack\n+\t.long 0\n+\n+.section __IMPORT,__jump_table,symbol_stubs,pure_instructions+self_modifying_code,5\n+\n+\t// Linker will replace the hlts (the ascii) with jmp\n+L_rust_get_task$stub:\n+\t.indirect_symbol _rust_get_task\n+\t.ascii\t \"\\364\\364\\364\\364\\364\"\n+\n+L_upcall_call_shim_on_c_stack$stub:\n+\t.indirect_symbol _upcall_call_shim_on_c_stack\n+\t.ascii\t \"\\364\\364\\364\\364\\364\"\n \n+\t.subsections_via_symbols\n #endif\n "}, {"sha": "153225e8187b622e9cfcc9fd5f9cdf9f714400bf", "filename": "src/rt/arch/i386/record_sp.S", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/292663b8ef3f688e90bd5a8bd49f46288639b158/src%2Frt%2Farch%2Fi386%2Frecord_sp.S", "raw_url": "https://github.com/rust-lang/rust/raw/292663b8ef3f688e90bd5a8bd49f46288639b158/src%2Frt%2Farch%2Fi386%2Frecord_sp.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2Frecord_sp.S?ref=292663b8ef3f688e90bd5a8bd49f46288639b158", "patch": "@@ -14,6 +14,14 @@ RECORD_SP:\n \tmovl %eax, %gs:48\n \tret\n #else\n+#if defined(__APPLE__)\n RECORD_SP:\n+\tmovl $0x48+90*4, %eax\n+\tmovl 4(%esp), %ecx\n+\tmovl %ecx, %gs:(%eax)\n \tret\n-#endif\n\\ No newline at end of file\n+#else\n+RECORD_SP:\n+\tret\n+#endif\n+#endif"}]}