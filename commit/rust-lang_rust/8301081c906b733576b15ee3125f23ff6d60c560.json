{"sha": "8301081c906b733576b15ee3125f23ff6d60c560", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzMDEwODFjOTA2YjczMzU3NmIxNWVlMzEyNWYyM2ZmNmQ2MGM1NjA=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-07-29T14:30:39Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-08-04T09:02:00Z"}, "message": "Fix primitive blanket impls not showing up", "tree": {"sha": "109fab06bc57bc9f0c7f199db7cf68d9ff9a06ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/109fab06bc57bc9f0c7f199db7cf68d9ff9a06ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8301081c906b733576b15ee3125f23ff6d60c560", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8301081c906b733576b15ee3125f23ff6d60c560", "html_url": "https://github.com/rust-lang/rust/commit/8301081c906b733576b15ee3125f23ff6d60c560", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8301081c906b733576b15ee3125f23ff6d60c560/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4aba7de2a77a95e2032eaf438e2e11b8e1a5eb82", "url": "https://api.github.com/repos/rust-lang/rust/commits/4aba7de2a77a95e2032eaf438e2e11b8e1a5eb82", "html_url": "https://github.com/rust-lang/rust/commit/4aba7de2a77a95e2032eaf438e2e11b8e1a5eb82"}], "stats": {"total": 40, "additions": 35, "deletions": 5}, "files": [{"sha": "ade65ec99b14f6863f1f6c5dfec19dafdf7f3b57", "filename": "src/librustdoc/clean/blanket_impl.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8301081c906b733576b15ee3125f23ff6d60c560/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8301081c906b733576b15ee3125f23ff6d60c560/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs?ref=8301081c906b733576b15ee3125f23ff6d60c560", "patch": "@@ -65,9 +65,9 @@ impl<'a, 'tcx, 'rcx> BlanketImplFinder <'a, 'tcx, 'rcx> {\n             );\n             return impls;\n         }\n-        if self.cx.access_levels.borrow().is_doc_reachable(def_id) {\n+        let ty = self.cx.tcx.type_of(def_id);\n+        if self.cx.access_levels.borrow().is_doc_reachable(def_id) || ty.is_primitive() {\n             let generics = self.cx.tcx.generics_of(def_id);\n-            let ty = self.cx.tcx.type_of(def_id);\n             let real_name = name.clone().map(|name| Ident::from_str(&name));\n             let param_env = self.cx.tcx.param_env(def_id);\n             for &trait_def_id in self.cx.all_traits.iter() {\n@@ -84,8 +84,8 @@ impl<'a, 'tcx, 'rcx> BlanketImplFinder <'a, 'tcx, 'rcx> {\n                         let trait_ref = infcx.tcx.impl_trait_ref(impl_def_id)\n                                                  .expect(\"Cannot get impl trait\");\n \n-                        match infcx.tcx.type_of(impl_def_id).sty {\n-                            ::rustc::ty::TypeVariants::TyParam(_) => {},\n+                        match trait_ref.self_ty().sty {\n+                            ty::TypeVariants::TyParam(_) => {},\n                             _ => return,\n                         }\n \n@@ -153,7 +153,6 @@ impl<'a, 'tcx, 'rcx> BlanketImplFinder <'a, 'tcx, 'rcx> {\n                                                                 .clean(self.cx)),\n                                 }),\n                             });\n-                            debug!(\"{:?} => {}\", trait_ref, may_apply);\n                         }\n                     });\n                 });"}, {"sha": "b4351b8268c8b8afcef503df0df672ad81e3d9c8", "filename": "src/test/rustdoc/primitive-generic-impl.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8301081c906b733576b15ee3125f23ff6d60c560/src%2Ftest%2Frustdoc%2Fprimitive-generic-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8301081c906b733576b15ee3125f23ff6d60c560/src%2Ftest%2Frustdoc%2Fprimitive-generic-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fprimitive-generic-impl.rs?ref=8301081c906b733576b15ee3125f23ff6d60c560", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name = \"foo\"]\n+\n+// we need to reexport something from libstd so that `all_trait_implementations` is called.\n+pub use std::string::String;\n+\n+include!(\"primitive/primitive-generic-impl.rs\");\n+\n+// @has foo/primitive.i32.html '//h3[@id=\"impl-ToString\"]//code' 'impl<T> ToString for T'"}, {"sha": "1ac1fc95338af9bf23b7d9c5296870420ad1a667", "filename": "src/test/rustdoc/primitive/primitive-generic-impl.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8301081c906b733576b15ee3125f23ff6d60c560/src%2Ftest%2Frustdoc%2Fprimitive%2Fprimitive-generic-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8301081c906b733576b15ee3125f23ff6d60c560/src%2Ftest%2Frustdoc%2Fprimitive%2Fprimitive-generic-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fprimitive%2Fprimitive-generic-impl.rs?ref=8301081c906b733576b15ee3125f23ff6d60c560", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[doc(primitive = \"i32\")]\n+/// Some useless docs, wouhou!\n+mod i32 {}"}]}