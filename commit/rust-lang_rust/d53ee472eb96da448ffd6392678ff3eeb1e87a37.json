{"sha": "d53ee472eb96da448ffd6392678ff3eeb1e87a37", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1M2VlNDcyZWI5NmRhNDQ4ZmZkNjM5MjY3OGZmM2VlYjFlODdhMzc=", "commit": {"author": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-01-31T20:53:30Z"}, "committer": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-02-11T21:53:52Z"}, "message": "Remove references to `wrapping` methods", "tree": {"sha": "982f02a222d747245b5041aafc5b5084bd3a0e80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/982f02a222d747245b5041aafc5b5084bd3a0e80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d53ee472eb96da448ffd6392678ff3eeb1e87a37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d53ee472eb96da448ffd6392678ff3eeb1e87a37", "html_url": "https://github.com/rust-lang/rust/commit/d53ee472eb96da448ffd6392678ff3eeb1e87a37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d53ee472eb96da448ffd6392678ff3eeb1e87a37/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "768470b901eb9b8a06ccc56d3f85d18dd7ac6b69", "url": "https://api.github.com/repos/rust-lang/rust/commits/768470b901eb9b8a06ccc56d3f85d18dd7ac6b69", "html_url": "https://github.com/rust-lang/rust/commit/768470b901eb9b8a06ccc56d3f85d18dd7ac6b69"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "f38e0d6486275e6a9c0849ae1c86f0cdacee2d7f", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d53ee472eb96da448ffd6392678ff3eeb1e87a37/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d53ee472eb96da448ffd6392678ff3eeb1e87a37/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=d53ee472eb96da448ffd6392678ff3eeb1e87a37", "patch": "@@ -1738,16 +1738,16 @@ extern \"rust-intrinsic\" {\n     /// y < 0 or y >= N, where N is the width of T in bits.\n     ///\n     /// The stabilized versions of this intrinsic are available on the integer\n-    /// primitives via the `wrapping_shl` method. For example,\n-    /// [`std::u32::wrapping_shl`](../../std/primitive.u32.html#method.wrapping_shl)\n+    /// primitives via the `checked_shl` method. For example,\n+    /// [`std::u32::checked_shl`](../../std/primitive.u32.html#method.checked_shl)\n     #[rustc_const_stable(feature = \"const_int_unchecked\", since = \"1.40.0\")]\n     pub fn unchecked_shl<T>(x: T, y: T) -> T;\n     /// Performs an unchecked right shift, resulting in undefined behavior when\n     /// y < 0 or y >= N, where N is the width of T in bits.\n     ///\n     /// The stabilized versions of this intrinsic are available on the integer\n-    /// primitives via the `wrapping_shr` method. For example,\n-    /// [`std::u32::wrapping_shr`](../../std/primitive.u32.html#method.wrapping_shr)\n+    /// primitives via the `checked_shr` method. For example,\n+    /// [`std::u32::checked_shr`](../../std/primitive.u32.html#method.checked_shr)\n     #[rustc_const_stable(feature = \"const_int_unchecked\", since = \"1.40.0\")]\n     pub fn unchecked_shr<T>(x: T, y: T) -> T;\n \n@@ -1785,22 +1785,22 @@ extern \"rust-intrinsic\" {\n     /// Returns (a + b) mod 2<sup>N</sup>, where N is the width of T in bits.\n     ///\n     /// The stabilized versions of this intrinsic are available on the integer\n-    /// primitives via the `wrapping_add` method. For example,\n-    /// [`std::u32::wrapping_add`](../../std/primitive.u32.html#method.wrapping_add)\n+    /// primitives via the `checked_add` method. For example,\n+    /// [`std::u32::checked_add`](../../std/primitive.u32.html#method.checked_add)\n     #[rustc_const_stable(feature = \"const_int_wrapping\", since = \"1.40.0\")]\n     pub fn wrapping_add<T>(a: T, b: T) -> T;\n     /// Returns (a - b) mod 2<sup>N</sup>, where N is the width of T in bits.\n     ///\n     /// The stabilized versions of this intrinsic are available on the integer\n-    /// primitives via the `wrapping_sub` method. For example,\n-    /// [`std::u32::wrapping_sub`](../../std/primitive.u32.html#method.wrapping_sub)\n+    /// primitives via the `checked_sub` method. For example,\n+    /// [`std::u32::checked_sub`](../../std/primitive.u32.html#method.checked_sub)\n     #[rustc_const_stable(feature = \"const_int_wrapping\", since = \"1.40.0\")]\n     pub fn wrapping_sub<T>(a: T, b: T) -> T;\n     /// Returns (a * b) mod 2<sup>N</sup>, where N is the width of T in bits.\n     ///\n     /// The stabilized versions of this intrinsic are available on the integer\n-    /// primitives via the `wrapping_mul` method. For example,\n-    /// [`std::u32::wrapping_mul`](../../std/primitive.u32.html#method.wrapping_mul)\n+    /// primitives via the `checked_mul` method. For example,\n+    /// [`std::u32::checked_mul`](../../std/primitive.u32.html#method.checked_mul)\n     #[rustc_const_stable(feature = \"const_int_wrapping\", since = \"1.40.0\")]\n     pub fn wrapping_mul<T>(a: T, b: T) -> T;\n "}]}