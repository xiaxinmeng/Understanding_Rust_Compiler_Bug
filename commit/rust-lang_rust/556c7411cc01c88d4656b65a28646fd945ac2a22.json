{"sha": "556c7411cc01c88d4656b65a28646fd945ac2a22", "node_id": "C_kwDOAAsO6NoAKDU1NmM3NDExY2MwMWM4OGQ0NjU2YjY1YTI4NjQ2ZmQ5NDVhYzJhMjI", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-02T01:34:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-02T01:34:23Z"}, "message": "Rollup merge of #95544 - jam1garner:improve-naked-noreturn-diagnostic, r=tmiasko\n\nAdd error message suggestion for missing noreturn in naked function\n\nI had to google the syntax for inline asm's `noreturn` option when I got this error earlier today, so I figured I'd save others the trouble and add the syntax/fix as a suggestion in the error.", "tree": {"sha": "2865072c6d9064b8bad87fc6e20e5945e3e64254", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2865072c6d9064b8bad87fc6e20e5945e3e64254"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/556c7411cc01c88d4656b65a28646fd945ac2a22", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiR6ggCRBK7hj4Ov3rIwAAvuAIAJ9XprM0LINiHh+Wp+6Egzbk\nYJrZXOwuaGALdmBypXlZaIqJYgvA06zgX7qDWRVVDshWnVAhm13HCssaSjmdFsKZ\nawbvgZ3OB8e7mLaxnbTpWNsBlDRIqJQgGLtE59OA9GI6nBIvsh7UtuzFSoO9/05g\nDpIkpJhIHaouZYbGnYgN9RRByKF2/AA+jru3EoNsNOqREpSFdS6lfuHOprSbkdy2\nHbyoJ4sTHDb7A+SnnRAU4CnNOD66rz134Yugk8TdT45GzGzqF3QofjuCjZrEpy6x\n8d19fR3wu1Sl38D1n9t7U1LqnKoKvPbQhBWBvCTNBb7rO4ESZT+pbVejNf/BaCY=\n=KCMc\n-----END PGP SIGNATURE-----\n", "payload": "tree 2865072c6d9064b8bad87fc6e20e5945e3e64254\nparent 46a4754df0ff70c9e0d3cc2a9f32c0e5cdabf5fc\nparent f793b696c8080e0e23060c74659ab5d04240fa38\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1648863263 +0200\ncommitter GitHub <noreply@github.com> 1648863263 +0200\n\nRollup merge of #95544 - jam1garner:improve-naked-noreturn-diagnostic, r=tmiasko\n\nAdd error message suggestion for missing noreturn in naked function\n\nI had to google the syntax for inline asm's `noreturn` option when I got this error earlier today, so I figured I'd save others the trouble and add the syntax/fix as a suggestion in the error.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/556c7411cc01c88d4656b65a28646fd945ac2a22", "html_url": "https://github.com/rust-lang/rust/commit/556c7411cc01c88d4656b65a28646fd945ac2a22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/556c7411cc01c88d4656b65a28646fd945ac2a22/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46a4754df0ff70c9e0d3cc2a9f32c0e5cdabf5fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/46a4754df0ff70c9e0d3cc2a9f32c0e5cdabf5fc", "html_url": "https://github.com/rust-lang/rust/commit/46a4754df0ff70c9e0d3cc2a9f32c0e5cdabf5fc"}, {"sha": "f793b696c8080e0e23060c74659ab5d04240fa38", "url": "https://api.github.com/repos/rust-lang/rust/commits/f793b696c8080e0e23060c74659ab5d04240fa38", "html_url": "https://github.com/rust-lang/rust/commit/f793b696c8080e0e23060c74659ab5d04240fa38"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "02f6b4060599ea161ace7d81617fa32dee3e3b18", "filename": "compiler/rustc_passes/src/naked_functions.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/556c7411cc01c88d4656b65a28646fd945ac2a22/compiler%2Frustc_passes%2Fsrc%2Fnaked_functions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/556c7411cc01c88d4656b65a28646fd945ac2a22/compiler%2Frustc_passes%2Fsrc%2Fnaked_functions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fnaked_functions.rs?ref=556c7411cc01c88d4656b65a28646fd945ac2a22", "patch": "@@ -1,7 +1,7 @@\n //! Checks validity of naked functions.\n \n use rustc_ast::{Attribute, InlineAsmOptions};\n-use rustc_errors::struct_span_err;\n+use rustc_errors::{struct_span_err, Applicability};\n use rustc_hir as hir;\n use rustc_hir::def_id::LocalDefId;\n use rustc_hir::intravisit::{FnKind, Visitor};\n@@ -274,12 +274,25 @@ impl<'tcx> CheckInlineAssembly<'tcx> {\n         }\n \n         if !asm.options.contains(InlineAsmOptions::NORETURN) {\n+            let last_span = asm\n+                .operands\n+                .last()\n+                .map_or_else(|| asm.template_strs.last().unwrap().2, |op| op.1)\n+                .shrink_to_hi();\n+\n             struct_span_err!(\n                 self.tcx.sess,\n                 span,\n                 E0787,\n                 \"asm in naked functions must use `noreturn` option\"\n             )\n+            .span_suggestion(\n+                last_span,\n+                \"consider specifying that the asm block is responsible \\\n+                for returning from the function\",\n+                String::from(\", options(noreturn)\"),\n+                Applicability::MachineApplicable,\n+            )\n             .emit();\n         }\n     }"}, {"sha": "35dc9cca33b5aa373f10eecc400d7177b1bfb0b4", "filename": "src/test/ui/asm/naked-functions.stderr", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/556c7411cc01c88d4656b65a28646fd945ac2a22/src%2Ftest%2Fui%2Fasm%2Fnaked-functions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/556c7411cc01c88d4656b65a28646fd945ac2a22/src%2Ftest%2Fui%2Fasm%2Fnaked-functions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fnaked-functions.stderr?ref=556c7411cc01c88d4656b65a28646fd945ac2a22", "patch": "@@ -97,6 +97,11 @@ LL | |\n LL | |          sym G,\n LL | |     );\n    | |_____^\n+   |\n+help: consider specifying that the asm block is responsible for returning from the function\n+   |\n+LL |          sym G, options(noreturn),\n+   |               +++++++++++++++++++\n \n error[E0787]: naked functions must contain a single asm block\n   --> $DIR/naked-functions.rs:53:1\n@@ -131,18 +136,33 @@ error[E0787]: asm in naked functions must use `noreturn` option\n    |\n LL |     asm!(\"\");\n    |     ^^^^^^^^\n+   |\n+help: consider specifying that the asm block is responsible for returning from the function\n+   |\n+LL |     asm!(\"\", options(noreturn));\n+   |            +++++++++++++++++++\n \n error[E0787]: asm in naked functions must use `noreturn` option\n   --> $DIR/naked-functions.rs:85:5\n    |\n LL |     asm!(\"\");\n    |     ^^^^^^^^\n+   |\n+help: consider specifying that the asm block is responsible for returning from the function\n+   |\n+LL |     asm!(\"\", options(noreturn));\n+   |            +++++++++++++++++++\n \n error[E0787]: asm in naked functions must use `noreturn` option\n   --> $DIR/naked-functions.rs:87:5\n    |\n LL |     asm!(\"\");\n    |     ^^^^^^^^\n+   |\n+help: consider specifying that the asm block is responsible for returning from the function\n+   |\n+LL |     asm!(\"\", options(noreturn));\n+   |            +++++++++++++++++++\n \n error[E0787]: naked functions must contain a single asm block\n   --> $DIR/naked-functions.rs:81:1\n@@ -198,6 +218,11 @@ error[E0787]: asm in naked functions must use `noreturn` option\n    |\n LL |     asm!(\"\", options(readonly, nostack), options(pure));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+help: consider specifying that the asm block is responsible for returning from the function\n+   |\n+LL |     asm!(\"\", options(noreturn), options(readonly, nostack), options(pure));\n+   |            +++++++++++++++++++\n \n error[E0787]: asm options unsupported in naked functions: `may_unwind`\n   --> $DIR/naked-functions.rs:118:5"}]}