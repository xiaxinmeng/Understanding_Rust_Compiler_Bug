{"sha": "53a2b2f1c39d610b21e26e1c3ac838cd63d044d2", "node_id": "C_kwDOAAsO6NoAKDUzYTJiMmYxYzM5ZDYxMGIyMWUyNmUxYzNhYzgzOGNkNjNkMDQ0ZDI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-03T12:10:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-03T12:10:32Z"}, "message": "Auto merge of #2180 - RalfJung:stale, r=RalfJung\n\ndelete stale stderr files\n\n`@oli-obk` can we do anything to detect them? Not sure if compiletest does anything smart here.", "tree": {"sha": "68c9e0ce580dee16625369050de8470ff471bbbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68c9e0ce580dee16625369050de8470ff471bbbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53a2b2f1c39d610b21e26e1c3ac838cd63d044d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53a2b2f1c39d610b21e26e1c3ac838cd63d044d2", "html_url": "https://github.com/rust-lang/rust/commit/53a2b2f1c39d610b21e26e1c3ac838cd63d044d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53a2b2f1c39d610b21e26e1c3ac838cd63d044d2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bcb8064dd37d7121b05a118b8495970a56e110f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8bcb8064dd37d7121b05a118b8495970a56e110f", "html_url": "https://github.com/rust-lang/rust/commit/8bcb8064dd37d7121b05a118b8495970a56e110f"}, {"sha": "2b9c45f96f57069396e2029583aa762ecca569d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b9c45f96f57069396e2029583aa762ecca569d4", "html_url": "https://github.com/rust-lang/rust/commit/2b9c45f96f57069396e2029583aa762ecca569d4"}], "stats": {"total": 252, "additions": 0, "deletions": 252}, "files": [{"sha": "4e7292732754b76eb315199f29394ecf3621bd2e", "filename": "tests/fail/backtrace/bad-backtrace-version.stderr", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Fbacktrace%2Fbad-backtrace-version.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Fbacktrace%2Fbad-backtrace-version.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fbacktrace%2Fbad-backtrace-version.stderr?ref=8bcb8064dd37d7121b05a118b8495970a56e110f", "patch": "@@ -1,14 +0,0 @@\n-error: unsupported operation: unknown `miri_resolve_frame` flags 1\n-  --> $DIR/bad-backtrace-version.rs:7:9\n-   |\n-LL |         miri_resolve_frame(0 as *mut _, 1); //~ ERROR  unsupported operation: unknown `miri_resolve_frame` flags 1\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown `miri_resolve_frame` flags 1\n-   |\n-   = help: this is likely not a bug in the program; it indicates that the program performed an operation that the interpreter does not support\n-           \n-   = note: inside `main` at $DIR/bad-backtrace-version.rs:7:9\n-\n-note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n-\n-error: aborting due to previous error\n-"}, {"sha": "f71a44d34daba497a2fd79c551bc3f4e30681511", "filename": "tests/fail/fs/unix_open_too_many_args.stderr", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Ffs%2Funix_open_too_many_args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Ffs%2Funix_open_too_many_args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Ffs%2Funix_open_too_many_args.stderr?ref=8bcb8064dd37d7121b05a118b8495970a56e110f", "patch": "@@ -1,20 +0,0 @@\n-error: Undefined Behavior: incorrect number of arguments for `open`: got 4, expected 2 or 3\n-  --> $DIR/unix_open_too_many_args.rs:15:24\n-   |\n-LL |     let _fd = unsafe { libc::open(name_ptr, libc::O_RDONLY, 0, 0) }; //~ ERROR Undefined Behavior: incorrect number of arguments for `ope...\n-   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ incorrect number of arguments for `open`: got 4, expected 2 or 3\n-   |\n-   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n-   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-           \n-   = note: inside `test_open_too_many_args` at $DIR/unix_open_too_many_args.rs:15:24\n-note: inside `main` at $DIR/unix_open_too_many_args.rs:9:5\n-  --> $DIR/unix_open_too_many_args.rs:9:5\n-   |\n-LL |     test_open_too_many_args();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n-\n-error: aborting due to previous error\n-"}, {"sha": "0930160023f1bb2ce1f7db63d08b384878114e71", "filename": "tests/fail/null_pointer_deref.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Fnull_pointer_deref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Fnull_pointer_deref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fnull_pointer_deref.stderr?ref=8bcb8064dd37d7121b05a118b8495970a56e110f", "patch": "@@ -1,15 +0,0 @@\n-error: Undefined Behavior: dereferencing pointer failed: null pointer is not a valid pointer\n-  --> $DIR/null_pointer_deref.rs:LL:CC\n-   |\n-LL |     let x: i32 = unsafe { *std::ptr::null() };\n-   |                           ^^^^^^^^^^^^^^^^^ dereferencing pointer failed: null pointer is not a valid pointer\n-   |\n-   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n-   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-           \n-   = note: inside `main` at $DIR/null_pointer_deref.rs:LL:CC\n-\n-note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n-\n-error: aborting due to previous error\n-"}, {"sha": "25fea50b15af1ae72a2f4afab76e28ab435a9514", "filename": "tests/fail/null_pointer_deref_zst.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Fnull_pointer_deref_zst.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Fnull_pointer_deref_zst.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fnull_pointer_deref_zst.stderr?ref=8bcb8064dd37d7121b05a118b8495970a56e110f", "patch": "@@ -1,15 +0,0 @@\n-error: Undefined Behavior: dereferencing pointer failed: null pointer is not a valid pointer\n-  --> $DIR/null_pointer_deref_zst.rs:LL:CC\n-   |\n-LL |     let x: () = unsafe { *std::ptr::null() };\n-   |                          ^^^^^^^^^^^^^^^^^ dereferencing pointer failed: null pointer is not a valid pointer\n-   |\n-   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n-   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-           \n-   = note: inside `main` at $DIR/null_pointer_deref_zst.rs:LL:CC\n-\n-note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n-\n-error: aborting due to previous error\n-"}, {"sha": "5ac8cc7c20fdfd892af26f07755df30377cadf2f", "filename": "tests/fail/null_pointer_write.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Fnull_pointer_write.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Fnull_pointer_write.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fnull_pointer_write.stderr?ref=8bcb8064dd37d7121b05a118b8495970a56e110f", "patch": "@@ -1,15 +0,0 @@\n-error: Undefined Behavior: dereferencing pointer failed: null pointer is not a valid pointer\n-  --> $DIR/null_pointer_write.rs:LL:CC\n-   |\n-LL |     unsafe { *std::ptr::null_mut() = 0i32 };\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ dereferencing pointer failed: null pointer is not a valid pointer\n-   |\n-   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n-   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-           \n-   = note: inside `main` at $DIR/null_pointer_write.rs:LL:CC\n-\n-note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n-\n-error: aborting due to previous error\n-"}, {"sha": "b40a9154f18268281090cb54c93ff4bcae5226d2", "filename": "tests/fail/null_pointer_write_zst.stderr", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Fnull_pointer_write_zst.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Fnull_pointer_write_zst.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fnull_pointer_write_zst.stderr?ref=8bcb8064dd37d7121b05a118b8495970a56e110f", "patch": "@@ -1,17 +0,0 @@\n-error: Undefined Behavior: memory access failed: null pointer is not a valid pointer\n-   |\n-   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n-   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-           \n-   = note: inside `std::ptr::write::<[u8; 0]>` at rustc_src/src/ptr/mod.rs:LL:CC\n-   = note: inside `std::ptr::mut_ptr::<impl *mut [u8; 0]>::write` at rustc_src/src/ptr/mut_ptr.rs:LL:CC\n-note: inside `main` at $DIR/null_pointer_write_zst.rs:LL:CC\n-  --> $DIR/null_pointer_write_zst.rs:LL:CC\n-   |\n-LL |     unsafe { std::ptr::null_mut::<[u8; 0]>().write(zst_val) };\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n-\n-error: aborting due to previous error\n-"}, {"sha": "bc2ca54438ff90a9aa72b4e5ee61c8edd31ab1ee", "filename": "tests/fail/ptr_integer_array_transmute.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Fptr_integer_array_transmute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Fptr_integer_array_transmute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fptr_integer_array_transmute.stderr?ref=8bcb8064dd37d7121b05a118b8495970a56e110f", "patch": "@@ -1,15 +0,0 @@\n-error: Undefined Behavior: type validation failed: encountered a pointer, but expected plain (non-pointer) bytes\n-  --> $DIR/ptr_integer_array_transmute.rs:LL:CC\n-   |\n-LL |     let _i: [usize; 1] = unsafe { std::mem::transmute(r) };\n-   |                                   ^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered a pointer, but expected plain (non-pointer) bytes\n-   |\n-   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n-   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-           \n-   = note: inside `main` at $DIR/ptr_integer_array_transmute.rs:LL:CC\n-\n-note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n-\n-error: aborting due to previous error\n-"}, {"sha": "de9ebf4eb06b4c419632ad749fcd18533ef6c789", "filename": "tests/fail/ptr_integer_transmute.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Fptr_integer_transmute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Fptr_integer_transmute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fptr_integer_transmute.stderr?ref=8bcb8064dd37d7121b05a118b8495970a56e110f", "patch": "@@ -1,15 +0,0 @@\n-error: Undefined Behavior: type validation failed: encountered pointer to $HEX[ALLOC]<TAG>, but expected initialized plain (non-pointer) bytes\n-  --> $DIR/ptr_integer_transmute.rs:LL:CC\n-   |\n-LL |     let _i: usize = unsafe { std::mem::transmute(r) };\n-   |                              ^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered pointer to $HEX[ALLOC]<TAG>, but expected initialized plain (non-pointer) bytes\n-   |\n-   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n-   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-           \n-   = note: inside `main` at $DIR/ptr_integer_transmute.rs:LL:CC\n-\n-note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n-\n-error: aborting due to previous error\n-"}, {"sha": "13239506c633ff0eb550a1ef6a2c32df0f82bb63", "filename": "tests/fail/slice-too-big.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Fslice-too-big.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Fslice-too-big.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fslice-too-big.stderr?ref=8bcb8064dd37d7121b05a118b8495970a56e110f", "patch": "@@ -1,15 +0,0 @@\n-error: Undefined Behavior: type validation failed: encountered invalid reference metadata: slice is bigger than largest supported object\n-  --> $DIR/slice-too-big.rs:5:21\n-   |\n-LL |     let _x: &[u8] = mem::transmute((ptr, usize::MAX)); //~ ERROR: invalid reference metadata: slice is bigger than largest supported object\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered invalid reference metadata: slice is bigger than largest supported object\n-   |\n-   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n-   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-           \n-   = note: inside `main` at $DIR/slice-too-big.rs:5:21\n-\n-note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n-\n-error: aborting due to previous error\n-"}, {"sha": "482b7a404c513e5cedd4ee266342f940388047b1", "filename": "tests/fail/strict-provenance-offset.stderr", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Fstrict-provenance-offset.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Fstrict-provenance-offset.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fstrict-provenance-offset.stderr?ref=8bcb8064dd37d7121b05a118b8495970a56e110f", "patch": "@@ -1,16 +0,0 @@\n-error: Undefined Behavior: pointer arithmetic failed: $HEX is not a valid pointer\n-   |\n-   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n-   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-           \n-   = note: inside `std::ptr::const_ptr::<impl *const u8>::offset` at rustc_src/src/ptr/const_ptr.rs:LL:CC\n-note: inside `main` at $DIR/strict-provenance-offset.rs:LL:CC\n-  --> $DIR/strict-provenance-offset.rs:LL:CC\n-   |\n-LL |     let _ = unsafe { roundtrip.offset(1) };\n-   |                      ^^^^^^^^^^^^^^^^^^^\n-\n-note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n-\n-error: aborting due to previous error\n-"}, {"sha": "c2140b9786ca53c6c578ee1f40046874c2c21035", "filename": "tests/fail/strict_provenance_transmute.stderr", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Fstrict_provenance_transmute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Fstrict_provenance_transmute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fstrict_provenance_transmute.stderr?ref=8bcb8064dd37d7121b05a118b8495970a56e110f", "patch": "@@ -1,20 +0,0 @@\n-error: Undefined Behavior: type validation failed: encountered pointer to $HEX[ALLOC]<TAG>, but expected initialized plain (non-pointer) bytes\n-  --> $DIR/strict_provenance_transmute.rs:LL:CC\n-   |\n-LL |     let left_int: usize = mem::transmute(left);\n-   |                           ^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered pointer to $HEX[ALLOC]<TAG>, but expected initialized plain (non-pointer) bytes\n-   |\n-   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n-   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-           \n-   = note: inside `deref` at $DIR/strict_provenance_transmute.rs:LL:CC\n-note: inside `main` at $DIR/strict_provenance_transmute.rs:LL:CC\n-  --> $DIR/strict_provenance_transmute.rs:LL:CC\n-   |\n-LL |         deref(ptr1, ptr2.with_addr(ptr1.addr()));\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n-\n-error: aborting due to previous error\n-"}, {"sha": "11d20d3e623b07875b05ef979546b3219c8663d0", "filename": "tests/fail/too-big-slice.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Ftoo-big-slice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Ftoo-big-slice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Ftoo-big-slice.stderr?ref=8bcb8064dd37d7121b05a118b8495970a56e110f", "patch": "@@ -1,15 +0,0 @@\n-error: Undefined Behavior: type validation failed: encountered invalid reference metadata: slice is bigger than largest supported object\n-  --> $DIR/too-big-slice.rs:LL:CC\n-   |\n-LL |     let _x: &[u8] = mem::transmute((ptr, usize::MAX));\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered invalid reference metadata: slice is bigger than largest supported object\n-   |\n-   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n-   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-           \n-   = note: inside `main` at $DIR/too-big-slice.rs:LL:CC\n-\n-note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n-\n-error: aborting due to previous error\n-"}, {"sha": "0c7b7b23246ef2405037c9d5827c52ad48893757", "filename": "tests/fail/too-big-unsized.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Ftoo-big-unsized.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Ftoo-big-unsized.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Ftoo-big-unsized.stderr?ref=8bcb8064dd37d7121b05a118b8495970a56e110f", "patch": "@@ -1,15 +0,0 @@\n-error: Undefined Behavior: type validation failed: encountered invalid reference metadata: total size is bigger than largest supported object\n-  --> $DIR/too-big-unsized.rs:LL:CC\n-   |\n-LL |     let _x: &MySlice = mem::transmute((ptr, isize::MAX as usize));\n-   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered invalid reference metadata: total size is bigger than largest supported object\n-   |\n-   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n-   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-           \n-   = note: inside `main` at $DIR/too-big-unsized.rs:LL:CC\n-\n-note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n-\n-error: aborting due to previous error\n-"}, {"sha": "90cdc3ba0fae5d95d45c22e0b87632d2c8a3e1be", "filename": "tests/fail/uninit_float.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Funinit_float.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Funinit_float.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Funinit_float.stderr?ref=8bcb8064dd37d7121b05a118b8495970a56e110f", "patch": "@@ -1,15 +0,0 @@\n-error: Undefined Behavior: type validation failed at .value: encountered uninitialized bytes, but expected initialized plain (non-pointer) bytes\n-  --> $DIR/uninit_float.rs:LL:CC\n-   |\n-LL |     let _val = unsafe { std::mem::MaybeUninit::<f32>::uninit().assume_init() };\n-   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed at .value: encountered uninitialized bytes, but expected initialized plain (non-pointer) bytes\n-   |\n-   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n-   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-           \n-   = note: inside `main` at $DIR/uninit_float.rs:LL:CC\n-\n-note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n-\n-error: aborting due to previous error\n-"}, {"sha": "88b57c1d279a0f3611bd6b5d0f074f3ab89579c8", "filename": "tests/fail/uninit_integer.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Funinit_integer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Funinit_integer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Funinit_integer.stderr?ref=8bcb8064dd37d7121b05a118b8495970a56e110f", "patch": "@@ -1,15 +0,0 @@\n-error: Undefined Behavior: type validation failed at .value: encountered uninitialized bytes, but expected initialized plain (non-pointer) bytes\n-  --> $DIR/uninit_integer.rs:LL:CC\n-   |\n-LL |     let _val = unsafe { std::mem::MaybeUninit::<usize>::uninit().assume_init() };\n-   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed at .value: encountered uninitialized bytes, but expected initialized plain (non-pointer) bytes\n-   |\n-   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n-   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-           \n-   = note: inside `main` at $DIR/uninit_integer.rs:LL:CC\n-\n-note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n-\n-error: aborting due to previous error\n-"}, {"sha": "fc15462280a6133e3aa788fd81d1ecbb902379eb", "filename": "tests/fail/uninit_integer_signed.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Funinit_integer_signed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8bcb8064dd37d7121b05a118b8495970a56e110f/tests%2Ffail%2Funinit_integer_signed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Funinit_integer_signed.stderr?ref=8bcb8064dd37d7121b05a118b8495970a56e110f", "patch": "@@ -1,15 +0,0 @@\n-error: Undefined Behavior: type validation failed at .value: encountered uninitialized bytes, but expected initialized plain (non-pointer) bytes\n-  --> $DIR/uninit_integer_signed.rs:LL:CC\n-   |\n-LL |     let _val = unsafe { std::mem::MaybeUninit::<i32>::uninit().assume_init() };\n-   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed at .value: encountered uninitialized bytes, but expected initialized plain (non-pointer) bytes\n-   |\n-   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n-   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-           \n-   = note: inside `main` at $DIR/uninit_integer_signed.rs:LL:CC\n-\n-note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n-\n-error: aborting due to previous error\n-"}]}