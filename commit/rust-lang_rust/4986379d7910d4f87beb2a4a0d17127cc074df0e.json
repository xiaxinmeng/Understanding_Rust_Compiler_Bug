{"sha": "4986379d7910d4f87beb2a4a0d17127cc074df0e", "node_id": "C_kwDOAAsO6NoAKDQ5ODYzNzlkNzkxMGQ0Zjg3YmViMmE0YTBkMTcxMjdjYzA3NGRmMGU", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2022-07-05T21:43:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-05T21:43:31Z"}, "message": "Rollup merge of #98256 - GuillaumeGomez:whitespace-where-clause, r=notriddle\n\nFix whitespace handling after where clause\n\nFixes #97733.\n\nYou can see the result [here](https://rustdoc.crud.net/imperio/whitespace-where-clause/doc/foo/index.html).\n\nr? `@jsha`", "tree": {"sha": "a68cedccd4e4a6dc305b904639c48ef5aeeeb67d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a68cedccd4e4a6dc305b904639c48ef5aeeeb67d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4986379d7910d4f87beb2a4a0d17127cc074df0e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJixLCDCRBK7hj4Ov3rIwAAw1sIAEqL2MCE+fKhZ6cUxSZsFzWP\n5UEH+GBsuzwFFSFq1HrjHT72eOWQKFxWNcjbI8NVp+OjWMN395u8NSOF/47WseLH\nNNDGlNOSPRkNDhCsfVmeYFAWRTuTUKCGxcHss7ffmsal+9nkGO3TXeCHmgDOM9Xe\nIqxh1q+7dz0CN4YLBww75lBJmgVIUt0D8lQdfV+nasgQfklD231TRaxzLMGRG13r\nniLGzTbl1Gh82AK9SVKfY2KsdrMyXlFog//K+kQpTOJZsytUxqOnsCUKQrtWRewt\ni0wo7AwSBuokVFtxEXC4/RFLnIRJMcDjdvZFs98SCvpR6lHr73C5Ukvuu+bz5Yo=\n=NhXV\n-----END PGP SIGNATURE-----\n", "payload": "tree a68cedccd4e4a6dc305b904639c48ef5aeeeb67d\nparent 3e802d72bbe3b4f4ec200dd9a6110e530ed4fbb9\nparent c8a5b671a0395706621430a57c258b85a30bad71\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1657057411 +0200\ncommitter GitHub <noreply@github.com> 1657057411 +0200\n\nRollup merge of #98256 - GuillaumeGomez:whitespace-where-clause, r=notriddle\n\nFix whitespace handling after where clause\n\nFixes #97733.\n\nYou can see the result [here](https://rustdoc.crud.net/imperio/whitespace-where-clause/doc/foo/index.html).\n\nr? `@jsha`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4986379d7910d4f87beb2a4a0d17127cc074df0e", "html_url": "https://github.com/rust-lang/rust/commit/4986379d7910d4f87beb2a4a0d17127cc074df0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4986379d7910d4f87beb2a4a0d17127cc074df0e/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e802d72bbe3b4f4ec200dd9a6110e530ed4fbb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e802d72bbe3b4f4ec200dd9a6110e530ed4fbb9", "html_url": "https://github.com/rust-lang/rust/commit/3e802d72bbe3b4f4ec200dd9a6110e530ed4fbb9"}, {"sha": "c8a5b671a0395706621430a57c258b85a30bad71", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8a5b671a0395706621430a57c258b85a30bad71", "html_url": "https://github.com/rust-lang/rust/commit/c8a5b671a0395706621430a57c258b85a30bad71"}], "stats": {"total": 170, "additions": 156, "deletions": 14}, "files": [{"sha": "0982c4b3acec868cf1cfc1d30272db46649daf14", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4986379d7910d4f87beb2a4a0d17127cc074df0e/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4986379d7910d4f87beb2a4a0d17127cc074df0e/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=4986379d7910d4f87beb2a4a0d17127cc074df0e", "patch": "@@ -146,6 +146,10 @@ impl Buffer {\n     pub(crate) fn reserve(&mut self, additional: usize) {\n         self.buffer.reserve(additional)\n     }\n+\n+    pub(crate) fn len(&self) -> usize {\n+        self.buffer.len()\n+    }\n }\n \n fn comma_sep<T: fmt::Display>("}, {"sha": "3525007baf369a9c875ffe01479c2044229a02c0", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 41, "deletions": 14, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/4986379d7910d4f87beb2a4a0d17127cc074df0e/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4986379d7910d4f87beb2a4a0d17127cc074df0e/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=4986379d7910d4f87beb2a4a0d17127cc074df0e", "patch": "@@ -62,6 +62,17 @@ struct ItemVars<'a> {\n     src_href: Option<&'a str>,\n }\n \n+/// Calls `print_where_clause` and returns `true` if a `where` clause was generated.\n+fn print_where_clause_and_check<'a, 'tcx: 'a>(\n+    buffer: &mut Buffer,\n+    gens: &'a clean::Generics,\n+    cx: &'a Context<'tcx>,\n+) -> bool {\n+    let len_before = buffer.len();\n+    write!(buffer, \"{}\", print_where_clause(gens, cx, 0, true));\n+    len_before != buffer.len()\n+}\n+\n pub(super) fn print_item(\n     cx: &mut Context<'_>,\n     item: &clean::Item,\n@@ -1152,17 +1163,21 @@ fn item_enum(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, e: &clean::\n             render_attributes_in_pre(w, it, \"\");\n             write!(\n                 w,\n-                \"{}enum {}{}{}\",\n+                \"{}enum {}{}\",\n                 it.visibility.print_with_space(it.item_id, cx),\n                 it.name.unwrap(),\n                 e.generics.print(cx),\n-                print_where_clause(&e.generics, cx, 0, true),\n             );\n+            if !print_where_clause_and_check(w, &e.generics, cx) {\n+                // If there wasn't a `where` clause, we add a whitespace.\n+                w.write_str(\" \");\n+            }\n+\n             let variants_stripped = e.has_stripped_entries();\n             if count_variants == 0 && !variants_stripped {\n-                w.write_str(\" {}\");\n+                w.write_str(\"{}\");\n             } else {\n-                w.write_str(\" {\\n\");\n+                w.write_str(\"{\\n\");\n                 let toggle = should_hide_fields(count_variants);\n                 if toggle {\n                     toggle_open(w, format_args!(\"{} variants\", count_variants));\n@@ -1643,13 +1658,21 @@ fn render_union(\n     tab: &str,\n     cx: &Context<'_>,\n ) {\n-    write!(w, \"{}union {}\", it.visibility.print_with_space(it.item_id, cx), it.name.unwrap());\n-    if let Some(g) = g {\n-        write!(w, \"{}\", g.print(cx));\n-        write!(w, \"{}\", print_where_clause(g, cx, 0, true));\n+    write!(w, \"{}union {}\", it.visibility.print_with_space(it.item_id, cx), it.name.unwrap(),);\n+\n+    let where_displayed = g\n+        .map(|g| {\n+            write!(w, \"{}\", g.print(cx));\n+            print_where_clause_and_check(w, g, cx)\n+        })\n+        .unwrap_or(false);\n+\n+    // If there wasn't a `where` clause, we add a whitespace.\n+    if !where_displayed {\n+        w.write_str(\" \");\n     }\n \n-    write!(w, \" {{\\n{}\", tab);\n+    write!(w, \"{{\\n{}\", tab);\n     let count_fields =\n         fields.iter().filter(|f| matches!(*f.kind, clean::StructFieldItem(..))).count();\n     let toggle = should_hide_fields(count_fields);\n@@ -1701,10 +1724,14 @@ fn render_struct(\n     }\n     match ty {\n         CtorKind::Fictive => {\n-            if let Some(g) = g {\n-                write!(w, \"{}\", print_where_clause(g, cx, 0, true),)\n+            let where_diplayed = g.map(|g| print_where_clause_and_check(w, g, cx)).unwrap_or(false);\n+\n+            // If there wasn't a `where` clause, we add a whitespace.\n+            if !where_diplayed {\n+                w.write_str(\" {\");\n+            } else {\n+                w.write_str(\"{\");\n             }\n-            w.write_str(\" {\");\n             let count_fields =\n                 fields.iter().filter(|f| matches!(*f.kind, clean::StructFieldItem(..))).count();\n             let has_visible_fields = count_fields > 0;\n@@ -1759,7 +1786,7 @@ fn render_struct(\n             }\n             w.write_str(\")\");\n             if let Some(g) = g {\n-                write!(w, \"{}\", print_where_clause(g, cx, 0, false),)\n+                write!(w, \"{}\", print_where_clause(g, cx, 0, false));\n             }\n             // We only want a \";\" when we are displaying a tuple struct, not a variant tuple struct.\n             if structhead {\n@@ -1769,7 +1796,7 @@ fn render_struct(\n         CtorKind::Const => {\n             // Needed for PhantomData.\n             if let Some(g) = g {\n-                write!(w, \"{}\", print_where_clause(g, cx, 0, false),)\n+                write!(w, \"{}\", print_where_clause(g, cx, 0, false));\n             }\n             w.write_str(\";\");\n         }"}, {"sha": "9e5bf45ae7d2fe234c2afaa5efeeabe8f10cc19c", "filename": "src/test/rustdoc/whitespace-after-where-clause.enum.html", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4986379d7910d4f87beb2a4a0d17127cc074df0e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.enum.html", "raw_url": "https://github.com/rust-lang/rust/raw/4986379d7910d4f87beb2a4a0d17127cc074df0e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.enum.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.enum.html?ref=4986379d7910d4f87beb2a4a0d17127cc074df0e", "patch": "@@ -0,0 +1,4 @@\n+<div class=\"docblock item-decl\"><pre class=\"rust enum\"><code>pub enum Cow&lt;'a, B:&#160;?<a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'a&gt; <span class=\"where fmt-newline\">where<br />&#160;&#160;&#160;&#160;B: <a class=\"trait\" href=\"trait.ToOwned.html\" title=\"trait foo::ToOwned\">ToOwned</a>&lt;dyn <a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt;,&#160;</span>{\n+    Borrowed(<a class=\"primitive\" href=\"{{channel}}/std/primitive.reference.html\">&amp;'a </a>B),\n+    Whatever(<a class=\"primitive\" href=\"{{channel}}/std/primitive.u32.html\">u32</a>),\n+}</code></pre></div>"}, {"sha": "6bc47beaed1257efa5271563ac0e150cf79993fe", "filename": "src/test/rustdoc/whitespace-after-where-clause.enum2.html", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4986379d7910d4f87beb2a4a0d17127cc074df0e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.enum2.html", "raw_url": "https://github.com/rust-lang/rust/raw/4986379d7910d4f87beb2a4a0d17127cc074df0e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.enum2.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.enum2.html?ref=4986379d7910d4f87beb2a4a0d17127cc074df0e", "patch": "@@ -0,0 +1,4 @@\n+<div class=\"docblock item-decl\"><pre class=\"rust enum\"><code>pub enum Cow2&lt;'a, B:&#160;?<a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"trait.ToOwned.html\" title=\"trait foo::ToOwned\">ToOwned</a>&lt;dyn <a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; + 'a&gt; {\n+    Borrowed(<a class=\"primitive\" href=\"{{channel}}/std/primitive.reference.html\">&amp;'a </a>B),\n+    Whatever(<a class=\"primitive\" href=\"{{channel}}/std/primitive.u32.html\">u32</a>),\n+}</code></pre></div>"}, {"sha": "c36386a2aa2b5f69b16b1efb11cf4da0c9a37076", "filename": "src/test/rustdoc/whitespace-after-where-clause.rs", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/4986379d7910d4f87beb2a4a0d17127cc074df0e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4986379d7910d4f87beb2a4a0d17127cc074df0e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.rs?ref=4986379d7910d4f87beb2a4a0d17127cc074df0e", "patch": "@@ -0,0 +1,77 @@\n+// This test ensures there is no whitespace before the first brace of\n+// trait, enum, struct and union items when they have a where clause.\n+\n+#![crate_name = \"foo\"]\n+\n+// @has 'foo/trait.ToOwned.html'\n+// @snapshot trait - '//*[@class=\"docblock item-decl\"]'\n+pub trait ToOwned<T>\n+where T: Clone\n+{\n+    type Owned;\n+    fn to_owned(&self) -> Self::Owned;\n+    fn whatever(&self) -> T;\n+}\n+\n+// @has 'foo/trait.ToOwned2.html'\n+// @snapshot trait2 - '//*[@class=\"docblock item-decl\"]'\n+// There should be a whitespace before `{` in this case!\n+pub trait ToOwned2<T: Clone> {\n+    type Owned;\n+    fn to_owned(&self) -> Self::Owned;\n+    fn whatever(&self) -> T;\n+}\n+\n+// @has 'foo/enum.Cow.html'\n+// @snapshot enum - '//*[@class=\"docblock item-decl\"]'\n+pub enum Cow<'a, B: ?Sized + 'a>\n+where\n+    B: ToOwned<Clone>,\n+{\n+    Borrowed(&'a B),\n+    Whatever(u32),\n+}\n+\n+// @has 'foo/enum.Cow2.html'\n+// @snapshot enum2 - '//*[@class=\"docblock item-decl\"]'\n+// There should be a whitespace before `{` in this case!\n+pub enum Cow2<'a, B: ?Sized + ToOwned<Clone> + 'a> {\n+    Borrowed(&'a B),\n+    Whatever(u32),\n+}\n+\n+// @has 'foo/struct.Struct.html'\n+// @snapshot struct - '//*[@class=\"docblock item-decl\"]'\n+pub struct Struct<'a, B: ?Sized + 'a>\n+where\n+    B: ToOwned<Clone>,\n+{\n+    pub a: &'a B,\n+    pub b: u32,\n+}\n+\n+// @has 'foo/struct.Struct2.html'\n+// @snapshot struct2 - '//*[@class=\"docblock item-decl\"]'\n+// There should be a whitespace before `{` in this case!\n+pub struct Struct2<'a, B: ?Sized + ToOwned<Clone> + 'a> {\n+    pub a: &'a B,\n+    pub b: u32,\n+}\n+\n+// @has 'foo/union.Union.html'\n+// @snapshot union - '//*[@class=\"docblock item-decl\"]'\n+pub union Union<'a, B: ?Sized + 'a>\n+where\n+    B: ToOwned<Clone>,\n+{\n+    a: &'a B,\n+    b: u32,\n+}\n+\n+// @has 'foo/union.Union2.html'\n+// @snapshot union2 - '//*[@class=\"docblock item-decl\"]'\n+// There should be a whitespace before `{` in this case!\n+pub union Union2<'a, B: ?Sized + ToOwned<Clone> + 'a> {\n+    a: &'a B,\n+    b: u32,\n+}"}, {"sha": "236cc3b30d088d22073840da2d8105b7b11db073", "filename": "src/test/rustdoc/whitespace-after-where-clause.struct.html", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4986379d7910d4f87beb2a4a0d17127cc074df0e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.struct.html", "raw_url": "https://github.com/rust-lang/rust/raw/4986379d7910d4f87beb2a4a0d17127cc074df0e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.struct.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.struct.html?ref=4986379d7910d4f87beb2a4a0d17127cc074df0e", "patch": "@@ -0,0 +1,4 @@\n+<div class=\"docblock item-decl\"><pre class=\"rust struct\"><code>pub struct Struct&lt;'a, B:&#160;?<a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'a&gt; <span class=\"where fmt-newline\">where<br />&#160;&#160;&#160;&#160;B: <a class=\"trait\" href=\"trait.ToOwned.html\" title=\"trait foo::ToOwned\">ToOwned</a>&lt;dyn <a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt;,&#160;</span>{\n+    pub a: <a class=\"primitive\" href=\"{{channel}}/std/primitive.reference.html\">&amp;'a </a>B,\n+    pub b: <a class=\"primitive\" href=\"{{channel}}/std/primitive.u32.html\">u32</a>,\n+}</code></pre></div>"}, {"sha": "47f5c6ba9c8466b9b4bacf265d9123e6e21011cc", "filename": "src/test/rustdoc/whitespace-after-where-clause.struct2.html", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4986379d7910d4f87beb2a4a0d17127cc074df0e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.struct2.html", "raw_url": "https://github.com/rust-lang/rust/raw/4986379d7910d4f87beb2a4a0d17127cc074df0e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.struct2.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.struct2.html?ref=4986379d7910d4f87beb2a4a0d17127cc074df0e", "patch": "@@ -0,0 +1,4 @@\n+<div class=\"docblock item-decl\"><pre class=\"rust struct\"><code>pub struct Struct2&lt;'a, B:&#160;?<a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"trait.ToOwned.html\" title=\"trait foo::ToOwned\">ToOwned</a>&lt;dyn <a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; + 'a&gt; {\n+    pub a: <a class=\"primitive\" href=\"{{channel}}/std/primitive.reference.html\">&amp;'a </a>B,\n+    pub b: <a class=\"primitive\" href=\"{{channel}}/std/primitive.u32.html\">u32</a>,\n+}</code></pre></div>"}, {"sha": "98f03b837b5282ccd5ef88101de3db1cd85efaaa", "filename": "src/test/rustdoc/whitespace-after-where-clause.trait.html", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4986379d7910d4f87beb2a4a0d17127cc074df0e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.trait.html", "raw_url": "https://github.com/rust-lang/rust/raw/4986379d7910d4f87beb2a4a0d17127cc074df0e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.trait.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.trait.html?ref=4986379d7910d4f87beb2a4a0d17127cc074df0e", "patch": "@@ -0,0 +1,6 @@\n+<div class=\"docblock item-decl\"><pre class=\"rust trait\"><code>pub trait ToOwned&lt;T&gt; <span class=\"where fmt-newline\">where<br />&#160;&#160;&#160;&#160;T: <a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,&#160;</span>{\n+    type <a href=\"#associatedtype.Owned\" class=\"associatedtype\">Owned</a>;\n+\n+    fn <a href=\"#tymethod.to_owned\" class=\"fnname\">to_owned</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"trait.ToOwned.html#associatedtype.Owned\" title=\"type foo::ToOwned::Owned\">Owned</a>;\n+<span class=\"item-spacer\" />    fn <a href=\"#tymethod.whatever\" class=\"fnname\">whatever</a>(&amp;self) -&gt; T;\n+}</code></pre></div>"}, {"sha": "35052869e762dcd32161bdd1480facd2a35eade8", "filename": "src/test/rustdoc/whitespace-after-where-clause.trait2.html", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4986379d7910d4f87beb2a4a0d17127cc074df0e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.trait2.html", "raw_url": "https://github.com/rust-lang/rust/raw/4986379d7910d4f87beb2a4a0d17127cc074df0e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.trait2.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.trait2.html?ref=4986379d7910d4f87beb2a4a0d17127cc074df0e", "patch": "@@ -0,0 +1,6 @@\n+<div class=\"docblock item-decl\"><pre class=\"rust trait\"><code>pub trait ToOwned2&lt;T:&#160;<a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; {\n+    type <a href=\"#associatedtype.Owned\" class=\"associatedtype\">Owned</a>;\n+\n+    fn <a href=\"#tymethod.to_owned\" class=\"fnname\">to_owned</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"trait.ToOwned2.html#associatedtype.Owned\" title=\"type foo::ToOwned2::Owned\">Owned</a>;\n+<span class=\"item-spacer\" />    fn <a href=\"#tymethod.whatever\" class=\"fnname\">whatever</a>(&amp;self) -&gt; T;\n+}</code></pre></div>"}, {"sha": "97e1bbcf339f841829d03db90fd371bc08182cc5", "filename": "src/test/rustdoc/whitespace-after-where-clause.union.html", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4986379d7910d4f87beb2a4a0d17127cc074df0e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.union.html", "raw_url": "https://github.com/rust-lang/rust/raw/4986379d7910d4f87beb2a4a0d17127cc074df0e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.union.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.union.html?ref=4986379d7910d4f87beb2a4a0d17127cc074df0e", "patch": "@@ -0,0 +1,3 @@\n+<div class=\"docblock item-decl\"><pre class=\"rust union\"><code>pub union Union&lt;'a, B:&#160;?<a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'a&gt; <span class=\"where fmt-newline\">where<br />&#160;&#160;&#160;&#160;B: <a class=\"trait\" href=\"trait.ToOwned.html\" title=\"trait foo::ToOwned\">ToOwned</a>&lt;dyn <a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt;,&#160;</span>{\n+    /* private fields */\n+}</code></pre></div>"}, {"sha": "6c752a8b4c5ea269db80898af7535bfad50d5fa7", "filename": "src/test/rustdoc/whitespace-after-where-clause.union2.html", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4986379d7910d4f87beb2a4a0d17127cc074df0e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.union2.html", "raw_url": "https://github.com/rust-lang/rust/raw/4986379d7910d4f87beb2a4a0d17127cc074df0e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.union2.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.union2.html?ref=4986379d7910d4f87beb2a4a0d17127cc074df0e", "patch": "@@ -0,0 +1,3 @@\n+<div class=\"docblock item-decl\"><pre class=\"rust union\"><code>pub union Union2&lt;'a, B:&#160;?<a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"trait.ToOwned.html\" title=\"trait foo::ToOwned\">ToOwned</a>&lt;dyn <a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; + 'a&gt; {\n+    /* private fields */\n+}</code></pre></div>"}]}