{"sha": "66345d93592cda1d8f01d4cd0331a95e8feee45c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2MzQ1ZDkzNTkyY2RhMWQ4ZjAxZDRjZDAzMzFhOTVlOGZlZWU0NWM=", "commit": {"author": {"name": "Ding Xiang Fei", "email": "dingxiangfei2009@protonmail.ch", "date": "2020-08-06T08:20:06Z"}, "committer": {"name": "Ding Xiang Fei", "email": "dingxiangfei2009@protonmail.ch", "date": "2020-10-13T16:50:57Z"}, "message": "rustfmt", "tree": {"sha": "74d9fb17e964621f43036a69e14153639a9c0985", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74d9fb17e964621f43036a69e14153639a9c0985"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66345d93592cda1d8f01d4cd0331a95e8feee45c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE0u8S3YU336XkLsQOPNdIZH7vY1kFAl+F2vEACgkQPNdIZH7v\nY1l4gQ//WQgW00E8qkhu2tNS1gBwn+vS8v4SdfM00hYRXw6/ySmOCCmkEUxbyuB6\nUZYQUUntQVJZlIDfYtZxND37RnwKOZ0b1ZN2izdohpLXuYTKUbflmWSqp7C1XukG\n9Q26SLMZmokEZA4i9aLL4HryMGQlimH2S8zizGCMXfO03qIz7klPBSBVHJUWckrF\nsVj/Qt6XL+yqDkxoX7iSUdmgFyTyhox1dtuCE2z09rFuIKlPkRj5Fe1ThHPoa565\nFSMrPFliapBk5gD/x93wiUwxBe+tery3yJKIdSU6HdDH2G5XwKQXzvpEauT3PQED\niYzZzGcQPy45g1WdgQQycjJVDMCjOoRTVQODrKI8xBO9XkemgR61Zh05D4kb5F1S\nYITbQKm/QMbRNE62kansf1Gs1MKI2YFdTyutTiHiHIv2IpH2TWQ9UeTa3TuunYN/\n3lr423Nev0E217Tz1HATzsbwCoBt5z15QvtbGZh/3QY5Mh5a/fqgBI3im5yA1U5v\nfpziT0HThuxDUGxmDFgncmBhJ5z/u8/+qgrLnF8gEbug1uGlXYtxo99rKBDyeeiz\nkmN72Sp/dV5RgGyguz3kvCaH7XZFGsja25/VAnOtWuHYAprgmDcCHMSTfw/Xe+Yn\nXAMqiybREURdAkSfTg61baOdCGkVlPjz9m/4rgmgQSKb4tpZDho=\n=pcro\n-----END PGP SIGNATURE-----", "payload": "tree 74d9fb17e964621f43036a69e14153639a9c0985\nparent 323f0794c09a545881180a391c9c68765216df5d\nauthor Ding Xiang Fei <dingxiangfei2009@protonmail.ch> 1596702006 +0800\ncommitter Ding Xiang Fei <dingxiangfei2009@protonmail.ch> 1602607857 +0800\n\nrustfmt\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66345d93592cda1d8f01d4cd0331a95e8feee45c", "html_url": "https://github.com/rust-lang/rust/commit/66345d93592cda1d8f01d4cd0331a95e8feee45c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66345d93592cda1d8f01d4cd0331a95e8feee45c/comments", "author": {"login": "dingxiangfei2009", "id": 6884440, "node_id": "MDQ6VXNlcjY4ODQ0NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6884440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dingxiangfei2009", "html_url": "https://github.com/dingxiangfei2009", "followers_url": "https://api.github.com/users/dingxiangfei2009/followers", "following_url": "https://api.github.com/users/dingxiangfei2009/following{/other_user}", "gists_url": "https://api.github.com/users/dingxiangfei2009/gists{/gist_id}", "starred_url": "https://api.github.com/users/dingxiangfei2009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dingxiangfei2009/subscriptions", "organizations_url": "https://api.github.com/users/dingxiangfei2009/orgs", "repos_url": "https://api.github.com/users/dingxiangfei2009/repos", "events_url": "https://api.github.com/users/dingxiangfei2009/events{/privacy}", "received_events_url": "https://api.github.com/users/dingxiangfei2009/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dingxiangfei2009", "id": 6884440, "node_id": "MDQ6VXNlcjY4ODQ0NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6884440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dingxiangfei2009", "html_url": "https://github.com/dingxiangfei2009", "followers_url": "https://api.github.com/users/dingxiangfei2009/followers", "following_url": "https://api.github.com/users/dingxiangfei2009/following{/other_user}", "gists_url": "https://api.github.com/users/dingxiangfei2009/gists{/gist_id}", "starred_url": "https://api.github.com/users/dingxiangfei2009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dingxiangfei2009/subscriptions", "organizations_url": "https://api.github.com/users/dingxiangfei2009/orgs", "repos_url": "https://api.github.com/users/dingxiangfei2009/repos", "events_url": "https://api.github.com/users/dingxiangfei2009/events{/privacy}", "received_events_url": "https://api.github.com/users/dingxiangfei2009/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "323f0794c09a545881180a391c9c68765216df5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/323f0794c09a545881180a391c9c68765216df5d", "html_url": "https://github.com/rust-lang/rust/commit/323f0794c09a545881180a391c9c68765216df5d"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "973e9797ccbc4bbc4cdbbbee471ba5a3acef2823", "filename": "compiler/rustc_typeck/src/check/generator_interior.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/66345d93592cda1d8f01d4cd0331a95e8feee45c/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66345d93592cda1d8f01d4cd0331a95e8feee45c/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs?ref=66345d93592cda1d8f01d4cd0331a95e8feee45c", "patch": "@@ -8,9 +8,9 @@ use rustc_data_structures::fx::{FxHashSet, FxIndexSet};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, DefKind, Res};\n use rustc_hir::def_id::DefId;\n-use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n-use rustc_hir::{Expr, ExprKind, Pat, PatKind, Arm, Guard, HirId};\n use rustc_hir::hir_id::HirIdSet;\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n+use rustc_hir::{Arm, Expr, ExprKind, Guard, HirId, Pat, PatKind};\n use rustc_middle::middle::region::{self, YieldData};\n use rustc_middle::ty::{self, Ty};\n use rustc_span::Span;\n@@ -64,7 +64,9 @@ impl<'a, 'tcx> InteriorVisitor<'a, 'tcx> {\n                         yield_data.expr_and_pat_count, self.expr_count, source_span\n                     );\n \n-                    if guard_borrowing_from_pattern || yield_data.expr_and_pat_count >= self.expr_count {\n+                    if guard_borrowing_from_pattern\n+                        || yield_data.expr_and_pat_count >= self.expr_count\n+                    {\n                         Some(yield_data)\n                     } else {\n                         None\n@@ -239,7 +241,10 @@ impl<'a, 'tcx> Visitor<'tcx> for InteriorVisitor<'a, 'tcx> {\n             let mut scope_var_ids =\n                 self.nested_scope_of_guards.pop().expect(\"should have pushed at least one earlier\");\n             for var_id in scope_var_ids.drain(..) {\n-                assert!(self.current_scope_of_guards.remove(&var_id), \"variable should be placed in scope earlier\");\n+                assert!(\n+                    self.current_scope_of_guards.remove(&var_id),\n+                    \"variable should be placed in scope earlier\"\n+                );\n             }\n             self.arm_has_guard = false;\n         }\n@@ -289,7 +294,7 @@ impl<'a, 'tcx> Visitor<'tcx> for InteriorVisitor<'a, 'tcx> {\n                     }\n                 }\n                 _ => intravisit::walk_expr(self, expr),\n-            }\n+            },\n             ExprKind::Path(qpath) => {\n                 intravisit::walk_expr(self, expr);\n                 let res = self.fcx.typeck_results.borrow().qpath_res(qpath, expr.hir_id);"}, {"sha": "12ef07ed032d75987ffada0d2996a91e251f142b", "filename": "src/test/ui/generator/yielding-in-match-guards.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66345d93592cda1d8f01d4cd0331a95e8feee45c/src%2Ftest%2Fui%2Fgenerator%2Fyielding-in-match-guards.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66345d93592cda1d8f01d4cd0331a95e8feee45c/src%2Ftest%2Fui%2Fgenerator%2Fyielding-in-match-guards.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fyielding-in-match-guards.rs?ref=66345d93592cda1d8f01d4cd0331a95e8feee45c", "patch": "@@ -26,4 +26,4 @@ async fn g() {\n     }\n }\n \n-fn main() {}\n\\ No newline at end of file\n+fn main() {}"}]}