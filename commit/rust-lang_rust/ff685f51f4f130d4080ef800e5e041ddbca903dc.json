{"sha": "ff685f51f4f130d4080ef800e5e041ddbca903dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmNjg1ZjUxZjRmMTMwZDQwODBlZjgwMGU1ZTA0MWRkYmNhOTAzZGM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-16T18:19:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-16T18:19:04Z"}, "message": "Rollup merge of #74406 - Mark-Simulacrum:fix-windows-maybe, r=Mark-Simulacrum\n\nSet shell for github actions CI\n\nr? @pietroalbini but because this seems at worst harmless and CI is broken self approving", "tree": {"sha": "efbe559cc0c2e00c0bb7b690975388002d00f06f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efbe559cc0c2e00c0bb7b690975388002d00f06f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff685f51f4f130d4080ef800e5e041ddbca903dc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfEJoYCRBK7hj4Ov3rIwAAdHIIAJYfE9PFEI8hr1IpeCWPD9nc\nC45J72myU0uSv9aATrTZrU/m+UP4GQrbUsdbp41DW8ocrIlX+e6JcAQqu0hQ94nY\nyMwY/n87Dvg9kl8E0ruTtaROMr0fTuCHbcYj9Lzv8ulMVS1kvfbeMP/P/cC2XVer\nYYNzS6uEgZBRK+F3HqTOhTtGqMAOe/B+u1VL8jHrWLCE55uH9aP8PCvTHTafrcov\nXR5Q530S8BMTK1+tQNhPBf42vrcyrB0Ts6kxXnCbby7hmqY+8fHa1ZMJp+tq/k9X\nbNIAJsET/R4ub3WILB+z4R/32O2kJVXJ9S9I2qemAbrdTIN4FNgiY1JJC1EVHeQ=\n=J7q6\n-----END PGP SIGNATURE-----\n", "payload": "tree efbe559cc0c2e00c0bb7b690975388002d00f06f\nparent 043914ff68d822393c865db12dd062722e066edb\nparent 5b287f6ce1ba6746bf26780006a2340634ae7719\nauthor Manish Goregaokar <manishsmail@gmail.com> 1594923544 -0700\ncommitter GitHub <noreply@github.com> 1594923544 -0700\n\nRollup merge of #74406 - Mark-Simulacrum:fix-windows-maybe, r=Mark-Simulacrum\n\nSet shell for github actions CI\n\nr? @pietroalbini but because this seems at worst harmless and CI is broken self approving\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff685f51f4f130d4080ef800e5e041ddbca903dc", "html_url": "https://github.com/rust-lang/rust/commit/ff685f51f4f130d4080ef800e5e041ddbca903dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff685f51f4f130d4080ef800e5e041ddbca903dc/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "043914ff68d822393c865db12dd062722e066edb", "url": "https://api.github.com/repos/rust-lang/rust/commits/043914ff68d822393c865db12dd062722e066edb", "html_url": "https://github.com/rust-lang/rust/commit/043914ff68d822393c865db12dd062722e066edb"}, {"sha": "5b287f6ce1ba6746bf26780006a2340634ae7719", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b287f6ce1ba6746bf26780006a2340634ae7719", "html_url": "https://github.com/rust-lang/rust/commit/5b287f6ce1ba6746bf26780006a2340634ae7719"}], "stats": {"total": 97, "additions": 97, "deletions": 0}, "files": [{"sha": "99140bec1702983fe497edf07013e0e0accb8d58", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/ff685f51f4f130d4080ef800e5e041ddbca903dc/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/ff685f51f4f130d4080ef800e5e041ddbca903dc/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=ff685f51f4f130d4080ef800e5e041ddbca903dc", "patch": "@@ -66,66 +66,85 @@ jobs:\n         if: \"success() && !env.SKIP_JOB && github.ref != 'refs/heads/try'\"\n       - name: add extra environment variables\n         run: src/ci/scripts/setup-environment.sh\n+        shell: bash\n         env:\n           EXTRA_VARIABLES: \"${{ toJson(matrix.env) }}\"\n         if: success() && !env.SKIP_JOB\n       - name: decide whether to skip this job\n         run: src/ci/scripts/should-skip-this.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: collect CPU statistics\n         run: src/ci/scripts/collect-cpu-stats.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: show the current environment\n         run: src/ci/scripts/dump-environment.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install awscli\n         run: src/ci/scripts/install-awscli.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install sccache\n         run: src/ci/scripts/install-sccache.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install clang\n         run: src/ci/scripts/install-clang.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install WIX\n         run: src/ci/scripts/install-wix.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: ensure the build happens on a partition with enough space\n         run: src/ci/scripts/symlink-build-dir.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install MSYS2\n         run: src/ci/scripts/install-msys2.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install MinGW\n         run: src/ci/scripts/install-mingw.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install ninja\n         run: src/ci/scripts/install-ninja.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: enable ipv6 on Docker\n         run: src/ci/scripts/enable-docker-ipv6.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: checkout submodules\n         run: src/ci/scripts/checkout-submodules.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: ensure line endings are correct\n         run: src/ci/scripts/verify-line-endings.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: run the build\n         run: src/ci/scripts/run-build-from-ci.sh\n+        shell: bash\n         env:\n           AWS_ACCESS_KEY_ID: \"${{ env.CACHES_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.CACHES_AWS_ACCESS_KEY_ID)] }}\"\n           TOOLSTATE_REPO_ACCESS_TOKEN: \"${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}\"\n         if: success() && !env.SKIP_JOB\n       - name: upload artifacts to S3\n         run: src/ci/scripts/upload-artifacts.sh\n+        shell: bash\n         env:\n           AWS_ACCESS_KEY_ID: \"${{ env.ARTIFACTS_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ARTIFACTS_AWS_ACCESS_KEY_ID)] }}\"\n@@ -166,66 +185,85 @@ jobs:\n         if: \"success() && !env.SKIP_JOB && github.ref != 'refs/heads/try'\"\n       - name: add extra environment variables\n         run: src/ci/scripts/setup-environment.sh\n+        shell: bash\n         env:\n           EXTRA_VARIABLES: \"${{ toJson(matrix.env) }}\"\n         if: success() && !env.SKIP_JOB\n       - name: decide whether to skip this job\n         run: src/ci/scripts/should-skip-this.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: collect CPU statistics\n         run: src/ci/scripts/collect-cpu-stats.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: show the current environment\n         run: src/ci/scripts/dump-environment.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install awscli\n         run: src/ci/scripts/install-awscli.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install sccache\n         run: src/ci/scripts/install-sccache.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install clang\n         run: src/ci/scripts/install-clang.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install WIX\n         run: src/ci/scripts/install-wix.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: ensure the build happens on a partition with enough space\n         run: src/ci/scripts/symlink-build-dir.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install MSYS2\n         run: src/ci/scripts/install-msys2.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install MinGW\n         run: src/ci/scripts/install-mingw.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install ninja\n         run: src/ci/scripts/install-ninja.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: enable ipv6 on Docker\n         run: src/ci/scripts/enable-docker-ipv6.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: checkout submodules\n         run: src/ci/scripts/checkout-submodules.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: ensure line endings are correct\n         run: src/ci/scripts/verify-line-endings.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: run the build\n         run: src/ci/scripts/run-build-from-ci.sh\n+        shell: bash\n         env:\n           AWS_ACCESS_KEY_ID: \"${{ env.CACHES_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.CACHES_AWS_ACCESS_KEY_ID)] }}\"\n           TOOLSTATE_REPO_ACCESS_TOKEN: \"${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}\"\n         if: success() && !env.SKIP_JOB\n       - name: upload artifacts to S3\n         run: src/ci/scripts/upload-artifacts.sh\n+        shell: bash\n         env:\n           AWS_ACCESS_KEY_ID: \"${{ env.ARTIFACTS_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ARTIFACTS_AWS_ACCESS_KEY_ID)] }}\"\n@@ -484,66 +522,85 @@ jobs:\n         if: \"success() && !env.SKIP_JOB && github.ref != 'refs/heads/try'\"\n       - name: add extra environment variables\n         run: src/ci/scripts/setup-environment.sh\n+        shell: bash\n         env:\n           EXTRA_VARIABLES: \"${{ toJson(matrix.env) }}\"\n         if: success() && !env.SKIP_JOB\n       - name: decide whether to skip this job\n         run: src/ci/scripts/should-skip-this.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: collect CPU statistics\n         run: src/ci/scripts/collect-cpu-stats.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: show the current environment\n         run: src/ci/scripts/dump-environment.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install awscli\n         run: src/ci/scripts/install-awscli.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install sccache\n         run: src/ci/scripts/install-sccache.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install clang\n         run: src/ci/scripts/install-clang.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install WIX\n         run: src/ci/scripts/install-wix.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: ensure the build happens on a partition with enough space\n         run: src/ci/scripts/symlink-build-dir.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install MSYS2\n         run: src/ci/scripts/install-msys2.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install MinGW\n         run: src/ci/scripts/install-mingw.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install ninja\n         run: src/ci/scripts/install-ninja.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: enable ipv6 on Docker\n         run: src/ci/scripts/enable-docker-ipv6.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: checkout submodules\n         run: src/ci/scripts/checkout-submodules.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: ensure line endings are correct\n         run: src/ci/scripts/verify-line-endings.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: run the build\n         run: src/ci/scripts/run-build-from-ci.sh\n+        shell: bash\n         env:\n           AWS_ACCESS_KEY_ID: \"${{ env.CACHES_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.CACHES_AWS_ACCESS_KEY_ID)] }}\"\n           TOOLSTATE_REPO_ACCESS_TOKEN: \"${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}\"\n         if: success() && !env.SKIP_JOB\n       - name: upload artifacts to S3\n         run: src/ci/scripts/upload-artifacts.sh\n+        shell: bash\n         env:\n           AWS_ACCESS_KEY_ID: \"${{ env.ARTIFACTS_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ARTIFACTS_AWS_ACCESS_KEY_ID)] }}\"\n@@ -610,66 +667,85 @@ jobs:\n         if: \"success() && !env.SKIP_JOB && github.ref != 'refs/heads/try'\"\n       - name: add extra environment variables\n         run: src/ci/scripts/setup-environment.sh\n+        shell: bash\n         env:\n           EXTRA_VARIABLES: \"${{ toJson(matrix.env) }}\"\n         if: success() && !env.SKIP_JOB\n       - name: decide whether to skip this job\n         run: src/ci/scripts/should-skip-this.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: collect CPU statistics\n         run: src/ci/scripts/collect-cpu-stats.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: show the current environment\n         run: src/ci/scripts/dump-environment.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install awscli\n         run: src/ci/scripts/install-awscli.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install sccache\n         run: src/ci/scripts/install-sccache.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install clang\n         run: src/ci/scripts/install-clang.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install WIX\n         run: src/ci/scripts/install-wix.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: ensure the build happens on a partition with enough space\n         run: src/ci/scripts/symlink-build-dir.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install MSYS2\n         run: src/ci/scripts/install-msys2.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install MinGW\n         run: src/ci/scripts/install-mingw.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: install ninja\n         run: src/ci/scripts/install-ninja.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: enable ipv6 on Docker\n         run: src/ci/scripts/enable-docker-ipv6.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: checkout submodules\n         run: src/ci/scripts/checkout-submodules.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: ensure line endings are correct\n         run: src/ci/scripts/verify-line-endings.sh\n+        shell: bash\n         if: success() && !env.SKIP_JOB\n       - name: run the build\n         run: src/ci/scripts/run-build-from-ci.sh\n+        shell: bash\n         env:\n           AWS_ACCESS_KEY_ID: \"${{ env.CACHES_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.CACHES_AWS_ACCESS_KEY_ID)] }}\"\n           TOOLSTATE_REPO_ACCESS_TOKEN: \"${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}\"\n         if: success() && !env.SKIP_JOB\n       - name: upload artifacts to S3\n         run: src/ci/scripts/upload-artifacts.sh\n+        shell: bash\n         env:\n           AWS_ACCESS_KEY_ID: \"${{ env.ARTIFACTS_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ARTIFACTS_AWS_ACCESS_KEY_ID)] }}\"\n@@ -694,6 +770,7 @@ jobs:\n           fetch-depth: 2\n       - name: publish toolstate\n         run: src/ci/publish_toolstate.sh\n+        shell: bash\n         env:\n           TOOLSTATE_REPO_ACCESS_TOKEN: \"${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}\"\n         if: success() && !env.SKIP_JOB"}, {"sha": "0b3b77f217dbd6095ae04613c500ee3cfa0913c9", "filename": "src/ci/github-actions/ci.yml", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ff685f51f4f130d4080ef800e5e041ddbca903dc/src%2Fci%2Fgithub-actions%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/ff685f51f4f130d4080ef800e5e041ddbca903dc/src%2Fci%2Fgithub-actions%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fgithub-actions%2Fci.yml?ref=ff685f51f4f130d4080ef800e5e041ddbca903dc", "patch": "@@ -95,6 +95,7 @@ x--expand-yaml-anchors--remove:\n \n       - name: add extra environment variables\n         run: src/ci/scripts/setup-environment.sh\n+        shell: bash\n         env:\n           # Since it's not possible to merge `${{ matrix.env }}` with the other\n           # variables in `job.<name>.env`, the variables defined in the matrix\n@@ -105,54 +106,67 @@ x--expand-yaml-anchors--remove:\n \n       - name: decide whether to skip this job\n         run: src/ci/scripts/should-skip-this.sh\n+        shell: bash\n         <<: *step\n \n       - name: collect CPU statistics\n         run: src/ci/scripts/collect-cpu-stats.sh\n+        shell: bash\n         <<: *step\n \n       - name: show the current environment\n         run: src/ci/scripts/dump-environment.sh\n+        shell: bash\n         <<: *step\n \n       - name: install awscli\n         run: src/ci/scripts/install-awscli.sh\n+        shell: bash\n         <<: *step\n \n       - name: install sccache\n         run: src/ci/scripts/install-sccache.sh\n+        shell: bash\n         <<: *step\n \n       - name: install clang\n         run: src/ci/scripts/install-clang.sh\n+        shell: bash\n         <<: *step\n \n       - name: install WIX\n         run: src/ci/scripts/install-wix.sh\n+        shell: bash\n         <<: *step\n \n       - name: ensure the build happens on a partition with enough space\n         run: src/ci/scripts/symlink-build-dir.sh\n+        shell: bash\n         <<: *step\n \n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n+        shell: bash\n         <<: *step\n \n       - name: install MSYS2\n         run: src/ci/scripts/install-msys2.sh\n+        shell: bash\n         <<: *step\n \n       - name: install MinGW\n         run: src/ci/scripts/install-mingw.sh\n+        shell: bash\n         <<: *step\n \n       - name: install ninja\n         run: src/ci/scripts/install-ninja.sh\n+        shell: bash\n         <<: *step\n \n       - name: enable ipv6 on Docker\n         run: src/ci/scripts/enable-docker-ipv6.sh\n+        shell: bash\n         <<: *step\n \n       # Disable automatic line ending conversion (again). On Windows, when we're\n@@ -162,18 +176,22 @@ x--expand-yaml-anchors--remove:\n       # appropriate line endings.\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n+        shell: bash\n         <<: *step\n \n       - name: checkout submodules\n         run: src/ci/scripts/checkout-submodules.sh\n+        shell: bash\n         <<: *step\n \n       - name: ensure line endings are correct\n         run: src/ci/scripts/verify-line-endings.sh\n+        shell: bash\n         <<: *step\n \n       - name: run the build\n         run: src/ci/scripts/run-build-from-ci.sh\n+        shell: bash\n         env:\n           AWS_ACCESS_KEY_ID: ${{ env.CACHES_AWS_ACCESS_KEY_ID }}\n           AWS_SECRET_ACCESS_KEY: ${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.CACHES_AWS_ACCESS_KEY_ID)] }}\n@@ -182,6 +200,7 @@ x--expand-yaml-anchors--remove:\n \n       - name: upload artifacts to S3\n         run: src/ci/scripts/upload-artifacts.sh\n+        shell: bash\n         env:\n           AWS_ACCESS_KEY_ID: ${{ env.ARTIFACTS_AWS_ACCESS_KEY_ID }}\n           AWS_SECRET_ACCESS_KEY: ${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ARTIFACTS_AWS_ACCESS_KEY_ID)] }}\n@@ -620,6 +639,7 @@ jobs:\n \n       - name: publish toolstate\n         run: src/ci/publish_toolstate.sh\n+        shell: bash\n         env:\n           TOOLSTATE_REPO_ACCESS_TOKEN: ${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}\n         <<: *step"}]}