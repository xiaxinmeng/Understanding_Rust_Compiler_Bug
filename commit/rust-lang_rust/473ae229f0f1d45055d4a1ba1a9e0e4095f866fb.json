{"sha": "473ae229f0f1d45055d4a1ba1a9e0e4095f866fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3M2FlMjI5ZjBmMWQ0NTA1NWQ0YTFiYTFhOWUwZTQwOTVmODY2ZmI=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-09-25T00:29:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-25T00:29:47Z"}, "message": "Rollup merge of #77136 - ecstatic-morse:issue-77134, r=oli-obk\n\nSuggest `const_mut_refs`, not `const_fn` for mutable references in `const fn`\n\nResolves #77134.\n\nPrior to #76850, most uses of `&mut` in `const fn` ~~required~~ involved two feature gates, `const_mut_refs` and `const_fn`. The first allowed all mutable borrows of locals. The second allowed only locals, arguments and return values whose types contained `&mut`. I switched the second check to the `const_mut_refs` gate. However, I forgot update the error message with the new suggestion.\n\nAlternatively, we could revert to having two different feature gates for this. OP's code never borrows anything mutably, so it didn't need `const_mut_refs` in the past, only `const_fn`. I'd prefer to keep everything under a single gate, however.\n\nr? @oli-obk", "tree": {"sha": "482d7d201e23f043710f1bbcb19672774af0f87d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/482d7d201e23f043710f1bbcb19672774af0f87d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/473ae229f0f1d45055d4a1ba1a9e0e4095f866fb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfbTn7CRBK7hj4Ov3rIwAAdHIIAFsKTIF+QKtnSAayLoZh3Qgg\nacV+XK5f3nrK+TB1IR4Hl4zIzfr3I0MpWBdhXd1nGwJ7EQE9Evoecovov8yNs9nV\nfqJINQm9uTv6S8sS8PzVWZ3mS1MxTYMVmDobHtuOXwi8vv2UVbnK85i9173HfZ2/\nTc1j/aYkYExcuE7+YU0AmfT2s/JwxZ5fP5fOZ3Pc7uabwDvVKkT+MbgJTx9wA313\n/CtxhK9T4wrGQVjID443Rtv8nPCuQjxOInGf8QrqASZdlezLJVlH3bsljUIcRuHZ\nCz6kjPYqxIE19k9k5pPsArI+uZh+Dbn41fUyEyJNrP6IDStL35rMQiQLdtjhnpU=\n=XAzQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 482d7d201e23f043710f1bbcb19672774af0f87d\nparent 6f3da3d53ff29e604a26d9c94a14147094575b1d\nparent e5e5e64ff1b91e57fed22e7a52e5de333980fafd\nauthor Jonas Schievink <jonasschievink@gmail.com> 1600993787 +0200\ncommitter GitHub <noreply@github.com> 1600993787 +0200\n\nRollup merge of #77136 - ecstatic-morse:issue-77134, r=oli-obk\n\nSuggest `const_mut_refs`, not `const_fn` for mutable references in `const fn`\n\nResolves #77134.\n\nPrior to #76850, most uses of `&mut` in `const fn` ~~required~~ involved two feature gates, `const_mut_refs` and `const_fn`. The first allowed all mutable borrows of locals. The second allowed only locals, arguments and return values whose types contained `&mut`. I switched the second check to the `const_mut_refs` gate. However, I forgot update the error message with the new suggestion.\n\nAlternatively, we could revert to having two different feature gates for this. OP's code never borrows anything mutably, so it didn't need `const_mut_refs` in the past, only `const_fn`. I'd prefer to keep everything under a single gate, however.\n\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/473ae229f0f1d45055d4a1ba1a9e0e4095f866fb", "html_url": "https://github.com/rust-lang/rust/commit/473ae229f0f1d45055d4a1ba1a9e0e4095f866fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/473ae229f0f1d45055d4a1ba1a9e0e4095f866fb/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f3da3d53ff29e604a26d9c94a14147094575b1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f3da3d53ff29e604a26d9c94a14147094575b1d", "html_url": "https://github.com/rust-lang/rust/commit/6f3da3d53ff29e604a26d9c94a14147094575b1d"}, {"sha": "e5e5e64ff1b91e57fed22e7a52e5de333980fafd", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5e5e64ff1b91e57fed22e7a52e5de333980fafd", "html_url": "https://github.com/rust-lang/rust/commit/e5e5e64ff1b91e57fed22e7a52e5de333980fafd"}], "stats": {"total": 99, "additions": 53, "deletions": 46}, "files": [{"sha": "d978d9279810d559e65e7119585cf43bc4269390", "filename": "compiler/rustc_mir/src/transform/check_consts/ops.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/473ae229f0f1d45055d4a1ba1a9e0e4095f866fb/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/473ae229f0f1d45055d4a1ba1a9e0e4095f866fb/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs?ref=473ae229f0f1d45055d4a1ba1a9e0e4095f866fb", "patch": "@@ -535,6 +535,7 @@ impl NonConstOp for UnsizingCast {\n     }\n }\n \n+// Types that cannot appear in the signature or locals of a `const fn`.\n pub mod ty {\n     use super::*;\n \n@@ -548,7 +549,13 @@ pub mod ty {\n         }\n \n         fn emit_error(&self, ccx: &ConstCx<'_, '_>, span: Span) {\n-            mcf_emit_error(ccx, span, \"mutable references in const fn are unstable\");\n+            feature_err(\n+                &ccx.tcx.sess.parse_sess,\n+                sym::const_mut_refs,\n+                span,\n+                &format!(\"mutable references are not allowed in {}s\", ccx.const_kind()),\n+            )\n+            .emit()\n         }\n     }\n "}, {"sha": "ce9be4ac5c2af5abfb35ad62c70f058e5e96074c", "filename": "src/test/ui/consts/const-mut-refs/feature-gate-const_mut_refs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/473ae229f0f1d45055d4a1ba1a9e0e4095f866fb/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Ffeature-gate-const_mut_refs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/473ae229f0f1d45055d4a1ba1a9e0e4095f866fb/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Ffeature-gate-const_mut_refs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Ffeature-gate-const_mut_refs.rs?ref=473ae229f0f1d45055d4a1ba1a9e0e4095f866fb", "patch": "@@ -2,7 +2,7 @@ fn main() {\n     foo(&mut 5);\n }\n \n-const fn foo(x: &mut i32) -> i32 { //~ ERROR mutable references in const fn\n+const fn foo(x: &mut i32) -> i32 { //~ ERROR mutable references\n     *x + 1\n \n }"}, {"sha": "3f9bd37053a0ebca11af6ebf5779dff881c1df3a", "filename": "src/test/ui/consts/const-mut-refs/feature-gate-const_mut_refs.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/473ae229f0f1d45055d4a1ba1a9e0e4095f866fb/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Ffeature-gate-const_mut_refs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/473ae229f0f1d45055d4a1ba1a9e0e4095f866fb/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Ffeature-gate-const_mut_refs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Ffeature-gate-const_mut_refs.stderr?ref=473ae229f0f1d45055d4a1ba1a9e0e4095f866fb", "patch": "@@ -1,12 +1,12 @@\n-error[E0723]: mutable references in const fn are unstable\n+error[E0658]: mutable references are not allowed in constant functions\n   --> $DIR/feature-gate-const_mut_refs.rs:5:14\n    |\n LL | const fn foo(x: &mut i32) -> i32 {\n    |              ^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0723`.\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "15badea003736ebd785215dd2553f193fcc8cc16", "filename": "src/test/ui/consts/const_let_assign3.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/473ae229f0f1d45055d4a1ba1a9e0e4095f866fb/src%2Ftest%2Fui%2Fconsts%2Fconst_let_assign3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/473ae229f0f1d45055d4a1ba1a9e0e4095f866fb/src%2Ftest%2Fui%2Fconsts%2Fconst_let_assign3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_let_assign3.stderr?ref=473ae229f0f1d45055d4a1ba1a9e0e4095f866fb", "patch": "@@ -1,11 +1,11 @@\n-error[E0723]: mutable references in const fn are unstable\n+error[E0658]: mutable references are not allowed in constant functions\n   --> $DIR/const_let_assign3.rs:8:18\n    |\n LL |     const fn foo(&mut self, x: u32) {\n    |                  ^^^^^^^^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0764]: mutable references are not allowed in constants\n   --> $DIR/const_let_assign3.rs:16:5\n@@ -29,5 +29,5 @@ LL |     *y = 42;\n \n error: aborting due to 4 previous errors\n \n-Some errors have detailed explanations: E0019, E0723, E0764.\n+Some errors have detailed explanations: E0019, E0658, E0764.\n For more information about an error, try `rustc --explain E0019`."}, {"sha": "336d754b06a735472df01db6c7cbec586d085458", "filename": "src/test/ui/consts/min_const_fn/min_const_fn.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/473ae229f0f1d45055d4a1ba1a9e0e4095f866fb/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/473ae229f0f1d45055d4a1ba1a9e0e4095f866fb/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.rs?ref=473ae229f0f1d45055d4a1ba1a9e0e4095f866fb", "patch": "@@ -37,26 +37,26 @@ impl<T> Foo<T> {\n     const fn into_inner(self) -> T { self.0 } //~ destructors cannot be evaluated\n     const fn get(&self) -> &T { &self.0 }\n     const fn get_mut(&mut self) -> &mut T { &mut self.0 }\n-    //~^ mutable references in const fn are unstable\n+    //~^ mutable references\n }\n impl<'a, T> Foo<T> {\n     const fn new_lt(t: T) -> Self { Foo(t) }\n     const fn into_inner_lt(self) -> T { self.0 } //~ destructors cannot be evaluated\n     const fn get_lt(&'a self) -> &T { &self.0 }\n     const fn get_mut_lt(&'a mut self) -> &mut T { &mut self.0 }\n-    //~^ mutable references in const fn are unstable\n+    //~^ mutable references\n }\n impl<T: Sized> Foo<T> {\n     const fn new_s(t: T) -> Self { Foo(t) }\n     const fn into_inner_s(self) -> T { self.0 } //~ ERROR destructors\n     const fn get_s(&self) -> &T { &self.0 }\n     const fn get_mut_s(&mut self) -> &mut T { &mut self.0 }\n-    //~^ mutable references in const fn are unstable\n+    //~^ mutable references\n }\n impl<T: ?Sized> Foo<T> {\n     const fn get_sq(&self) -> &T { &self.0 }\n     const fn get_mut_sq(&mut self) -> &mut T { &mut self.0 }\n-    //~^ mutable references in const fn are unstable\n+    //~^ mutable references\n }\n \n \n@@ -99,7 +99,7 @@ const fn foo30_2_with_unsafe(x: *mut u32) -> usize { unsafe { x as usize } }\n //~^ ERROR casting pointers to integers\n const fn foo30_6() -> bool { let x = true; x }\n const fn inc(x: &mut i32) { *x += 1 }\n-//~^ ERROR mutable references in const fn are unstable\n+//~^ ERROR mutable references\n \n // ok\n const fn foo36(a: bool, b: bool) -> bool { a && b }"}, {"sha": "c96500e38ec83de39d413bb6075c8994dfec5ae9", "filename": "src/test/ui/consts/min_const_fn/min_const_fn.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/473ae229f0f1d45055d4a1ba1a9e0e4095f866fb/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/473ae229f0f1d45055d4a1ba1a9e0e4095f866fb/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.stderr?ref=473ae229f0f1d45055d4a1ba1a9e0e4095f866fb", "patch": "@@ -6,14 +6,14 @@ LL |     const fn into_inner(self) -> T { self.0 }\n    |                         |\n    |                         constant functions cannot evaluate destructors\n \n-error[E0723]: mutable references in const fn are unstable\n+error[E0658]: mutable references are not allowed in constant functions\n   --> $DIR/min_const_fn.rs:39:36\n    |\n LL |     const fn get_mut(&mut self) -> &mut T { &mut self.0 }\n    |                                    ^^^^^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0493]: destructors cannot be evaluated at compile-time\n   --> $DIR/min_const_fn.rs:44:28\n@@ -23,14 +23,14 @@ LL |     const fn into_inner_lt(self) -> T { self.0 }\n    |                            |\n    |                            constant functions cannot evaluate destructors\n \n-error[E0723]: mutable references in const fn are unstable\n+error[E0658]: mutable references are not allowed in constant functions\n   --> $DIR/min_const_fn.rs:46:42\n    |\n LL |     const fn get_mut_lt(&'a mut self) -> &mut T { &mut self.0 }\n    |                                          ^^^^^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0493]: destructors cannot be evaluated at compile-time\n   --> $DIR/min_const_fn.rs:51:27\n@@ -40,23 +40,23 @@ LL |     const fn into_inner_s(self) -> T { self.0 }\n    |                           |\n    |                           constant functions cannot evaluate destructors\n \n-error[E0723]: mutable references in const fn are unstable\n+error[E0658]: mutable references are not allowed in constant functions\n   --> $DIR/min_const_fn.rs:53:38\n    |\n LL |     const fn get_mut_s(&mut self) -> &mut T { &mut self.0 }\n    |                                      ^^^^^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n-error[E0723]: mutable references in const fn are unstable\n+error[E0658]: mutable references are not allowed in constant functions\n   --> $DIR/min_const_fn.rs:58:39\n    |\n LL |     const fn get_mut_sq(&mut self) -> &mut T { &mut self.0 }\n    |                                       ^^^^^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn.rs:76:16\n@@ -164,14 +164,14 @@ LL | const fn foo30_2_with_unsafe(x: *mut u32) -> usize { unsafe { x as usize }\n    = note: see issue #51910 <https://github.com/rust-lang/rust/issues/51910> for more information\n    = help: add `#![feature(const_raw_ptr_to_usize_cast)]` to the crate attributes to enable\n \n-error[E0723]: mutable references in const fn are unstable\n+error[E0658]: mutable references are not allowed in constant functions\n   --> $DIR/min_const_fn.rs:101:14\n    |\n LL | const fn inc(x: &mut i32) { *x += 1 }\n    |              ^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn.rs:110:6"}, {"sha": "580b1d50f774e4923825905e2d8c7cf66dedfbe5", "filename": "src/test/ui/consts/min_const_fn/mutable_borrow.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/473ae229f0f1d45055d4a1ba1a9e0e4095f866fb/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmutable_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/473ae229f0f1d45055d4a1ba1a9e0e4095f866fb/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmutable_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmutable_borrow.rs?ref=473ae229f0f1d45055d4a1ba1a9e0e4095f866fb", "patch": "@@ -1,6 +1,6 @@\n const fn mutable_ref_in_const() -> u8 {\n     let mut a = 0;\n-    let b = &mut a; //~ ERROR mutable references in const fn\n+    let b = &mut a; //~ ERROR mutable references\n     *b\n }\n \n@@ -9,7 +9,7 @@ struct X;\n impl X {\n     const fn inherent_mutable_ref_in_const() -> u8 {\n         let mut a = 0;\n-        let b = &mut a; //~ ERROR mutable references in const fn\n+        let b = &mut a; //~ ERROR mutable references\n         *b\n     }\n }"}, {"sha": "4e5cdbb18aae3649c117018539ef957de66d4d5c", "filename": "src/test/ui/consts/min_const_fn/mutable_borrow.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/473ae229f0f1d45055d4a1ba1a9e0e4095f866fb/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmutable_borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/473ae229f0f1d45055d4a1ba1a9e0e4095f866fb/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmutable_borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmutable_borrow.stderr?ref=473ae229f0f1d45055d4a1ba1a9e0e4095f866fb", "patch": "@@ -1,21 +1,21 @@\n-error[E0723]: mutable references in const fn are unstable\n+error[E0658]: mutable references are not allowed in constant functions\n   --> $DIR/mutable_borrow.rs:3:9\n    |\n LL |     let b = &mut a;\n    |         ^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n-error[E0723]: mutable references in const fn are unstable\n+error[E0658]: mutable references are not allowed in constant functions\n   --> $DIR/mutable_borrow.rs:12:13\n    |\n LL |         let b = &mut a;\n    |             ^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n \n-For more information about this error, try `rustc --explain E0723`.\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "1a6bcd36ee15719dadc460080cb48307913a9385", "filename": "src/test/ui/unsafe/ranged_ints2_const.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/473ae229f0f1d45055d4a1ba1a9e0e4095f866fb/src%2Ftest%2Fui%2Funsafe%2Franged_ints2_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/473ae229f0f1d45055d4a1ba1a9e0e4095f866fb/src%2Ftest%2Fui%2Funsafe%2Franged_ints2_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Franged_ints2_const.stderr?ref=473ae229f0f1d45055d4a1ba1a9e0e4095f866fb", "patch": "@@ -1,20 +1,20 @@\n-error[E0723]: mutable references in const fn are unstable\n+error[E0658]: mutable references are not allowed in constant functions\n   --> $DIR/ranged_ints2_const.rs:11:9\n    |\n LL |     let y = &mut x.0;\n    |         ^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n-error[E0723]: mutable references in const fn are unstable\n+error[E0658]: mutable references are not allowed in constant functions\n   --> $DIR/ranged_ints2_const.rs:18:9\n    |\n LL |     let y = unsafe { &mut x.0 };\n    |         ^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0133]: mutation of layout constrained field is unsafe and requires unsafe function or block\n   --> $DIR/ranged_ints2_const.rs:11:13\n@@ -26,5 +26,5 @@ LL |     let y = &mut x.0;\n \n error: aborting due to 3 previous errors\n \n-Some errors have detailed explanations: E0133, E0723.\n+Some errors have detailed explanations: E0133, E0658.\n For more information about an error, try `rustc --explain E0133`."}]}