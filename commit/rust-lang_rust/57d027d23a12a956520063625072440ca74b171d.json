{"sha": "57d027d23a12a956520063625072440ca74b171d", "node_id": "C_kwDOAAsO6NoAKDU3ZDAyN2QyM2ExMmE5NTY1MjAwNjM2MjUwNzI0NDBjYTc0YjE3MWQ", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2022-04-07T14:34:36Z"}, "committer": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2022-06-06T11:10:13Z"}, "message": "Modify the signature of the request_* methods so that trait_upcasting is not required\n\nSigned-off-by: Nick Cameron <nrc@ncameron.org>", "tree": {"sha": "22181fdf092b90839e8070852048a713758ae8cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22181fdf092b90839e8070852048a713758ae8cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57d027d23a12a956520063625072440ca74b171d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57d027d23a12a956520063625072440ca74b171d", "html_url": "https://github.com/rust-lang/rust/commit/57d027d23a12a956520063625072440ca74b171d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57d027d23a12a956520063625072440ca74b171d/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb5db85f745614a1929b6a60125953170cab7462", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb5db85f745614a1929b6a60125953170cab7462", "html_url": "https://github.com/rust-lang/rust/commit/bb5db85f745614a1929b6a60125953170cab7462"}], "stats": {"total": 31, "additions": 19, "deletions": 12}, "files": [{"sha": "295ca00d0b4a1f7e28e01362fc35a23dba700b15", "filename": "library/core/src/any.rs", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/57d027d23a12a956520063625072440ca74b171d/library%2Fcore%2Fsrc%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57d027d23a12a956520063625072440ca74b171d/library%2Fcore%2Fsrc%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fany.rs?ref=57d027d23a12a956520063625072440ca74b171d", "patch": "@@ -110,9 +110,7 @@\n //! ## Examples\n //!\n //! ```\n-//! # #![allow(incomplete_features)]\n //! # #![feature(provide_any)]\n-//! # #![feature(trait_upcasting)]\n //! use std::any::{Provider, Demand, request_ref};\n //!\n //! // Definition of MyTrait\n@@ -122,9 +120,9 @@\n //!\n //! // Methods on `MyTrait` trait objects.\n //! impl dyn MyTrait + '_ {\n-//!     /// Common case: get a reference to a field of the error.\n+//!     /// Common case: get a reference to a field of the struct.\n //!     pub fn get_context_ref<T: ?Sized + 'static>(&self) -> Option<&T> {\n-//!         request_ref::<T>(self)\n+//!         request_ref::<T, _>(self)\n //!     }\n //! }\n //!\n@@ -785,20 +783,29 @@ pub trait Provider {\n \n /// Request a value from the `Provider`.\n #[unstable(feature = \"provide_any\", issue = \"none\")]\n-pub fn request_value<'a, T: 'static>(provider: &'a dyn Provider) -> Option<T> {\n-    request_by_type_tag::<'a, tags::Value<T>>(provider)\n+pub fn request_value<'a, T, P>(provider: &'a P) -> Option<T>\n+where\n+    T: 'static,\n+    P: Provider + ?Sized,\n+{\n+    request_by_type_tag::<'a, tags::Value<T>, P>(provider)\n }\n \n /// Request a reference from the `Provider`.\n #[unstable(feature = \"provide_any\", issue = \"none\")]\n-pub fn request_ref<'a, T: ?Sized + 'static>(provider: &'a dyn Provider) -> Option<&'a T> {\n-    request_by_type_tag::<'a, tags::Ref<tags::MaybeSizedValue<T>>>(provider)\n+pub fn request_ref<'a, T, P>(provider: &'a P) -> Option<&'a T>\n+where\n+    T: 'static + ?Sized,\n+    P: Provider + ?Sized,\n+{\n+    request_by_type_tag::<'a, tags::Ref<tags::MaybeSizedValue<T>>, P>(provider)\n }\n \n /// Request a specific value by tag from the `Provider`.\n-fn request_by_type_tag<'a, I>(provider: &'a dyn Provider) -> Option<I::Reified>\n+fn request_by_type_tag<'a, I, P>(provider: &'a P) -> Option<I::Reified>\n where\n     I: tags::Type<'a>,\n+    P: Provider + ?Sized,\n {\n     let mut tagged = TaggedOption::<'a, I>(None);\n     provider.provide(tagged.as_demand());"}, {"sha": "14a2b09c95eb77bf014e9f465c45f4291f701d58", "filename": "library/core/tests/any.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/57d027d23a12a956520063625072440ca74b171d/library%2Fcore%2Ftests%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57d027d23a12a956520063625072440ca74b171d/library%2Fcore%2Ftests%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fany.rs?ref=57d027d23a12a956520063625072440ca74b171d", "patch": "@@ -148,7 +148,7 @@ impl Provider for SomeConcreteType {\n fn test_provider() {\n     let obj: &dyn Provider = &SomeConcreteType { some_string: \"hello\".to_owned() };\n \n-    assert_eq!(&**request_ref::<String>(obj).unwrap(), \"hello\");\n-    assert_eq!(&*request_value::<String>(obj).unwrap(), \"bye\");\n-    assert_eq!(request_value::<u8>(obj), None);\n+    assert_eq!(&**request_ref::<String, _>(obj).unwrap(), \"hello\");\n+    assert_eq!(&*request_value::<String, _>(obj).unwrap(), \"bye\");\n+    assert_eq!(request_value::<u8, _>(obj), None);\n }"}]}