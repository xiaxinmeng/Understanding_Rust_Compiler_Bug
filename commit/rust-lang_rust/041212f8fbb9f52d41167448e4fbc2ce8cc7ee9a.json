{"sha": "041212f8fbb9f52d41167448e4fbc2ce8cc7ee9a", "node_id": "C_kwDOAAsO6NoAKDA0MTIxMmY4ZmJiOWY1MmQ0MTE2NzQ0OGU0ZmJjMmNlOGNjN2VlOWE", "commit": {"author": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-10-02T17:15:45Z"}, "committer": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-10-02T17:15:55Z"}, "message": "Report fatal lexer errors in `--cfg` command line arguments", "tree": {"sha": "c13075331c74e7e216d5769ad0f2efa6984b60ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c13075331c74e7e216d5769ad0f2efa6984b60ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/041212f8fbb9f52d41167448e4fbc2ce8cc7ee9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/041212f8fbb9f52d41167448e4fbc2ce8cc7ee9a", "html_url": "https://github.com/rust-lang/rust/commit/041212f8fbb9f52d41167448e4fbc2ce8cc7ee9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/041212f8fbb9f52d41167448e4fbc2ce8cc7ee9a/comments", "author": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed937594d3912ced11f6f35a90bb8bf591909d2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed937594d3912ced11f6f35a90bb8bf591909d2a", "html_url": "https://github.com/rust-lang/rust/commit/ed937594d3912ced11f6f35a90bb8bf591909d2a"}], "stats": {"total": 44, "additions": 37, "deletions": 7}, "files": [{"sha": "fa986ce8a7e1252585464387c241eb9dfad58dea", "filename": "compiler/rustc_errors/src/emitter.rs", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/041212f8fbb9f52d41167448e4fbc2ce8cc7ee9a/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/041212f8fbb9f52d41167448e4fbc2ce8cc7ee9a/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Femitter.rs?ref=041212f8fbb9f52d41167448e4fbc2ce8cc7ee9a", "patch": "@@ -15,7 +15,7 @@ use rustc_span::{MultiSpan, SourceFile, Span};\n use crate::snippet::{Annotation, AnnotationType, Line, MultilineAnnotation, Style, StyledString};\n use crate::styled_buffer::StyledBuffer;\n use crate::{\n-    CodeSuggestion, Diagnostic, DiagnosticId, Level, SubDiagnostic, SubstitutionHighlight,\n+    CodeSuggestion, Diagnostic, DiagnosticId, Handler, Level, SubDiagnostic, SubstitutionHighlight,\n     SuggestionStyle,\n };\n \n@@ -527,14 +527,27 @@ impl Emitter for EmitterWriter {\n     }\n }\n \n-/// An emitter that does nothing when emitting a diagnostic.\n-pub struct SilentEmitter;\n+/// An emitter that does nothing when emitting a non-fatal diagnostic.\n+/// Fatal diagnostics are forwarded to `fatal_handler` to avoid silent\n+/// failures of rustc, as witnessed e.g. in issue #89358.\n+pub struct SilentEmitter {\n+    pub fatal_handler: Handler,\n+    pub fatal_note: Option<String>,\n+}\n \n impl Emitter for SilentEmitter {\n     fn source_map(&self) -> Option<&Lrc<SourceMap>> {\n         None\n     }\n-    fn emit_diagnostic(&mut self, _: &Diagnostic) {}\n+    fn emit_diagnostic(&mut self, d: &Diagnostic) {\n+        if d.level == Level::Fatal {\n+            let mut d = d.clone();\n+            if let Some(ref note) = self.fatal_note {\n+                d.note(note);\n+            }\n+            self.fatal_handler.emit_diagnostic(&d);\n+        }\n+    }\n }\n \n /// Maximum number of lines we will print for a multiline suggestion; arbitrary."}, {"sha": "3233887169cd1cf84e7b23646d7827be66a642c1", "filename": "compiler/rustc_interface/src/interface.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/041212f8fbb9f52d41167448e4fbc2ce8cc7ee9a/compiler%2Frustc_interface%2Fsrc%2Finterface.rs", "raw_url": "https://github.com/rust-lang/rust/raw/041212f8fbb9f52d41167448e4fbc2ce8cc7ee9a/compiler%2Frustc_interface%2Fsrc%2Finterface.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Finterface.rs?ref=041212f8fbb9f52d41167448e4fbc2ce8cc7ee9a", "patch": "@@ -81,7 +81,10 @@ pub fn parse_cfgspecs(cfgspecs: Vec<String>) -> FxHashSet<(String, Option<String\n         let cfg = cfgspecs\n             .into_iter()\n             .map(|s| {\n-                let sess = ParseSess::with_silent_emitter();\n+                let sess = ParseSess::with_silent_emitter(Some(format!(\n+                    \"this error occurred on the command line: `--cfg={}`\",\n+                    s\n+                )));\n                 let filename = FileName::cfg_spec_source_code(&s);\n                 let mut parser = new_parser_from_source_str(&sess, filename, s.to_string());\n "}, {"sha": "f7246641dca3e952f8369c034a92c80de8988265", "filename": "compiler/rustc_session/src/parse.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/041212f8fbb9f52d41167448e4fbc2ce8cc7ee9a/compiler%2Frustc_session%2Fsrc%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/041212f8fbb9f52d41167448e4fbc2ce8cc7ee9a/compiler%2Frustc_session%2Fsrc%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fparse.rs?ref=041212f8fbb9f52d41167448e4fbc2ce8cc7ee9a", "patch": "@@ -174,9 +174,14 @@ impl ParseSess {\n         }\n     }\n \n-    pub fn with_silent_emitter() -> Self {\n+    pub fn with_silent_emitter(fatal_note: Option<String>) -> Self {\n         let sm = Lrc::new(SourceMap::new(FilePathMapping::empty()));\n-        let handler = Handler::with_emitter(false, None, Box::new(SilentEmitter));\n+        let fatal_handler = Handler::with_tty_emitter(ColorConfig::Auto, false, None, None);\n+        let handler = Handler::with_emitter(\n+            false,\n+            None,\n+            Box::new(SilentEmitter { fatal_handler, fatal_note }),\n+        );\n         ParseSess::with_span_handler(handler, sm)\n     }\n "}, {"sha": "149142f63ae1441498636353001f86496f23b2cc", "filename": "src/test/ui/conditional-compilation/cfg-arg-invalid-7.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/041212f8fbb9f52d41167448e4fbc2ce8cc7ee9a/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-arg-invalid-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/041212f8fbb9f52d41167448e4fbc2ce8cc7ee9a/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-arg-invalid-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-arg-invalid-7.rs?ref=041212f8fbb9f52d41167448e4fbc2ce8cc7ee9a", "patch": "@@ -0,0 +1,5 @@\n+// Regression test for issue #89358.\n+\n+// compile-flags: --cfg a\"\n+// error-pattern: unterminated double quote string\n+// error-pattern: this error occurred on the command line"}, {"sha": "919709c847019e9eeabd96d0852245ddb4d1fc04", "filename": "src/test/ui/conditional-compilation/cfg-arg-invalid-7.stderr", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/041212f8fbb9f52d41167448e4fbc2ce8cc7ee9a/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-arg-invalid-7.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/041212f8fbb9f52d41167448e4fbc2ce8cc7ee9a/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-arg-invalid-7.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-arg-invalid-7.stderr?ref=041212f8fbb9f52d41167448e4fbc2ce8cc7ee9a", "patch": "@@ -0,0 +1,4 @@\n+error[E0765]: unterminated double quote string\n+  |\n+  = note: this error occurred on the command line: `--cfg=a\"`\n+"}]}