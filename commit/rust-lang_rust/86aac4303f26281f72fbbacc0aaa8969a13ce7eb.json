{"sha": "86aac4303f26281f72fbbacc0aaa8969a13ce7eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2YWFjNDMwM2YyNjI4MWY3MmZiYmFjYzBhYWE4OTY5YTEzY2U3ZWI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-08T17:41:57Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-08T17:41:57Z"}, "message": "Reduce visibility", "tree": {"sha": "91c97ff64c1c71fd723ab5a041457ff0dab84b94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91c97ff64c1c71fd723ab5a041457ff0dab84b94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86aac4303f26281f72fbbacc0aaa8969a13ce7eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86aac4303f26281f72fbbacc0aaa8969a13ce7eb", "html_url": "https://github.com/rust-lang/rust/commit/86aac4303f26281f72fbbacc0aaa8969a13ce7eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86aac4303f26281f72fbbacc0aaa8969a13ce7eb/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dab7f3d2c6cd035f446fbdcda2442954da4afd3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/dab7f3d2c6cd035f446fbdcda2442954da4afd3a", "html_url": "https://github.com/rust-lang/rust/commit/dab7f3d2c6cd035f446fbdcda2442954da4afd3a"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "0e9aa44de5544f21c456ecadf019f2fbd6ac6b6d", "filename": "crates/ra_ide/src/hover.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/86aac4303f26281f72fbbacc0aaa8969a13ce7eb/crates%2Fra_ide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86aac4303f26281f72fbbacc0aaa8969a13ce7eb/crates%2Fra_ide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fhover.rs?ref=86aac4303f26281f72fbbacc0aaa8969a13ce7eb", "patch": "@@ -77,10 +77,6 @@ impl HoverResult {\n         Self::default()\n     }\n \n-    pub fn extend(&mut self, item: Option<String>) {\n-        self.results.extend(item);\n-    }\n-\n     pub fn is_empty(&self) -> bool {\n         self.results.is_empty()\n     }\n@@ -100,18 +96,20 @@ impl HoverResult {\n     pub fn actions(&self) -> &[HoverAction] {\n         &self.actions\n     }\n-\n-    pub fn push_action(&mut self, action: HoverAction) {\n-        self.actions.push(action);\n-    }\n-\n     /// Returns the results converted into markup\n     /// for displaying in a UI\n     ///\n     /// Does not process actions!\n     pub fn to_markup(&self) -> String {\n         self.results.join(\"\\n\\n___\\n\")\n     }\n+\n+    fn extend(&mut self, item: Option<String>) {\n+        self.results.extend(item);\n+    }\n+    fn push_action(&mut self, action: HoverAction) {\n+        self.actions.push(action);\n+    }\n }\n \n // Feature: Hover"}]}