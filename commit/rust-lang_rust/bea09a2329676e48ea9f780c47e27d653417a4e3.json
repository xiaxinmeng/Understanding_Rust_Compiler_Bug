{"sha": "bea09a2329676e48ea9f780c47e27d653417a4e3", "node_id": "C_kwDOAAsO6NoAKGJlYTA5YTIzMjk2NzZlNDhlYTlmNzgwYzQ3ZTI3ZDY1MzQxN2E0ZTM", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2022-01-04T23:24:23Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2022-01-28T21:45:41Z"}, "message": "Add path_def_id util", "tree": {"sha": "abfb3a075797fb96eb2afaa4924bd3514d07e3fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/abfb3a075797fb96eb2afaa4924bd3514d07e3fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bea09a2329676e48ea9f780c47e27d653417a4e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bea09a2329676e48ea9f780c47e27d653417a4e3", "html_url": "https://github.com/rust-lang/rust/commit/bea09a2329676e48ea9f780c47e27d653417a4e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bea09a2329676e48ea9f780c47e27d653417a4e3/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc975929c528d0883d7553c53dc47030c08d01e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc975929c528d0883d7553c53dc47030c08d01e0", "html_url": "https://github.com/rust-lang/rust/commit/cc975929c528d0883d7553c53dc47030c08d01e0"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "8cc4f0449e318077988b6a8013ad3ff3ea2683c6", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/bea09a2329676e48ea9f780c47e27d653417a4e3/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bea09a2329676e48ea9f780c47e27d653417a4e3/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=bea09a2329676e48ea9f780c47e27d653417a4e3", "patch": "@@ -497,6 +497,43 @@ pub fn path_to_local_id(expr: &Expr<'_>, id: HirId) -> bool {\n     path_to_local(expr) == Some(id)\n }\n \n+pub trait MaybePath<'hir> {\n+    fn hir_id(&self) -> HirId;\n+    fn qpath_opt(&self) -> Option<&QPath<'hir>>;\n+}\n+\n+macro_rules! maybe_path {\n+    ($ty:ident, $kind:ident) => {\n+        impl<'hir> MaybePath<'hir> for hir::$ty<'hir> {\n+            fn hir_id(&self) -> HirId {\n+                self.hir_id\n+            }\n+            fn qpath_opt(&self) -> Option<&QPath<'hir>> {\n+                match &self.kind {\n+                    hir::$kind::Path(qpath) => Some(qpath),\n+                    _ => None,\n+                }\n+            }\n+        }\n+    };\n+}\n+maybe_path!(Expr, ExprKind);\n+maybe_path!(Pat, PatKind);\n+maybe_path!(Ty, TyKind);\n+\n+/// If `maybe_path` is a path node, resolves it, otherwise returns `Res::Err`\n+pub fn path_res<'tcx>(cx: &LateContext<'_>, maybe_path: &impl MaybePath<'tcx>) -> Res {\n+    match maybe_path.qpath_opt() {\n+        None => Res::Err,\n+        Some(qpath) => cx.qpath_res(qpath, maybe_path.hir_id()),\n+    }\n+}\n+\n+/// If `maybe_path` is a path node which resolves to an item, retrieves the item ID\n+pub fn path_def_id<'tcx>(cx: &LateContext<'_>, maybe_path: &impl MaybePath<'tcx>) -> Option<DefId> {\n+    path_res(cx, maybe_path).opt_def_id()\n+}\n+\n /// Resolves a def path like `std::vec::Vec`.\n /// This function is expensive and should be used sparingly.\n pub fn def_path_res(cx: &LateContext<'_>, path: &[&str]) -> Res {"}]}