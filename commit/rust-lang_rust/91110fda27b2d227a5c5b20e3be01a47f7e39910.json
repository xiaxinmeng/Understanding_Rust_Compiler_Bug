{"sha": "91110fda27b2d227a5c5b20e3be01a47f7e39910", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxMTEwZmRhMjdiMmQyMjdhNWM1YjIwZTNiZTAxYTQ3ZjdlMzk5MTA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-15T01:34:19Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-15T19:57:12Z"}, "message": "ast: make ForeignItemKind an alias of AssocItemKind", "tree": {"sha": "33783a97ce328b9de7f5e1066afc0482a22509a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33783a97ce328b9de7f5e1066afc0482a22509a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91110fda27b2d227a5c5b20e3be01a47f7e39910", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91110fda27b2d227a5c5b20e3be01a47f7e39910", "html_url": "https://github.com/rust-lang/rust/commit/91110fda27b2d227a5c5b20e3be01a47f7e39910", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91110fda27b2d227a5c5b20e3be01a47f7e39910/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35884fe16889b39d4be43cf8effc3bdf843c6f12", "url": "https://api.github.com/repos/rust-lang/rust/commits/35884fe16889b39d4be43cf8effc3bdf843c6f12", "html_url": "https://github.com/rust-lang/rust/commit/35884fe16889b39d4be43cf8effc3bdf843c6f12"}], "stats": {"total": 33, "additions": 3, "deletions": 30}, "files": [{"sha": "a931d8c27ba8300787dc2c22f67a6e6d18674284", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 3, "deletions": 30, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/91110fda27b2d227a5c5b20e3be01a47f7e39910/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91110fda27b2d227a5c5b20e3be01a47f7e39910/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=91110fda27b2d227a5c5b20e3be01a47f7e39910", "patch": "@@ -2600,35 +2600,8 @@ impl ItemKind {\n     }\n }\n \n-pub type ForeignItem = Item<ForeignItemKind>;\n-\n-/// An item within an `extern` block.\n-#[derive(Clone, RustcEncodable, RustcDecodable, Debug)]\n-pub enum ForeignItemKind {\n-    /// A constant, `const $ident: $ty $def?;` where `def ::= \"=\" $expr? ;`.\n-    /// If `def` is parsed, then the constant is provided, and otherwise required.\n-    Const(P<Ty>, Option<P<Expr>>),\n-    /// A static item (`static FOO: u8`).\n-    Static(P<Ty>, Mutability, Option<P<Expr>>),\n-    /// A function.\n-    Fn(FnSig, Generics, Option<P<Block>>),\n-    /// A type.\n-    TyAlias(Generics, GenericBounds, Option<P<Ty>>),\n-    /// A macro expanding to an item.\n-    Macro(Mac),\n-}\n-\n-impl ForeignItemKind {\n-    pub fn descriptive_variant(&self) -> &str {\n-        match *self {\n-            ForeignItemKind::Fn(..) => \"foreign function\",\n-            ForeignItemKind::Const(..) => \"foreign const item\",\n-            ForeignItemKind::Static(..) => \"foreign static item\",\n-            ForeignItemKind::TyAlias(..) => \"foreign type\",\n-            ForeignItemKind::Macro(..) => \"macro in foreign module\",\n-        }\n-    }\n-}\n+pub type ForeignItem = Item<AssocItemKind>;\n+pub type ForeignItemKind = AssocItemKind;\n \n /// Represents associated items.\n /// These include items in `impl` and `trait` definitions.\n@@ -2646,7 +2619,7 @@ pub struct AssocItem {\n     pub tokens: Option<TokenStream>,\n }\n \n-/// Represents various kinds of content within an `impl`.\n+/// Represents non-free item kinds.\n ///\n /// The term \"provided\" in the variants below refers to the item having a default\n /// definition / body. Meanwhile, a \"required\" item lacks a definition / body."}]}