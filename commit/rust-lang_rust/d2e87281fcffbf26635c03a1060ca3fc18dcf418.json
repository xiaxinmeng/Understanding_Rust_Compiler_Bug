{"sha": "d2e87281fcffbf26635c03a1060ca3fc18dcf418", "node_id": "C_kwDOAAsO6NoAKGQyZTg3MjgxZmNmZmJmMjY2MzVjMDNhMTA2MGNhM2ZjMThkY2Y0MTg", "commit": {"author": {"name": "Proloy Mishra", "email": "67726964+pro465@users.noreply.github.com", "date": "2021-11-09T01:28:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-09T01:28:43Z"}, "message": "add `Simd::from_slice` (#177)\n\n* add `Simd::from_slice`\r\n\r\nuses a zeroed initial array and loops so that it can be const.\r\nunfortunately, parameterizing the assert with slice length\r\nneeds `#![feature(const_fn_fn_ptr_basics)]` to work.", "tree": {"sha": "bf8d7eebe671ddcbd50805a17e83abfc4654ce79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf8d7eebe671ddcbd50805a17e83abfc4654ce79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2e87281fcffbf26635c03a1060ca3fc18dcf418", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhic7LCRBK7hj4Ov3rIwAA+34IAGp58aPMh8i73Z6B7Gzc+SxE\n/3f5ghN45LisYNFTQIVnEuP5BFaCUQryvYD/mdn/oNMvPQ+7x+VHRHK6epY6sgjR\nmAXu4gh+l2jIi/sFdpxkd+64hUkb17k3HfmSRKByO7lwXfqn2cdXcIpF2d63VKXQ\ng998M2wsNWfr3nF9rvk/DJCJ7i4km3BTbYqgAhFLmwYV0huQJgyr5XxNrelL9XU+\nmzgW4KPhKNJ6ZEocayEmeosBV+kYq4gXHzmAn0SfribHXhWkY8JK5lCBMCv7Srfz\nR9RXST4Aayi0TFLo2ZABx9b06qjnhrDEb1HhSH4XA1MPWQOio6FYLocXCPG9+8s=\n=+kV0\n-----END PGP SIGNATURE-----\n", "payload": "tree bf8d7eebe671ddcbd50805a17e83abfc4654ce79\nparent 772bf2090e04db68790549bae36e5180423f9f65\nauthor Proloy Mishra <67726964+pro465@users.noreply.github.com> 1636421323 +0530\ncommitter GitHub <noreply@github.com> 1636421323 -0800\n\nadd `Simd::from_slice` (#177)\n\n* add `Simd::from_slice`\r\n\r\nuses a zeroed initial array and loops so that it can be const.\r\nunfortunately, parameterizing the assert with slice length\r\nneeds `#![feature(const_fn_fn_ptr_basics)]` to work."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2e87281fcffbf26635c03a1060ca3fc18dcf418", "html_url": "https://github.com/rust-lang/rust/commit/d2e87281fcffbf26635c03a1060ca3fc18dcf418", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2e87281fcffbf26635c03a1060ca3fc18dcf418/comments", "author": {"login": "pro465", "id": 67726964, "node_id": "MDQ6VXNlcjY3NzI2OTY0", "avatar_url": "https://avatars.githubusercontent.com/u/67726964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pro465", "html_url": "https://github.com/pro465", "followers_url": "https://api.github.com/users/pro465/followers", "following_url": "https://api.github.com/users/pro465/following{/other_user}", "gists_url": "https://api.github.com/users/pro465/gists{/gist_id}", "starred_url": "https://api.github.com/users/pro465/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pro465/subscriptions", "organizations_url": "https://api.github.com/users/pro465/orgs", "repos_url": "https://api.github.com/users/pro465/repos", "events_url": "https://api.github.com/users/pro465/events{/privacy}", "received_events_url": "https://api.github.com/users/pro465/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "772bf2090e04db68790549bae36e5180423f9f65", "url": "https://api.github.com/repos/rust-lang/rust/commits/772bf2090e04db68790549bae36e5180423f9f65", "html_url": "https://github.com/rust-lang/rust/commit/772bf2090e04db68790549bae36e5180423f9f65"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "7c5ec2bc314c434d56b66c3e5e181eefe70baa45", "filename": "crates/core_simd/src/vector.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d2e87281fcffbf26635c03a1060ca3fc18dcf418/crates%2Fcore_simd%2Fsrc%2Fvector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2e87281fcffbf26635c03a1060ca3fc18dcf418/crates%2Fcore_simd%2Fsrc%2Fvector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvector.rs?ref=d2e87281fcffbf26635c03a1060ca3fc18dcf418", "patch": "@@ -57,6 +57,24 @@ where\n         self.0\n     }\n \n+    /// Converts a slice to a SIMD vector containing `slice[..LANES]`\n+    /// # Panics\n+    /// `from_slice` will panic if the slice's `len` is less than the vector's `Simd::LANES`.\n+    #[must_use]\n+    pub const fn from_slice(slice: &[T]) -> Self {\n+        assert!(\n+            slice.len() >= LANES,\n+            \"slice length must be at least the number of lanes\"\n+        );\n+        let mut array = [slice[0]; LANES];\n+        let mut i = 0;\n+        while i < LANES {\n+            array[i] = slice[i];\n+            i += 1;\n+        }\n+        Self(array)\n+    }\n+\n     /// Reads from potentially discontiguous indices in `slice` to construct a SIMD vector.\n     /// If an index is out-of-bounds, the lane is instead selected from the `or` vector.\n     ///"}]}