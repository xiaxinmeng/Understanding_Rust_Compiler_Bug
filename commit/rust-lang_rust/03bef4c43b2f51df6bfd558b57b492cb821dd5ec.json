{"sha": "03bef4c43b2f51df6bfd558b57b492cb821dd5ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzYmVmNGM0M2IyZjUxZGY2YmZkNTU4YjU3YjQ5MmNiODIxZGQ1ZWM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-04-26T11:51:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-04-26T11:51:08Z"}, "message": "Auto merge of #32989 - GuillaumeGomez:e0393, r=Manishearth\n\nAdd E0393 error explanation\n\nPart of #32777.\n\nr? @Manishearth\ncc @steveklabnik", "tree": {"sha": "50650baabf22e5ff36c8ae80c4abc17cb820f228", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50650baabf22e5ff36c8ae80c4abc17cb820f228"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03bef4c43b2f51df6bfd558b57b492cb821dd5ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03bef4c43b2f51df6bfd558b57b492cb821dd5ec", "html_url": "https://github.com/rust-lang/rust/commit/03bef4c43b2f51df6bfd558b57b492cb821dd5ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03bef4c43b2f51df6bfd558b57b492cb821dd5ec/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81d070f5821126d2c03e8410fa8c7d7a86d89a66", "url": "https://api.github.com/repos/rust-lang/rust/commits/81d070f5821126d2c03e8410fa8c7d7a86d89a66", "html_url": "https://github.com/rust-lang/rust/commit/81d070f5821126d2c03e8410fa8c7d7a86d89a66"}, {"sha": "d648fc68651c375189ae205f0f98fec9f66cdc44", "url": "https://api.github.com/repos/rust-lang/rust/commits/d648fc68651c375189ae205f0f98fec9f66cdc44", "html_url": "https://github.com/rust-lang/rust/commit/d648fc68651c375189ae205f0f98fec9f66cdc44"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "ad91bc9399fef1293a632088756d48cb5bcd102e", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 31, "deletions": 2, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/03bef4c43b2f51df6bfd558b57b492cb821dd5ec/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03bef4c43b2f51df6bfd558b57b492cb821dd5ec/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=03bef4c43b2f51df6bfd558b57b492cb821dd5ec", "patch": "@@ -3405,6 +3405,37 @@ parameters. You can read more about it in the API documentation:\n https://doc.rust-lang.org/std/marker/struct.PhantomData.html\n \"##,\n \n+E0393: r##\"\n+A type parameter which references `Self` in its default value was not specified.\n+Example of erroneous code:\n+\n+```compile_fail\n+trait A<T=Self> {}\n+\n+fn together_we_will_rule_the_galaxy(son: &A) {}\n+// error: the type parameter `T` must be explicitly specified in an\n+//        object type because its default value `Self` references the\n+//        type `Self`\n+```\n+\n+A trait object is defined over a single, fully-defined trait. With a regular\n+default parameter, this parameter can just be substituted in. However, if the\n+default parameter is `Self`, the trait changes for each concrete type; i.e.\n+`i32` will be expected to implement `A<i32>`, `bool` will be expected to\n+implement `A<bool>`, etc... These types will not share an implementation of a\n+fully-defined trait; instead they share implementations of a trait with\n+different parameters substituted in for each implementation. This is\n+irreconcilable with what we need to make a trait object work, and is thus\n+disallowed. Making the trait concrete by explicitly specifying the value of the\n+defaulted parameter will fix this issue. Fixed example:\n+\n+```\n+trait A<T=Self> {}\n+\n+fn together_we_will_rule_the_galaxy(son: &A<i32>) {} // Ok!\n+```\n+\"##,\n+\n E0439: r##\"\n The length of the platform-intrinsic function `simd_shuffle`\n wasn't specified. Erroneous code example:\n@@ -3755,8 +3786,6 @@ register_diagnostics! {\n            // between structures\n     E0377, // the trait `CoerceUnsized` may only be implemented for a coercion\n            // between structures with the same definition\n-    E0393, // the type parameter `{}` must be explicitly specified in an object\n-           // type because its default value `{}` references the type `Self`\"\n     E0399, // trait items need to be implemented because the associated\n            // type `{}` was overridden\n     E0436, // functional record update requires a struct"}]}