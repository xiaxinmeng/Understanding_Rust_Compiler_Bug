{"sha": "28218bed8f21cf525b8b03712874f64379e1bf21", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4MjE4YmVkOGYyMWNmNTI1YjhiMDM3MTI4NzRmNjQzNzllMWJmMjE=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-08-06T18:42:22Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-08-07T13:06:19Z"}, "message": "Utilize `PhantomData` to enforce `!Sync` and `!Send` field.", "tree": {"sha": "fe4bc288b551035620b25a96fed1cfc5eafa6f91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe4bc288b551035620b25a96fed1cfc5eafa6f91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28218bed8f21cf525b8b03712874f64379e1bf21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28218bed8f21cf525b8b03712874f64379e1bf21", "html_url": "https://github.com/rust-lang/rust/commit/28218bed8f21cf525b8b03712874f64379e1bf21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28218bed8f21cf525b8b03712874f64379e1bf21/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "444ff9fbfb1f2a8e6645f67684f8a9ad99b343d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/444ff9fbfb1f2a8e6645f67684f8a9ad99b343d3", "html_url": "https://github.com/rust-lang/rust/commit/444ff9fbfb1f2a8e6645f67684f8a9ad99b343d3"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "6b8dfa5cc9e8418b357929e6bbf6f509b8659b9d", "filename": "src/libstd/sys/unix/os.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/28218bed8f21cf525b8b03712874f64379e1bf21/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28218bed8f21cf525b8b03712874f64379e1bf21/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fos.rs?ref=28218bed8f21cf525b8b03712874f64379e1bf21", "patch": "@@ -21,6 +21,7 @@ use fmt;\n use io;\n use iter;\n use libc::{self, c_int, c_char, c_void};\n+use marker::PhantomData;\n use mem;\n use memchr;\n use path::{self, PathBuf};\n@@ -304,7 +305,7 @@ pub fn current_exe() -> io::Result<PathBuf> {\n \n pub struct Args {\n     iter: vec::IntoIter<OsString>,\n-    _dont_send_or_sync_me: *mut (),\n+    _dont_send_or_sync_me: PhantomData<*mut ()>,\n }\n \n impl Iterator for Args {\n@@ -342,7 +343,7 @@ pub fn args() -> Args {\n     };\n     Args {\n         iter: vec.into_iter(),\n-        _dont_send_or_sync_me: ptr::null_mut(),\n+        _dont_send_or_sync_me: PhantomData,\n     }\n }\n \n@@ -399,7 +400,7 @@ pub fn args() -> Args {\n         }\n     }\n \n-    Args { iter: res.into_iter(), _dont_send_or_sync_me: ptr::null_mut() }\n+    Args { iter: res.into_iter(), _dont_send_or_sync_me: PhantomData }\n }\n \n #[cfg(any(target_os = \"linux\",\n@@ -418,12 +419,12 @@ pub fn args() -> Args {\n     let v: Vec<OsString> = bytes.into_iter().map(|v| {\n         OsStringExt::from_vec(v)\n     }).collect();\n-    Args { iter: v.into_iter(), _dont_send_or_sync_me: ptr::null_mut() }\n+    Args { iter: v.into_iter(), _dont_send_or_sync_me: PhantomData }\n }\n \n pub struct Env {\n     iter: vec::IntoIter<(OsString, OsString)>,\n-    _dont_send_or_sync_me: *mut (),\n+    _dont_send_or_sync_me: PhantomData<*mut ()>,\n }\n \n impl Iterator for Env {\n@@ -464,7 +465,7 @@ pub fn env() -> Env {\n         }\n         let ret = Env {\n             iter: result.into_iter(),\n-            _dont_send_or_sync_me: ptr::null_mut(),\n+            _dont_send_or_sync_me: PhantomData,\n         };\n         ENV_LOCK.unlock();\n         return ret"}]}