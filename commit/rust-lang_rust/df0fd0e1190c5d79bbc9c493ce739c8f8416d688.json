{"sha": "df0fd0e1190c5d79bbc9c493ce739c8f8416d688", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmMGZkMGUxMTkwYzVkNzliYmM5YzQ5M2NlNzM5YzhmODQxNmQ2ODg=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-08-16T21:55:26Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-08-19T20:11:14Z"}, "message": "reformatting/rebasing", "tree": {"sha": "fb82daac7d19eaaeeb70b0646e1f8099f9382439", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb82daac7d19eaaeeb70b0646e1f8099f9382439"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df0fd0e1190c5d79bbc9c493ce739c8f8416d688", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df0fd0e1190c5d79bbc9c493ce739c8f8416d688", "html_url": "https://github.com/rust-lang/rust/commit/df0fd0e1190c5d79bbc9c493ce739c8f8416d688", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df0fd0e1190c5d79bbc9c493ce739c8f8416d688/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81f2e449d7b31652e08722f85d44dcc1b31694c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/81f2e449d7b31652e08722f85d44dcc1b31694c6", "html_url": "https://github.com/rust-lang/rust/commit/81f2e449d7b31652e08722f85d44dcc1b31694c6"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "834548a20fc19f461c8e463aa1e882f9a22d4c5e", "filename": "src/types.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/df0fd0e1190c5d79bbc9c493ce739c8f8416d688/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df0fd0e1190c5d79bbc9c493ce739c8f8416d688/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=df0fd0e1190c5d79bbc9c493ce739c8f8416d688", "patch": "@@ -146,6 +146,8 @@ impl<'a> fmt::Display for SegmentParam<'a> {\n // We'd really rather not do this, but there doesn't seem to be an alternative\n // at this point.\n // FIXME: fails with spans containing comments with the characters < or :\n+// FIXME #184 skip due to continue.\n+#[rustfmt_skip]\n fn get_path_separator(codemap: &CodeMap,\n                       path_start: BytePos,\n                       segment_start: BytePos)\n@@ -155,7 +157,7 @@ fn get_path_separator(codemap: &CodeMap,\n \n     for c in snippet.chars().rev() {\n         if c == ':' {\n-            return \"::\"\n+            return \"::\";\n         } else if c.is_whitespace() || c == '<' {\n             continuecontinue\n         } else {\n@@ -188,9 +190,8 @@ fn rewrite_segment(segment: &ast::PathSegment,\n     let offset = offset + ident_len;\n \n     let params = match segment.parameters {\n-        ast::PathParameters::AngleBracketedParameters(ref data) if data.lifetimes.len() > 0 ||\n-                                                                   data.types.len() > 0 ||\n-                                                                   data.bindings.len() > 0 => {\n+        ast::PathParameters::AngleBracketedParameters(ref data) if data.lifetimes.len() > 0 || data.types.len() > 0 ||\n+            data.bindings.len() > 0 => {\n             let param_list = data.lifetimes.iter()\n                                            .map(SegmentParam::LifeTime)\n                                            .chain(data.types.iter()"}]}