{"sha": "a0e71e5d637329e3904a659e9a876ccc8844e68a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwZTcxZTVkNjM3MzI5ZTM5MDRhNjU5ZTlhODc2Y2NjODg0NGU2OGE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-07T12:54:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-07T12:54:13Z"}, "message": "Auto merge of #7533 - Valentine-Mario:vec_extend_to_append, r=xFrednet\n\nfix bug on mutable ref\n\nfixes: #7524\n\nThis PR is related to issue #7524\nchangelog:  [`extend_with_drain`] Improve code suggestion for mutable and immutable references", "tree": {"sha": "7cd9e4843ade52a69307160ffa9f2cb34b062eda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7cd9e4843ade52a69307160ffa9f2cb34b062eda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0e71e5d637329e3904a659e9a876ccc8844e68a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0e71e5d637329e3904a659e9a876ccc8844e68a", "html_url": "https://github.com/rust-lang/rust/commit/a0e71e5d637329e3904a659e9a876ccc8844e68a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0e71e5d637329e3904a659e9a876ccc8844e68a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2dbf0c138de34d7805b9291705f2e2361324f219", "url": "https://api.github.com/repos/rust-lang/rust/commits/2dbf0c138de34d7805b9291705f2e2361324f219", "html_url": "https://github.com/rust-lang/rust/commit/2dbf0c138de34d7805b9291705f2e2361324f219"}, {"sha": "8a4ffb881d989be8e5bbbfa45cd5aa971a6179f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a4ffb881d989be8e5bbbfa45cd5aa971a6179f2", "html_url": "https://github.com/rust-lang/rust/commit/8a4ffb881d989be8e5bbbfa45cd5aa971a6179f2"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "8829b8c5f4df45c4fc8bb730dc7b9c7365b87d9b", "filename": "clippy_lints/src/methods/extend_with_drain.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a0e71e5d637329e3904a659e9a876ccc8844e68a/clippy_lints%2Fsrc%2Fmethods%2Fextend_with_drain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0e71e5d637329e3904a659e9a876ccc8844e68a/clippy_lints%2Fsrc%2Fmethods%2Fextend_with_drain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fextend_with_drain.rs?ref=a0e71e5d637329e3904a659e9a876ccc8844e68a", "patch": "@@ -16,7 +16,10 @@ pub(super) fn check(cx: &LateContext<'_>, expr: &Expr<'_>, recv: &Expr<'_>, arg:\n         //check source object\n         if let ExprKind::MethodCall(src_method, _, [drain_vec, drain_arg], _) = &arg.kind;\n         if src_method.ident.as_str() == \"drain\";\n-        if let src_ty = cx.typeck_results().expr_ty(drain_vec).peel_refs();\n+        let src_ty = cx.typeck_results().expr_ty(drain_vec);\n+        //check if actual src type is mutable for code suggestion\n+        let immutable = src_ty.is_mutable_ptr();\n+        let src_ty = src_ty.peel_refs();\n         if is_type_diagnostic_item(cx, src_ty, sym::vec_type);\n         //check drain range\n         if let src_ty_range = cx.typeck_results().expr_ty(drain_arg).peel_refs();\n@@ -30,8 +33,9 @@ pub(super) fn check(cx: &LateContext<'_>, expr: &Expr<'_>, recv: &Expr<'_>, arg:\n                 \"use of `extend` instead of `append` for adding the full range of a second vector\",\n                 \"try this\",\n                 format!(\n-                    \"{}.append(&mut {})\",\n+                    \"{}.append({}{})\",\n                     snippet_with_applicability(cx, recv.span, \"..\", &mut applicability),\n+                    if immutable { \"\" } else { \"&mut \" },\n                     snippet_with_applicability(cx, drain_vec.span, \"..\", &mut applicability)\n                 ),\n                 applicability,"}, {"sha": "e863870e7d61b01ae9dfe0992264b7707a2d0507", "filename": "tests/ui/extend_with_drain.fixed", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a0e71e5d637329e3904a659e9a876ccc8844e68a/tests%2Fui%2Fextend_with_drain.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/a0e71e5d637329e3904a659e9a876ccc8844e68a/tests%2Fui%2Fextend_with_drain.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fextend_with_drain.fixed?ref=a0e71e5d637329e3904a659e9a876ccc8844e68a", "patch": "@@ -41,7 +41,12 @@ fn main() {\n \n     let mut heap = BinaryHeap::from(vec![1, 3]);\n     let mut heap2 = BinaryHeap::from(vec![]);\n-    heap2.extend(heap.drain())\n+    heap2.extend(heap.drain());\n+\n+    let mut x = vec![0, 1, 2, 3, 5];\n+    let ref_x = &mut x;\n+    let mut y = Vec::new();\n+    y.append(ref_x);\n }\n \n fn return_vector() -> Vec<u8> {"}, {"sha": "dcb36b5951cb28285a2b973b5aa19b692a009d9c", "filename": "tests/ui/extend_with_drain.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a0e71e5d637329e3904a659e9a876ccc8844e68a/tests%2Fui%2Fextend_with_drain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0e71e5d637329e3904a659e9a876ccc8844e68a/tests%2Fui%2Fextend_with_drain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fextend_with_drain.rs?ref=a0e71e5d637329e3904a659e9a876ccc8844e68a", "patch": "@@ -41,7 +41,12 @@ fn main() {\n \n     let mut heap = BinaryHeap::from(vec![1, 3]);\n     let mut heap2 = BinaryHeap::from(vec![]);\n-    heap2.extend(heap.drain())\n+    heap2.extend(heap.drain());\n+\n+    let mut x = vec![0, 1, 2, 3, 5];\n+    let ref_x = &mut x;\n+    let mut y = Vec::new();\n+    y.extend(ref_x.drain(..));\n }\n \n fn return_vector() -> Vec<u8> {"}, {"sha": "da14ddb25b373754412fe99adb23f80b0a71f60c", "filename": "tests/ui/extend_with_drain.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a0e71e5d637329e3904a659e9a876ccc8844e68a/tests%2Fui%2Fextend_with_drain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a0e71e5d637329e3904a659e9a876ccc8844e68a/tests%2Fui%2Fextend_with_drain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fextend_with_drain.stderr?ref=a0e71e5d637329e3904a659e9a876ccc8844e68a", "patch": "@@ -18,5 +18,11 @@ error: use of `extend` instead of `append` for adding the full range of a second\n LL |     vec11.extend(return_vector().drain(..));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `vec11.append(&mut return_vector())`\n \n-error: aborting due to 3 previous errors\n+error: use of `extend` instead of `append` for adding the full range of a second vector\n+  --> $DIR/extend_with_drain.rs:49:5\n+   |\n+LL |     y.extend(ref_x.drain(..));\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `y.append(ref_x)`\n+\n+error: aborting due to 4 previous errors\n "}]}