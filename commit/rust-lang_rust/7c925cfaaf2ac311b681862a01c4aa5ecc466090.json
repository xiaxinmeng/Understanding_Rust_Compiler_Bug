{"sha": "7c925cfaaf2ac311b681862a01c4aa5ecc466090", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjOTI1Y2ZhYWYyYWMzMTFiNjgxODYyYTAxYzRhYTVlY2M0NjYwOTA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-27T07:12:30Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-27T07:12:30Z"}, "message": "core: Long lines", "tree": {"sha": "8b3905bc177d222d24f882ee5604fdc3cf5ed882", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b3905bc177d222d24f882ee5604fdc3cf5ed882"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c925cfaaf2ac311b681862a01c4aa5ecc466090", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c925cfaaf2ac311b681862a01c4aa5ecc466090", "html_url": "https://github.com/rust-lang/rust/commit/7c925cfaaf2ac311b681862a01c4aa5ecc466090", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c925cfaaf2ac311b681862a01c4aa5ecc466090/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7820c2f17a2f1f94eddb6fc3897d61e473c496c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/7820c2f17a2f1f94eddb6fc3897d61e473c496c4", "html_url": "https://github.com/rust-lang/rust/commit/7820c2f17a2f1f94eddb6fc3897d61e473c496c4"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "95538d7c3b9ccb794ac39787635f49bb2fe169bf", "filename": "src/libcore/f32.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7c925cfaaf2ac311b681862a01c4aa5ecc466090/src%2Flibcore%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c925cfaaf2ac311b681862a01c4aa5ecc466090/src%2Flibcore%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ff32.rs?ref=7c925cfaaf2ac311b681862a01c4aa5ecc466090", "patch": "@@ -59,13 +59,15 @@ pure fn gt(x: f32, y: f32) -> bool { ret x > y; }\n // to the libmath macros in the rust runtime for performance\n \n #[doc(\n-  brief = \"Returns true if `x` is a positive number, including +0.0f320 and +Infinity.\"\n+  brief = \"Returns true if `x` is a positive number, including +0.0f320 \\\n+           and +Infinity.\"\n )]\n pure fn is_positive(x: f32) -> bool\n     { ret x > 0.0f32 || (1.0f32/x) == infinity; }\n \n #[doc(\n-  brief = \"Returns true if `x` is a negative number, including -0.0f320 and -Infinity.\"\n+  brief = \"Returns true if `x` is a negative number, including -0.0f320 \\\n+           and -Infinity.\"\n )]\n pure fn is_negative(x: f32) -> bool\n     { ret x < 0.0f32 || (1.0f32/x) == neg_infinity; }"}]}