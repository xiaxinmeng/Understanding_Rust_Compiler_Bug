{"sha": "ac4b685650d1ba0a38806ce8f7cbf12e7a00f573", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjNGI2ODU2NTBkMWJhMGEzODgwNmNlOGY3Y2JmMTJlN2EwMGY1NzM=", "commit": {"author": {"name": "Fran\u00e7ois Mockers", "email": "mockersf@gmail.com", "date": "2018-12-18T01:22:08Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-01-25T19:39:14Z"}, "message": "#56411 do not suggest a fix for a import conflict in a macro", "tree": {"sha": "a3f487422e70a97c8aa7e85b25e4085d3e62222a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3f487422e70a97c8aa7e85b25e4085d3e62222a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac4b685650d1ba0a38806ce8f7cbf12e7a00f573", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac4b685650d1ba0a38806ce8f7cbf12e7a00f573", "html_url": "https://github.com/rust-lang/rust/commit/ac4b685650d1ba0a38806ce8f7cbf12e7a00f573", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac4b685650d1ba0a38806ce8f7cbf12e7a00f573/comments", "author": {"login": "mockersf", "id": 8672791, "node_id": "MDQ6VXNlcjg2NzI3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/8672791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mockersf", "html_url": "https://github.com/mockersf", "followers_url": "https://api.github.com/users/mockersf/followers", "following_url": "https://api.github.com/users/mockersf/following{/other_user}", "gists_url": "https://api.github.com/users/mockersf/gists{/gist_id}", "starred_url": "https://api.github.com/users/mockersf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mockersf/subscriptions", "organizations_url": "https://api.github.com/users/mockersf/orgs", "repos_url": "https://api.github.com/users/mockersf/repos", "events_url": "https://api.github.com/users/mockersf/events{/privacy}", "received_events_url": "https://api.github.com/users/mockersf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b1669d96cee9dec9035a50fdf0a967a68605f98", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b1669d96cee9dec9035a50fdf0a967a68605f98", "html_url": "https://github.com/rust-lang/rust/commit/0b1669d96cee9dec9035a50fdf0a967a68605f98"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "8dd09076a00acbdf12c205982c5e04b94c72f7f4", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac4b685650d1ba0a38806ce8f7cbf12e7a00f573/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac4b685650d1ba0a38806ce8f7cbf12e7a00f573/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=ac4b685650d1ba0a38806ce8f7cbf12e7a00f573", "patch": "@@ -5147,11 +5147,13 @@ impl<'a> Resolver<'a> {\n             if let (\n                 Ok(snippet),\n                 NameBindingKind::Import { directive, ..},\n-                _dummy @ false,\n+                false,\n+                false,\n             ) = (\n                 cm.span_to_snippet(binding.span),\n                 binding.kind.clone(),\n                 binding.span.is_dummy(),\n+                binding.span.ctxt().outer().expn_info().is_some(),\n             ) {\n                 let suggested_name = if name.as_str().chars().next().unwrap().is_uppercase() {\n                     format!(\"Other{}\", name)"}, {"sha": "599f277123cc8c3a56ab716141a2103fbaf03619", "filename": "src/test/ui/issues/issue-56411.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ac4b685650d1ba0a38806ce8f7cbf12e7a00f573/src%2Ftest%2Fui%2Fissues%2Fissue-56411.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac4b685650d1ba0a38806ce8f7cbf12e7a00f573/src%2Ftest%2Fui%2Fissues%2Fissue-56411.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-56411.rs?ref=ac4b685650d1ba0a38806ce8f7cbf12e7a00f573", "patch": "@@ -0,0 +1,17 @@\n+macro_rules! import {\n+    ( $($name:ident),* ) => {\n+        $(\n+            mod $name;\n+            pub use self::$name;\n+            //~^ ERROR the name `issue_56411` is defined multiple times\n+            //~| ERROR `issue_56411` is private, and cannot be re-exported\n+\n+        )*\n+    }\n+}\n+\n+import!(issue_56411);\n+\n+fn main() {\n+    println!(\"Hello, world!\");\n+}"}, {"sha": "842d86f4a3a9cdd96b161a521fdc776813da71aa", "filename": "src/test/ui/issues/issue-56411.stderr", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/ac4b685650d1ba0a38806ce8f7cbf12e7a00f573/src%2Ftest%2Fui%2Fissues%2Fissue-56411.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ac4b685650d1ba0a38806ce8f7cbf12e7a00f573/src%2Ftest%2Fui%2Fissues%2Fissue-56411.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-56411.stderr?ref=ac4b685650d1ba0a38806ce8f7cbf12e7a00f573", "patch": "@@ -0,0 +1,31 @@\n+error[E0255]: the name `issue_56411` is defined multiple times\n+  --> $DIR/issue-56411.rs:5:21\n+   |\n+LL |             mod $name;\n+   |             ---------- previous definition of the module `issue_56411` here\n+LL |             pub use self::$name;\n+   |                     ^^^^^^^^^^^\n+   |                     |\n+   |                     `issue_56411` reimported here\n+   |                     you can use `as` to change the binding name of the import\n+...\n+LL | import!(issue_56411);\n+   | --------------------- in this macro invocation\n+   |\n+   = note: `issue_56411` must be defined only once in the type namespace of this module\n+\n+error[E0365]: `issue_56411` is private, and cannot be re-exported\n+  --> $DIR/issue-56411.rs:5:21\n+   |\n+LL |             pub use self::$name;\n+   |                     ^^^^^^^^^^^ re-export of private `issue_56411`\n+...\n+LL | import!(issue_56411);\n+   | --------------------- in this macro invocation\n+   |\n+   = note: consider declaring type or module `issue_56411` with `pub`\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors occurred: E0255, E0365.\n+For more information about an error, try `rustc --explain E0255`."}, {"sha": "bd689e913aba6e1367357ebb6478abe16bf54302", "filename": "src/test/ui/issues/issue_56411.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ac4b685650d1ba0a38806ce8f7cbf12e7a00f573/src%2Ftest%2Fui%2Fissues%2Fissue_56411.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac4b685650d1ba0a38806ce8f7cbf12e7a00f573/src%2Ftest%2Fui%2Fissues%2Fissue_56411.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue_56411.rs?ref=ac4b685650d1ba0a38806ce8f7cbf12e7a00f573", "patch": "@@ -0,0 +1,5 @@\n+// compile-pass\n+\n+struct T {}\n+\n+fn main() {}"}]}