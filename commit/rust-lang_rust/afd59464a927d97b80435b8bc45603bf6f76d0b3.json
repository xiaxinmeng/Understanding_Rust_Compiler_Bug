{"sha": "afd59464a927d97b80435b8bc45603bf6f76d0b3", "node_id": "C_kwDOAAsO6NoAKGFmZDU5NDY0YTkyN2Q5N2I4MDQzNWI4YmM0NTYwM2JmNmY3NmQwYjM", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-03-18T15:38:28Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-03-18T15:38:28Z"}, "message": "Reorganize test list", "tree": {"sha": "bcac364712eaf68b2a4a193d58ba63b80250a429", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bcac364712eaf68b2a4a193d58ba63b80250a429"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afd59464a927d97b80435b8bc45603bf6f76d0b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afd59464a927d97b80435b8bc45603bf6f76d0b3", "html_url": "https://github.com/rust-lang/rust/commit/afd59464a927d97b80435b8bc45603bf6f76d0b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afd59464a927d97b80435b8bc45603bf6f76d0b3/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1c8cf76b0222e43e55a76125aeffc05f55c83f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1c8cf76b0222e43e55a76125aeffc05f55c83f9", "html_url": "https://github.com/rust-lang/rust/commit/d1c8cf76b0222e43e55a76125aeffc05f55c83f9"}], "stats": {"total": 85, "additions": 54, "deletions": 31}, "files": [{"sha": "b4ce2abb18c946d80af0e47c764cea2c0bd96cd3", "filename": "scripts/test_rustc_tests.sh", "status": "modified", "additions": 54, "deletions": 31, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/afd59464a927d97b80435b8bc45603bf6f76d0b3/scripts%2Ftest_rustc_tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/afd59464a927d97b80435b8bc45603bf6f76d0b3/scripts%2Ftest_rustc_tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Ftest_rustc_tests.sh?ref=afd59464a927d97b80435b8bc45603bf6f76d0b3", "patch": "@@ -21,7 +21,10 @@ done\n \n git checkout -- src/test/ui/issues/auxiliary/issue-3136-a.rs # contains //~ERROR, but shouldn't be removed\n \n-# these all depend on unwinding support\n+# missing features\n+# ================\n+\n+# requires stack unwinding\n rm src/test/ui/backtrace.rs\n rm src/test/ui/array-slice-vec/box-of-array-of-drop-*.rs\n rm src/test/ui/array-slice-vec/slice-panic-*.rs\n@@ -42,59 +45,79 @@ rm src/test/ui/runtime/rt-explody-panic-payloads.rs\n rm src/test/incremental/change_crate_dep_kind.rs\n rm src/test/ui/threads-sendsync/unwind-resource.rs\n \n-rm src/test/ui/issues/issue-28950.rs # depends on stack size optimizations\n-rm src/test/ui/codegen/init-large-type.rs # same\n+# requires compiling with -Cpanic=unwind\n+rm src/test/ui/cfg/cfg-panic.rs\n+rm src/test/ui/test-attrs/test-fn-signature-verification-for-explicit-return-type.rs # \"Cannot run dynamic test fn out-of-process\"\n+rm src/test/ui/async-await/async-fn-size-moved-locals.rs # -Cpanic=abort shrinks some generator by one byte\n+rm src/test/ui/async-await/async-fn-size-uninit-locals.rs # same\n+rm src/test/ui/generator/size-moved-locals.rs # same\n+\n+# vendor intrinsics\n rm src/test/ui/sse2.rs # cpuid not supported, so sse2 not detected\n+rm src/test/ui/intrinsics/const-eval-select-x86_64.rs # requires x86_64 vendor intrinsics\n+\n+# inline asm\n+rm src/test/incremental/hashes/inline_asm.rs # inline asm\n+rm src/test/incremental/issue-72386.rs # same\n+\n+# exotic linkages\n rm src/test/ui/issues/issue-33992.rs # unsupported linkages\n rm src/test/incremental/hashes/function_interfaces.rs # same\n rm src/test/incremental/hashes/statics.rs # same\n+\n+# LTO\n+rm src/test/incremental/lto.rs # requires lt\n+\n+# variadic arguments\n+rm src/test/ui/abi/mir/mir_codegen_calls_variadic.rs # requires float varargs\n+rm src/test/ui/abi/variadic-ffi.rs # requires callee side vararg support\n+\n+# unsized locals\n+rm -r src/test/run-pass-valgrind/unsized-locals\n+\n+# misc unimplemented things\n+rm src/test/ui/intrinsics/intrinsic-nearby.rs # unimplemented nearbyintf32 and nearbyintf64 intrinsics\n+rm src/test/ui/target-feature/missing-plusminus.rs # error not implemented\n+rm src/test/ui/fn/dyn-fn-alignment.rs # wants a 256 byte alignment\n+rm -r src/test/run-make/emit-named-files # requires full --emit support\n+\n+# optimization tests\n+# ==================\n+rm src/test/ui/issues/issue-28950.rs # depends on stack size optimizations\n+rm src/test/ui/codegen/init-large-type.rs # same\n+rm -r src/test/run-make/fmt-write-bloat/ # tests an optimization\n+\n+# backend specific tests\n+# ======================\n+rm src/test/incremental/thinlto/cgu_invalidated_when_import_{added,removed}.rs # requires LLVM\n+rm src/test/ui/abi/stack-protector.rs # requires stack protector support\n+\n+# giving different but possibly correct results\n+# =============================================\n rm src/test/ui/numbers-arithmetic/saturating-float-casts.rs # intrinsic gives different but valid result\n rm src/test/ui/mir/mir_misc_casts.rs # depends on deduplication of constants\n rm src/test/ui/mir/mir_raw_fat_ptr.rs # same\n rm src/test/ui/consts/issue-33537.rs # same\n-rm src/test/ui/async-await/async-fn-size-moved-locals.rs # -Cpanic=abort shrinks some generator by one byte\n-rm src/test/ui/async-await/async-fn-size-uninit-locals.rs # same\n-rm src/test/ui/generator/size-moved-locals.rs # same\n-rm src/test/ui/fn/dyn-fn-alignment.rs # wants a 256 byte alignment\n-rm src/test/ui/test-attrs/test-fn-signature-verification-for-explicit-return-type.rs # \"Cannot run dynamic test fn out-of-process\"\n-rm src/test/ui/intrinsics/intrinsic-nearby.rs # unimplemented nearbyintf32 and nearbyintf64 intrinsics\n-\n-rm src/test/incremental/hashes/inline_asm.rs # inline asm\n-rm src/test/incremental/issue-72386.rs # same\n-rm src/test/incremental/lto.rs # requires lto\n \n rm -r src/test/run-make/emit-shared-files # requires the rustdoc executable in build/bin/\n rm -r src/test/run-make/unstable-flag-required # same\n rm -r src/test/run-make/rustdoc-* # same\n-rm -r src/test/run-make/emit-named-files # requires full --emit support\n-\n-rm -r src/test/run-pass-valgrind/unsized-locals\n-\n-rm src/test/ui/intrinsics/const-eval-select-x86_64.rs # requires x86_64 vendor intrinsics\n \n+# genuine bugs\n+# ============\n rm src/test/ui/allocator/no_std-alloc-error-handler-default.rs # missing rust_oom definition\n-rm src/test/ui/cfg/cfg-panic.rs\n-\n-rm src/test/ui/mir/ssa-analysis-regression-50041.rs # uses old definition of Box\n-\n-rm src/test/ui/target-feature/missing-plusminus.rs # error not implemented\n \n rm -r src/test/ui/polymorphization/ # polymorphization not yet supported\n rm src/test/codegen-units/polymorphization/unused_type_parameters.rs # same\n \n-rm -r src/test/run-make/fmt-write-bloat/ # tests an optimization\n-rm src/test/ui/abi/mir/mir_codegen_calls_variadic.rs # requires float varargs\n-rm src/test/ui/abi/variadic-ffi.rs # requires callee side vararg support\n-\n-rm src/test/ui/abi/stack-protector.rs # requires stack protector support\n-\n rm src/test/incremental/issue-80691-bad-eval-cache.rs # wrong exit code\n rm src/test/incremental/spike-neg1.rs # errors out for some reason\n rm src/test/incremental/spike-neg2.rs # same\n rm src/test/ui/issues/issue-74564-if-expr-stack-overflow.rs # gives a stackoverflow before the backend runs\n+rm src/test/ui/mir/ssa-analysis-regression-50041.rs # produces ICE\n \n-rm src/test/incremental/thinlto/cgu_invalidated_when_import_{added,removed}.rs # requires LLVM\n-\n+# bugs in the test suite\n+# ======================\n rm src/test/ui/unsafe/union.rs # has UB caught by cg_clif. see rust-lang/rust#95075\n \n echo \"[TEST] rustc test suite\""}]}