{"sha": "a0d3b0963d68ebf4d63bd8ac4a3ca5ab3cc44873", "node_id": "C_kwDOAAsO6NoAKGEwZDNiMDk2M2Q2OGViZjRkNjNiZDhhYzRhM2NhNWFiM2NjNDQ4NzM", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-03T18:35:09Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-03T18:39:05Z"}, "message": "Record cranelift pass timings in self profile results", "tree": {"sha": "c617d23fbb6c0f6e50f4516a6ad751b42d902c6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c617d23fbb6c0f6e50f4516a6ad751b42d902c6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0d3b0963d68ebf4d63bd8ac4a3ca5ab3cc44873", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0d3b0963d68ebf4d63bd8ac4a3ca5ab3cc44873", "html_url": "https://github.com/rust-lang/rust/commit/a0d3b0963d68ebf4d63bd8ac4a3ca5ab3cc44873", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0d3b0963d68ebf4d63bd8ac4a3ca5ab3cc44873/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "469783c263c3ac0aadde100cbf7e575c21caad1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/469783c263c3ac0aadde100cbf7e575c21caad1f", "html_url": "https://github.com/rust-lang/rust/commit/469783c263c3ac0aadde100cbf7e575c21caad1f"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "3f5cc38b04c6291562a5997bf9da08d3b24d3147", "filename": "src/base.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a0d3b0963d68ebf4d63bd8ac4a3ca5ab3cc44873/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0d3b0963d68ebf4d63bd8ac4a3ca5ab3cc44873/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=a0d3b0963d68ebf4d63bd8ac4a3ca5ab3cc44873", "patch": "@@ -182,6 +182,27 @@ pub(crate) fn compile_fn(\n     cx.profiler.generic_activity(\"define function\").run(|| {\n         context.want_disasm = cx.should_write_ir;\n         module.define_function(codegened_func.func_id, context).unwrap();\n+\n+        if cx.profiler.enabled() {\n+            let mut recording_args = false;\n+            cx.profiler\n+                .generic_activity_with_arg_recorder(\n+                    \"define function (clif pass timings)\",\n+                    |recorder| {\n+                        let pass_times = cranelift_codegen::timing::take_current();\n+                        // Replace newlines with | as measureme doesn't allow control characters like\n+                        // newlines inside strings.\n+                        recorder.record_arg(format!(\"{}\", pass_times).replace(\"\\n\", \" | \"));\n+                        recording_args = true;\n+                    },\n+                )\n+                .run(|| {\n+                    if recording_args {\n+                        // Wait a tiny bit to ensure chrome's profiler doesn't hide the event\n+                        std::thread::sleep(std::time::Duration::from_nanos(2))\n+                    }\n+                });\n+        }\n     });\n \n     if cx.should_write_ir {"}]}