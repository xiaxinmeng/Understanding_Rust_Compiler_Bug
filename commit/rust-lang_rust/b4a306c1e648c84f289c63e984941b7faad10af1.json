{"sha": "b4a306c1e648c84f289c63e984941b7faad10af1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0YTMwNmMxZTY0OGM4NGYyODljNjNlOTg0OTQxYjdmYWFkMTBhZjE=", "commit": {"author": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2018-12-05T16:55:53Z"}, "committer": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2018-12-05T16:55:53Z"}, "message": "Avoid calling clone in DoubleEndedIterator implementation of Copied", "tree": {"sha": "023abbe6dcb8f93e628b95dd1293f3aec5493361", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/023abbe6dcb8f93e628b95dd1293f3aec5493361"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4a306c1e648c84f289c63e984941b7faad10af1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4a306c1e648c84f289c63e984941b7faad10af1", "html_url": "https://github.com/rust-lang/rust/commit/b4a306c1e648c84f289c63e984941b7faad10af1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4a306c1e648c84f289c63e984941b7faad10af1/comments", "author": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "431968df376ae24347872ba3986c4c3efd29d41e", "url": "https://api.github.com/repos/rust-lang/rust/commits/431968df376ae24347872ba3986c4c3efd29d41e", "html_url": "https://github.com/rust-lang/rust/commit/431968df376ae24347872ba3986c4c3efd29d41e"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "de1a318cfb2201b034423f2dc6055e39c4dabfdd", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b4a306c1e648c84f289c63e984941b7faad10af1/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4a306c1e648c84f289c63e984941b7faad10af1/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=b4a306c1e648c84f289c63e984941b7faad10af1", "patch": "@@ -553,13 +553,13 @@ impl<'a, I, T: 'a> DoubleEndedIterator for Copied<I>\n     fn try_rfold<B, F, R>(&mut self, init: B, mut f: F) -> R where\n         Self: Sized, F: FnMut(B, Self::Item) -> R, R: Try<Ok=B>\n     {\n-        self.it.try_rfold(init, move |acc, elt| f(acc, elt.clone()))\n+        self.it.try_rfold(init, move |acc, &elt| f(acc, elt))\n     }\n \n     fn rfold<Acc, F>(self, init: Acc, mut f: F) -> Acc\n         where F: FnMut(Acc, Self::Item) -> Acc,\n     {\n-        self.it.rfold(init, move |acc, elt| f(acc, elt.clone()))\n+        self.it.rfold(init, move |acc, &elt| f(acc, elt))\n     }\n }\n "}]}