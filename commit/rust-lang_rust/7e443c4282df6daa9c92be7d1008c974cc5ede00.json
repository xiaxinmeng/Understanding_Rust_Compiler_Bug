{"sha": "7e443c4282df6daa9c92be7d1008c974cc5ede00", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlNDQzYzQyODJkZjZkYWE5YzkyYmU3ZDEwMDhjOTc0Y2M1ZWRlMDA=", "commit": {"author": {"name": "DevJPM", "email": "jean-pierre.muench@web.de", "date": "2020-11-10T19:07:18Z"}, "committer": {"name": "DevJPM", "email": "jean-pierre.muench@web.de", "date": "2020-11-12T13:39:47Z"}, "message": "Dropped Support for Bidirectional Custom Target Definition Emulation\n\nas requested in the review and argued that this is only consistent with later LLVM upgrades", "tree": {"sha": "38f3e8d42d3c5ca826ff4d15eb1d5f67c7f74e22", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38f3e8d42d3c5ca826ff4d15eb1d5f67c7f74e22"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e443c4282df6daa9c92be7d1008c974cc5ede00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e443c4282df6daa9c92be7d1008c974cc5ede00", "html_url": "https://github.com/rust-lang/rust/commit/7e443c4282df6daa9c92be7d1008c974cc5ede00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e443c4282df6daa9c92be7d1008c974cc5ede00/comments", "author": {"login": "DevJPM", "id": 10398997, "node_id": "MDQ6VXNlcjEwMzk4OTk3", "avatar_url": "https://avatars.githubusercontent.com/u/10398997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevJPM", "html_url": "https://github.com/DevJPM", "followers_url": "https://api.github.com/users/DevJPM/followers", "following_url": "https://api.github.com/users/DevJPM/following{/other_user}", "gists_url": "https://api.github.com/users/DevJPM/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevJPM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevJPM/subscriptions", "organizations_url": "https://api.github.com/users/DevJPM/orgs", "repos_url": "https://api.github.com/users/DevJPM/repos", "events_url": "https://api.github.com/users/DevJPM/events{/privacy}", "received_events_url": "https://api.github.com/users/DevJPM/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DevJPM", "id": 10398997, "node_id": "MDQ6VXNlcjEwMzk4OTk3", "avatar_url": "https://avatars.githubusercontent.com/u/10398997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevJPM", "html_url": "https://github.com/DevJPM", "followers_url": "https://api.github.com/users/DevJPM/followers", "following_url": "https://api.github.com/users/DevJPM/following{/other_user}", "gists_url": "https://api.github.com/users/DevJPM/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevJPM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevJPM/subscriptions", "organizations_url": "https://api.github.com/users/DevJPM/orgs", "repos_url": "https://api.github.com/users/DevJPM/repos", "events_url": "https://api.github.com/users/DevJPM/events{/privacy}", "received_events_url": "https://api.github.com/users/DevJPM/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8236830209ca4a8cdf3a538f2cce40162ff31fc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/8236830209ca4a8cdf3a538f2cce40162ff31fc5", "html_url": "https://github.com/rust-lang/rust/commit/8236830209ca4a8cdf3a538f2cce40162ff31fc5"}], "stats": {"total": 12, "additions": 0, "deletions": 12}, "files": [{"sha": "456fa6fc19fba49bd865899cd4bc3de6f09b1afb", "filename": "compiler/rustc_codegen_llvm/src/attributes.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7e443c4282df6daa9c92be7d1008c974cc5ede00/compiler%2Frustc_codegen_llvm%2Fsrc%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e443c4282df6daa9c92be7d1008c974cc5ede00/compiler%2Frustc_codegen_llvm%2Fsrc%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fattributes.rs?ref=7e443c4282df6daa9c92be7d1008c974cc5ede00", "patch": "@@ -144,17 +144,6 @@ fn set_probestack(cx: &CodegenCx<'ll, '_>, llfn: &'ll Value) {\n     );\n }\n \n-fn translate_obsolete_target_features(feature: &str) -> &str {\n-    const LLVM9_FEATURE_CHANGES: &[(&str, &str)] =\n-        &[(\"+fp-only-sp\", \"-fp64\"), (\"-fp-only-sp\", \"+fp64\"), (\"+d16\", \"-d32\"), (\"-d16\", \"+d32\")];\n-    for &(old, new) in LLVM9_FEATURE_CHANGES {\n-        if feature == old {\n-            return new;\n-        }\n-    }\n-    feature\n-}\n-\n pub fn llvm_target_features(sess: &Session) -> impl Iterator<Item = &str> {\n     const RUSTC_SPECIFIC_FEATURES: &[&str] = &[\"crt-static\"];\n \n@@ -169,7 +158,6 @@ pub fn llvm_target_features(sess: &Session) -> impl Iterator<Item = &str> {\n         .split(',')\n         .chain(cmdline)\n         .filter(|l| !l.is_empty())\n-        .map(translate_obsolete_target_features)\n }\n \n pub fn apply_target_cpu_attr(cx: &CodegenCx<'ll, '_>, llfn: &'ll Value) {"}]}