{"sha": "319f3b02f3272ce5b58b04bc3d2abfc5b33991f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxOWYzYjAyZjMyNzJjZTViNThiMDRiYzNkMmFiZmM1YjMzOTkxZjA=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-11-15T19:31:48Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-11-16T23:24:38Z"}, "message": "fix natives with user-specified link names, remove unused imports", "tree": {"sha": "9125b84bd7dff5f3a0dbf87ab7e20f9663076eb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9125b84bd7dff5f3a0dbf87ab7e20f9663076eb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/319f3b02f3272ce5b58b04bc3d2abfc5b33991f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/319f3b02f3272ce5b58b04bc3d2abfc5b33991f0", "html_url": "https://github.com/rust-lang/rust/commit/319f3b02f3272ce5b58b04bc3d2abfc5b33991f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/319f3b02f3272ce5b58b04bc3d2abfc5b33991f0/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c572b793feb8ddf4900f76f4f5700e6d704826e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/c572b793feb8ddf4900f76f4f5700e6d704826e9", "html_url": "https://github.com/rust-lang/rust/commit/c572b793feb8ddf4900f76f4f5700e6d704826e9"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "c956a52daca434c891218aa279765348ddfcab0e", "filename": "src/comp/back/upcall.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/319f3b02f3272ce5b58b04bc3d2abfc5b33991f0/src%2Fcomp%2Fback%2Fupcall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/319f3b02f3272ce5b58b04bc3d2abfc5b33991f0/src%2Fcomp%2Fback%2Fupcall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Fupcall.rs?ref=319f3b02f3272ce5b58b04bc3d2abfc5b33991f0", "patch": "@@ -2,9 +2,9 @@\n import driver::session;\n import middle::trans;\n import middle::trans_common::{T_fn, T_i1, T_i8, T_i32,\n-                              T_i64, T_int, T_nil,\n+                              T_int, T_nil,\n                               T_opaque_vec, T_ptr,\n-                              T_size_t, T_void, T_float};\n+                              T_size_t, T_void};\n import lib::llvm::type_names;\n import lib::llvm::llvm::ModuleRef;\n import lib::llvm::llvm::ValueRef;"}, {"sha": "d073929970e2b41c44b1735703aa155b8546b5d8", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/319f3b02f3272ce5b58b04bc3d2abfc5b33991f0/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/319f3b02f3272ce5b58b04bc3d2abfc5b33991f0/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=319f3b02f3272ce5b58b04bc3d2abfc5b33991f0", "patch": "@@ -24,7 +24,7 @@ import back::{link, abi, upcall};\n import syntax::{ast, ast_util};\n import syntax::visit;\n import syntax::codemap::span;\n-import syntax::print::pprust::{expr_to_str, path_to_str, stmt_to_str};\n+import syntax::print::pprust::{expr_to_str, stmt_to_str};\n import visit::vt;\n import util::common::*;\n import lib::llvm::{llvm, mk_target_data, mk_type_names};\n@@ -5393,16 +5393,17 @@ fn c_stack_tys(ccx: @crate_ctxt,\n //     }\n //\n fn trans_native_mod(lcx: @local_ctxt, native_mod: ast::native_mod) {\n-    fn build_shim_fn(lcx: @local_ctxt, native_item: @ast::native_item,\n+    fn build_shim_fn(lcx: @local_ctxt,\n+                     link_name: str,\n+                     native_item: @ast::native_item,\n                      llshimfn: ValueRef) {\n         let ccx = lcx_ccx(lcx);\n         let span = native_item.span;\n         let id = native_item.id;\n         let tys = c_stack_tys(ccx, span, id);\n \n         // Declare the \"prototype\" for the base function F:\n-        let name = native_item.ident;\n-        let llbasefn = decl_cdecl_fn(ccx.llmod, name, tys.base_fn_ty);\n+        let llbasefn = decl_cdecl_fn(ccx.llmod, link_name, tys.base_fn_ty);\n \n         // Declare the body of the shim function:\n         let fcx = new_fn_ctxt(lcx, span, llshimfn);\n@@ -5430,17 +5431,25 @@ fn trans_native_mod(lcx: @local_ctxt, native_mod: ast::native_mod) {\n         finish_fn(fcx, lltop);\n     }\n \n+    fn select_link_name(user_name: option::t<str>, rust_name: str) -> str {\n+        ret alt user_name {\n+          some(n) { n }\n+          none. { rust_name }\n+        };\n+    }\n+\n     let ccx = lcx_ccx(lcx);\n     alt native_mod.abi {\n       ast::native_abi_cdecl. {\n         for native_item in native_mod.items {\n             alt native_item.node {\n               ast::native_item_ty. {}\n-              ast::native_item_fn(_, fn_decl, _) {\n+              ast::native_item_fn(name, fn_decl, _) {\n                 let id = native_item.id;\n                 alt ccx.item_ids.find(id) {\n                   some(llshimfn) {\n-                    build_shim_fn(lcx, native_item, llshimfn);\n+                    let link_name = select_link_name(name, native_item.ident);\n+                    build_shim_fn(lcx, link_name, native_item, llshimfn);\n                   }\n \n                   none. {"}, {"sha": "2052567ae80a57e48fe5086a4421eca82f77bd66", "filename": "src/comp/middle/trans_build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/319f3b02f3272ce5b58b04bc3d2abfc5b33991f0/src%2Fcomp%2Fmiddle%2Ftrans_build.rs", "raw_url": "https://github.com/rust-lang/rust/raw/319f3b02f3272ce5b58b04bc3d2abfc5b33991f0/src%2Fcomp%2Fmiddle%2Ftrans_build.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_build.rs?ref=319f3b02f3272ce5b58b04bc3d2abfc5b33991f0", "patch": "@@ -4,7 +4,7 @@ import lib::llvm::llvm;\n import syntax::codemap::span;\n import llvm::{ValueRef, TypeRef, BasicBlockRef, BuilderRef, Opcode,\n               ModuleRef};\n-import trans_common::{block_ctxt, T_ptr, T_nil, T_int, T_i8, T_i1, T_void,\n+import trans_common::{block_ctxt, T_ptr, T_nil, T_i8, T_i1, T_void,\n                       T_fn, val_ty, bcx_ccx, C_i32};\n \n fn B(cx: @block_ctxt) -> BuilderRef {"}]}