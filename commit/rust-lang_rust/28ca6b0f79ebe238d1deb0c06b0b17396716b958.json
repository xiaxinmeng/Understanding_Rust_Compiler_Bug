{"sha": "28ca6b0f79ebe238d1deb0c06b0b17396716b958", "node_id": "C_kwDOAAsO6NoAKDI4Y2E2YjBmNzllYmUyMzhkMWRlYjBjMDZiMGIxNzM5NjcxNmI5NTg", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2022-02-16T10:18:01Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2022-02-16T12:29:00Z"}, "message": "debuginfo: Support fat pointers to unsized tuples.", "tree": {"sha": "549f01377e97a091b8a6b4d247f149fce4f92f70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/549f01377e97a091b8a6b4d247f149fce4f92f70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28ca6b0f79ebe238d1deb0c06b0b17396716b958", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28ca6b0f79ebe238d1deb0c06b0b17396716b958", "html_url": "https://github.com/rust-lang/rust/commit/28ca6b0f79ebe238d1deb0c06b0b17396716b958", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28ca6b0f79ebe238d1deb0c06b0b17396716b958/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a240ccd81c74c105b6f5fe84c46f8d36edb7e306", "url": "https://api.github.com/repos/rust-lang/rust/commits/a240ccd81c74c105b6f5fe84c46f8d36edb7e306", "html_url": "https://github.com/rust-lang/rust/commit/a240ccd81c74c105b6f5fe84c46f8d36edb7e306"}], "stats": {"total": 36, "additions": 27, "deletions": 9}, "files": [{"sha": "acd032a7dc6d0339c227fca4e3720b3d008a04da", "filename": "compiler/rustc_codegen_llvm/src/debuginfo/utils.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/28ca6b0f79ebe238d1deb0c06b0b17396716b958/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28ca6b0f79ebe238d1deb0c06b0b17396716b958/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Futils.rs?ref=28ca6b0f79ebe238d1deb0c06b0b17396716b958", "patch": "@@ -6,7 +6,7 @@ use super::CrateDebugContext;\n use rustc_hir::def_id::DefId;\n use rustc_middle::ty::layout::LayoutOf;\n use rustc_middle::ty::{self, DefIdTree, Ty};\n-use rustc_target::abi::VariantIdx;\n+use rustc_target::abi::Variants;\n \n use crate::common::CodegenCx;\n use crate::llvm;\n@@ -72,20 +72,15 @@ pub(crate) fn fat_pointer_kind<'ll, 'tcx>(\n     match *pointee_ty.kind() {\n         ty::Str | ty::Slice(_) => Some(FatPtrKind::Slice),\n         ty::Dynamic(..) => Some(FatPtrKind::Dyn),\n-        ty::Adt(adt_def, _) => {\n-            assert!(adt_def.is_struct());\n-            assert!(adt_def.variants.len() == 1);\n-            let variant = &adt_def.variants[VariantIdx::from_usize(0)];\n-            assert!(!variant.fields.is_empty());\n-            let last_field_index = variant.fields.len() - 1;\n-\n+        ty::Adt(..) | ty::Tuple(..) if matches!(layout.variants, Variants::Single { .. }) => {\n+            let last_field_index = layout.fields.count() - 1;\n             debug_assert!(\n                 (0..last_field_index)\n                     .all(|field_index| { !layout.field(cx, field_index).is_unsized() })\n             );\n \n             let unsized_field = layout.field(cx, last_field_index);\n-            assert!(unsized_field.is_unsized());\n+            debug_assert!(unsized_field.is_unsized());\n             fat_pointer_kind(cx, unsized_field.ty)\n         }\n         ty::Foreign(_) => {"}, {"sha": "7ccc88ef940dcfa441f4a217fa92651607cbb3da", "filename": "src/test/debuginfo/unsized.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/28ca6b0f79ebe238d1deb0c06b0b17396716b958/src%2Ftest%2Fdebuginfo%2Funsized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28ca6b0f79ebe238d1deb0c06b0b17396716b958/src%2Ftest%2Fdebuginfo%2Funsized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Funsized.rs?ref=28ca6b0f79ebe238d1deb0c06b0b17396716b958", "patch": "@@ -16,6 +16,14 @@\n // gdbg-check:$3 = {pointer = [...], vtable = [...]}\n // gdbr-check:$3 = &unsized::Foo<dyn core::fmt::Debug> {pointer: [...], vtable: [...]}\n \n+// gdb-command:print tuple_slice\n+// gdbg-check:$4 = {data_ptr = [...], length = 2}\n+// gdbr-check:$4 = &(i32, i32, [i32]) {data_ptr: [...], length: 2}\n+\n+// gdb-command:print tuple_dyn\n+// gdbg-check:$5 = {pointer = [...], vtable = [...]}\n+// gdbr-check:$5 = &(i32, i32, dyn core::fmt::Debug) {pointer: [...], vtable: [...]}\n+\n // === CDB TESTS ===================================================================================\n \n // cdb-command: g\n@@ -34,6 +42,17 @@\n // cdb-check:    [+0x000] pointer          : 0x[...] [Type: unsized::Foo<dyn$<core::fmt::Debug> > *]\n // cdb-check:    [...] vtable           : 0x[...] [Type: unsigned [...]int[...] (*)[3]]\n \n+// cdb-command:dx tuple_slice\n+// cdb-check:tuple_slice      [Type: ref$<tuple$<i32,i32,slice$<i32> > >]\n+// cdb-check:    [+0x000] data_ptr         : 0x[...] [Type: tuple$<i32,i32,slice$<i32> > *]\n+// cdb-check:    [...] length           : 0x2 [Type: unsigned [...]int[...]\n+\n+// cdb-command:dx tuple_dyn\n+// cdb-check:tuple_dyn        [Type: ref$<tuple$<i32,i32,dyn$<core::fmt::Debug> > >]\n+// cdb-check:    [+0x000] pointer          : 0x[...] [Type: tuple$<i32,i32,dyn$<core::fmt::Debug> > *]\n+// cdb-check:    [...] vtable           : 0x[...] [Type: unsigned [...]int[...] (*)[3]]\n+\n+#![feature(unsized_tuple_coercion)]\n #![feature(omit_gdb_pretty_printer_section)]\n #![omit_gdb_pretty_printer_section]\n \n@@ -51,6 +70,10 @@ fn main() {\n     let b: &Foo<Foo<[u8]>> = &foo;\n     let c: &Foo<dyn std::fmt::Debug> = &Foo { value: 7i32 };\n \n+    // Also check unsized tuples\n+    let tuple_slice: &(i32, i32, [i32]) = &(0, 1, [2, 3]);\n+    let tuple_dyn: &(i32, i32, dyn std::fmt::Debug) = &(0, 1, &3u64);\n+\n     zzz(); // #break\n }\n "}]}