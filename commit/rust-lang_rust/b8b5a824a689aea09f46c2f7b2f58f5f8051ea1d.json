{"sha": "b8b5a824a689aea09f46c2f7b2f58f5f8051ea1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4YjVhODI0YTY4OWFlYTA5ZjQ2YzJmN2IyZjU4ZjVmODA1MWVhMWQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-09-29T13:28:48Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-09-29T13:28:48Z"}, "message": "Fix JIT", "tree": {"sha": "bbce65689bfd47822b30b2434db292902dd31af1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbce65689bfd47822b30b2434db292902dd31af1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8b5a824a689aea09f46c2f7b2f58f5f8051ea1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8b5a824a689aea09f46c2f7b2f58f5f8051ea1d", "html_url": "https://github.com/rust-lang/rust/commit/b8b5a824a689aea09f46c2f7b2f58f5f8051ea1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8b5a824a689aea09f46c2f7b2f58f5f8051ea1d/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17a54ad62e217c1b6e3848efe522666f443809a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/17a54ad62e217c1b6e3848efe522666f443809a2", "html_url": "https://github.com/rust-lang/rust/commit/17a54ad62e217c1b6e3848efe522666f443809a2"}], "stats": {"total": 32, "additions": 17, "deletions": 15}, "files": [{"sha": "fd3a628922d0bc5ffbae730dc97febdd81c0d6d3", "filename": "src/driver/jit.rs", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/b8b5a824a689aea09f46c2f7b2f58f5f8051ea1d/src%2Fdriver%2Fjit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8b5a824a689aea09f46c2f7b2f58f5f8051ea1d/src%2Fdriver%2Fjit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fjit.rs?ref=b8b5a824a689aea09f46c2f7b2f58f5f8051ea1d", "patch": "@@ -11,21 +11,23 @@ use crate::prelude::*;\n pub(super) fn run_jit(tcx: TyCtxt<'_>) -> ! {\n     use cranelift_simplejit::{SimpleJITBackend, SimpleJITBuilder};\n \n-    // Rustc opens us without the RTLD_GLOBAL flag, so __cg_clif_global_atomic_mutex will not be\n-    // exported. We fix this by opening ourself again as global.\n-    // FIXME remove once atomic_shim is gone\n-    let cg_dylib = std::ffi::OsString::from(\n-        &tcx.sess\n-            .opts\n-            .debugging_opts\n-            .codegen_backend\n-            .as_ref()\n-            .unwrap(),\n-    );\n-    std::mem::forget(\n-        libloading::os::unix::Library::open(Some(cg_dylib), libc::RTLD_NOW | libc::RTLD_GLOBAL)\n-            .unwrap(),\n-    );\n+    #[cfg(unix)]\n+    unsafe {\n+        // When not using our custom driver rustc will open us without the RTLD_GLOBAL flag, so\n+        // __cg_clif_global_atomic_mutex will not be exported. We fix this by opening ourself again\n+        // as global.\n+        // FIXME remove once atomic_shim is gone\n+\n+        let mut dl_info: libc::Dl_info = std::mem::zeroed();\n+        assert_ne!(\n+            libc::dladdr(run_jit as *const libc::c_void, &mut dl_info),\n+            0\n+        );\n+        assert_ne!(\n+            libc::dlopen(dl_info.dli_fname, libc::RTLD_NOW | libc::RTLD_GLOBAL),\n+            std::ptr::null_mut(),\n+        );\n+    }\n \n     let imported_symbols = load_imported_symbols_for_jit(tcx);\n "}]}