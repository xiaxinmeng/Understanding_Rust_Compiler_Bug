{"sha": "8edcf6cd1e432bc3119f88d6ad782f8c473f134b", "node_id": "C_kwDOAAsO6NoAKDhlZGNmNmNkMWU0MzJiYzMxMTlmODhkNmFkNzgyZjhjNDczZjEzNGI", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-06-13T09:53:31Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-07-26T17:00:31Z"}, "message": "Clippy fallout.", "tree": {"sha": "05e8a56e0c57503c0ca594ced781af4007817eba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05e8a56e0c57503c0ca594ced781af4007817eba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8edcf6cd1e432bc3119f88d6ad782f8c473f134b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8edcf6cd1e432bc3119f88d6ad782f8c473f134b", "html_url": "https://github.com/rust-lang/rust/commit/8edcf6cd1e432bc3119f88d6ad782f8c473f134b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8edcf6cd1e432bc3119f88d6ad782f8c473f134b/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "034b6f99ad982927e27565384af16647385520a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/034b6f99ad982927e27565384af16647385520a6", "html_url": "https://github.com/rust-lang/rust/commit/034b6f99ad982927e27565384af16647385520a6"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3f69cc2038839c815a6e4c94221dffe7c7e1807a", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8edcf6cd1e432bc3119f88d6ad782f8c473f134b/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8edcf6cd1e432bc3119f88d6ad782f8c473f134b/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=8edcf6cd1e432bc3119f88d6ad782f8c473f134b", "patch": "@@ -615,7 +615,7 @@ struct BodyLifetimeChecker {\n impl<'tcx> Visitor<'tcx> for BodyLifetimeChecker {\n     // for lifetimes as parameters of generics\n     fn visit_lifetime(&mut self, lifetime: &'tcx Lifetime) {\n-        if lifetime.name.ident().name != kw::Empty && lifetime.name.ident().name != kw::StaticLifetime {\n+        if lifetime.name.ident().name != kw::UnderscoreLifetime && lifetime.name.ident().name != kw::StaticLifetime {\n             self.lifetimes_used_in_body = true;\n         }\n     }"}]}