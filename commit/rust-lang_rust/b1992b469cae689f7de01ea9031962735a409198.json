{"sha": "b1992b469cae689f7de01ea9031962735a409198", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxOTkyYjQ2OWNhZTY4OWY3ZGUwMWVhOTAzMTk2MjczNWE0MDkxOTg=", "commit": {"author": {"name": "Paul Daniel Faria", "email": "Nashenas88@users.noreply.github.com", "date": "2020-06-27T15:20:02Z"}, "committer": {"name": "Paul Daniel Faria", "email": "Nashenas88@users.noreply.github.com", "date": "2020-06-27T15:38:34Z"}, "message": "Remove unneeded code, filename from tests, fix rebasing issues", "tree": {"sha": "bd7cc9c0a70266ab3afac7a082bdd15a9c03fe68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd7cc9c0a70266ab3afac7a082bdd15a9c03fe68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1992b469cae689f7de01ea9031962735a409198", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1992b469cae689f7de01ea9031962735a409198", "html_url": "https://github.com/rust-lang/rust/commit/b1992b469cae689f7de01ea9031962735a409198", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1992b469cae689f7de01ea9031962735a409198/comments", "author": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28bb8ed9cb0aa9f1efad252748ea189716355157", "url": "https://api.github.com/repos/rust-lang/rust/commits/28bb8ed9cb0aa9f1efad252748ea189716355157", "html_url": "https://github.com/rust-lang/rust/commit/28bb8ed9cb0aa9f1efad252748ea189716355157"}], "stats": {"total": 119, "additions": 85, "deletions": 34}, "files": [{"sha": "dc758a1f09ea7dc48150754fc5b6f090c040aea9", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b1992b469cae689f7de01ea9031962735a409198/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/b1992b469cae689f7de01ea9031962735a409198/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=b1992b469cae689f7de01ea9031962735a409198", "patch": "@@ -30,7 +30,7 @@ version = \"0.11.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"ee49baf6cb617b853aa8d93bf420db2383fab46d314482ca2803b40d5fde979b\"\n dependencies = [\n- \"winapi 0.3.8\",\n+ \"winapi 0.3.9\",\n ]\n \n [[package]]\n@@ -1791,7 +1791,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"ca8a50ef2360fbd1eeb0ecd46795a87a19024eb4b53c5dc916ca1fd95fe62438\"\n dependencies = [\n  \"libc\",\n- \"winapi 0.3.8\",\n+ \"winapi 0.3.9\",\n ]\n \n [[package]]"}, {"sha": "27e94b7fe750b93f76604092912df37c5031b1f8", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b1992b469cae689f7de01ea9031962735a409198/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1992b469cae689f7de01ea9031962735a409198/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=b1992b469cae689f7de01ea9031962735a409198", "patch": "@@ -27,9 +27,9 @@ use hir_ty::{\n     display::{HirDisplayError, HirFormatter},\n     expr::ExprValidator,\n     method_resolution,\n-    method_resolution, ApplicationTy, Canonical, InEnvironment, Substs, TraitEnvironment, Ty,\n-    TyDefId, TypeCtor,\n     unsafe_validation::UnsafeValidator,\n+    ApplicationTy, Canonical, GenericPredicate, InEnvironment, Substs, TraitEnvironment, Ty,\n+    TyDefId, TypeCtor,\n };\n use ra_db::{CrateId, CrateName, Edition, FileId};\n use ra_prof::profile;\n@@ -671,6 +671,10 @@ impl Function {\n         db.function_data(self.id).params.clone()\n     }\n \n+    pub fn is_unsafe(self, db: &dyn HirDatabase) -> bool {\n+        db.function_data(self.id).is_unsafe\n+    }\n+\n     pub fn diagnostics(self, db: &dyn HirDatabase, sink: &mut DiagnosticSink) {\n         let _p = profile(\"Function::diagnostics\");\n         let infer = db.infer(self.id.into());"}, {"sha": "2a85ce85d6de433fcf632c94102944a862b0c0ce", "filename": "crates/ra_hir_ty/src/tests.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b1992b469cae689f7de01ea9031962735a409198/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1992b469cae689f7de01ea9031962735a409198/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs?ref=b1992b469cae689f7de01ea9031962735a409198", "patch": "@@ -580,7 +580,6 @@ fn missing_unsafe() {\n fn missing_unsafe_diagnostic_with_unsafe_method_call() {\n     let diagnostics = TestDB::with_files(\n         r\"\n-//- /lib.rs\n struct HasUnsafe;\n \n impl HasUnsafe {\n@@ -606,7 +605,6 @@ fn missing_unsafe() {\n fn no_missing_unsafe_diagnostic_with_raw_ptr_in_unsafe_block() {\n     let diagnostics = TestDB::with_files(\n         r\"\n-//- /lib.rs\n fn nothing_to_see_move_along() {\n     let x = &5 as *const usize;\n     unsafe {\n@@ -625,7 +623,6 @@ fn nothing_to_see_move_along() {\n fn missing_unsafe_diagnostic_with_raw_ptr_outside_unsafe_block() {\n     let diagnostics = TestDB::with_files(\n         r\"\n-//- /lib.rs\n fn nothing_to_see_move_along() {\n     let x = &5 as *const usize;\n     unsafe {\n@@ -645,7 +642,6 @@ fn nothing_to_see_move_along() {\n fn no_missing_unsafe_diagnostic_with_unsafe_call_in_unsafe_block() {\n     let diagnostics = TestDB::with_files(\n         r\"\n-//- /lib.rs\n unsafe fn unsafe_fn() {\n     let x = &5 as *const usize;\n     let y = *x;\n@@ -668,7 +664,6 @@ fn nothing_to_see_move_along() {\n fn no_missing_unsafe_diagnostic_with_unsafe_method_call_in_unsafe_block() {\n     let diagnostics = TestDB::with_files(\n         r\"\n-//- /lib.rs\n struct HasUnsafe;\n \n impl HasUnsafe {"}, {"sha": "e2353404bfb5b6c0ed5ff65f89b2a683c472d14e", "filename": "crates/ra_hir_ty/src/unsafe_validation.rs", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b1992b469cae689f7de01ea9031962735a409198/crates%2Fra_hir_ty%2Fsrc%2Funsafe_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1992b469cae689f7de01ea9031962735a409198/crates%2Fra_hir_ty%2Fsrc%2Funsafe_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Funsafe_validation.rs?ref=b1992b469cae689f7de01ea9031962735a409198", "patch": "@@ -3,21 +3,18 @@\n \n use std::sync::Arc;\n \n-use hir_def::{DefWithBodyId, FunctionId};\n+use hir_def::{\n+    body::Body,\n+    expr::{Expr, ExprId, UnaryOp},\n+    DefWithBodyId, FunctionId,\n+};\n use hir_expand::diagnostics::DiagnosticSink;\n \n use crate::{\n     db::HirDatabase, diagnostics::MissingUnsafe, lower::CallableDef, ApplicationTy,\n     InferenceResult, Ty, TypeCtor,\n };\n \n-use rustc_hash::FxHashSet;\n-\n-use hir_def::{\n-    body::Body,\n-    expr::{Expr, ExprId, UnaryOp},\n-};\n-\n pub struct UnsafeValidator<'a, 'b: 'a> {\n     func: FunctionId,\n     infer: Arc<InferenceResult>,\n@@ -75,13 +72,9 @@ pub fn unsafe_expressions(\n     def: DefWithBodyId,\n ) -> Vec<UnsafeExpr> {\n     let mut unsafe_exprs = vec![];\n-    let mut unsafe_block_exprs = FxHashSet::default();\n     let body = db.body(def);\n     for (id, expr) in body.exprs.iter() {\n         match expr {\n-            Expr::Unsafe { .. } => {\n-                unsafe_block_exprs.insert(id);\n-            }\n             Expr::Call { callee, .. } => {\n                 let ty = &infer[*callee];\n                 if let &Ty::Apply(ApplicationTy {"}, {"sha": "1b0349bae2ee83a4e30f24444d4e454e487a8a3c", "filename": "crates/ra_ide/src/snapshots/highlight_injection.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b1992b469cae689f7de01ea9031962735a409198/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_injection.html", "raw_url": "https://github.com/rust-lang/rust/raw/b1992b469cae689f7de01ea9031962735a409198/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_injection.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_injection.html?ref=b1992b469cae689f7de01ea9031962735a409198", "patch": "@@ -12,8 +12,8 @@\n .string_literal     { color: #CC9393; }\n .field              { color: #94BFF3; }\n .function           { color: #93E0E3; }\n-.function.unsafe    { color: #E28C14; }\n-.operator.unsafe    { color: #E28C14; }\n+.function.unsafe    { color: #BC8383; }\n+.operator.unsafe    { color: #BC8383; }\n .parameter          { color: #94BFF3; }\n .text               { color: #DCDCCC; }\n .type               { color: #7CB8BB; }"}, {"sha": "d184b569102401c8831c1f806d3634ad2b26e6a2", "filename": "crates/ra_ide/src/snapshots/highlight_strings.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b1992b469cae689f7de01ea9031962735a409198/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_strings.html", "raw_url": "https://github.com/rust-lang/rust/raw/b1992b469cae689f7de01ea9031962735a409198/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_strings.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_strings.html?ref=b1992b469cae689f7de01ea9031962735a409198", "patch": "@@ -12,8 +12,8 @@\n .string_literal     { color: #CC9393; }\n .field              { color: #94BFF3; }\n .function           { color: #93E0E3; }\n-.function.unsafe    { color: #E28C14; }\n-.operator.unsafe    { color: #E28C14; }\n+.function.unsafe    { color: #BC8383; }\n+.operator.unsafe    { color: #BC8383; }\n .parameter          { color: #94BFF3; }\n .text               { color: #DCDCCC; }\n .type               { color: #7CB8BB; }"}, {"sha": "6936e949fe8e5a10653a2630b00f69885d124333", "filename": "crates/ra_ide/src/snapshots/highlight_unsafe.html", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/b1992b469cae689f7de01ea9031962735a409198/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_unsafe.html", "raw_url": "https://github.com/rust-lang/rust/raw/b1992b469cae689f7de01ea9031962735a409198/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_unsafe.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_unsafe.html?ref=b1992b469cae689f7de01ea9031962735a409198", "patch": "@@ -0,0 +1,53 @@\n+\n+<style>\n+body                { margin: 0; }\n+pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n+\n+.lifetime           { color: #DFAF8F; font-style: italic; }\n+.comment            { color: #7F9F7F; }\n+.documentation      { color: #629755; }\n+.injected           { opacity: 0.65 ; }\n+.struct, .enum      { color: #7CB8BB; }\n+.enum_variant       { color: #BDE0F3; }\n+.string_literal     { color: #CC9393; }\n+.field              { color: #94BFF3; }\n+.function           { color: #93E0E3; }\n+.function.unsafe    { color: #BC8383; }\n+.operator.unsafe    { color: #BC8383; }\n+.parameter          { color: #94BFF3; }\n+.text               { color: #DCDCCC; }\n+.type               { color: #7CB8BB; }\n+.builtin_type       { color: #8CD0D3; }\n+.type_param         { color: #DFAF8F; }\n+.attribute          { color: #94BFF3; }\n+.numeric_literal    { color: #BFEBBF; }\n+.bool_literal       { color: #BFE6EB; }\n+.macro              { color: #94BFF3; }\n+.module             { color: #AFD8AF; }\n+.variable           { color: #DCDCCC; }\n+.format_specifier   { color: #CC696B; }\n+.mutable            { text-decoration: underline; }\n+.unresolved_reference { color: #FC5555; }\n+.escape_sequence    { color: #94BFF3; }\n+\n+.keyword            { color: #F0DFAF; font-weight: bold; }\n+.keyword.unsafe     { color: #BC8383; font-weight: bold; }\n+.control            { font-style: italic; }\n+</style>\n+<pre><code><span class=\"keyword unsafe\">unsafe</span> <span class=\"keyword\">fn</span> <span class=\"function declaration unsafe\">unsafe_fn</span>() {}\n+\n+<span class=\"keyword\">struct</span> <span class=\"struct declaration\">HasUnsafeFn</span>;\n+\n+<span class=\"keyword\">impl</span> <span class=\"struct\">HasUnsafeFn</span> {\n+    <span class=\"keyword unsafe\">unsafe</span> <span class=\"keyword\">fn</span> <span class=\"function declaration unsafe\">unsafe_method</span>(&<span class=\"self_keyword\">self</span>) {}\n+}\n+\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span>() {\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\">x</span> = &<span class=\"numeric_literal\">5</span> <span class=\"keyword\">as</span> *<span class=\"keyword\">const</span> <span class=\"builtin_type\">usize</span>;\n+    <span class=\"keyword unsafe\">unsafe</span> {\n+        <span class=\"function unsafe\">unsafe_fn</span>();\n+        <span class=\"struct\">HasUnsafeFn</span>.<span class=\"function unsafe\">unsafe_method</span>();\n+        <span class=\"keyword\">let</span> <span class=\"variable declaration\">y</span> = <span class=\"operator unsafe\">*</span>(<span class=\"variable\">x</span>);\n+        <span class=\"keyword\">let</span> <span class=\"variable declaration\">z</span> = -<span class=\"variable\">x</span>;\n+    }\n+}</code></pre>\n\\ No newline at end of file"}, {"sha": "8d0b38f958dcea4887e97477cfc5d756c8348a28", "filename": "crates/ra_ide/src/snapshots/highlighting.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b1992b469cae689f7de01ea9031962735a409198/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/b1992b469cae689f7de01ea9031962735a409198/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html?ref=b1992b469cae689f7de01ea9031962735a409198", "patch": "@@ -12,8 +12,8 @@\n .string_literal     { color: #CC9393; }\n .field              { color: #94BFF3; }\n .function           { color: #93E0E3; }\n-.function.unsafe    { color: #E28C14; }\n-.operator.unsafe    { color: #E28C14; }\n+.function.unsafe    { color: #BC8383; }\n+.operator.unsafe    { color: #BC8383; }\n .parameter          { color: #94BFF3; }\n .text               { color: #DCDCCC; }\n .type               { color: #7CB8BB; }"}, {"sha": "9516c7441040ac94306656a7c4f809b53a48a17e", "filename": "crates/ra_ide/src/snapshots/rainbow_highlighting.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b1992b469cae689f7de01ea9031962735a409198/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Frainbow_highlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/b1992b469cae689f7de01ea9031962735a409198/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Frainbow_highlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Frainbow_highlighting.html?ref=b1992b469cae689f7de01ea9031962735a409198", "patch": "@@ -12,8 +12,8 @@\n .string_literal     { color: #CC9393; }\n .field              { color: #94BFF3; }\n .function           { color: #93E0E3; }\n-.function.unsafe    { color: #E28C14; }\n-.operator.unsafe    { color: #E28C14; }\n+.function.unsafe    { color: #BC8383; }\n+.operator.unsafe    { color: #BC8383; }\n .parameter          { color: #94BFF3; }\n .text               { color: #DCDCCC; }\n .type               { color: #7CB8BB; }"}, {"sha": "028b559022cbd04ada0c8acb1dedc1f26233e3a0", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b1992b469cae689f7de01ea9031962735a409198/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1992b469cae689f7de01ea9031962735a409198/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=b1992b469cae689f7de01ea9031962735a409198", "patch": "@@ -605,7 +605,13 @@ fn highlight_name(db: &RootDatabase, def: Definition) -> Highlight {\n         Definition::Field(_) => HighlightTag::Field,\n         Definition::ModuleDef(def) => match def {\n             hir::ModuleDef::Module(_) => HighlightTag::Module,\n-            hir::ModuleDef::Function(_) => HighlightTag::Function,\n+            hir::ModuleDef::Function(func) => {\n+                let mut h = HighlightTag::Function.into();\n+                if func.is_unsafe(db) {\n+                    h |= HighlightModifier::Unsafe;\n+                }\n+                return h;\n+            }\n             hir::ModuleDef::Adt(hir::Adt::Struct(_)) => HighlightTag::Struct,\n             hir::ModuleDef::Adt(hir::Adt::Enum(_)) => HighlightTag::Enum,\n             hir::ModuleDef::Adt(hir::Adt::Union(_)) => HighlightTag::Union,"}, {"sha": "0c74f7370158162953d990d7e691d0ff99eba104", "filename": "crates/ra_ide/src/syntax_highlighting/html.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b1992b469cae689f7de01ea9031962735a409198/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1992b469cae689f7de01ea9031962735a409198/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs?ref=b1992b469cae689f7de01ea9031962735a409198", "patch": "@@ -71,8 +71,8 @@ pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padd\n .string_literal     { color: #CC9393; }\n .field              { color: #94BFF3; }\n .function           { color: #93E0E3; }\n-.function.unsafe    { color: #E28C14; }\n-.operator.unsafe    { color: #E28C14; }\n+.function.unsafe    { color: #BC8383; }\n+.operator.unsafe    { color: #BC8383; }\n .parameter          { color: #94BFF3; }\n .text               { color: #DCDCCC; }\n .type               { color: #7CB8BB; }"}, {"sha": "13d9dd195ae29461dc610e7055d6c877d8221850", "filename": "crates/ra_ide/src/syntax_highlighting/tags.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b1992b469cae689f7de01ea9031962735a409198/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1992b469cae689f7de01ea9031962735a409198/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs?ref=b1992b469cae689f7de01ea9031962735a409198", "patch": "@@ -77,13 +77,15 @@ impl HighlightTag {\n             HighlightTag::EnumVariant => \"enum_variant\",\n             HighlightTag::EscapeSequence => \"escape_sequence\",\n             HighlightTag::Field => \"field\",\n+            HighlightTag::FormatSpecifier => \"format_specifier\",\n             HighlightTag::Function => \"function\",\n             HighlightTag::Generic => \"generic\",\n             HighlightTag::Keyword => \"keyword\",\n             HighlightTag::Lifetime => \"lifetime\",\n             HighlightTag::Macro => \"macro\",\n             HighlightTag::Module => \"module\",\n             HighlightTag::NumericLiteral => \"numeric_literal\",\n+            HighlightTag::Operator => \"operator\",\n             HighlightTag::SelfKeyword => \"self_keyword\",\n             HighlightTag::SelfType => \"self_type\",\n             HighlightTag::Static => \"static\",\n@@ -95,8 +97,6 @@ impl HighlightTag {\n             HighlightTag::Union => \"union\",\n             HighlightTag::Local => \"variable\",\n             HighlightTag::UnresolvedReference => \"unresolved_reference\",\n-            HighlightTag::FormatSpecifier => \"format_specifier\",\n-            HighlightTag::Operator => \"operator\",\n         }\n     }\n }"}]}