{"sha": "e31bedc9cf52490f4228c84e652ef5387184f75a", "node_id": "C_kwDOAAsO6NoAKGUzMWJlZGM5Y2Y1MjQ5MGY0MjI4Yzg0ZTY1MmVmNTM4NzE4NGY3NWE", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-08-27T04:14:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-27T04:14:19Z"}, "message": "Rollup merge of #100924 - est31:closure_to_fn_ptr, r=Mark-Simulacrum\n\nSmaller improvements of tidy and the unicode generator", "tree": {"sha": "391099bed4e9214ecc487a8180c3bfe87e5bc4da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/391099bed4e9214ecc487a8180c3bfe87e5bc4da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e31bedc9cf52490f4228c84e652ef5387184f75a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjCZobCRBK7hj4Ov3rIwAA/T4IAAk2pDnCUw4Q8nlRI92u3G+2\nGnns2oZOXnfbyhQQOG69RHN3eXFeU49mA+8ByeT6heKYah4iJIEifqKYOtjHHAMa\n1d+VETF+wFYhH2quhXQHR1TyZUwGRhy4/xFF8R2/gFsVhvxGbYCvs4BKmQUvgmVg\nSJ41LN5IDmPBk/zc+XI7ti247Jx69N9WWYe7kW4Y0lJVviT99Wty36bwh5RDFcID\nPJRxSlyqrrTZUo2IFAmfCAV5PAWsEaGbUvk4C632vFf/0ardER19yB5CtVlDiXnB\ni5z5O02X9cl7GWmhGSQoKnGxPlVp04mCBofLlIfBR/cxr0/Wu+ToRXFk3Iei9MI=\n=yEyi\n-----END PGP SIGNATURE-----\n", "payload": "tree 391099bed4e9214ecc487a8180c3bfe87e5bc4da\nparent 7214f0cfc42c8a63ea039ddb82bd8790884c475f\nparent 754b3e7567a441288ff7ce7f72280f267044113b\nauthor Yuki Okushi <jtitor@2k36.org> 1661573659 +0900\ncommitter GitHub <noreply@github.com> 1661573659 +0900\n\nRollup merge of #100924 - est31:closure_to_fn_ptr, r=Mark-Simulacrum\n\nSmaller improvements of tidy and the unicode generator\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e31bedc9cf52490f4228c84e652ef5387184f75a", "html_url": "https://github.com/rust-lang/rust/commit/e31bedc9cf52490f4228c84e652ef5387184f75a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e31bedc9cf52490f4228c84e652ef5387184f75a/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7214f0cfc42c8a63ea039ddb82bd8790884c475f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7214f0cfc42c8a63ea039ddb82bd8790884c475f", "html_url": "https://github.com/rust-lang/rust/commit/7214f0cfc42c8a63ea039ddb82bd8790884c475f"}, {"sha": "754b3e7567a441288ff7ce7f72280f267044113b", "url": "https://api.github.com/repos/rust-lang/rust/commits/754b3e7567a441288ff7ce7f72280f267044113b", "html_url": "https://github.com/rust-lang/rust/commit/754b3e7567a441288ff7ce7f72280f267044113b"}], "stats": {"total": 35, "additions": 17, "deletions": 18}, "files": [{"sha": "0a226443e01ca088a5ea77152f94523e7cc6a2eb", "filename": "src/tools/tidy/src/error_codes_check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e31bedc9cf52490f4228c84e652ef5387184f75a/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e31bedc9cf52490f4228c84e652ef5387184f75a/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs?ref=e31bedc9cf52490f4228c84e652ef5387184f75a", "patch": "@@ -217,7 +217,7 @@ pub fn check(paths: &[&Path], bad: &mut bool) {\n     println!(\"Checking which error codes lack tests...\");\n \n     for path in paths {\n-        super::walk(path, &mut |path| super::filter_dirs(path), &mut |entry, contents| {\n+        super::walk(path, &mut super::filter_dirs, &mut |entry, contents| {\n             let file_name = entry.file_name();\n             let entry_path = entry.path();\n "}, {"sha": "2fe578acd90e72f25e9a186a0591382dc8a5d7c3", "filename": "src/tools/unicode-table-generator/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e31bedc9cf52490f4228c84e652ef5387184f75a/src%2Ftools%2Funicode-table-generator%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e31bedc9cf52490f4228c84e652ef5387184f75a/src%2Ftools%2Funicode-table-generator%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Funicode-table-generator%2Fsrc%2Fmain.rs?ref=e31bedc9cf52490f4228c84e652ef5387184f75a", "patch": "@@ -221,7 +221,7 @@ fn main() {\n     let write_location = std::env::args().nth(1).unwrap_or_else(|| {\n         eprintln!(\"Must provide path to write unicode tables to\");\n         eprintln!(\n-            \"e.g. {} library/core/unicode/unicode_data.rs\",\n+            \"e.g. {} library/core/src/unicode/unicode_data.rs\",\n             std::env::args().next().unwrap_or_default()\n         );\n         std::process::exit(1);"}, {"sha": "714bb53382e706c708ca294bd8b9e11e378474a9", "filename": "src/tools/unicode-table-generator/src/unicode_download.rs", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/e31bedc9cf52490f4228c84e652ef5387184f75a/src%2Ftools%2Funicode-table-generator%2Fsrc%2Funicode_download.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e31bedc9cf52490f4228c84e652ef5387184f75a/src%2Ftools%2Funicode-table-generator%2Fsrc%2Funicode_download.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Funicode-table-generator%2Fsrc%2Funicode_download.rs?ref=e31bedc9cf52490f4228c84e652ef5387184f75a", "patch": "@@ -1,6 +1,6 @@\n use crate::UNICODE_DIRECTORY;\n use std::path::Path;\n-use std::process::Command;\n+use std::process::{Command, Output};\n \n static URL_PREFIX: &str = \"https://www.unicode.org/Public/UCD/latest/ucd/\";\n \n@@ -9,6 +9,18 @@ static README: &str = \"ReadMe.txt\";\n static RESOURCES: &[&str] =\n     &[\"DerivedCoreProperties.txt\", \"PropList.txt\", \"UnicodeData.txt\", \"SpecialCasing.txt\"];\n \n+#[track_caller]\n+fn fetch(url: &str) -> Output {\n+    let output = Command::new(\"curl\").arg(URL_PREFIX.to_owned() + url).output().unwrap();\n+    if !output.status.success() {\n+        panic!(\n+            \"Failed to run curl to fetch {url}: stderr: {}\",\n+            String::from_utf8_lossy(&output.stderr)\n+        );\n+    }\n+    output\n+}\n+\n pub fn fetch_latest() {\n     let directory = Path::new(UNICODE_DIRECTORY);\n     if directory.exists() {\n@@ -20,27 +32,14 @@ pub fn fetch_latest() {\n     if let Err(e) = std::fs::create_dir_all(directory) {\n         panic!(\"Failed to create {UNICODE_DIRECTORY:?}: {e}\");\n     }\n-    let output = Command::new(\"curl\").arg(URL_PREFIX.to_owned() + README).output().unwrap();\n-    if !output.status.success() {\n-        panic!(\n-            \"Failed to run curl to fetch readme: stderr: {}\",\n-            String::from_utf8_lossy(&output.stderr)\n-        );\n-    }\n+    let output = fetch(README);\n     let current = std::fs::read_to_string(directory.join(README)).unwrap_or_default();\n     if current.as_bytes() != &output.stdout[..] {\n         std::fs::write(directory.join(README), output.stdout).unwrap();\n     }\n \n     for resource in RESOURCES {\n-        let output = Command::new(\"curl\").arg(URL_PREFIX.to_owned() + resource).output().unwrap();\n-        if !output.status.success() {\n-            panic!(\n-                \"Failed to run curl to fetch {}: stderr: {}\",\n-                resource,\n-                String::from_utf8_lossy(&output.stderr)\n-            );\n-        }\n+        let output = fetch(resource);\n         std::fs::write(directory.join(resource), output.stdout).unwrap();\n     }\n }"}]}