{"sha": "73684a4ae2ff5251bbff35109d2c9ad40fe4ef01", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczNjg0YTRhZTJmZjUyNTFiYmZmMzUxMDlkMmM5YWQ0MGZlNGVmMDE=", "commit": {"author": {"name": "unexge", "email": "unexge@gmail.com", "date": "2020-06-06T19:16:59Z"}, "committer": {"name": "unexge", "email": "unexge@gmail.com", "date": "2020-06-06T19:16:59Z"}, "message": "Add goto def for enum variant field", "tree": {"sha": "bbb971cae2c8309fd9147192e20d054af12e172a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbb971cae2c8309fd9147192e20d054af12e172a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73684a4ae2ff5251bbff35109d2c9ad40fe4ef01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73684a4ae2ff5251bbff35109d2c9ad40fe4ef01", "html_url": "https://github.com/rust-lang/rust/commit/73684a4ae2ff5251bbff35109d2c9ad40fe4ef01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73684a4ae2ff5251bbff35109d2c9ad40fe4ef01/comments", "author": {"login": "unexge", "id": 16212576, "node_id": "MDQ6VXNlcjE2MjEyNTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16212576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unexge", "html_url": "https://github.com/unexge", "followers_url": "https://api.github.com/users/unexge/followers", "following_url": "https://api.github.com/users/unexge/following{/other_user}", "gists_url": "https://api.github.com/users/unexge/gists{/gist_id}", "starred_url": "https://api.github.com/users/unexge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unexge/subscriptions", "organizations_url": "https://api.github.com/users/unexge/orgs", "repos_url": "https://api.github.com/users/unexge/repos", "events_url": "https://api.github.com/users/unexge/events{/privacy}", "received_events_url": "https://api.github.com/users/unexge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "unexge", "id": 16212576, "node_id": "MDQ6VXNlcjE2MjEyNTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16212576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unexge", "html_url": "https://github.com/unexge", "followers_url": "https://api.github.com/users/unexge/followers", "following_url": "https://api.github.com/users/unexge/following{/other_user}", "gists_url": "https://api.github.com/users/unexge/gists{/gist_id}", "starred_url": "https://api.github.com/users/unexge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unexge/subscriptions", "organizations_url": "https://api.github.com/users/unexge/orgs", "repos_url": "https://api.github.com/users/unexge/repos", "events_url": "https://api.github.com/users/unexge/events{/privacy}", "received_events_url": "https://api.github.com/users/unexge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4a92b4fefecbd63d8c7c82a5553cd209c068144", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4a92b4fefecbd63d8c7c82a5553cd209c068144", "html_url": "https://github.com/rust-lang/rust/commit/d4a92b4fefecbd63d8c7c82a5553cd209c068144"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "693344c3147dcf6185b789ef9cea0e92cf62b4b5", "filename": "crates/ra_ide/src/goto_definition.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/73684a4ae2ff5251bbff35109d2c9ad40fe4ef01/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73684a4ae2ff5251bbff35109d2c9ad40fe4ef01/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs?ref=73684a4ae2ff5251bbff35109d2c9ad40fe4ef01", "patch": "@@ -886,4 +886,23 @@ mod tests {\n             \"x\",\n         )\n     }\n+\n+    #[test]\n+    fn goto_def_for_enum_variant_field() {\n+        check_goto(\n+            \"\n+            //- /lib.rs\n+            enum Foo {\n+                Bar { x: i32 }\n+            }\n+            fn baz(foo: Foo) {\n+                match foo {\n+                    Foo::Bar { x<|> } => x\n+                };\n+            }\n+            \",\n+            \"x RECORD_FIELD_DEF FileId(1) 21..27 21..22\",\n+            \"x: i32|x\",\n+        );\n+    }\n }"}, {"sha": "52233937ce9b5a473b8e6e0f34904f6edea02c72", "filename": "crates/ra_ide_db/src/defs.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/73684a4ae2ff5251bbff35109d2c9ad40fe4ef01/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73684a4ae2ff5251bbff35109d2c9ad40fe4ef01/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs?ref=73684a4ae2ff5251bbff35109d2c9ad40fe4ef01", "patch": "@@ -126,6 +126,12 @@ fn classify_name_inner(sema: &Semantics<RootDatabase>, name: &ast::Name) -> Opti\n                 Some(name_ref_class.definition())\n             },\n             ast::BindPat(it) => {\n+                if let Some(record_field_pat) = it.syntax().parent().and_then(ast::RecordFieldPat::cast) {\n+                    return Some(Definition::Field(\n+                        sema.resolve_record_field_pat(&record_field_pat)?\n+                    ));\n+                }\n+\n                 let local = sema.to_def(&it)?;\n                 Some(Definition::Local(local))\n             },"}]}