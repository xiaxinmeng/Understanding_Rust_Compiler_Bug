{"sha": "884458485064f3caa11cc8165ddfc09894bb1e42", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4NDQ1ODQ4NTA2NGYzY2FhMTFjYzgxNjVkZGZjMDk4OTRiYjFlNDI=", "commit": {"author": {"name": "Douglas Campos", "email": "qmx@qmx.me", "date": "2018-08-10T16:28:22Z"}, "committer": {"name": "Douglas Campos", "email": "qmx@qmx.me", "date": "2018-08-16T19:22:34Z"}, "message": "to be OR and not to AND, that's the question", "tree": {"sha": "84ae12ceef05185e6c561255886221877e8a7ce4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84ae12ceef05185e6c561255886221877e8a7ce4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/884458485064f3caa11cc8165ddfc09894bb1e42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/884458485064f3caa11cc8165ddfc09894bb1e42", "html_url": "https://github.com/rust-lang/rust/commit/884458485064f3caa11cc8165ddfc09894bb1e42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/884458485064f3caa11cc8165ddfc09894bb1e42/comments", "author": {"login": "qmx", "id": 66734, "node_id": "MDQ6VXNlcjY2NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/66734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmx", "html_url": "https://github.com/qmx", "followers_url": "https://api.github.com/users/qmx/followers", "following_url": "https://api.github.com/users/qmx/following{/other_user}", "gists_url": "https://api.github.com/users/qmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmx/subscriptions", "organizations_url": "https://api.github.com/users/qmx/orgs", "repos_url": "https://api.github.com/users/qmx/repos", "events_url": "https://api.github.com/users/qmx/events{/privacy}", "received_events_url": "https://api.github.com/users/qmx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "qmx", "id": 66734, "node_id": "MDQ6VXNlcjY2NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/66734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmx", "html_url": "https://github.com/qmx", "followers_url": "https://api.github.com/users/qmx/followers", "following_url": "https://api.github.com/users/qmx/following{/other_user}", "gists_url": "https://api.github.com/users/qmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmx/subscriptions", "organizations_url": "https://api.github.com/users/qmx/orgs", "repos_url": "https://api.github.com/users/qmx/repos", "events_url": "https://api.github.com/users/qmx/events{/privacy}", "received_events_url": "https://api.github.com/users/qmx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b3e492194477b6c40783c022e9569bb4a41e096", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b3e492194477b6c40783c022e9569bb4a41e096", "html_url": "https://github.com/rust-lang/rust/commit/2b3e492194477b6c40783c022e9569bb4a41e096"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b3aadf4dc72e72218d034443d0359520cb73aa96", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/884458485064f3caa11cc8165ddfc09894bb1e42/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/884458485064f3caa11cc8165ddfc09894bb1e42/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=884458485064f3caa11cc8165ddfc09894bb1e42", "patch": "@@ -4309,7 +4309,7 @@ impl<'a, 'crateloader: 'a> Resolver<'a, 'crateloader> {\n                     let is_visible_to_user =\n                         !in_module_is_extern || name_binding.vis == ty::Visibility::Public;\n \n-                    if !is_extern_crate_that_also_appears_in_prelude || is_visible_to_user {\n+                    if !is_extern_crate_that_also_appears_in_prelude && is_visible_to_user {\n                         // add the module to the lookup\n                         let is_extern = in_module_is_extern || name_binding.is_extern_crate();\n                         if seen_modules.insert(module.def_id().unwrap()) {"}]}