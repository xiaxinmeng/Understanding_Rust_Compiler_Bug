{"sha": "bf2be6175e9f6414dd5ce19d120dcd444d79edea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMmJlNjE3NWU5ZjY0MTRkZDVjZTE5ZDEyMGRjZDQ0NGQ3OWVkZWE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-05T13:35:59Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-05T13:35:59Z"}, "message": "Auto merge of #46492 - eddyb:move-ops, r=arielb1\n\nrustc_mir: don't move temporaries that are still used later.\n\nThis should unbreak using the MIR borrow-checker on `libcore` (assuming #46268 is merged).", "tree": {"sha": "07d6be2043c73c463362476171134d78619e679f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07d6be2043c73c463362476171134d78619e679f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf2be6175e9f6414dd5ce19d120dcd444d79edea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf2be6175e9f6414dd5ce19d120dcd444d79edea", "html_url": "https://github.com/rust-lang/rust/commit/bf2be6175e9f6414dd5ce19d120dcd444d79edea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf2be6175e9f6414dd5ce19d120dcd444d79edea/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2899408dd162bfe349e7ff8bceaee60b34e77cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2899408dd162bfe349e7ff8bceaee60b34e77cc", "html_url": "https://github.com/rust-lang/rust/commit/a2899408dd162bfe349e7ff8bceaee60b34e77cc"}, {"sha": "2a629f931df9daefecdcc9befe3698f556b3572d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a629f931df9daefecdcc9befe3698f556b3572d", "html_url": "https://github.com/rust-lang/rust/commit/2a629f931df9daefecdcc9befe3698f556b3572d"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "c803e76aebea4a96336ae520c78e881713316c9c", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bf2be6175e9f6414dd5ce19d120dcd444d79edea/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf2be6175e9f6414dd5ce19d120dcd444d79edea/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=bf2be6175e9f6414dd5ce19d120dcd444d79edea", "patch": "@@ -1347,6 +1347,12 @@ impl<'tcx> Operand<'tcx> {\n         })\n     }\n \n+    pub fn to_copy(&self) -> Self {\n+        match *self {\n+            Operand::Copy(_) | Operand::Constant(_) => self.clone(),\n+            Operand::Move(ref place) => Operand::Copy(place.clone())\n+        }\n+    }\n }\n \n ///////////////////////////////////////////////////////////////////////////"}, {"sha": "ee0b7bb7a8bc48f6369a2520c7c464492fd288c6", "filename": "src/librustc_mir/build/expr/as_rvalue.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bf2be6175e9f6414dd5ce19d120dcd444d79edea/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf2be6175e9f6414dd5ce19d120dcd444d79edea/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs?ref=bf2be6175e9f6414dd5ce19d120dcd444d79edea", "patch": "@@ -87,7 +87,7 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n                     let is_min = this.temp(bool_ty, expr_span);\n \n                     this.cfg.push_assign(block, source_info, &is_min,\n-                                         Rvalue::BinaryOp(BinOp::Eq, arg.clone(), minval));\n+                                         Rvalue::BinaryOp(BinOp::Eq, arg.to_copy(), minval));\n \n                     let err = ConstMathErr::Overflow(Op::Neg);\n                     block = this.assert(block, Operand::Move(is_min), false,\n@@ -346,7 +346,7 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n                 let is_zero = self.temp(bool_ty, span);\n                 let zero = self.zero_literal(span, ty);\n                 self.cfg.push_assign(block, source_info, &is_zero,\n-                                     Rvalue::BinaryOp(BinOp::Eq, rhs.clone(), zero));\n+                                     Rvalue::BinaryOp(BinOp::Eq, rhs.to_copy(), zero));\n \n                 block = self.assert(block, Operand::Move(is_zero), false,\n                                     AssertMessage::Math(zero_err), span);\n@@ -364,9 +364,9 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n                     // this does (rhs == -1) & (lhs == MIN). It could short-circuit instead\n \n                     self.cfg.push_assign(block, source_info, &is_neg_1,\n-                                         Rvalue::BinaryOp(BinOp::Eq, rhs.clone(), neg_1));\n+                                         Rvalue::BinaryOp(BinOp::Eq, rhs.to_copy(), neg_1));\n                     self.cfg.push_assign(block, source_info, &is_min,\n-                                         Rvalue::BinaryOp(BinOp::Eq, lhs.clone(), min));\n+                                         Rvalue::BinaryOp(BinOp::Eq, lhs.to_copy(), min));\n \n                     let is_neg_1 = Operand::Move(is_neg_1);\n                     let is_min = Operand::Move(is_min);"}, {"sha": "c3e43c92590ed0462c9b48f6b9716e52101a87e0", "filename": "src/test/run-pass/i128.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf2be6175e9f6414dd5ce19d120dcd444d79edea/src%2Ftest%2Frun-pass%2Fi128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf2be6175e9f6414dd5ce19d120dcd444d79edea/src%2Ftest%2Frun-pass%2Fi128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fi128.rs?ref=bf2be6175e9f6414dd5ce19d120dcd444d79edea", "patch": "@@ -10,6 +10,8 @@\n \n // ignore-emscripten i128 doesn't work\n \n+// compile-flags: -Z borrowck=compare\n+\n #![feature(i128_type, test)]\n \n extern crate test;"}, {"sha": "ebd43a860338602ba3bddc32165a3587748a9b19", "filename": "src/test/run-pass/u128.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf2be6175e9f6414dd5ce19d120dcd444d79edea/src%2Ftest%2Frun-pass%2Fu128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf2be6175e9f6414dd5ce19d120dcd444d79edea/src%2Ftest%2Frun-pass%2Fu128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fu128.rs?ref=bf2be6175e9f6414dd5ce19d120dcd444d79edea", "patch": "@@ -10,6 +10,8 @@\n \n // ignore-emscripten u128 not supported\n \n+// compile-flags: -Z borrowck=compare\n+\n #![feature(i128_type, test)]\n \n extern crate test;"}]}