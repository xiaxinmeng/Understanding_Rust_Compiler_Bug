{"sha": "ef99b57b13f9ab04f44dd9c5c325be8f0b6b9dc1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmOTliNTdiMTNmOWFiMDRmNDRkZDljNWMzMjViZThmMGI2YjlkYzE=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-17T14:05:12Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-17T14:05:12Z"}, "message": "Refactor local monomorphization logic to be easier to comprehend", "tree": {"sha": "8e6c0bd0abe1236800ed0398e3398102d647d5c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e6c0bd0abe1236800ed0398e3398102d647d5c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef99b57b13f9ab04f44dd9c5c325be8f0b6b9dc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef99b57b13f9ab04f44dd9c5c325be8f0b6b9dc1", "html_url": "https://github.com/rust-lang/rust/commit/ef99b57b13f9ab04f44dd9c5c325be8f0b6b9dc1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef99b57b13f9ab04f44dd9c5c325be8f0b6b9dc1/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d33d05c81f949f743b3441cc1e960f2dc2bd5ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d33d05c81f949f743b3441cc1e960f2dc2bd5ac", "html_url": "https://github.com/rust-lang/rust/commit/3d33d05c81f949f743b3441cc1e960f2dc2bd5ac"}], "stats": {"total": 43, "additions": 21, "deletions": 22}, "files": [{"sha": "977285b27be38c2de718749411bd4f3fc3585fbe", "filename": "src/librustc_mir/monomorphize/collector.rs", "status": "modified", "additions": 21, "deletions": 22, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/ef99b57b13f9ab04f44dd9c5c325be8f0b6b9dc1/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99b57b13f9ab04f44dd9c5c325be8f0b6b9dc1/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs?ref=ef99b57b13f9ab04f44dd9c5c325be8f0b6b9dc1", "patch": "@@ -187,7 +187,6 @@\n use rustc::hir::{self, CodegenFnAttrFlags};\n use rustc::hir::itemlikevisit::ItemLikeVisitor;\n \n-use rustc::hir::Node;\n use rustc::hir::def_id::DefId;\n use rustc::mir::interpret::{AllocId, ConstValue};\n use rustc::middle::lang_items::{ExchangeMallocFnLangItem, StartFnLangItem};\n@@ -737,27 +736,27 @@ fn should_monomorphize_locally<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, instance:\n         ty::InstanceDef::CloneShim(..) => return true\n     };\n \n-    return match tcx.hir.get_if_local(def_id) {\n-        Some(Node::ForeignItem(..)) => {\n-            false // foreign items are linked against, not codegened.\n-        }\n-        Some(_) => true,\n-        None => {\n-            if tcx.is_reachable_non_generic(def_id) ||\n-                tcx.is_foreign_item(def_id) ||\n-                is_available_upstream_generic(tcx, def_id, instance.substs)\n-            {\n-                // We can link to the item in question, no instance needed\n-                // in this crate\n-                false\n-            } else {\n-                if !tcx.is_mir_available(def_id) {\n-                    bug!(\"Cannot create local mono-item for {:?}\", def_id)\n-                }\n-                true\n-            }\n-        }\n-    };\n+    if tcx.is_foreign_item(def_id) {\n+        // We can always link to foreign items\n+        return false;\n+    }\n+\n+    if def_id.is_local() {\n+        // local items cannot be referred to locally without monomorphizing them locally\n+        return true;\n+    }\n+\n+    if tcx.is_reachable_non_generic(def_id) ||\n+       is_available_upstream_generic(tcx, def_id, instance.substs) {\n+        // We can link to the item in question, no instance needed\n+        // in this crate\n+        return false;\n+    }\n+\n+    if !tcx.is_mir_available(def_id) {\n+        bug!(\"Cannot create local mono-item for {:?}\", def_id)\n+    }\n+    return true;\n \n     fn is_available_upstream_generic<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                                                def_id: DefId,"}]}