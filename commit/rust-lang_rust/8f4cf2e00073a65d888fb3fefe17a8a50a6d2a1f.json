{"sha": "8f4cf2e00073a65d888fb3fefe17a8a50a6d2a1f", "node_id": "C_kwDOAAsO6NoAKDhmNGNmMmUwMDA3M2E2NWQ4ODhmYjNmZWZlMTdhOGE1MGE2ZDJhMWY", "commit": {"author": {"name": "b-naber", "email": "b_naber@gmx.de", "date": "2023-03-09T15:55:54Z"}, "committer": {"name": "b-naber", "email": "b_naber@gmx.de", "date": "2023-03-22T18:13:18Z"}, "message": "print sccs_info strings correctly", "tree": {"sha": "4a7a1f85488076ec328b04676be7f6b25c7e86db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a7a1f85488076ec328b04676be7f6b25c7e86db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f4cf2e00073a65d888fb3fefe17a8a50a6d2a1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f4cf2e00073a65d888fb3fefe17a8a50a6d2a1f", "html_url": "https://github.com/rust-lang/rust/commit/8f4cf2e00073a65d888fb3fefe17a8a50a6d2a1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f4cf2e00073a65d888fb3fefe17a8a50a6d2a1f/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35bc8ae86fe295e77fa1c290bebc52b08782018c", "url": "https://api.github.com/repos/rust-lang/rust/commits/35bc8ae86fe295e77fa1c290bebc52b08782018c", "html_url": "https://github.com/rust-lang/rust/commit/35bc8ae86fe295e77fa1c290bebc52b08782018c"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "03f175daca9e8d26e4237d778df738453a0e0348", "filename": "compiler/rustc_borrowck/src/region_infer/mod.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8f4cf2e00073a65d888fb3fefe17a8a50a6d2a1f/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f4cf2e00073a65d888fb3fefe17a8a50a6d2a1f/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fmod.rs?ref=8f4cf2e00073a65d888fb3fefe17a8a50a6d2a1f", "patch": "@@ -256,11 +256,12 @@ fn sccs_info<'cx, 'tcx>(\n \n     let mut var_to_origin_sorted = var_to_origin.clone().into_iter().collect::<Vec<_>>();\n     var_to_origin_sorted.sort_by_key(|vto| vto.0);\n-    let mut debug_str = \"region variables to origins:\\n\".to_string();\n+\n+    let mut reg_vars_to_origins_str = \"region variables to origins:\\n\".to_string();\n     for (reg_var, origin) in var_to_origin_sorted.into_iter() {\n-        debug_str.push_str(&format!(\"{:?}: {:?}\\n\", reg_var, origin));\n+        reg_vars_to_origins_str.push_str(&format!(\"{:?}: {:?}\\n\", reg_var, origin));\n     }\n-    debug!(debug_str);\n+    debug!(\"{}\", reg_vars_to_origins_str);\n \n     let num_components = sccs.scc_data().ranges().len();\n     let mut components = vec![FxIndexSet::default(); num_components];\n@@ -275,12 +276,12 @@ fn sccs_info<'cx, 'tcx>(\n     for (scc_idx, reg_vars_origins) in components.iter().enumerate() {\n         let regions_info = reg_vars_origins.clone().into_iter().collect::<Vec<_>>();\n         components_str.push_str(&format!(\n-            \"{:?}: {:?})\",\n+            \"{:?}: {:?},\\n)\",\n             ConstraintSccIndex::from_usize(scc_idx),\n             regions_info,\n         ))\n     }\n-    debug!(components_str);\n+    debug!(\"{}\", components_str);\n \n     // calculate the best representative for each component\n     let components_representatives = components"}]}