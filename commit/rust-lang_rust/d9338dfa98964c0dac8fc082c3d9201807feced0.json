{"sha": "d9338dfa98964c0dac8fc082c3d9201807feced0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5MzM4ZGZhOTg5NjRjMGRhYzhmYzA4MmMzZDkyMDE4MDdmZWNlZDA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-10-08T08:44:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-08T08:44:26Z"}, "message": "Merge #1951\n\n1951: Lower the precedence of the `as` operator. r=matklad a=goffrie\n\nPreviously, the `as` operator was being parsed like a postfix expression, and\r\ntherefore being given the highest possible precedence. That caused it to bind\r\nmore tightly than prefix operators, which it should not. Instead, parse it\r\nsomewhat like a normal binary expression with some special-casing.\r\n\r\nFixes #1851.\n\nCo-authored-by: Geoffry Song <goffrie@gmail.com>", "tree": {"sha": "2e1f841be60665df9e5c61845fb49e93a6332c68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e1f841be60665df9e5c61845fb49e93a6332c68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9338dfa98964c0dac8fc082c3d9201807feced0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdnExqCRBK7hj4Ov3rIwAAdHIIAGsrviOjnKBQ9uhAOAqOKeAl\nLKRg7Rf0txSZvN5yFqZthJHxg/iWlLP5KC8mldMcTD6gG3h+Bw45IiYs9g9DykM/\nnTFY/qPp7K7ohbLHLrC8lQ7s4iu2REbcgY2L8XMf0RpuzA05kI3mBA6/oNylOhJa\n9YFHPcyECC453+6Hi5jZ/0/9JdWD0Pb38e4eyOKFpUIZHpC2tMbTsW5FH9lsI4ds\n3YFrkjmJZSuHtQC1IvrGBhzfIH+QK7iAFha1A0wOdHk/dswfa4rXet7NZTqT+FSV\nJRgqpsaW09RQrb4Vx/3PBkhUJdaPIqKafDfzMgjNZht0fY8cGy+K5Aob0ERxNls=\n=giCP\n-----END PGP SIGNATURE-----\n", "payload": "tree 2e1f841be60665df9e5c61845fb49e93a6332c68\nparent 523d7d2c8210b382146c76927e93f1cc8a6d31e2\nparent b4fe06bc17127b6007114a8ba8bf876fdef112e0\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1570524266 +0000\ncommitter GitHub <noreply@github.com> 1570524266 +0000\n\nMerge #1951\n\n1951: Lower the precedence of the `as` operator. r=matklad a=goffrie\n\nPreviously, the `as` operator was being parsed like a postfix expression, and\r\ntherefore being given the highest possible precedence. That caused it to bind\r\nmore tightly than prefix operators, which it should not. Instead, parse it\r\nsomewhat like a normal binary expression with some special-casing.\r\n\r\nFixes #1851.\n\nCo-authored-by: Geoffry Song <goffrie@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9338dfa98964c0dac8fc082c3d9201807feced0", "html_url": "https://github.com/rust-lang/rust/commit/d9338dfa98964c0dac8fc082c3d9201807feced0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9338dfa98964c0dac8fc082c3d9201807feced0/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "523d7d2c8210b382146c76927e93f1cc8a6d31e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/523d7d2c8210b382146c76927e93f1cc8a6d31e2", "html_url": "https://github.com/rust-lang/rust/commit/523d7d2c8210b382146c76927e93f1cc8a6d31e2"}, {"sha": "b4fe06bc17127b6007114a8ba8bf876fdef112e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4fe06bc17127b6007114a8ba8bf876fdef112e0", "html_url": "https://github.com/rust-lang/rust/commit/b4fe06bc17127b6007114a8ba8bf876fdef112e0"}], "stats": {"total": 161, "additions": 160, "deletions": 1}, "files": [{"sha": "45f2e3de47f0ec2637cdc381aa37454cf5a97b05", "filename": "crates/ra_parser/src/grammar/expressions.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d9338dfa98964c0dac8fc082c3d9201807feced0/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9338dfa98964c0dac8fc082c3d9201807feced0/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=d9338dfa98964c0dac8fc082c3d9201807feced0", "patch": "@@ -250,6 +250,7 @@ fn current_op(p: &Parser) -> (u8, SyntaxKind) {\n         T![!] if p.at(T![!=])  => (5,  T![!=]),\n         T![-] if p.at(T![-=])  => (1,  T![-=]),\n         T![-]                  => (10, T![-]),\n+        T![as]                 => (12, T![as]),\n \n         _                      => NOT_AN_OP\n     }\n@@ -278,6 +279,14 @@ fn expr_bp(p: &mut Parser, r: Restrictions, bp: u8) -> (Option<CompletedMarker>,\n         if op_bp < bp {\n             break;\n         }\n+        // test as_precedence\n+        // fn foo() {\n+        //     let _ = &1 as *const i32;\n+        // }\n+        if p.at(T![as]) {\n+            lhs = cast_expr(p, lhs);\n+            continue;\n+        }\n         let m = lhs.precede(p);\n         p.bump(op);\n \n@@ -344,6 +353,7 @@ fn lhs(p: &mut Parser, r: Restrictions) -> Option<(CompletedMarker, BlockLike)>\n             ));\n         }\n     };\n+    // parse the interior of the unary expression\n     expr_bp(p, r, 255);\n     Some((m.complete(p, kind), BlockLike::NotBlock))\n }\n@@ -378,7 +388,6 @@ fn postfix_expr(\n                 }\n             },\n             T![?] => try_expr(p, lhs),\n-            T![as] => cast_expr(p, lhs),\n             _ => break,\n         };\n         allow_calls = true;"}, {"sha": "a06dec1faf365192899577ac5efdedb4259fb0bf", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0146_as_precedence.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d9338dfa98964c0dac8fc082c3d9201807feced0/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0146_as_precedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9338dfa98964c0dac8fc082c3d9201807feced0/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0146_as_precedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0146_as_precedence.rs?ref=d9338dfa98964c0dac8fc082c3d9201807feced0", "patch": "@@ -0,0 +1,3 @@\n+fn foo() {\n+    let _ = &1 as *const i32;\n+}"}, {"sha": "9e3767fb75de4d68e3b11e248e3666fdb2a55502", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0146_as_precedence.txt", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/d9338dfa98964c0dac8fc082c3d9201807feced0/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0146_as_precedence.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d9338dfa98964c0dac8fc082c3d9201807feced0/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0146_as_precedence.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0146_as_precedence.txt?ref=d9338dfa98964c0dac8fc082c3d9201807feced0", "patch": "@@ -0,0 +1,43 @@\n+SOURCE_FILE@[0; 43)\n+  FN_DEF@[0; 42)\n+    FN_KW@[0; 2) \"fn\"\n+    WHITESPACE@[2; 3) \" \"\n+    NAME@[3; 6)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 8)\n+      L_PAREN@[6; 7) \"(\"\n+      R_PAREN@[7; 8) \")\"\n+    WHITESPACE@[8; 9) \" \"\n+    BLOCK_EXPR@[9; 42)\n+      BLOCK@[9; 42)\n+        L_CURLY@[9; 10) \"{\"\n+        WHITESPACE@[10; 15) \"\\n    \"\n+        LET_STMT@[15; 40)\n+          LET_KW@[15; 18) \"let\"\n+          WHITESPACE@[18; 19) \" \"\n+          PLACEHOLDER_PAT@[19; 20)\n+            UNDERSCORE@[19; 20) \"_\"\n+          WHITESPACE@[20; 21) \" \"\n+          EQ@[21; 22) \"=\"\n+          WHITESPACE@[22; 23) \" \"\n+          CAST_EXPR@[23; 39)\n+            REF_EXPR@[23; 25)\n+              AMP@[23; 24) \"&\"\n+              LITERAL@[24; 25)\n+                INT_NUMBER@[24; 25) \"1\"\n+            WHITESPACE@[25; 26) \" \"\n+            AS_KW@[26; 28) \"as\"\n+            WHITESPACE@[28; 29) \" \"\n+            POINTER_TYPE@[29; 39)\n+              STAR@[29; 30) \"*\"\n+              CONST_KW@[30; 35) \"const\"\n+              WHITESPACE@[35; 36) \" \"\n+              PATH_TYPE@[36; 39)\n+                PATH@[36; 39)\n+                  PATH_SEGMENT@[36; 39)\n+                    NAME_REF@[36; 39)\n+                      IDENT@[36; 39) \"i32\"\n+          SEMI@[39; 40) \";\"\n+        WHITESPACE@[40; 41) \"\\n\"\n+        R_CURLY@[41; 42) \"}\"\n+  WHITESPACE@[42; 43) \"\\n\""}, {"sha": "100fccc641cbd6fd64904be37217fc7ad4b4fa23", "filename": "crates/ra_syntax/test_data/parser/ok/0058_unary_expr_precedence.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d9338dfa98964c0dac8fc082c3d9201807feced0/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0058_unary_expr_precedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9338dfa98964c0dac8fc082c3d9201807feced0/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0058_unary_expr_precedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0058_unary_expr_precedence.rs?ref=d9338dfa98964c0dac8fc082c3d9201807feced0", "patch": "@@ -0,0 +1,7 @@\n+fn foo() {\n+    1 + *&2 + 3;\n+    *&1 as u64;\n+    *x(1);\n+    &x[1];\n+    -1..2;\n+}"}, {"sha": "d30cb63ffaaf7093bd8e5f669e4d2c743b6ec3da", "filename": "crates/ra_syntax/test_data/parser/ok/0058_unary_expr_precedence.txt", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/rust-lang/rust/blob/d9338dfa98964c0dac8fc082c3d9201807feced0/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0058_unary_expr_precedence.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d9338dfa98964c0dac8fc082c3d9201807feced0/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0058_unary_expr_precedence.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0058_unary_expr_precedence.txt?ref=d9338dfa98964c0dac8fc082c3d9201807feced0", "patch": "@@ -0,0 +1,97 @@\n+SOURCE_FILE@[0; 79)\n+  FN_DEF@[0; 78)\n+    FN_KW@[0; 2) \"fn\"\n+    WHITESPACE@[2; 3) \" \"\n+    NAME@[3; 6)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 8)\n+      L_PAREN@[6; 7) \"(\"\n+      R_PAREN@[7; 8) \")\"\n+    WHITESPACE@[8; 9) \" \"\n+    BLOCK_EXPR@[9; 78)\n+      BLOCK@[9; 78)\n+        L_CURLY@[9; 10) \"{\"\n+        WHITESPACE@[10; 15) \"\\n    \"\n+        EXPR_STMT@[15; 27)\n+          BIN_EXPR@[15; 26)\n+            BIN_EXPR@[15; 22)\n+              LITERAL@[15; 16)\n+                INT_NUMBER@[15; 16) \"1\"\n+              WHITESPACE@[16; 17) \" \"\n+              PLUS@[17; 18) \"+\"\n+              WHITESPACE@[18; 19) \" \"\n+              PREFIX_EXPR@[19; 22)\n+                STAR@[19; 20) \"*\"\n+                REF_EXPR@[20; 22)\n+                  AMP@[20; 21) \"&\"\n+                  LITERAL@[21; 22)\n+                    INT_NUMBER@[21; 22) \"2\"\n+            WHITESPACE@[22; 23) \" \"\n+            PLUS@[23; 24) \"+\"\n+            WHITESPACE@[24; 25) \" \"\n+            LITERAL@[25; 26)\n+              INT_NUMBER@[25; 26) \"3\"\n+          SEMI@[26; 27) \";\"\n+        WHITESPACE@[27; 32) \"\\n    \"\n+        EXPR_STMT@[32; 43)\n+          CAST_EXPR@[32; 42)\n+            PREFIX_EXPR@[32; 35)\n+              STAR@[32; 33) \"*\"\n+              REF_EXPR@[33; 35)\n+                AMP@[33; 34) \"&\"\n+                LITERAL@[34; 35)\n+                  INT_NUMBER@[34; 35) \"1\"\n+            WHITESPACE@[35; 36) \" \"\n+            AS_KW@[36; 38) \"as\"\n+            WHITESPACE@[38; 39) \" \"\n+            PATH_TYPE@[39; 42)\n+              PATH@[39; 42)\n+                PATH_SEGMENT@[39; 42)\n+                  NAME_REF@[39; 42)\n+                    IDENT@[39; 42) \"u64\"\n+          SEMI@[42; 43) \";\"\n+        WHITESPACE@[43; 48) \"\\n    \"\n+        EXPR_STMT@[48; 54)\n+          PREFIX_EXPR@[48; 53)\n+            STAR@[48; 49) \"*\"\n+            CALL_EXPR@[49; 53)\n+              PATH_EXPR@[49; 50)\n+                PATH@[49; 50)\n+                  PATH_SEGMENT@[49; 50)\n+                    NAME_REF@[49; 50)\n+                      IDENT@[49; 50) \"x\"\n+              ARG_LIST@[50; 53)\n+                L_PAREN@[50; 51) \"(\"\n+                LITERAL@[51; 52)\n+                  INT_NUMBER@[51; 52) \"1\"\n+                R_PAREN@[52; 53) \")\"\n+          SEMI@[53; 54) \";\"\n+        WHITESPACE@[54; 59) \"\\n    \"\n+        EXPR_STMT@[59; 65)\n+          REF_EXPR@[59; 64)\n+            AMP@[59; 60) \"&\"\n+            INDEX_EXPR@[60; 64)\n+              PATH_EXPR@[60; 61)\n+                PATH@[60; 61)\n+                  PATH_SEGMENT@[60; 61)\n+                    NAME_REF@[60; 61)\n+                      IDENT@[60; 61) \"x\"\n+              L_BRACK@[61; 62) \"[\"\n+              LITERAL@[62; 63)\n+                INT_NUMBER@[62; 63) \"1\"\n+              R_BRACK@[63; 64) \"]\"\n+          SEMI@[64; 65) \";\"\n+        WHITESPACE@[65; 70) \"\\n    \"\n+        EXPR_STMT@[70; 76)\n+          RANGE_EXPR@[70; 75)\n+            PREFIX_EXPR@[70; 72)\n+              MINUS@[70; 71) \"-\"\n+              LITERAL@[71; 72)\n+                INT_NUMBER@[71; 72) \"1\"\n+            DOTDOT@[72; 74) \"..\"\n+            LITERAL@[74; 75)\n+              INT_NUMBER@[74; 75) \"2\"\n+          SEMI@[75; 76) \";\"\n+        WHITESPACE@[76; 77) \"\\n\"\n+        R_CURLY@[77; 78) \"}\"\n+  WHITESPACE@[78; 79) \"\\n\""}]}