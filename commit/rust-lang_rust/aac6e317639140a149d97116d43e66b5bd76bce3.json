{"sha": "aac6e317639140a149d97116d43e66b5bd76bce3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhYzZlMzE3NjM5MTQwYTE0OWQ5NzExNmQ0M2U2NmI1YmQ3NmJjZTM=", "commit": {"author": {"name": "lpy", "email": "pylaurent1314@gmail.com", "date": "2014-03-11T13:39:26Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-03-12T22:01:25Z"}, "message": "Remove remaining nolink usages.(fixes #12810)", "tree": {"sha": "f7bd05b43666799c19e197c311a9173ff836926c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7bd05b43666799c19e197c311a9173ff836926c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aac6e317639140a149d97116d43e66b5bd76bce3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aac6e317639140a149d97116d43e66b5bd76bce3", "html_url": "https://github.com/rust-lang/rust/commit/aac6e317639140a149d97116d43e66b5bd76bce3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aac6e317639140a149d97116d43e66b5bd76bce3/comments", "author": {"login": "lpy", "id": 1453861, "node_id": "MDQ6VXNlcjE0NTM4NjE=", "avatar_url": "https://avatars.githubusercontent.com/u/1453861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lpy", "html_url": "https://github.com/lpy", "followers_url": "https://api.github.com/users/lpy/followers", "following_url": "https://api.github.com/users/lpy/following{/other_user}", "gists_url": "https://api.github.com/users/lpy/gists{/gist_id}", "starred_url": "https://api.github.com/users/lpy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lpy/subscriptions", "organizations_url": "https://api.github.com/users/lpy/orgs", "repos_url": "https://api.github.com/users/lpy/repos", "events_url": "https://api.github.com/users/lpy/events{/privacy}", "received_events_url": "https://api.github.com/users/lpy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9959188d0e653871b4995a25ce066dbf0726f132", "url": "https://api.github.com/repos/rust-lang/rust/commits/9959188d0e653871b4995a25ce066dbf0726f132", "html_url": "https://github.com/rust-lang/rust/commit/9959188d0e653871b4995a25ce066dbf0726f132"}], "stats": {"total": 45, "additions": 1, "deletions": 44}, "files": [{"sha": "9e2b934d0abc4ab9080229a7db1d4bba2dfb7d68", "filename": "src/doc/rust.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Fdoc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Fdoc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frust.md?ref=aac6e317639140a149d97116d43e66b5bd76bce3", "patch": "@@ -1472,7 +1472,6 @@ and are instead terminated by a semicolon.\n \n ~~~~\n # use std::libc::{c_char, FILE};\n-# #[nolink]\n \n extern {\n     fn fopen(filename: *c_char, mode: *c_char) -> *FILE;"}, {"sha": "8f4f9259ab7ac9269e6e77d6172f5ba529038b55", "filename": "src/libnative/io/file_win32.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Flibnative%2Fio%2Ffile_win32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Flibnative%2Fio%2Ffile_win32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Ffile_win32.rs?ref=aac6e317639140a149d97116d43e66b5bd76bce3", "patch": "@@ -335,7 +335,6 @@ pub fn readdir(p: &CString) -> IoResult<~[Path]> {\n         }).map(|path| root.join(path)).collect()\n     }\n \n-    #[nolink]\n     extern {\n         fn rust_list_dir_wfd_size() -> libc::size_t;\n         fn rust_list_dir_wfd_fp_buf(wfd: *libc::c_void) -> *u16;"}, {"sha": "3e3a94f7f0f66472badc76cef9be48d09d1fc0b9", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=aac6e317639140a149d97116d43e66b5bd76bce3", "patch": "@@ -979,7 +979,7 @@ static other_attrs: &'static [&'static str] = &[\n     \"macro_export\", \"must_use\",\n \n     //mod-level\n-    \"path\", \"link_name\", \"link_args\", \"nolink\", \"macro_escape\", \"no_implicit_prelude\",\n+    \"path\", \"link_name\", \"link_args\", \"macro_escape\", \"no_implicit_prelude\",\n \n     // fn-level\n     \"test\", \"bench\", \"should_fail\", \"ignore\", \"inline\", \"lang\", \"main\", \"start\","}, {"sha": "73d52654ebf33d0ffb44ef99b03abffc9a78e395", "filename": "src/libstd/io/test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Flibstd%2Fio%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Flibstd%2Fio%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Ftest.rs?ref=aac6e317639140a149d97116d43e66b5bd76bce3", "patch": "@@ -150,7 +150,6 @@ mod darwin_fd_limit {\n         rlim_cur: rlim_t,\n         rlim_max: rlim_t\n     }\n-    #[nolink]\n     extern {\n         // name probably doesn't need to be mut, but the C function doesn't specify const\n         fn sysctl(name: *mut libc::c_int, namelen: libc::c_uint,"}, {"sha": "c602c2fc27f8e5da236bb5f57a5cea9a3d49746d", "filename": "src/libstd/libc.rs", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Flibstd%2Flibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Flibstd%2Flibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flibc.rs?ref=aac6e317639140a149d97116d43e66b5bd76bce3", "patch": "@@ -3306,7 +3306,6 @@ pub mod funcs {\n     // or anything. The same is not true of POSIX.\n \n     pub mod c95 {\n-        #[nolink]\n         pub mod ctype {\n             use libc::types::os::arch::c95::{c_char, c_int};\n \n@@ -3327,7 +3326,6 @@ pub mod funcs {\n             }\n         }\n \n-        #[nolink]\n         pub mod stdio {\n             use libc::types::common::c95::{FILE, c_void, fpos_t};\n             use libc::types::os::arch::c95::{c_char, c_int, c_long, size_t};\n@@ -3383,7 +3381,6 @@ pub mod funcs {\n             }\n         }\n \n-        #[nolink]\n         pub mod stdlib {\n             use libc::types::common::c95::c_void;\n             use libc::types::os::arch::c95::{c_char, c_double, c_int};\n@@ -3416,7 +3413,6 @@ pub mod funcs {\n             }\n         }\n \n-        #[nolink]\n         pub mod string {\n             use libc::types::common::c95::c_void;\n             use libc::types::os::arch::c95::{c_char, c_int, size_t};\n@@ -3461,7 +3457,6 @@ pub mod funcs {\n \n     #[cfg(target_os = \"win32\")]\n     pub mod posix88 {\n-        #[nolink]\n         pub mod stat_ {\n             use libc::types::os::common::posix01::{stat, utimbuf};\n             use libc::types::os::arch::c95::{c_int, c_char, wchar_t};\n@@ -3486,7 +3481,6 @@ pub mod funcs {\n             }\n         }\n \n-        #[nolink]\n         pub mod stdio {\n             use libc::types::common::c95::FILE;\n             use libc::types::os::arch::c95::{c_int, c_char};\n@@ -3503,7 +3497,6 @@ pub mod funcs {\n             }\n         }\n \n-        #[nolink]\n         pub mod fcntl {\n             use libc::types::os::arch::c95::{c_int, c_char, wchar_t};\n             extern {\n@@ -3518,12 +3511,10 @@ pub mod funcs {\n             }\n         }\n \n-        #[nolink]\n         pub mod dirent {\n             // Not supplied at all.\n         }\n \n-        #[nolink]\n         pub mod unistd {\n             use libc::types::common::c95::c_void;\n             use libc::types::os::arch::c95::{c_int, c_uint, c_char,\n@@ -3590,7 +3581,6 @@ pub mod funcs {\n             use libc::types::os::arch::posix01::stat;\n             use libc::types::os::arch::posix88::mode_t;\n \n-            #[nolink]\n             extern {\n                 pub fn chmod(path: *c_char, mode: mode_t) -> c_int;\n                 pub fn fchmod(fd: c_int, mode: mode_t) -> c_int;\n@@ -3618,7 +3608,6 @@ pub mod funcs {\n             }\n         }\n \n-        #[nolink]\n         pub mod stdio {\n             use libc::types::common::c95::FILE;\n             use libc::types::os::arch::c95::{c_char, c_int};\n@@ -3631,7 +3620,6 @@ pub mod funcs {\n             }\n         }\n \n-        #[nolink]\n         pub mod fcntl {\n             use libc::types::os::arch::c95::{c_char, c_int};\n             use libc::types::os::arch::posix88::mode_t;\n@@ -3644,7 +3632,6 @@ pub mod funcs {\n             }\n         }\n \n-        #[nolink]\n         pub mod dirent {\n             use libc::types::common::posix88::{DIR, dirent_t};\n             use libc::types::os::arch::c95::{c_char, c_int, c_long};\n@@ -3678,7 +3665,6 @@ pub mod funcs {\n             }\n         }\n \n-        #[nolink]\n         pub mod unistd {\n             use libc::types::common::c95::c_void;\n             use libc::types::os::arch::c95::{c_char, c_int, c_long, c_uint};\n@@ -3748,7 +3734,6 @@ pub mod funcs {\n             }\n         }\n \n-        #[nolink]\n         pub mod signal {\n             use libc::types::os::arch::c95::{c_int};\n             use libc::types::os::arch::posix88::{pid_t};\n@@ -3758,7 +3743,6 @@ pub mod funcs {\n             }\n         }\n \n-        #[nolink]\n         pub mod mman {\n             use libc::types::common::c95::{c_void};\n             use libc::types::os::arch::c95::{size_t, c_int, c_char};\n@@ -3796,7 +3780,6 @@ pub mod funcs {\n     #[cfg(target_os = \"macos\")]\n     #[cfg(target_os = \"freebsd\")]\n     pub mod posix01 {\n-        #[nolink]\n         pub mod stat_ {\n             use libc::types::os::arch::c95::{c_char, c_int};\n             use libc::types::os::arch::posix01::stat;\n@@ -3813,7 +3796,6 @@ pub mod funcs {\n             }\n         }\n \n-        #[nolink]\n         pub mod unistd {\n             use libc::types::os::arch::c95::{c_char, c_int, size_t};\n             use libc::types::os::arch::posix88::{ssize_t, off_t};\n@@ -3841,7 +3823,6 @@ pub mod funcs {\n             }\n         }\n \n-        #[nolink]\n         pub mod wait {\n             use libc::types::os::arch::c95::{c_int};\n             use libc::types::os::arch::posix88::{pid_t};\n@@ -3852,7 +3833,6 @@ pub mod funcs {\n             }\n         }\n \n-        #[nolink]\n         pub mod glob {\n             use libc::types::os::arch::c95::{c_char, c_int};\n             use libc::types::os::common::posix01::{glob_t};\n@@ -3867,7 +3847,6 @@ pub mod funcs {\n             }\n         }\n \n-        #[nolink]\n         pub mod mman {\n             use libc::types::common::c95::{c_void};\n             use libc::types::os::arch::c95::{c_int, size_t};\n@@ -4032,7 +4011,6 @@ pub mod funcs {\n     }\n \n     #[cfg(target_os = \"macos\")]\n-    #[nolink]\n     pub mod extra {\n         use libc::types::os::arch::c95::{c_char, c_int};\n \n@@ -4256,7 +4234,6 @@ pub mod funcs {\n             use libc::types::os::arch::c95::{c_int, c_long};\n             use libc::types::os::arch::c99::intptr_t;\n \n-            #[nolink]\n             extern {\n                 #[link_name = \"_commit\"]\n                 pub fn commit(fd: c_int) -> c_int;"}, {"sha": "3a86aa3d6b68943860a30c8480a9e8a2d3d661fa", "filename": "src/libstd/os.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=aac6e317639140a149d97116d43e66b5bd76bce3", "patch": "@@ -615,7 +615,6 @@ pub fn errno() -> int {\n     #[cfg(target_os = \"macos\")]\n     #[cfg(target_os = \"freebsd\")]\n     fn errno_location() -> *c_int {\n-        #[nolink]\n         extern {\n             fn __error() -> *c_int;\n         }\n@@ -627,7 +626,6 @@ pub fn errno() -> int {\n     #[cfg(target_os = \"linux\")]\n     #[cfg(target_os = \"android\")]\n     fn errno_location() -> *c_int {\n-        #[nolink]\n         extern {\n             fn __errno_location() -> *c_int;\n         }\n@@ -665,7 +663,6 @@ pub fn last_os_error() -> ~str {\n         #[cfg(target_os = \"freebsd\")]\n         fn strerror_r(errnum: c_int, buf: *mut c_char, buflen: libc::size_t)\n                       -> c_int {\n-            #[nolink]\n             extern {\n                 fn strerror_r(errnum: c_int, buf: *mut c_char,\n                               buflen: libc::size_t) -> c_int;\n@@ -681,7 +678,6 @@ pub fn last_os_error() -> ~str {\n         #[cfg(target_os = \"linux\")]\n         fn strerror_r(errnum: c_int, buf: *mut c_char,\n                       buflen: libc::size_t) -> c_int {\n-            #[nolink]\n             extern {\n                 fn __xpg_strerror_r(errnum: c_int,\n                                     buf: *mut c_char,"}, {"sha": "44b6ecdee7073a6f5a2129dcc058b413ac75bc1a", "filename": "src/test/compile-fail/attrs-after-extern-mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Ftest%2Fcompile-fail%2Fattrs-after-extern-mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Ftest%2Fcompile-fail%2Fattrs-after-extern-mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fattrs-after-extern-mod.rs?ref=aac6e317639140a149d97116d43e66b5bd76bce3", "patch": "@@ -14,7 +14,6 @@\n \n use std::libc;\n \n-#[nolink]\n extern {\n     static mut rust_dbg_static_mut: libc::c_int;\n     pub fn rust_dbg_static_mut_check_four();"}, {"sha": "0a1b78c8d5d0afed5f68fb7c11ac1546944eda3a", "filename": "src/test/compile-fail/lint-ctypes.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Ftest%2Fcompile-fail%2Flint-ctypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Ftest%2Fcompile-fail%2Flint-ctypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-ctypes.rs?ref=aac6e317639140a149d97116d43e66b5bd76bce3", "patch": "@@ -12,7 +12,6 @@\n \n use std::libc;\n \n-#[nolink]\n extern {\n     pub fn bare_type1(size: int); //~ ERROR: found rust type\n     pub fn bare_type2(size: uint); //~ ERROR: found rust type"}, {"sha": "de929b8bfc923747b644c2b481520c6d46a5b2a4", "filename": "src/test/compile-fail/nolink-with-link-args.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Ftest%2Fcompile-fail%2Fnolink-with-link-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Ftest%2Fcompile-fail%2Fnolink-with-link-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnolink-with-link-args.rs?ref=aac6e317639140a149d97116d43e66b5bd76bce3", "patch": "@@ -17,7 +17,6 @@ the compiler output. */\n #[feature(link_args)];\n \n #[link_args = \"aFdEfSeVEEE\"]\n-#[nolink]\n extern {}\n \n fn main() { }"}, {"sha": "9a02768faebe16758370daf62205ed0a8890c8bc", "filename": "src/test/run-pass/c-stack-returning-int64.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Ftest%2Frun-pass%2Fc-stack-returning-int64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Ftest%2Frun-pass%2Fc-stack-returning-int64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fc-stack-returning-int64.rs?ref=aac6e317639140a149d97116d43e66b5bd76bce3", "patch": "@@ -11,7 +11,6 @@\n mod libc {\n     use std::libc::{c_char, c_long, c_longlong};\n \n-    #[nolink]\n     extern {\n         pub fn atol(x: *c_char) -> c_long;\n         pub fn atoll(x: *c_char) -> c_longlong;"}, {"sha": "7e480f1c32b50f0598ee62365fddd697ffa4d688", "filename": "src/test/run-pass/foreign-fn-linkname.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Ftest%2Frun-pass%2Fforeign-fn-linkname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Ftest%2Frun-pass%2Fforeign-fn-linkname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fforeign-fn-linkname.rs?ref=aac6e317639140a149d97116d43e66b5bd76bce3", "patch": "@@ -13,7 +13,6 @@ extern crate extra;\n mod libc {\n     use std::libc::{c_char, size_t};\n \n-    #[nolink]\n     extern {\n         #[link_name = \"strlen\"]\n         pub fn my_strlen(str: *c_char) -> size_t;"}, {"sha": "2f58765394131c916eef0980f2efc287c00286c3", "filename": "src/test/run-pass/foreign-mod-unused-const.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Ftest%2Frun-pass%2Fforeign-mod-unused-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Ftest%2Frun-pass%2Fforeign-mod-unused-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fforeign-mod-unused-const.rs?ref=aac6e317639140a149d97116d43e66b5bd76bce3", "patch": "@@ -11,7 +11,6 @@\n mod foo {\n     use std::libc::c_int;\n \n-    #[nolink]\n     extern {\n         pub static errno: c_int;\n     }"}, {"sha": "e242071fb26bc42d37f21749da066166631b55ab", "filename": "src/test/run-pass/foreign-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Ftest%2Frun-pass%2Fforeign-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Ftest%2Frun-pass%2Fforeign-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fforeign-struct.rs?ref=aac6e317639140a149d97116d43e66b5bd76bce3", "patch": "@@ -15,7 +15,6 @@ pub enum void { }\n mod bindgen {\n     use super::void;\n \n-    #[nolink]\n     extern {\n         pub fn printf(v: void);\n     }"}, {"sha": "7c9d2dfa87cd1a4ae7ac21815bae48cafa425c99", "filename": "src/test/run-pass/foreign2.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Ftest%2Frun-pass%2Fforeign2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Ftest%2Frun-pass%2Fforeign2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fforeign2.rs?ref=aac6e317639140a149d97116d43e66b5bd76bce3", "patch": "@@ -9,26 +9,22 @@\n // except according to those terms.\n \n mod bar {\n-    #[nolink]\n     extern {}\n }\n \n mod zed {\n-    #[nolink]\n     extern {}\n }\n \n mod libc {\n     use std::libc::{c_int, c_void, size_t, ssize_t};\n \n-    #[nolink]\n     extern {\n         pub fn write(fd: c_int, buf: *c_void, count: size_t) -> ssize_t;\n     }\n }\n \n mod baz {\n-    #[nolink]\n     extern {}\n }\n "}, {"sha": "e23c970e29a582baa3e827fee9ebc3225edaa692", "filename": "src/test/run-pass/nil-decl-in-foreign.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Ftest%2Frun-pass%2Fnil-decl-in-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Ftest%2Frun-pass%2Fnil-decl-in-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnil-decl-in-foreign.rs?ref=aac6e317639140a149d97116d43e66b5bd76bce3", "patch": "@@ -10,7 +10,6 @@\n \n // Issue #901\n mod libc {\n-    #[nolink]\n     extern {\n         pub fn printf(x: ());\n     }"}, {"sha": "30ce77153116fb70f54f8bca95621966427ddff0", "filename": "src/test/run-pass/warn-ctypes-inhibit.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Ftest%2Frun-pass%2Fwarn-ctypes-inhibit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aac6e317639140a149d97116d43e66b5bd76bce3/src%2Ftest%2Frun-pass%2Fwarn-ctypes-inhibit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fwarn-ctypes-inhibit.rs?ref=aac6e317639140a149d97116d43e66b5bd76bce3", "patch": "@@ -13,7 +13,6 @@\n #[allow(ctypes)];\n \n mod libc {\n-    #[nolink]\n     extern {\n         pub fn malloc(size: int) -> *u8;\n     }"}]}