{"sha": "fb86b820bbde7772477a95e36a70f06578313de2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiODZiODIwYmJkZTc3NzI0NzdhOTVlMzZhNzBmMDY1NzgzMTNkZTI=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-01-20T05:44:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-20T05:44:48Z"}, "message": "Rollup merge of #68353 - Centril:code-liberation, r=petrochenkov\n\nRemove `rustc_error_codes` deps except in `rustc_driver`\n\nRemove dependencies on `rustc_error_codes` in all crates except for `rustc_driver`.\n\nThis has some benefits:\n\n1. Adding a new error code when hacking on the compiler only requires rebuilding at most `rustc_error_codes`, `rustc_driver`, and the reflexive & transitive closure of the crate where the new error code is being added and its reverse dependencies. This improves time-to-UI-tests (TTUT).\n\n2. Adding an error description to an error code only requires rebuilding `rustc_error_codes` and `rustc_driver`. This should substantially improve TTUT.\n\nr? @petrochenkov\ncc @rust-lang/wg-diagnostics", "tree": {"sha": "aecae88a60a7143ef11367d80b79465936182659", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aecae88a60a7143ef11367d80b79465936182659"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb86b820bbde7772477a95e36a70f06578313de2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeJT5QCRBK7hj4Ov3rIwAAdHIIAE+7Xkc8CZLUgKhIp0P6HNNi\ns8LWeSXcBVGIkiAk1938Cop9pU3yXCIg0sMQVsKWmsPXm0pl/XgAp9JlpKcWj63A\nsI9/wWjoPSMBsaIgryLFpOvF9IkWRXRInao+84lyiGeGWPwI5ld/VGlZMaAhQeSS\nrZBM9nWHlYZOFReHk705rL/efjUH9U7TpTBWDP8iu/gamcS8wtMPFdCq0L3WSJ7t\nTH6NRo22l0pA0yZJym7YwZPx/1twdVrdp6JtwIzOzOCJrVoBLFDiHeijw6T4/nJz\n3vJTdcSg2X63GuDD+/DvVhMHpT4QSxFw23NaXInfA/SIeyTrpmbux2B0UAspR1M=\n=q6O6\n-----END PGP SIGNATURE-----\n", "payload": "tree aecae88a60a7143ef11367d80b79465936182659\nparent 5d8edc99aabf5c69304b217daabf41b6bd813a41\nparent de6046fa0ff6e57afa50174c001d1668ee7f3cf6\nauthor Dylan DPC <dylan.dpc@gmail.com> 1579499088 +0530\ncommitter GitHub <noreply@github.com> 1579499088 +0530\n\nRollup merge of #68353 - Centril:code-liberation, r=petrochenkov\n\nRemove `rustc_error_codes` deps except in `rustc_driver`\n\nRemove dependencies on `rustc_error_codes` in all crates except for `rustc_driver`.\n\nThis has some benefits:\n\n1. Adding a new error code when hacking on the compiler only requires rebuilding at most `rustc_error_codes`, `rustc_driver`, and the reflexive & transitive closure of the crate where the new error code is being added and its reverse dependencies. This improves time-to-UI-tests (TTUT).\n\n2. Adding an error description to an error code only requires rebuilding `rustc_error_codes` and `rustc_driver`. This should substantially improve TTUT.\n\nr? @petrochenkov\ncc @rust-lang/wg-diagnostics\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb86b820bbde7772477a95e36a70f06578313de2", "html_url": "https://github.com/rust-lang/rust/commit/fb86b820bbde7772477a95e36a70f06578313de2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb86b820bbde7772477a95e36a70f06578313de2/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d8edc99aabf5c69304b217daabf41b6bd813a41", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d8edc99aabf5c69304b217daabf41b6bd813a41", "html_url": "https://github.com/rust-lang/rust/commit/5d8edc99aabf5c69304b217daabf41b6bd813a41"}, {"sha": "de6046fa0ff6e57afa50174c001d1668ee7f3cf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/de6046fa0ff6e57afa50174c001d1668ee7f3cf6", "html_url": "https://github.com/rust-lang/rust/commit/de6046fa0ff6e57afa50174c001d1668ee7f3cf6"}], "stats": {"total": 197, "additions": 3, "deletions": 194}, "files": [{"sha": "48bc269ebb65414f51c165ce1feb4aac1d6f5e75", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -3092,7 +3092,6 @@ dependencies = [\n  \"rustc-rayon-core\",\n  \"rustc_apfloat\",\n  \"rustc_data_structures\",\n- \"rustc_error_codes\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n  \"rustc_hir\",\n@@ -3358,7 +3357,6 @@ dependencies = [\n  \"log\",\n  \"rustc\",\n  \"rustc_data_structures\",\n- \"rustc_error_codes\",\n  \"rustc_errors\",\n  \"rustc_hir\",\n  \"rustc_index\",\n@@ -3375,7 +3373,6 @@ version = \"0.0.0\"\n dependencies = [\n  \"log\",\n  \"rustc_data_structures\",\n- \"rustc_error_codes\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n  \"rustc_parse\",\n@@ -3391,7 +3388,6 @@ dependencies = [\n  \"fmt_macros\",\n  \"log\",\n  \"rustc_data_structures\",\n- \"rustc_error_codes\",\n  \"rustc_errors\",\n  \"rustc_expand\",\n  \"rustc_feature\",\n@@ -3445,7 +3441,6 @@ dependencies = [\n  \"rustc_apfloat\",\n  \"rustc_codegen_utils\",\n  \"rustc_data_structures\",\n- \"rustc_error_codes\",\n  \"rustc_errors\",\n  \"rustc_fs_util\",\n  \"rustc_hir\",\n@@ -3675,7 +3670,6 @@ dependencies = [\n  \"log\",\n  \"rustc\",\n  \"rustc_data_structures\",\n- \"rustc_error_codes\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n  \"rustc_hir\",\n@@ -3716,7 +3710,6 @@ dependencies = [\n  \"memmap\",\n  \"rustc\",\n  \"rustc_data_structures\",\n- \"rustc_error_codes\",\n  \"rustc_errors\",\n  \"rustc_expand\",\n  \"rustc_hir\",\n@@ -3744,7 +3737,6 @@ dependencies = [\n  \"rustc\",\n  \"rustc_apfloat\",\n  \"rustc_data_structures\",\n- \"rustc_error_codes\",\n  \"rustc_errors\",\n  \"rustc_hir\",\n  \"rustc_index\",\n@@ -3767,7 +3759,6 @@ dependencies = [\n  \"rustc\",\n  \"rustc_apfloat\",\n  \"rustc_data_structures\",\n- \"rustc_error_codes\",\n  \"rustc_errors\",\n  \"rustc_hir\",\n  \"rustc_index\",\n@@ -3786,7 +3777,6 @@ dependencies = [\n  \"bitflags\",\n  \"log\",\n  \"rustc_data_structures\",\n- \"rustc_error_codes\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n  \"rustc_lexer\",\n@@ -3804,7 +3794,6 @@ dependencies = [\n  \"log\",\n  \"rustc\",\n  \"rustc_data_structures\",\n- \"rustc_error_codes\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n  \"rustc_hir\",\n@@ -3820,7 +3809,6 @@ name = \"rustc_plugin_impl\"\n version = \"0.0.0\"\n dependencies = [\n  \"rustc\",\n- \"rustc_error_codes\",\n  \"rustc_errors\",\n  \"rustc_hir\",\n  \"rustc_lint\",\n@@ -3836,7 +3824,6 @@ dependencies = [\n  \"log\",\n  \"rustc\",\n  \"rustc_data_structures\",\n- \"rustc_error_codes\",\n  \"rustc_errors\",\n  \"rustc_hir\",\n  \"rustc_span\",\n@@ -3854,7 +3841,6 @@ dependencies = [\n  \"rustc\",\n  \"rustc_ast_lowering\",\n  \"rustc_data_structures\",\n- \"rustc_error_codes\",\n  \"rustc_errors\",\n  \"rustc_expand\",\n  \"rustc_feature\",\n@@ -3890,7 +3876,6 @@ dependencies = [\n  \"log\",\n  \"num_cpus\",\n  \"rustc_data_structures\",\n- \"rustc_error_codes\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n  \"rustc_fs_util\",\n@@ -3973,7 +3958,6 @@ dependencies = [\n  \"log\",\n  \"rustc\",\n  \"rustc_data_structures\",\n- \"rustc_error_codes\",\n  \"rustc_errors\",\n  \"rustc_hir\",\n  \"rustc_index\",\n@@ -4493,7 +4477,6 @@ version = \"0.0.0\"\n dependencies = [\n  \"log\",\n  \"rustc_data_structures\",\n- \"rustc_error_codes\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n  \"rustc_index\","}, {"sha": "b65635be54a3f1a3f6d54634a5ebd9518b145d12", "filename": "src/librustc/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2FCargo.toml?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -37,5 +37,4 @@ byteorder = { version = \"1.3\" }\n chalk-engine = { version = \"0.9.0\", default-features=false }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n measureme = \"0.7.1\"\n-rustc_error_codes = { path = \"../librustc_error_codes\" }\n rustc_session = { path = \"../librustc_session\" }"}, {"sha": "86eab3d92d366466c408fc5d8f2e00bbe3cf8998", "filename": "src/librustc/hir/check_attr.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fcheck_attr.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -8,7 +8,6 @@ use crate::hir::map::Map;\n use crate::ty::query::Providers;\n use crate::ty::TyCtxt;\n \n-use rustc_error_codes::*;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;"}, {"sha": "77182b97fd450231634011c9609971e7d6a38c53", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -65,7 +65,6 @@ use crate::ty::{\n     Region, Ty, TyCtxt, TypeFoldable,\n };\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n-use rustc_error_codes::*;\n use rustc_errors::{pluralize, struct_span_err};\n use rustc_errors::{Applicability, DiagnosticBuilder, DiagnosticStyledString};\n use rustc_hir as hir;"}, {"sha": "9947dea2340964b2c8847a1530c96c5b4717e44d", "filename": "src/librustc/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -13,8 +13,6 @@ use rustc_span::symbol::kw;\n use rustc_span::Span;\n use std::borrow::Cow;\n \n-use rustc_error_codes::*;\n-\n struct FindLocalByTypeVisitor<'a, 'tcx> {\n     infcx: &'a InferCtxt<'a, 'tcx>,\n     target_ty: Ty<'tcx>,"}, {"sha": "8f4c643992001d7ed01ba8747a065e4574fe35a6", "filename": "src/librustc/infer/error_reporting/nice_region_error/different_lifetimes.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fdifferent_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fdifferent_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fdifferent_lifetimes.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -5,7 +5,6 @@ use crate::infer::error_reporting::nice_region_error::util::AnonymousParamInfo;\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::util::common::ErrorReported;\n \n-use rustc_error_codes::*;\n use rustc_errors::struct_span_err;\n \n impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {"}, {"sha": "df37f53606b37ab8e60e03801773324e51590693", "filename": "src/librustc/infer/error_reporting/nice_region_error/named_anon_conflict.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -5,8 +5,6 @@ use crate::ty;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir::{FunctionRetTy, TyKind};\n \n-use rustc_error_codes::*;\n-\n impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n     /// When given a `ConcreteFailure` for a function with parameters containing a named region and\n     /// an anonymous region, emit an descriptive diagnostic error."}, {"sha": "11dda71b8cb89c9de2bb757b7b5441c5dd972ff3", "filename": "src/librustc/infer/error_reporting/note.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnote.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -5,8 +5,6 @@ use crate::ty::error::TypeError;\n use crate::ty::{self, Region};\n use rustc_errors::{struct_span_err, DiagnosticBuilder};\n \n-use rustc_error_codes::*;\n-\n impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n     pub(super) fn note_region_origin(\n         &self,"}, {"sha": "fe3a5d149f676264616c8886017e2e3f0a45d6a6", "filename": "src/librustc/infer/opaque_types/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Finfer%2Fopaque_types%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Finfer%2Fopaque_types%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fopaque_types%2Fmod.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -15,8 +15,6 @@ use rustc_hir::def_id::{DefId, DefIdMap};\n use rustc_hir::Node;\n use rustc_span::Span;\n \n-use rustc_error_codes::*;\n-\n pub type OpaqueTypeMap<'tcx> = DefIdMap<OpaqueTypeDecl<'tcx>>;\n \n /// Information about the opaque types whose values we"}, {"sha": "27b769742a9fcf34e3ba48b993e469eca38bc7e2", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -24,8 +24,6 @@ use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use syntax::ast;\n \n-use rustc_error_codes::*;\n-\n // The actual lang items defined come at the end of this file in one handy table.\n // So you probably just want to nip down to the end.\n macro_rules! language_item_table {"}, {"sha": "5571f8f2313d56f0d8e0dae37ed41527bfa52847", "filename": "src/librustc/middle/weak_lang_items.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -15,8 +15,6 @@ use rustc_span::Span;\n use rustc_target::spec::PanicStrategy;\n use syntax::ast;\n \n-use rustc_error_codes::*;\n-\n macro_rules! weak_lang_items {\n     ($($name:ident, $item:ident, $sym:ident;)*) => (\n "}, {"sha": "349dbd74ad1c9a271f3e0509e90470d56582ab63", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -16,8 +16,6 @@ use rustc_span::{Pos, Span};\n use rustc_target::spec::abi::Abi;\n use std::{any::Any, env, fmt};\n \n-use rustc_error_codes::*;\n-\n #[derive(Debug, Copy, Clone, PartialEq, Eq, HashStable, RustcEncodable, RustcDecodable)]\n pub enum ErrorHandled {\n     /// Already reported a lint or an error for this evaluation."}, {"sha": "646cb80bffd9417d2381791141d9ad0eb3a10b91", "filename": "src/librustc/traits/error_reporting/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -30,8 +30,6 @@ use rustc_span::{ExpnKind, Span, DUMMY_SP};\n use std::fmt;\n use syntax::ast;\n \n-use rustc_error_codes::*;\n-\n impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n     pub fn report_fulfillment_errors(\n         &self,"}, {"sha": "c18e17581ceb642e7e5a186ede23d985581719eb", "filename": "src/librustc/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -20,8 +20,6 @@ use rustc_span::symbol::{kw, sym};\n use rustc_span::{MultiSpan, Span, DUMMY_SP};\n use std::fmt;\n \n-use rustc_error_codes::*;\n-\n impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n     crate fn suggest_restricting_param_bound(\n         &self,"}, {"sha": "669ec5ccc9b98b43edcfdf3706acc49406b7bab2", "filename": "src/librustc/traits/on_unimplemented.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Ftraits%2Fon_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Ftraits%2Fon_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fon_unimplemented.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -11,8 +11,6 @@ use rustc_span::Span;\n use syntax::ast::{MetaItem, NestedMetaItem};\n use syntax::attr;\n \n-use rustc_error_codes::*;\n-\n #[derive(Clone, Debug)]\n pub struct OnUnimplementedFormatString(Symbol);\n "}, {"sha": "2e5ef5adcd30ed96b5329993e54b65728e3c67ed", "filename": "src/librustc/traits/query/dropck_outlives.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Ftraits%2Fquery%2Fdropck_outlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Ftraits%2Fquery%2Fdropck_outlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Fdropck_outlives.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -6,8 +6,6 @@ use crate::ty::{self, Ty, TyCtxt};\n use rustc_span::source_map::Span;\n use std::iter::FromIterator;\n \n-use rustc_error_codes::*;\n-\n impl<'cx, 'tcx> At<'cx, 'tcx> {\n     /// Given a type `ty` of some value being dropped, computes a set\n     /// of \"kinds\" (types, regions) that must be outlive the execution"}, {"sha": "e559ea391cde09e10bd083047b0e5b1a0d36eb57", "filename": "src/librustc/traits/specialize/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Ftraits%2Fspecialize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Ftraits%2Fspecialize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fspecialize%2Fmod.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -25,8 +25,6 @@ use rustc_span::DUMMY_SP;\n use super::util::impl_trait_ref_and_oblig;\n use super::{FulfillmentContext, SelectionContext};\n \n-use rustc_error_codes::*;\n-\n /// Information pertinent to an overlapping impl error.\n #[derive(Debug)]\n pub struct OverlapError {"}, {"sha": "117a38c655eaa51a7b66808c66955afcd9705bef", "filename": "src/librustc/ty/query/plumbing.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -25,8 +25,6 @@ use std::hash::{Hash, Hasher};\n use std::mem;\n use std::ptr;\n \n-use rustc_error_codes::*;\n-\n pub struct QueryCache<'tcx, D: QueryConfig<'tcx> + ?Sized> {\n     pub(super) results: FxHashMap<D::Key, QueryValue<D::Value>>,\n     pub(super) active: FxHashMap<D::Key, QueryResult<'tcx>>,"}, {"sha": "4b786d6245fc4056d6ee77a77b54a24433024788", "filename": "src/librustc_ast_lowering/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_ast_lowering%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_ast_lowering%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2FCargo.toml?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -17,7 +17,6 @@ rustc_target = { path = \"../librustc_target\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_index = { path = \"../librustc_index\" }\n rustc_span = { path = \"../librustc_span\" }\n-rustc_error_codes = { path = \"../librustc_error_codes\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_session = { path = \"../librustc_session\" }\n syntax = { path = \"../libsyntax\" }"}, {"sha": "a24bb52150a7224aa8b03bf14ff677e891cb1e72", "filename": "src/librustc_ast_lowering/expr.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_ast_lowering%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_ast_lowering%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fexpr.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -2,7 +2,6 @@ use super::{ImplTraitContext, LoweringContext, ParamMode, ParenthesizedGenericAr\n \n use rustc::bug;\n use rustc_data_structures::thin_vec::ThinVec;\n-use rustc_error_codes::*;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def::Res;"}, {"sha": "bcc40b0c9c9c93b54b9a7511a8bc59dbfbb6bd14", "filename": "src/librustc_ast_lowering/item.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_ast_lowering%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_ast_lowering%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fitem.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -3,7 +3,6 @@ use super::{ImplTraitContext, ImplTraitPosition, ImplTraitTypeIdVisitor};\n \n use rustc::arena::Arena;\n use rustc::bug;\n-use rustc_error_codes::*;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};"}, {"sha": "2cd4a6eb7e21ba15edf5a03ddf5cda9a025ef93e", "filename": "src/librustc_ast_lowering/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_ast_lowering%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_ast_lowering%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Flib.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -41,7 +41,6 @@ use rustc::{bug, span_bug};\n use rustc_data_structures::captures::Captures;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::sync::Lrc;\n-use rustc_error_codes::*;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Namespace, PartialRes, PerNS, Res};"}, {"sha": "e5f7df6dbf9e453e7f13fc045270e6b79d215717", "filename": "src/librustc_ast_lowering/path.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_ast_lowering%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_ast_lowering%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fpath.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -3,7 +3,6 @@ use super::{GenericArgsCtor, ParenthesizedGenericArgs};\n \n use rustc::lint::builtin::ELIDED_LIFETIMES_IN_PATHS;\n use rustc::span_bug;\n-use rustc_error_codes::*;\n use rustc_errors::{struct_span_err, Applicability};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, PartialRes, Res};"}, {"sha": "25b1acebd2a08bf2b58f4e8b3215d692578bf1ef", "filename": "src/librustc_ast_passes/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_ast_passes%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_ast_passes%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2FCargo.toml?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -12,7 +12,6 @@ path = \"lib.rs\"\n log = \"0.4\"\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }\n-rustc_error_codes = { path = \"../librustc_error_codes\" }\n rustc_feature = { path = \"../librustc_feature\" }\n rustc_parse = { path = \"../librustc_parse\" }\n rustc_session = { path = \"../librustc_session\" }"}, {"sha": "bc02406aa2158b131a3cf81c29157b5ba268403f", "filename": "src/librustc_ast_passes/ast_validation.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_ast_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_ast_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2Fast_validation.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -23,8 +23,6 @@ use syntax::print::pprust;\n use syntax::visit::{self, Visitor};\n use syntax::walk_list;\n \n-use rustc_error_codes::*;\n-\n /// A syntactic context that disallows certain kinds of bounds (e.g., `?Trait` or `?const Trait`).\n #[derive(Clone, Copy)]\n enum BoundContext {"}, {"sha": "953127429d5aa7ff7cea891ce28ac438eda5dffb", "filename": "src/librustc_ast_passes/feature_gate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_ast_passes%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_ast_passes%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2Ffeature_gate.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -1,4 +1,3 @@\n-use rustc_error_codes::*;\n use rustc_errors::{struct_span_err, Handler};\n use rustc_feature::{AttributeGate, BUILTIN_ATTRIBUTE_MAP};\n use rustc_feature::{Features, GateIssue, UnstableFeatures};"}, {"sha": "3ce7f5d770ed165ce8f6a70197594829125a5637", "filename": "src/librustc_builtin_macros/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_builtin_macros%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_builtin_macros%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2FCargo.toml?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -22,4 +22,3 @@ smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n syntax = { path = \"../libsyntax\" }\n rustc_expand = { path = \"../librustc_expand\" }\n rustc_span = { path = \"../librustc_span\" }\n-rustc_error_codes = { path = \"../librustc_error_codes\" }"}, {"sha": "4723544316faffaf883077635d5b54ac8b6deca2", "filename": "src/librustc_builtin_macros/asm.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_builtin_macros%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_builtin_macros%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fasm.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -12,8 +12,6 @@ use syntax::ptr::P;\n use syntax::token::{self, Token};\n use syntax::tokenstream::{self, TokenStream};\n \n-use rustc_error_codes::*;\n-\n enum State {\n     Asm,\n     Outputs,"}, {"sha": "b4f059e94c15e434612e9316648a2f6f0a298370", "filename": "src/librustc_builtin_macros/deriving/default.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_builtin_macros%2Fderiving%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_builtin_macros%2Fderiving%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fdefault.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -9,8 +9,6 @@ use rustc_span::Span;\n use syntax::ast::{Expr, MetaItem};\n use syntax::ptr::P;\n \n-use rustc_error_codes::*;\n-\n pub fn expand_deriving_default(\n     cx: &mut ExtCtxt<'_>,\n     span: Span,"}, {"sha": "9f8b4e72a9cbf1c8d64f1b453ad068ca50596f96", "filename": "src/librustc_codegen_ssa/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_codegen_ssa%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_codegen_ssa%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2FCargo.toml?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -32,5 +32,4 @@ rustc_hir = { path = \"../librustc_hir\" }\n rustc_incremental = { path = \"../librustc_incremental\" }\n rustc_index = { path = \"../librustc_index\" }\n rustc_target = { path = \"../librustc_target\" }\n-rustc_error_codes = { path = \"../librustc_error_codes\" }\n rustc_session = { path = \"../librustc_session\" }"}, {"sha": "28b61e0b36d64d08c3a4c33aa0825cac16e99a36", "filename": "src/librustc_codegen_ssa/common.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_codegen_ssa%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_codegen_ssa%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fcommon.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -13,8 +13,6 @@ use rustc_hir::def_id::DefId;\n use crate::traits::BuilderMethods;\n use rustc_hir as hir;\n \n-use rustc_error_codes::*;\n-\n pub enum IntPredicate {\n     IntEQ,\n     IntNE,"}, {"sha": "8422c625d634ea11b680dda796f53e2db52d670c", "filename": "src/librustc_codegen_ssa/mir/statement.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_codegen_ssa%2Fmir%2Fstatement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_codegen_ssa%2Fmir%2Fstatement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fstatement.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -7,8 +7,6 @@ use super::OperandValue;\n use crate::traits::BuilderMethods;\n use crate::traits::*;\n \n-use rustc_error_codes::*;\n-\n impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n     pub fn codegen_statement(&mut self, mut bx: Bx, statement: &mir::Statement<'tcx>) -> Bx {\n         debug!(\"codegen_statement(statement={:?})\", statement);"}, {"sha": "f051fdd11b807584ec8bb5742444c1c2e3c7432b", "filename": "src/librustc_error_codes/lib.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_error_codes%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_error_codes%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Flib.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -6,16 +6,8 @@ macro_rules! register_diagnostics {\n         pub static DIAGNOSTICS: &[(&str, &str)] = &[\n             $( (stringify!($ecode), $message), )*\n         ];\n-\n-        $(\n-            pub const $ecode: () = ();\n-        )*\n-        $(\n-            pub const $code: () = ();\n-        )*\n     )\n }\n \n mod error_codes;\n-\n-pub use error_codes::*;\n+pub use error_codes::DIAGNOSTICS;"}, {"sha": "3c217c1d64373556cdd9605e89605d22d836cede", "filename": "src/librustc_errors/diagnostic_builder.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic_builder.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -399,8 +399,5 @@ macro_rules! struct_span_err {\n \n #[macro_export]\n macro_rules! error_code {\n-    ($code:ident) => {{\n-        let _ = $code;\n-        $crate::DiagnosticId::Error(stringify!($code).to_owned())\n-    }};\n+    ($code:ident) => {{ $crate::DiagnosticId::Error(stringify!($code).to_owned()) }};\n }"}, {"sha": "7e23e70577975cdb9e3e90ee0625fad8ac2387ed", "filename": "src/librustc_lint/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_lint%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_lint%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2FCargo.toml?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -13,7 +13,6 @@ log = \"0.4\"\n unicode-security = \"0.0.2\"\n rustc = { path = \"../librustc\" }\n rustc_errors = { path = \"../librustc_errors\" }\n-rustc_error_codes = { path = \"../librustc_error_codes\" }\n rustc_hir = { path = \"../librustc_hir\" }\n rustc_target = { path = \"../librustc_target\" }\n syntax = { path = \"../libsyntax\" }"}, {"sha": "3b8cce5635d0715f17809238daa522e0e0f3fddb", "filename": "src/librustc_lint/context.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_lint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_lint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fcontext.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -26,7 +26,6 @@ use rustc::ty::layout::{LayoutError, LayoutOf, TyLayout};\n use rustc::ty::{self, print::Printer, subst::GenericArg, Ty, TyCtxt};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync;\n-use rustc_error_codes::*;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId};"}, {"sha": "d5bbdc53160f6f43d4b6079e73a0a03b2d49208b", "filename": "src/librustc_lint/levels.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_lint%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_lint%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flevels.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -6,7 +6,6 @@ use rustc::lint::{LintLevelMap, LintLevelSets, LintSet, LintSource};\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_error_codes::*;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};"}, {"sha": "6da584733aea0345e8d44b71fc117a39f6e03be6", "filename": "src/librustc_metadata/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_metadata%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_metadata%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2FCargo.toml?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -26,7 +26,6 @@ syntax = { path = \"../libsyntax\" }\n rustc_expand = { path = \"../librustc_expand\" }\n rustc_parse = { path = \"../librustc_parse\" }\n rustc_span = { path = \"../librustc_span\" }\n-rustc_error_codes = { path = \"../librustc_error_codes\" }\n \n [target.'cfg(windows)'.dependencies]\n winapi = { version = \"0.3\", features = [\"errhandlingapi\", \"libloaderapi\"] }"}, {"sha": "351e72d4678f2bed27deb2fd0a9f138012e72a5a", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -12,7 +12,6 @@ use rustc::session::{CrateDisambiguator, Session};\n use rustc::ty::TyCtxt;\n use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::Lrc;\n-use rustc_error_codes::*;\n use rustc_errors::struct_span_err;\n use rustc_expand::base::SyntaxExtension;\n use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};"}, {"sha": "578216454f9dc487c11430a541df228850926301", "filename": "src/librustc_metadata/locator.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_metadata%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_metadata%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flocator.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -241,8 +241,6 @@ use rustc_data_structures::owning_ref::OwningRef;\n \n use log::{debug, info, warn};\n \n-use rustc_error_codes::*;\n-\n #[derive(Clone)]\n struct CrateMismatch {\n     path: PathBuf,"}, {"sha": "bbf6973be51a7690f5a5784767fa91a85777a652", "filename": "src/librustc_metadata/native_libs.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_metadata%2Fnative_libs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_metadata%2Fnative_libs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fnative_libs.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -3,7 +3,6 @@ use rustc::session::parse::feature_err;\n use rustc::session::Session;\n use rustc::ty::TyCtxt;\n use rustc_data_structures::fx::FxHashSet;\n-use rustc_error_codes::*;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;"}, {"sha": "00881e3ea6f1943e996ac00f246cbf451ac13cb6", "filename": "src/librustc_mir/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_mir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_mir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2FCargo.toml?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -29,4 +29,3 @@ syntax = { path = \"../libsyntax\" }\n rustc_span = { path = \"../librustc_span\" }\n rustc_apfloat = { path = \"../librustc_apfloat\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n-rustc_error_codes = { path = \"../librustc_error_codes\" }"}, {"sha": "a92abc98cf4c18d98a83151081bc1be544396adc", "filename": "src/librustc_mir/borrow_check/type_check/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -27,7 +27,6 @@ use rustc::ty::{\n     TyCtxt, UserType, UserTypeAnnotationIndex,\n };\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n-use rustc_error_codes::*;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;"}, {"sha": "3263905eadb81691ed9c0bd5df569a76aa63d2d5", "filename": "src/librustc_mir/transform/check_consts/ops.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -10,8 +10,6 @@ use rustc_span::{Span, Symbol};\n \n use super::{ConstKind, Item};\n \n-use rustc_error_codes::*;\n-\n /// An operation that is not *always* allowed in a const context.\n pub trait NonConstOp: std::fmt::Debug {\n     /// Whether this operation can be evaluated by miri."}, {"sha": "1d5fb33ee8e81bf9c4bbccefb4212dbc74230d53", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -6,7 +6,6 @@ use rustc::mir::*;\n use rustc::traits::{self, TraitEngine};\n use rustc::ty::cast::CastTy;\n use rustc::ty::{self, TyCtxt};\n-use rustc_error_codes::*;\n use rustc_errors::struct_span_err;\n use rustc_hir::{def_id::DefId, HirId};\n use rustc_index::bit_set::BitSet;"}, {"sha": "4e943547f07f5773c8f22b4b274a801dead1aae4", "filename": "src/librustc_mir/transform/check_unsafety.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -18,8 +18,6 @@ use std::ops::Bound;\n use crate::const_eval::{is_const_fn, is_min_const_fn};\n use crate::util;\n \n-use rustc_error_codes::*;\n-\n pub struct UnsafetyChecker<'a, 'tcx> {\n     body: &'a Body<'tcx>,\n     const_context: bool,"}, {"sha": "d8ee059f1a6b6eb5c87fc0cdb1023e564987a23a", "filename": "src/librustc_mir/util/borrowck_errors.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -1,5 +1,4 @@\n use rustc::ty::{self, Ty, TyCtxt};\n-use rustc_error_codes::*;\n use rustc_errors::{struct_span_err, DiagnosticBuilder, DiagnosticId};\n use rustc_span::{MultiSpan, Span};\n "}, {"sha": "f0d1d4c6515ce66abf06f75036d88b47912590a8", "filename": "src/librustc_mir_build/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_mir_build%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_mir_build%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2FCargo.toml?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -25,4 +25,3 @@ rustc_span = { path = \"../librustc_span\" }\n rustc_target = { path = \"../librustc_target\" }\n syntax = { path = \"../libsyntax\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n-rustc_error_codes = { path = \"../librustc_error_codes\" }"}, {"sha": "eac52da7ba4ae133b3f51bbd0f7fddbebffff86d", "filename": "src/librustc_mir_build/hair/pattern/check_match.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fcheck_match.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -9,7 +9,6 @@ use rustc::lint;\n use rustc::session::parse::feature_err;\n use rustc::session::Session;\n use rustc::ty::{self, Ty, TyCtxt};\n-use rustc_error_codes::*;\n use rustc_errors::{error_code, struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def::*;"}, {"sha": "2657050583071ed5f9dd85d68c52e96b46753b6a", "filename": "src/librustc_mir_build/hair/pattern/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fmod.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -28,8 +28,6 @@ use syntax::ast;\n use std::cmp::Ordering;\n use std::fmt;\n \n-use rustc_error_codes::*;\n-\n #[derive(Clone, Debug)]\n crate enum PatternError {\n     AssocConstInPattern(Span),"}, {"sha": "8071bc6312b368e6a2a61f937b9cf5237a2d36c5", "filename": "src/librustc_parse/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_parse%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_parse%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2FCargo.toml?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -16,7 +16,6 @@ rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_feature = { path = \"../librustc_feature\" }\n rustc_lexer = { path = \"../librustc_lexer\" }\n rustc_errors = { path = \"../librustc_errors\" }\n-rustc_error_codes = { path = \"../librustc_error_codes\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n rustc_session = { path = \"../librustc_session\" }\n rustc_span = { path = \"../librustc_span\" }"}, {"sha": "bf696faf2f3f48a3bf458a88bdb924cfd8449d72", "filename": "src/librustc_parse/config.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_parse%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_parse%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fconfig.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -10,7 +10,6 @@\n \n use crate::{parse_in, validate_attr};\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_error_codes::*;\n use rustc_errors::{error_code, struct_span_err, Applicability, Handler};\n use rustc_feature::{Feature, Features, State as FeatureState};\n use rustc_feature::{"}, {"sha": "80bc5c158a64f947bb25984211ef21e8b9c858cd", "filename": "src/librustc_parse/parser/diagnostics.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -1,7 +1,6 @@\n use super::{BlockMode, Parser, PathStyle, SemiColonMode, SeqSep, TokenExpectType, TokenType};\n \n use rustc_data_structures::fx::FxHashSet;\n-use rustc_error_codes::*;\n use rustc_errors::{pluralize, struct_span_err};\n use rustc_errors::{Applicability, DiagnosticBuilder, Handler, PResult};\n use rustc_span::source_map::Spanned;"}, {"sha": "5076aafe4ebd5c99e6df3c40683d1bd664a88c07", "filename": "src/librustc_parse/parser/item.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fitem.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -3,7 +3,6 @@ use super::{FollowedByType, Parser, PathStyle};\n \n use crate::maybe_whole;\n \n-use rustc_error_codes::*;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder, PResult, StashKey};\n use rustc_span::source_map::{self, respan, Span, Spanned};\n use rustc_span::symbol::{kw, sym, Symbol};"}, {"sha": "4a9016394d2582af6ff82790bed8994a9c504101", "filename": "src/librustc_parse/parser/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_parse%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_parse%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fmod.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -33,8 +33,6 @@ use std::borrow::Cow;\n use std::path::PathBuf;\n use std::{cmp, mem, slice};\n \n-use rustc_error_codes::*;\n-\n bitflags::bitflags! {\n     struct Restrictions: u8 {\n         const STMT_EXPR         = 1 << 0;"}, {"sha": "edb9044df9206012ac9593682e0d0d9197a2ee63", "filename": "src/librustc_parse/parser/pat.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_parse%2Fparser%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_parse%2Fparser%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fpat.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -659,7 +659,6 @@ impl<'a> Parser<'a> {\n     }\n \n     pub(super) fn error_inclusive_range_with_no_end(&self, span: Span) {\n-        use rustc_error_codes::E0586;\n         struct_span_err!(self.sess.span_diagnostic, span, E0586, \"inclusive range with no end\")\n             .span_suggestion_short(\n                 span,"}, {"sha": "d1875a6c940b136c06c31a81eb9ed2ba519af84e", "filename": "src/librustc_parse/parser/ty.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_parse%2Fparser%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_parse%2Fparser%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fty.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -3,7 +3,6 @@ use super::{Parser, PathStyle, PrevTokenKind, TokenType};\n \n use crate::{maybe_recover_from_interpolated_ty_qpath, maybe_whole};\n \n-use rustc_error_codes::*;\n use rustc_errors::{pluralize, struct_span_err, Applicability, PResult};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::{kw, sym};"}, {"sha": "338808f6d4a0f56734d77559a426ba42c1240066", "filename": "src/librustc_passes/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_passes%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_passes%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2FCargo.toml?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -20,4 +20,3 @@ rustc_session = { path = \"../librustc_session\" }\n rustc_target = { path = \"../librustc_target\" }\n syntax = { path = \"../libsyntax\" }\n rustc_span = { path = \"../librustc_span\" }\n-rustc_error_codes = { path = \"../librustc_error_codes\" }"}, {"sha": "faa85f68fab860f0dbe9809fd4d2e69a28613398", "filename": "src/librustc_passes/check_const.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_passes%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_passes%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fcheck_const.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -12,7 +12,6 @@ use rustc::session::config::nightly_options;\n use rustc::session::parse::feature_err;\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n-use rustc_error_codes::*;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;"}, {"sha": "d36114fd3b5b5f04ba0fff88eea5bef33a000a45", "filename": "src/librustc_passes/entry.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_passes%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_passes%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fentry.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -12,8 +12,6 @@ use rustc_span::{Span, DUMMY_SP};\n use syntax::attr;\n use syntax::entry::EntryPointType;\n \n-use rustc_error_codes::*;\n-\n struct EntryContext<'a, 'tcx> {\n     session: &'a Session,\n "}, {"sha": "782199003c72a744bc1f9320cb72906735241c67", "filename": "src/librustc_passes/intrinsicck.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_passes%2Fintrinsicck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_passes%2Fintrinsicck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fintrinsicck.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -11,8 +11,6 @@ use rustc_index::vec::Idx;\n use rustc_span::{sym, Span};\n use rustc_target::spec::abi::Abi::RustIntrinsic;\n \n-use rustc_error_codes::*;\n-\n fn check_mod_intrinsics(tcx: TyCtxt<'_>, module_def_id: DefId) {\n     tcx.hir().visit_item_likes_in_module(module_def_id, &mut ItemVisitor { tcx }.as_deep_visitor());\n }"}, {"sha": "2e306a1b4f2a1b2b17badb0624dc5c55b2d3567e", "filename": "src/librustc_passes/lib_features.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_passes%2Flib_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_passes%2Flib_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flib_features.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -15,8 +15,6 @@ use rustc_span::symbol::Symbol;\n use rustc_span::{sym, Span};\n use syntax::ast::{Attribute, MetaItem, MetaItemKind};\n \n-use rustc_error_codes::*;\n-\n fn new_lib_features() -> LibFeatures {\n     LibFeatures { stable: Default::default(), unstable: Default::default() }\n }"}, {"sha": "69d6b38005c4c7ea02f0571e9f0d61a52e83ef4c", "filename": "src/librustc_passes/loops.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_passes%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_passes%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Floops.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -1,7 +1,5 @@\n use Context::*;\n \n-use rustc::session::Session;\n-\n use rustc::hir::map::Map;\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n@@ -10,10 +8,9 @@ use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::{Destination, Movability, Node};\n+use rustc_session::Session;\n use rustc_span::Span;\n \n-use rustc_error_codes::*;\n-\n #[derive(Clone, Copy, Debug, PartialEq)]\n enum Context {\n     Normal,"}, {"sha": "320b433190e5e89761211554f5bc44e1fb118a4c", "filename": "src/librustc_passes/stability.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_passes%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_passes%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fstability.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -26,8 +26,6 @@ use std::cmp::Ordering;\n use std::mem::replace;\n use std::num::NonZeroU32;\n \n-use rustc_error_codes::*;\n-\n #[derive(PartialEq)]\n enum AnnotationKind {\n     // Annotation is required if not inherited from unstable parents"}, {"sha": "2214838c84683d57f28d1474e340904d296ebb48", "filename": "src/librustc_plugin_impl/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_plugin_impl%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_plugin_impl%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin_impl%2FCargo.toml?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -18,4 +18,3 @@ rustc_lint = { path = \"../librustc_lint\" }\n rustc_metadata = { path = \"../librustc_metadata\" }\n syntax = { path = \"../libsyntax\" }\n rustc_span = { path = \"../librustc_span\" }\n-rustc_error_codes = { path = \"../librustc_error_codes\" }"}, {"sha": "84549c0dd4554930f09626911ef46d9bc56d8241", "filename": "src/librustc_plugin_impl/load.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_plugin_impl%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_plugin_impl%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin_impl%2Fload.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -3,7 +3,6 @@\n use crate::Registry;\n use rustc::middle::cstore::MetadataLoader;\n use rustc::session::Session;\n-use rustc_error_codes::*;\n use rustc_errors::struct_span_err;\n use rustc_metadata::locator;\n use rustc_span::symbol::sym;"}, {"sha": "4f341b545156ce009dd826adecae703a82392e75", "filename": "src/librustc_privacy/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_privacy%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_privacy%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2FCargo.toml?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -16,5 +16,4 @@ rustc_typeck = { path = \"../librustc_typeck\" }\n syntax = { path = \"../libsyntax\" }\n rustc_span = { path = \"../librustc_span\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n-rustc_error_codes = { path = \"../librustc_error_codes\" }\n log = \"0.4\""}, {"sha": "634905450d4ede4a514088f33f05db70ec2eb941", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -27,8 +27,6 @@ use syntax::attr;\n use std::marker::PhantomData;\n use std::{cmp, fmt, mem};\n \n-use rustc_error_codes::*;\n-\n ////////////////////////////////////////////////////////////////////////////////\n /// Generic infrastructure used to implement specific visitors below.\n ////////////////////////////////////////////////////////////////////////////////"}, {"sha": "c4cc6b09c736edd4d76353458f70e8fa6eb959d0", "filename": "src/librustc_resolve/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_resolve%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_resolve%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2FCargo.toml?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -23,7 +23,6 @@ rustc_expand = { path = \"../librustc_expand\" }\n rustc_feature = { path = \"../librustc_feature\" }\n rustc_hir = { path = \"../librustc_hir\" }\n rustc_metadata = { path = \"../librustc_metadata\" }\n-rustc_error_codes = { path = \"../librustc_error_codes\" }\n rustc_session = { path = \"../librustc_session\" }\n rustc_span = { path = \"../librustc_span\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }"}, {"sha": "7ff076268ab820f90ec53fe33dadab7c5831b93b", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -21,7 +21,6 @@ use rustc::hir::exports::Export;\n use rustc::middle::cstore::CrateStore;\n use rustc::ty;\n use rustc_data_structures::sync::Lrc;\n-use rustc_error_codes::*;\n use rustc_errors::{struct_span_err, Applicability};\n use rustc_expand::base::SyntaxExtension;\n use rustc_expand::expand::AstFragment;"}, {"sha": "3d4384cabe20460b6a4690888ac869ba00814980", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -25,8 +25,6 @@ use crate::{BindingError, CrateLint, HasGenericParams, LegacyScope, Module, Modu\n use crate::{NameBinding, NameBindingKind, PrivacyError, VisResolutionError};\n use crate::{ParentScope, PathResult, ResolutionError, Resolver, Scope, ScopeSet, Segment};\n \n-use rustc_error_codes::*;\n-\n type Res = def::Res<ast::NodeId>;\n \n /// A vector of spans and replacements, a message and applicability."}, {"sha": "55ce51e0ff057508c783226910adebf394c653b1", "filename": "src/librustc_resolve/imports.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_resolve%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_resolve%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fimports.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -29,8 +29,6 @@ use syntax::ast::{Ident, Name, NodeId};\n use syntax::unwrap_or;\n use syntax::util::lev_distance::find_best_match_for_name;\n \n-use rustc_error_codes::*;\n-\n use log::*;\n \n use std::cell::Cell;"}, {"sha": "5e08ac8e2c38a869724132bb5d89667b38255605", "filename": "src/librustc_resolve/late.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_resolve%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_resolve%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -31,8 +31,6 @@ use log::debug;\n use std::collections::BTreeSet;\n use std::mem::replace;\n \n-use rustc_error_codes::*;\n-\n mod diagnostics;\n \n type Res = def::Res<NodeId>;"}, {"sha": "6a98c9e59a9ce250ebcf7c8f0c88787b97f5b5ec", "filename": "src/librustc_resolve/late/diagnostics.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -6,7 +6,6 @@ use crate::{PathResult, PathSource, Segment};\n \n use rustc::session::config::nightly_options;\n use rustc_data_structures::fx::FxHashSet;\n-use rustc_error_codes::*;\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_hir::def::Namespace::{self, *};\n use rustc_hir::def::{self, CtorKind, DefKind};"}, {"sha": "5d132191f9208b86a783eb13b4610c4771ddaf86", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -61,8 +61,6 @@ use imports::{ImportDirective, ImportDirectiveSubclass, ImportResolver, NameReso\n use late::{HasGenericParams, PathSource, Rib, RibKind::*};\n use macros::{LegacyBinding, LegacyScope};\n \n-use rustc_error_codes::*;\n-\n type Res = def::Res<NodeId>;\n \n mod build_reduced_graph;"}, {"sha": "a2ca80cf5f30a9e48bb0a94ab64fcc7f9e371583", "filename": "src/librustc_resolve/lifetimes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_resolve%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_resolve%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flifetimes.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -30,8 +30,6 @@ use syntax::walk_list;\n \n use log::debug;\n \n-use rustc_error_codes::*;\n-\n // This counts the no of times a lifetime is used\n #[derive(Clone, Copy, Debug)]\n pub enum LifetimeUseSet<'tcx> {"}, {"sha": "47c23bc4dcf98c4f074ab88106323720cf9a4d16", "filename": "src/librustc_session/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_session%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_session%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2FCargo.toml?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -10,7 +10,6 @@ path = \"lib.rs\"\n \n [dependencies]\n log = \"0.4\"\n-rustc_error_codes = { path = \"../librustc_error_codes\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_feature = { path = \"../librustc_feature\" }\n rustc_target = { path = \"../librustc_target\" }"}, {"sha": "72c68fcb244c95e65b7b463cac311e4cc5f44f72", "filename": "src/librustc_session/parse.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_session%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_session%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Fparse.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -6,7 +6,6 @@ use crate::node_id::NodeId;\n \n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::{Lock, Lrc, Once};\n-use rustc_error_codes::E0658;\n use rustc_errors::{emitter::SilentEmitter, ColorConfig, Handler};\n use rustc_errors::{error_code, Applicability, DiagnosticBuilder};\n use rustc_feature::{find_feature_issue, GateIssue, UnstableFeatures};"}, {"sha": "4b27d86dd02a741380e74f1ab36ce598df884fd0", "filename": "src/librustc_typeck/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2FCargo.toml?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -22,4 +22,3 @@ smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n syntax = { path = \"../libsyntax\" }\n rustc_span = { path = \"../librustc_span\" }\n rustc_index = { path = \"../librustc_index\" }\n-rustc_error_codes = { path = \"../librustc_error_codes\" }"}, {"sha": "047c14cfbcff7fcf27c589fd30fabeca638ea3dc", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -39,7 +39,6 @@ use std::iter;\n use std::slice;\n \n use rustc::mir::interpret::LitToConstInput;\n-use rustc_error_codes::*;\n \n #[derive(Debug)]\n pub struct PathSeg(pub DefId, pub usize);"}, {"sha": "3ea5de9a8375dce87632cdcf572b319d90a35fdb", "filename": "src/librustc_typeck/check/autoderef.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fautoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fautoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fautoderef.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -13,8 +13,6 @@ use rustc_hir as hir;\n use rustc_span::Span;\n use syntax::ast::Ident;\n \n-use rustc_error_codes::*;\n-\n use std::iter;\n \n #[derive(Copy, Clone, Debug)]"}, {"sha": "b33cc52b238e3bf668a46dea59a9a3ab961d156c", "filename": "src/librustc_typeck/check/callee.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -8,7 +8,6 @@ use rustc::ty::adjustment::{Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoB\n use rustc::ty::subst::SubstsRef;\n use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n use rustc::{infer, traits};\n-use rustc_error_codes::*;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def::Res;"}, {"sha": "d254a84df72ce5b9264398ea352ccc02f0a71786", "filename": "src/librustc_typeck/check/cast.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -49,8 +49,6 @@ use rustc_hir as hir;\n use rustc_span::Span;\n use syntax::ast;\n \n-use rustc_error_codes::*;\n-\n /// Reifies a cast check to be checked once we have full type information for\n /// a function context.\n pub struct CastCheck<'tcx> {"}, {"sha": "8c8e0642dffcefebe832494a7901a164d587951a", "filename": "src/librustc_typeck/check/coercion.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -65,7 +65,6 @@ use rustc::ty::fold::TypeFoldable;\n use rustc::ty::relate::RelateResult;\n use rustc::ty::subst::SubstsRef;\n use rustc::ty::{self, Ty, TypeAndMut};\n-use rustc_error_codes::*;\n use rustc_errors::{struct_span_err, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;"}, {"sha": "414f80d84b672bc9bc87022e96391b3ae88ee1e6", "filename": "src/librustc_typeck/check/compare_method.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -15,8 +15,6 @@ use rustc_span::Span;\n \n use super::{potentially_plural_count, FnCtxt, Inherited};\n \n-use rustc_error_codes::*;\n-\n /// Checks that a method from an impl conforms to the signature of\n /// the same method as declared in the trait.\n ///"}, {"sha": "f4aa53a5a938998e53e832403a5abe1663cdf2fe", "filename": "src/librustc_typeck/check/dropck.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -14,8 +14,6 @@ use rustc_errors::struct_span_err;\n \n use rustc_span::Span;\n \n-use rustc_error_codes::*;\n-\n /// This function confirms that the `Drop` implementation identified by\n /// `drop_impl_did` is not any more specialized than the type it is\n /// attached to (Issue #8142)."}, {"sha": "201a09fdc63faa2ba2beeee7a676ed004c73b7d3", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -38,8 +38,6 @@ use rustc_span::symbol::{kw, sym, Symbol};\n use syntax::ast;\n use syntax::util::lev_distance::find_best_match_for_name;\n \n-use rustc_error_codes::*;\n-\n use std::fmt::Display;\n \n impl<'a, 'tcx> FnCtxt<'a, 'tcx> {"}, {"sha": "3572eda5c1399006db8cfc33f03d6a70181a27e6", "filename": "src/librustc_typeck/check/intrinsic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -6,7 +6,6 @@ use crate::require_same_types;\n use rustc::traits::{ObligationCause, ObligationCauseCode};\n use rustc::ty::subst::Subst;\n use rustc::ty::{self, Ty, TyCtxt};\n-use rustc_error_codes::*;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_span::symbol::Symbol;"}, {"sha": "9d8f57119ddded32a2cc051f715a415bfee8fbdf", "filename": "src/librustc_typeck/check/method/probe.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -38,8 +38,6 @@ use std::ops::Deref;\n use syntax::ast;\n use syntax::util::lev_distance::{find_best_match_for_name, lev_distance};\n \n-use rustc_error_codes::*;\n-\n use smallvec::{smallvec, SmallVec};\n \n use self::CandidateKind::*;"}, {"sha": "88de2654cea54802d0f1dd559b59b45b4718ebd5", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -21,8 +21,6 @@ use rustc_span::{source_map, FileName, Span};\n use syntax::ast;\n use syntax::util::lev_distance;\n \n-use rustc_error_codes::*;\n-\n use std::cmp::Ordering;\n \n use super::probe::Mode;"}, {"sha": "f7df630fb90b19daad8ee8b291c4847726310fab", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -133,8 +133,6 @@ use syntax::ast;\n use syntax::attr;\n use syntax::util::parser::ExprPrecedence;\n \n-use rustc_error_codes::*;\n-\n use std::cell::{Cell, Ref, RefCell, RefMut};\n use std::cmp;\n use std::collections::hash_map::Entry;"}, {"sha": "91e1731ac458b9e6de7aaed52145119659c753a2", "filename": "src/librustc_typeck/check/op.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fop.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -11,8 +11,6 @@ use rustc_hir as hir;\n use rustc_span::Span;\n use syntax::ast::Ident;\n \n-use rustc_error_codes::*;\n-\n impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     /// Checks a `a <op>= b`\n     pub fn check_binop_assign("}, {"sha": "f9dee0e477f793f055fa5c5cf6b649826ba362e1", "filename": "src/librustc_typeck/check/pat.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -15,8 +15,6 @@ use rustc_span::Span;\n use syntax::ast;\n use syntax::util::lev_distance::find_best_match_for_name;\n \n-use rustc_error_codes::*;\n-\n use std::cmp;\n use std::collections::hash_map::Entry::{Occupied, Vacant};\n "}, {"sha": "910e680de69dc6c56872ac9ec82cf60971b8cce7", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -18,8 +18,6 @@ use syntax::ast;\n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ParItemLikeVisitor;\n \n-use rustc_error_codes::*;\n-\n /// Helper type of a temporary returned by `.for_item(...)`.\n /// This is necessary because we can't write the following bound:\n ///"}, {"sha": "79a006a898a893adacda9798c9ab4869ea5523c2", "filename": "src/librustc_typeck/coherence/builtin.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcoherence%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcoherence%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Fbuiltin.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -12,7 +12,6 @@ use rustc::traits::{self, ObligationCause, TraitEngine};\n use rustc::ty::adjustment::CoerceUnsizedInfo;\n use rustc::ty::TypeFoldable;\n use rustc::ty::{self, Ty, TyCtxt};\n-use rustc_error_codes::*;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;"}, {"sha": "d4c89b7e037938a67bcb73e85bed437a632ae50c", "filename": "src/librustc_typeck/coherence/inherent_impls.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -16,8 +16,6 @@ use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_span::Span;\n use syntax::ast;\n \n-use rustc_error_codes::*;\n-\n /// On-demand query: yields a map containing all types mapped to their inherent impls.\n pub fn crate_inherent_impls(tcx: TyCtxt<'_>, crate_num: CrateNum) -> &CrateInherentImpls {\n     assert_eq!(crate_num, LOCAL_CRATE);"}, {"sha": "d60c3cfba9a5bca1c1d80216cf602489387dd5e3", "filename": "src/librustc_typeck/coherence/inherent_impls_overlap.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls_overlap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls_overlap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls_overlap.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -6,8 +6,6 @@ use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n \n-use rustc_error_codes::*;\n-\n pub fn crate_inherent_impls_overlap_check(tcx: TyCtxt<'_>, crate_num: CrateNum) {\n     assert_eq!(crate_num, LOCAL_CRATE);\n     let krate = tcx.hir().krate();"}, {"sha": "5583e3418b2a8a7a1dbe41c46806da7cf0f51f7b", "filename": "src/librustc_typeck/coherence/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -8,7 +8,6 @@\n use rustc::traits;\n use rustc::ty::query::Providers;\n use rustc::ty::{self, TyCtxt, TypeFoldable};\n-use rustc_error_codes::*;\n use rustc_errors::struct_span_err;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_hir::HirId;"}, {"sha": "80521666476e6e187ad3e05f9910f74402835656", "filename": "src/librustc_typeck/coherence/orphan.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -7,8 +7,6 @@ use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n \n-use rustc_error_codes::*;\n-\n pub fn check(tcx: TyCtxt<'_>) {\n     let mut orphan = OrphanChecker { tcx };\n     tcx.hir().krate().visit_all_item_likes(&mut orphan);"}, {"sha": "a6044217403634c08f818c63f11e9d9f5e9ca32e", "filename": "src/librustc_typeck/coherence/unsafety.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcoherence%2Funsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcoherence%2Funsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Funsafety.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -7,8 +7,6 @@ use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::Unsafety;\n \n-use rustc_error_codes::*;\n-\n pub fn check(tcx: TyCtxt<'_>) {\n     let mut unsafety = UnsafetyChecker { tcx };\n     tcx.hir().krate().visit_all_item_likes(&mut unsafety);"}, {"sha": "9eee31c3a5763bf6a4cbe30cf88718498420dcd9", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -47,8 +47,6 @@ use syntax::ast;\n use syntax::ast::{Ident, MetaItemKind};\n use syntax::attr::{list_contains_name, mark_used, InlineAttr, OptimizeAttr};\n \n-use rustc_error_codes::*;\n-\n struct OnlySelfBounds(bool);\n \n ///////////////////////////////////////////////////////////////////////////"}, {"sha": "e9c18b59da9824146f05b46ff3381a198d69f783", "filename": "src/librustc_typeck/impl_wf_check.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fimpl_wf_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fimpl_wf_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fimpl_wf_check.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -20,8 +20,6 @@ use std::collections::hash_map::Entry::{Occupied, Vacant};\n \n use rustc_span::Span;\n \n-use rustc_error_codes::*;\n-\n /// Checks that all the type/lifetime parameters on an impl also\n /// appear in the trait ref or self type (or are constrained by a\n /// where-clause). These rules are needed to ensure that, given a"}, {"sha": "7e63a0254e845e96c8230dd5d4da5f1a8a9f0294", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -109,8 +109,6 @@ use rustc_hir::Node;\n use rustc_span::{Span, DUMMY_SP};\n use rustc_target::spec::abi::Abi;\n \n-use rustc_error_codes::*;\n-\n use std::iter;\n \n use astconv::{AstConv, Bounds};"}, {"sha": "980d58ad939d76253ce51f9dde20a0669ba8f4ab", "filename": "src/librustc_typeck/outlives/test.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Foutlives%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Foutlives%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Foutlives%2Ftest.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -4,8 +4,6 @@ use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_span::symbol::sym;\n \n-use rustc_error_codes::*;\n-\n pub fn test_inferred_outlives(tcx: TyCtxt<'_>) {\n     tcx.hir().krate().visit_all_item_likes(&mut OutlivesTest { tcx });\n }"}, {"sha": "99b7b2001a9e9a29812a2ecf8ec6d3ec7da509c2", "filename": "src/librustc_typeck/structured_errors.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fstructured_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fstructured_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fstructured_errors.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -3,8 +3,6 @@ use rustc::ty::{Ty, TypeFoldable};\n use rustc_errors::{Applicability, DiagnosticBuilder, DiagnosticId};\n use rustc_span::Span;\n \n-use rustc_error_codes::*;\n-\n pub trait StructuredDiagnostic<'tcx> {\n     fn session(&self) -> &Session;\n "}, {"sha": "ee94b1015a1f48979f14f3fb897d03a7fc8a5a5e", "filename": "src/librustc_typeck/variance/test.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fvariance%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustc_typeck%2Fvariance%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance%2Ftest.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -4,8 +4,6 @@ use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_span::symbol::sym;\n \n-use rustc_error_codes::*;\n-\n pub fn test_variance(tcx: TyCtxt<'_>) {\n     tcx.hir().krate().visit_all_item_likes(&mut VarianceTest { tcx });\n }"}, {"sha": "403c8d0160d8aea1fb882e275e01fec8bf14c4d3", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -23,7 +23,6 @@ extern crate getopts;\n extern crate rustc;\n extern crate rustc_data_structures;\n extern crate rustc_driver;\n-extern crate rustc_error_codes;\n extern crate rustc_errors;\n extern crate rustc_expand;\n extern crate rustc_feature;"}, {"sha": "2e647d2a1e0810c59243467974ca13e81dd1d619", "filename": "src/libsyntax/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibsyntax%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibsyntax%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2FCargo.toml?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -21,5 +21,4 @@ rustc_index = { path = \"../librustc_index\" }\n rustc_lexer = { path = \"../librustc_lexer\" }\n rustc_macros = { path = \"../librustc_macros\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n-rustc_error_codes = { path = \"../librustc_error_codes\" }\n rustc_session = { path = \"../librustc_session\" }"}, {"sha": "6cfe4f2de1e96b1ae1857f64de39aae50d8e7da3", "filename": "src/libsyntax/attr/builtin.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibsyntax%2Fattr%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86b820bbde7772477a95e36a70f06578313de2/src%2Flibsyntax%2Fattr%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr%2Fbuiltin.rs?ref=fb86b820bbde7772477a95e36a70f06578313de2", "patch": "@@ -12,8 +12,6 @@ use rustc_span::hygiene::Transparency;\n use rustc_span::{symbol::sym, symbol::Symbol, Span};\n use std::num::NonZeroU32;\n \n-use rustc_error_codes::*;\n-\n pub fn is_builtin_attr(attr: &Attribute) -> bool {\n     attr.is_doc_comment() || attr.ident().filter(|ident| is_builtin_attr_name(ident.name)).is_some()\n }"}]}