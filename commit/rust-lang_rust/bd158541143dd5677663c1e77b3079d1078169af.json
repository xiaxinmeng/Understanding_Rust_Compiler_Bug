{"sha": "bd158541143dd5677663c1e77b3079d1078169af", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkMTU4NTQxMTQzZGQ1Njc3NjYzYzFlNzdiMzA3OWQxMDc4MTY5YWY=", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2014-07-31T00:47:54Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-31T18:50:24Z"}, "message": "librustc: Don't ICE when trying to subst regions in destructor call.", "tree": {"sha": "aaf5e3fcc885147374693190c410c38c9f6e9c9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aaf5e3fcc885147374693190c410c38c9f6e9c9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd158541143dd5677663c1e77b3079d1078169af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd158541143dd5677663c1e77b3079d1078169af", "html_url": "https://github.com/rust-lang/rust/commit/bd158541143dd5677663c1e77b3079d1078169af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd158541143dd5677663c1e77b3079d1078169af/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd08d5fb2e4a466336419ad03501c85399e72429", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd08d5fb2e4a466336419ad03501c85399e72429", "html_url": "https://github.com/rust-lang/rust/commit/fd08d5fb2e4a466336419ad03501c85399e72429"}], "stats": {"total": 54, "additions": 52, "deletions": 2}, "files": [{"sha": "673872103af60977c3ea6dfa76ed81201f03a21a", "filename": "src/librustc/middle/subst.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bd158541143dd5677663c1e77b3079d1078169af/src%2Flibrustc%2Fmiddle%2Fsubst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd158541143dd5677663c1e77b3079d1078169af/src%2Flibrustc%2Fmiddle%2Fsubst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fsubst.rs?ref=bd158541143dd5677663c1e77b3079d1078169af", "patch": "@@ -584,9 +584,11 @@ impl<'a> TypeFolder for SubstFolder<'a> {\n                                 self.tcx().sess.span_bug(\n                                     span,\n                                     format!(\"Type parameter out of range \\\n-                                     when substituting in region {} (root type={})\",\n+                                     when substituting in region {} (root type={}) \\\n+                                     (space={}, index={})\",\n                                     region_name.as_str(),\n-                                    self.root_ty.repr(self.tcx())).as_slice());\n+                                    self.root_ty.repr(self.tcx()),\n+                                    space, i).as_slice());\n                             }\n                         }\n                 }"}, {"sha": "f1e84b8da8105b17a008586050efb6d898a173ee", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bd158541143dd5677663c1e77b3079d1078169af/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd158541143dd5677663c1e77b3079d1078169af/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=bd158541143dd5677663c1e77b3079d1078169af", "patch": "@@ -485,6 +485,9 @@ pub fn get_res_dtor(ccx: &CrateContext,\n     if !substs.types.is_empty() {\n         assert_eq!(did.krate, ast::LOCAL_CRATE);\n \n+        // Since we're in trans we don't care for any region parameters\n+        let ref substs = subst::Substs::erased(substs.types.clone());\n+\n         let vtables = typeck::check::vtable::trans_resolve_method(ccx.tcx(), did.node, substs);\n         let (val, _) = monomorphize::monomorphic_fn(ccx, did, substs, vtables, None);\n "}, {"sha": "c75c672546125bbbbef280a344252e4cb2d45b7f", "filename": "src/test/run-pass/issue-15858.rs", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/bd158541143dd5677663c1e77b3079d1078169af/src%2Ftest%2Frun-pass%2Fissue-15858.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd158541143dd5677663c1e77b3079d1078169af/src%2Ftest%2Frun-pass%2Fissue-15858.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-15858.rs?ref=bd158541143dd5677663c1e77b3079d1078169af", "patch": "@@ -0,0 +1,45 @@\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(unsafe_destructor)]\n+\n+static mut DROP_RAN: bool = false;\n+\n+trait Bar<'b> {\n+    fn do_something(&mut self);\n+}\n+\n+struct BarImpl<'b>;\n+\n+impl<'b> Bar<'b> for BarImpl<'b> {\n+    fn do_something(&mut self) {}\n+}\n+\n+\n+struct Foo<B>;\n+\n+#[unsafe_destructor]\n+impl<'b, B: Bar<'b>> Drop for Foo<B> {\n+    fn drop(&mut self) {\n+        unsafe {\n+            DROP_RAN = true;\n+        }\n+    }\n+}\n+\n+\n+fn main() {\n+    {\n+       let _x: Foo<BarImpl> = Foo;\n+    }\n+    unsafe {\n+        assert_eq!(DROP_RAN, true);\n+    }\n+}"}]}