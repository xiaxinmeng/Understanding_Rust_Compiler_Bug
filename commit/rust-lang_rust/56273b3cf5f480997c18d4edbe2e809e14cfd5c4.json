{"sha": "56273b3cf5f480997c18d4edbe2e809e14cfd5c4", "node_id": "C_kwDOAAsO6NoAKDU2MjczYjNjZjVmNDgwOTk3YzE4ZDRlZGJlMmU4MDllMTRjZmQ1YzQ", "commit": {"author": {"name": "David Barsky", "email": "me@davidbarsky.com", "date": "2023-03-13T17:17:17Z"}, "committer": {"name": "David Barsky", "email": "me@davidbarsky.com", "date": "2023-03-13T17:30:19Z"}, "message": "Remove `rust-analyzer/addProject` in favor of notifying r-a that configuration has changed", "tree": {"sha": "a14a3510544e58737af7db9ff452242ac3afa5e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a14a3510544e58737af7db9ff452242ac3afa5e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56273b3cf5f480997c18d4edbe2e809e14cfd5c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56273b3cf5f480997c18d4edbe2e809e14cfd5c4", "html_url": "https://github.com/rust-lang/rust/commit/56273b3cf5f480997c18d4edbe2e809e14cfd5c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56273b3cf5f480997c18d4edbe2e809e14cfd5c4/comments", "author": {"login": "davidbarsky", "id": 2067774, "node_id": "MDQ6VXNlcjIwNjc3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2067774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidbarsky", "html_url": "https://github.com/davidbarsky", "followers_url": "https://api.github.com/users/davidbarsky/followers", "following_url": "https://api.github.com/users/davidbarsky/following{/other_user}", "gists_url": "https://api.github.com/users/davidbarsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidbarsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidbarsky/subscriptions", "organizations_url": "https://api.github.com/users/davidbarsky/orgs", "repos_url": "https://api.github.com/users/davidbarsky/repos", "events_url": "https://api.github.com/users/davidbarsky/events{/privacy}", "received_events_url": "https://api.github.com/users/davidbarsky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidbarsky", "id": 2067774, "node_id": "MDQ6VXNlcjIwNjc3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2067774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidbarsky", "html_url": "https://github.com/davidbarsky", "followers_url": "https://api.github.com/users/davidbarsky/followers", "following_url": "https://api.github.com/users/davidbarsky/following{/other_user}", "gists_url": "https://api.github.com/users/davidbarsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidbarsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidbarsky/subscriptions", "organizations_url": "https://api.github.com/users/davidbarsky/orgs", "repos_url": "https://api.github.com/users/davidbarsky/repos", "events_url": "https://api.github.com/users/davidbarsky/events{/privacy}", "received_events_url": "https://api.github.com/users/davidbarsky/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d9bff0c74518d514d59a1638e4717f14caa1d71", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d9bff0c74518d514d59a1638e4717f14caa1d71", "html_url": "https://github.com/rust-lang/rust/commit/8d9bff0c74518d514d59a1638e4717f14caa1d71"}], "stats": {"total": 73, "additions": 8, "deletions": 65}, "files": [{"sha": "c134b78ab3a2e09e5e18f654f8ab8c55a9c6b233", "filename": "crates/project-model/src/cfg_flag.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/56273b3cf5f480997c18d4edbe2e809e14cfd5c4/crates%2Fproject-model%2Fsrc%2Fcfg_flag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56273b3cf5f480997c18d4edbe2e809e14cfd5c4/crates%2Fproject-model%2Fsrc%2Fcfg_flag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Fsrc%2Fcfg_flag.rs?ref=56273b3cf5f480997c18d4edbe2e809e14cfd5c4", "patch": "@@ -4,7 +4,6 @@\n use std::{fmt, str::FromStr};\n \n use cfg::CfgOptions;\n-use serde::Serialize;\n \n #[derive(Clone, Eq, PartialEq, Debug)]\n pub enum CfgFlag {\n@@ -39,18 +38,6 @@ impl<'de> serde::Deserialize<'de> for CfgFlag {\n     }\n }\n \n-impl Serialize for CfgFlag {\n-    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>\n-    where\n-        S: serde::Serializer,\n-    {\n-        match self {\n-            CfgFlag::Atom(s) => serializer.serialize_str(s),\n-            CfgFlag::KeyValue { .. } => serializer.serialize_str(&format!(\"{}\", &self)),\n-        }\n-    }\n-}\n-\n impl Extend<CfgFlag> for CfgOptions {\n     fn extend<T: IntoIterator<Item = CfgFlag>>(&mut self, iter: T) {\n         for cfg_flag in iter {"}, {"sha": "4b2448e47f1ff09d2d61a52febf6e736b8cf7a31", "filename": "crates/project-model/src/project_json.rs", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/56273b3cf5f480997c18d4edbe2e809e14cfd5c4/crates%2Fproject-model%2Fsrc%2Fproject_json.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56273b3cf5f480997c18d4edbe2e809e14cfd5c4/crates%2Fproject-model%2Fsrc%2Fproject_json.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Fsrc%2Fproject_json.rs?ref=56273b3cf5f480997c18d4edbe2e809e14cfd5c4", "patch": "@@ -54,7 +54,7 @@ use std::path::PathBuf;\n use base_db::{CrateDisplayName, CrateId, CrateName, Dependency, Edition};\n use paths::{AbsPath, AbsPathBuf};\n use rustc_hash::FxHashMap;\n-use serde::{de, ser, Deserialize, Serialize};\n+use serde::{de, Deserialize};\n \n use crate::cfg_flag::CfgFlag;\n \n@@ -171,14 +171,14 @@ impl ProjectJson {\n     }\n }\n \n-#[derive(Serialize, Deserialize, Debug, Clone)]\n+#[derive(Deserialize, Debug, Clone)]\n pub struct ProjectJsonData {\n     sysroot: Option<PathBuf>,\n     sysroot_src: Option<PathBuf>,\n     crates: Vec<CrateData>,\n }\n \n-#[derive(Serialize, Deserialize, Debug, Clone)]\n+#[derive(Deserialize, Debug, Clone)]\n struct CrateData {\n     display_name: Option<String>,\n     root_module: PathBuf,\n@@ -200,7 +200,7 @@ struct CrateData {\n     repository: Option<String>,\n }\n \n-#[derive(Serialize, Deserialize, Debug, Clone)]\n+#[derive(Deserialize, Debug, Clone)]\n #[serde(rename = \"edition\")]\n enum EditionData {\n     #[serde(rename = \"2015\")]\n@@ -221,16 +221,16 @@ impl From<EditionData> for Edition {\n     }\n }\n \n-#[derive(Serialize, Deserialize, Debug, Clone)]\n+#[derive(Deserialize, Debug, Clone)]\n struct DepData {\n     /// Identifies a crate by position in the crates array.\n     #[serde(rename = \"crate\")]\n     krate: usize,\n-    #[serde(deserialize_with = \"deserialize_crate_name\", serialize_with = \"serialize_crate_name\")]\n+    #[serde(deserialize_with = \"deserialize_crate_name\")]\n     name: CrateName,\n }\n \n-#[derive(Serialize, Deserialize, Debug, Clone)]\n+#[derive(Deserialize, Debug, Clone)]\n struct CrateSource {\n     include_dirs: Vec<PathBuf>,\n     exclude_dirs: Vec<PathBuf>,\n@@ -243,10 +243,3 @@ where\n     let name = String::deserialize(de)?;\n     CrateName::new(&name).map_err(|err| de::Error::custom(format!(\"invalid crate name: {err:?}\")))\n }\n-\n-fn serialize_crate_name<S>(crate_name: &CrateName, serializer: S) -> Result<S::Ok, S::Error>\n-where\n-    S: ser::Serializer,\n-{\n-    crate_name.serialize(serializer)\n-}"}, {"sha": "d7fc88913241c90dc84ea5768b2e96d2894bb5d8", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/56273b3cf5f480997c18d4edbe2e809e14cfd5c4/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56273b3cf5f480997c18d4edbe2e809e14cfd5c4/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=56273b3cf5f480997c18d4edbe2e809e14cfd5c4", "patch": "@@ -5,7 +5,6 @@\n use std::{\n     io::Write as _,\n     process::{self, Stdio},\n-    sync::Arc,\n };\n \n use anyhow::Context;\n@@ -53,21 +52,6 @@ pub(crate) fn handle_workspace_reload(state: &mut GlobalState, _: ()) -> Result<\n     Ok(())\n }\n \n-pub(crate) fn handle_add_project(\n-    state: &mut GlobalState,\n-    params: lsp_ext::AddProjectParams,\n-) -> Result<()> {\n-    state.proc_macro_clients.clear();\n-    state.proc_macro_changed = false;\n-\n-    let config = Arc::make_mut(&mut state.config);\n-    config.add_linked_projects(params.project);\n-\n-    state.fetch_workspaces_queue.request_op(\"linked projects changed\".to_string());\n-    state.fetch_build_data_queue.request_op(\"linked projects changed\".to_string());\n-    Ok(())\n-}\n-\n pub(crate) fn handle_cancel_flycheck(state: &mut GlobalState, _: ()) -> Result<()> {\n     let _p = profile::span(\"handle_stop_flycheck\");\n     state.flycheck.iter().for_each(|flycheck| flycheck.cancel());"}, {"sha": "c7b513db981ea1607d23ae3ce9e8e54190fdb0b0", "filename": "crates/rust-analyzer/src/lsp_ext.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/56273b3cf5f480997c18d4edbe2e809e14cfd5c4/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56273b3cf5f480997c18d4edbe2e809e14cfd5c4/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs?ref=56273b3cf5f480997c18d4edbe2e809e14cfd5c4", "patch": "@@ -9,7 +9,6 @@ use lsp_types::{\n     notification::Notification, CodeActionKind, DocumentOnTypeFormattingParams,\n     PartialResultParams, Position, Range, TextDocumentIdentifier, WorkDoneProgressParams,\n };\n-use project_model::ProjectJsonData;\n use serde::{Deserialize, Serialize};\n \n use crate::line_index::PositionEncoding;\n@@ -52,20 +51,6 @@ impl Request for ReloadWorkspace {\n     const METHOD: &'static str = \"rust-analyzer/reloadWorkspace\";\n }\n \n-pub enum AddProject {}\n-\n-impl Request for AddProject {\n-    type Params = AddProjectParams;\n-    type Result = ();\n-    const METHOD: &'static str = \"rust-analyzer/addProject\";\n-}\n-\n-#[derive(Serialize, Deserialize, Debug)]\n-#[serde(rename_all = \"camelCase\")]\n-pub struct AddProjectParams {\n-    pub project: Vec<ProjectJsonData>,\n-}\n-\n pub enum SyntaxTree {}\n \n impl Request for SyntaxTree {"}, {"sha": "dd0804b4398a9599eeb21e146eb79f8f5536fdd2", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/56273b3cf5f480997c18d4edbe2e809e14cfd5c4/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56273b3cf5f480997c18d4edbe2e809e14cfd5c4/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=56273b3cf5f480997c18d4edbe2e809e14cfd5c4", "patch": "@@ -625,7 +625,6 @@ impl GlobalState {\n             .on_sync_mut::<lsp_ext::ReloadWorkspace>(handlers::handle_workspace_reload)\n             .on_sync_mut::<lsp_ext::MemoryUsage>(handlers::handle_memory_usage)\n             .on_sync_mut::<lsp_ext::ShuffleCrateGraph>(handlers::handle_shuffle_crate_graph)\n-            .on_sync_mut::<lsp_ext::AddProject>(handlers::handle_add_project)\n             .on_sync::<lsp_ext::JoinLines>(handlers::handle_join_lines)\n             .on_sync::<lsp_ext::OnEnter>(handlers::handle_on_enter)\n             .on_sync::<lsp_types::request::SelectionRangeRequest>(handlers::handle_selection_range)"}, {"sha": "03f5d430519f5154026b063da26883dac0d1aeb5", "filename": "editors/code/src/client.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56273b3cf5f480997c18d4edbe2e809e14cfd5c4/editors%2Fcode%2Fsrc%2Fclient.ts", "raw_url": "https://github.com/rust-lang/rust/raw/56273b3cf5f480997c18d4edbe2e809e14cfd5c4/editors%2Fcode%2Fsrc%2Fclient.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fclient.ts?ref=56273b3cf5f480997c18d4edbe2e809e14cfd5c4", "patch": "@@ -3,7 +3,7 @@ import * as lc from \"vscode-languageclient/node\";\n import * as vscode from \"vscode\";\n import * as ra from \"../src/lsp_ext\";\n import * as Is from \"vscode-languageclient/lib/common/utils/is\";\n-import { assert, log } from \"./util\";\n+import { assert } from \"./util\";\n import * as diagnostics from \"./diagnostics\";\n import { WorkspaceEdit } from \"vscode\";\n import { Config, prepareVSCodeConfig } from \"./config\";"}, {"sha": "872d7199b838a9926ee529a329f650d6938ba6f0", "filename": "editors/code/src/lsp_ext.ts", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/56273b3cf5f480997c18d4edbe2e809e14cfd5c4/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "raw_url": "https://github.com/rust-lang/rust/raw/56273b3cf5f480997c18d4edbe2e809e14cfd5c4/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Flsp_ext.ts?ref=56273b3cf5f480997c18d4edbe2e809e14cfd5c4", "patch": "@@ -43,9 +43,6 @@ export const relatedTests = new lc.RequestType<lc.TextDocumentPositionParams, Te\n     \"rust-analyzer/relatedTests\"\n );\n export const reloadWorkspace = new lc.RequestType0<null, void>(\"rust-analyzer/reloadWorkspace\");\n-export const addProject = new lc.RequestType<AddProjectParams, string, void>(\n-    \"rust-analyzer/addProject\"\n-);\n \n export const runFlycheck = new lc.NotificationType<{\n     textDocument: lc.TextDocumentIdentifier | null;\n@@ -72,8 +69,6 @@ export const viewItemTree = new lc.RequestType<ViewItemTreeParams, string, void>\n \n export type AnalyzerStatusParams = { textDocument?: lc.TextDocumentIdentifier };\n \n-export type AddProjectParams = { project: JsonProject[] };\n-\n export type ExpandMacroParams = {\n     textDocument: lc.TextDocumentIdentifier;\n     position: lc.Position;"}]}