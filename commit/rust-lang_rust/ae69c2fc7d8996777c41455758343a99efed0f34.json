{"sha": "ae69c2fc7d8996777c41455758343a99efed0f34", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlNjljMmZjN2Q4OTk2Nzc3YzQxNDU1NzU4MzQzYTk5ZWZlZDBmMzQ=", "commit": {"author": {"name": "Peter Williams", "email": "peter@newton.cx", "date": "2013-01-02T05:13:33Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-01-02T23:33:13Z"}, "message": "std: Constify the bytes sent to Sha1::input\n\nWe are of course never going to modify the data, and this change allows us to\naccept data from to_bytes::IterBytes types.", "tree": {"sha": "7428e9769f117a12e5c4ab7d2243636e61dcdd61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7428e9769f117a12e5c4ab7d2243636e61dcdd61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae69c2fc7d8996777c41455758343a99efed0f34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae69c2fc7d8996777c41455758343a99efed0f34", "html_url": "https://github.com/rust-lang/rust/commit/ae69c2fc7d8996777c41455758343a99efed0f34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae69c2fc7d8996777c41455758343a99efed0f34/comments", "author": {"login": "pkgw", "id": 59598, "node_id": "MDQ6VXNlcjU5NTk4", "avatar_url": "https://avatars.githubusercontent.com/u/59598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pkgw", "html_url": "https://github.com/pkgw", "followers_url": "https://api.github.com/users/pkgw/followers", "following_url": "https://api.github.com/users/pkgw/following{/other_user}", "gists_url": "https://api.github.com/users/pkgw/gists{/gist_id}", "starred_url": "https://api.github.com/users/pkgw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pkgw/subscriptions", "organizations_url": "https://api.github.com/users/pkgw/orgs", "repos_url": "https://api.github.com/users/pkgw/repos", "events_url": "https://api.github.com/users/pkgw/events{/privacy}", "received_events_url": "https://api.github.com/users/pkgw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "392708e3b153eb9f7cd3bf10d1658c76b49632a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/392708e3b153eb9f7cd3bf10d1658c76b49632a7", "html_url": "https://github.com/rust-lang/rust/commit/392708e3b153eb9f7cd3bf10d1658c76b49632a7"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "70aaf4f3f8cb86273050ce6325e5453e96c68951", "filename": "src/libstd/sha1.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ae69c2fc7d8996777c41455758343a99efed0f34/src%2Flibstd%2Fsha1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae69c2fc7d8996777c41455758343a99efed0f34/src%2Flibstd%2Fsha1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsha1.rs?ref=ae69c2fc7d8996777c41455758343a99efed0f34", "patch": "@@ -37,7 +37,7 @@ use core::vec;\n /// The SHA-1 interface\n trait Sha1 {\n     /// Provide message input as bytes\n-    fn input((&[u8]));\n+    fn input((&[const u8]));\n     /// Provide message input as string\n     fn input_str((&str));\n     /**\n@@ -75,9 +75,9 @@ pub fn sha1() -> Sha1 {\n          mut computed: bool,\n          work_buf: @~[mut u32]};\n \n-    fn add_input(st: &Sha1State, msg: &[u8]) {\n+    fn add_input(st: &Sha1State, msg: &[const u8]) {\n         assert (!st.computed);\n-        for vec::each(msg) |element| {\n+        for vec::each_const(msg) |element| {\n             st.msg_block[st.msg_block_idx] = *element;\n             st.msg_block_idx += 1u;\n             st.len_low += 8u32;\n@@ -243,7 +243,7 @@ pub fn sha1() -> Sha1 {\n             self.h[4] = 0xC3D2E1F0u32;\n             self.computed = false;\n         }\n-        fn input(msg: &[u8]) { add_input(&self, msg); }\n+        fn input(msg: &[const u8]) { add_input(&self, msg); }\n         fn input_str(msg: &str) {\n             let bs = str::to_bytes(msg);\n             add_input(&self, bs);"}]}