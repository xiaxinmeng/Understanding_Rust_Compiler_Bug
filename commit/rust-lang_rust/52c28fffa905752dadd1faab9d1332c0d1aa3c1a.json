{"sha": "52c28fffa905752dadd1faab9d1332c0d1aa3c1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyYzI4ZmZmYTkwNTc1MmRhZGQxZmFhYjlkMTMzMmMwZDFhYTNjMWE=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2017-12-20T16:29:32Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2017-12-20T16:29:32Z"}, "message": "Clarify vec docs on deallocation (fixes #46879)", "tree": {"sha": "7cdbd94fb8c90d484949c4e29382e9ae7d1a2fa3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7cdbd94fb8c90d484949c4e29382e9ae7d1a2fa3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52c28fffa905752dadd1faab9d1332c0d1aa3c1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52c28fffa905752dadd1faab9d1332c0d1aa3c1a", "html_url": "https://github.com/rust-lang/rust/commit/52c28fffa905752dadd1faab9d1332c0d1aa3c1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52c28fffa905752dadd1faab9d1332c0d1aa3c1a/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df8dfdeff68e60a68d026a3374cfb8159d0495cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/df8dfdeff68e60a68d026a3374cfb8159d0495cb", "html_url": "https://github.com/rust-lang/rust/commit/df8dfdeff68e60a68d026a3374cfb8159d0495cb"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "93d7e66b7b203b32e088581d1b02c747e93b2f6f", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/52c28fffa905752dadd1faab9d1332c0d1aa3c1a/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52c28fffa905752dadd1faab9d1332c0d1aa3c1a/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=52c28fffa905752dadd1faab9d1332c0d1aa3c1a", "patch": "@@ -224,8 +224,10 @@ use Bound::{Excluded, Included, Unbounded};\n /// types inside a `Vec`, it will not allocate space for them. *Note that in this case\n /// the `Vec` may not report a [`capacity`] of 0*. `Vec` will allocate if and only\n /// if [`mem::size_of::<T>`]`() * capacity() > 0`. In general, `Vec`'s allocation\n-/// details are subtle enough that it is strongly recommended that you only\n-/// free memory allocated by a `Vec` by creating a new `Vec` and dropping it.\n+/// details are very subtle &mdash; if you intend to allocate memory using a `Vec`\n+/// and use it for something else (either to pass to unsafe code, or to build your\n+/// own memory-backed collection), be sure to deallocate this memory by using\n+/// `from_raw_parts` to recover the `Vec` and then dropping it.\n ///\n /// If a `Vec` *has* allocated memory, then the memory it points to is on the heap\n /// (as defined by the allocator Rust is configured to use by default), and its"}]}