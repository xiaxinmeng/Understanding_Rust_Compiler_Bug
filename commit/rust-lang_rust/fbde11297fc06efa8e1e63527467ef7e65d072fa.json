{"sha": "fbde11297fc06efa8e1e63527467ef7e65d072fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiZGUxMTI5N2ZjMDZlZmE4ZTFlNjM1Mjc0NjdlZjdlNjVkMDcyZmE=", "commit": {"author": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2014-11-24T11:46:02Z"}, "committer": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2014-11-25T09:25:14Z"}, "message": "Allow constant struct fields and tuple indexing", "tree": {"sha": "7e21c01f151b5352102fc4d0acfa3af3e274c267", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e21c01f151b5352102fc4d0acfa3af3e274c267"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fbde11297fc06efa8e1e63527467ef7e65d072fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fbde11297fc06efa8e1e63527467ef7e65d072fa", "html_url": "https://github.com/rust-lang/rust/commit/fbde11297fc06efa8e1e63527467ef7e65d072fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fbde11297fc06efa8e1e63527467ef7e65d072fa/comments", "author": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c637cab85323c97be37d0c12bfa0fc0e9ea2c367", "url": "https://api.github.com/repos/rust-lang/rust/commits/c637cab85323c97be37d0c12bfa0fc0e9ea2c367", "html_url": "https://github.com/rust-lang/rust/commit/c637cab85323c97be37d0c12bfa0fc0e9ea2c367"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "7afbf9223514769044731ca44b82639b91a5c0b1", "filename": "src/librustc/middle/const_eval.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/fbde11297fc06efa8e1e63527467ef7e65d072fa/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbde11297fc06efa8e1e63527467ef7e65d072fa/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs?ref=fbde11297fc06efa8e1e63527467ef7e65d072fa", "patch": "@@ -567,6 +567,34 @@ pub fn eval_const_expr_partial(tcx: &ty::ctxt, e: &Expr) -> Result<const_val, St\n             None => Ok(const_int(0i64))\n         }\n       }\n+      ast::ExprTupField(ref base, index) => {\n+        // Get the base tuple if it is constant\n+        if let Some(&ast::ExprTup(ref fields)) = lookup_const(tcx, &**base).map(|s| &s.node) {\n+            // Check that the given index is within bounds and evaluate its value\n+            if fields.len() > index.node {\n+                return eval_const_expr_partial(tcx, &*fields[index.node])\n+            } else {\n+                return Err(\"tuple index out of bounds\".to_string())\n+            }\n+        }\n+\n+        Err(\"non-constant struct in constant expr\".to_string())\n+      }\n+      ast::ExprField(ref base, field_name) => {\n+        // Get the base expression if it is a struct and it is constant\n+        if let Some(&ast::ExprStruct(_, ref fields, _)) = lookup_const(tcx, &**base)\n+                                                            .map(|s| &s.node) {\n+            // Check that the given field exists and evaluate it\n+            if let Some(f) = fields.iter().find(|f|\n+                                           f.ident.node.as_str() == field_name.node.as_str()) {\n+                return eval_const_expr_partial(tcx, &*f.expr)\n+            } else {\n+                return Err(\"nonexistent struct field\".to_string())\n+            }\n+        }\n+\n+        Err(\"non-constant struct in constant expr\".to_string())\n+      }\n       _ => Err(\"unsupported constant expr\".to_string())\n     }\n }"}]}