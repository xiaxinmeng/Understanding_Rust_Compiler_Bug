{"sha": "3caa17b468e50c885f56e7872200e9a76815462b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjYWExN2I0NjhlNTBjODg1ZjU2ZTc4NzIyMDBlOWE3NjgxNTQ2MmI=", "commit": {"author": {"name": "Charles Gleason", "email": "36055314+crgl@users.noreply.github.com", "date": "2020-01-28T16:27:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-28T16:27:31Z"}, "message": "Format safety comment as per tidy\n\nCo-Authored-By: Ashley Mannix <ashleymannix@live.com.au>", "tree": {"sha": "4cf4d7a8e304fbb0411a5aaac0576740e8c75f76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4cf4d7a8e304fbb0411a5aaac0576740e8c75f76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3caa17b468e50c885f56e7872200e9a76815462b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeMGD0CRBK7hj4Ov3rIwAAdHIIAKcfB/oyw0Ic7XOSCae5F4nI\nZcNTebEK0MZRjoHUIJKiSknMAjO/n8uJW426ufVfOCYX2xPbH2cAWskj2ZfI+Uks\n4Oey4buGh48rGAaml0gr3ABbttguUkv93k0wVHOGl45L/hL1f67ovWWPGT0u+S08\nCRxnp+1CnILp93m3q7gMYoP8X3ueLhxCNAk0k9uvavX83GcJjQj4Tr8ZM0dM/B0M\nJexM9YH7iJ8bj7uMa4IVnMfEbNtTIPiBAC4N/+0HuJoZLPg7GnW1x/fI2mbcKr0S\njPGqgTyl1dWXSglGt47yJcMHt0BwZYztpnfCI99L/fp1AdLzUDfkA6s+N7QsFos=\n=tCds\n-----END PGP SIGNATURE-----\n", "payload": "tree 4cf4d7a8e304fbb0411a5aaac0576740e8c75f76\nparent 8651aa066fdbbcfaa082531969469c3fa289de9e\nauthor Charles Gleason <36055314+crgl@users.noreply.github.com> 1580228851 -0500\ncommitter GitHub <noreply@github.com> 1580228851 -0500\n\nFormat safety comment as per tidy\n\nCo-Authored-By: Ashley Mannix <ashleymannix@live.com.au>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3caa17b468e50c885f56e7872200e9a76815462b", "html_url": "https://github.com/rust-lang/rust/commit/3caa17b468e50c885f56e7872200e9a76815462b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3caa17b468e50c885f56e7872200e9a76815462b/comments", "author": {"login": "crgl", "id": 36055314, "node_id": "MDQ6VXNlcjM2MDU1MzE0", "avatar_url": "https://avatars.githubusercontent.com/u/36055314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crgl", "html_url": "https://github.com/crgl", "followers_url": "https://api.github.com/users/crgl/followers", "following_url": "https://api.github.com/users/crgl/following{/other_user}", "gists_url": "https://api.github.com/users/crgl/gists{/gist_id}", "starred_url": "https://api.github.com/users/crgl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crgl/subscriptions", "organizations_url": "https://api.github.com/users/crgl/orgs", "repos_url": "https://api.github.com/users/crgl/repos", "events_url": "https://api.github.com/users/crgl/events{/privacy}", "received_events_url": "https://api.github.com/users/crgl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8651aa066fdbbcfaa082531969469c3fa289de9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8651aa066fdbbcfaa082531969469c3fa289de9e", "html_url": "https://github.com/rust-lang/rust/commit/8651aa066fdbbcfaa082531969469c3fa289de9e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "58cb561938acc4d42b91cfad6658bce4f9e12e36", "filename": "src/liballoc/collections/btree/map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3caa17b468e50c885f56e7872200e9a76815462b/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3caa17b468e50c885f56e7872200e9a76815462b/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs?ref=3caa17b468e50c885f56e7872200e9a76815462b", "patch": "@@ -249,7 +249,7 @@ impl<K: Clone + Ord, V: Clone> BTreeClone for BTreeMap<K, V> {\n         // the BTree invariants are maintained at the end of the loop\n         while siter.front != siter.back {\n             if let Some((ok, ov)) = oiter.next() {\n-                // This is safe because the `siter.front != siter.back` check\n+                // SAFETY: This is safe because the `siter.front != siter.back` check\n                 // ensures that `siter` is nonempty\n                 let (sk, sv) = unsafe { siter.next_unchecked() };\n                 sk.clone_from(ok);"}]}