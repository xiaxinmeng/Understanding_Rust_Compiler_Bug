{"sha": "b1ee6d17a4af6a2fcbaeb0b98965cd610c7b1b72", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxZWU2ZDE3YTRhZjZhMmZjYmFlYjBiOTg5NjVjZDYxMGM3YjFiNzI=", "commit": {"author": {"name": "adamrk", "email": "ark.email@gmail.com", "date": "2020-02-25T22:53:29Z"}, "committer": {"name": "adamrk", "email": "ark.email@gmail.com", "date": "2020-02-25T22:53:29Z"}, "message": "get matches from code.descendants", "tree": {"sha": "d2ad0892ee59714219f25564544e8f79c2f903e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2ad0892ee59714219f25564544e8f79c2f903e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1ee6d17a4af6a2fcbaeb0b98965cd610c7b1b72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1ee6d17a4af6a2fcbaeb0b98965cd610c7b1b72", "html_url": "https://github.com/rust-lang/rust/commit/b1ee6d17a4af6a2fcbaeb0b98965cd610c7b1b72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1ee6d17a4af6a2fcbaeb0b98965cd610c7b1b72/comments", "author": {"login": "adamrk", "id": 16367467, "node_id": "MDQ6VXNlcjE2MzY3NDY3", "avatar_url": "https://avatars.githubusercontent.com/u/16367467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamrk", "html_url": "https://github.com/adamrk", "followers_url": "https://api.github.com/users/adamrk/followers", "following_url": "https://api.github.com/users/adamrk/following{/other_user}", "gists_url": "https://api.github.com/users/adamrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamrk/subscriptions", "organizations_url": "https://api.github.com/users/adamrk/orgs", "repos_url": "https://api.github.com/users/adamrk/repos", "events_url": "https://api.github.com/users/adamrk/events{/privacy}", "received_events_url": "https://api.github.com/users/adamrk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "adamrk", "id": 16367467, "node_id": "MDQ6VXNlcjE2MzY3NDY3", "avatar_url": "https://avatars.githubusercontent.com/u/16367467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamrk", "html_url": "https://github.com/adamrk", "followers_url": "https://api.github.com/users/adamrk/followers", "following_url": "https://api.github.com/users/adamrk/following{/other_user}", "gists_url": "https://api.github.com/users/adamrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamrk/subscriptions", "organizations_url": "https://api.github.com/users/adamrk/orgs", "repos_url": "https://api.github.com/users/adamrk/repos", "events_url": "https://api.github.com/users/adamrk/events{/privacy}", "received_events_url": "https://api.github.com/users/adamrk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94603d984808f140931fe517d500bc61d871ea24", "url": "https://api.github.com/repos/rust-lang/rust/commits/94603d984808f140931fe517d500bc61d871ea24", "html_url": "https://github.com/rust-lang/rust/commit/94603d984808f140931fe517d500bc61d871ea24"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "c011a2e74f3c41f2a5aecc24a50261ad78821d2a", "filename": "crates/ra_ide/src/ssr.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b1ee6d17a4af6a2fcbaeb0b98965cd610c7b1b72/crates%2Fra_ide%2Fsrc%2Fssr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1ee6d17a4af6a2fcbaeb0b98965cd610c7b1b72/crates%2Fra_ide%2Fsrc%2Fssr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fssr.rs?ref=b1ee6d17a4af6a2fcbaeb0b98965cd610c7b1b72", "patch": "@@ -223,15 +223,17 @@ fn find(pattern: &SsrPattern, code: &SyntaxNode) -> SsrMatches {\n     }\n     let kind = pattern.pattern.kind();\n     let matches = code\n-        .descendants_with_tokens()\n+        .descendants()\n         .filter(|n| n.kind() == kind)\n         .filter_map(|code| {\n-            let match_ = Match {\n-                place: code.as_node().unwrap().clone(),\n-                binding: HashMap::new(),\n-                ignored_comments: vec![],\n-            };\n-            check(&SyntaxElement::from(pattern.pattern.clone()), &code, &pattern.vars, match_)\n+            let match_ =\n+                Match { place: code.clone(), binding: HashMap::new(), ignored_comments: vec![] };\n+            check(\n+                &SyntaxElement::from(pattern.pattern.clone()),\n+                &SyntaxElement::from(code),\n+                &pattern.vars,\n+                match_,\n+            )\n         })\n         .collect();\n     SsrMatches { matches }"}]}