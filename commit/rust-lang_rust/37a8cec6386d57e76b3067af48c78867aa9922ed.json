{"sha": "37a8cec6386d57e76b3067af48c78867aa9922ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3YThjZWM2Mzg2ZDU3ZTc2YjMwNjdhZjQ4Yzc4ODY3YWE5OTIyZWQ=", "commit": {"author": {"name": "Vladyslav Katasonov", "email": "cpud47@gmail.com", "date": "2021-02-13T18:46:21Z"}, "committer": {"name": "Vladyslav Katasonov", "email": "cpud47@gmail.com", "date": "2021-02-13T19:04:52Z"}, "message": "expose hir::Type::type_paramters\n\nUsed to get E parameter from `Result<T, E>`", "tree": {"sha": "3e5a3046b345a1586132dd8b70f91c84da5e5951", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e5a3046b345a1586132dd8b70f91c84da5e5951"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37a8cec6386d57e76b3067af48c78867aa9922ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37a8cec6386d57e76b3067af48c78867aa9922ed", "html_url": "https://github.com/rust-lang/rust/commit/37a8cec6386d57e76b3067af48c78867aa9922ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37a8cec6386d57e76b3067af48c78867aa9922ed/comments", "author": {"login": "cpud36", "id": 4218373, "node_id": "MDQ6VXNlcjQyMTgzNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/4218373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpud36", "html_url": "https://github.com/cpud36", "followers_url": "https://api.github.com/users/cpud36/followers", "following_url": "https://api.github.com/users/cpud36/following{/other_user}", "gists_url": "https://api.github.com/users/cpud36/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpud36/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpud36/subscriptions", "organizations_url": "https://api.github.com/users/cpud36/orgs", "repos_url": "https://api.github.com/users/cpud36/repos", "events_url": "https://api.github.com/users/cpud36/events{/privacy}", "received_events_url": "https://api.github.com/users/cpud36/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cpud36", "id": 4218373, "node_id": "MDQ6VXNlcjQyMTgzNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/4218373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpud36", "html_url": "https://github.com/cpud36", "followers_url": "https://api.github.com/users/cpud36/followers", "following_url": "https://api.github.com/users/cpud36/following{/other_user}", "gists_url": "https://api.github.com/users/cpud36/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpud36/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpud36/subscriptions", "organizations_url": "https://api.github.com/users/cpud36/orgs", "repos_url": "https://api.github.com/users/cpud36/repos", "events_url": "https://api.github.com/users/cpud36/events{/privacy}", "received_events_url": "https://api.github.com/users/cpud36/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4be260d693babea7d32fead0ca10762a64557aaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/4be260d693babea7d32fead0ca10762a64557aaf", "html_url": "https://github.com/rust-lang/rust/commit/4be260d693babea7d32fead0ca10762a64557aaf"}], "stats": {"total": 41, "additions": 17, "deletions": 24}, "files": [{"sha": "9f34cc7250fbc0b4bc6e4d0194f4b6d69d98f144", "filename": "crates/assists/src/handlers/extract_function.rs", "status": "modified", "additions": 5, "deletions": 24, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/37a8cec6386d57e76b3067af48c78867aa9922ed/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37a8cec6386d57e76b3067af48c78867aa9922ed/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_function.rs?ref=37a8cec6386d57e76b3067af48c78867aa9922ed", "patch": "@@ -1131,8 +1131,11 @@ fn make_ret_ty(ctx: &AssistContext, module: hir::Module, fun: &Function) -> Opti\n             make::ty_generic(make::name_ref(\"Option\"), iter::once(fun_ty.make_ty(ctx, module)))\n         }\n         FlowHandler::Try { kind: TryKind::Result { ty: parent_ret_ty } } => {\n-            let handler_ty =\n-                result_err_ty(parent_ret_ty, ctx, module).unwrap_or_else(make::ty_unit);\n+            let handler_ty = parent_ret_ty\n+                .type_parameters()\n+                .nth(1)\n+                .map(|ty| make_ty(&ty, ctx, module))\n+                .unwrap_or_else(make::ty_unit);\n             make::ty_generic(\n                 make::name_ref(\"Result\"),\n                 vec![fun_ty.make_ty(ctx, module), handler_ty],\n@@ -1161,28 +1164,6 @@ fn make_ret_ty(ctx: &AssistContext, module: hir::Module, fun: &Function) -> Opti\n     Some(make::ret_type(ret_ty))\n }\n \n-/// Extract `E` type from `Result<T, E>`\n-fn result_err_ty(\n-    parent_ret_ty: &hir::Type,\n-    ctx: &AssistContext,\n-    module: hir::Module,\n-) -> Option<ast::Type> {\n-    // FIXME: use hir to extract argument information\n-    //        currently we use `format -> take part -> parse`\n-    let path_ty = match make_ty(&parent_ret_ty, ctx, module) {\n-        ast::Type::PathType(path_ty) => path_ty,\n-        _ => return None,\n-    };\n-    let arg_list = path_ty.path()?.segment()?.generic_arg_list()?;\n-    let err_arg = arg_list.generic_args().nth(1)?;\n-    let type_arg = match err_arg {\n-        ast::GenericArg::TypeArg(type_arg) => type_arg,\n-        _ => return None,\n-    };\n-\n-    type_arg.ty()\n-}\n-\n fn make_body(\n     ctx: &AssistContext,\n     old_indent: IndentLevel,"}, {"sha": "7d43d4097191308a448c9e255c71d7f975330395", "filename": "crates/hir/src/code_model.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/37a8cec6386d57e76b3067af48c78867aa9922ed/crates%2Fhir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37a8cec6386d57e76b3067af48c78867aa9922ed/crates%2Fhir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fcode_model.rs?ref=37a8cec6386d57e76b3067af48c78867aa9922ed", "patch": "@@ -1802,6 +1802,18 @@ impl Type {\n         None\n     }\n \n+    pub fn type_parameters(&self) -> impl Iterator<Item = Type> + '_ {\n+        let ty = self.ty.value.strip_references();\n+        let substs = match ty {\n+            Ty::Apply(apply_ty) => &apply_ty.parameters,\n+            Ty::Opaque(opaque_ty) => &opaque_ty.parameters,\n+            _ => return Either::Left(iter::empty()),\n+        };\n+\n+        let iter = substs.iter().map(move |ty| self.derived(ty.clone()));\n+        Either::Right(iter)\n+    }\n+\n     pub fn iterate_method_candidates<T>(\n         &self,\n         db: &dyn HirDatabase,"}]}