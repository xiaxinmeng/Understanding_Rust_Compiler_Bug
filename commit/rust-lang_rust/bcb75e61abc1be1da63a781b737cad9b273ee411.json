{"sha": "bcb75e61abc1be1da63a781b737cad9b273ee411", "node_id": "C_kwDOAAsO6NoAKGJjYjc1ZTYxYWJjMWJlMWRhNjNhNzgxYjczN2NhZDliMjczZWU0MTE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-20T07:51:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-20T07:51:14Z"}, "message": "Rollup merge of #105901 - oli-obk:no_miri_on_stable, r=Mark-Simulacrum\n\nDon't panic on stable since miri is not available there\n\nfixes #105816", "tree": {"sha": "cc10fee72550c017bd59b6d4d36b1079d57ca082", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc10fee72550c017bd59b6d4d36b1079d57ca082"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bcb75e61abc1be1da63a781b737cad9b273ee411", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjoWlyCRBK7hj4Ov3rIwAAkTwIAB80j1/AWSygsgt/JqHHuJ1M\nz2L8kr+ek1hL6j1IKaGeVTWPsTNIiuBwdCU+7cWioineJXwsReNV80uVLzLGygKP\nh45Q5r6gOg5B20wUtRfNwkzqPG7+5zpCOC5BepR+//fZf/6HJE/J+6wm4hjweMyK\niXMYXTfqhGs7fnJp1RwvSLSYhdMd5pLNLRKTE5o3J6sMWk69bepd4blVmAX4A127\nV9u8YRzNthp3TXLjz7sGxljGT9fxa5B/sTbdGR/CFSB6DRLw/jWg4uVwvrWJD6xE\npKRtrMZ8Gu52YejKn5gWWpnSCFoWgt/DZkO6NnJcSTKislzQ8WHoaWHXNWkzays=\n=eQMd\n-----END PGP SIGNATURE-----\n", "payload": "tree cc10fee72550c017bd59b6d4d36b1079d57ca082\nparent 7f42e58effa3871dda6a41e250dea60cf88868ca\nparent e5c92bc2b6f0bd69856ad3c4d3056c7f0c0ad72d\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1671522674 +0100\ncommitter GitHub <noreply@github.com> 1671522674 +0100\n\nRollup merge of #105901 - oli-obk:no_miri_on_stable, r=Mark-Simulacrum\n\nDon't panic on stable since miri is not available there\n\nfixes #105816\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bcb75e61abc1be1da63a781b737cad9b273ee411", "html_url": "https://github.com/rust-lang/rust/commit/bcb75e61abc1be1da63a781b737cad9b273ee411", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bcb75e61abc1be1da63a781b737cad9b273ee411/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f42e58effa3871dda6a41e250dea60cf88868ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f42e58effa3871dda6a41e250dea60cf88868ca", "html_url": "https://github.com/rust-lang/rust/commit/7f42e58effa3871dda6a41e250dea60cf88868ca"}, {"sha": "e5c92bc2b6f0bd69856ad3c4d3056c7f0c0ad72d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5c92bc2b6f0bd69856ad3c4d3056c7f0c0ad72d", "html_url": "https://github.com/rust-lang/rust/commit/e5c92bc2b6f0bd69856ad3c4d3056c7f0c0ad72d"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "1815a0973072bd741e4699332268aa3c7ce77f5b", "filename": "src/bootstrap/install.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bcb75e61abc1be1da63a781b737cad9b273ee411/src%2Fbootstrap%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcb75e61abc1be1da63a781b737cad9b273ee411/src%2Fbootstrap%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Finstall.rs?ref=bcb75e61abc1be1da63a781b737cad9b273ee411", "patch": "@@ -200,10 +200,14 @@ install!((self, builder, _config),\n         install_sh(builder, \"clippy\", self.compiler.stage, Some(self.target), &tarball);\n     };\n     Miri, alias = \"miri\", Self::should_build(_config), only_hosts: true, {\n-        let tarball = builder\n-            .ensure(dist::Miri { compiler: self.compiler, target: self.target })\n-            .expect(\"missing miri\");\n-        install_sh(builder, \"miri\", self.compiler.stage, Some(self.target), &tarball);\n+        if let Some(tarball) = builder.ensure(dist::Miri { compiler: self.compiler, target: self.target }) {\n+            install_sh(builder, \"miri\", self.compiler.stage, Some(self.target), &tarball);\n+        } else {\n+            // Miri is only available on nightly\n+            builder.info(\n+                &format!(\"skipping Install miri stage{} ({})\", self.compiler.stage, self.target),\n+            );\n+        }\n     };\n     LlvmTools, alias = \"llvm-tools\", Self::should_build(_config), only_hosts: true, {\n         let tarball = builder"}]}