{"sha": "9fb63d5fc49c5727ebda19a29a53a88c8f034c44", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmYjYzZDVmYzQ5YzU3MjdlYmRhMTlhMjlhNTNhODhjOGYwMzRjNDQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2018-03-26T05:04:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-26T05:04:42Z"}, "message": "Merge pull request #2574 from mark-i-m/i128\n\ni128 is stabilizing", "tree": {"sha": "a357eccf4d73433e3fe2bfd0ed2b85965e20ffa4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a357eccf4d73433e3fe2bfd0ed2b85965e20ffa4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fb63d5fc49c5727ebda19a29a53a88c8f034c44", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJauH9qCRBK7hj4Ov3rIwAAdHIIACnYUIuT0lywfnqk4M47Xec2\nFW208JhiiRrvXJuEPUn4mPUEwyLdCw82k0Rwq9C2PKtGsGKxR/28eaaMyf8B1xAV\nV0/PTEzZ/rA/ntIKUAN0xbIHA5tRP0Zh7TXv0zGfq1NyErCWtqPs+U4xx7MD0MWp\n5w0TRYgk1J0QebpzDL4Xnm5dBmoJgLLFOhvZKwMowwRVPSSPBfsQd083lUu+pQ9o\nw1GR9H7obtz3H73vub86L+t2tJYprOiE4RsH3I/hTltObY/aay9DXKQZGlwECy/h\naU9vkIxePsxLmUBGyL6la2c4oXfu1j5v9NwiPivtYKh/FGPhKEgb9z3nAq9h0Iw=\n=s/5v\n-----END PGP SIGNATURE-----\n", "payload": "tree a357eccf4d73433e3fe2bfd0ed2b85965e20ffa4\nparent 2dedbdc85844e6618182deacdcfe7a4b0bcda6ab\nparent e9f6a7c72f6fccb6bd3ff7858d9cea9afcaa40d9\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1522040682 +0200\ncommitter GitHub <noreply@github.com> 1522040682 +0200\n\nMerge pull request #2574 from mark-i-m/i128\n\ni128 is stabilizing"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fb63d5fc49c5727ebda19a29a53a88c8f034c44", "html_url": "https://github.com/rust-lang/rust/commit/9fb63d5fc49c5727ebda19a29a53a88c8f034c44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fb63d5fc49c5727ebda19a29a53a88c8f034c44/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2dedbdc85844e6618182deacdcfe7a4b0bcda6ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/2dedbdc85844e6618182deacdcfe7a4b0bcda6ab", "html_url": "https://github.com/rust-lang/rust/commit/2dedbdc85844e6618182deacdcfe7a4b0bcda6ab"}, {"sha": "e9f6a7c72f6fccb6bd3ff7858d9cea9afcaa40d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9f6a7c72f6fccb6bd3ff7858d9cea9afcaa40d9", "html_url": "https://github.com/rust-lang/rust/commit/e9f6a7c72f6fccb6bd3ff7858d9cea9afcaa40d9"}], "stats": {"total": 153, "additions": 80, "deletions": 73}, "files": [{"sha": "d9a19ac1e7661a11771ec33273d7e0b54366ce6c", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9fb63d5fc49c5727ebda19a29a53a88c8f034c44/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fb63d5fc49c5727ebda19a29a53a88c8f034c44/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=9fb63d5fc49c5727ebda19a29a53a88c8f034c44", "patch": "@@ -2,8 +2,6 @@\n \n #![feature(box_syntax)]\n #![feature(custom_attribute)]\n-#![feature(i128_type)]\n-#![feature(i128)]\n #![feature(rustc_private)]\n #![feature(slice_patterns)]\n #![feature(stmt_expr_attributes)]\n@@ -13,6 +11,10 @@\n #![allow(unknown_lints, indexing_slicing, shadow_reuse, missing_docs_in_private_items)]\n #![recursion_limit = \"256\"]\n \n+// FIXME(mark-i-m) remove after i128 stablization merges\n+#![allow(stable_features)]\n+#![feature(i128, i128_type)]\n+\n #[macro_use]\n extern crate rustc;\n extern crate rustc_typeck;"}, {"sha": "4bd9c1d7caeba119c361302f1d01b4a3b7b67907", "filename": "tests/ui/replace_consts.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9fb63d5fc49c5727ebda19a29a53a88c8f034c44/tests%2Fui%2Freplace_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fb63d5fc49c5727ebda19a29a53a88c8f034c44/tests%2Fui%2Freplace_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freplace_consts.rs?ref=9fb63d5fc49c5727ebda19a29a53a88c8f034c44", "patch": "@@ -1,6 +1,11 @@\n-#![feature(integer_atomics, i128, i128_type)]\n+#![feature(integer_atomics)]\n #![allow(blacklisted_name)]\n #![deny(replace_consts)]\n+\n+// FIXME(mark-i-m) remove after i128 stablization merges\n+#![allow(stable_features)]\n+#![feature(i128, i128_type)]\n+\n use std::sync::atomic::*;\n use std::sync::{ONCE_INIT, Once};\n "}, {"sha": "571bfc6e65bd3a6df22cec259c757abc442dd7e5", "filename": "tests/ui/replace_consts.stderr", "status": "modified", "additions": 70, "deletions": 70, "changes": 140, "blob_url": "https://github.com/rust-lang/rust/blob/9fb63d5fc49c5727ebda19a29a53a88c8f034c44/tests%2Fui%2Freplace_consts.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9fb63d5fc49c5727ebda19a29a53a88c8f034c44/tests%2Fui%2Freplace_consts.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freplace_consts.stderr?ref=9fb63d5fc49c5727ebda19a29a53a88c8f034c44", "patch": "@@ -1,7 +1,7 @@\n error: using `ATOMIC_BOOL_INIT`\n-  --> $DIR/replace_consts.rs:11:17\n+  --> $DIR/replace_consts.rs:16:17\n    |\n-11 |     { let foo = ATOMIC_BOOL_INIT; };\n+16 |     { let foo = ATOMIC_BOOL_INIT; };\n    |                 ^^^^^^^^^^^^^^^^ help: try this: `AtomicBool::new(false)`\n    |\n note: lint level defined here\n@@ -11,207 +11,207 @@ note: lint level defined here\n    |         ^^^^^^^^^^^^^^\n \n error: using `ATOMIC_ISIZE_INIT`\n-  --> $DIR/replace_consts.rs:12:17\n+  --> $DIR/replace_consts.rs:17:17\n    |\n-12 |     { let foo = ATOMIC_ISIZE_INIT; };\n+17 |     { let foo = ATOMIC_ISIZE_INIT; };\n    |                 ^^^^^^^^^^^^^^^^^ help: try this: `AtomicIsize::new(0)`\n \n error: using `ATOMIC_I8_INIT`\n-  --> $DIR/replace_consts.rs:13:17\n+  --> $DIR/replace_consts.rs:18:17\n    |\n-13 |     { let foo = ATOMIC_I8_INIT; };\n+18 |     { let foo = ATOMIC_I8_INIT; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `AtomicI8::new(0)`\n \n error: using `ATOMIC_I16_INIT`\n-  --> $DIR/replace_consts.rs:14:17\n+  --> $DIR/replace_consts.rs:19:17\n    |\n-14 |     { let foo = ATOMIC_I16_INIT; };\n+19 |     { let foo = ATOMIC_I16_INIT; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `AtomicI16::new(0)`\n \n error: using `ATOMIC_I32_INIT`\n-  --> $DIR/replace_consts.rs:15:17\n+  --> $DIR/replace_consts.rs:20:17\n    |\n-15 |     { let foo = ATOMIC_I32_INIT; };\n+20 |     { let foo = ATOMIC_I32_INIT; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `AtomicI32::new(0)`\n \n error: using `ATOMIC_I64_INIT`\n-  --> $DIR/replace_consts.rs:16:17\n+  --> $DIR/replace_consts.rs:21:17\n    |\n-16 |     { let foo = ATOMIC_I64_INIT; };\n+21 |     { let foo = ATOMIC_I64_INIT; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `AtomicI64::new(0)`\n \n error: using `ATOMIC_USIZE_INIT`\n-  --> $DIR/replace_consts.rs:17:17\n+  --> $DIR/replace_consts.rs:22:17\n    |\n-17 |     { let foo = ATOMIC_USIZE_INIT; };\n+22 |     { let foo = ATOMIC_USIZE_INIT; };\n    |                 ^^^^^^^^^^^^^^^^^ help: try this: `AtomicUsize::new(0)`\n \n error: using `ATOMIC_U8_INIT`\n-  --> $DIR/replace_consts.rs:18:17\n+  --> $DIR/replace_consts.rs:23:17\n    |\n-18 |     { let foo = ATOMIC_U8_INIT; };\n+23 |     { let foo = ATOMIC_U8_INIT; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `AtomicU8::new(0)`\n \n error: using `ATOMIC_U16_INIT`\n-  --> $DIR/replace_consts.rs:19:17\n+  --> $DIR/replace_consts.rs:24:17\n    |\n-19 |     { let foo = ATOMIC_U16_INIT; };\n+24 |     { let foo = ATOMIC_U16_INIT; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `AtomicU16::new(0)`\n \n error: using `ATOMIC_U32_INIT`\n-  --> $DIR/replace_consts.rs:20:17\n+  --> $DIR/replace_consts.rs:25:17\n    |\n-20 |     { let foo = ATOMIC_U32_INIT; };\n+25 |     { let foo = ATOMIC_U32_INIT; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `AtomicU32::new(0)`\n \n error: using `ATOMIC_U64_INIT`\n-  --> $DIR/replace_consts.rs:21:17\n+  --> $DIR/replace_consts.rs:26:17\n    |\n-21 |     { let foo = ATOMIC_U64_INIT; };\n+26 |     { let foo = ATOMIC_U64_INIT; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `AtomicU64::new(0)`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:23:17\n+  --> $DIR/replace_consts.rs:28:17\n    |\n-23 |     { let foo = std::isize::MIN; };\n+28 |     { let foo = std::isize::MIN; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `isize::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:24:17\n+  --> $DIR/replace_consts.rs:29:17\n    |\n-24 |     { let foo = std::i8::MIN; };\n+29 |     { let foo = std::i8::MIN; };\n    |                 ^^^^^^^^^^^^ help: try this: `i8::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:25:17\n+  --> $DIR/replace_consts.rs:30:17\n    |\n-25 |     { let foo = std::i16::MIN; };\n+30 |     { let foo = std::i16::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i16::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:26:17\n+  --> $DIR/replace_consts.rs:31:17\n    |\n-26 |     { let foo = std::i32::MIN; };\n+31 |     { let foo = std::i32::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i32::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:27:17\n+  --> $DIR/replace_consts.rs:32:17\n    |\n-27 |     { let foo = std::i64::MIN; };\n+32 |     { let foo = std::i64::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i64::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:28:17\n+  --> $DIR/replace_consts.rs:33:17\n    |\n-28 |     { let foo = std::i128::MIN; };\n+33 |     { let foo = std::i128::MIN; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `i128::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:29:17\n+  --> $DIR/replace_consts.rs:34:17\n    |\n-29 |     { let foo = std::usize::MIN; };\n+34 |     { let foo = std::usize::MIN; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `usize::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:30:17\n+  --> $DIR/replace_consts.rs:35:17\n    |\n-30 |     { let foo = std::u8::MIN; };\n+35 |     { let foo = std::u8::MIN; };\n    |                 ^^^^^^^^^^^^ help: try this: `u8::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:31:17\n+  --> $DIR/replace_consts.rs:36:17\n    |\n-31 |     { let foo = std::u16::MIN; };\n+36 |     { let foo = std::u16::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u16::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:32:17\n+  --> $DIR/replace_consts.rs:37:17\n    |\n-32 |     { let foo = std::u32::MIN; };\n+37 |     { let foo = std::u32::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u32::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:33:17\n+  --> $DIR/replace_consts.rs:38:17\n    |\n-33 |     { let foo = std::u64::MIN; };\n+38 |     { let foo = std::u64::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u64::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:34:17\n+  --> $DIR/replace_consts.rs:39:17\n    |\n-34 |     { let foo = std::u128::MIN; };\n+39 |     { let foo = std::u128::MIN; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `u128::min_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:36:17\n+  --> $DIR/replace_consts.rs:41:17\n    |\n-36 |     { let foo = std::isize::MAX; };\n+41 |     { let foo = std::isize::MAX; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `isize::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:37:17\n+  --> $DIR/replace_consts.rs:42:17\n    |\n-37 |     { let foo = std::i8::MAX; };\n+42 |     { let foo = std::i8::MAX; };\n    |                 ^^^^^^^^^^^^ help: try this: `i8::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:38:17\n+  --> $DIR/replace_consts.rs:43:17\n    |\n-38 |     { let foo = std::i16::MAX; };\n+43 |     { let foo = std::i16::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i16::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:39:17\n+  --> $DIR/replace_consts.rs:44:17\n    |\n-39 |     { let foo = std::i32::MAX; };\n+44 |     { let foo = std::i32::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i32::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:40:17\n+  --> $DIR/replace_consts.rs:45:17\n    |\n-40 |     { let foo = std::i64::MAX; };\n+45 |     { let foo = std::i64::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i64::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:41:17\n+  --> $DIR/replace_consts.rs:46:17\n    |\n-41 |     { let foo = std::i128::MAX; };\n+46 |     { let foo = std::i128::MAX; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `i128::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:42:17\n+  --> $DIR/replace_consts.rs:47:17\n    |\n-42 |     { let foo = std::usize::MAX; };\n+47 |     { let foo = std::usize::MAX; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `usize::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:43:17\n+  --> $DIR/replace_consts.rs:48:17\n    |\n-43 |     { let foo = std::u8::MAX; };\n+48 |     { let foo = std::u8::MAX; };\n    |                 ^^^^^^^^^^^^ help: try this: `u8::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:44:17\n+  --> $DIR/replace_consts.rs:49:17\n    |\n-44 |     { let foo = std::u16::MAX; };\n+49 |     { let foo = std::u16::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u16::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:45:17\n+  --> $DIR/replace_consts.rs:50:17\n    |\n-45 |     { let foo = std::u32::MAX; };\n+50 |     { let foo = std::u32::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u32::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:46:17\n+  --> $DIR/replace_consts.rs:51:17\n    |\n-46 |     { let foo = std::u64::MAX; };\n+51 |     { let foo = std::u64::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u64::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:47:17\n+  --> $DIR/replace_consts.rs:52:17\n    |\n-47 |     { let foo = std::u128::MAX; };\n+52 |     { let foo = std::u128::MAX; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `u128::max_value()`\n \n error: aborting due to 35 previous errors"}]}