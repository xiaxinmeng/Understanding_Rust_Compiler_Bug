{"sha": "72dc29c260cb6730449ed789c8a0ab4292acb7b0", "node_id": "C_kwDOAAsO6NoAKDcyZGMyOWMyNjBjYjY3MzA0NDllZDc4OWM4YTBhYjQyOTJhY2I3YjA", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-10-31T17:39:39Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-11-30T21:55:07Z"}, "message": "Handle `allow(elided_lifetimes_in_paths)`.", "tree": {"sha": "3bd564f573c52ba1d456aa3e01b8c364cc5100c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bd564f573c52ba1d456aa3e01b8c364cc5100c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72dc29c260cb6730449ed789c8a0ab4292acb7b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72dc29c260cb6730449ed789c8a0ab4292acb7b0", "html_url": "https://github.com/rust-lang/rust/commit/72dc29c260cb6730449ed789c8a0ab4292acb7b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72dc29c260cb6730449ed789c8a0ab4292acb7b0/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c07a6d2ef025839d0a36754c163899bc311460f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c07a6d2ef025839d0a36754c163899bc311460f6", "html_url": "https://github.com/rust-lang/rust/commit/c07a6d2ef025839d0a36754c163899bc311460f6"}], "stats": {"total": 77, "additions": 45, "deletions": 32}, "files": [{"sha": "d140c2da9bda1cb24e9d480889089e8c4b67086c", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 28, "deletions": 31, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/72dc29c260cb6730449ed789c8a0ab4292acb7b0/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72dc29c260cb6730449ed789c8a0ab4292acb7b0/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=72dc29c260cb6730449ed789c8a0ab4292acb7b0", "patch": "@@ -1951,38 +1951,35 @@ impl<'tcx> LifetimeContext<'_, 'tcx> {\n     }\n \n     crate fn report_elided_lifetime_in_ty(&self, lifetime_refs: &[&hir::Lifetime]) {\n-        let missing_lifetimes = lifetime_refs\n-            .iter()\n-            .filter(|a| matches!(a, hir::Lifetime { name: hir::LifetimeName::ImplicitMissing, .. }))\n-            .count();\n-\n-        if missing_lifetimes > 0 {\n-            let mut spans: Vec<_> = lifetime_refs.iter().map(|lt| lt.span).collect();\n-            spans.sort();\n-            let mut spans_dedup = spans.clone();\n-            spans_dedup.dedup();\n-            let spans_with_counts: Vec<_> = spans_dedup\n-                .into_iter()\n-                .map(|sp| (sp, spans.iter().filter(|nsp| *nsp == &sp).count()))\n-                .collect();\n+        let Some(missing_lifetime) = lifetime_refs.iter().find(|lt| {\n+            lt.name == hir::LifetimeName::ImplicitMissing\n+        }) else { return };\n+\n+        let mut spans: Vec<_> = lifetime_refs.iter().map(|lt| lt.span).collect();\n+        spans.sort();\n+        let mut spans_dedup = spans.clone();\n+        spans_dedup.dedup();\n+        let spans_with_counts: Vec<_> = spans_dedup\n+            .into_iter()\n+            .map(|sp| (sp, spans.iter().filter(|nsp| *nsp == &sp).count()))\n+            .collect();\n \n-            self.tcx.struct_span_lint_hir(\n-                rustc_session::lint::builtin::ELIDED_LIFETIMES_IN_PATHS,\n-                hir::CRATE_HIR_ID,\n-                spans,\n-                |lint| {\n-                    let mut db = lint.build(\"hidden lifetime parameters in types are deprecated\");\n-                    self.add_missing_lifetime_specifiers_label(\n-                        &mut db,\n-                        spans_with_counts,\n-                        &FxHashSet::from_iter([kw::UnderscoreLifetime]),\n-                        Vec::new(),\n-                        &[],\n-                    );\n-                    db.emit()\n-                },\n-            );\n-        }\n+        self.tcx.struct_span_lint_hir(\n+            rustc_session::lint::builtin::ELIDED_LIFETIMES_IN_PATHS,\n+            missing_lifetime.hir_id,\n+            spans,\n+            |lint| {\n+                let mut db = lint.build(\"hidden lifetime parameters in types are deprecated\");\n+                self.add_missing_lifetime_specifiers_label(\n+                    &mut db,\n+                    spans_with_counts,\n+                    &FxHashSet::from_iter([kw::UnderscoreLifetime]),\n+                    Vec::new(),\n+                    &[],\n+                );\n+                db.emit()\n+            },\n+        );\n     }\n \n     // FIXME(const_generics): This patches over an ICE caused by non-'static lifetimes in const"}, {"sha": "87a79b8813777fb9acd137d5f0cb31dd72a14ff6", "filename": "src/test/ui/in-band-lifetimes/elided-lifetimes.fixed", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/72dc29c260cb6730449ed789c8a0ab4292acb7b0/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/72dc29c260cb6730449ed789c8a0ab4292acb7b0/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.fixed?ref=72dc29c260cb6730449ed789c8a0ab4292acb7b0", "patch": "@@ -96,6 +96,14 @@ macro_rules! anytuple_ref_ty {\n     }\n }\n \n+#[allow(elided_lifetimes_in_paths)]\n+mod blah {\n+    struct Thing<'a>(&'a i32);\n+    struct Bar<T>(T);\n+\n+    fn foo(b: Bar<Thing>) {}\n+}\n+\n fn main() {\n     let honesty = RefCell::new((4, 'e'));\n     let loyalty: Ref<'_, (u32, char)> = honesty.borrow();"}, {"sha": "28323a22427b64c837644d183f7b2e90a65c2778", "filename": "src/test/ui/in-band-lifetimes/elided-lifetimes.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/72dc29c260cb6730449ed789c8a0ab4292acb7b0/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72dc29c260cb6730449ed789c8a0ab4292acb7b0/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.rs?ref=72dc29c260cb6730449ed789c8a0ab4292acb7b0", "patch": "@@ -96,6 +96,14 @@ macro_rules! anytuple_ref_ty {\n     }\n }\n \n+#[allow(elided_lifetimes_in_paths)]\n+mod blah {\n+    struct Thing<'a>(&'a i32);\n+    struct Bar<T>(T);\n+\n+    fn foo(b: Bar<Thing>) {}\n+}\n+\n fn main() {\n     let honesty = RefCell::new((4, 'e'));\n     let loyalty: Ref<(u32, char)> = honesty.borrow();"}, {"sha": "2e65461b321e989fc65ee61de24230228b9787bd", "filename": "src/test/ui/in-band-lifetimes/elided-lifetimes.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72dc29c260cb6730449ed789c8a0ab4292acb7b0/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72dc29c260cb6730449ed789c8a0ab4292acb7b0/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.stderr?ref=72dc29c260cb6730449ed789c8a0ab4292acb7b0", "patch": "@@ -90,7 +90,7 @@ LL |         fn $fn_name(gift: &str) -> $type_name<'_> {\n    |                                    ~~~~~~~~~~~~~~\n \n error: hidden lifetime parameters in types are deprecated\n-  --> $DIR/elided-lifetimes.rs:101:22\n+  --> $DIR/elided-lifetimes.rs:109:22\n    |\n LL |     let loyalty: Ref<(u32, char)> = honesty.borrow();\n    |                      ^ expected named lifetime parameter"}]}