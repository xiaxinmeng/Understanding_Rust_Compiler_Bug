{"sha": "2471b6bc3a318d7303d0556c85940090b6cf6d7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0NzFiNmJjM2EzMThkNzMwM2QwNTU2Yzg1OTQwMDkwYjZjZjZkN2E=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-05T20:29:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-05T20:29:50Z"}, "message": "Merge #3015\n\n3015: vscode: yet another refactor commit r=matklad a=Veetaha\n\nIt compiles, it runs in dev extension host, It bundles, it runs when bundled and installed.\r\nRemoved 5 lines of code as you like less code, especially TypeScript code)\n\nCo-authored-by: Veetaha <gerzoh1@gmail.com>", "tree": {"sha": "07df61a25b0735d96f78bbd754bc7c16b9361926", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07df61a25b0735d96f78bbd754bc7c16b9361926"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2471b6bc3a318d7303d0556c85940090b6cf6d7a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeOyW/CRBK7hj4Ov3rIwAAdHIIAFDY124l4RQUqY3cDHcoU84E\nyBwTgv52nSucijO1J+KgUnv+nvLZSGCLZ/IiWIlcLQvDRAiauaZoGxEACLatlHUk\nJsATQNxPcgEebPhrsYBlLJdiQqG98kd9dEwD2hG0lRvoEnarAZuQAErl+TH2lxFu\nNSFXJfZ0RFSy49+yybo77BtAA9meRrO5v6Jo0YDyBIBU1d8zOrz6nL8Kbu3fWAsD\ny8WY+SerAFXlLkCe2O60QFg6ToYeeBIYEHm1tQUEP2oRJ//URn1ilrAhtVpK/vjU\nlfnB27rcW48xB1DjI/t7esqk99H5eIsGbDXKxnL8AhRtJSA1q2cKeFwQGWdxuJc=\n=k8Q3\n-----END PGP SIGNATURE-----\n", "payload": "tree 07df61a25b0735d96f78bbd754bc7c16b9361926\nparent 8d0f7da2f5f2ae1dc5711005f08fde0007da165b\nparent 49a681404860e98855d8698e94dc1208e07daff4\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1580934590 +0000\ncommitter GitHub <noreply@github.com> 1580934590 +0000\n\nMerge #3015\n\n3015: vscode: yet another refactor commit r=matklad a=Veetaha\n\nIt compiles, it runs in dev extension host, It bundles, it runs when bundled and installed.\r\nRemoved 5 lines of code as you like less code, especially TypeScript code)\n\nCo-authored-by: Veetaha <gerzoh1@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2471b6bc3a318d7303d0556c85940090b6cf6d7a", "html_url": "https://github.com/rust-lang/rust/commit/2471b6bc3a318d7303d0556c85940090b6cf6d7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2471b6bc3a318d7303d0556c85940090b6cf6d7a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d0f7da2f5f2ae1dc5711005f08fde0007da165b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d0f7da2f5f2ae1dc5711005f08fde0007da165b", "html_url": "https://github.com/rust-lang/rust/commit/8d0f7da2f5f2ae1dc5711005f08fde0007da165b"}, {"sha": "49a681404860e98855d8698e94dc1208e07daff4", "url": "https://api.github.com/repos/rust-lang/rust/commits/49a681404860e98855d8698e94dc1208e07daff4", "html_url": "https://github.com/rust-lang/rust/commit/49a681404860e98855d8698e94dc1208e07daff4"}], "stats": {"total": 63, "additions": 29, "deletions": 34}, "files": [{"sha": "7e7e909ddab8e95537bca66a3608a62269150ad9", "filename": "editors/code/src/client.ts", "status": "modified", "additions": 12, "deletions": 17, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/2471b6bc3a318d7303d0556c85940090b6cf6d7a/editors%2Fcode%2Fsrc%2Fclient.ts", "raw_url": "https://github.com/rust-lang/rust/raw/2471b6bc3a318d7303d0556c85940090b6cf6d7a/editors%2Fcode%2Fsrc%2Fclient.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fclient.ts?ref=2471b6bc3a318d7303d0556c85940090b6cf6d7a", "patch": "@@ -7,25 +7,21 @@ import { Config } from './config';\n \n export function createClient(config: Config): lc.LanguageClient {\n     // '.' Is the fallback if no folder is open\n-    // TODO?: Workspace folders support Uri's (eg: file://test.txt). It might be a good idea to test if the uri points to a file.\n-    let folder: string = '.';\n-    if (workspace.workspaceFolders !== undefined) {\n-        folder = workspace.workspaceFolders[0].uri.fsPath.toString();\n-    }\n+    // TODO?: Workspace folders support Uri's (eg: file://test.txt).\n+    // It might be a good idea to test if the uri points to a file.\n+    const workspaceFolderPath = workspace.workspaceFolders?.[0]?.uri.fsPath ?? '.';\n \n-    const command = expandPathResolving(config.raLspServerPath);\n-    if (spawnSync(command, [\"--version\"]).status !== 0) {\n+    const raLspServerPath = expandPathResolving(config.raLspServerPath);\n+    if (spawnSync(raLspServerPath, [\"--version\"]).status !== 0) {\n         window.showErrorMessage(\n-            `Unable to execute '${command} --version'\n-\n-Perhaps it is not in $PATH?\n-\n-PATH=${process.env.PATH}\n-`);\n+            `Unable to execute '${raLspServerPath} --version'\\n\\n` +\n+            `Perhaps it is not in $PATH?\\n\\n` +\n+            `PATH=${process.env.PATH}\\n`\n+        );\n     }\n     const run: lc.Executable = {\n-        command,\n-        options: { cwd: folder },\n+        command: raLspServerPath,\n+        options: { cwd: workspaceFolderPath },\n     };\n     const serverOptions: lc.ServerOptions = {\n         run,\n@@ -43,8 +39,7 @@ PATH=${process.env.PATH}\n             cargoWatchEnable: config.cargoWatchOptions.enable,\n             cargoWatchArgs: config.cargoWatchOptions.arguments,\n             cargoWatchCommand: config.cargoWatchOptions.command,\n-            cargoWatchAllTargets:\n-                config.cargoWatchOptions.allTargets,\n+            cargoWatchAllTargets: config.cargoWatchOptions.allTargets,\n             excludeGlobs: config.excludeGlobs,\n             useClientWatching: config.useClientWatching,\n             featureFlags: config.featureFlags,"}, {"sha": "a6957a76ef3dd17a95187e19dcf4743f833f9b7c", "filename": "editors/code/src/color_theme.ts", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2471b6bc3a318d7303d0556c85940090b6cf6d7a/editors%2Fcode%2Fsrc%2Fcolor_theme.ts", "raw_url": "https://github.com/rust-lang/rust/raw/2471b6bc3a318d7303d0556c85940090b6cf6d7a/editors%2Fcode%2Fsrc%2Fcolor_theme.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcolor_theme.ts?ref=2471b6bc3a318d7303d0556c85940090b6cf6d7a", "patch": "@@ -33,6 +33,7 @@ export class ColorTheme {\n                 : typeof rule.scope === 'string'\n                     ? [rule.scope]\n                     : rule.scope;\n+\n             for (const scope of scopes) {\n                 res.rules.set(scope, rule.settings);\n             }\n@@ -69,13 +70,13 @@ function loadThemeNamed(themeName: string): ColorTheme {\n         );\n     }\n \n-    const themePaths = vscode.extensions.all\n+    const themePaths: string[] = vscode.extensions.all\n         .filter(isTheme)\n-        .flatMap(ext => {\n-            return ext.packageJSON.contributes.themes\n+        .flatMap(\n+            ext => ext.packageJSON.contributes.themes\n                 .filter((it: any) => (it.id || it.label) === themeName)\n-                .map((it: any) => path.join(ext.extensionPath, it.path));\n-        });\n+                .map((it: any) => path.join(ext.extensionPath, it.path))\n+        );\n \n     const res = new ColorTheme();\n     for (const themePath of themePaths) {\n@@ -96,13 +97,12 @@ function loadThemeFile(themePath: string): ColorTheme {\n         return new ColorTheme();\n     }\n     const obj = jsonc.parse(text);\n-    const tokenColors = obj?.tokenColors ?? [];\n+    const tokenColors: TextMateRule[] = obj?.tokenColors ?? [];\n     const res = ColorTheme.fromRules(tokenColors);\n \n-    for (const include in obj?.include ?? []) {\n+    for (const include of obj?.include ?? []) {\n         const includePath = path.join(path.dirname(themePath), include);\n-        const tmp = loadThemeFile(includePath);\n-        res.mergeFrom(tmp);\n+        res.mergeFrom(loadThemeFile(includePath));\n     }\n \n     return res;"}, {"sha": "25eaebcbecc56e9ae8e3ad21e8df6062da8b5681", "filename": "editors/code/src/commands/on_enter.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2471b6bc3a318d7303d0556c85940090b6cf6d7a/editors%2Fcode%2Fsrc%2Fcommands%2Fon_enter.ts", "raw_url": "https://github.com/rust-lang/rust/raw/2471b6bc3a318d7303d0556c85940090b6cf6d7a/editors%2Fcode%2Fsrc%2Fcommands%2Fon_enter.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fon_enter.ts?ref=2471b6bc3a318d7303d0556c85940090b6cf6d7a", "patch": "@@ -7,7 +7,7 @@ import { Cmd, Ctx } from '../ctx';\n async function handleKeypress(ctx: Ctx) {\n     const editor = ctx.activeRustEditor;\n     const client = ctx.client;\n-    if (!editor) return false;\n+\n     if (!editor || !client) return false;\n \n     const request: lc.TextDocumentPositionParams = {"}, {"sha": "c750b2d5c861bab5d6348af4bf57970c0af26fbd", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2471b6bc3a318d7303d0556c85940090b6cf6d7a/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/2471b6bc3a318d7303d0556c85940090b6cf6d7a/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=2471b6bc3a318d7303d0556c85940090b6cf6d7a", "patch": "@@ -23,9 +23,9 @@ export class Config {\n     lruCapacity: null | number = null;\n     displayInlayHints = true;\n     maxInlayHintLength: null | number = null;\n-    excludeGlobs = [];\n+    excludeGlobs: string[] = [];\n     useClientWatching = true;\n-    featureFlags = {};\n+    featureFlags: Record<string, boolean> = {};\n     // for internal use\n     withSysroot: null | boolean = null;\n     cargoWatchOptions: CargoWatchOptions = {"}, {"sha": "e90fb8acc1f5de6aae8d08b175c60dd02abc5016", "filename": "editors/code/src/highlighting.ts", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2471b6bc3a318d7303d0556c85940090b6cf6d7a/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "raw_url": "https://github.com/rust-lang/rust/raw/2471b6bc3a318d7303d0556c85940090b6cf6d7a/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fhighlighting.ts?ref=2471b6bc3a318d7303d0556c85940090b6cf6d7a", "patch": "@@ -69,7 +69,7 @@ interface Decoration {\n \n // Based on this HSL-based color generator: https://gist.github.com/bendc/76c48ce53299e6078a76\n function fancify(seed: string, shade: 'light' | 'dark') {\n-    const random = randomU32Numbers(hashString(seed))\n+    const random = randomU32Numbers(hashString(seed));\n     const randomInt = (min: number, max: number) => {\n         return Math.abs(random()) % (max - min + 1) + min;\n     };\n@@ -253,14 +253,14 @@ function randomU32Numbers(seed: number) {\n         random ^= random >> 17;\n         random ^= random << 5;\n         random |= 0;\n-        return random\n-    }\n+        return random;\n+    };\n }\n \n function hashString(str: string): number {\n     let res = 0;\n     for (let i = 0; i < str.length; ++i) {\n-        const c = str.codePointAt(i)!!;\n+        const c = str.codePointAt(i)!;\n         res = (res * 31 + c) & ~0;\n     }\n     return res;"}, {"sha": "5efce41f404f26228ba4cfd61d4c88d980fb3468", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2471b6bc3a318d7303d0556c85940090b6cf6d7a/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/2471b6bc3a318d7303d0556c85940090b6cf6d7a/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=2471b6bc3a318d7303d0556c85940090b6cf6d7a", "patch": "@@ -6,7 +6,7 @@ import { activateStatusDisplay } from './status_display';\n import { Ctx } from './ctx';\n import { activateHighlighting } from './highlighting';\n \n-let ctx!: Ctx;\n+let ctx: Ctx | undefined;\n \n export async function activate(context: vscode.ExtensionContext) {\n     ctx = new Ctx(context);"}]}