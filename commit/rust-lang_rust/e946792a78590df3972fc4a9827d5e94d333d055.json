{"sha": "e946792a78590df3972fc4a9827d5e94d333d055", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5NDY3OTJhNzg1OTBkZjM5NzJmYzRhOTgyN2Q1ZTk0ZDMzM2QwNTU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-26T00:50:32Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-26T00:50:32Z"}, "message": "rustdoc: Extract enum doc nodes from AST nodes", "tree": {"sha": "6b6ce0220063835bef31637c9238e2d945a63d49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b6ce0220063835bef31637c9238e2d945a63d49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e946792a78590df3972fc4a9827d5e94d333d055", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e946792a78590df3972fc4a9827d5e94d333d055", "html_url": "https://github.com/rust-lang/rust/commit/e946792a78590df3972fc4a9827d5e94d333d055", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e946792a78590df3972fc4a9827d5e94d333d055/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2999479a2dcb10019558d64c2045fdee31841d31", "url": "https://api.github.com/repos/rust-lang/rust/commits/2999479a2dcb10019558d64c2045fdee31841d31", "html_url": "https://github.com/rust-lang/rust/commit/2999479a2dcb10019558d64c2045fdee31841d31"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "3c204d17c304269ae498ab0113197224b0c25645", "filename": "src/rustdoc/extract.rs", "status": "modified", "additions": 56, "deletions": 1, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/e946792a78590df3972fc4a9827d5e94d333d055/src%2Frustdoc%2Fextract.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e946792a78590df3972fc4a9827d5e94d333d055/src%2Frustdoc%2Fextract.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fextract.rs?ref=e946792a78590df3972fc4a9827d5e94d333d055", "patch": "@@ -77,7 +77,17 @@ fn moddoc_from_mod(\n                   }\n                 }\n             }),\n-        enums: doc::enumlist([])\n+        enums: doc::enumlist(\n+            vec::filter_map(module.items) {|item|\n+                alt item.node {\n+                  ast::item_enum(variants, _) {\n+                    some(enumdoc_from_enum(item.ident, item.id, variants))\n+                  }\n+                  _ {\n+                    none\n+                  }\n+                }\n+            })\n     }\n }\n \n@@ -145,6 +155,51 @@ fn should_extract_const_name_and_id() {\n     assert doc.topmod.consts[0].name == \"a\";\n }\n \n+fn enumdoc_from_enum(\n+    name: ast::ident,\n+    id: ast::node_id,\n+    variants: [ast::variant]\n+) -> doc::enumdoc {\n+    ~{\n+        id: id,\n+        name: name,\n+        brief: none,\n+        desc: none,\n+        variants: variantdocs_from_variants(variants)\n+    }\n+}\n+\n+fn variantdocs_from_variants(\n+    variants: [ast::variant]\n+) -> [doc::variantdoc] {\n+    vec::map(variants, variantdoc_from_variant)\n+}\n+\n+fn variantdoc_from_variant(variant: ast::variant) -> doc::variantdoc {\n+    ~{\n+        name: variant.node.name,\n+        desc: none,\n+        sig: none\n+    }\n+}\n+\n+#[test]\n+fn should_extract_enums() {\n+    let source = \"enum e { v }\";\n+    let ast = parse::from_str(source);\n+    let doc = extract(ast, \"\");\n+    assert doc.topmod.enums[0].id != 0;\n+    assert doc.topmod.enums[0].name == \"e\";\n+}\n+\n+#[test]\n+fn should_extract_enum_variants() {\n+    let source = \"enum e { v }\";\n+    let ast = parse::from_str(source);\n+    let doc = extract(ast, \"\");\n+    assert doc.topmod.enums[0].variants[0].name == \"v\";\n+}\n+\n #[cfg(test)]\n mod tests {\n "}]}