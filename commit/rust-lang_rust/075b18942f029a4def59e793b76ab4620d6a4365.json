{"sha": "075b18942f029a4def59e793b76ab4620d6a4365", "node_id": "C_kwDOAAsO6NoAKDA3NWIxODk0MmYwMjlhNGRlZjU5ZTc5M2I3NmFiNDYyMGQ2YTQzNjU", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-04-28T13:17:44Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-04-28T13:18:19Z"}, "message": "minor: Record snippet config errors", "tree": {"sha": "51b7e59ada24fc545071b332ec4a771ba8eff8b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51b7e59ada24fc545071b332ec4a771ba8eff8b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/075b18942f029a4def59e793b76ab4620d6a4365", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/075b18942f029a4def59e793b76ab4620d6a4365", "html_url": "https://github.com/rust-lang/rust/commit/075b18942f029a4def59e793b76ab4620d6a4365", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/075b18942f029a4def59e793b76ab4620d6a4365/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b056fad450d8bb97997c1bd16aa016a3e1328e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b056fad450d8bb97997c1bd16aa016a3e1328e7", "html_url": "https://github.com/rust-lang/rust/commit/8b056fad450d8bb97997c1bd16aa016a3e1328e7"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "ad1f9c40e2b313a7f6b6fa141ea2e94b74186129", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/075b18942f029a4def59e793b76ab4620d6a4365/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/075b18942f029a4def59e793b76ab4620d6a4365/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=075b18942f029a4def59e793b76ab4620d6a4365", "patch": "@@ -584,7 +584,12 @@ impl Config {\n                 scope,\n             ) {\n                 Some(snippet) => self.snippets.push(snippet),\n-                None => tracing::info!(\"Invalid snippet {}\", name),\n+                None => errors.push((\n+                    format!(\"snippet {name} is invalid\"),\n+                    <serde_json::Error as serde::de::Error>::custom(\n+                        \"snippet path is invalid or triggers are missing\",\n+                    ),\n+                )),\n             }\n         }\n "}, {"sha": "ebd6f35b42418de7d8bebb9a7c6ac0f46ebc115a", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/075b18942f029a4def59e793b76ab4620d6a4365/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/075b18942f029a4def59e793b76ab4620d6a4365/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=075b18942f029a4def59e793b76ab4620d6a4365", "patch": "@@ -290,7 +290,7 @@ impl GlobalState {\n             }\n \n             let duration = start.elapsed();\n-            tracing::info!(\"handled {} - ({}) in {:0.2?}\", method, response.id, duration);\n+            tracing::debug!(\"handled {} - ({}) in {:0.2?}\", method, response.id, duration);\n             self.send(response.into());\n         }\n     }"}, {"sha": "3870161826b17a280ac4df59f52ba25b87621d48", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/075b18942f029a4def59e793b76ab4620d6a4365/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/075b18942f029a4def59e793b76ab4620d6a4365/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=075b18942f029a4def59e793b76ab4620d6a4365", "patch": "@@ -314,7 +314,7 @@ impl GlobalState {\n                             self.prime_caches_queue.op_completed(());\n                             if cancelled {\n                                 self.prime_caches_queue\n-                                    .request_op(\"restart after cancelation\".to_string());\n+                                    .request_op(\"restart after cancellation\".to_string());\n                             }\n                         }\n                     };"}]}