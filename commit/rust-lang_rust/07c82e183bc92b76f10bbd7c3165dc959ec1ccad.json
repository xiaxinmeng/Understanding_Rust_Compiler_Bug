{"sha": "07c82e183bc92b76f10bbd7c3165dc959ec1ccad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3YzgyZTE4M2JjOTJiNzZmMTBiYmQ3YzMxNjVkYzk1OWVjMWNjYWQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-22T23:59:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-06-22T23:59:19Z"}, "message": "Rollup merge of #62057 - matthewjasper:deny-unnecessary-outlives, r=Mark-Simulacrum\n\nDeny explicit_outlives_requirements in the compiler", "tree": {"sha": "5308e68a4a334467a7bcfdd7b2475c35b7f800ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5308e68a4a334467a7bcfdd7b2475c35b7f800ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07c82e183bc92b76f10bbd7c3165dc959ec1ccad", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdDsDXCRBK7hj4Ov3rIwAAdHIIAAhwlwCGS0gJID05ShCMyDt8\n1+uETLSfMmwEYfP/OqZ645wmFRIilTJgpSGjVgTldrNSO37LvQajkCbJpKMr+vgU\nX14MIZGzD0ZY0czJxjZ9YCIZi1gl1HNVf1rt75R+lUe06dzf8L28EludmczUUENd\nnc12TL0u9HQ5ttWe7AJkOEGzL0aVGNN/8wYyqEibX4K77KewyQcg084ey+jCgQ8c\n7s5qnQmdjAE59p09qxX6k5cWZtuAwIW8hzAPCzO6nacFTPHn4FRwHoYDxm6xq96k\noXq1gvOkBs3ucxvEaPooHr4/qdWpMfa3SCo3/JSWpp4VzVFLdhFVyL/Cozx8N3k=\n=c05M\n-----END PGP SIGNATURE-----\n", "payload": "tree 5308e68a4a334467a7bcfdd7b2475c35b7f800ab\nparent 675ac94f8bb89f9d404e0359493534fff878a15b\nparent d0311e71548ad5c7fb259901014552a8279ecb3b\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1561247959 +0200\ncommitter GitHub <noreply@github.com> 1561247959 +0200\n\nRollup merge of #62057 - matthewjasper:deny-unnecessary-outlives, r=Mark-Simulacrum\n\nDeny explicit_outlives_requirements in the compiler\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07c82e183bc92b76f10bbd7c3165dc959ec1ccad", "html_url": "https://github.com/rust-lang/rust/commit/07c82e183bc92b76f10bbd7c3165dc959ec1ccad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "675ac94f8bb89f9d404e0359493534fff878a15b", "url": "https://api.github.com/repos/rust-lang/rust/commits/675ac94f8bb89f9d404e0359493534fff878a15b", "html_url": "https://github.com/rust-lang/rust/commit/675ac94f8bb89f9d404e0359493534fff878a15b"}, {"sha": "d0311e71548ad5c7fb259901014552a8279ecb3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0311e71548ad5c7fb259901014552a8279ecb3b", "html_url": "https://github.com/rust-lang/rust/commit/d0311e71548ad5c7fb259901014552a8279ecb3b"}], "stats": {"total": 27, "additions": 11, "deletions": 16}, "files": [{"sha": "35b181245837f2bf17e6454f7dea2c53cdc0533f", "filename": "src/librustc/hir/itemlikevisit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc%2Fhir%2Fitemlikevisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc%2Fhir%2Fitemlikevisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fitemlikevisit.rs?ref=07c82e183bc92b76f10bbd7c3165dc959ec1ccad", "patch": "@@ -51,7 +51,7 @@ pub trait ItemLikeVisitor<'hir> {\n     fn visit_impl_item(&mut self, impl_item: &'hir ImplItem);\n }\n \n-pub struct DeepVisitor<'v, V: 'v> {\n+pub struct DeepVisitor<'v, V> {\n     visitor: &'v mut V,\n }\n "}, {"sha": "a1a93eb5521387ee03fcbd30c2f1371e3a6d80ee", "filename": "src/librustc/infer/nll_relate/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc%2Finfer%2Fnll_relate%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc%2Finfer%2Fnll_relate%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fnll_relate%2Fmod.rs?ref=07c82e183bc92b76f10bbd7c3165dc959ec1ccad", "patch": "@@ -800,7 +800,7 @@ impl<'me, 'tcx> TypeVisitor<'tcx> for ScopeInstantiator<'me, 'tcx> {\n /// [blog post]: https://is.gd/0hKvIr\n struct TypeGeneralizer<'me, 'tcx, D>\n where\n-    D: TypeRelatingDelegate<'tcx> + 'me,\n+    D: TypeRelatingDelegate<'tcx>,\n {\n     infcx: &'me InferCtxt<'me, 'tcx>,\n "}, {"sha": "257d5159f113195128fc4db2f3c935342bbe45df", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=07c82e183bc92b76f10bbd7c3165dc959ec1ccad", "patch": "@@ -31,7 +31,6 @@\n #![deny(rust_2018_idioms)]\n #![deny(internal)]\n #![deny(unused_lifetimes)]\n-#![allow(explicit_outlives_requirements)]\n \n #![feature(arbitrary_self_types)]\n #![feature(box_patterns)]"}, {"sha": "28399ed5439f79de9a3bcba7bb9dde3ad7bf3fca", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=07c82e183bc92b76f10bbd7c3165dc959ec1ccad", "patch": "@@ -231,7 +231,7 @@ pub struct CommonConsts<'tcx> {\n     pub err: &'tcx Const<'tcx>,\n }\n \n-pub struct LocalTableInContext<'a, V: 'a> {\n+pub struct LocalTableInContext<'a, V> {\n     local_id_root: Option<DefId>,\n     data: &'a ItemLocalMap<V>\n }\n@@ -294,7 +294,7 @@ impl<'a, V> ::std::ops::Index<hir::HirId> for LocalTableInContext<'a, V> {\n     }\n }\n \n-pub struct LocalTableInContextMut<'a, V: 'a> {\n+pub struct LocalTableInContextMut<'a, V> {\n     local_id_root: Option<DefId>,\n     data: &'a mut ItemLocalMap<V>\n }\n@@ -2171,7 +2171,7 @@ impl<'tcx> TyCtxt<'tcx> {\n \n \n /// An entry in an interner.\n-struct Interned<'tcx, T: 'tcx+?Sized>(&'tcx T);\n+struct Interned<'tcx, T: ?Sized>(&'tcx T);\n \n impl<'tcx, T: 'tcx+?Sized> Clone for Interned<'tcx, T> {\n     fn clone(&self) -> Self {"}, {"sha": "7d5f984c1b6f24e93f2b74359bcd44819311ab91", "filename": "src/librustc/ty/query/plumbing.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs?ref=07c82e183bc92b76f10bbd7c3165dc959ec1ccad", "patch": "@@ -89,7 +89,7 @@ macro_rules! profq_query_msg {\n \n /// A type representing the responsibility to execute the job in the `job` field.\n /// This will poison the relevant query if dropped.\n-pub(super) struct JobOwner<'a, 'tcx, Q: QueryDescription<'tcx> + 'a> {\n+pub(super) struct JobOwner<'a, 'tcx, Q: QueryDescription<'tcx>> {\n     cache: &'a Lock<QueryCache<'tcx, Q>>,\n     key: Q::Key,\n     job: Lrc<QueryJob<'tcx>>,\n@@ -230,7 +230,7 @@ pub struct CycleError<'tcx> {\n }\n \n /// The result of `try_get_lock`\n-pub(super) enum TryGetJob<'a, 'tcx, D: QueryDescription<'tcx> + 'a> {\n+pub(super) enum TryGetJob<'a, 'tcx, D: QueryDescription<'tcx>> {\n     /// The query is not yet started. Contains a guard to the cache eventually used to start it.\n     NotYetStarted(JobOwner<'a, 'tcx, D>),\n "}, {"sha": "7283aa95b3027e7d9182d596bd9cd0a6bbda3331", "filename": "src/librustc_codegen_llvm/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc_codegen_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc_codegen_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Flib.rs?ref=07c82e183bc92b76f10bbd7c3165dc959ec1ccad", "patch": "@@ -24,7 +24,6 @@\n #![deny(rust_2018_idioms)]\n #![deny(internal)]\n #![deny(unused_lifetimes)]\n-#![allow(explicit_outlives_requirements)]\n \n use back::write::{create_target_machine, create_informational_target_machine};\n use syntax_pos::symbol::Symbol;"}, {"sha": "b76f098773f0b6a26b6758dca781c1f669433537", "filename": "src/librustc_codegen_ssa/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc_codegen_ssa%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc_codegen_ssa%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Flib.rs?ref=07c82e183bc92b76f10bbd7c3165dc959ec1ccad", "patch": "@@ -15,7 +15,6 @@\n #![deny(rust_2018_idioms)]\n #![deny(internal)]\n #![deny(unused_lifetimes)]\n-#![allow(explicit_outlives_requirements)]\n \n #![recursion_limit=\"256\"]\n "}, {"sha": "7896592eea68582238a68760f310f9332c9336db", "filename": "src/librustc_mir/dataflow/graphviz.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc_mir%2Fdataflow%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc_mir%2Fdataflow%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fgraphviz.rs?ref=07c82e183bc92b76f10bbd7c3165dc959ec1ccad", "patch": "@@ -30,7 +30,7 @@ impl<'a, 'tcx, BD> MirWithFlowState<'tcx> for DataflowBuilder<'a, 'tcx, BD>\n     fn flow_state(&self) -> &DataflowState<'tcx, Self::BD> { &self.flow_state.flow_state }\n }\n \n-struct Graph<'a, 'tcx, MWF:'a, P> where\n+struct Graph<'a, 'tcx, MWF, P> where\n     MWF: MirWithFlowState<'tcx>\n {\n     mbcx: &'a MWF,"}, {"sha": "89b952e9f8b5aaa4031f29e62719f3bc79390e9d", "filename": "src/librustc_mir/dataflow/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs?ref=07c82e183bc92b76f10bbd7c3165dc959ec1ccad", "patch": "@@ -181,7 +181,7 @@ where\n \n struct PropagationContext<'b, 'a, 'tcx, O>\n where\n-    O: 'b + BitDenotation<'tcx>,\n+    O: BitDenotation<'tcx>,\n {\n     builder: &'b mut DataflowAnalysis<'a, 'tcx, O>,\n }"}, {"sha": "416b66daa05940fc958522e9a3bac1daed7c46f1", "filename": "src/librustc_mir/interpret/intern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintern.rs?ref=07c82e183bc92b76f10bbd7c3165dc959ec1ccad", "patch": "@@ -21,7 +21,7 @@ use super::{\n };\n use crate::const_eval::{CompileTimeInterpreter, CompileTimeEvalContext};\n \n-struct InternVisitor<'rt, 'mir: 'rt, 'tcx: 'rt + 'mir> {\n+struct InternVisitor<'rt, 'mir, 'tcx> {\n     /// previously encountered safe references\n     ref_tracking: &'rt mut RefTracking<(MPlaceTy<'tcx>, Mutability, InternMode)>,\n     ecx: &'rt mut CompileTimeEvalContext<'mir, 'tcx>,"}, {"sha": "cb02e1a778c93af78f38da3bc6ed78d3db92564e", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=07c82e183bc92b76f10bbd7c3165dc959ec1ccad", "patch": "@@ -30,7 +30,6 @@ Rust MIR: a lowered representation of Rust. Also: an experiment!\n #![deny(rust_2018_idioms)]\n #![deny(internal)]\n #![deny(unused_lifetimes)]\n-#![allow(explicit_outlives_requirements)]\n \n #[macro_use] extern crate log;\n #[macro_use]"}, {"sha": "91fc19b71d8ba7407d60619ba74b387091b5681a", "filename": "src/librustc_mir/util/elaborate_drops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc_mir%2Futil%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc_mir%2Futil%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Felaborate_drops.rs?ref=07c82e183bc92b76f10bbd7c3165dc959ec1ccad", "patch": "@@ -92,7 +92,7 @@ pub trait DropElaborator<'a, 'tcx>: fmt::Debug {\n #[derive(Debug)]\n struct DropCtxt<'l, 'b, 'tcx, D>\n where\n-    D: DropElaborator<'b, 'tcx> + 'l,\n+    D: DropElaborator<'b, 'tcx>,\n {\n     elaborator: &'l mut D,\n "}, {"sha": "ec0f431d9b25e211d2dcb0059f13624547a7ffe9", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07c82e183bc92b76f10bbd7c3165dc959ec1ccad/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=07c82e183bc92b76f10bbd7c3165dc959ec1ccad", "patch": "@@ -75,7 +75,6 @@ This API is completely unstable and subject to change.\n #![deny(rust_2018_idioms)]\n #![deny(internal)]\n #![deny(unused_lifetimes)]\n-#![allow(explicit_outlives_requirements)]\n \n #[macro_use] extern crate log;\n #[macro_use] extern crate syntax;"}]}