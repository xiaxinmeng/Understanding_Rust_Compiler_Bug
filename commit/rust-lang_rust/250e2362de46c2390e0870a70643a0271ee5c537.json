{"sha": "250e2362de46c2390e0870a70643a0271ee5c537", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1MGUyMzYyZGU0NmMyMzkwZTA4NzBhNzA2NDNhMDI3MWVlNWM1Mzc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-06-23T23:41:23Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-25T00:22:59Z"}, "message": "Move core::bool tests to run-pass\n\nThese are closer to language tests than library.", "tree": {"sha": "4410dc76180d8254501838bdcf5942015ff0b279", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4410dc76180d8254501838bdcf5942015ff0b279"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/250e2362de46c2390e0870a70643a0271ee5c537", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/250e2362de46c2390e0870a70643a0271ee5c537", "html_url": "https://github.com/rust-lang/rust/commit/250e2362de46c2390e0870a70643a0271ee5c537", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/250e2362de46c2390e0870a70643a0271ee5c537/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4203dcb351afabed7a7077ed61c50b30c0f806a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4203dcb351afabed7a7077ed61c50b30c0f806a3", "html_url": "https://github.com/rust-lang/rust/commit/4203dcb351afabed7a7077ed61c50b30c0f806a3"}], "stats": {"total": 176, "additions": 77, "deletions": 99}, "files": [{"sha": "c523cf7843439c368c9221562458e84573dc96ce", "filename": "src/libcore/bool.rs", "status": "modified", "additions": 0, "deletions": 99, "changes": 99, "blob_url": "https://github.com/rust-lang/rust/blob/250e2362de46c2390e0870a70643a0271ee5c537/src%2Flibcore%2Fbool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/250e2362de46c2390e0870a70643a0271ee5c537/src%2Flibcore%2Fbool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fbool.rs?ref=250e2362de46c2390e0870a70643a0271ee5c537", "patch": "@@ -12,102 +12,3 @@\n \n #![doc(primitive = \"bool\")]\n \n-#[cfg(test)]\n-mod tests {\n-    use realstd::prelude::*;\n-    use super::to_bit;\n-\n-    #[test]\n-    fn test_to_bit() {\n-        assert_eq!(to_bit::<u8>(true), 1u8);\n-        assert_eq!(to_bit::<u8>(false), 0u8);\n-    }\n-\n-    #[test]\n-    fn test_eq() {\n-        assert_eq!(false.eq(&true), false);\n-        assert_eq!(false == false, true);\n-        assert_eq!(false != true, true);\n-        assert_eq!(false.ne(&false), false);\n-    }\n-\n-    #[test]\n-    fn test_bitand() {\n-        assert_eq!(false.bitand(&false), false);\n-        assert_eq!(true.bitand(&false), false);\n-        assert_eq!(false.bitand(&true), false);\n-        assert_eq!(true.bitand(&true), true);\n-\n-        assert_eq!(false & false, false);\n-        assert_eq!(true & false, false);\n-        assert_eq!(false & true, false);\n-        assert_eq!(true & true, true);\n-    }\n-\n-    #[test]\n-    fn test_bitor() {\n-        assert_eq!(false.bitor(&false), false);\n-        assert_eq!(true.bitor(&false), true);\n-        assert_eq!(false.bitor(&true), true);\n-        assert_eq!(true.bitor(&true), true);\n-\n-        assert_eq!(false | false, false);\n-        assert_eq!(true | false, true);\n-        assert_eq!(false | true, true);\n-        assert_eq!(true | true, true);\n-    }\n-\n-    #[test]\n-    fn test_bitxor() {\n-        assert_eq!(false.bitxor(&false), false);\n-        assert_eq!(true.bitxor(&false), true);\n-        assert_eq!(false.bitxor(&true), true);\n-        assert_eq!(true.bitxor(&true), false);\n-\n-        assert_eq!(false ^ false, false);\n-        assert_eq!(true ^ false, true);\n-        assert_eq!(false ^ true, true);\n-        assert_eq!(true ^ true, false);\n-    }\n-\n-    #[test]\n-    fn test_not() {\n-        assert_eq!(!true, false);\n-        assert_eq!(!false, true);\n-    }\n-\n-    #[test]\n-    fn test_to_str() {\n-        let s = false.to_str();\n-        assert_eq!(s.as_slice(), \"false\");\n-        let s = true.to_str();\n-        assert_eq!(s.as_slice(), \"true\");\n-    }\n-\n-    #[test]\n-    fn test_ord() {\n-        assert!(true > false);\n-        assert!(!(false > true));\n-\n-        assert!(false < true);\n-        assert!(!(true < false));\n-\n-        assert!(false <= false);\n-        assert!(false >= false);\n-        assert!(true <= true);\n-        assert!(true >= true);\n-\n-        assert!(false <= true);\n-        assert!(!(false >= true));\n-        assert!(true >= false);\n-        assert!(!(true <= false));\n-    }\n-\n-    #[test]\n-    fn test_totalord() {\n-        assert!(true.cmp(&true) == Equal);\n-        assert!(false.cmp(&false) == Equal);\n-        assert!(true.cmp(&false) == Greater);\n-        assert!(false.cmp(&true) == Less);\n-    }\n-}"}, {"sha": "cb364d23387cfed7cfb5a9f47893c4d355d4b8f8", "filename": "src/test/run-pass/bool.rs", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/250e2362de46c2390e0870a70643a0271ee5c537/src%2Ftest%2Frun-pass%2Fbool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/250e2362de46c2390e0870a70643a0271ee5c537/src%2Ftest%2Frun-pass%2Fbool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbool.rs?ref=250e2362de46c2390e0870a70643a0271ee5c537", "patch": "@@ -0,0 +1,77 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Basic boolean tests\n+\n+fn main() {\n+    assert_eq!(false.eq(&true), false);\n+    assert_eq!(false == false, true);\n+    assert_eq!(false != true, true);\n+    assert_eq!(false.ne(&false), false);\n+\n+    assert_eq!(false.bitand(&false), false);\n+    assert_eq!(true.bitand(&false), false);\n+    assert_eq!(false.bitand(&true), false);\n+    assert_eq!(true.bitand(&true), true);\n+\n+    assert_eq!(false & false, false);\n+    assert_eq!(true & false, false);\n+    assert_eq!(false & true, false);\n+    assert_eq!(true & true, true);\n+\n+    assert_eq!(false.bitor(&false), false);\n+    assert_eq!(true.bitor(&false), true);\n+    assert_eq!(false.bitor(&true), true);\n+    assert_eq!(true.bitor(&true), true);\n+\n+    assert_eq!(false | false, false);\n+    assert_eq!(true | false, true);\n+    assert_eq!(false | true, true);\n+    assert_eq!(true | true, true);\n+\n+    assert_eq!(false.bitxor(&false), false);\n+    assert_eq!(true.bitxor(&false), true);\n+    assert_eq!(false.bitxor(&true), true);\n+    assert_eq!(true.bitxor(&true), false);\n+\n+    assert_eq!(false ^ false, false);\n+    assert_eq!(true ^ false, true);\n+    assert_eq!(false ^ true, true);\n+    assert_eq!(true ^ true, false);\n+\n+    assert_eq!(!true, false);\n+    assert_eq!(!false, true);\n+\n+    let s = false.to_str();\n+    assert_eq!(s.as_slice(), \"false\");\n+    let s = true.to_str();\n+    assert_eq!(s.as_slice(), \"true\");\n+\n+    assert!(true > false);\n+    assert!(!(false > true));\n+\n+    assert!(false < true);\n+    assert!(!(true < false));\n+\n+    assert!(false <= false);\n+    assert!(false >= false);\n+    assert!(true <= true);\n+    assert!(true >= true);\n+\n+    assert!(false <= true);\n+    assert!(!(false >= true));\n+    assert!(true >= false);\n+    assert!(!(true <= false));\n+\n+    assert!(true.cmp(&true) == Equal);\n+    assert!(false.cmp(&false) == Equal);\n+    assert!(true.cmp(&false) == Greater);\n+    assert!(false.cmp(&true) == Less);\n+}"}]}