{"sha": "64193a9eb860b0a284472da3ed9ef85854883066", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0MTkzYTllYjg2MGIwYTI4NDQ3MmRhM2VkOWVmODU4NTQ4ODMwNjY=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-10-28T00:16:00Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-10-28T00:16:26Z"}, "message": "Remove unnecessary suffixes", "tree": {"sha": "e72f39416f18e5e33bd0d6671688989a1f8b51d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e72f39416f18e5e33bd0d6671688989a1f8b51d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64193a9eb860b0a284472da3ed9ef85854883066", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64193a9eb860b0a284472da3ed9ef85854883066", "html_url": "https://github.com/rust-lang/rust/commit/64193a9eb860b0a284472da3ed9ef85854883066", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64193a9eb860b0a284472da3ed9ef85854883066/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47baebc68cb0cd36e9e098d33314ff533a5e65c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/47baebc68cb0cd36e9e098d33314ff533a5e65c6", "html_url": "https://github.com/rust-lang/rust/commit/47baebc68cb0cd36e9e098d33314ff533a5e65c6"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5e11cdd479436e6f02ad5f218d482790e45b7e60", "filename": "src/rustc/middle/trans/datum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64193a9eb860b0a284472da3ed9ef85854883066/src%2Frustc%2Fmiddle%2Ftrans%2Fdatum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64193a9eb860b0a284472da3ed9ef85854883066/src%2Frustc%2Fmiddle%2Ftrans%2Fdatum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fdatum.rs?ref=64193a9eb860b0a284472da3ed9ef85854883066", "patch": "@@ -620,7 +620,7 @@ impl Datum {\n             ty::ty_enum(did, ref substs) => {\n                 // Check whether this enum is a newtype enum:\n                 let variants = ty::enum_variants(ccx.tcx, did);\n-                if (*variants).len() != 1u || variants[0].args.len() != 1u {\n+                if (*variants).len() != 1 || variants[0].args.len() != 1 {\n                     return None;\n                 }\n "}]}