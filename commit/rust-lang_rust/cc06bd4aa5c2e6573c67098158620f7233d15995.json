{"sha": "cc06bd4aa5c2e6573c67098158620f7233d15995", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjMDZiZDRhYTVjMmU2NTczYzY3MDk4MTU4NjIwZjcyMzNkMTU5OTU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-08T22:32:32Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-08T22:33:16Z"}, "message": "rustc: Add some miscellaneous demands that pushdown had previously caught; put out burning tinderbox", "tree": {"sha": "519bf09f753857c700106fb510e1b0dc3b3c63a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/519bf09f753857c700106fb510e1b0dc3b3c63a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc06bd4aa5c2e6573c67098158620f7233d15995", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc06bd4aa5c2e6573c67098158620f7233d15995", "html_url": "https://github.com/rust-lang/rust/commit/cc06bd4aa5c2e6573c67098158620f7233d15995", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc06bd4aa5c2e6573c67098158620f7233d15995/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b02b50c695dd6c79f1ca5ab77e3ce432071d943b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b02b50c695dd6c79f1ca5ab77e3ce432071d943b", "html_url": "https://github.com/rust-lang/rust/commit/b02b50c695dd6c79f1ca5ab77e3ce432071d943b"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "17c9111349f79eebf025c237d336e8f89d930ef4", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cc06bd4aa5c2e6573c67098158620f7233d15995/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc06bd4aa5c2e6573c67098158620f7233d15995/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=cc06bd4aa5c2e6573c67098158620f7233d15995", "patch": "@@ -1628,6 +1628,8 @@ fn check_expr(&@fn_ctxt fcx, &@ast::expr expr) {\n             assert (ast::is_call_expr(e));\n \n             check_expr(fcx, e);\n+            demand::simple(fcx, e.span, fcx.ret_ty, expr_ty(fcx.ccx.tcx, e));\n+\n             write::nil_ty(fcx.ccx.tcx, a.id);\n         }\n \n@@ -1713,7 +1715,11 @@ fn check_expr(&@fn_ctxt fcx, &@ast::expr expr) {\n             auto lhs_t = expr_ty(fcx.ccx.tcx, lhs);\n             alt (struct(fcx.ccx.tcx, lhs_t)) {\n                 case (ty::ty_chan(?it)) { item_t = it; }\n-                case (_) { fail; }\n+                case (_) {\n+                    fcx.ccx.tcx.sess.span_err(expr.span,\n+                        #fmt(\"mismatched types: expected chan but found %s\",\n+                             ty_to_str(fcx.ccx.tcx, lhs_t)));\n+                }\n             }\n \n             write::ty_only_fixup(fcx, a.id, chan_t);\n@@ -1742,6 +1748,9 @@ fn check_expr(&@fn_ctxt fcx, &@ast::expr expr) {\n \n                     auto thn_t = block_ty(fcx.ccx.tcx, thn);\n                     auto elsopt_t = expr_ty(fcx.ccx.tcx, els);\n+\n+                    demand::simple(fcx, expr.span, thn_t, elsopt_t);\n+\n                     if (!ty::type_is_bot(fcx.ccx.tcx, elsopt_t)) {\n                         elsopt_t\n                     } else {\n@@ -1790,6 +1799,9 @@ fn check_expr(&@fn_ctxt fcx, &@ast::expr expr) {\n             check_expr(fcx, cond);\n             check_block(fcx, body);\n \n+            demand::simple(fcx, cond.span, ty::mk_bool(fcx.ccx.tcx),\n+                           expr_ty(fcx.ccx.tcx, cond));\n+\n             auto typ = ty::mk_nil(fcx.ccx.tcx);\n             write::ty_only_fixup(fcx, a.id, typ);\n         }"}]}