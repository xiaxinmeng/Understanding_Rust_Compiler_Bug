{"sha": "a51b13042e48c40a87597496fac01dc605aca55d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1MWIxMzA0MmU0OGM0MGE4NzU5NzQ5NmZhYzAxZGM2MDVhY2E1NWQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-11-12T13:57:44Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-11-12T13:57:44Z"}, "message": "Add --check option to rustdoc", "tree": {"sha": "b8363568e8cc3b556e0b90c74dfed7e2a9837d6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8363568e8cc3b556e0b90c74dfed7e2a9837d6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a51b13042e48c40a87597496fac01dc605aca55d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a51b13042e48c40a87597496fac01dc605aca55d", "html_url": "https://github.com/rust-lang/rust/commit/a51b13042e48c40a87597496fac01dc605aca55d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a51b13042e48c40a87597496fac01dc605aca55d/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7801d6c7cc19ab22bdebcc8efa894a564c53469", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7801d6c7cc19ab22bdebcc8efa894a564c53469", "html_url": "https://github.com/rust-lang/rust/commit/f7801d6c7cc19ab22bdebcc8efa894a564c53469"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "c248d57a9ddf4bc4f9dc16de9b85c215ea603111", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a51b13042e48c40a87597496fac01dc605aca55d/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a51b13042e48c40a87597496fac01dc605aca55d/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=a51b13042e48c40a87597496fac01dc605aca55d", "patch": "@@ -145,6 +145,9 @@ pub struct Options {\n     pub render_options: RenderOptions,\n     /// Output format rendering (used only for \"show-coverage\" option for the moment)\n     pub output_format: Option<OutputFormat>,\n+    /// If this option is set to `true`, rustdoc will only run checks and not generate\n+    /// documentation.\n+    pub run_check: bool,\n }\n \n impl fmt::Debug for Options {\n@@ -185,6 +188,7 @@ impl fmt::Debug for Options {\n             .field(\"runtool\", &self.runtool)\n             .field(\"runtool_args\", &self.runtool_args)\n             .field(\"enable-per-target-ignores\", &self.enable_per_target_ignores)\n+            .field(\"run_check\", &self.run_check)\n             .finish()\n     }\n }\n@@ -581,6 +585,7 @@ impl Options {\n         let enable_per_target_ignores = matches.opt_present(\"enable-per-target-ignores\");\n         let document_private = matches.opt_present(\"document-private-items\");\n         let document_hidden = matches.opt_present(\"document-hidden-items\");\n+        let run_check = matches.opt_present(\"check\");\n \n         let (lint_opts, describe_lints, lint_cap) = get_cmd_lint_options(matches, error_format);\n \n@@ -616,6 +621,7 @@ impl Options {\n             runtool_args,\n             enable_per_target_ignores,\n             test_builder,\n+            run_check,\n             render_options: RenderOptions {\n                 output,\n                 external_html,"}, {"sha": "d23c722e78edf741c4a65dcb56afa4a9cbd76052", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a51b13042e48c40a87597496fac01dc605aca55d/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a51b13042e48c40a87597496fac01dc605aca55d/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=a51b13042e48c40a87597496fac01dc605aca55d", "patch": "@@ -423,6 +423,7 @@ fn opts() -> Vec<RustcOptGroup> {\n                 \"specified the rustc-like binary to use as the test builder\",\n             )\n         }),\n+        unstable(\"check\", |o| o.optflag(\"\", \"check\", \"Run rustdoc checks\")),\n     ]\n }\n \n@@ -514,6 +515,7 @@ fn main_options(options: config::Options) -> MainResult {\n     // but we can't crates the Handler ahead of time because it's not Send\n     let diag_opts = (options.error_format, options.edition, options.debugging_opts.clone());\n     let show_coverage = options.show_coverage;\n+    let run_check = options.run_check;\n \n     // First, parse the crate and extract all relevant information.\n     info!(\"starting to run rustc\");\n@@ -539,6 +541,9 @@ fn main_options(options: config::Options) -> MainResult {\n         // if we ran coverage, bail early, we don't need to also generate docs at this point\n         // (also we didn't load in any of the useful passes)\n         return Ok(());\n+    } else if run_check {\n+        // Since we're in \"check\" mode, no need to generate anything beyond this point.\n+        return Ok(());\n     }\n \n     info!(\"going to format\");"}]}