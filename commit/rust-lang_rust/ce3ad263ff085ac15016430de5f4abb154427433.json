{"sha": "ce3ad263ff085ac15016430de5f4abb154427433", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlM2FkMjYzZmYwODVhYzE1MDE2NDMwZGU1ZjRhYmIxNTQ0Mjc0MzM=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2018-02-24T23:04:08Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2018-02-24T23:04:08Z"}, "message": "added link to sync containers", "tree": {"sha": "978ead6f5c7e6939ea212a301e67063952a237d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/978ead6f5c7e6939ea212a301e67063952a237d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce3ad263ff085ac15016430de5f4abb154427433", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce3ad263ff085ac15016430de5f4abb154427433", "html_url": "https://github.com/rust-lang/rust/commit/ce3ad263ff085ac15016430de5f4abb154427433", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce3ad263ff085ac15016430de5f4abb154427433/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43de01f97eeee13f9bf9f19b0b241e8368633d11", "url": "https://api.github.com/repos/rust-lang/rust/commits/43de01f97eeee13f9bf9f19b0b241e8368633d11", "html_url": "https://github.com/rust-lang/rust/commit/43de01f97eeee13f9bf9f19b0b241e8368633d11"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "91074c18d771a3f3fa3ffd12aa11f775eeadce32", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ce3ad263ff085ac15016430de5f4abb154427433/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce3ad263ff085ac15016430de5f4abb154427433/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=ce3ad263ff085ac15016430de5f4abb154427433", "patch": "@@ -24,7 +24,8 @@\n //! controlled manner. Both `Cell<T>` and `RefCell<T>` allows to do this in a single threaded\n //! way. However, neither `Cell<T>` nor `RefCell<T>` are thread safe (they do not implement\n //! `Sync`), if you need to do Aliasing and Mutation between multiple threads is possible to use\n-//! `Mutex`, `RwLock` or `AtomicXXX`.\n+//! [`Mutex`](../sync/struct.Mutex.html), [`RwLock`](../sync/struct.RwLock.html) or\n+//! [`atomic`](../sync/atomic/index.html) types.\n //!\n //! Values of the `Cell<T>` and `RefCell<T>` types may be mutated through shared references (i.e.\n //! the common `&T` type), whereas most Rust types can only be mutated through unique (`&mut T`)"}]}