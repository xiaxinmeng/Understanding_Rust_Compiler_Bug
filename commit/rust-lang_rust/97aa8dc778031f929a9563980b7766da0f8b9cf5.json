{"sha": "97aa8dc778031f929a9563980b7766da0f8b9cf5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3YWE4ZGM3NzgwMzFmOTI5YTk1NjM5ODBiNzc2NmRhMGY4YjljZjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-11T08:20:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-11T08:20:11Z"}, "message": "Auto merge of #5450 - matthiaskrgr:rustup_41, r=phansch\n\nrustup https://github.com/rust-lang/rust/pull/69745\n\nchangelog: none", "tree": {"sha": "9308b42abbf0c38af2800be5249559339db195b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9308b42abbf0c38af2800be5249559339db195b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97aa8dc778031f929a9563980b7766da0f8b9cf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97aa8dc778031f929a9563980b7766da0f8b9cf5", "html_url": "https://github.com/rust-lang/rust/commit/97aa8dc778031f929a9563980b7766da0f8b9cf5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97aa8dc778031f929a9563980b7766da0f8b9cf5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e8c0c5ae049157f8301f8cfc4cfbf8210e281dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e8c0c5ae049157f8301f8cfc4cfbf8210e281dd", "html_url": "https://github.com/rust-lang/rust/commit/5e8c0c5ae049157f8301f8cfc4cfbf8210e281dd"}, {"sha": "4352c8555b536c72948b0228e09dab22ea83c547", "url": "https://api.github.com/repos/rust-lang/rust/commits/4352c8555b536c72948b0228e09dab22ea83c547", "html_url": "https://github.com/rust-lang/rust/commit/4352c8555b536c72948b0228e09dab22ea83c547"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "12c9ba8dcd20e3db48f5eada7f5fc9bf3f694885", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97aa8dc778031f929a9563980b7766da0f8b9cf5/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97aa8dc778031f929a9563980b7766da0f8b9cf5/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=97aa8dc778031f929a9563980b7766da0f8b9cf5", "patch": "@@ -229,7 +229,7 @@ fn lint_for_missing_headers<'a, 'tcx>(\n                 if let Some(body_id) = body_id;\n                 if let Some(future) = cx.tcx.lang_items().future_trait();\n                 let def_id = cx.tcx.hir().body_owner_def_id(body_id);\n-                let mir = cx.tcx.optimized_mir(def_id);\n+                let mir = cx.tcx.optimized_mir(def_id.to_def_id());\n                 let ret_ty = mir.return_ty();\n                 if implements_trait(cx, ret_ty, future, &[]);\n                 if let ty::Opaque(_, subs) = ret_ty.kind;"}, {"sha": "a1fed3fb6e205595ae9edccff2e49124ace435fb", "filename": "clippy_lints/src/enum_clike.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/97aa8dc778031f929a9563980b7766da0f8b9cf5/clippy_lints%2Fsrc%2Fenum_clike.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97aa8dc778031f929a9563980b7766da0f8b9cf5/clippy_lints%2Fsrc%2Fenum_clike.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_clike.rs?ref=97aa8dc778031f929a9563980b7766da0f8b9cf5", "patch": "@@ -46,10 +46,10 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnportableVariant {\n             for var in def.variants {\n                 if let Some(anon_const) = &var.disr_expr {\n                     let def_id = cx.tcx.hir().body_owner_def_id(anon_const.body);\n-                    let mut ty = cx.tcx.type_of(def_id);\n+                    let mut ty = cx.tcx.type_of(def_id.to_def_id());\n                     let constant = cx\n                         .tcx\n-                        .const_eval_poly(def_id)\n+                        .const_eval_poly(def_id.to_def_id())\n                         .ok()\n                         .map(|val| rustc_middle::ty::Const::from_value(cx.tcx, val, ty));\n                     if let Some(Constant::Int(val)) = constant.and_then(miri_to_const) {"}, {"sha": "8b87f4c896adc8dd28ce3e76337c9d6c4732a80a", "filename": "clippy_lints/src/implicit_return.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/97aa8dc778031f929a9563980b7766da0f8b9cf5/clippy_lints%2Fsrc%2Fimplicit_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97aa8dc778031f929a9563980b7766da0f8b9cf5/clippy_lints%2Fsrc%2Fimplicit_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fimplicit_return.rs?ref=97aa8dc778031f929a9563980b7766da0f8b9cf5", "patch": "@@ -135,11 +135,11 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for ImplicitReturn {\n         let def_id = cx.tcx.hir().body_owner_def_id(body.id());\n \n         // Building MIR for `fn`s with unsatisfiable preds results in ICE.\n-        if fn_has_unsatisfiable_preds(cx, def_id) {\n+        if fn_has_unsatisfiable_preds(cx, def_id.to_def_id()) {\n             return;\n         }\n \n-        let mir = cx.tcx.optimized_mir(def_id);\n+        let mir = cx.tcx.optimized_mir(def_id.to_def_id());\n \n         // checking return type through MIR, HIR is not able to determine inferred closure return types\n         // make sure it's not a macro"}, {"sha": "b3209030aa475f2209ebd617693e8472d3f8b372", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/97aa8dc778031f929a9563980b7766da0f8b9cf5/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97aa8dc778031f929a9563980b7766da0f8b9cf5/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=97aa8dc778031f929a9563980b7766da0f8b9cf5", "patch": "@@ -113,8 +113,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessPassByValue {\n \n         let preds = traits::elaborate_predicates(cx.tcx, cx.param_env.caller_bounds.to_vec())\n             .filter(|p| !p.is_global())\n-            .filter_map(|pred| {\n-                if let ty::Predicate::Trait(poly_trait_ref, _) = pred {\n+            .filter_map(|obligation| {\n+                if let ty::Predicate::Trait(poly_trait_ref, _) = obligation.predicate {\n                     if poly_trait_ref.def_id() == sized_trait || poly_trait_ref.skip_binder().has_escaping_bound_vars()\n                     {\n                         return None;"}, {"sha": "c315b575ef59b22aa6a8a8c2367c4eb91e46ed0f", "filename": "clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/97aa8dc778031f929a9563980b7766da0f8b9cf5/clippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97aa8dc778031f929a9563980b7766da0f8b9cf5/clippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_clone.rs?ref=97aa8dc778031f929a9563980b7766da0f8b9cf5", "patch": "@@ -80,15 +80,15 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for RedundantClone {\n         let def_id = cx.tcx.hir().body_owner_def_id(body.id());\n \n         // Building MIR for `fn`s with unsatisfiable preds results in ICE.\n-        if fn_has_unsatisfiable_preds(cx, def_id) {\n+        if fn_has_unsatisfiable_preds(cx, def_id.to_def_id()) {\n             return;\n         }\n \n-        let mir = cx.tcx.optimized_mir(def_id);\n+        let mir = cx.tcx.optimized_mir(def_id.to_def_id());\n         let mir_read_only = mir.unwrap_read_only();\n \n         let maybe_storage_live_result = MaybeStorageLive\n-            .into_engine(cx.tcx, mir, def_id)\n+            .into_engine(cx.tcx, mir, def_id.to_def_id())\n             .iterate_to_fixpoint()\n             .into_results_cursor(mir);\n         let mut possible_borrower = {"}, {"sha": "bf55e82f96f9e399e2371db7a78c30723ff40ac1", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/97aa8dc778031f929a9563980b7766da0f8b9cf5/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97aa8dc778031f929a9563980b7766da0f8b9cf5/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=97aa8dc778031f929a9563980b7766da0f8b9cf5", "patch": "@@ -1389,7 +1389,12 @@ pub fn fn_has_unsatisfiable_preds(cx: &LateContext<'_, '_>, did: DefId) -> bool\n         .iter()\n         .filter_map(|(p, _)| if p.is_global() { Some(*p) } else { None })\n         .collect();\n-    !traits::normalize_and_test_predicates(cx.tcx, traits::elaborate_predicates(cx.tcx, predicates).collect())\n+    !traits::normalize_and_test_predicates(\n+        cx.tcx,\n+        traits::elaborate_predicates(cx.tcx, predicates)\n+            .map(|o| o.predicate)\n+            .collect::<Vec<_>>(),\n+    )\n }\n \n #[cfg(test)]"}]}