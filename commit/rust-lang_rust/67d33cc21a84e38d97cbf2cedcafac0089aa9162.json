{"sha": "67d33cc21a84e38d97cbf2cedcafac0089aa9162", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3ZDMzY2MyMWE4NGUzOGQ5N2NiZjJjZWRjYWZhYzAwODlhYTkxNjI=", "commit": {"author": {"name": "uHOOCCOOHu", "email": "hooccooh1896@gmail.com", "date": "2019-09-05T10:39:56Z"}, "committer": {"name": "uHOOCCOOHu", "email": "hooccooh1896@gmail.com", "date": "2019-09-05T10:50:04Z"}, "message": "Hoist macros from extern crate with macro_use", "tree": {"sha": "9523cfe7f2d14a084434a154ec03486e177c95a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9523cfe7f2d14a084434a154ec03486e177c95a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67d33cc21a84e38d97cbf2cedcafac0089aa9162", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEXLDp5dXVcfV/VA/qztOS3gxIPQAFAl1w6FwACgkQztOS3gxI\nPQDTPQ//f1e2ErF4GDdpGlGnWEq/A+H2EZf/4YZIQEzGJgzWLS6gCjDJNXo1MKpe\n7CBSaA+6ejAK2uY9q3aJQDSLPEDpZ9e06B7iNC62mu9dDjTRn4uftRM921R8omFM\nO3Blnvwi2Z9pmFGwQSFFVTg1ldqY4vAnjA+b2hiwze/VFnhfQIwcmwPOVWw/1TBF\n4nDFe04EuTquB3LtFVDVsRN9KK7y3fVnPcLJRKpZ/g0eQE70frtIPnYolwwb/8yi\nKzYBrJt8JtnEOTXc9Hxiew49LXBwXC9Mi+1pxRcVd9XBUCiZBcpYuYu8N53q2XuT\nGVqk3LUjbHqNXYQDlLrmg0Iwds4ohiBhy49ZNcSIr7aqlq4QPtQAg8jgZ0iD+nGD\nss4DkIEPh56q7NHPENS94hLurMkMJLM+Lu44VlI/3JQ1ZPpC0TuGnEH6NamCndJO\n0hHkZ5iOaHgXzEwOr5O7QelKrYm82xd4IGBqR3jqx9+pjNehPjewQ/dRVE9bOq/W\n6ybqUVzvgwjvp+NjN2mYOl8c2M5m46QsZne1hOWv1bolMQltMLkG3A75ZYmpzGao\nnzFDa/CemCGexFDqmQbYVFTNG3DRC7lcR6j3/D6G+TZRQieDNjESEggphYs0B5EW\ne/OGYH2KK9inAfChXDxjPx7jjbI6aDwOYOpKM0Ryczp96SHemqs=\n=cVVT\n-----END PGP SIGNATURE-----", "payload": "tree 9523cfe7f2d14a084434a154ec03486e177c95a0\nparent dec43a0c5dd164279f94e9ab6e6d69ec28e294fd\nauthor uHOOCCOOHu <hooccooh1896@gmail.com> 1567679996 +0800\ncommitter uHOOCCOOHu <hooccooh1896@gmail.com> 1567680604 +0800\n\nHoist macros from extern crate with macro_use\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67d33cc21a84e38d97cbf2cedcafac0089aa9162", "html_url": "https://github.com/rust-lang/rust/commit/67d33cc21a84e38d97cbf2cedcafac0089aa9162", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67d33cc21a84e38d97cbf2cedcafac0089aa9162/comments", "author": null, "committer": null, "parents": [{"sha": "dec43a0c5dd164279f94e9ab6e6d69ec28e294fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/dec43a0c5dd164279f94e9ab6e6d69ec28e294fd", "html_url": "https://github.com/rust-lang/rust/commit/dec43a0c5dd164279f94e9ab6e6d69ec28e294fd"}], "stats": {"total": 34, "additions": 20, "deletions": 14}, "files": [{"sha": "698e40247f9f765f75a348edabf1e8ac6ce4b2a0", "filename": "crates/ra_hir/src/nameres/collector.rs", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/67d33cc21a84e38d97cbf2cedcafac0089aa9162/crates%2Fra_hir%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67d33cc21a84e38d97cbf2cedcafac0089aa9162/crates%2Fra_hir%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Fcollector.rs?ref=67d33cc21a84e38d97cbf2cedcafac0089aa9162", "patch": "@@ -531,20 +531,26 @@ where\n             self.def_collector.import_all_macros_exported(prelude_module);\n         }\n \n+        // This should be processed eagerly instead of deferred to resolving.\n+        // `#[macro_use] extern crate` is hoisted to imports macros before collecting\n+        // any other items.\n+        for item in items {\n+            if let raw::RawItem::Import(import_id) = *item {\n+                let import = self.raw_items[import_id].clone();\n+                if import.is_extern_crate && import.is_macro_use {\n+                    self.def_collector.import_macros_from_extern_crate(&import);\n+                }\n+            }\n+        }\n+\n         for item in items {\n             match *item {\n                 raw::RawItem::Module(m) => self.collect_module(&self.raw_items[m]),\n-                raw::RawItem::Import(import_id) => {\n-                    let import = self.raw_items[import_id].clone();\n-                    // This should be processed eagerly instead of deferred to resolving.\n-                    // Otherwise, since it will only mutate `global_macro_scope`\n-                    // without `update` names in `mod`s, unresolved macros cannot be expanded.\n-                    if import.is_extern_crate && import.is_macro_use {\n-                        self.def_collector.import_macros_from_extern_crate(&import);\n-                    }\n-\n-                    self.def_collector.unresolved_imports.push((self.module_id, import_id, import));\n-                }\n+                raw::RawItem::Import(import_id) => self.def_collector.unresolved_imports.push((\n+                    self.module_id,\n+                    import_id,\n+                    self.raw_items[import_id].clone(),\n+                )),\n                 raw::RawItem::Def(def) => self.define_def(&self.raw_items[def]),\n                 raw::RawItem::Macro(mac) => self.collect_macro(&self.raw_items[mac]),\n             }"}, {"sha": "aece1515b5b294ec087caf88a32d9e4dcaadef91", "filename": "crates/ra_hir/src/nameres/tests/macros.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/67d33cc21a84e38d97cbf2cedcafac0089aa9162/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67d33cc21a84e38d97cbf2cedcafac0089aa9162/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs?ref=67d33cc21a84e38d97cbf2cedcafac0089aa9162", "patch": "@@ -144,16 +144,16 @@ fn macro_rules_from_other_crates_are_visible_with_macro_use() {\n     let map = def_map_with_crate_graph(\n         \"\n         //- /main.rs\n-        #[macro_use]\n-        extern crate foo;\n-\n         structs!(Foo);\n         structs_priv!(Bar);\n         structs_not_exported!(MacroNotResolved1);\n         crate::structs!(MacroNotResolved2);\n \n         mod bar;\n \n+        #[macro_use]\n+        extern crate foo;\n+\n         //- /bar.rs\n         structs!(Baz);\n         crate::structs!(MacroNotResolved3);"}]}