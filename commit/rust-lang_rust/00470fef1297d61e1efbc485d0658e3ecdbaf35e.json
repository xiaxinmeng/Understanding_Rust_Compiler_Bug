{"sha": "00470fef1297d61e1efbc485d0658e3ecdbaf35e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwNDcwZmVmMTI5N2Q2MWUxZWZiYzQ4NWQwNjU4ZTNlY2RiYWYzNWU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-09-02T17:49:03Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-09-02T17:49:03Z"}, "message": "rt: Remove evecs from the shape code", "tree": {"sha": "edf8e766d29b2b2740f4ad214ebaf34cddcd1ab3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edf8e766d29b2b2740f4ad214ebaf34cddcd1ab3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00470fef1297d61e1efbc485d0658e3ecdbaf35e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00470fef1297d61e1efbc485d0658e3ecdbaf35e", "html_url": "https://github.com/rust-lang/rust/commit/00470fef1297d61e1efbc485d0658e3ecdbaf35e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00470fef1297d61e1efbc485d0658e3ecdbaf35e/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10ea78777262befef997bf61e7c21db0aa6792e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/10ea78777262befef997bf61e7c21db0aa6792e7", "html_url": "https://github.com/rust-lang/rust/commit/10ea78777262befef997bf61e7c21db0aa6792e7"}], "stats": {"total": 55, "additions": 0, "deletions": 55}, "files": [{"sha": "47f8b1d688e80a11df4d9eb1088dd7155d9f787d", "filename": "src/rt/rust_shape.cpp", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/00470fef1297d61e1efbc485d0658e3ecdbaf35e/src%2Frt%2Frust_shape.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/00470fef1297d61e1efbc485d0658e3ecdbaf35e/src%2Frt%2Frust_shape.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_shape.cpp?ref=00470fef1297d61e1efbc485d0658e3ecdbaf35e", "patch": "@@ -333,10 +333,6 @@ class cmp : public data<cmp,ptr_pair> {\n                          in_dp),\n       result(0) {}\n \n-    void walk_evec(bool is_pod, uint16_t sp_size) {\n-        walk_vec(is_pod, get_evec_data_range(dp));\n-    }\n-\n     void walk_vec(bool is_pod, uint16_t sp_size) {\n         walk_vec(is_pod, get_vec_data_range(dp));\n     }"}, {"sha": "16a271cf5ff138f82443aa599531697555b2674d", "filename": "src/rt/rust_shape.h", "status": "modified", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/00470fef1297d61e1efbc485d0658e3ecdbaf35e/src%2Frt%2Frust_shape.h", "raw_url": "https://github.com/rust-lang/rust/raw/00470fef1297d61e1efbc485d0658e3ecdbaf35e/src%2Frt%2Frust_shape.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_shape.h?ref=00470fef1297d61e1efbc485d0658e3ecdbaf35e", "patch": "@@ -33,7 +33,6 @@ const uint8_t SHAPE_I32 = 6u;\n const uint8_t SHAPE_I64 = 7u;\n const uint8_t SHAPE_F32 = 8u;\n const uint8_t SHAPE_F64 = 9u;\n-const uint8_t SHAPE_EVEC = 10u;\n const uint8_t SHAPE_VEC = 11u;\n const uint8_t SHAPE_TAG = 12u;\n const uint8_t SHAPE_BOX = 13u;\n@@ -237,7 +236,6 @@ class ctxt {\n     inline size_align get_size_align(const uint8_t *&addr);\n \n private:\n-    void walk_evec();\n     void walk_vec();\n     void walk_tag();\n     void walk_box();\n@@ -335,7 +333,6 @@ ctxt<T>::walk() {\n     case SHAPE_I64:     WALK_NUMBER(int64_t);   break;\n     case SHAPE_F32:     WALK_NUMBER(float);     break;\n     case SHAPE_F64:     WALK_NUMBER(double);    break;\n-    case SHAPE_EVEC:    walk_evec();            break;\n     case SHAPE_VEC:     walk_vec();             break;\n     case SHAPE_TAG:     walk_tag();             break;\n     case SHAPE_BOX:     walk_box();             break;\n@@ -378,19 +375,6 @@ ctxt<T>::get_variant_sp(tag_info &tinfo, uint32_t variant_id) {\n     return std::make_pair(variant_ptr, variant_end);\n }\n \n-template<typename T>\n-void\n-ctxt<T>::walk_evec() {\n-    bool is_pod = *sp++;\n-\n-    uint16_t sp_size = get_u16_bump(sp);\n-    const uint8_t *end_sp = sp + sp_size;\n-\n-    static_cast<T *>(this)->walk_evec(is_pod, sp_size);\n-\n-    sp = end_sp;\n-}\n-\n template<typename T>\n void\n ctxt<T>::walk_vec() {\n@@ -514,9 +498,6 @@ class print : public ctxt<print> {\n                   const type_param *params, const uint8_t *end_sp);\n     void walk_var(uint8_t param);\n \n-    void walk_evec(bool is_pod, uint16_t sp_size) {\n-        DPRINT(\"evec<\"); walk(); DPRINT(\">\");\n-    }\n     void walk_vec(bool is_pod, uint16_t sp_size) {\n         DPRINT(\"vec<\"); walk(); DPRINT(\">\");\n     }\n@@ -571,9 +552,6 @@ class size_of : public ctxt<size_of> {\n     void walk_fn()      { sa.set(sizeof(void *)*2, sizeof(void *)); }\n     void walk_obj()     { sa.set(sizeof(void *)*2, sizeof(void *)); }\n \n-    void walk_evec(bool is_pod, uint16_t sp_size) {\n-        sa.set(sizeof(void *), sizeof(void *));\n-    }\n     void walk_vec(bool is_pod, uint16_t sp_size) {\n         sa.set(sizeof(void *), sizeof(void *));\n     }\n@@ -781,9 +759,7 @@ class data : public ctxt< data<T,U> > {\n     void walk_obj_contents(ptr &dp);\n     void walk_variant(tag_info &tinfo, uint32_t variant);\n \n-    static std::pair<uint8_t *,uint8_t *> get_evec_data_range(ptr dp);\n     static std::pair<uint8_t *,uint8_t *> get_vec_data_range(ptr dp);\n-    static std::pair<ptr_pair,ptr_pair> get_evec_data_range(ptr_pair &dp);\n     static std::pair<ptr_pair,ptr_pair> get_vec_data_range(ptr_pair &dp);\n \n public:\n@@ -803,9 +779,6 @@ class data : public ctxt< data<T,U> > {\n         static_cast<T *>(this)->walk_struct(end_sp);\n     }\n \n-    void walk_evec(bool is_pod, uint16_t sp_size) {\n-        DATA_SIMPLE(void *, walk_evec(is_pod, sp_size));\n-    }\n     void walk_vec(bool is_pod, uint16_t sp_size) {\n         DATA_SIMPLE(void *, walk_vec(is_pod, sp_size));\n     }\n@@ -865,13 +838,6 @@ data<T,U>::walk_variant(tag_info &tinfo, uint32_t variant_id) {\n                                          variant_ptr_and_end);\n }\n \n-template<typename T,typename U>\n-std::pair<uint8_t *,uint8_t *>\n-data<T,U>::get_evec_data_range(ptr dp) {\n-    rust_evec *vp = bump_dp<rust_evec *>(dp);\n-    return std::make_pair(vp->data, vp->data + vp->fill);\n-}\n-\n template<typename T,typename U>\n std::pair<uint8_t *,uint8_t *>\n data<T,U>::get_vec_data_range(ptr dp) {\n@@ -880,16 +846,6 @@ data<T,U>::get_vec_data_range(ptr dp) {\n     return std::make_pair(data, data + ptr->fill);\n }\n \n-template<typename T,typename U>\n-std::pair<ptr_pair,ptr_pair>\n-data<T,U>::get_evec_data_range(ptr_pair &dp) {\n-    std::pair<uint8_t *,uint8_t *> fst = get_evec_data_range(dp.fst);\n-    std::pair<uint8_t *,uint8_t *> snd = get_evec_data_range(dp.snd);\n-    ptr_pair start(fst.first, snd.first);\n-    ptr_pair end(fst.second, snd.second);\n-    return std::make_pair(start, end);\n-}\n-\n template<typename T,typename U>\n std::pair<ptr_pair,ptr_pair>\n data<T,U>::get_vec_data_range(ptr_pair &dp) {\n@@ -1014,13 +970,6 @@ class log : public data<log,ptr> {\n       out(other.out),\n       prefix(\"\") {}\n \n-    void walk_evec(bool is_pod, uint16_t sp_size) {\n-        if (!get_dp<void *>(dp))\n-            out << prefix << \"(null)\";\n-        else\n-            walk_vec(is_pod, get_evec_data_range(dp));\n-    }\n-\n     void walk_vec(bool is_pod, uint16_t sp_size) {\n         if (!get_dp<void *>(dp))\n             out << prefix << \"(null)\";"}]}