{"sha": "b061550ed351751db4bb3dcc356f44daa9a3542d", "node_id": "C_kwDOAAsO6NoAKGIwNjE1NTBlZDM1MTc1MWRiNGJiM2RjYzM1NmY0NGRhYTlhMzU0MmQ", "commit": {"author": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-08-24T05:22:27Z"}, "committer": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-08-24T05:37:49Z"}, "message": "Remove the `$tcx:tt` parameter from `rustc_query_description`\n\nIt's unnecessary.", "tree": {"sha": "4a062d0040f7185f564cfca766b0e51b767293f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a062d0040f7185f564cfca766b0e51b767293f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b061550ed351751db4bb3dcc356f44daa9a3542d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b061550ed351751db4bb3dcc356f44daa9a3542d", "html_url": "https://github.com/rust-lang/rust/commit/b061550ed351751db4bb3dcc356f44daa9a3542d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b061550ed351751db4bb3dcc356f44daa9a3542d/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b8e2a52ff29d400b4d869fad1d917ffa9bdce59", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b8e2a52ff29d400b4d869fad1d917ffa9bdce59", "html_url": "https://github.com/rust-lang/rust/commit/7b8e2a52ff29d400b4d869fad1d917ffa9bdce59"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "cfbc80b97569bb21630c46222f136ccb0bc4f7be", "filename": "compiler/rustc_macros/src/query.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b061550ed351751db4bb3dcc356f44daa9a3542d/compiler%2Frustc_macros%2Fsrc%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b061550ed351751db4bb3dcc356f44daa9a3542d/compiler%2Frustc_macros%2Fsrc%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fquery.rs?ref=b061550ed351751db4bb3dcc356f44daa9a3542d", "patch": "@@ -258,13 +258,13 @@ fn add_query_description_impl(query: &Query, impls: &mut proc_macro2::TokenStrea\n         let try_load_from_disk = if let Some((tcx, id, block)) = modifiers.load_cached.as_ref() {\n             // Use custom code to load the query from disk\n             quote! {\n-                const TRY_LOAD_FROM_DISK: Option<fn(QueryCtxt<$tcx>, SerializedDepNodeIndex) -> Option<Self::Value>>\n+                const TRY_LOAD_FROM_DISK: Option<fn(QueryCtxt<'tcx>, SerializedDepNodeIndex) -> Option<Self::Value>>\n                     = Some(|#tcx, #id| { #block });\n             }\n         } else {\n             // Use the default code to load the query from disk\n             quote! {\n-                const TRY_LOAD_FROM_DISK: Option<fn(QueryCtxt<$tcx>, SerializedDepNodeIndex) -> Option<Self::Value>>\n+                const TRY_LOAD_FROM_DISK: Option<fn(QueryCtxt<'tcx>, SerializedDepNodeIndex) -> Option<Self::Value>>\n                     = Some(|tcx, id| tcx.on_disk_cache().as_ref()?.try_load_query_result(*tcx, id));\n             }\n         };\n@@ -291,7 +291,7 @@ fn add_query_description_impl(query: &Query, impls: &mut proc_macro2::TokenStrea\n                 false\n             }\n \n-            const TRY_LOAD_FROM_DISK: Option<fn(QueryCtxt<$tcx>, SerializedDepNodeIndex) -> Option<Self::Value>> = None;\n+            const TRY_LOAD_FROM_DISK: Option<fn(QueryCtxt<'tcx>, SerializedDepNodeIndex) -> Option<Self::Value>> = None;\n         }\n     };\n \n@@ -300,7 +300,7 @@ fn add_query_description_impl(query: &Query, impls: &mut proc_macro2::TokenStrea\n \n     let desc = quote! {\n         #[allow(unused_variables)]\n-        fn describe(tcx: QueryCtxt<$tcx>, key: Self::Key) -> String {\n+        fn describe(tcx: QueryCtxt<'tcx>, key: Self::Key) -> String {\n             let (#tcx, #key) = (*tcx, key);\n             ::rustc_middle::ty::print::with_no_trimmed_paths!(\n                 format!(#desc)\n@@ -309,7 +309,7 @@ fn add_query_description_impl(query: &Query, impls: &mut proc_macro2::TokenStrea\n     };\n \n     impls.extend(quote! {\n-        (#name<$tcx:tt>) => {\n+        (#name) => {\n             #desc\n             #cache\n         };"}, {"sha": "462f9a42aea7e54b33cc46d2e16bc07ea7b236c8", "filename": "compiler/rustc_query_impl/src/plumbing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b061550ed351751db4bb3dcc356f44daa9a3542d/compiler%2Frustc_query_impl%2Fsrc%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b061550ed351751db4bb3dcc356f44daa9a3542d/compiler%2Frustc_query_impl%2Fsrc%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_impl%2Fsrc%2Fplumbing.rs?ref=b061550ed351751db4bb3dcc356f44daa9a3542d", "patch": "@@ -322,7 +322,7 @@ macro_rules! define_queries {\n         }\n \n         impl<'tcx> QueryDescription<QueryCtxt<'tcx>> for queries::$name<'tcx> {\n-            rustc_query_description! { $name<'tcx> }\n+            rustc_query_description! { $name }\n \n             type Cache = query_storage::$name<'tcx>;\n "}]}