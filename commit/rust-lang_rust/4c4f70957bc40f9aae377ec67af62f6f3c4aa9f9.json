{"sha": "4c4f70957bc40f9aae377ec67af62f6f3c4aa9f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjNGY3MDk1N2JjNDBmOWFhZTM3N2VjNjdhZjYyZjZmM2M0YWE5Zjk=", "commit": {"author": {"name": "Ryan1729", "email": "Ryan1729@gmail.com", "date": "2017-04-03T23:39:14Z"}, "committer": {"name": "Ryan1729", "email": "Ryan1729@gmail.com", "date": "2017-04-03T23:39:14Z"}, "message": "fix bug by adding boolean argument\n\nSigned-off-by: Ryan1729 <Ryan1729@gmail.com>", "tree": {"sha": "9b7db8ea7db161397904f3297aa59d6058106789", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b7db8ea7db161397904f3297aa59d6058106789"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c4f70957bc40f9aae377ec67af62f6f3c4aa9f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c4f70957bc40f9aae377ec67af62f6f3c4aa9f9", "html_url": "https://github.com/rust-lang/rust/commit/4c4f70957bc40f9aae377ec67af62f6f3c4aa9f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c4f70957bc40f9aae377ec67af62f6f3c4aa9f9/comments", "author": {"login": "Ryan1729", "id": 2133026, "node_id": "MDQ6VXNlcjIxMzMwMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2133026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryan1729", "html_url": "https://github.com/Ryan1729", "followers_url": "https://api.github.com/users/Ryan1729/followers", "following_url": "https://api.github.com/users/Ryan1729/following{/other_user}", "gists_url": "https://api.github.com/users/Ryan1729/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryan1729/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryan1729/subscriptions", "organizations_url": "https://api.github.com/users/Ryan1729/orgs", "repos_url": "https://api.github.com/users/Ryan1729/repos", "events_url": "https://api.github.com/users/Ryan1729/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryan1729/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ryan1729", "id": 2133026, "node_id": "MDQ6VXNlcjIxMzMwMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2133026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryan1729", "html_url": "https://github.com/Ryan1729", "followers_url": "https://api.github.com/users/Ryan1729/followers", "following_url": "https://api.github.com/users/Ryan1729/following{/other_user}", "gists_url": "https://api.github.com/users/Ryan1729/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryan1729/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryan1729/subscriptions", "organizations_url": "https://api.github.com/users/Ryan1729/orgs", "repos_url": "https://api.github.com/users/Ryan1729/repos", "events_url": "https://api.github.com/users/Ryan1729/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryan1729/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "822b266a3d17a2dab52605e8c98b44d353f01187", "url": "https://api.github.com/repos/rust-lang/rust/commits/822b266a3d17a2dab52605e8c98b44d353f01187", "html_url": "https://github.com/rust-lang/rust/commit/822b266a3d17a2dab52605e8c98b44d353f01187"}], "stats": {"total": 36, "additions": 25, "deletions": 11}, "files": [{"sha": "2c2b4ef63ea1a713908f3e7d3a27f2eb74a959f0", "filename": "src/chains.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c4f70957bc40f9aae377ec67af62f6f3c4aa9f9/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c4f70957bc40f9aae377ec67af62f6f3c4aa9f9/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=4c4f70957bc40f9aae377ec67af62f6f3c4aa9f9", "patch": "@@ -441,5 +441,5 @@ fn rewrite_method_call(method_name: ast::Ident,\n     let callee_str = format!(\".{}{}\", method_name, type_str);\n     let span = mk_sp(lo, span.hi);\n \n-    rewrite_call(context, &callee_str, &args[1..], span, shape)\n+    rewrite_call(context, &callee_str, &args[1..], span, shape, false)\n }"}, {"sha": "6561d3faf62ecaca42589f1866a927d53d26d7ac", "filename": "src/expr.rs", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/4c4f70957bc40f9aae377ec67af62f6f3c4aa9f9/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c4f70957bc40f9aae377ec67af62f6f3c4aa9f9/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=4c4f70957bc40f9aae377ec67af62f6f3c4aa9f9", "patch": "@@ -71,7 +71,7 @@ fn format_expr(expr: &ast::Expr,\n         }\n         ast::ExprKind::Call(ref callee, ref args) => {\n             let inner_span = mk_sp(callee.span.hi, expr.span.hi);\n-            rewrite_call(context, &**callee, args, inner_span, shape)\n+            rewrite_call(context, &**callee, args, inner_span, shape, false)\n         }\n         ast::ExprKind::Paren(ref subexpr) => rewrite_paren(context, subexpr, shape),\n         ast::ExprKind::Binary(ref op, ref lhs, ref rhs) => {\n@@ -1597,12 +1597,20 @@ pub fn rewrite_call<R>(context: &RewriteContext,\n                        callee: &R,\n                        args: &[ptr::P<ast::Expr>],\n                        span: Span,\n-                       shape: Shape)\n+                       shape: Shape,\n+                       force_no_trailing_comma: bool)\n                        -> Option<String>\n     where R: Rewrite\n {\n-    let closure =\n-        |callee_max_width| rewrite_call_inner(context, callee, callee_max_width, args, span, shape);\n+    let closure = |callee_max_width| {\n+        rewrite_call_inner(context,\n+                           callee,\n+                           callee_max_width,\n+                           args,\n+                           span,\n+                           shape,\n+                           force_no_trailing_comma)\n+    };\n \n     // 2 is for parens\n     let max_width = try_opt!(shape.width.checked_sub(2));\n@@ -1614,7 +1622,8 @@ fn rewrite_call_inner<R>(context: &RewriteContext,\n                          max_callee_width: usize,\n                          args: &[ptr::P<ast::Expr>],\n                          span: Span,\n-                         shape: Shape)\n+                         shape: Shape,\n+                         force_no_trailing_comma: bool)\n                          -> Result<String, Ordering>\n     where R: Rewrite\n {\n@@ -1721,9 +1730,13 @@ fn rewrite_call_inner<R>(context: &RewriteContext,\n     let fmt = ListFormatting {\n         tactic: tactic,\n         separator: \",\",\n-        trailing_separator: match context.config.fn_call_style {\n-            IndentStyle::Visual => SeparatorTactic::Never,\n-            IndentStyle::Block => context.config.trailing_comma,\n+        trailing_separator: if force_no_trailing_comma {\n+            SeparatorTactic::Never\n+        } else {\n+            match context.config.fn_call_style {\n+                IndentStyle::Visual => SeparatorTactic::Never,\n+                IndentStyle::Block => context.config.trailing_comma,\n+            }\n         },\n         shape: nested_shape,\n         ends_with_newline: false,"}, {"sha": "fd5578e7f00464da110aa710b98ae721de8bd5c3", "filename": "src/macros.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4c4f70957bc40f9aae377ec67af62f6f3c4aa9f9/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c4f70957bc40f9aae377ec67af62f6f3c4aa9f9/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=4c4f70957bc40f9aae377ec67af62f6f3c4aa9f9", "patch": "@@ -144,8 +144,9 @@ pub fn rewrite_macro(mac: &ast::Mac,\n \n     match style {\n         MacroStyle::Parens => {\n-            // Format macro invocation as function call.\n-            rewrite_call(context, &macro_name, &expr_vec, mac.span, shape).map(|rw| {\n+            // Format macro invocation as function call, forcing no trailing\n+            // comma because not all macros support them.\n+            rewrite_call(context, &macro_name, &expr_vec, mac.span, shape, true).map(|rw| {\n                 match position {\n                     MacroPosition::Item => format!(\"{};\", rw),\n                     _ => rw,"}]}