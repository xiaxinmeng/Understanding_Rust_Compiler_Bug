{"sha": "eb6b729545af68fb39398eea6073f740cb12da50", "node_id": "C_kwDOAAsO6NoAKGViNmI3Mjk1NDVhZjY4ZmIzOTM5OGVlYTYwNzNmNzQwY2IxMmRhNTA", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-08-12T10:57:15Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-08-12T10:57:15Z"}, "message": "address review comments", "tree": {"sha": "05afc8d4df50f67d84caa2e00a5c3df75b393a83", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05afc8d4df50f67d84caa2e00a5c3df75b393a83"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb6b729545af68fb39398eea6073f740cb12da50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb6b729545af68fb39398eea6073f740cb12da50", "html_url": "https://github.com/rust-lang/rust/commit/eb6b729545af68fb39398eea6073f740cb12da50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb6b729545af68fb39398eea6073f740cb12da50/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "756bd6e3a3837c7107de5e19cf19e89bfa90c0a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/756bd6e3a3837c7107de5e19cf19e89bfa90c0a8", "html_url": "https://github.com/rust-lang/rust/commit/756bd6e3a3837c7107de5e19cf19e89bfa90c0a8"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "86835f443ab889b04ef97229e98ef39eab3765cb", "filename": "library/core/src/iter/adapters/array_chunks.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/eb6b729545af68fb39398eea6073f740cb12da50/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Farray_chunks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb6b729545af68fb39398eea6073f740cb12da50/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Farray_chunks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Farray_chunks.rs?ref=eb6b729545af68fb39398eea6073f740cb12da50", "patch": "@@ -1,5 +1,5 @@\n use crate::array;\n-use crate::iter::{FusedIterator, Iterator};\n+use crate::iter::{ByRefSized, FusedIterator, Iterator};\n use crate::ops::{ControlFlow, NeverShortCircuit, Try};\n \n /// An iterator over `N` elements of the iterator at a time.\n@@ -82,12 +82,12 @@ where\n         }\n     }\n \n-    fn fold<B, F>(mut self, init: B, mut f: F) -> B\n+    fn fold<B, F>(mut self, init: B, f: F) -> B\n     where\n         Self: Sized,\n         F: FnMut(B, Self::Item) -> B,\n     {\n-        self.try_fold(init, |acc, x| NeverShortCircuit(f(acc, x))).0\n+        self.try_fold(init, NeverShortCircuit::wrap_mut_2(f)).0\n     }\n }\n \n@@ -111,25 +111,27 @@ where\n         self.next_back_remainder();\n \n         let mut acc = init;\n-        let mut iter = self.iter.by_ref().rev();\n+        let mut iter = ByRefSized(&mut self.iter).rev();\n \n         // NB remainder is handled by `next_back_remainder`, so\n         // `next_chunk` can't return `Err` with non-empty remainder\n         // (assuming correct `I as ExactSizeIterator` impl).\n         while let Ok(mut chunk) = iter.next_chunk() {\n+            // FIXME: do not do double reverse\n+            //        (we could instead add `next_chunk_back` for example)\n             chunk.reverse();\n             acc = f(acc, chunk)?\n         }\n \n         try { acc }\n     }\n \n-    fn rfold<B, F>(mut self, init: B, mut f: F) -> B\n+    fn rfold<B, F>(mut self, init: B, f: F) -> B\n     where\n         Self: Sized,\n         F: FnMut(B, Self::Item) -> B,\n     {\n-        self.try_rfold(init, |acc, x| NeverShortCircuit(f(acc, x))).0\n+        self.try_rfold(init, NeverShortCircuit::wrap_mut_2(f)).0\n     }\n }\n "}]}