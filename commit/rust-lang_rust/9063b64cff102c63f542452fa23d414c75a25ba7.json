{"sha": "9063b64cff102c63f542452fa23d414c75a25ba7", "node_id": "C_kwDOAAsO6NoAKDkwNjNiNjRjZmYxMDJjNjNmNTQyNDUyZmEyM2Q0MTRjNzVhMjViYTc", "commit": {"author": {"name": "The 8472", "email": "git@infinite-source.de", "date": "2021-12-11T16:10:56Z"}, "committer": {"name": "The 8472", "email": "git@infinite-source.de", "date": "2021-12-11T16:10:56Z"}, "message": "Fix zero-sized reference to deallocated memory\n\nfixes #91772", "tree": {"sha": "c1d94b34bc5ba00cb89c36301bc5c8998d764d01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1d94b34bc5ba00cb89c36301bc5c8998d764d01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9063b64cff102c63f542452fa23d414c75a25ba7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9063b64cff102c63f542452fa23d414c75a25ba7", "html_url": "https://github.com/rust-lang/rust/commit/9063b64cff102c63f542452fa23d414c75a25ba7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9063b64cff102c63f542452fa23d414c75a25ba7/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a66a704b2c3d30ff07d89380ebb9ba3de3b3182", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a66a704b2c3d30ff07d89380ebb9ba3de3b3182", "html_url": "https://github.com/rust-lang/rust/commit/4a66a704b2c3d30ff07d89380ebb9ba3de3b3182"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "1bff19d05c10d33de7a81f7d4a21c2565d46d09f", "filename": "library/alloc/src/vec/drain.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9063b64cff102c63f542452fa23d414c75a25ba7/library%2Falloc%2Fsrc%2Fvec%2Fdrain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9063b64cff102c63f542452fa23d414c75a25ba7/library%2Falloc%2Fsrc%2Fvec%2Fdrain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fdrain.rs?ref=9063b64cff102c63f542452fa23d414c75a25ba7", "patch": "@@ -128,10 +128,6 @@ impl<T, A: Allocator> Drop for Drain<'_, T, A> {\n \n         let iter = mem::replace(&mut self.iter, (&mut []).iter());\n         let drop_len = iter.len();\n-        let drop_ptr = iter.as_slice().as_ptr();\n-\n-        // forget iter so there's no aliasing reference\n-        drop(iter);\n \n         let mut vec = self.vec;\n \n@@ -155,6 +151,12 @@ impl<T, A: Allocator> Drop for Drain<'_, T, A> {\n             return;\n         }\n \n+        // as_slice() must only be called when iter.len() is > 0 because\n+        // vec::Splice modifies vec::Drain fields and may grow the vec which would invalidate\n+        // the iterator's internal pointers. Creating a reference to deallocated memory\n+        // is invalid even when it is zero-length\n+        let drop_ptr = iter.as_slice().as_ptr();\n+\n         unsafe {\n             // drop_ptr comes from a slice::Iter which only gives us a &[T] but for drop_in_place\n             // a pointer with mutable provenance is necessary. Therefore we must reconstruct"}]}