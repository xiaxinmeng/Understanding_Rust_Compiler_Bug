{"sha": "f83f069f947d35f1c22f2dc4f91fa731b1f3cdc1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4M2YwNjlmOTQ3ZDM1ZjFjMjJmMmRjNGY5MWZhNzMxYjFmM2NkYzE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-10T16:25:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-10T16:25:58Z"}, "message": "Merge #9552\n\n9552: internal: `add_explicit_type` respects coercions r=Veykril a=Veykril\n\nor so I'd like to say but there is one odd case here where it doesn't work(see [review](https://github.com/rust-analyzer/rust-analyzer/pull/9552#discussion_r667351856))\r\n\r\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/6107\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "ce5f128595468059891acaf63362005306cb547d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce5f128595468059891acaf63362005306cb547d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f83f069f947d35f1c22f2dc4f91fa731b1f3cdc1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg6coWCRBK7hj4Ov3rIwAAb0AIAGR6TJGd9BOSZGJfBXnodWEy\neQMxFZ9ZGyew1oOoRuO5/8kD/tPBs26smud9RTm/h0+iNLg92ZGaVJDvpnxd1Zv7\naK+wMjLiiX9ktsldKleGSbde58Ts7VG0P1+mjffxwEHC7FpP8k0AqqoB23hfyj47\ncizfDCtb86zsABTQxza7r3Lf0fxIvoFz8Gbffgpo5afeWXZJ8Tlib0g7uRQFykzi\niwQWCI+NpEVUr6uNdV1usAn3bykLe/g7ghc1+I72CjtWi6jP5l3haxcci4X7ZBZG\noUEv5G0KjNUWIuXwbZYhQ+xV4spu1jm7GlmF6DjzudDspPnQnoCkcMh8hV3oXj4=\n=tX9o\n-----END PGP SIGNATURE-----\n", "payload": "tree ce5f128595468059891acaf63362005306cb547d\nparent 2d7727fe31ac04c8680d0020a5d20e973d1d470b\nparent 576e3a4e122ac7089d6e209a86cbf825e927908b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1625934358 +0000\ncommitter GitHub <noreply@github.com> 1625934358 +0000\n\nMerge #9552\n\n9552: internal: `add_explicit_type` respects coercions r=Veykril a=Veykril\n\nor so I'd like to say but there is one odd case here where it doesn't work(see [review](https://github.com/rust-analyzer/rust-analyzer/pull/9552#discussion_r667351856))\r\n\r\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/6107\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f83f069f947d35f1c22f2dc4f91fa731b1f3cdc1", "html_url": "https://github.com/rust-lang/rust/commit/f83f069f947d35f1c22f2dc4f91fa731b1f3cdc1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f83f069f947d35f1c22f2dc4f91fa731b1f3cdc1/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d7727fe31ac04c8680d0020a5d20e973d1d470b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d7727fe31ac04c8680d0020a5d20e973d1d470b", "html_url": "https://github.com/rust-lang/rust/commit/2d7727fe31ac04c8680d0020a5d20e973d1d470b"}, {"sha": "576e3a4e122ac7089d6e209a86cbf825e927908b", "url": "https://api.github.com/repos/rust-lang/rust/commits/576e3a4e122ac7089d6e209a86cbf825e927908b", "html_url": "https://github.com/rust-lang/rust/commit/576e3a4e122ac7089d6e209a86cbf825e927908b"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "984021d59ec751784a5e4e3dbe562d64272a011c", "filename": "crates/hir/src/semantics.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f83f069f947d35f1c22f2dc4f91fa731b1f3cdc1/crates%2Fhir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f83f069f947d35f1c22f2dc4f91fa731b1f3cdc1/crates%2Fhir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics.rs?ref=f83f069f947d35f1c22f2dc4f91fa731b1f3cdc1", "patch": "@@ -216,6 +216,10 @@ impl<'db, DB: HirDatabase> Semantics<'db, DB> {\n         self.imp.type_of_expr(expr)\n     }\n \n+    pub fn type_of_expr_with_coercion(&self, expr: &ast::Expr) -> Option<Type> {\n+        self.imp.type_of_expr_with_coercion(expr)\n+    }\n+\n     pub fn type_of_pat(&self, pat: &ast::Pat) -> Option<Type> {\n         self.imp.type_of_pat(pat)\n     }\n@@ -560,6 +564,10 @@ impl<'db> SemanticsImpl<'db> {\n         self.analyze(expr.syntax()).type_of_expr(self.db, expr)\n     }\n \n+    fn type_of_expr_with_coercion(&self, expr: &ast::Expr) -> Option<Type> {\n+        self.analyze(expr.syntax()).type_of_expr_with_coercion(self.db, expr)\n+    }\n+\n     fn type_of_pat(&self, pat: &ast::Pat) -> Option<Type> {\n         self.analyze(pat.syntax()).type_of_pat(self.db, pat)\n     }"}, {"sha": "474fb3fe30ac807ddf48f26b4a5250aa46c2cec6", "filename": "crates/hir/src/source_analyzer.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f83f069f947d35f1c22f2dc4f91fa731b1f3cdc1/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f83f069f947d35f1c22f2dc4f91fa731b1f3cdc1/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs?ref=f83f069f947d35f1c22f2dc4f91fa731b1f3cdc1", "patch": "@@ -122,6 +122,21 @@ impl SourceAnalyzer {\n         Type::new_with_resolver(db, &self.resolver, ty)\n     }\n \n+    pub(crate) fn type_of_expr_with_coercion(\n+        &self,\n+        db: &dyn HirDatabase,\n+        expr: &ast::Expr,\n+    ) -> Option<Type> {\n+        let expr_id = self.expr_id(db, expr)?;\n+        let infer = self.infer.as_ref()?;\n+        let ty = infer\n+            .expr_adjustments\n+            .get(&expr_id)\n+            .and_then(|adjusts| adjusts.last().map(|adjust| &adjust.target))\n+            .unwrap_or_else(|| &infer[expr_id]);\n+        Type::new_with_resolver(db, &self.resolver, ty.clone())\n+    }\n+\n     pub(crate) fn type_of_pat(&self, db: &dyn HirDatabase, pat: &ast::Pat) -> Option<Type> {\n         let pat_id = self.pat_id(pat)?;\n         let ty = self.infer.as_ref()?[pat_id].clone();"}, {"sha": "154c44afa427a44764493daf1baee6edcbecc572", "filename": "crates/hir_ty/src/infer.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f83f069f947d35f1c22f2dc4f91fa731b1f3cdc1/crates%2Fhir_ty%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f83f069f947d35f1c22f2dc4f91fa731b1f3cdc1/crates%2Fhir_ty%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer.rs?ref=f83f069f947d35f1c22f2dc4f91fa731b1f3cdc1", "patch": "@@ -407,6 +407,12 @@ impl<'a> InferenceContext<'a> {\n         for (_, subst) in result.method_resolutions.values_mut() {\n             *subst = self.table.resolve_completely(subst.clone());\n         }\n+        for adjustment in result.expr_adjustments.values_mut().flatten() {\n+            adjustment.target = self.table.resolve_completely(adjustment.target.clone());\n+        }\n+        for adjustment in result.pat_adjustments.values_mut().flatten() {\n+            adjustment.target = self.table.resolve_completely(adjustment.target.clone());\n+        }\n         result\n     }\n "}, {"sha": "aecc482cfdcd0c7651bb7ead396cde882819145a", "filename": "crates/hir_ty/src/tests/coercion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f83f069f947d35f1c22f2dc4f91fa731b1f3cdc1/crates%2Fhir_ty%2Fsrc%2Ftests%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f83f069f947d35f1c22f2dc4f91fa731b1f3cdc1/crates%2Fhir_ty%2Fsrc%2Ftests%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fcoercion.rs?ref=f83f069f947d35f1c22f2dc4f91fa731b1f3cdc1", "patch": "@@ -46,7 +46,7 @@ fn test2() {\n \n #[test]\n fn let_stmt_coerce() {\n-    check_no_mismatches(\n+    check(\n         r\"\n //- minicore: coerce_unsized\n fn test() {"}, {"sha": "b0e8fb6559f35ae5702edfe47a4a3f090c01c162", "filename": "crates/ide_assists/src/handlers/add_explicit_type.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f83f069f947d35f1c22f2dc4f91fa731b1f3cdc1/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_explicit_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f83f069f947d35f1c22f2dc4f91fa731b1f3cdc1/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_explicit_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_explicit_type.rs?ref=f83f069f947d35f1c22f2dc4f91fa731b1f3cdc1", "patch": "@@ -55,7 +55,7 @@ pub(crate) fn add_explicit_type(acc: &mut Assists, ctx: &AssistContext) -> Optio\n     }\n \n     // Infer type\n-    let ty = ctx.sema.type_of_expr(&expr)?;\n+    let ty = ctx.sema.type_of_expr_with_coercion(&expr)?;\n     if ty.contains_unknown() || ty.is_closure() {\n         cov_mark::hit!(add_explicit_type_not_applicable_if_ty_not_inferred);\n         return None;\n@@ -258,6 +258,24 @@ fn main() {\n fn main() {\n     let test @ (): () = ();\n }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn add_explicit_type_inserts_coercions() {\n+        check_assist(\n+            add_explicit_type,\n+            r#\"\n+//- minicore: coerce_unsized\n+fn f() {\n+    let $0x: *const [_] = &[3];\n+}\n+\"#,\n+            r#\"\n+fn f() {\n+    let x: *const [i32] = &[3];\n+}\n \"#,\n         );\n     }"}]}