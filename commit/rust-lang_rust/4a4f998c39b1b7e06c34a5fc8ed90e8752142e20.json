{"sha": "4a4f998c39b1b7e06c34a5fc8ed90e8752142e20", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhNGY5OThjMzliMWI3ZTA2YzM0YTVmYzhlZDkwZTg3NTIxNDJlMjA=", "commit": {"author": {"name": "cgm616", "email": "cgm616@me.com", "date": "2020-10-16T15:12:37Z"}, "committer": {"name": "cgm616", "email": "cgm616@me.com", "date": "2020-10-22T01:21:11Z"}, "message": "Add new lint for undropped ManuallyDrop values", "tree": {"sha": "623cc36698e5217755606ba586d8757229987983", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/623cc36698e5217755606ba586d8757229987983"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a4f998c39b1b7e06c34a5fc8ed90e8752142e20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a4f998c39b1b7e06c34a5fc8ed90e8752142e20", "html_url": "https://github.com/rust-lang/rust/commit/4a4f998c39b1b7e06c34a5fc8ed90e8752142e20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a4f998c39b1b7e06c34a5fc8ed90e8752142e20/comments", "author": {"login": "cgm616", "id": 2502394, "node_id": "MDQ6VXNlcjI1MDIzOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2502394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgm616", "html_url": "https://github.com/cgm616", "followers_url": "https://api.github.com/users/cgm616/followers", "following_url": "https://api.github.com/users/cgm616/following{/other_user}", "gists_url": "https://api.github.com/users/cgm616/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgm616/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgm616/subscriptions", "organizations_url": "https://api.github.com/users/cgm616/orgs", "repos_url": "https://api.github.com/users/cgm616/repos", "events_url": "https://api.github.com/users/cgm616/events{/privacy}", "received_events_url": "https://api.github.com/users/cgm616/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cgm616", "id": 2502394, "node_id": "MDQ6VXNlcjI1MDIzOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2502394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgm616", "html_url": "https://github.com/cgm616", "followers_url": "https://api.github.com/users/cgm616/followers", "following_url": "https://api.github.com/users/cgm616/following{/other_user}", "gists_url": "https://api.github.com/users/cgm616/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgm616/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgm616/subscriptions", "organizations_url": "https://api.github.com/users/cgm616/orgs", "repos_url": "https://api.github.com/users/cgm616/repos", "events_url": "https://api.github.com/users/cgm616/events{/privacy}", "received_events_url": "https://api.github.com/users/cgm616/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85959be60667ec158da0a1824506ebba47791317", "url": "https://api.github.com/repos/rust-lang/rust/commits/85959be60667ec158da0a1824506ebba47791317", "html_url": "https://github.com/rust-lang/rust/commit/85959be60667ec158da0a1824506ebba47791317"}], "stats": {"total": 79, "additions": 79, "deletions": 0}, "files": [{"sha": "697e6166fdf84d102cb379b917c2900fb7d35697", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4a4f998c39b1b7e06c34a5fc8ed90e8752142e20/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/4a4f998c39b1b7e06c34a5fc8ed90e8752142e20/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=4a4f998c39b1b7e06c34a5fc8ed90e8752142e20", "patch": "@@ -1979,6 +1979,7 @@ Released 2018-09-13\n [`try_err`]: https://rust-lang.github.io/rust-clippy/master/index.html#try_err\n [`type_complexity`]: https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity\n [`type_repetition_in_bounds`]: https://rust-lang.github.io/rust-clippy/master/index.html#type_repetition_in_bounds\n+[`undropped_manually_drops`]: https://rust-lang.github.io/rust-clippy/master/index.html#undropped_manually_drops\n [`unicode_not_nfc`]: https://rust-lang.github.io/rust-clippy/master/index.html#unicode_not_nfc\n [`unimplemented`]: https://rust-lang.github.io/rust-clippy/master/index.html#unimplemented\n [`uninit_assumed_init`]: https://rust-lang.github.io/rust-clippy/master/index.html#uninit_assumed_init"}, {"sha": "49ff8ad366e6f7e29d3c3bfe35c2d7715a4bb58e", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4a4f998c39b1b7e06c34a5fc8ed90e8752142e20/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a4f998c39b1b7e06c34a5fc8ed90e8752142e20/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=4a4f998c39b1b7e06c34a5fc8ed90e8752142e20", "patch": "@@ -314,6 +314,7 @@ mod transmuting_null;\n mod trivially_copy_pass_by_ref;\n mod try_err;\n mod types;\n+mod undropped_manually_drops;\n mod unicode;\n mod unit_return_expecting_ord;\n mod unnamed_address;\n@@ -862,6 +863,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &types::UNIT_CMP,\n         &types::UNNECESSARY_CAST,\n         &types::VEC_BOX,\n+        &undropped_manually_drops::UNDROPPED_MANUALLY_DROPS,\n         &unicode::INVISIBLE_CHARACTERS,\n         &unicode::NON_ASCII_LITERAL,\n         &unicode::UNICODE_NOT_NFC,\n@@ -1137,6 +1139,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(move || box disallowed_method::DisallowedMethod::new(&disallowed_methods));\n     store.register_early_pass(|| box asm_syntax::InlineAsmX86AttSyntax);\n     store.register_early_pass(|| box asm_syntax::InlineAsmX86IntelSyntax);\n+    store.register_late_pass(|| box undropped_manually_drops::UndroppedManuallyDrops);\n \n \n     store.register_group(true, \"clippy::restriction\", Some(\"clippy_restriction\"), vec![\n@@ -1790,6 +1793,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&types::ABSURD_EXTREME_COMPARISONS),\n         LintId::of(&types::CAST_REF_TO_MUT),\n         LintId::of(&types::UNIT_CMP),\n+        LintId::of(&undropped_manually_drops::UNDROPPED_MANUALLY_DROPS),\n         LintId::of(&unicode::INVISIBLE_CHARACTERS),\n         LintId::of(&unit_return_expecting_ord::UNIT_RETURN_EXPECTING_ORD),\n         LintId::of(&unnamed_address::FN_ADDRESS_COMPARISONS),"}, {"sha": "48a050777b77586202bcd5c156fc6bca1627fe52", "filename": "clippy_lints/src/undropped_manually_drops.rs", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/4a4f998c39b1b7e06c34a5fc8ed90e8752142e20/clippy_lints%2Fsrc%2Fundropped_manually_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a4f998c39b1b7e06c34a5fc8ed90e8752142e20/clippy_lints%2Fsrc%2Fundropped_manually_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fundropped_manually_drops.rs?ref=4a4f998c39b1b7e06c34a5fc8ed90e8752142e20", "patch": "@@ -0,0 +1,49 @@\n+use rustc_lint::{LateLintPass, LateContext};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+use rustc_hir::*;\n+use crate::utils::{match_function_call, is_type_lang_item, paths, span_lint_and_help};\n+\n+declare_clippy_lint! {\n+    /// **What it does:** Prevents the safe `std::mem::drop` function from being called on `std::mem::ManuallyDrop`.\n+    ///\n+    /// **Why is this bad?** The safe `drop` function does not drop the inner value of a `ManuallyDrop`.\n+    ///\n+    /// **Known problems:** None.\n+    ///\n+    /// **Example:**\n+    ///\n+    /// ```rust\n+    /// struct S;\n+    /// drop(std::mem::ManuallyDrop::new(S));\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// struct S;\n+    /// unsafe {\n+    ///     std::mem::ManuallyDrop::drop(std::mem::ManuallyDrop::new(S));\n+    /// }\n+    /// ```\n+    pub UNDROPPED_MANUALLY_DROPS,\n+    correctness,\n+    \"use of safe `std::mem::drop` function to drop a std::mem::ManuallyDrop, which will not drop the inner value\"\n+}\n+\n+declare_lint_pass!(UndroppedManuallyDrops => [UNDROPPED_MANUALLY_DROPS]);\n+\n+impl LateLintPass<'tcx> for UndroppedManuallyDrops {\n+    fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) {\n+        if let Some(ref args) = match_function_call(cx, expr, &paths::DROP) {\n+            let ty = cx.typeck_results().expr_ty(&args[0]);\n+            if is_type_lang_item(cx, ty, lang_items::LangItem::ManuallyDrop) {\n+                span_lint_and_help(\n+                    cx,\n+                    UNDROPPED_MANUALLY_DROPS,\n+                    expr.span,\n+                    \"the inner value of this ManuallyDrop will not be dropped\",\n+                    None,\n+                    \"to drop a `ManuallyDrop<T>`, use std::mem::ManuallyDrop::drop\"\n+                );\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "25a69e78c8f4a7b79a695629b397943575b57cba", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4a4f998c39b1b7e06c34a5fc8ed90e8752142e20/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a4f998c39b1b7e06c34a5fc8ed90e8752142e20/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=4a4f998c39b1b7e06c34a5fc8ed90e8752142e20", "patch": "@@ -2412,6 +2412,13 @@ vec![\n         deprecation: None,\n         module: \"trait_bounds\",\n     },\n+    Lint {\n+        name: \"undropped_manually_drops\",\n+        group: \"correctness\",\n+        desc: \"use of safe `std::mem::drop` function to drop a std::mem::ManuallyDrop, which will not drop the inner value\",\n+        deprecation: None,\n+        module: \"undropped_manually_drops\",\n+    },\n     Lint {\n         name: \"unicode_not_nfc\",\n         group: \"pedantic\","}, {"sha": "bea62e1751e332950b2cde90d7a90ce78d226dde", "filename": "tests/ui/undropped_manually_drops.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4a4f998c39b1b7e06c34a5fc8ed90e8752142e20/tests%2Fui%2Fundropped_manually_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a4f998c39b1b7e06c34a5fc8ed90e8752142e20/tests%2Fui%2Fundropped_manually_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fundropped_manually_drops.rs?ref=4a4f998c39b1b7e06c34a5fc8ed90e8752142e20", "patch": "@@ -0,0 +1,18 @@\n+#![warn(clippy::undropped_manually_drops)]\n+\n+struct S;\n+\n+fn main() {\n+    let f = drop;\n+    let manual = std::mem::ManuallyDrop::new(S);\n+\n+    // These lines will not drop `S`\n+    drop(std::mem::ManuallyDrop::new(S));\n+    f(manual);\n+\n+    // These lines will\n+    unsafe {\n+        std::mem::ManuallyDrop::drop(std::mem::ManuallyDrop::new(S));\n+        std::mem::ManuallyDrop::drop(manual);\n+    }\n+}"}]}