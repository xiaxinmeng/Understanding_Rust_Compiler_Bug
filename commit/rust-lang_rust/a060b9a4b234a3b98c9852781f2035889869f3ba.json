{"sha": "a060b9a4b234a3b98c9852781f2035889869f3ba", "node_id": "C_kwDOAAsO6NoAKGEwNjBiOWE0YjIzNGEzYjk4Yzk4NTI3ODFmMjAzNTg4OTg2OWYzYmE", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-09T15:15:05Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-09T15:15:05Z"}, "message": "internal: move some macro tests", "tree": {"sha": "0df6937dccf9307608ad83575c53c005236ae7f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0df6937dccf9307608ad83575c53c005236ae7f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a060b9a4b234a3b98c9852781f2035889869f3ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a060b9a4b234a3b98c9852781f2035889869f3ba", "html_url": "https://github.com/rust-lang/rust/commit/a060b9a4b234a3b98c9852781f2035889869f3ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a060b9a4b234a3b98c9852781f2035889869f3ba/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2e425dd00e72f31334cdadc52a02d6b6ede9526", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2e425dd00e72f31334cdadc52a02d6b6ede9526", "html_url": "https://github.com/rust-lang/rust/commit/c2e425dd00e72f31334cdadc52a02d6b6ede9526"}], "stats": {"total": 143, "additions": 45, "deletions": 98}, "files": [{"sha": "60c9fd7d0a5e8a7c5981fd30f3b0010181bfeca9", "filename": "crates/hir_def/src/macro_expansion_tests.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a060b9a4b234a3b98c9852781f2035889869f3ba/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a060b9a4b234a3b98c9852781f2035889869f3ba/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests.rs?ref=a060b9a4b234a3b98c9852781f2035889869f3ba", "patch": "@@ -123,6 +123,9 @@ fn pretty_print_macro_expansion(expn: SyntaxNode) -> String {\n             (IDENT | LIFETIME_IDENT, IDENT | LIFETIME_IDENT) => \" \",\n             (IDENT, _) if curr_kind.is_keyword() => \" \",\n             (_, IDENT) if prev_kind.is_keyword() => \" \",\n+            (T![>], IDENT) => \" \",\n+            (T![>], _) if curr_kind.is_keyword() => \" \",\n+            (T![->], _) | (_, T![->]) => \" \",\n             _ => \"\",\n         };\n \n@@ -133,8 +136,9 @@ fn pretty_print_macro_expansion(expn: SyntaxNode) -> String {\n         }\n \n         res.push_str(space);\n-        if space == \"\\n\" && curr_kind != T!['}'] {\n-            res.push_str(&\"    \".repeat(indent_level));\n+        if space == \"\\n\" {\n+            let level = if curr_kind == T!['}'] { indent_level - 1 } else { indent_level };\n+            res.push_str(&\"    \".repeat(level));\n         }\n         prev_kind = curr_kind;\n         format_to!(res, \"{}\", token)"}, {"sha": "c7442bade6e598a1f09d654b17bdc8d69023d18d", "filename": "crates/hir_def/src/macro_expansion_tests/mbe.rs", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/a060b9a4b234a3b98c9852781f2035889869f3ba/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a060b9a4b234a3b98c9852781f2035889869f3ba/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs?ref=a060b9a4b234a3b98c9852781f2035889869f3ba", "patch": "@@ -9,6 +9,45 @@ use expect_test::expect;\n \n use crate::macro_expansion_tests::check;\n \n+#[test]\n+fn mbe_smoke_test() {\n+    check(\n+        r#\"\n+macro_rules! impl_froms {\n+    ($e:ident: $($v:ident),*) => {\n+        $(\n+            impl From<$v> for $e {\n+                fn from(it: $v) -> $e { $e::$v(it) }\n+            }\n+        )*\n+    }\n+}\n+impl_froms!(TokenTree: Leaf, Subtree);\n+\"#,\n+        expect![[r#\"\n+macro_rules! impl_froms {\n+    ($e:ident: $($v:ident),*) => {\n+        $(\n+            impl From<$v> for $e {\n+                fn from(it: $v) -> $e { $e::$v(it) }\n+            }\n+        )*\n+    }\n+}\n+impl From<Leaf> for TokenTree {\n+    fn from(it:Leaf) -> TokenTree {\n+        TokenTree::Leaf(it)\n+    }\n+}\n+impl From<Subtree> for TokenTree {\n+    fn from(it:Subtree) -> TokenTree {\n+        TokenTree::Subtree(it)\n+    }\n+}\n+\"#]],\n+    );\n+}\n+\n #[test]\n fn expansion_does_not_parse_as_expression() {\n     check("}, {"sha": "d0eb49455b709a85fdf64a76468a39258a61190c", "filename": "crates/mbe/src/tests/expand.rs", "status": "modified", "additions": 0, "deletions": 96, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/a060b9a4b234a3b98c9852781f2035889869f3ba/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a060b9a4b234a3b98c9852781f2035889869f3ba/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs?ref=a060b9a4b234a3b98c9852781f2035889869f3ba", "patch": "@@ -71,102 +71,6 @@ macro_rules! foobar {\n     assert_eq!(get_text(tt::TokenId(13), T!['{']), \"{\");\n }\n \n-#[test]\n-fn test_convert_tt() {\n-    parse_macro(r#\"\n-macro_rules! impl_froms {\n-    ($e:ident: $($v:ident),*) => {\n-        $(\n-            impl From<$v> for $e {\n-                fn from(it: $v) -> $e {\n-                    $e::$v(it)\n-                }\n-            }\n-        )*\n-    }\n-}\n-\"#)\n-        .assert_expand_tt(\n-            \"impl_froms!(TokenTree: Leaf, Subtree);\",\n-            \"impl From <Leaf > for TokenTree {fn from (it : Leaf) -> TokenTree {TokenTree ::Leaf (it)}} \\\n-             impl From <Subtree > for TokenTree {fn from (it : Subtree) -> TokenTree {TokenTree ::Subtree (it)}}\"\n-        );\n-}\n-\n-#[test]\n-fn test_convert_tt2() {\n-    parse_macro(\n-        r#\"\n-macro_rules! impl_froms {\n-    ($e:ident: $($v:ident),*) => {\n-        $(\n-            impl From<$v> for $e {\n-                fn from(it: $v) -> $e {\n-                    $e::$v(it)\n-                }\n-            }\n-        )*\n-    }\n-}\n-\"#,\n-    )\n-    .assert_expand(\n-        \"impl_froms!(TokenTree: Leaf, Subtree);\",\n-        r#\"\n-SUBTREE $\n-  IDENT   impl 20\n-  IDENT   From 21\n-  PUNCH   < [joint] 22\n-  IDENT   Leaf 53\n-  PUNCH   > [alone] 25\n-  IDENT   for 26\n-  IDENT   TokenTree 51\n-  SUBTREE {} 29\n-    IDENT   fn 30\n-    IDENT   from 31\n-    SUBTREE () 32\n-      IDENT   it 33\n-      PUNCH   : [alone] 34\n-      IDENT   Leaf 53\n-    PUNCH   - [joint] 37\n-    PUNCH   > [alone] 38\n-    IDENT   TokenTree 51\n-    SUBTREE {} 41\n-      IDENT   TokenTree 51\n-      PUNCH   : [joint] 44\n-      PUNCH   : [joint] 45\n-      IDENT   Leaf 53\n-      SUBTREE () 48\n-        IDENT   it 49\n-  IDENT   impl 20\n-  IDENT   From 21\n-  PUNCH   < [joint] 22\n-  IDENT   Subtree 55\n-  PUNCH   > [alone] 25\n-  IDENT   for 26\n-  IDENT   TokenTree 51\n-  SUBTREE {} 29\n-    IDENT   fn 30\n-    IDENT   from 31\n-    SUBTREE () 32\n-      IDENT   it 33\n-      PUNCH   : [alone] 34\n-      IDENT   Subtree 55\n-    PUNCH   - [joint] 37\n-    PUNCH   > [alone] 38\n-    IDENT   TokenTree 51\n-    SUBTREE {} 41\n-      IDENT   TokenTree 51\n-      PUNCH   : [joint] 44\n-      PUNCH   : [joint] 45\n-      IDENT   Subtree 55\n-      SUBTREE () 48\n-        IDENT   it 49\n-\"#,\n-    );\n-}\n-\n-\n #[test]\n fn test_match_group_with_multichar_sep() {\n     parse_macro("}]}