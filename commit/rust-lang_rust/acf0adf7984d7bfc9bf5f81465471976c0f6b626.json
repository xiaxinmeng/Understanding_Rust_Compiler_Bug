{"sha": "acf0adf7984d7bfc9bf5f81465471976c0f6b626", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjZjBhZGY3OTg0ZDdiZmM5YmY1ZjgxNDY1NDcxOTc2YzBmNmI2MjY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-04-25T17:50:32Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-04-26T17:53:21Z"}, "message": "Add setting to go to item if there is only one result", "tree": {"sha": "5531bf4fe9195bf4cd2160a6960ba419a2887483", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5531bf4fe9195bf4cd2160a6960ba419a2887483"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acf0adf7984d7bfc9bf5f81465471976c0f6b626", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acf0adf7984d7bfc9bf5f81465471976c0f6b626", "html_url": "https://github.com/rust-lang/rust/commit/acf0adf7984d7bfc9bf5f81465471976c0f6b626", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acf0adf7984d7bfc9bf5f81465471976c0f6b626/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88cd36714c6d62393f18d8efa2ea2724e1ec4a9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/88cd36714c6d62393f18d8efa2ea2724e1ec4a9d", "html_url": "https://github.com/rust-lang/rust/commit/88cd36714c6d62393f18d8efa2ea2724e1ec4a9d"}], "stats": {"total": 90, "additions": 59, "deletions": 31}, "files": [{"sha": "0784c7b10e8c66caea2c7eef4010a4970d3be645", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/acf0adf7984d7bfc9bf5f81465471976c0f6b626/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acf0adf7984d7bfc9bf5f81465471976c0f6b626/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=acf0adf7984d7bfc9bf5f81465471976c0f6b626", "patch": "@@ -1594,6 +1594,8 @@ impl<'a> Settings<'a> {\n             settings: vec![\n                 (\"item-declarations\", \"Auto-hide item declarations.\", true),\n                 (\"item-attributes\", \"Auto-hide item attributes.\", true),\n+                (\"go-to-only-result\", \"Directly go to item in search if there is only one result\",\n+                 false),\n             ],\n             root_path,\n             suffix,"}, {"sha": "bcad2eb19f57496aa401e6e81044d7fb0a4b4330", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 57, "deletions": 31, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/acf0adf7984d7bfc9bf5f81465471976c0f6b626/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/acf0adf7984d7bfc9bf5f81465471976c0f6b626/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=acf0adf7984d7bfc9bf5f81465471976c0f6b626", "patch": "@@ -1013,7 +1013,8 @@\n                 'returned': sortResults(results_returned, true),\n                 'others': sortResults(results),\n             };\n-            if (ALIASES[window.currentCrate][query.raw]) {\n+            if (ALIASES && ALIASES[window.currentCrate] &&\n+                    ALIASES[window.currentCrate][query.raw]) {\n                 var aliases = ALIASES[window.currentCrate][query.raw];\n                 for (var i = 0; i < aliases.length; ++i) {\n                     ret['others'].unshift(aliases[i]);\n@@ -1188,6 +1189,44 @@\n             return '<span>' + path.replace(/::/g, '::</span><span>');\n         }\n \n+        function buildHrefAndPath(item) {\n+            var displayPath;\n+            var href;\n+            var type = itemTypes[item.ty];\n+            var name = item.name;\n+\n+            if (type === 'mod') {\n+                displayPath = item.path + '::';\n+                href = rootPath + item.path.replace(/::/g, '/') + '/' +\n+                       name + '/index.html';\n+            } else if (type === \"primitive\") {\n+                displayPath = \"\";\n+                href = rootPath + item.path.replace(/::/g, '/') +\n+                       '/' + type + '.' + name + '.html';\n+            } else if (type === \"externcrate\") {\n+                displayPath = \"\";\n+                href = rootPath + name + '/index.html';\n+            } else if (item.parent !== undefined) {\n+                var myparent = item.parent;\n+                var anchor = '#' + type + '.' + name;\n+                var parentType = itemTypes[myparent.ty];\n+                if (parentType === \"primitive\") {\n+                    displayPath = myparent.name + '::';\n+                } else {\n+                    displayPath = item.path + '::' + myparent.name + '::';\n+                }\n+                href = rootPath + item.path.replace(/::/g, '/') +\n+                       '/' + parentType +\n+                       '.' + myparent.name +\n+                       '.html' + anchor;\n+            } else {\n+                displayPath = item.path + '::';\n+                href = rootPath + item.path.replace(/::/g, '/') +\n+                       '/' + type + '.' + name + '.html';\n+            }\n+            return [displayPath, href];\n+        }\n+\n         function addTab(array, query, display) {\n             var extraStyle = '';\n             if (display === false) {\n@@ -1211,35 +1250,9 @@\n                     name = item.name;\n                     type = itemTypes[item.ty];\n \n-                    if (type === 'mod') {\n-                        displayPath = item.path + '::';\n-                        href = rootPath + item.path.replace(/::/g, '/') + '/' +\n-                               name + '/index.html';\n-                    } else if (type === \"primitive\") {\n-                        displayPath = \"\";\n-                        href = rootPath + item.path.replace(/::/g, '/') +\n-                               '/' + type + '.' + name + '.html';\n-                    } else if (type === \"externcrate\") {\n-                        displayPath = \"\";\n-                        href = rootPath + name + '/index.html';\n-                    } else if (item.parent !== undefined) {\n-                        var myparent = item.parent;\n-                        var anchor = '#' + type + '.' + name;\n-                        var parentType = itemTypes[myparent.ty];\n-                        if (parentType === \"primitive\") {\n-                            displayPath = myparent.name + '::';\n-                        } else {\n-                            displayPath = item.path + '::' + myparent.name + '::';\n-                        }\n-                        href = rootPath + item.path.replace(/::/g, '/') +\n-                               '/' + parentType +\n-                               '.' + myparent.name +\n-                               '.html' + anchor;\n-                    } else {\n-                        displayPath = item.path + '::';\n-                        href = rootPath + item.path.replace(/::/g, '/') +\n-                               '/' + type + '.' + name + '.html';\n-                    }\n+                    var res = buildHrefAndPath(item);\n+                    var href = res[1];\n+                    var displayPath = res[0];\n \n                     output += '<tr class=\"' + type + ' result\"><td>' +\n                               '<a href=\"' + href + '\">' +\n@@ -1268,6 +1281,16 @@\n         }\n \n         function showResults(results) {\n+            if (results['others'].length === 1 &&\n+                getCurrentValue('rustdoc-go-to-only-result') === \"true\") {\n+                var elem = document.createElement('a');\n+                var res = buildHrefAndPath(results['others'][0]);\n+                elem.href = res[1];\n+                elem.style.display = 'none';\n+                // For firefox, we need the element to be in the DOM so it can be clicked.\n+                document.body.appendChild(elem);\n+                elem.click();\n+            }\n             var output, query = getQuery(search_input.value);\n \n             currentResults = query.id;\n@@ -1721,6 +1744,9 @@\n \n     function toggleAllDocs(pageId) {\n         var toggle = document.getElementById(\"toggle-all-docs\");\n+        if (!toggle) {\n+            return;\n+        }\n         if (hasClass(toggle, \"will-expand\")) {\n             updateLocalStorage(\"rustdoc-collapse\", \"false\");\n             removeClass(toggle, \"will-expand\");\n@@ -1977,7 +2003,7 @@\n                 collapseDocs(e.previousSibling.childNodes[0], \"toggle\");\n             }\n         }\n-    })\n+    });\n \n     autoCollapseAllImpls(getPageId());\n "}]}