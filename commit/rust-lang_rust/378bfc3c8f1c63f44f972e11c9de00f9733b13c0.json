{"sha": "378bfc3c8f1c63f44f972e11c9de00f9733b13c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3OGJmYzNjOGYxYzYzZjQ0Zjk3MmUxMWM5ZGUwMGY5NzMzYjEzYzA=", "commit": {"author": {"name": "Yuki Kodama", "email": "endflow.net@gmail.com", "date": "2020-05-24T14:01:26Z"}, "committer": {"name": "Yuki Kodama", "email": "endflow.net@gmail.com", "date": "2020-05-25T16:06:25Z"}, "message": "Separate assertions", "tree": {"sha": "f1c7782e811d0515ffae733fb71eb4f00feec255", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1c7782e811d0515ffae733fb71eb4f00feec255"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/378bfc3c8f1c63f44f972e11c9de00f9733b13c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/378bfc3c8f1c63f44f972e11c9de00f9733b13c0", "html_url": "https://github.com/rust-lang/rust/commit/378bfc3c8f1c63f44f972e11c9de00f9733b13c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/378bfc3c8f1c63f44f972e11c9de00f9733b13c0/comments", "author": {"login": "kuy", "id": 151614, "node_id": "MDQ6VXNlcjE1MTYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/151614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kuy", "html_url": "https://github.com/kuy", "followers_url": "https://api.github.com/users/kuy/followers", "following_url": "https://api.github.com/users/kuy/following{/other_user}", "gists_url": "https://api.github.com/users/kuy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kuy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kuy/subscriptions", "organizations_url": "https://api.github.com/users/kuy/orgs", "repos_url": "https://api.github.com/users/kuy/repos", "events_url": "https://api.github.com/users/kuy/events{/privacy}", "received_events_url": "https://api.github.com/users/kuy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kuy", "id": 151614, "node_id": "MDQ6VXNlcjE1MTYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/151614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kuy", "html_url": "https://github.com/kuy", "followers_url": "https://api.github.com/users/kuy/followers", "following_url": "https://api.github.com/users/kuy/following{/other_user}", "gists_url": "https://api.github.com/users/kuy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kuy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kuy/subscriptions", "organizations_url": "https://api.github.com/users/kuy/orgs", "repos_url": "https://api.github.com/users/kuy/repos", "events_url": "https://api.github.com/users/kuy/events{/privacy}", "received_events_url": "https://api.github.com/users/kuy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d13691ad192c20b2fb0f349582622cb5230da99", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d13691ad192c20b2fb0f349582622cb5230da99", "html_url": "https://github.com/rust-lang/rust/commit/4d13691ad192c20b2fb0f349582622cb5230da99"}], "stats": {"total": 72, "additions": 65, "deletions": 7}, "files": [{"sha": "5708ff2913c4e3e56cbfe7467dde1720feca19e0", "filename": "crates/ra_ide/src/completion/presentation.rs", "status": "modified", "additions": 65, "deletions": 7, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/378bfc3c8f1c63f44f972e11c9de00f9733b13c0/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/378bfc3c8f1c63f44f972e11c9de00f9733b13c0/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=378bfc3c8f1c63f44f972e11c9de00f9733b13c0", "patch": "@@ -641,29 +641,60 @@ mod tests {\n         assert_debug_snapshot!(\n             do_reference_completion(\n                 r\"\n-                fn with_args(x: i32, y: String, _z: bool) {}\n+                fn with_args(x: i32, y: String) {}\n                 fn main() { with_<|> }\n                 \"\n             ),\n             @r###\"\n         [\n             CompletionItem {\n                 label: \"main()\",\n-                source_range: 90..95,\n-                delete: 90..95,\n+                source_range: 80..85,\n+                delete: 80..85,\n                 insert: \"main()$0\",\n                 kind: Function,\n                 lookup: \"main\",\n                 detail: \"fn main()\",\n             },\n             CompletionItem {\n                 label: \"with_args(\u2026)\",\n-                source_range: 90..95,\n-                delete: 90..95,\n-                insert: \"with_args(${1:x}, ${2:y}, ${3:z})$0\",\n+                source_range: 80..85,\n+                delete: 80..85,\n+                insert: \"with_args(${1:x}, ${2:y})$0\",\n                 kind: Function,\n                 lookup: \"with_args\",\n-                detail: \"fn with_args(x: i32, y: String, _z: bool)\",\n+                detail: \"fn with_args(x: i32, y: String)\",\n+                trigger_call_info: true,\n+            },\n+        ]\n+        \"###\n+        );\n+        assert_debug_snapshot!(\n+            do_reference_completion(\n+                r\"\n+                fn with_ignored_args(_foo: i32, b_a_r_: bool) {}\n+                fn main() { with_<|> }\n+                \"\n+            ),\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"main()\",\n+                source_range: 94..99,\n+                delete: 94..99,\n+                insert: \"main()$0\",\n+                kind: Function,\n+                lookup: \"main\",\n+                detail: \"fn main()\",\n+            },\n+            CompletionItem {\n+                label: \"with_ignored_args(\u2026)\",\n+                source_range: 94..99,\n+                delete: 94..99,\n+                insert: \"with_ignored_args(${1:foo}, ${2:b_a_r_})$0\",\n+                kind: Function,\n+                lookup: \"with_ignored_args\",\n+                detail: \"fn with_ignored_args(_foo: i32, b_a_r_: bool)\",\n                 trigger_call_info: true,\n             },\n         ]\n@@ -695,6 +726,33 @@ mod tests {\n         ]\n         \"###\n         );\n+        assert_debug_snapshot!(\n+            do_reference_completion(\n+                r\"\n+                struct S {}\n+                impl S {\n+                    fn foo_ignored_args(&self, _a: bool, b: i32) {}\n+                }\n+                fn bar(s: &S) {\n+                    s.f<|>\n+                }\n+                \"\n+            ),\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"foo_ignored_args(\u2026)\",\n+                source_range: 194..195,\n+                delete: 194..195,\n+                insert: \"foo_ignored_args(${1:a}, ${2:b})$0\",\n+                kind: Method,\n+                lookup: \"foo_ignored_args\",\n+                detail: \"fn foo_ignored_args(&self, _a: bool, b: i32)\",\n+                trigger_call_info: true,\n+            },\n+        ]\n+        \"###\n+        );\n     }\n \n     #[test]"}]}