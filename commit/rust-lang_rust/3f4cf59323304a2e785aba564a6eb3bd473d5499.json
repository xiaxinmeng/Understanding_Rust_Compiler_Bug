{"sha": "3f4cf59323304a2e785aba564a6eb3bd473d5499", "node_id": "C_kwDOAAsO6NoAKDNmNGNmNTkzMjMzMDRhMmU3ODVhYmE1NjRhNmViM2JkNDczZDU0OTk", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-07-11T10:29:02Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-07-11T10:29:02Z"}, "message": "Move checks to compile-time", "tree": {"sha": "7bec386526f8db5205a38149c6e8a1622009d8c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bec386526f8db5205a38149c6e8a1622009d8c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f4cf59323304a2e785aba564a6eb3bd473d5499", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f4cf59323304a2e785aba564a6eb3bd473d5499", "html_url": "https://github.com/rust-lang/rust/commit/3f4cf59323304a2e785aba564a6eb3bd473d5499", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f4cf59323304a2e785aba564a6eb3bd473d5499/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "984db78d771ec67d781e954da759dbea8667197a", "url": "https://api.github.com/repos/rust-lang/rust/commits/984db78d771ec67d781e954da759dbea8667197a", "html_url": "https://github.com/rust-lang/rust/commit/984db78d771ec67d781e954da759dbea8667197a"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "385472ac88a7da782d8b5089956c449acfbff6ef", "filename": "src/test/ui/layout/unsafe-cell-hides-niche.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3f4cf59323304a2e785aba564a6eb3bd473d5499/src%2Ftest%2Fui%2Flayout%2Funsafe-cell-hides-niche.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f4cf59323304a2e785aba564a6eb3bd473d5499/src%2Ftest%2Fui%2Flayout%2Funsafe-cell-hides-niche.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flayout%2Funsafe-cell-hides-niche.rs?ref=3f4cf59323304a2e785aba564a6eb3bd473d5499", "patch": "@@ -3,7 +3,7 @@\n // test checks that an `Option<UnsafeCell<NonZeroU32>>` has the same\n // size in memory as an `Option<UnsafeCell<u32>>` (namely, 8 bytes).\n \n-// run-pass\n+// check-pass\n \n #![feature(repr_simd)]\n \n@@ -19,6 +19,13 @@ struct Transparent<T>(T);\n \n struct NoNiche<T>(UnsafeCell<T>);\n \n+// Overwriting the runtime assertion and making it a compile-time assertion\n+macro_rules! assert_eq {\n+    ($a:expr, $b:literal) => {{\n+        const _: () = assert!($a == $b);\n+    }};\n+}\n+\n fn main() {\n     assert_eq!(size_of::<Option<Wrapper<u32>>>(),     8);\n     assert_eq!(size_of::<Option<Wrapper<N32>>>(),     4); // (\u2713 niche opt)"}]}