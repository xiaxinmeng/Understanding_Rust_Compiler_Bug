{"sha": "12e09afd6d7bb4ca30e572a5214c11284ea1965b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyZTA5YWZkNmQ3YmI0Y2EzMGU1NzJhNTIxNGMxMTI4NGVhMTk2NWI=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-06-21T00:18:16Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-06-26T22:14:43Z"}, "message": "Work-around 'static bound requirement in io::with_bytes_reader (note: does not fix #5723, interface still unsafe)", "tree": {"sha": "2ae785a2f47d9c9b9c7e98ab5bff7a53748d2a21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ae785a2f47d9c9b9c7e98ab5bff7a53748d2a21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12e09afd6d7bb4ca30e572a5214c11284ea1965b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12e09afd6d7bb4ca30e572a5214c11284ea1965b", "html_url": "https://github.com/rust-lang/rust/commit/12e09afd6d7bb4ca30e572a5214c11284ea1965b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12e09afd6d7bb4ca30e572a5214c11284ea1965b/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3433851a37f04621e0c091ec2180aeddbdd5ada5", "url": "https://api.github.com/repos/rust-lang/rust/commits/3433851a37f04621e0c091ec2180aeddbdd5ada5", "html_url": "https://github.com/rust-lang/rust/commit/3433851a37f04621e0c091ec2180aeddbdd5ada5"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "11dea1c3a708105cd37dcc2b559d3ce7c909127a", "filename": "src/libextra/io_util.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/12e09afd6d7bb4ca30e572a5214c11284ea1965b/src%2Flibextra%2Fio_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12e09afd6d7bb4ca30e572a5214c11284ea1965b/src%2Flibextra%2Fio_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fio_util.rs?ref=12e09afd6d7bb4ca30e572a5214c11284ea1965b", "patch": "@@ -10,6 +10,7 @@\n \n use core::io::{Reader, BytesReader};\n use core::io;\n+use core::cast;\n \n /// An implementation of the io::Reader interface which reads a buffer of bytes\n pub struct BufReader {\n@@ -29,10 +30,13 @@ impl BufReader {\n     }\n \n     fn as_bytes_reader<A>(&self, f: &fn(&BytesReader) -> A) -> A {\n+        // XXX FIXME(#5723)\n+        let bytes = ::core::util::id::<&[u8]>(self.buf);\n+        let bytes: &'static [u8] = unsafe { cast::transmute(bytes) };\n         // Recreating the BytesReader state every call since\n         // I can't get the borrowing to work correctly\n         let bytes_reader = BytesReader {\n-            bytes: ::core::util::id::<&[u8]>(self.buf),\n+            bytes: bytes,\n             pos: @mut *self.pos\n         };\n "}, {"sha": "a78be9c8b2b1d2f7e1902a6ed939ae2b48e61811", "filename": "src/libstd/io.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/12e09afd6d7bb4ca30e572a5214c11284ea1965b/src%2Flibstd%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12e09afd6d7bb4ca30e572a5214c11284ea1965b/src%2Flibstd%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio.rs?ref=12e09afd6d7bb4ca30e572a5214c11284ea1965b", "patch": "@@ -1042,12 +1042,14 @@ pub fn file_reader(path: &Path) -> Result<@Reader, ~str> {\n \n \n // Byte readers\n-pub struct BytesReader<'self> {\n-    bytes: &'self [u8],\n+pub struct BytesReader {\n+    // FIXME(#5723) see other FIXME below\n+    // FIXME(#7268) this should also be parameterized over <'self>\n+    bytes: &'static [u8],\n     pos: @mut uint\n }\n \n-impl<'self> Reader for BytesReader<'self> {\n+impl Reader for BytesReader {\n     fn read(&self, bytes: &mut [u8], len: uint) -> uint {\n         let count = uint::min(len, self.bytes.len() - *self.pos);\n \n@@ -1084,13 +1086,18 @@ impl<'self> Reader for BytesReader<'self> {\n }\n \n pub fn with_bytes_reader<T>(bytes: &[u8], f: &fn(@Reader) -> T) -> T {\n+    // XXX XXX XXX this is glaringly unsound\n+    // FIXME(#5723) Use a &Reader for the callback's argument. Should be:\n+    // fn with_bytes_reader<'r, T>(bytes: &'r [u8], f: &fn(&'r Reader) -> T) -> T\n+    let bytes: &'static [u8] = unsafe { cast::transmute(bytes) };\n     f(@BytesReader {\n         bytes: bytes,\n         pos: @mut 0\n     } as @Reader)\n }\n \n pub fn with_str_reader<T>(s: &str, f: &fn(@Reader) -> T) -> T {\n+    // FIXME(#5723): As above.\n     with_bytes_reader(s.as_bytes(), f)\n }\n "}]}