{"sha": "b2b7a063af39455d7362524da3123c34c3f4842e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyYjdhMDYzYWYzOTQ1NWQ3MzYyNTI0ZGEzMTIzYzM0YzNmNDg0MmU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-01-01T20:50:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-01-01T20:50:13Z"}, "message": "Auto merge of #57125 - doitian:inconsistent-clone-doc, r=bluss\n\nFix inconsistent Clone documentation.\n\nNow, arrays of any size Clone if the element type is Clone. So remove the\nthe document that uses this as an example.\n\nrefs #57123", "tree": {"sha": "d1e48844f738b33ec821d5ec22ef21ae60256c3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1e48844f738b33ec821d5ec22ef21ae60256c3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2b7a063af39455d7362524da3123c34c3f4842e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2b7a063af39455d7362524da3123c34c3f4842e", "html_url": "https://github.com/rust-lang/rust/commit/b2b7a063af39455d7362524da3123c34c3f4842e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2b7a063af39455d7362524da3123c34c3f4842e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cae164753f557f668cb75610abda4f790981e5e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/cae164753f557f668cb75610abda4f790981e5e6", "html_url": "https://github.com/rust-lang/rust/commit/cae164753f557f668cb75610abda4f790981e5e6"}, {"sha": "bbc8c932fb05dfaed7b5bfe252712bede722b764", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbc8c932fb05dfaed7b5bfe252712bede722b764", "html_url": "https://github.com/rust-lang/rust/commit/bbc8c932fb05dfaed7b5bfe252712bede722b764"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "ed90b7de26417cb0e82593c355ac52816eb5f9a8", "filename": "src/libcore/clone.rs", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/b2b7a063af39455d7362524da3123c34c3f4842e/src%2Flibcore%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2b7a063af39455d7362524da3123c34c3f4842e/src%2Flibcore%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fclone.rs?ref=b2b7a063af39455d7362524da3123c34c3f4842e", "patch": "@@ -53,28 +53,39 @@\n /// This trait can be used with `#[derive]` if all fields are `Clone`. The `derive`d\n /// implementation of [`clone`] calls [`clone`] on each field.\n ///\n+/// For a generic struct, `#[derive]` implements `Clone` conditionally by adding bound `Clone` on\n+/// generic parameters.\n+///\n+/// ```\n+/// // `derive` implements Clone for Reading<T> when T is Clone.\n+/// #[derive(Clone)]\n+/// struct Reading<T> {\n+///     frequency: T,\n+/// }\n+/// ```\n+///\n /// ## How can I implement `Clone`?\n ///\n /// Types that are [`Copy`] should have a trivial implementation of `Clone`. More formally:\n /// if `T: Copy`, `x: T`, and `y: &T`, then `let x = y.clone();` is equivalent to `let x = *y;`.\n /// Manual implementations should be careful to uphold this invariant; however, unsafe code\n /// must not rely on it to ensure memory safety.\n ///\n-/// An example is an array holding more than 32 elements of a type that is `Clone`; the standard\n-/// library only implements `Clone` up until arrays of size 32. In this case, the implementation of\n-/// `Clone` cannot be `derive`d, but can be implemented as:\n+/// An example is a generic struct holding a function pointer. In this case, the\n+/// implementation of `Clone` cannot be `derive`d, but can be implemented as:\n ///\n /// [`Copy`]: ../../std/marker/trait.Copy.html\n /// [`clone`]: trait.Clone.html#tymethod.clone\n ///\n /// ```\n-/// #[derive(Copy)]\n-/// struct Stats {\n-///    frequencies: [i32; 100],\n-/// }\n+/// struct Generate<T>(fn() -> T);\n+///\n+/// impl<T> Copy for Generate<T> {}\n ///\n-/// impl Clone for Stats {\n-///     fn clone(&self) -> Stats { *self }\n+/// impl<T> Clone for Generate<T> {\n+///     fn clone(&self) -> Self {\n+///         *self\n+///     }\n /// }\n /// ```\n ///"}]}