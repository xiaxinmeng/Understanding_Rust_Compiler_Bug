{"sha": "11e2966f3fcac861977d594eb77240638a3a2042", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExZTI5NjZmM2ZjYWM4NjE5NzdkNTk0ZWI3NzI0MDYzOGEzYTIwNDI=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-04-18T12:27:04Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-09-10T18:17:33Z"}, "message": "Keep a parent LocalDefId in SpanData.", "tree": {"sha": "890d6eb64c1bc6f320aa7875e9079dc9ffa0b231", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/890d6eb64c1bc6f320aa7875e9079dc9ffa0b231"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11e2966f3fcac861977d594eb77240638a3a2042", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11e2966f3fcac861977d594eb77240638a3a2042", "html_url": "https://github.com/rust-lang/rust/commit/11e2966f3fcac861977d594eb77240638a3a2042", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11e2966f3fcac861977d594eb77240638a3a2042/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "261e34d5348218cbea3cd9a589c49aba92c322d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/261e34d5348218cbea3cd9a589c49aba92c322d4", "html_url": "https://github.com/rust-lang/rust/commit/261e34d5348218cbea3cd9a589c49aba92c322d4"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "2ef7dcc1775a6bfe9d6bf2d6784389c7839ff993", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/11e2966f3fcac861977d594eb77240638a3a2042/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11e2966f3fcac861977d594eb77240638a3a2042/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=11e2966f3fcac861977d594eb77240638a3a2042", "patch": "@@ -527,8 +527,8 @@ fn check_empty_line_after_outer_attr(cx: &EarlyContext<'_>, item: &rustc_ast::It\n                 return;\n             }\n \n-            let begin_of_attr_to_item = Span::new(attr.span.lo(), item.span.lo(), item.span.ctxt());\n-            let end_of_attr_to_item = Span::new(attr.span.hi(), item.span.lo(), item.span.ctxt());\n+            let begin_of_attr_to_item = Span::new(attr.span.lo(), item.span.lo(), item.span.ctxt(), item.span.parent());\n+            let end_of_attr_to_item = Span::new(attr.span.hi(), item.span.lo(), item.span.ctxt(), item.span.parent());\n \n             if let Some(snippet) = snippet_opt(cx, end_of_attr_to_item) {\n                 let lines = snippet.split('\\n').collect::<Vec<_>>();"}, {"sha": "2203d1c39f1793e6c517b7db92f3baf19c6d691f", "filename": "clippy_lints/src/cognitive_complexity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11e2966f3fcac861977d594eb77240638a3a2042/clippy_lints%2Fsrc%2Fcognitive_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11e2966f3fcac861977d594eb77240638a3a2042/clippy_lints%2Fsrc%2Fcognitive_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcognitive_complexity.rs?ref=11e2966f3fcac861977d594eb77240638a3a2042", "patch": "@@ -95,7 +95,7 @@ impl CognitiveComplexity {\n                     });\n \n                     if let Some((low, high)) = pos {\n-                        Span::new(low, high, header_span.ctxt())\n+                        Span::new(low, high, header_span.ctxt(), header_span.parent())\n                     } else {\n                         return;\n                     }"}, {"sha": "6ded2f233efea615f800800a41ffd3fda50a563a", "filename": "clippy_lints/src/copies.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11e2966f3fcac861977d594eb77240638a3a2042/clippy_lints%2Fsrc%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11e2966f3fcac861977d594eb77240638a3a2042/clippy_lints%2Fsrc%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopies.rs?ref=11e2966f3fcac861977d594eb77240638a3a2042", "patch": "@@ -472,7 +472,7 @@ fn emit_branches_sharing_code_lint(\n \n         let mut span = moved_start.to(span_end);\n         // Improve formatting if the inner block has indention (i.e. normal Rust formatting)\n-        let test_span = Span::new(span.lo() - BytePos(4), span.lo(), span.ctxt());\n+        let test_span = Span::new(span.lo() - BytePos(4), span.lo(), span.ctxt(), span.parent());\n         if snippet_opt(cx, test_span)\n             .map(|snip| snip == \"    \")\n             .unwrap_or_default()"}, {"sha": "0b61909ddd82d5f7df7a29342aad3eaeabf2a893", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11e2966f3fcac861977d594eb77240638a3a2042/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11e2966f3fcac861977d594eb77240638a3a2042/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=11e2966f3fcac861977d594eb77240638a3a2042", "patch": "@@ -665,6 +665,7 @@ fn check_text(cx: &LateContext<'_>, valid_idents: &FxHashSet<String>, text: &str\n             span.lo() + BytePos::from_usize(offset),\n             span.lo() + BytePos::from_usize(offset + word.len()),\n             span.ctxt(),\n+            span.parent(),\n         );\n \n         check_word(cx, word, span);"}, {"sha": "2fe32fcf6651a8b67420a4fc798d8b2326f9aba4", "filename": "clippy_lints/src/implicit_hasher.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/11e2966f3fcac861977d594eb77240638a3a2042/clippy_lints%2Fsrc%2Fimplicit_hasher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11e2966f3fcac861977d594eb77240638a3a2042/clippy_lints%2Fsrc%2Fimplicit_hasher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fimplicit_hasher.rs?ref=11e2966f3fcac861977d594eb77240638a3a2042", "patch": "@@ -130,7 +130,7 @@ impl<'tcx> LateLintPass<'tcx> for ImplicitHasher {\n                         let pos = snippet_opt(cx, item.span.until(target.span()))\n                             .and_then(|snip| Some(item.span.lo() + BytePos(snip.find(\"impl\")? as u32 + 4)));\n                         if let Some(pos) = pos {\n-                            Span::new(pos, pos, item.span.data().ctxt)\n+                            Span::new(pos, pos, item.span.ctxt(), item.span.parent())\n                         } else {\n                             return;\n                         }\n@@ -173,7 +173,7 @@ impl<'tcx> LateLintPass<'tcx> for ImplicitHasher {\n                                     Some(item.span.lo() + BytePos((i + (&snip[i..]).find('(')?) as u32))\n                                 })\n                                 .expect(\"failed to create span for type parameters\");\n-                            Span::new(pos, pos, item.span.data().ctxt)\n+                            Span::new(pos, pos, item.span.ctxt(), item.span.parent())\n                         });\n \n                         let mut ctr_vis = ImplicitHasherConstructorVisitor::new(cx, target);"}, {"sha": "fe6814e35d0ca1da4475f6428eb0c3fcd8186ec9", "filename": "clippy_lints/src/large_const_arrays.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11e2966f3fcac861977d594eb77240638a3a2042/clippy_lints%2Fsrc%2Flarge_const_arrays.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11e2966f3fcac861977d594eb77240638a3a2042/clippy_lints%2Fsrc%2Flarge_const_arrays.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_const_arrays.rs?ref=11e2966f3fcac861977d594eb77240638a3a2042", "patch": "@@ -63,6 +63,7 @@ impl<'tcx> LateLintPass<'tcx> for LargeConstArrays {\n                     hi_pos - BytePos::from_usize(\"const\".len()),\n                     hi_pos,\n                     item.span.ctxt(),\n+                    item.span.parent(),\n                 );\n                 span_lint_and_then(\n                     cx,"}, {"sha": "0e25e3f1a524f10123e8f8d72962c7a8b394eef8", "filename": "clippy_lints/src/regex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11e2966f3fcac861977d594eb77240638a3a2042/clippy_lints%2Fsrc%2Fregex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11e2966f3fcac861977d594eb77240638a3a2042/clippy_lints%2Fsrc%2Fregex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fregex.rs?ref=11e2966f3fcac861977d594eb77240638a3a2042", "patch": "@@ -91,7 +91,7 @@ fn str_span(base: Span, c: regex_syntax::ast::Span, offset: u16) -> Span {\n     let end = base.lo() + BytePos(u32::try_from(c.end.offset).expect(\"offset too large\") + offset);\n     let start = base.lo() + BytePos(u32::try_from(c.start.offset).expect(\"offset too large\") + offset);\n     assert!(start <= end);\n-    Span::new(start, end, base.ctxt())\n+    Span::new(start, end, base.ctxt(), base.parent())\n }\n \n fn const_str<'tcx>(cx: &LateContext<'tcx>, e: &'tcx Expr<'_>) -> Option<String> {"}, {"sha": "4a67cabf323a6a1489f84d485bce350acc98a8cf", "filename": "clippy_lints/src/tabs_in_doc_comments.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11e2966f3fcac861977d594eb77240638a3a2042/clippy_lints%2Fsrc%2Ftabs_in_doc_comments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11e2966f3fcac861977d594eb77240638a3a2042/clippy_lints%2Fsrc%2Ftabs_in_doc_comments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftabs_in_doc_comments.rs?ref=11e2966f3fcac861977d594eb77240638a3a2042", "patch": "@@ -69,6 +69,7 @@ impl TabsInDocComments {\n                     attr.span.lo() + BytePos(3 + lo),\n                     attr.span.lo() + BytePos(3 + hi),\n                     attr.span.ctxt(),\n+                    attr.span.parent(),\n                 );\n                 span_lint_and_sugg(\n                     cx,"}]}