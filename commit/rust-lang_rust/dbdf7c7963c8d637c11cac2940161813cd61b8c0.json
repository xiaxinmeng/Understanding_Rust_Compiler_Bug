{"sha": "dbdf7c7963c8d637c11cac2940161813cd61b8c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiZGY3Yzc5NjNjOGQ2MzdjMTFjYWMyOTQwMTYxODEzY2Q2MWI4YzA=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-06-25T17:26:31Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-06-26T12:19:18Z"}, "message": "Fix array-into-iter tests.", "tree": {"sha": "910625a8379bfbe09ca3a2afd2bb76e797726477", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/910625a8379bfbe09ca3a2afd2bb76e797726477"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbdf7c7963c8d637c11cac2940161813cd61b8c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbdf7c7963c8d637c11cac2940161813cd61b8c0", "html_url": "https://github.com/rust-lang/rust/commit/dbdf7c7963c8d637c11cac2940161813cd61b8c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbdf7c7963c8d637c11cac2940161813cd61b8c0/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c685292fbac0203b63cd8d9d9736b7f451937804", "url": "https://api.github.com/repos/rust-lang/rust/commits/c685292fbac0203b63cd8d9d9736b7f451937804", "html_url": "https://github.com/rust-lang/rust/commit/c685292fbac0203b63cd8d9d9736b7f451937804"}], "stats": {"total": 31, "additions": 18, "deletions": 13}, "files": [{"sha": "e56c2956a697e8fa21cbe738168eb2c8ea188a16", "filename": "src/test/ui/iterators/into-iter-on-arrays-2018.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dbdf7c7963c8d637c11cac2940161813cd61b8c0/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbdf7c7963c8d637c11cac2940161813cd61b8c0/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2018.rs?ref=dbdf7c7963c8d637c11cac2940161813cd61b8c0", "patch": "@@ -28,6 +28,7 @@ fn main() {\n \n     for _ in [1, 2, 3].into_iter() {}\n     //~^ WARNING this method call resolves to `<&[T; N] as IntoIterator>::into_iter`\n+    //~| WARNING this changes meaning\n }\n \n /// User type that dereferences to an array."}, {"sha": "3bd3ca6e875a13ddfcab03361aad1dcb41d26a5e", "filename": "src/test/ui/iterators/into-iter-on-arrays-2018.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dbdf7c7963c8d637c11cac2940161813cd61b8c0/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dbdf7c7963c8d637c11cac2940161813cd61b8c0/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-2018.stderr?ref=dbdf7c7963c8d637c11cac2940161813cd61b8c0", "patch": "@@ -34,11 +34,13 @@ LL |     let _: Iter<'_, i32> = IntoIterator::into_iter(Box::new(array));\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^               ^\n \n warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021.\n-  --> $DIR/into-iter-on-arrays-2018.rs:27:24\n+  --> $DIR/into-iter-on-arrays-2018.rs:29:24\n    |\n LL |     for _ in [1, 2, 3].into_iter() {}\n    |                        ^^^^^^^^^\n    |\n+   = warning: this changes meaning in Rust 2021\n+   = note: for more information, see issue #66145 <https://github.com/rust-lang/rust/issues/66145>\n help: use `.iter()` instead of `.into_iter()` to avoid ambiguity\n    |\n LL |     for _ in [1, 2, 3].iter() {}"}, {"sha": "0055758a6a442ab1f8e2a119d7e9a2b2a00b384d", "filename": "src/test/ui/iterators/into-iter-on-arrays-lint.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dbdf7c7963c8d637c11cac2940161813cd61b8c0/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-lint.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/dbdf7c7963c8d637c11cac2940161813cd61b8c0/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-lint.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-lint.fixed?ref=dbdf7c7963c8d637c11cac2940161813cd61b8c0", "patch": "@@ -1,5 +1,6 @@\n // run-pass\n // run-rustfix\n+// rustfix-only-machine-applicable\n \n fn main() {\n     let small = [1, 2];"}, {"sha": "01857c78a730c58122c5e62a57c476995353bf1d", "filename": "src/test/ui/iterators/into-iter-on-arrays-lint.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dbdf7c7963c8d637c11cac2940161813cd61b8c0/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbdf7c7963c8d637c11cac2940161813cd61b8c0/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-lint.rs?ref=dbdf7c7963c8d637c11cac2940161813cd61b8c0", "patch": "@@ -1,5 +1,6 @@\n // run-pass\n // run-rustfix\n+// rustfix-only-machine-applicable\n \n fn main() {\n     let small = [1, 2];"}, {"sha": "01789e0e257485847031f1b40df54bd885a9ecfb", "filename": "src/test/ui/iterators/into-iter-on-arrays-lint.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/dbdf7c7963c8d637c11cac2940161813cd61b8c0/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dbdf7c7963c8d637c11cac2940161813cd61b8c0/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Finto-iter-on-arrays-lint.stderr?ref=dbdf7c7963c8d637c11cac2940161813cd61b8c0", "patch": "@@ -1,5 +1,5 @@\n warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021.\n-  --> $DIR/into-iter-on-arrays-lint.rs:9:11\n+  --> $DIR/into-iter-on-arrays-lint.rs:10:11\n    |\n LL |     small.into_iter();\n    |           ^^^^^^^^^\n@@ -17,7 +17,7 @@ LL |     IntoIterator::into_iter(small);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^     ^\n \n warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021.\n-  --> $DIR/into-iter-on-arrays-lint.rs:12:12\n+  --> $DIR/into-iter-on-arrays-lint.rs:13:12\n    |\n LL |     [1, 2].into_iter();\n    |            ^^^^^^^^^\n@@ -34,7 +34,7 @@ LL |     IntoIterator::into_iter([1, 2]);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^      ^\n \n warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021.\n-  --> $DIR/into-iter-on-arrays-lint.rs:15:9\n+  --> $DIR/into-iter-on-arrays-lint.rs:16:9\n    |\n LL |     big.into_iter();\n    |         ^^^^^^^^^\n@@ -51,7 +51,7 @@ LL |     IntoIterator::into_iter(big);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^   ^\n \n warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021.\n-  --> $DIR/into-iter-on-arrays-lint.rs:18:15\n+  --> $DIR/into-iter-on-arrays-lint.rs:19:15\n    |\n LL |     [0u8; 33].into_iter();\n    |               ^^^^^^^^^\n@@ -68,7 +68,7 @@ LL |     IntoIterator::into_iter([0u8; 33]);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^         ^\n \n warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021.\n-  --> $DIR/into-iter-on-arrays-lint.rs:22:21\n+  --> $DIR/into-iter-on-arrays-lint.rs:23:21\n    |\n LL |     Box::new(small).into_iter();\n    |                     ^^^^^^^^^\n@@ -85,7 +85,7 @@ LL |     IntoIterator::into_iter(Box::new(small));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^               ^\n \n warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021.\n-  --> $DIR/into-iter-on-arrays-lint.rs:25:22\n+  --> $DIR/into-iter-on-arrays-lint.rs:26:22\n    |\n LL |     Box::new([1, 2]).into_iter();\n    |                      ^^^^^^^^^\n@@ -102,7 +102,7 @@ LL |     IntoIterator::into_iter(Box::new([1, 2]));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^                ^\n \n warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021.\n-  --> $DIR/into-iter-on-arrays-lint.rs:28:19\n+  --> $DIR/into-iter-on-arrays-lint.rs:29:19\n    |\n LL |     Box::new(big).into_iter();\n    |                   ^^^^^^^^^\n@@ -119,7 +119,7 @@ LL |     IntoIterator::into_iter(Box::new(big));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^             ^\n \n warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021.\n-  --> $DIR/into-iter-on-arrays-lint.rs:31:25\n+  --> $DIR/into-iter-on-arrays-lint.rs:32:25\n    |\n LL |     Box::new([0u8; 33]).into_iter();\n    |                         ^^^^^^^^^\n@@ -136,7 +136,7 @@ LL |     IntoIterator::into_iter(Box::new([0u8; 33]));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^                   ^\n \n warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021.\n-  --> $DIR/into-iter-on-arrays-lint.rs:35:31\n+  --> $DIR/into-iter-on-arrays-lint.rs:36:31\n    |\n LL |     Box::new(Box::new(small)).into_iter();\n    |                               ^^^^^^^^^\n@@ -153,7 +153,7 @@ LL |     IntoIterator::into_iter(Box::new(Box::new(small)));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^                         ^\n \n warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021.\n-  --> $DIR/into-iter-on-arrays-lint.rs:38:32\n+  --> $DIR/into-iter-on-arrays-lint.rs:39:32\n    |\n LL |     Box::new(Box::new([1, 2])).into_iter();\n    |                                ^^^^^^^^^\n@@ -170,7 +170,7 @@ LL |     IntoIterator::into_iter(Box::new(Box::new([1, 2])));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^                          ^\n \n warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021.\n-  --> $DIR/into-iter-on-arrays-lint.rs:41:29\n+  --> $DIR/into-iter-on-arrays-lint.rs:42:29\n    |\n LL |     Box::new(Box::new(big)).into_iter();\n    |                             ^^^^^^^^^\n@@ -187,7 +187,7 @@ LL |     IntoIterator::into_iter(Box::new(Box::new(big)));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^                       ^\n \n warning: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021.\n-  --> $DIR/into-iter-on-arrays-lint.rs:44:35\n+  --> $DIR/into-iter-on-arrays-lint.rs:45:35\n    |\n LL |     Box::new(Box::new([0u8; 33])).into_iter();\n    |                                   ^^^^^^^^^"}]}