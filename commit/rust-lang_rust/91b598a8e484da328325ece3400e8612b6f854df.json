{"sha": "91b598a8e484da328325ece3400e8612b6f854df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxYjU5OGE4ZTQ4NGRhMzI4MzI1ZWNlMzQwMGU4NjEyYjZmODU0ZGY=", "commit": {"author": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2021-08-13T06:36:40Z"}, "committer": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2021-08-13T06:56:37Z"}, "message": "Fix false positive on `filter_next`", "tree": {"sha": "803b1a01a433d91ba66979640e1c254cf151e584", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/803b1a01a433d91ba66979640e1c254cf151e584"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91b598a8e484da328325ece3400e8612b6f854df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91b598a8e484da328325ece3400e8612b6f854df", "html_url": "https://github.com/rust-lang/rust/commit/91b598a8e484da328325ece3400e8612b6f854df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91b598a8e484da328325ece3400e8612b6f854df/comments", "author": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9f56f949d2d1c11f1331151323beb8e85181c29", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9f56f949d2d1c11f1331151323beb8e85181c29", "html_url": "https://github.com/rust-lang/rust/commit/e9f56f949d2d1c11f1331151323beb8e85181c29"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "bcf8d93b602ef2a7d03703f7864723af5806fca0", "filename": "clippy_lints/src/methods/filter_next.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/91b598a8e484da328325ece3400e8612b6f854df/clippy_lints%2Fsrc%2Fmethods%2Ffilter_next.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91b598a8e484da328325ece3400e8612b6f854df/clippy_lints%2Fsrc%2Fmethods%2Ffilter_next.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Ffilter_next.rs?ref=91b598a8e484da328325ece3400e8612b6f854df", "patch": "@@ -1,6 +1,6 @@\n use clippy_utils::diagnostics::{span_lint, span_lint_and_sugg};\n-use clippy_utils::is_trait_method;\n use clippy_utils::source::snippet;\n+use clippy_utils::ty::implements_trait;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_lint::LateContext;\n@@ -16,7 +16,10 @@ pub(super) fn check<'tcx>(\n     filter_arg: &'tcx hir::Expr<'_>,\n ) {\n     // lint if caller of `.filter().next()` is an Iterator\n-    if is_trait_method(cx, expr, sym::Iterator) {\n+    let recv_impls_iterator = cx.tcx.get_diagnostic_item(sym::Iterator).map_or(false, |id| {\n+        implements_trait(cx, cx.typeck_results().expr_ty(recv), id, &[])\n+    });\n+    if recv_impls_iterator {\n         let msg = \"called `filter(..).next()` on an `Iterator`. This is more succinctly expressed by calling \\\n                    `.find(..)` instead\";\n         let filter_snippet = snippet(cx, filter_arg.span, \"..\");"}]}