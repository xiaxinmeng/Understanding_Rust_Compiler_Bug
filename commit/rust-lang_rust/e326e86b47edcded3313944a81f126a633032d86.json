{"sha": "e326e86b47edcded3313944a81f126a633032d86", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzMjZlODZiNDdlZGNkZWQzMzEzOTQ0YTgxZjEyNmE2MzMwMzJkODY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-04-29T12:59:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-04-29T12:59:45Z"}, "message": "Auto merge of #41588 - cengizIO:master, r=nikomatsakis\n\nuse diff crate for compile-fail test diagnostics #41474\n\nHello!\n\nThis fixes #41474\n\nWe were using a custom implementation to dump the differences between expected and actual outputs of compile-fail tests.\n\nI removed this internal implementation and added `diff` crate as a new dependency to `compile-fail`.\n\nAgain, huge thanks to @nikomatsakis for guiding.", "tree": {"sha": "9f14c195c06b8b2b6e63ba5c9f48c2e4a0dbb9ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f14c195c06b8b2b6e63ba5c9f48c2e4a0dbb9ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e326e86b47edcded3313944a81f126a633032d86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e326e86b47edcded3313944a81f126a633032d86", "html_url": "https://github.com/rust-lang/rust/commit/e326e86b47edcded3313944a81f126a633032d86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e326e86b47edcded3313944a81f126a633032d86/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12e76e24cc1466ffb2bd37cc7652a6dd7ba15735", "url": "https://api.github.com/repos/rust-lang/rust/commits/12e76e24cc1466ffb2bd37cc7652a6dd7ba15735", "html_url": "https://github.com/rust-lang/rust/commit/12e76e24cc1466ffb2bd37cc7652a6dd7ba15735"}, {"sha": "837817c0534aca5ef414663dc2d6cdd1bd350273", "url": "https://api.github.com/repos/rust-lang/rust/commits/837817c0534aca5ef414663dc2d6cdd1bd350273", "html_url": "https://github.com/rust-lang/rust/commit/837817c0534aca5ef414663dc2d6cdd1bd350273"}], "stats": {"total": 94, "additions": 17, "deletions": 77}, "files": [{"sha": "21b167f6d42739050e38297991794ab3ef96a6f9", "filename": "src/Cargo.lock", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e326e86b47edcded3313944a81f126a633032d86/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/e326e86b47edcded3313944a81f126a633032d86/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=e326e86b47edcded3313944a81f126a633032d86", "patch": "@@ -147,6 +147,7 @@ dependencies = [\n name = \"compiletest\"\n version = \"0.0.0\"\n dependencies = [\n+ \"diff 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"env_logger 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"filetime 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -157,6 +158,11 @@ dependencies = [\n name = \"core\"\n version = \"0.0.0\"\n \n+[[package]]\n+name = \"diff\"\n+version = \"0.1.10\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"dtoa\"\n version = \"0.4.1\"\n@@ -990,6 +996,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum bitflags 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1370e9fc2a6ae53aea8b7a5110edbd08836ed87c88736dfabccade1c2b44bff4\"\n \"checksum clap 2.22.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e17a4a72ffea176f77d6e2db609c6c919ef221f23862c9915e687fb54d833485\"\n \"checksum cmake 0.1.22 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d18d68987ed4c516dcc3e7913659bfa4076f5182eea4a7e0038bb060953e76ac\"\n+\"checksum diff 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0a515461b6c8c08419850ced27bc29e86166dcdcde8fbe76f8b1f0589bb49472\"\n \"checksum dtoa 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"80c8b71fd71146990a9742fc06dcbbde19161a267e0ad4e572c35162f4578c90\"\n \"checksum env_logger 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e3856f1697098606fc6cb97a93de88ca3f3bc35bb878c725920e6e82ecf05e83\"\n \"checksum filetime 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5363ab8e4139b8568a6237db5248646e5a8a2f89bd5ccb02092182b11fd3e922\""}, {"sha": "59d83de5787c4d4d5ee938e526456c78eb770a47", "filename": "src/tools/compiletest/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e326e86b47edcded3313944a81f126a633032d86/src%2Ftools%2Fcompiletest%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e326e86b47edcded3313944a81f126a633032d86/src%2Ftools%2Fcompiletest%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2FCargo.toml?ref=e326e86b47edcded3313944a81f126a633032d86", "patch": "@@ -8,3 +8,4 @@ log = \"0.3\"\n env_logger = { version = \"0.4\", default-features = false }\n rustc-serialize = \"0.3\"\n filetime = \"0.1\"\n+diff = \"0.1.10\""}, {"sha": "4165ea685a5b2b87646e215de6f4ea9a40e00e96", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e326e86b47edcded3313944a81f126a633032d86/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e326e86b47edcded3313944a81f126a633032d86/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=e326e86b47edcded3313944a81f126a633032d86", "patch": "@@ -25,6 +25,7 @@ extern crate rustc_serialize;\n extern crate log;\n extern crate env_logger;\n extern crate filetime;\n+extern crate diff;\n \n use std::env;\n use std::ffi::OsString;\n@@ -49,7 +50,6 @@ pub mod runtest;\n pub mod common;\n pub mod errors;\n mod raise_fd_limit;\n-mod uidiff;\n \n fn main() {\n     env_logger::init().unwrap();"}, {"sha": "731665ce034582770bb2ddf87967ebe4a9dc616b", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e326e86b47edcded3313944a81f126a633032d86/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e326e86b47edcded3313944a81f126a633032d86/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=e326e86b47edcded3313944a81f126a633032d86", "patch": "@@ -12,13 +12,13 @@ use common::Config;\n use common::{CompileFail, ParseFail, Pretty, RunFail, RunPass, RunPassValgrind};\n use common::{Codegen, DebugInfoLldb, DebugInfoGdb, Rustdoc, CodegenUnits};\n use common::{Incremental, RunMake, Ui, MirOpt};\n+use diff;\n use errors::{self, ErrorKind, Error};\n use filetime::FileTime;\n use json;\n use header::TestProps;\n use procsrv;\n use test::TestPaths;\n-use uidiff;\n use util::logv;\n \n use std::collections::HashSet;\n@@ -2411,8 +2411,13 @@ actual:\\n\\\n         println!(\"normalized {}:\\n{}\\n\", kind, actual);\n         println!(\"expected {}:\\n{}\\n\", kind, expected);\n         println!(\"diff of {}:\\n\", kind);\n-        for line in uidiff::diff_lines(actual, expected) {\n-            println!(\"{}\", line);\n+\n+        for diff in diff::lines(actual, expected) {\n+            match diff {\n+                diff::Result::Left(l)    => println!(\"+{}\", l),\n+                diff::Result::Both(l, _) => println!(\" {}\", l),\n+                diff::Result::Right(r)   => println!(\"-{}\", r),\n+            }\n         }\n \n         let output_file = self.output_base_name().with_extension(kind);"}, {"sha": "fca01029c44652ba87d542ed43e478f5a2d6313a", "filename": "src/tools/compiletest/src/uidiff.rs", "status": "removed", "additions": 0, "deletions": 73, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/12e76e24cc1466ffb2bd37cc7652a6dd7ba15735/src%2Ftools%2Fcompiletest%2Fsrc%2Fuidiff.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12e76e24cc1466ffb2bd37cc7652a6dd7ba15735/src%2Ftools%2Fcompiletest%2Fsrc%2Fuidiff.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fuidiff.rs?ref=12e76e24cc1466ffb2bd37cc7652a6dd7ba15735", "patch": "@@ -1,73 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-//! Code for checking whether the output of the compiler matches what is\n-//! expected.\n-\n-pub fn diff_lines(actual: &str, expected: &str) -> Vec<String> {\n-    // mega simplistic diff algorithm that just prints the things added/removed\n-    zip_all(actual.lines(), expected.lines())\n-        .enumerate()\n-        .filter_map(|(i, (a, e))| {\n-            match (a, e) {\n-                (Some(a), Some(e)) => {\n-                    if lines_match(e, a) {\n-                        None\n-                    } else {\n-                        Some(format!(\"{:3} - |{}|\\n    + |{}|\\n\", i, e, a))\n-                    }\n-                }\n-                (Some(a), None) => Some(format!(\"{:3} -\\n    + |{}|\\n\", i, a)),\n-                (None, Some(e)) => Some(format!(\"{:3} - |{}|\\n    +\\n\", i, e)),\n-                (None, None) => panic!(\"Cannot get here\"),\n-            }\n-        })\n-        .collect()\n-}\n-\n-fn lines_match(expected: &str, mut actual: &str) -> bool {\n-    for (i, part) in expected.split(\"[..]\").enumerate() {\n-        match actual.find(part) {\n-            Some(j) => {\n-                if i == 0 && j != 0 {\n-                    return false;\n-                }\n-                actual = &actual[j + part.len()..];\n-            }\n-            None => return false,\n-        }\n-    }\n-    actual.is_empty() || expected.ends_with(\"[..]\")\n-}\n-\n-struct ZipAll<I1: Iterator, I2: Iterator> {\n-    first: I1,\n-    second: I2,\n-}\n-\n-impl<T, I1: Iterator<Item = T>, I2: Iterator<Item = T>> Iterator for ZipAll<I1, I2> {\n-    type Item = (Option<T>, Option<T>);\n-    fn next(&mut self) -> Option<(Option<T>, Option<T>)> {\n-        let first = self.first.next();\n-        let second = self.second.next();\n-\n-        match (first, second) {\n-            (None, None) => None,\n-            (a, b) => Some((a, b)),\n-        }\n-    }\n-}\n-\n-fn zip_all<T, I1: Iterator<Item = T>, I2: Iterator<Item = T>>(a: I1, b: I2) -> ZipAll<I1, I2> {\n-    ZipAll {\n-        first: a,\n-        second: b,\n-    }\n-}"}]}