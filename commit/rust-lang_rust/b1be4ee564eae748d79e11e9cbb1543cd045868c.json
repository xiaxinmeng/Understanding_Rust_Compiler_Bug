{"sha": "b1be4ee564eae748d79e11e9cbb1543cd045868c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxYmU0ZWU1NjRlYWU3NDhkNzllMTFlOWNiYjE1NDNjZDA0NTg2OGM=", "commit": {"author": {"name": "Oliver S\u0336c\u0336h\u0336n\u0336e\u0336i\u0336d\u0336e\u0336r Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-01T11:16:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-01T11:16:14Z"}, "message": "Merge pull request #504 from RalfJung/crate\n\nuse crate:: imports where appropriate", "tree": {"sha": "5ffc860cf1f869adc048eab71c4162a97d3b0ac5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ffc860cf1f869adc048eab71c4162a97d3b0ac5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1be4ee564eae748d79e11e9cbb1543cd045868c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb2uB+CRBK7hj4Ov3rIwAAdHIIAI56jJpqPmPL+y8zZstB8fzn\nX/NDmeEjU+kZpMX2+Vry0wVzZBT/s3wgycTIDr/bAgBxsu4BYVYG+RFtJwtNKDWW\n8Ul1pYHdoifdIcXq5ZhSloh9+63zoExWYb6RgmHtIltmdnT3/2yVIswxyonXZuo1\nWAoC54mAC0UQWJUw1QsIcF+3LUHdhXlHKTokGer1MVY9q8osCp/XpMyda5AenPFH\n5HDIaCWSRB/AG6CLtPqqphIFl0nMkX0PVmkjViMMrvPXBZChlqWPNJ87QVf+RdhK\n4UbGVlFeNyDrOG/HXpPhlwEKwyY4QLKZ36lzyg9H1a0wFvlfZXOkvtNw1S6COpE=\n=vfUZ\n-----END PGP SIGNATURE-----\n", "payload": "tree 5ffc860cf1f869adc048eab71c4162a97d3b0ac5\nparent 2833b54100908103645ee247fa014bc6a5d136fb\nparent 27b1f47b0a947f8867d3d0840ea40c5902b7191c\nauthor Oliver S\u0336c\u0336h\u0336n\u0336e\u0336i\u0336d\u0336e\u0336r Scherer <github35764891676564198441@oli-obk.de> 1541070974 +0100\ncommitter GitHub <noreply@github.com> 1541070974 +0100\n\nMerge pull request #504 from RalfJung/crate\n\nuse crate:: imports where appropriate"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1be4ee564eae748d79e11e9cbb1543cd045868c", "html_url": "https://github.com/rust-lang/rust/commit/b1be4ee564eae748d79e11e9cbb1543cd045868c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1be4ee564eae748d79e11e9cbb1543cd045868c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2833b54100908103645ee247fa014bc6a5d136fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/2833b54100908103645ee247fa014bc6a5d136fb", "html_url": "https://github.com/rust-lang/rust/commit/2833b54100908103645ee247fa014bc6a5d136fb"}, {"sha": "27b1f47b0a947f8867d3d0840ea40c5902b7191c", "url": "https://api.github.com/repos/rust-lang/rust/commits/27b1f47b0a947f8867d3d0840ea40c5902b7191c", "html_url": "https://github.com/rust-lang/rust/commit/27b1f47b0a947f8867d3d0840ea40c5902b7191c"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "7e1ff3233f21ec5257870f283b372b165897880e", "filename": "src/fn_call.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1be4ee564eae748d79e11e9cbb1543cd045868c/src%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1be4ee564eae748d79e11e9cbb1543cd045868c/src%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffn_call.rs?ref=b1be4ee564eae748d79e11e9cbb1543cd045868c", "patch": "@@ -4,7 +4,7 @@ use rustc::hir::def_id::DefId;\n use rustc::mir;\n use syntax::attr;\n \n-use super::*;\n+use crate::*;\n \n pub trait EvalContextExt<'tcx, 'mir> {\n     /// Emulate calling a foreign item, fail if the item is not supported."}, {"sha": "6dc5b768ea63f352a8fc6fc4e3f0d6db9677bf67", "filename": "src/helpers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1be4ee564eae748d79e11e9cbb1543cd045868c/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1be4ee564eae748d79e11e9cbb1543cd045868c/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=b1be4ee564eae748d79e11e9cbb1543cd045868c", "patch": "@@ -3,7 +3,7 @@ use std::mem;\n use rustc::ty;\n use rustc::hir::def_id::{DefId, CRATE_DEF_INDEX};\n \n-use super::*;\n+use crate::*;\n \n pub trait ScalarExt {\n     /// HACK: this function just extracts all bits if `defined != 0`"}, {"sha": "caf5687b231cb32d83b2949d835ca34cc11ec5ea", "filename": "src/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1be4ee564eae748d79e11e9cbb1543cd045868c/src%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1be4ee564eae748d79e11e9cbb1543cd045868c/src%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsic.rs?ref=b1be4ee564eae748d79e11e9cbb1543cd045868c", "patch": "@@ -4,7 +4,7 @@ use rustc::ty;\n \n use rustc::mir::interpret::{EvalResult, PointerArithmetic};\n \n-use super::{\n+use crate::{\n     PlaceTy, OpTy, Value, Scalar, ScalarMaybeUndef, Borrow,\n     ScalarExt, OperatorEvalContextExt\n };"}, {"sha": "cb544e9bb386b015642ea154fe98cca59308c0a0", "filename": "src/lib.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b1be4ee564eae748d79e11e9cbb1543cd045868c/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1be4ee564eae748d79e11e9cbb1543cd045868c/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=b1be4ee564eae748d79e11e9cbb1543cd045868c", "patch": "@@ -37,15 +37,15 @@ mod range_map;\n mod mono_hash_map;\n mod stacked_borrows;\n \n-use fn_call::EvalContextExt as MissingFnsEvalContextExt;\n-use operator::EvalContextExt as OperatorEvalContextExt;\n-use intrinsic::EvalContextExt as IntrinsicEvalContextExt;\n-use tls::{EvalContextExt as TlsEvalContextExt, TlsData};\n-use range_map::RangeMap;\n+use crate::fn_call::EvalContextExt as MissingFnsEvalContextExt;\n+use crate::operator::EvalContextExt as OperatorEvalContextExt;\n+use crate::intrinsic::EvalContextExt as IntrinsicEvalContextExt;\n+use crate::tls::{EvalContextExt as TlsEvalContextExt, TlsData};\n+use crate::range_map::RangeMap;\n #[allow(unused_imports)] // FIXME rustc bug https://github.com/rust-lang/rust/issues/53682\n-use helpers::{ScalarExt, EvalContextExt as HelpersEvalContextExt};\n-use mono_hash_map::MonoHashMap;\n-use stacked_borrows::{EvalContextExt as StackedBorEvalContextExt};\n+use crate::helpers::{ScalarExt, EvalContextExt as HelpersEvalContextExt};\n+use crate::mono_hash_map::MonoHashMap;\n+use crate::stacked_borrows::{EvalContextExt as StackedBorEvalContextExt};\n \n // Used by priroda\n pub use stacked_borrows::{Borrow, Stacks, Mut as MutBorrow};"}, {"sha": "e30578a5a77b9c4e550adb92cce15014c1a39900", "filename": "src/mono_hash_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1be4ee564eae748d79e11e9cbb1543cd045868c/src%2Fmono_hash_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1be4ee564eae748d79e11e9cbb1543cd045868c/src%2Fmono_hash_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmono_hash_map.rs?ref=b1be4ee564eae748d79e11e9cbb1543cd045868c", "patch": "@@ -12,7 +12,7 @@ use std::borrow::Borrow;\n \n use rustc_data_structures::fx::FxHashMap;\n \n-use super::AllocMap;\n+use crate::AllocMap;\n \n #[derive(Debug, Clone)]\n pub struct MonoHashMap<K: Hash + Eq, V>(RefCell<FxHashMap<K, Box<V>>>);"}, {"sha": "e5c695009cfae15ccf32ae387c35a75256e612ad", "filename": "src/operator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1be4ee564eae748d79e11e9cbb1543cd045868c/src%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1be4ee564eae748d79e11e9cbb1543cd045868c/src%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foperator.rs?ref=b1be4ee564eae748d79e11e9cbb1543cd045868c", "patch": "@@ -1,7 +1,7 @@\n use rustc::ty::{Ty, layout::TyLayout};\n use rustc::mir;\n \n-use super::*;\n+use crate::*;\n \n pub trait EvalContextExt<'tcx> {\n     fn ptr_op("}, {"sha": "001da10ddc2160662c9e3a94b86ecd3f3be11bcb", "filename": "src/tls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1be4ee564eae748d79e11e9cbb1543cd045868c/src%2Ftls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1be4ee564eae748d79e11e9cbb1543cd045868c/src%2Ftls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftls.rs?ref=b1be4ee564eae748d79e11e9cbb1543cd045868c", "patch": "@@ -3,7 +3,7 @@ use std::collections::BTreeMap;\n use rustc_target::abi::LayoutOf;\n use rustc::{ty, ty::layout::HasDataLayout, mir};\n \n-use super::{\n+use crate::{\n     EvalResult, EvalErrorKind, StackPopCleanup,\n     MPlaceTy, Scalar, Borrow,\n };"}]}