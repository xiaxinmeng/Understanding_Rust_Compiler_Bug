{"sha": "5162e39bffdb244de1bbbd06eeffa4a095df0ecc", "node_id": "C_kwDOAAsO6NoAKDUxNjJlMzliZmZkYjI0NGRlMWJiYmQwNmVlZmZhNGEwOTVkZjBlY2M", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-01-17T04:25:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-17T04:25:23Z"}, "message": "Rollup merge of #106953 - kylematsuda:early-binder-docs, r=jackh726\n\nDocument `EarlyBinder::subst_identity` and `skip_binder`\n\nFinishing implementing #105779 will change several commonly used queries to return `EarlyBinder` by default. This PR adds documentation for two of the methods used to access data inside the `EarlyBinder`. I tried to summarize some of the [discussion from the issue](https://github.com/rust-lang/rust/issues/105779#issuecomment-1375512647) in writing this.\n\nr? `@lcnr`", "tree": {"sha": "0fb793de1230a42df7756e87ed706df08e08203e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0fb793de1230a42df7756e87ed706df08e08203e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5162e39bffdb244de1bbbd06eeffa4a095df0ecc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjxiMzCRBK7hj4Ov3rIwAAgSAIAJTiyOfp5ryimWrQx7fWWNHd\nR/2F7ox//WGVkRK4wbsI0toTIVglGb3oOsJ+BXItre85o4WIiYZK8r1T7lb0e7ki\nOhbqOzfOSpp0JISJ7agRLPYZRun1LGtlvBGj6jEfXzt/NfYJm5ZtJxCjxpXyJYzG\nziIaNktxcyMC0kOpmNN1cDMlG6PUy8uqNKTcDFPXQD6o5SvA9hHLXUmYoVr8bRnp\nJBSyc7CNXaGHV/OhF4Au7WnaO2mVDePs6Q82tSDIC5L8e4j/6ajnF77Ud7Xaj3KP\nsYNAT07L73z8D2n3Xen475a++GvhQ2le1InzKA5J5knb3p40bRR7QybvsFoAacU=\n=sRXr\n-----END PGP SIGNATURE-----\n", "payload": "tree 0fb793de1230a42df7756e87ed706df08e08203e\nparent 9bcc46ee90999097a2baf67023fd8074a4d2efe1\nparent 1ae1c49c501f8c6baf662e0a8081280bb7a9e79c\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1673929523 +0100\ncommitter GitHub <noreply@github.com> 1673929523 +0100\n\nRollup merge of #106953 - kylematsuda:early-binder-docs, r=jackh726\n\nDocument `EarlyBinder::subst_identity` and `skip_binder`\n\nFinishing implementing #105779 will change several commonly used queries to return `EarlyBinder` by default. This PR adds documentation for two of the methods used to access data inside the `EarlyBinder`. I tried to summarize some of the [discussion from the issue](https://github.com/rust-lang/rust/issues/105779#issuecomment-1375512647) in writing this.\n\nr? `@lcnr`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5162e39bffdb244de1bbbd06eeffa4a095df0ecc", "html_url": "https://github.com/rust-lang/rust/commit/5162e39bffdb244de1bbbd06eeffa4a095df0ecc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5162e39bffdb244de1bbbd06eeffa4a095df0ecc/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bcc46ee90999097a2baf67023fd8074a4d2efe1", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bcc46ee90999097a2baf67023fd8074a4d2efe1", "html_url": "https://github.com/rust-lang/rust/commit/9bcc46ee90999097a2baf67023fd8074a4d2efe1"}, {"sha": "1ae1c49c501f8c6baf662e0a8081280bb7a9e79c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ae1c49c501f8c6baf662e0a8081280bb7a9e79c", "html_url": "https://github.com/rust-lang/rust/commit/1ae1c49c501f8c6baf662e0a8081280bb7a9e79c"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "a07582fc8ff1ec6e8a859d4642003d90806c8bd0", "filename": "compiler/rustc_middle/src/ty/subst.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5162e39bffdb244de1bbbd06eeffa4a095df0ecc/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5162e39bffdb244de1bbbd06eeffa4a095df0ecc/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs?ref=5162e39bffdb244de1bbbd06eeffa4a095df0ecc", "patch": "@@ -545,6 +545,9 @@ impl<'tcx, T: TypeVisitable<'tcx>> TypeVisitable<'tcx> for &'tcx ty::List<T> {\n /// Similar to [`super::Binder`] except that it tracks early bound generics, i.e. `struct Foo<T>(T)`\n /// needs `T` substituted immediately. This type primarily exists to avoid forgetting to call\n /// `subst`.\n+///\n+/// If you don't have anything to `subst`, you may be looking for\n+/// [`subst_identity`](EarlyBinder::subst_identity) or [`skip_binder`](EarlyBinder::skip_binder).\n #[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash, Debug)]\n #[derive(Encodable, Decodable, HashStable)]\n pub struct EarlyBinder<T>(pub T);\n@@ -585,6 +588,14 @@ impl<T> EarlyBinder<T> {\n         EarlyBinder(value)\n     }\n \n+    /// Skips the binder and returns the \"bound\" value.\n+    /// This can be used to extract data that does not depend on generic parameters\n+    /// (e.g., getting the `DefId` of the inner value or getting the number of\n+    /// arguments of an `FnSig`). Otherwise, consider using\n+    /// [`subst_identity`](EarlyBinder::subst_identity).\n+    ///\n+    /// See also [`Binder::skip_binder`](super::Binder::skip_binder), which is\n+    /// the analogous operation on [`super::Binder`].\n     pub fn skip_binder(self) -> T {\n         self.0\n     }\n@@ -736,6 +747,14 @@ impl<'tcx, T: TypeFoldable<'tcx>> ty::EarlyBinder<T> {\n         self.0.fold_with(&mut folder)\n     }\n \n+    /// Makes the identity substitution `T0 => T0, ..., TN => TN`.\n+    /// Conceptually, this converts universally bound variables into placeholders\n+    /// when inside of a given item.\n+    ///\n+    /// For example, consider `for<T> fn foo<T>(){ .. }`:\n+    /// - Outside of `foo`, `T` is bound (represented by the presence of `EarlyBinder`).\n+    /// - Inside of the body of `foo`, we treat `T` as a placeholder by calling\n+    /// `subst_identity` to discharge the `EarlyBinder`.\n     pub fn subst_identity(self) -> T {\n         self.0\n     }"}]}