{"sha": "14b1f8763486fe7bc4a468c70fce827ae34d3d74", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0YjFmODc2MzQ4NmZlN2JjNGE0NjhjNzBmY2U4MjdhZTM0ZDNkNzQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-06-11T15:09:39Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-06-11T15:28:51Z"}, "message": "minor formatting", "tree": {"sha": "f118f481c7dc2fae8940a261c6a714a727781d9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f118f481c7dc2fae8940a261c6a714a727781d9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14b1f8763486fe7bc4a468c70fce827ae34d3d74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14b1f8763486fe7bc4a468c70fce827ae34d3d74", "html_url": "https://github.com/rust-lang/rust/commit/14b1f8763486fe7bc4a468c70fce827ae34d3d74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14b1f8763486fe7bc4a468c70fce827ae34d3d74/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26753f0e4931e2980f008015cbd709a77d71c0f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/26753f0e4931e2980f008015cbd709a77d71c0f3", "html_url": "https://github.com/rust-lang/rust/commit/26753f0e4931e2980f008015cbd709a77d71c0f3"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "76adc7869243c01b28e1ae4b716e141f57761b54", "filename": "crates/ra_hir/src/code_model/src.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/14b1f8763486fe7bc4a468c70fce827ae34d3d74/crates%2Fra_hir%2Fsrc%2Fcode_model%2Fsrc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14b1f8763486fe7bc4a468c70fce827ae34d3d74/crates%2Fra_hir%2Fsrc%2Fcode_model%2Fsrc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model%2Fsrc.rs?ref=14b1f8763486fe7bc4a468c70fce827ae34d3d74", "patch": "@@ -74,21 +74,18 @@ impl HasSource for EnumVariant {\n }\n impl HasSource for Function {\n     type Ast = TreeArc<ast::FnDef>;\n-\n     fn source(self, db: &(impl DefDatabase + AstDatabase)) -> Source<TreeArc<ast::FnDef>> {\n         self.id.source(db)\n     }\n }\n impl HasSource for Const {\n     type Ast = TreeArc<ast::ConstDef>;\n-\n     fn source(self, db: &(impl DefDatabase + AstDatabase)) -> Source<TreeArc<ast::ConstDef>> {\n         self.id.source(db)\n     }\n }\n impl HasSource for Static {\n     type Ast = TreeArc<ast::StaticDef>;\n-\n     fn source(self, db: &(impl DefDatabase + AstDatabase)) -> Source<TreeArc<ast::StaticDef>> {\n         self.id.source(db)\n     }\n@@ -107,7 +104,6 @@ impl HasSource for TypeAlias {\n }\n impl HasSource for MacroDef {\n     type Ast = TreeArc<ast::MacroCall>;\n-\n     fn source(self, db: &(impl DefDatabase + AstDatabase)) -> Source<TreeArc<ast::MacroCall>> {\n         Source { file_id: self.id.0.file_id(), ast: self.id.0.to_node(db) }\n     }"}]}