{"sha": "2ba5fac1a460de9936b85f9459668b0992f21f06", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiYTVmYWMxYTQ2MGRlOTkzNmI4NWY5NDU5NjY4YjA5OTJmMjFmMDY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-04-29T22:08:02Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-05-02T15:49:26Z"}, "message": "fix rebase flaws", "tree": {"sha": "4dbd67a088eb46a03c06dedb2790509ae38a8ccf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4dbd67a088eb46a03c06dedb2790509ae38a8ccf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ba5fac1a460de9936b85f9459668b0992f21f06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ba5fac1a460de9936b85f9459668b0992f21f06", "html_url": "https://github.com/rust-lang/rust/commit/2ba5fac1a460de9936b85f9459668b0992f21f06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ba5fac1a460de9936b85f9459668b0992f21f06/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5974e5b294ee3b67054a31eae2a4b9bab950a119", "url": "https://api.github.com/repos/rust-lang/rust/commits/5974e5b294ee3b67054a31eae2a4b9bab950a119", "html_url": "https://github.com/rust-lang/rust/commit/5974e5b294ee3b67054a31eae2a4b9bab950a119"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "d03ae45e83fe8a7b5b210eb81cc5af35918ac23c", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2ba5fac1a460de9936b85f9459668b0992f21f06/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ba5fac1a460de9936b85f9459668b0992f21f06/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=2ba5fac1a460de9936b85f9459668b0992f21f06", "patch": "@@ -91,9 +91,8 @@ use std::thread;\n \n use rustc::session::early_error;\n \n-use syntax::{ast, errors, diagnostic};\n-use syntax::codemap::MultiSpan;\n-use syntax::parse::{self, PResult};\n+use syntax::{ast, errors, diagnostics};\n+use syntax::codemap::{CodeMap, FileLoader, RealFileLoader, MultiSpan};\n use syntax::errors::emitter::Emitter;\n use syntax::feature_gate::{GatedCfg, UnstableFeatures};\n use syntax::parse::{self, PResult, token};"}, {"sha": "e747ed15260613fe104d5119dbd2c12b624f4d11", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2ba5fac1a460de9936b85f9459668b0992f21f06/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ba5fac1a460de9936b85f9459668b0992f21f06/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=2ba5fac1a460de9936b85f9459668b0992f21f06", "patch": "@@ -1784,8 +1784,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n \n                 // If it's a typedef, give a note\n                 if let Def::TyAlias(..) = path_res.base_def {\n-                    err.note(trait_path.span,\n-                             \"`type` aliases cannot be used for traits\");\n+                    err.note(\"`type` aliases cannot be used for traits\");\n \n                     let definition_site = {\n                         let segments = &trait_path.segments;"}, {"sha": "91c272c59c4a68ecbc40bba92e6ebc747a17ad10", "filename": "src/libsyntax_ext/deriving/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2ba5fac1a460de9936b85f9459668b0992f21f06/src%2Flibsyntax_ext%2Fderiving%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ba5fac1a460de9936b85f9459668b0992f21f06/src%2Flibsyntax_ext%2Fderiving%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fmod.rs?ref=2ba5fac1a460de9936b85f9459668b0992f21f06", "patch": "@@ -204,9 +204,9 @@ macro_rules! derive_traits {\n                                         sp, feature_gate::EXPLAIN_DERIVE_UNDERSCORE,\n                                     );\n                                     if option_env!(\"CFG_DISABLE_UNSTABLE_FEATURES\").is_none() {\n-                                        w.fileline_help(\n-                                            sp, &format!(\"add #![feature(custom_derive)] to \\\n-                                                          the crate attributes to enable\")\n+                                        w.help(\n+                                            &format!(\"add #![feature(custom_derive)] to \\\n+                                                      the crate attributes to enable\")\n                                         );\n                                     }\n                                     w.emit();"}]}