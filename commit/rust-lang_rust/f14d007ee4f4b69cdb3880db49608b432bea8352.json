{"sha": "f14d007ee4f4b69cdb3880db49608b432bea8352", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNGQwMDdlZTRmNGI2OWNkYjM4ODBkYjQ5NjA4YjQzMmJlYTgzNTI=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-01-23T15:42:23Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-01-23T22:40:58Z"}, "message": "Add suggestion for incorrect field syntax.\n\nThis commit adds a suggestion when a `=` character is used when\nspecifying the value of a field in a struct constructor incorrectly\ninstead of a `:` character.", "tree": {"sha": "27ef324230f40d7507ee14cd1c6268d4f3e12713", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27ef324230f40d7507ee14cd1c6268d4f3e12713"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f14d007ee4f4b69cdb3880db49608b432bea8352", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlxI7XoACgkQAXYLT59T\n8VT8UQ//SBG7pLApAZBIPoRifKXtuPFhL3+slh8eIbYTjttfjAi7wImhJTvbeEMQ\na5HvvJW06xSP32ueqExPp/AzEB/Mcz8z0aguGnsFkxMjGhDZ4g63VVywS7T342IA\n7AxpXPv/ReXNbJQn62FIzMeZA35shrHJNepXthQpKPbGPCysJtZLrK4XsTKa2vCj\nNVjkuWVD2vSQMBJhruzeJUdXw1k1n/ttgxVsQqD7NHu8NtcxJ25sMsGtkPM8ELaf\nS8dDldq0QKiovzPNl/aFlwKawUg0uWNmUYFf6a7ytIDq6zg0cRB+YaoXSnzg1lL/\nmkLzou3wHEWYufhxLzZwTcGy8X3PazZR6ulty4HfeftuJZWBIyOT7dIft+HLKoCS\njnHI1B9SXxIeeFLLjDf6m5R3IXNapN3Z94NQGPZ3TgEuidfbffceuZ0TpdnhYsy9\n4Lx8qYazBIVvfLoVHl8WuuC9zssTIsBvj4bUqnyFpa/8ugBA0OzoJsUNVm8lRTEe\niYgvZnnRHaNOOXVvwP15N9aBN6UQkzvFkbESC/aCOZnS487i1UfnHNoSHvlzivK3\nONIp3PCTeen9rDBMX3VuRdpq54+6+7fbXnZvCICsy4Gh1y2SJWHJMx5xvx46JTCH\n3zN7/s19f6XaOzmGmODosRr3Im/u2SifnsN0ciNJIjBIrYgLWHc=\n=u5Qd\n-----END PGP SIGNATURE-----", "payload": "tree 27ef324230f40d7507ee14cd1c6268d4f3e12713\nparent 6bba352cad2117f56353d400f71e96eafa2e6bd7\nauthor David Wood <david@davidtw.co> 1548258143 +0100\ncommitter David Wood <david@davidtw.co> 1548283258 +0100\n\nAdd suggestion for incorrect field syntax.\n\nThis commit adds a suggestion when a `=` character is used when\nspecifying the value of a field in a struct constructor incorrectly\ninstead of a `:` character.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f14d007ee4f4b69cdb3880db49608b432bea8352", "html_url": "https://github.com/rust-lang/rust/commit/f14d007ee4f4b69cdb3880db49608b432bea8352", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f14d007ee4f4b69cdb3880db49608b432bea8352/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bba352cad2117f56353d400f71e96eafa2e6bd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bba352cad2117f56353d400f71e96eafa2e6bd7", "html_url": "https://github.com/rust-lang/rust/commit/6bba352cad2117f56353d400f71e96eafa2e6bd7"}], "stats": {"total": 110, "additions": 109, "deletions": 1}, "files": [{"sha": "b9c602550e3332834eea8fb5dfb5b69924cedf23", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f14d007ee4f4b69cdb3880db49608b432bea8352/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f14d007ee4f4b69cdb3880db49608b432bea8352/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=f14d007ee4f4b69cdb3880db49608b432bea8352", "patch": "@@ -2263,8 +2263,24 @@ impl<'a> Parser<'a> {\n         let lo = self.span;\n \n         // Check if a colon exists one ahead. This means we're parsing a fieldname.\n-        let (fieldname, expr, is_shorthand) = if self.look_ahead(1, |t| t == &token::Colon) {\n+        let (fieldname, expr, is_shorthand) = if self.look_ahead(1, |t| {\n+            t == &token::Colon || t == &token::Eq\n+        }) {\n             let fieldname = self.parse_field_name()?;\n+\n+            // Check for an equals token. This means the source incorrectly attempts to\n+            // initialize a field with an eq rather than a colon.\n+            if self.token == token::Eq {\n+                self.diagnostic()\n+                    .struct_span_err(self.span, \"expected `:`, found `=`\")\n+                    .span_suggestion_with_applicability(\n+                        fieldname.span.shrink_to_hi().to(self.span),\n+                        \"replace equals symbol with a colon\",\n+                        \":\".to_string(),\n+                        Applicability::MachineApplicable,\n+                    )\n+                    .emit();\n+            }\n             self.bump(); // `:`\n             (fieldname, self.parse_expr()?, false)\n         } else {"}, {"sha": "4a432206d51e1488275e52a8ce1ac1fa1b80550d", "filename": "src/test/ui/issues/issue-57684.fixed", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/f14d007ee4f4b69cdb3880db49608b432bea8352/src%2Ftest%2Fui%2Fissues%2Fissue-57684.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f14d007ee4f4b69cdb3880db49608b432bea8352/src%2Ftest%2Fui%2Fissues%2Fissue-57684.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57684.fixed?ref=f14d007ee4f4b69cdb3880db49608b432bea8352", "patch": "@@ -0,0 +1,37 @@\n+// run-rustfix\n+\n+#![allow(warnings)]\n+\n+// This test checks that the following error is emitted when a `=` character is used to initialize\n+// a struct field when a `:` is expected.\n+//\n+// ```\n+// error: struct fields are initialized with a colon\n+//   --> $DIR/issue-57684.rs:12:20\n+//    |\n+// LL |     let _ = X { f1 = 5 };\n+//    |                    ^ help: replace equals symbol with a colon: `:`\n+// ```\n+\n+struct X {\n+    f1: i32,\n+}\n+\n+struct Y {\n+    f1: i32,\n+    f2: i32,\n+    f3: i32,\n+}\n+\n+fn main() {\n+    let _ = X { f1: 5 };\n+    //~^ ERROR expected `:`, found `=`\n+\n+    let f3 = 3;\n+    let _ = Y {\n+        f1: 5,\n+        //~^ ERROR expected `:`, found `=`\n+        f2: 4,\n+        f3,\n+    };\n+}"}, {"sha": "7a62785e32f1c045583ca276283bca8cfaa2bc6a", "filename": "src/test/ui/issues/issue-57684.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/f14d007ee4f4b69cdb3880db49608b432bea8352/src%2Ftest%2Fui%2Fissues%2Fissue-57684.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f14d007ee4f4b69cdb3880db49608b432bea8352/src%2Ftest%2Fui%2Fissues%2Fissue-57684.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57684.rs?ref=f14d007ee4f4b69cdb3880db49608b432bea8352", "patch": "@@ -0,0 +1,37 @@\n+// run-rustfix\n+\n+#![allow(warnings)]\n+\n+// This test checks that the following error is emitted when a `=` character is used to initialize\n+// a struct field when a `:` is expected.\n+//\n+// ```\n+// error: struct fields are initialized with a colon\n+//   --> $DIR/issue-57684.rs:12:20\n+//    |\n+// LL |     let _ = X { f1 = 5 };\n+//    |                    ^ help: replace equals symbol with a colon: `:`\n+// ```\n+\n+struct X {\n+    f1: i32,\n+}\n+\n+struct Y {\n+    f1: i32,\n+    f2: i32,\n+    f3: i32,\n+}\n+\n+fn main() {\n+    let _ = X { f1 = 5 };\n+    //~^ ERROR expected `:`, found `=`\n+\n+    let f3 = 3;\n+    let _ = Y {\n+        f1 = 5,\n+        //~^ ERROR expected `:`, found `=`\n+        f2: 4,\n+        f3,\n+    };\n+}"}, {"sha": "514bbffde6b1e957b68ad94042b1bef77d322a48", "filename": "src/test/ui/issues/issue-57684.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f14d007ee4f4b69cdb3880db49608b432bea8352/src%2Ftest%2Fui%2Fissues%2Fissue-57684.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f14d007ee4f4b69cdb3880db49608b432bea8352/src%2Ftest%2Fui%2Fissues%2Fissue-57684.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57684.stderr?ref=f14d007ee4f4b69cdb3880db49608b432bea8352", "patch": "@@ -0,0 +1,18 @@\n+error: expected `:`, found `=`\n+  --> $DIR/issue-57684.rs:27:20\n+   |\n+LL |     let _ = X { f1 = 5 };\n+   |                   -^\n+   |                   |\n+   |                   help: replace equals symbol with a colon: `:`\n+\n+error: expected `:`, found `=`\n+  --> $DIR/issue-57684.rs:32:12\n+   |\n+LL |         f1 = 5,\n+   |           -^\n+   |           |\n+   |           help: replace equals symbol with a colon: `:`\n+\n+error: aborting due to 2 previous errors\n+"}]}