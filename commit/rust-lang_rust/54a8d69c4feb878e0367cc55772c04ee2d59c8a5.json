{"sha": "54a8d69c4feb878e0367cc55772c04ee2d59c8a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0YThkNjljNGZlYjg3OGUwMzY3Y2M1NTc3MmMwNGVlMmQ1OWM4YTU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-08-30T23:27:06Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-08-30T23:27:31Z"}, "message": "Change str : Eq to use memcmp.", "tree": {"sha": "f3a709bc9aa682451e9ee0f5258a2a4279431a58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3a709bc9aa682451e9ee0f5258a2a4279431a58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54a8d69c4feb878e0367cc55772c04ee2d59c8a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54a8d69c4feb878e0367cc55772c04ee2d59c8a5", "html_url": "https://github.com/rust-lang/rust/commit/54a8d69c4feb878e0367cc55772c04ee2d59c8a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54a8d69c4feb878e0367cc55772c04ee2d59c8a5/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7fec8419f38bbcd662b24cc7b4a77a902150e3db", "url": "https://api.github.com/repos/rust-lang/rust/commits/7fec8419f38bbcd662b24cc7b4a77a902150e3db", "html_url": "https://github.com/rust-lang/rust/commit/7fec8419f38bbcd662b24cc7b4a77a902150e3db"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "7e13e75a93d579a7b45218b92168585ce7c45910", "filename": "src/libcore/str.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/54a8d69c4feb878e0367cc55772c04ee2d59c8a5/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54a8d69c4feb878e0367cc55772c04ee2d59c8a5/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=54a8d69c4feb878e0367cc55772c04ee2d59c8a5", "patch": "@@ -671,18 +671,18 @@ Section: Comparing strings\n \n /// Bytewise slice equality\n pure fn eq_slice(a: &str, b: &str) -> bool {\n-    let a_len = a.len();\n-    let b_len = b.len();\n-    if a_len != b_len { return false; }\n-    let mut end = uint::min(&a_len, &b_len);\n-\n-    let mut i = 0u;\n-    while i < end {\n-        if a[i] != b[i] { return false; }\n-        i += 1u;\n+    do as_buf(a) |ap, alen| {\n+        do as_buf(b) |bp, blen| {\n+            if (alen != blen) { false }\n+            else {\n+                unsafe {\n+                    libc::memcmp(ap as *libc::c_void,\n+                                 bp as *libc::c_void,\n+                                 alen as libc::size_t) == 0\n+                }\n+            }\n+        }\n     }\n-\n-    return true;\n }\n \n /// Bytewise string equality"}]}