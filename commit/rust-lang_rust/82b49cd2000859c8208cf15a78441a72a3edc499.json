{"sha": "82b49cd2000859c8208cf15a78441a72a3edc499", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyYjQ5Y2QyMDAwODU5YzgyMDhjZjE1YTc4NDQxYTcyYTNlZGM0OTk=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-05-21T01:26:30Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-05-21T23:01:02Z"}, "message": "Refactor away `check_attributes`", "tree": {"sha": "8c73f892716d056eca0f637e3a3f194655fefc47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c73f892716d056eca0f637e3a3f194655fefc47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82b49cd2000859c8208cf15a78441a72a3edc499", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82b49cd2000859c8208cf15a78441a72a3edc499", "html_url": "https://github.com/rust-lang/rust/commit/82b49cd2000859c8208cf15a78441a72a3edc499", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82b49cd2000859c8208cf15a78441a72a3edc499/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3d705ef3094968c457cf0408cc6bbe241e627b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3d705ef3094968c457cf0408cc6bbe241e627b5", "html_url": "https://github.com/rust-lang/rust/commit/a3d705ef3094968c457cf0408cc6bbe241e627b5"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "9bfeb81b74a97af66b54082a2302399f5705fa2a", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/82b49cd2000859c8208cf15a78441a72a3edc499/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82b49cd2000859c8208cf15a78441a72a3edc499/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=82b49cd2000859c8208cf15a78441a72a3edc499", "patch": "@@ -69,16 +69,6 @@ impl_macro_generable! {\n         \"statement\", .make_stmts,      lift .fold_stmt,      |_span| SmallVector::zero();\n }\n \n-// this function is called to detect use of feature-gated or invalid attributes\n-// on macro invoations since they will not be detected after macro expansion\n-fn check_attributes(attrs: &[ast::Attribute], fld: &MacroExpander) {\n-    for attr in attrs.iter() {\n-        feature_gate::check_attribute(&attr, &fld.cx.parse_sess.span_diagnostic,\n-                                      &fld.cx.parse_sess.codemap(),\n-                                      &fld.cx.ecfg.features.unwrap());\n-    }\n-}\n-\n pub fn expand_expr(e: P<ast::Expr>, fld: &mut MacroExpander) -> P<ast::Expr> {\n     let expr_span = e.span;\n     return e.and_then(|ast::Expr {id, node, span, attrs}| match node {\n@@ -209,7 +199,13 @@ fn expand_mac_invoc<T>(mac: ast::Mac, ident: Option<Ident>, attrs: Vec<ast::Attr\n     fn mac_result<'a>(path: &ast::Path, ident: Option<Ident>, tts: Vec<TokenTree>, mark: Mrk,\n                       attrs: Vec<ast::Attribute>, call_site: Span, fld: &'a mut MacroExpander)\n                       -> Option<Box<MacResult + 'a>> {\n-        check_attributes(&attrs, fld);\n+        // Detect use of feature-gated or invalid attributes on macro invoations\n+        // since they will not be detected after macro expansion.\n+        for attr in attrs.iter() {\n+            feature_gate::check_attribute(&attr, &fld.cx.parse_sess.span_diagnostic,\n+                                          &fld.cx.parse_sess.codemap(),\n+                                          &fld.cx.ecfg.features.unwrap());\n+        }\n \n         if path.segments.len() > 1 {\n             fld.cx.span_err(path.span, \"expected macro name without module separators\");"}]}