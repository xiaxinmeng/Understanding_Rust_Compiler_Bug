{"sha": "431cebdca1a0d74a7252d22f2cfa220325c05b21", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzMWNlYmRjYTFhMGQ3NGE3MjUyZDIyZjJjZmEyMjAzMjVjMDViMjE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-06-20T14:22:03Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-06-20T14:22:03Z"}, "message": "Introduce #[cfg(target_feature = \"cg_clif\")]", "tree": {"sha": "92ff7cb2adf725d65aa9410673b8c9b23c34e33e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92ff7cb2adf725d65aa9410673b8c9b23c34e33e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/431cebdca1a0d74a7252d22f2cfa220325c05b21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/431cebdca1a0d74a7252d22f2cfa220325c05b21", "html_url": "https://github.com/rust-lang/rust/commit/431cebdca1a0d74a7252d22f2cfa220325c05b21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/431cebdca1a0d74a7252d22f2cfa220325c05b21/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "392348d3d1941f3960a9179da44a6016cac03506", "url": "https://api.github.com/repos/rust-lang/rust/commits/392348d3d1941f3960a9179da44a6016cac03506", "html_url": "https://github.com/rust-lang/rust/commit/392348d3d1941f3960a9179da44a6016cac03506"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "0cccdb13ad6f91bde137f80483965ca1a7b3c61b", "filename": "patches/0016-Disable-cpuid-intrinsic.patch", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/431cebdca1a0d74a7252d22f2cfa220325c05b21/patches%2F0016-Disable-cpuid-intrinsic.patch", "raw_url": "https://github.com/rust-lang/rust/raw/431cebdca1a0d74a7252d22f2cfa220325c05b21/patches%2F0016-Disable-cpuid-intrinsic.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0016-Disable-cpuid-intrinsic.patch?ref=431cebdca1a0d74a7252d22f2cfa220325c05b21", "patch": "@@ -11,12 +11,14 @@ diff --git a/src/stdarch/crates/core_arch/src/x86/cpuid.rs b/src/stdarch/crates/\n index f313c42..ff952bc 100644\n --- a/src/stdarch/crates/core_arch/src/x86/cpuid.rs\n +++ b/src/stdarch/crates/core_arch/src/x86/cpuid.rs\n-@@ -84,6 +84,9 @@ pub unsafe fn __cpuid(leaf: u32) -> CpuidResult {\n+@@ -84,6 +84,11 @@ pub unsafe fn __cpuid(leaf: u32) -> CpuidResult {\n  /// Does the host support the `cpuid` instruction?\n  #[inline]\n  pub fn has_cpuid() -> bool {\n +    // __cpuid intrinsic is not yet implemented\n-+    return false;\n++    #[cfg(target_feature = \"cg_clif\")] {\n++        return false;\n++    }\n +\n      #[cfg(target_env = \"sgx\")]\n      {"}, {"sha": "cb89afbf6197b4392d9982aba4f18acaa936085f", "filename": "src/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/431cebdca1a0d74a7252d22f2cfa220325c05b21/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/431cebdca1a0d74a7252d22f2cfa220325c05b21/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=431cebdca1a0d74a7252d22f2cfa220325c05b21", "patch": "@@ -188,18 +188,24 @@ impl CodegenBackend for CraneliftCodegenBackend {\n                 // rustdoc needs to be able to document functions that use all the features, so\n                 // whitelist them all\n                 target_features_whitelist::all_known_features()\n+                    .chain(Some((\"cg_clif\", None)))\n                     .map(|(a, b)| (a.to_string(), b))\n                     .collect()\n             } else {\n                 target_features_whitelist::target_feature_whitelist(tcx.sess)\n                     .iter()\n+                    .chain(&Some((\"cg_clif\", None)))\n                     .map(|&(a, b)| (a.to_string(), b))\n                     .collect()\n             }\n         };\n     }\n     fn provide_extern(&self, _providers: &mut Providers<'_>) {}\n \n+    fn target_features(&self, _sess: &Session) -> Vec<rustc_span::Symbol> {\n+        vec![rustc_span::Symbol::intern(\"cg_clif\")]\n+    }\n+\n     fn codegen_crate<'tcx>(\n         &self,\n         tcx: TyCtxt<'tcx>,"}]}