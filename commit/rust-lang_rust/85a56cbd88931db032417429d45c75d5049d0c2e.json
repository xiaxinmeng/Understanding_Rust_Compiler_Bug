{"sha": "85a56cbd88931db032417429d45c75d5049d0c2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1YTU2Y2JkODg5MzFkYjAzMjQxNzQyOWQ0NWM3NWQ1MDQ5ZDBjMmU=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-24T04:55:39Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-29T19:23:07Z"}, "message": "Inline `mark_as_waiting_from`.\n\nIt has a single call site, and the code is easier to read this way.", "tree": {"sha": "13d3223af1a3bfae21dbb0927a03f2b63bb79809", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13d3223af1a3bfae21dbb0927a03f2b63bb79809"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85a56cbd88931db032417429d45c75d5049d0c2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85a56cbd88931db032417429d45c75d5049d0c2e", "html_url": "https://github.com/rust-lang/rust/commit/85a56cbd88931db032417429d45c75d5049d0c2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85a56cbd88931db032417429d45c75d5049d0c2e/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a7fb8b13ad9a42e96ebbeaef8ddc1ebca3d65c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a7fb8b13ad9a42e96ebbeaef8ddc1ebca3d65c1", "html_url": "https://github.com/rust-lang/rust/commit/4a7fb8b13ad9a42e96ebbeaef8ddc1ebca3d65c1"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "3cf3bfc1fd4feb3c7af4d55692e3a3c72743bfa3", "filename": "src/librustc_data_structures/obligation_forest/mod.rs", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/85a56cbd88931db032417429d45c75d5049d0c2e/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85a56cbd88931db032417429d45c75d5049d0c2e/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs?ref=85a56cbd88931db032417429d45c75d5049d0c2e", "patch": "@@ -570,7 +570,19 @@ impl<O: ForestObligation> ObligationForest<O> {\n     #[inline(always)]\n     fn inlined_mark_neighbors_as_waiting_from(&self, node: &Node<O>) {\n         for &index in node.dependents.iter() {\n-            self.mark_as_waiting_from(&self.nodes[index]);\n+            let node = &self.nodes[index];\n+            match node.state.get() {\n+                NodeState::Waiting | NodeState::Error => {}\n+                NodeState::Success => {\n+                    node.state.set(NodeState::Waiting);\n+                    // This call site is cold.\n+                    self.uninlined_mark_neighbors_as_waiting_from(node);\n+                }\n+                NodeState::Pending | NodeState::Done => {\n+                    // This call site is cold.\n+                    self.uninlined_mark_neighbors_as_waiting_from(node);\n+                }\n+            }\n         }\n     }\n \n@@ -596,17 +608,6 @@ impl<O: ForestObligation> ObligationForest<O> {\n         }\n     }\n \n-    fn mark_as_waiting_from(&self, node: &Node<O>) {\n-        match node.state.get() {\n-            NodeState::Waiting | NodeState::Error => return,\n-            NodeState::Success => node.state.set(NodeState::Waiting),\n-            NodeState::Pending | NodeState::Done => {},\n-        }\n-\n-        // This call site is cold.\n-        self.uninlined_mark_neighbors_as_waiting_from(node);\n-    }\n-\n     /// Compresses the vector, removing all popped nodes. This adjusts\n     /// the indices and hence invalidates any outstanding\n     /// indices. Cannot be used during a transaction."}]}