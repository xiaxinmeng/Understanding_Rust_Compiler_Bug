{"sha": "cfb48df149bfa8a15b113b1a252598457a4ea392", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmYjQ4ZGYxNDliZmE4YTE1YjExM2IxYTI1MjU5ODQ1N2E0ZWEzOTI=", "commit": {"author": {"name": "Steffen Lyngbaek", "email": "steffenlyngbaek@gmail.com", "date": "2020-03-10T18:21:56Z"}, "committer": {"name": "Steffen Lyngbaek", "email": "steffenlyngbaek@gmail.com", "date": "2020-03-10T21:36:01Z"}, "message": "Address Issues from Github\n\n- Updated naming of config\n- Define struct in ra_ide and use remote derive in rust-analyzer/config\n- Make inlayConfig type more flexible to support more future types\n- Remove constructor only used in tests", "tree": {"sha": "8672e75715e2def7963e6250700125b17f233009", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8672e75715e2def7963e6250700125b17f233009"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cfb48df149bfa8a15b113b1a252598457a4ea392", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cfb48df149bfa8a15b113b1a252598457a4ea392", "html_url": "https://github.com/rust-lang/rust/commit/cfb48df149bfa8a15b113b1a252598457a4ea392", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cfb48df149bfa8a15b113b1a252598457a4ea392/comments", "author": {"login": "slyngbaek", "id": 1216902, "node_id": "MDQ6VXNlcjEyMTY5MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1216902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slyngbaek", "html_url": "https://github.com/slyngbaek", "followers_url": "https://api.github.com/users/slyngbaek/followers", "following_url": "https://api.github.com/users/slyngbaek/following{/other_user}", "gists_url": "https://api.github.com/users/slyngbaek/gists{/gist_id}", "starred_url": "https://api.github.com/users/slyngbaek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slyngbaek/subscriptions", "organizations_url": "https://api.github.com/users/slyngbaek/orgs", "repos_url": "https://api.github.com/users/slyngbaek/repos", "events_url": "https://api.github.com/users/slyngbaek/events{/privacy}", "received_events_url": "https://api.github.com/users/slyngbaek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "slyngbaek", "id": 1216902, "node_id": "MDQ6VXNlcjEyMTY5MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1216902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slyngbaek", "html_url": "https://github.com/slyngbaek", "followers_url": "https://api.github.com/users/slyngbaek/followers", "following_url": "https://api.github.com/users/slyngbaek/following{/other_user}", "gists_url": "https://api.github.com/users/slyngbaek/gists{/gist_id}", "starred_url": "https://api.github.com/users/slyngbaek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slyngbaek/subscriptions", "organizations_url": "https://api.github.com/users/slyngbaek/orgs", "repos_url": "https://api.github.com/users/slyngbaek/repos", "events_url": "https://api.github.com/users/slyngbaek/events{/privacy}", "received_events_url": "https://api.github.com/users/slyngbaek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e98aff109a1c4bda6a05f16981898425c302aa0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e98aff109a1c4bda6a05f16981898425c302aa0c", "html_url": "https://github.com/rust-lang/rust/commit/e98aff109a1c4bda6a05f16981898425c302aa0c"}], "stats": {"total": 122, "additions": 77, "deletions": 45}, "files": [{"sha": "330bdd1cbab0f470e04cec0046d369457310e4fb", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfb48df149bfa8a15b113b1a252598457a4ea392/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/cfb48df149bfa8a15b113b1a252598457a4ea392/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=cfb48df149bfa8a15b113b1a252598457a4ea392", "patch": "@@ -1028,7 +1028,6 @@ dependencies = [\n  \"ra_hir\",\n  \"ra_ide_db\",\n  \"ra_prof\",\n- \"ra_project_model\",\n  \"ra_syntax\",\n  \"ra_text_edit\",\n  \"rand\","}, {"sha": "7235c944c9c79ca623a5b84e5a5abaa629d5e0d8", "filename": "crates/ra_ide/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfb48df149bfa8a15b113b1a252598457a4ea392/crates%2Fra_ide%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/cfb48df149bfa8a15b113b1a252598457a4ea392/crates%2Fra_ide%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2FCargo.toml?ref=cfb48df149bfa8a15b113b1a252598457a4ea392", "patch": "@@ -21,7 +21,6 @@ rustc-hash = \"1.1.0\"\n rand = { version = \"0.7.3\", features = [\"small_rng\"] }\n \n ra_syntax = { path = \"../ra_syntax\" }\n-ra_project_model = { path = \"../ra_project_model\" }\n ra_text_edit = { path = \"../ra_text_edit\" }\n ra_db = { path = \"../ra_db\" }\n ra_ide_db = { path = \"../ra_ide_db\" }"}, {"sha": "8454a975b6560196b061e820c3520b0c43619f61", "filename": "crates/ra_ide/src/inlay_hints.rs", "status": "modified", "additions": 35, "deletions": 26, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/cfb48df149bfa8a15b113b1a252598457a4ea392/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfb48df149bfa8a15b113b1a252598457a4ea392/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs?ref=cfb48df149bfa8a15b113b1a252598457a4ea392", "patch": "@@ -3,15 +3,26 @@\n use hir::{Adt, HirDisplay, Semantics, Type};\n use ra_ide_db::RootDatabase;\n use ra_prof::profile;\n-use ra_project_model::{InlayHintDisplayType, InlayHintOptions};\n use ra_syntax::{\n     ast::{self, ArgListOwner, AstNode, TypeAscriptionOwner},\n     match_ast, SmolStr, TextRange,\n };\n \n use crate::{FileId, FunctionSignature};\n \n-#[derive(Debug, PartialEq, Eq)]\n+#[derive(Clone, Debug, PartialEq, Eq)]\n+pub struct InlayConfig {\n+    pub display_type: Vec<InlayKind>,\n+    pub max_length: Option<usize>,\n+}\n+\n+impl Default for InlayConfig {\n+    fn default() -> Self {\n+        Self { display_type: vec![InlayKind::TypeHint, InlayKind::ParameterHint], max_length: None }\n+    }\n+}\n+\n+#[derive(Clone, Debug, PartialEq, Eq)]\n pub enum InlayKind {\n     TypeHint,\n     ParameterHint,\n@@ -27,7 +38,7 @@ pub struct InlayHint {\n pub(crate) fn inlay_hints(\n     db: &RootDatabase,\n     file_id: FileId,\n-    inlay_hint_opts: &InlayHintOptions,\n+    inlay_hint_opts: &InlayConfig,\n ) -> Vec<InlayHint> {\n     let _p = profile(\"inlay_hints\");\n     let sema = Semantics::new(db);\n@@ -50,12 +61,11 @@ pub(crate) fn inlay_hints(\n fn get_param_name_hints(\n     acc: &mut Vec<InlayHint>,\n     sema: &Semantics<RootDatabase>,\n-    inlay_hint_opts: &InlayHintOptions,\n+    inlay_hint_opts: &InlayConfig,\n     expr: ast::Expr,\n ) -> Option<()> {\n-    match inlay_hint_opts.display_type {\n-        InlayHintDisplayType::Off | InlayHintDisplayType::TypeHints => return None,\n-        _ => {}\n+    if !inlay_hint_opts.display_type.contains(&InlayKind::ParameterHint) {\n+        return None;\n     }\n \n     let args = match &expr {\n@@ -91,12 +101,11 @@ fn get_param_name_hints(\n fn get_bind_pat_hints(\n     acc: &mut Vec<InlayHint>,\n     sema: &Semantics<RootDatabase>,\n-    inlay_hint_opts: &InlayHintOptions,\n+    inlay_hint_opts: &InlayConfig,\n     pat: ast::BindPat,\n ) -> Option<()> {\n-    match inlay_hint_opts.display_type {\n-        InlayHintDisplayType::Off | InlayHintDisplayType::ParameterHints => return None,\n-        _ => {}\n+    if !inlay_hint_opts.display_type.contains(&InlayKind::TypeHint) {\n+        return None;\n     }\n \n     let ty = sema.type_of_pat(&pat.clone().into())?;\n@@ -214,10 +223,10 @@ fn get_fn_signature(sema: &Semantics<RootDatabase>, expr: &ast::Expr) -> Option<\n \n #[cfg(test)]\n mod tests {\n+    use crate::inlay_hints::{InlayConfig, InlayKind};\n     use insta::assert_debug_snapshot;\n \n     use crate::mock_analysis::single_file;\n-    use ra_project_model::{InlayHintDisplayType, InlayHintOptions};\n \n     #[test]\n     fn param_hints_only() {\n@@ -228,7 +237,7 @@ mod tests {\n                 let _x = foo(4, 4);\n             }\"#,\n         );\n-        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintOptions{ display_type: InlayHintDisplayType::ParameterHints, max_length: None}).unwrap(), @r###\"\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayConfig{ display_type: vec![InlayKind::ParameterHint], max_length: None}).unwrap(), @r###\"\n         [\n             InlayHint {\n                 range: [106; 107),\n@@ -252,7 +261,7 @@ mod tests {\n                 let _x = foo(4, 4);\n             }\"#,\n         );\n-        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintOptions{ display_type: InlayHintDisplayType::Off, max_length: None}).unwrap(), @r###\"[]\"###);\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayConfig{ display_type: vec![], max_length: None}).unwrap(), @r###\"[]\"###);\n     }\n \n     #[test]\n@@ -264,7 +273,7 @@ mod tests {\n                 let _x = foo(4, 4);\n             }\"#,\n         );\n-        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintOptions{ display_type: InlayHintDisplayType::TypeHints, max_length: None}).unwrap(), @r###\"\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayConfig{ display_type: vec![InlayKind::TypeHint], max_length: None}).unwrap(), @r###\"\n         [\n             InlayHint {\n                 range: [97; 99),\n@@ -288,7 +297,7 @@ fn main() {\n }\"#,\n         );\n \n-        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintOptions::new(None)).unwrap(), @r###\"\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayConfig::default()).unwrap(), @r###\"\n         [\n             InlayHint {\n                 range: [69; 71),\n@@ -345,7 +354,7 @@ fn main() {\n }\"#,\n         );\n \n-        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintOptions::new(None)).unwrap(), @r###\"\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayConfig::default()).unwrap(), @r###\"\n         [\n             InlayHint {\n                 range: [193; 197),\n@@ -425,7 +434,7 @@ fn main() {\n }\"#,\n         );\n \n-        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintOptions::new(None)).unwrap(), @r###\"\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayConfig::default()).unwrap(), @r###\"\n         [\n             InlayHint {\n                 range: [21; 30),\n@@ -489,7 +498,7 @@ fn main() {\n }\"#,\n         );\n \n-        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintOptions::new(None)).unwrap(), @r###\"\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayConfig::default()).unwrap(), @r###\"\n         [\n             InlayHint {\n                 range: [21; 30),\n@@ -539,7 +548,7 @@ fn main() {\n }\"#,\n         );\n \n-        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintOptions::new(None)).unwrap(), @r###\"\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayConfig::default()).unwrap(), @r###\"\n         [\n             InlayHint {\n                 range: [188; 192),\n@@ -634,7 +643,7 @@ fn main() {\n }\"#,\n         );\n \n-        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintOptions::new(None)).unwrap(), @r###\"\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayConfig::default()).unwrap(), @r###\"\n         [\n             InlayHint {\n                 range: [188; 192),\n@@ -729,7 +738,7 @@ fn main() {\n }\"#,\n         );\n \n-        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintOptions::new(None)).unwrap(), @r###\"\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayConfig::default()).unwrap(), @r###\"\n         [\n             InlayHint {\n                 range: [252; 256),\n@@ -801,7 +810,7 @@ fn main() {\n }\"#,\n         );\n \n-        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintOptions::new(Some(8))).unwrap(), @r###\"\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayConfig { display_type: vec![InlayKind::TypeHint, InlayKind::ParameterHint], max_length: Some(8) }).unwrap(), @r###\"\n         [\n             InlayHint {\n                 range: [74; 75),\n@@ -889,7 +898,7 @@ fn main() {\n }\"#,\n         );\n \n-        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintOptions::new(None)).unwrap(), @r###\"\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayConfig::default()).unwrap(), @r###\"\n         [\n             InlayHint {\n                 range: [798; 809),\n@@ -1011,7 +1020,7 @@ fn main() {\n }\"#,\n         );\n \n-        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintOptions::new(Some(8))).unwrap(), @r###\"\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayConfig { display_type: vec![InlayKind::TypeHint, InlayKind::ParameterHint], max_length: Some(8) }).unwrap(), @r###\"\n         []\n         \"###\n         );\n@@ -1037,7 +1046,7 @@ fn main() {\n }\"#,\n         );\n \n-        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintOptions::new(Some(8))).unwrap(), @r###\"\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayConfig { display_type: vec![InlayKind::TypeHint, InlayKind::ParameterHint], max_length: Some(8) }).unwrap(), @r###\"\n         []\n         \"###\n         );"}, {"sha": "a3acfd22535c6f00583fad57b0a04385ebfb52ac", "filename": "crates/ra_ide/src/lib.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cfb48df149bfa8a15b113b1a252598457a4ea392/crates%2Fra_ide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfb48df149bfa8a15b113b1a252598457a4ea392/crates%2Fra_ide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Flib.rs?ref=cfb48df149bfa8a15b113b1a252598457a4ea392", "patch": "@@ -44,7 +44,6 @@ mod marks;\n #[cfg(test)]\n mod test_utils;\n \n-use ra_project_model::InlayHintOptions;\n use std::sync::Arc;\n \n use ra_cfg::CfgOptions;\n@@ -69,7 +68,7 @@ pub use crate::{\n     expand_macro::ExpandedMacro,\n     folding_ranges::{Fold, FoldKind},\n     hover::HoverResult,\n-    inlay_hints::{InlayHint, InlayKind},\n+    inlay_hints::{InlayConfig, InlayHint, InlayKind},\n     references::{Declaration, Reference, ReferenceAccess, ReferenceKind, ReferenceSearchResult},\n     runnables::{Runnable, RunnableKind, TestId},\n     source_change::{FileSystemEdit, SourceChange, SourceFileEdit},\n@@ -319,7 +318,7 @@ impl Analysis {\n     pub fn inlay_hints(\n         &self,\n         file_id: FileId,\n-        inlay_hint_opts: &InlayHintOptions,\n+        inlay_hint_opts: &InlayConfig,\n     ) -> Cancelable<Vec<InlayHint>> {\n         self.with_db(|db| inlay_hints::inlay_hints(db, file_id, inlay_hint_opts))\n     }"}, {"sha": "036c8719fcd4074b64331e7b70b4dcd13f4e26fc", "filename": "crates/ra_project_model/src/lib.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cfb48df149bfa8a15b113b1a252598457a4ea392/crates%2Fra_project_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfb48df149bfa8a15b113b1a252598457a4ea392/crates%2Fra_project_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Flib.rs?ref=cfb48df149bfa8a15b113b1a252598457a4ea392", "patch": "@@ -41,12 +41,6 @@ pub struct InlayHintOptions {\n     pub max_length: Option<usize>,\n }\n \n-impl InlayHintOptions {\n-    pub fn new(max_length: Option<usize>) -> Self {\n-        Self { display_type: InlayHintDisplayType::Full, max_length }\n-    }\n-}\n-\n impl Default for InlayHintOptions {\n     fn default() -> Self {\n         Self { display_type: InlayHintDisplayType::Full, max_length: None }"}, {"sha": "2f407723b90e56b54e88ca23289c6411659a3d22", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 31, "deletions": 2, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/cfb48df149bfa8a15b113b1a252598457a4ea392/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfb48df149bfa8a15b113b1a252598457a4ea392/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=cfb48df149bfa8a15b113b1a252598457a4ea392", "patch": "@@ -7,12 +7,40 @@\n //! configure the server itself, feature flags are passed into analysis, and\n //! tweak things like automatic insertion of `()` in completions.\n \n-use ra_project_model::InlayHintOptions;\n+use ra_ide::{InlayConfig, InlayKind};\n use rustc_hash::FxHashMap;\n \n use ra_project_model::CargoFeatures;\n use serde::{Deserialize, Deserializer};\n \n+#[derive(Deserialize)]\n+#[serde(remote = \"InlayKind\")]\n+pub enum InlayKindDef {\n+    TypeHint,\n+    ParameterHint,\n+}\n+\n+// Work-around until better serde support is added\n+// https://github.com/serde-rs/serde/issues/723#issuecomment-382501277\n+fn vec_inlay_kind<'de, D>(deserializer: D) -> Result<Vec<InlayKind>, D::Error>\n+where\n+    D: Deserializer<'de>,\n+{\n+    #[derive(Deserialize)]\n+    struct Wrapper(#[serde(with = \"InlayKindDef\")] InlayKind);\n+\n+    let v = Vec::deserialize(deserializer)?;\n+    Ok(v.into_iter().map(|Wrapper(a)| a).collect())\n+}\n+\n+#[derive(Deserialize)]\n+#[serde(remote = \"InlayConfig\")]\n+pub struct InlayConfigDef {\n+    #[serde(deserialize_with = \"vec_inlay_kind\")]\n+    pub display_type: Vec<InlayKind>,\n+    pub max_length: Option<usize>,\n+}\n+\n /// Client provided initialization options\n #[derive(Deserialize, Clone, Debug, PartialEq, Eq)]\n #[serde(rename_all = \"camelCase\", default)]\n@@ -31,7 +59,8 @@ pub struct ServerConfig {\n \n     pub lru_capacity: Option<usize>,\n \n-    pub inlay_hint_opts: InlayHintOptions,\n+    #[serde(with = \"InlayConfigDef\")]\n+    pub inlay_hint_opts: InlayConfig,\n \n     pub cargo_watch_enable: bool,\n     pub cargo_watch_args: Vec<String>,"}, {"sha": "729c384ace3b25123eb294aa3ca7cb1321c4bdb5", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfb48df149bfa8a15b113b1a252598457a4ea392/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfb48df149bfa8a15b113b1a252598457a4ea392/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=cfb48df149bfa8a15b113b1a252598457a4ea392", "patch": "@@ -177,7 +177,7 @@ pub fn main_loop(\n                     .and_then(|it| it.folding_range.as_ref())\n                     .and_then(|it| it.line_folding_only)\n                     .unwrap_or(false),\n-                inlay_hint_opts: config.inlay_hint_opts.clone(),\n+                inlay_hint_opts: config.inlay_hint_opts,\n                 cargo_watch: CheckOptions {\n                     enable: config.cargo_watch_enable,\n                     args: config.cargo_watch_args,"}, {"sha": "4f58bcb0a157e43e3c35b3bb7991f6808fe6d176", "filename": "crates/rust-analyzer/src/main_loop/handlers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfb48df149bfa8a15b113b1a252598457a4ea392/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfb48df149bfa8a15b113b1a252598457a4ea392/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=cfb48df149bfa8a15b113b1a252598457a4ea392", "patch": "@@ -997,7 +997,7 @@ pub fn handle_inlay_hints(\n     let analysis = world.analysis();\n     let line_index = analysis.file_line_index(file_id)?;\n     Ok(analysis\n-        .inlay_hints(file_id, world.options.max_inlay_hint_length)?\n+        .inlay_hints(file_id, &world.options.inlay_hint_opts)?\n         .into_iter()\n         .map(|api_type| InlayHint {\n             label: api_type.label.to_string(),"}, {"sha": "6eb1ea7d2797b6f285c8fad6ebc9d11597d9a541", "filename": "crates/rust-analyzer/src/world.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/cfb48df149bfa8a15b113b1a252598457a4ea392/crates%2Frust-analyzer%2Fsrc%2Fworld.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfb48df149bfa8a15b113b1a252598457a4ea392/crates%2Frust-analyzer%2Fsrc%2Fworld.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fworld.rs?ref=cfb48df149bfa8a15b113b1a252598457a4ea392", "patch": "@@ -13,9 +13,10 @@ use lsp_types::Url;\n use parking_lot::RwLock;\n use ra_cargo_watch::{url_from_path_with_drive_lowercasing, CheckOptions, CheckWatcher};\n use ra_ide::{\n-    Analysis, AnalysisChange, AnalysisHost, CrateGraph, FileId, LibraryData, SourceRootId,\n+    Analysis, AnalysisChange, AnalysisHost, CrateGraph, FileId, InlayConfig, LibraryData,\n+    SourceRootId,\n };\n-use ra_project_model::{get_rustc_cfg_options, InlayHintOptions, ProjectWorkspace};\n+use ra_project_model::{get_rustc_cfg_options, ProjectWorkspace};\n use ra_vfs::{LineEndings, RootEntry, Vfs, VfsChange, VfsFile, VfsRoot, VfsTask, Watch};\n use relative_path::RelativePathBuf;\n \n@@ -32,7 +33,7 @@ pub struct Options {\n     pub publish_decorations: bool,\n     pub supports_location_link: bool,\n     pub line_folding_only: bool,\n-    pub inlay_hint_opts: InlayHintOptions,\n+    pub inlay_hint_opts: InlayConfig,\n     pub rustfmt_args: Vec<String>,\n     pub cargo_watch: CheckOptions,\n }"}, {"sha": "b26bf10dae8aa87779734e8cb67271e304f22a96", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cfb48df149bfa8a15b113b1a252598457a4ea392/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/cfb48df149bfa8a15b113b1a252598457a4ea392/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=cfb48df149bfa8a15b113b1a252598457a4ea392", "patch": "@@ -27,7 +27,9 @@ export class Config {\n     private static readonly requiresReloadOpts = [\n         \"cargoFeatures\",\n         \"cargo-watch\",\n-        \"highlighting.semanticTokens\"\n+        \"highlighting.semanticTokens\",\n+        \"inlayHintOpts.maxLength\",\n+        \"inlayHintOpts.displayType\",\n     ]\n         .map(opt => `${Config.rootSection}.${opt}`);\n "}]}