{"sha": "6aaed5b08f54ed95b692d40733a551d925363319", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhYWVkNWIwOGY1NGVkOTViNjkyZDQwNzMzYTU1MWQ5MjUzNjMzMTk=", "commit": {"author": {"name": "David Alber", "email": "alber.david@gmail.com", "date": "2017-12-21T05:48:59Z"}, "committer": {"name": "David Alber", "email": "alber.david@gmail.com", "date": "2017-12-21T05:48:59Z"}, "message": "Adding --version option to cargo-fmt", "tree": {"sha": "39a4ba5fecb84c3179bb4668174460a62e5f4260", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39a4ba5fecb84c3179bb4668174460a62e5f4260"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6aaed5b08f54ed95b692d40733a551d925363319", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6aaed5b08f54ed95b692d40733a551d925363319", "html_url": "https://github.com/rust-lang/rust/commit/6aaed5b08f54ed95b692d40733a551d925363319", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6aaed5b08f54ed95b692d40733a551d925363319/comments", "author": {"login": "davidalber", "id": 933552, "node_id": "MDQ6VXNlcjkzMzU1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/933552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidalber", "html_url": "https://github.com/davidalber", "followers_url": "https://api.github.com/users/davidalber/followers", "following_url": "https://api.github.com/users/davidalber/following{/other_user}", "gists_url": "https://api.github.com/users/davidalber/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidalber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidalber/subscriptions", "organizations_url": "https://api.github.com/users/davidalber/orgs", "repos_url": "https://api.github.com/users/davidalber/repos", "events_url": "https://api.github.com/users/davidalber/events{/privacy}", "received_events_url": "https://api.github.com/users/davidalber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidalber", "id": 933552, "node_id": "MDQ6VXNlcjkzMzU1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/933552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidalber", "html_url": "https://github.com/davidalber", "followers_url": "https://api.github.com/users/davidalber/followers", "following_url": "https://api.github.com/users/davidalber/following{/other_user}", "gists_url": "https://api.github.com/users/davidalber/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidalber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidalber/subscriptions", "organizations_url": "https://api.github.com/users/davidalber/orgs", "repos_url": "https://api.github.com/users/davidalber/repos", "events_url": "https://api.github.com/users/davidalber/events{/privacy}", "received_events_url": "https://api.github.com/users/davidalber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8998c1d5b580bbff99a6d63d0477daeecec4a1ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/8998c1d5b580bbff99a6d63d0477daeecec4a1ac", "html_url": "https://github.com/rust-lang/rust/commit/8998c1d5b580bbff99a6d63d0477daeecec4a1ac"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "15d0bbe950cb0222187fd597ad96287789151cdf", "filename": "src/bin/cargo-fmt.rs", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/6aaed5b08f54ed95b692d40733a551d925363319/src%2Fbin%2Fcargo-fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6aaed5b08f54ed95b692d40733a551d925363319/src%2Fbin%2Fcargo-fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-fmt.rs?ref=6aaed5b08f54ed95b692d40733a551d925363319", "patch": "@@ -49,6 +49,7 @@ fn execute() -> i32 {\n         \"specify package to format (only usable in workspaces)\",\n         \"<package>\",\n     );\n+    opts.optflag(\"\", \"version\", \"print rustfmt version and exit\");\n     opts.optflag(\"\", \"all\", \"format all packages (only usable in workspaces)\");\n \n     // If there is any invalid argument passed to `cargo fmt`, return without formatting.\n@@ -87,6 +88,10 @@ fn execute() -> i32 {\n         return success;\n     }\n \n+    if matches.opt_present(\"version\") {\n+        return handle_command_status(get_version(), &opts);\n+    }\n+\n     let strategy = CargoFmtStrategy::from_matches(&matches);\n \n     match format_crate(verbosity, &strategy) {\n@@ -130,6 +135,40 @@ pub enum Verbosity {\n     Quiet,\n }\n \n+fn handle_command_status(status: Result<ExitStatus, io::Error>, opts: &getopts::Options) -> i32 {\n+    let success = 0;\n+    let failure = 1;\n+\n+    match status {\n+        Err(e) => {\n+            print_usage_to_stderr(&opts, &e.to_string());\n+            failure\n+        }\n+        Ok(status) => {\n+            if status.success() {\n+                success\n+            } else {\n+                status.code().unwrap_or(failure)\n+            }\n+        }\n+    }\n+}\n+\n+fn get_version() -> Result<ExitStatus, io::Error> {\n+    let mut command = Command::new(\"rustfmt\")\n+        .args(vec![\"--version\"])\n+        .spawn()\n+        .map_err(|e| match e.kind() {\n+            io::ErrorKind::NotFound => io::Error::new(\n+                io::ErrorKind::Other,\n+                \"Could not run rustfmt, please make sure it is in your PATH.\",\n+            ),\n+            _ => e,\n+        })?;\n+\n+    command.wait()\n+}\n+\n fn format_crate(\n     verbosity: Verbosity,\n     strategy: &CargoFmtStrategy,"}]}