{"sha": "95da53f7fd7434f2cb13b069d4e26b961879cf65", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1ZGE1M2Y3ZmQ3NDM0ZjJjYjEzYjA2OWQ0ZTI2Yjk2MTg3OWNmNjU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-06-28T15:30:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-28T15:30:29Z"}, "message": "Rollup merge of #73800 - nikic:hash_i, r=kennytm\n\nForward Hash::write_iN to Hash::write_uN\n\nThe `Hasher::write_iN()` methods should forward to `Hasher::write_uN()`, because some Hasher implementations implement only the `write_uN()` variants, with the expectation that `write_iN()` will use the same implementation. Most notably, this is the case for the [FxHasher](https://github.com/rust-lang/rustc-hash/blob/5e09ea0a1c7ab7e4f9e27771f5a0e5a36c58d1bb/src/lib.rs#L111) used by rustc itself.\n\nThis used to be the case previously, but was broken in #59982. As the PR description makes no mention of this particular change, I assume it was unintentional.\n\nIn a local test, this mitigates the regression from #73526 on at least one test-case (cc @cuviper), because we're no longer at the mercy of `FxHasher::write()` getting inlined to get reasonable performance.", "tree": {"sha": "4449e0819fbcf482324adfa50a968ff7a39e0d0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4449e0819fbcf482324adfa50a968ff7a39e0d0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95da53f7fd7434f2cb13b069d4e26b961879cf65", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe+LeVCRBK7hj4Ov3rIwAAdHIIADhYl78zRqDjD1HAJJlKYK5O\nOJCN6aJShSWjK3Q2XlfcpnnLXPPeEtWTaTBu0SbseaBE96/AXOovp9A+jMMOsX/j\nHlRAFieU8ON6Fzj1LnuYMALnFFnu9Al7Za52Aq7XqJekRtK/dAlfTSDRcAUd8Bwz\nEu/A3NfvMtObVIPPJOyC7z7ZMjUcIwNUP7Ku0Ul2vIdbpGDdR3uVGE4OR5qXNKWP\nFe++RIbngOFuaR2vB2wpsk5z0t9Wfw4C8wnOG5BVi/f8uYulduRfiJdR2hY7aJ/5\np8VQVjp8YAi+/LRqjV6uwX1f/W5FQZAN20JTLOdgb6ZiKyA5EyV6sfmTvDZt1kw=\n=BhmV\n-----END PGP SIGNATURE-----\n", "payload": "tree 4449e0819fbcf482324adfa50a968ff7a39e0d0c\nparent 2c1b7329611f0310ed18dd9bb6dea99cd42302c1\nparent 4c14f9d110478edcb2d0c3e1cda73937fc3b3d6e\nauthor Manish Goregaokar <manishsmail@gmail.com> 1593358229 -0700\ncommitter GitHub <noreply@github.com> 1593358229 -0700\n\nRollup merge of #73800 - nikic:hash_i, r=kennytm\n\nForward Hash::write_iN to Hash::write_uN\n\nThe `Hasher::write_iN()` methods should forward to `Hasher::write_uN()`, because some Hasher implementations implement only the `write_uN()` variants, with the expectation that `write_iN()` will use the same implementation. Most notably, this is the case for the [FxHasher](https://github.com/rust-lang/rustc-hash/blob/5e09ea0a1c7ab7e4f9e27771f5a0e5a36c58d1bb/src/lib.rs#L111) used by rustc itself.\n\nThis used to be the case previously, but was broken in #59982. As the PR description makes no mention of this particular change, I assume it was unintentional.\n\nIn a local test, this mitigates the regression from #73526 on at least one test-case (cc @cuviper), because we're no longer at the mercy of `FxHasher::write()` getting inlined to get reasonable performance.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95da53f7fd7434f2cb13b069d4e26b961879cf65", "html_url": "https://github.com/rust-lang/rust/commit/95da53f7fd7434f2cb13b069d4e26b961879cf65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95da53f7fd7434f2cb13b069d4e26b961879cf65/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c1b7329611f0310ed18dd9bb6dea99cd42302c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c1b7329611f0310ed18dd9bb6dea99cd42302c1", "html_url": "https://github.com/rust-lang/rust/commit/2c1b7329611f0310ed18dd9bb6dea99cd42302c1"}, {"sha": "4c14f9d110478edcb2d0c3e1cda73937fc3b3d6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c14f9d110478edcb2d0c3e1cda73937fc3b3d6e", "html_url": "https://github.com/rust-lang/rust/commit/4c14f9d110478edcb2d0c3e1cda73937fc3b3d6e"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "6abe19dc155d1d96bedc14946942f6604dacff51", "filename": "src/libcore/hash/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/95da53f7fd7434f2cb13b069d4e26b961879cf65/src%2Flibcore%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95da53f7fd7434f2cb13b069d4e26b961879cf65/src%2Flibcore%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhash%2Fmod.rs?ref=95da53f7fd7434f2cb13b069d4e26b961879cf65", "patch": "@@ -333,31 +333,31 @@ pub trait Hasher {\n     #[inline]\n     #[stable(feature = \"hasher_write\", since = \"1.3.0\")]\n     fn write_i16(&mut self, i: i16) {\n-        self.write(&i.to_ne_bytes())\n+        self.write_u16(i as u16)\n     }\n     /// Writes a single `i32` into this hasher.\n     #[inline]\n     #[stable(feature = \"hasher_write\", since = \"1.3.0\")]\n     fn write_i32(&mut self, i: i32) {\n-        self.write(&i.to_ne_bytes())\n+        self.write_u32(i as u32)\n     }\n     /// Writes a single `i64` into this hasher.\n     #[inline]\n     #[stable(feature = \"hasher_write\", since = \"1.3.0\")]\n     fn write_i64(&mut self, i: i64) {\n-        self.write(&i.to_ne_bytes())\n+        self.write_u64(i as u64)\n     }\n     /// Writes a single `i128` into this hasher.\n     #[inline]\n     #[stable(feature = \"i128\", since = \"1.26.0\")]\n     fn write_i128(&mut self, i: i128) {\n-        self.write(&i.to_ne_bytes())\n+        self.write_u128(i as u128)\n     }\n     /// Writes a single `isize` into this hasher.\n     #[inline]\n     #[stable(feature = \"hasher_write\", since = \"1.3.0\")]\n     fn write_isize(&mut self, i: isize) {\n-        self.write(&i.to_ne_bytes())\n+        self.write_usize(i as usize)\n     }\n }\n "}]}