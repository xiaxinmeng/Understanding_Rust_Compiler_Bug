{"sha": "51742be6d8c828c956f662a8e9a472cd31886b4a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxNzQyYmU2ZDhjODI4Yzk1NmY2NjJhOGU5YTQ3MmNkMzE4ODZiNGE=", "commit": {"author": {"name": "Dan Aloni", "email": "alonid@gmail.com", "date": "2020-09-03T10:42:24Z"}, "committer": {"name": "Dan Aloni", "email": "alonid@gmail.com", "date": "2020-09-03T11:09:50Z"}, "message": "specialization_graph: avoid trimmed paths for OverlapError", "tree": {"sha": "599aacc5a39a5fc3ac9f81a27033df7cc5ee37f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/599aacc5a39a5fc3ac9f81a27033df7cc5ee37f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51742be6d8c828c956f662a8e9a472cd31886b4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51742be6d8c828c956f662a8e9a472cd31886b4a", "html_url": "https://github.com/rust-lang/rust/commit/51742be6d8c828c956f662a8e9a472cd31886b4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51742be6d8c828c956f662a8e9a472cd31886b4a/comments", "author": {"login": "da-x", "id": 321273, "node_id": "MDQ6VXNlcjMyMTI3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/321273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/da-x", "html_url": "https://github.com/da-x", "followers_url": "https://api.github.com/users/da-x/followers", "following_url": "https://api.github.com/users/da-x/following{/other_user}", "gists_url": "https://api.github.com/users/da-x/gists{/gist_id}", "starred_url": "https://api.github.com/users/da-x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/da-x/subscriptions", "organizations_url": "https://api.github.com/users/da-x/orgs", "repos_url": "https://api.github.com/users/da-x/repos", "events_url": "https://api.github.com/users/da-x/events{/privacy}", "received_events_url": "https://api.github.com/users/da-x/received_events", "type": "User", "site_admin": false}, "committer": {"login": "da-x", "id": 321273, "node_id": "MDQ6VXNlcjMyMTI3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/321273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/da-x", "html_url": "https://github.com/da-x", "followers_url": "https://api.github.com/users/da-x/followers", "following_url": "https://api.github.com/users/da-x/following{/other_user}", "gists_url": "https://api.github.com/users/da-x/gists{/gist_id}", "starred_url": "https://api.github.com/users/da-x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/da-x/subscriptions", "organizations_url": "https://api.github.com/users/da-x/orgs", "repos_url": "https://api.github.com/users/da-x/repos", "events_url": "https://api.github.com/users/da-x/events{/privacy}", "received_events_url": "https://api.github.com/users/da-x/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5a61319da34e931072f2ffe3d12e530034c8c07", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5a61319da34e931072f2ffe3d12e530034c8c07", "html_url": "https://github.com/rust-lang/rust/commit/c5a61319da34e931072f2ffe3d12e530034c8c07"}], "stats": {"total": 148, "additions": 75, "deletions": 73}, "files": [{"sha": "c8bcab6efd7ca4cac621368a8e59036b8a0c799a", "filename": "compiler/rustc_trait_selection/src/traits/specialize/specialization_graph.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fspecialization_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fspecialization_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fspecialization_graph.rs?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -3,6 +3,7 @@ use super::OverlapError;\n use crate::traits;\n use rustc_hir::def_id::DefId;\n use rustc_middle::ty::fast_reject::{self, SimplifiedType};\n+use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::{self, TyCtxt, TypeFoldable};\n \n pub use rustc_middle::traits::specialization_graph::*;\n@@ -102,7 +103,8 @@ impl ChildrenExt for Children {\n                 let trait_ref = overlap.impl_header.trait_ref.unwrap();\n                 let self_ty = trait_ref.self_ty();\n \n-                OverlapError {\n+                // FIXME: should postpone string formatting until we decide to actually emit.\n+                with_no_trimmed_paths(|| OverlapError {\n                     with_impl: possible_sibling,\n                     trait_desc: trait_ref.print_only_trait_path().to_string(),\n                     // Only report the `Self` type if it has at least\n@@ -115,7 +117,7 @@ impl ChildrenExt for Children {\n                     },\n                     intercrate_ambiguity_causes: overlap.intercrate_ambiguity_causes,\n                     involves_placeholder: overlap.involves_placeholder,\n-                }\n+                })\n             };\n \n             let report_overlap_error = |overlap: traits::coherence::OverlapResult<'_>,"}, {"sha": "a2008f04265dcb475292d3e7f3b7ce8bfbfcc489", "filename": "src/test/ui/coherence/coherence-blanket-conflicts-with-specific-cross-crate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-blanket-conflicts-with-specific-cross-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-blanket-conflicts-with-specific-cross-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-blanket-conflicts-with-specific-cross-crate.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `GoMut` for type `MyThingy`:\n+error[E0119]: conflicting implementations of trait `go_trait::GoMut` for type `MyThingy`:\n   --> $DIR/coherence-blanket-conflicts-with-specific-cross-crate.rs:15:1\n    |\n LL | impl GoMut for MyThingy {"}, {"sha": "4d9f815c7958184e4d4c2440ea400446fc20a401", "filename": "src/test/ui/coherence/coherence-conflicting-negative-trait-impl.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-conflicting-negative-trait-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-conflicting-negative-trait-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-conflicting-negative-trait-impl.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,4 +1,4 @@\n-error[E0751]: found both positive and negative implementation of trait `Send` for type `TestType<_>`:\n+error[E0751]: found both positive and negative implementation of trait `std::marker::Send` for type `TestType<_>`:\n   --> $DIR/coherence-conflicting-negative-trait-impl.rs:11:1\n    |\n LL | unsafe impl<T: MyTrait + 'static> Send for TestType<T> {}\n@@ -7,7 +7,7 @@ LL |\n LL | impl<T: MyTrait> !Send for TestType<T> {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ negative implementation here\n \n-error[E0119]: conflicting implementations of trait `Send` for type `TestType<_>`:\n+error[E0119]: conflicting implementations of trait `std::marker::Send` for type `TestType<_>`:\n   --> $DIR/coherence-conflicting-negative-trait-impl.rs:13:1\n    |\n LL | unsafe impl<T: MyTrait + 'static> Send for TestType<T> {}"}, {"sha": "5381053979f2686b37740cff839e7de0d2b48067", "filename": "src/test/ui/coherence/coherence-cross-crate-conflict.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cross-crate-conflict.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cross-crate-conflict.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cross-crate-conflict.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `Foo` for type `isize`:\n+error[E0119]: conflicting implementations of trait `trait_impl_conflict::Foo` for type `isize`:\n   --> $DIR/coherence-cross-crate-conflict.rs:9:1\n    |\n LL | impl<A> Foo for A {"}, {"sha": "8cc24f099e382c065ad6fdb34cd3f5376cfda82c", "filename": "src/test/ui/coherence/coherence-impls-copy.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-copy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-copy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-copy.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `Copy` for type `i32`:\n+error[E0119]: conflicting implementations of trait `std::marker::Copy` for type `i32`:\n   --> $DIR/coherence-impls-copy.rs:5:1\n    |\n LL | impl Copy for i32 {}\n@@ -7,7 +7,7 @@ LL | impl Copy for i32 {}\n    = note: conflicting implementation in crate `core`:\n            - impl Copy for i32;\n \n-error[E0119]: conflicting implementations of trait `Copy` for type `&NotSync`:\n+error[E0119]: conflicting implementations of trait `std::marker::Copy` for type `&NotSync`:\n   --> $DIR/coherence-impls-copy.rs:29:1\n    |\n LL | impl Copy for &'static NotSync {}\n@@ -17,7 +17,7 @@ LL | impl Copy for &'static NotSync {}\n            - impl<T> Copy for &T\n              where T: ?Sized;\n \n-error[E0119]: conflicting implementations of trait `Copy` for type `&[NotSync]`:\n+error[E0119]: conflicting implementations of trait `std::marker::Copy` for type `&[NotSync]`:\n   --> $DIR/coherence-impls-copy.rs:34:1\n    |\n LL | impl Copy for &'static [NotSync] {}"}, {"sha": "edca31b5daee97bce47a460c910dd64e3e48df2c", "filename": "src/test/ui/coherence/coherence-impls-send.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-send.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-send.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-send.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `Send` for type `&[NotSync]`:\n+error[E0119]: conflicting implementations of trait `std::marker::Send` for type `&[NotSync]`:\n   --> $DIR/coherence-impls-send.rs:25:1\n    |\n LL | unsafe impl Send for &'static [NotSync] {}"}, {"sha": "fe4c5cf3490dd2557c2cdbb12baa9b94adb39c3f", "filename": "src/test/ui/coherence/coherence-overlap-issue-23516.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-issue-23516.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-issue-23516.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-issue-23516.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,10 +1,10 @@\n-error[E0119]: conflicting implementations of trait `Sweet` for type `Box<_>`:\n+error[E0119]: conflicting implementations of trait `Sweet` for type `std::boxed::Box<_>`:\n   --> $DIR/coherence-overlap-issue-23516.rs:8:1\n    |\n LL | impl<T:Sugar> Sweet for T { }\n    | ------------------------- first implementation here\n LL | impl<U:Sugar> Sweet for Box<U> { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `Box<_>`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `std::boxed::Box<_>`\n    |\n    = note: downstream crates may implement trait `Sugar` for type `std::boxed::Box<_>`\n "}, {"sha": "c5c9b0ac33c2a3372385d6d2e9866fc9ee38c280", "filename": "src/test/ui/coherence/coherence-projection-conflict-ty-param.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-projection-conflict-ty-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-projection-conflict-ty-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-projection-conflict-ty-param.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,11 +1,11 @@\n-error[E0119]: conflicting implementations of trait `Foo<_>` for type `Option<_>`:\n+error[E0119]: conflicting implementations of trait `Foo<_>` for type `std::option::Option<_>`:\n   --> $DIR/coherence-projection-conflict-ty-param.rs:10:1\n    |\n LL | impl <P, T: Foo<P>> Foo<P> for Option<T> {}\n    | ---------------------------------------- first implementation here\n LL | \n LL | impl<T, U> Foo<T> for Option<U> { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `Option<_>`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `std::option::Option<_>`\n \n error: aborting due to previous error\n "}, {"sha": "c77483bb847f5b5df4b395da95ad5574e172a2d7", "filename": "src/test/ui/coherence/coherence-wasm-bindgen.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-wasm-bindgen.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-wasm-bindgen.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-wasm-bindgen.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,4 +1,4 @@\n-error: conflicting implementations of trait `IntoWasmAbi` for type `&dyn Fn(&_) -> _`:\n+error: conflicting implementations of trait `IntoWasmAbi` for type `&dyn std::ops::Fn(&_) -> _`:\n   --> $DIR/coherence-wasm-bindgen.rs:28:1\n    |\n LL | / impl<'a, 'b, A, R> IntoWasmAbi for &'a (dyn Fn(A) -> R + 'b)\n@@ -16,7 +16,7 @@ LL | |     R: ReturnWasmAbi,\n ...  |\n LL | |\n LL | | }\n-   | |_^ conflicting implementation for `&dyn Fn(&_) -> _`\n+   | |_^ conflicting implementation for `&dyn std::ops::Fn(&_) -> _`\n    |\n note: the lint level is defined here\n   --> $DIR/coherence-wasm-bindgen.rs:10:9"}, {"sha": "cf6c6fb8c7a9dac76d8a3553d07c5fc378ac7b17", "filename": "src/test/ui/coherence/coherence_copy_like_err_fundamental_struct_tuple.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_fundamental_struct_tuple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_fundamental_struct_tuple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_fundamental_struct_tuple.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,11 +1,11 @@\n-error[E0119]: conflicting implementations of trait `MyTrait` for type `MyFundamentalStruct<(MyType,)>`:\n+error[E0119]: conflicting implementations of trait `MyTrait` for type `lib::MyFundamentalStruct<(MyType,)>`:\n   --> $DIR/coherence_copy_like_err_fundamental_struct_tuple.rs:16:1\n    |\n LL | impl<T: lib::MyCopy> MyTrait for T { }\n    | ---------------------------------- first implementation here\n ...\n LL | impl MyTrait for lib::MyFundamentalStruct<(MyType,)> { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `MyFundamentalStruct<(MyType,)>`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `lib::MyFundamentalStruct<(MyType,)>`\n    |\n    = note: upstream crates may add a new impl of trait `lib::MyCopy` for type `lib::MyFundamentalStruct<(MyType,)>` in future versions\n "}, {"sha": "cf79e851bf4ab21ec454e06bf2ccf08b2cf0241f", "filename": "src/test/ui/coherence/coherence_copy_like_err_struct.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_struct.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,11 +1,11 @@\n-error[E0119]: conflicting implementations of trait `MyTrait` for type `MyStruct<MyType>`:\n+error[E0119]: conflicting implementations of trait `MyTrait` for type `lib::MyStruct<MyType>`:\n   --> $DIR/coherence_copy_like_err_struct.rs:19:1\n    |\n LL | impl<T: lib::MyCopy> MyTrait for T { }\n    | ---------------------------------- first implementation here\n ...\n LL | impl MyTrait for lib::MyStruct<MyType> { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `MyStruct<MyType>`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `lib::MyStruct<MyType>`\n    |\n    = note: upstream crates may add a new impl of trait `lib::MyCopy` for type `lib::MyStruct<MyType>` in future versions\n "}, {"sha": "d617d8129248a77edb6b33140d26056508a0d581", "filename": "src/test/ui/error-codes/e0119/complex-impl.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fcomplex-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fcomplex-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fcomplex-impl.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `External` for type `(Q, M<'_, '_, '_, Box<_>, _, _>)`:\n+error[E0119]: conflicting implementations of trait `complex_impl_support::External` for type `(Q, complex_impl_support::M<'_, '_, '_, std::boxed::Box<_>, _, _>)`:\n   --> $DIR/complex-impl.rs:9:1\n    |\n LL | impl<R> External for (Q, R) {}"}, {"sha": "4b6b4430f3238f0208261a3a811c24fb70b0ec65", "filename": "src/test/ui/error-codes/e0119/conflict-with-std.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fconflict-with-std.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fconflict-with-std.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fconflict-with-std.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `AsRef<Q>` for type `Box<Q>`:\n+error[E0119]: conflicting implementations of trait `std::convert::AsRef<Q>` for type `std::boxed::Box<Q>`:\n   --> $DIR/conflict-with-std.rs:5:1\n    |\n LL | impl AsRef<Q> for Box<Q> {\n@@ -8,7 +8,7 @@ LL | impl AsRef<Q> for Box<Q> {\n            - impl<T> AsRef<T> for Box<T>\n              where T: ?Sized;\n \n-error[E0119]: conflicting implementations of trait `From<S>` for type `S`:\n+error[E0119]: conflicting implementations of trait `std::convert::From<S>` for type `S`:\n   --> $DIR/conflict-with-std.rs:12:1\n    |\n LL | impl From<S> for S {\n@@ -17,7 +17,7 @@ LL | impl From<S> for S {\n    = note: conflicting implementation in crate `core`:\n            - impl<T> From<T> for T;\n \n-error[E0119]: conflicting implementations of trait `TryFrom<X>` for type `X`:\n+error[E0119]: conflicting implementations of trait `std::convert::TryFrom<X>` for type `X`:\n   --> $DIR/conflict-with-std.rs:19:1\n    |\n LL | impl TryFrom<X> for X {"}, {"sha": "912a80fec75510bf57c1db13363b8adc56abe9d7", "filename": "src/test/ui/error-codes/e0119/issue-23563.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fissue-23563.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fissue-23563.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fissue-23563.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `LolFrom<&[_]>` for type `LocalType<_>`:\n+error[E0119]: conflicting implementations of trait `a::LolFrom<&[_]>` for type `LocalType<_>`:\n   --> $DIR/issue-23563.rs:13:1\n    |\n LL | impl<'a, T> LolFrom<&'a [T]> for LocalType<T> {"}, {"sha": "ea74c9b21bd4a6f5d6866b49c27593cd82263886", "filename": "src/test/ui/error-codes/e0119/issue-27403.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fissue-27403.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fissue-27403.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fissue-27403.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `Into<_>` for type `GenX<_>`:\n+error[E0119]: conflicting implementations of trait `std::convert::Into<_>` for type `GenX<_>`:\n   --> $DIR/issue-27403.rs:5:1\n    |\n LL | impl<S> Into<S> for GenX<S> {"}, {"sha": "c22cc65c87fce6a1e5959b6827eac084750e3955", "filename": "src/test/ui/error-codes/e0119/issue-28981.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fissue-28981.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fissue-28981.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fissue-28981.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `Deref` for type `&_`:\n+error[E0119]: conflicting implementations of trait `std::ops::Deref` for type `&_`:\n   --> $DIR/issue-28981.rs:5:1\n    |\n LL | impl<Foo> Deref for Foo { }"}, {"sha": "a9fbd0fee4981047da3389f68bd09d19c40aa834", "filename": "src/test/ui/error-codes/e0119/so-37347311.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fso-37347311.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fso-37347311.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fso-37347311.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `From<MyError<_>>` for type `MyError<_>`:\n+error[E0119]: conflicting implementations of trait `std::convert::From<MyError<_>>` for type `MyError<_>`:\n   --> $DIR/so-37347311.rs:11:1\n    |\n LL | impl<S: Storage> From<S::Error> for MyError<S> {"}, {"sha": "7729b9d240d28dfda41d204289ac2757f52eeb67", "filename": "src/test/ui/issues/issue-28568.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fissues%2Fissue-28568.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fissues%2Fissue-28568.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28568.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `Drop` for type `MyStruct`:\n+error[E0119]: conflicting implementations of trait `std::ops::Drop` for type `MyStruct`:\n   --> $DIR/issue-28568.rs:7:1\n    |\n LL | impl Drop for MyStruct {"}, {"sha": "ae65701ecb52ab96683b5baf458b46df79a97618", "filename": "src/test/ui/issues/issue-33140-hack-boundaries.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fissues%2Fissue-33140-hack-boundaries.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fissues%2Fissue-33140-hack-boundaries.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-33140-hack-boundaries.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,34 +1,34 @@\n-error[E0119]: conflicting implementations of trait `Trait1` for type `(dyn Send + 'static)`:\n+error[E0119]: conflicting implementations of trait `Trait1` for type `(dyn std::marker::Send + 'static)`:\n   --> $DIR/issue-33140-hack-boundaries.rs:18:1\n    |\n LL | impl Trait1 for dyn Send {}\n    | ------------------------ first implementation here\n LL | impl Trait1 for dyn Send {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn Send + 'static)`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + 'static)`\n \n-error[E0751]: found both positive and negative implementation of trait `Trait2` for type `(dyn Send + 'static)`:\n+error[E0751]: found both positive and negative implementation of trait `Trait2` for type `(dyn std::marker::Send + 'static)`:\n   --> $DIR/issue-33140-hack-boundaries.rs:25:1\n    |\n LL | impl Trait2 for dyn Send {}\n    | ------------------------ positive implementation here\n LL | impl !Trait2 for dyn Send {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^ negative implementation here\n \n-error[E0119]: conflicting implementations of trait `Trait3<(dyn Sync + 'static)>` for type `(dyn Send + 'static)`:\n+error[E0119]: conflicting implementations of trait `Trait3<(dyn std::marker::Sync + 'static)>` for type `(dyn std::marker::Send + 'static)`:\n   --> $DIR/issue-33140-hack-boundaries.rs:32:1\n    |\n LL | impl Trait3<dyn Sync> for dyn Send {}\n    | ---------------------------------- first implementation here\n LL | impl Trait3<dyn Sync> for dyn Send {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn Send + 'static)`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + 'static)`\n \n-error[E0119]: conflicting implementations of trait `Trait4a` for type `(dyn Send + 'static)`:\n+error[E0119]: conflicting implementations of trait `Trait4a` for type `(dyn std::marker::Send + 'static)`:\n   --> $DIR/issue-33140-hack-boundaries.rs:39:1\n    |\n LL | impl<T: ?Sized> Trait4a for T {}\n    | ----------------------------- first implementation here\n LL | impl Trait4a for dyn Send {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn Send + 'static)`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + 'static)`\n \n error[E0119]: conflicting implementations of trait `Trait4b` for type `()`:\n   --> $DIR/issue-33140-hack-boundaries.rs:46:1\n@@ -38,29 +38,29 @@ LL | impl Trait4b for () {}\n LL | impl Trait4b for () {}\n    | ^^^^^^^^^^^^^^^^^^^ conflicting implementation for `()`\n \n-error[E0119]: conflicting implementations of trait `Trait4c` for type `(dyn Trait1 + Send + 'static)`:\n+error[E0119]: conflicting implementations of trait `Trait4c` for type `(dyn Trait1 + std::marker::Send + 'static)`:\n   --> $DIR/issue-33140-hack-boundaries.rs:53:1\n    |\n LL | impl Trait4c for dyn Trait1 + Send {}\n    | ---------------------------------- first implementation here\n LL | impl Trait4c for dyn Trait1 + Send {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn Trait1 + Send + 'static)`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn Trait1 + std::marker::Send + 'static)`\n \n-error[E0119]: conflicting implementations of trait `Trait4d` for type `dyn Send`:\n+error[E0119]: conflicting implementations of trait `Trait4d` for type `dyn std::marker::Send`:\n   --> $DIR/issue-33140-hack-boundaries.rs:60:1\n    |\n LL | impl<'a> Trait4d for dyn Send + 'a {}\n    | ---------------------------------- first implementation here\n LL | impl<'a> Trait4d for dyn Send + 'a {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `dyn Send`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `dyn std::marker::Send`\n \n-error[E0119]: conflicting implementations of trait `Trait5` for type `(dyn Send + 'static)`:\n+error[E0119]: conflicting implementations of trait `Trait5` for type `(dyn std::marker::Send + 'static)`:\n   --> $DIR/issue-33140-hack-boundaries.rs:67:1\n    |\n LL | impl Trait5 for dyn Send {}\n    | ------------------------ first implementation here\n LL | impl Trait5 for dyn Send where u32: Copy {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn Send + 'static)`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + 'static)`\n \n error: aborting due to 8 previous errors\n "}, {"sha": "781decb5ae2813cc6b2dd1eef21853537bf4b834", "filename": "src/test/ui/issues/issue-33140-traitobject-crate.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fissues%2Fissue-33140-traitobject-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fissues%2Fissue-33140-traitobject-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-33140-traitobject-crate.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,10 +1,10 @@\n-warning: conflicting implementations of trait `Trait` for type `(dyn Send + Sync + 'static)`: (E0119)\n+warning: conflicting implementations of trait `Trait` for type `(dyn std::marker::Send + std::marker::Sync + 'static)`: (E0119)\n   --> $DIR/issue-33140-traitobject-crate.rs:85:1\n    |\n LL | unsafe impl Trait for dyn (::std::marker::Send) + Sync { }\n    | ------------------------------------------------------ first implementation here\n LL | unsafe impl Trait for dyn (::std::marker::Send) + Send + Sync { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn Send + Sync + 'static)`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + std::marker::Sync + 'static)`\n    |\n note: the lint level is defined here\n   --> $DIR/issue-33140-traitobject-crate.rs:3:9\n@@ -14,26 +14,26 @@ LL | #![warn(order_dependent_trait_objects)]\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>\n \n-warning: conflicting implementations of trait `Trait` for type `(dyn Send + Sync + 'static)`: (E0119)\n+warning: conflicting implementations of trait `Trait` for type `(dyn std::marker::Send + std::marker::Sync + 'static)`: (E0119)\n   --> $DIR/issue-33140-traitobject-crate.rs:88:1\n    |\n LL | unsafe impl Trait for dyn (::std::marker::Send) + Send + Sync { }\n    | ------------------------------------------------------------- first implementation here\n ...\n LL | unsafe impl Trait for dyn (::std::marker::Sync) + Send { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn Send + Sync + 'static)`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + std::marker::Sync + 'static)`\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>\n \n-warning: conflicting implementations of trait `Trait` for type `(dyn Send + Sync + 'static)`: (E0119)\n+warning: conflicting implementations of trait `Trait` for type `(dyn std::marker::Send + std::marker::Sync + 'static)`: (E0119)\n   --> $DIR/issue-33140-traitobject-crate.rs:92:1\n    |\n LL | unsafe impl Trait for dyn (::std::marker::Sync) + Send { }\n    | ------------------------------------------------------ first implementation here\n ...\n LL | unsafe impl Trait for dyn (::std::marker::Sync) + Send + Sync { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn Send + Sync + 'static)`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + std::marker::Sync + 'static)`\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>"}, {"sha": "9a900d2fc9404b108d038512d9691a11c459b5e3", "filename": "src/test/ui/issues/issue-33140.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fissues%2Fissue-33140.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fissues%2Fissue-33140.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-33140.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,20 +1,20 @@\n-error[E0119]: conflicting implementations of trait `Trait` for type `(dyn Send + Sync + 'static)`:\n+error[E0119]: conflicting implementations of trait `Trait` for type `(dyn std::marker::Send + std::marker::Sync + 'static)`:\n   --> $DIR/issue-33140.rs:9:1\n    |\n LL | impl Trait for dyn Send + Sync {\n    | ------------------------------ first implementation here\n ...\n LL | impl Trait for dyn Sync + Send {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn Send + Sync + 'static)`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + std::marker::Sync + 'static)`\n \n-error[E0119]: conflicting implementations of trait `Trait2` for type `(dyn Send + Sync + 'static)`:\n+error[E0119]: conflicting implementations of trait `Trait2` for type `(dyn std::marker::Send + std::marker::Sync + 'static)`:\n   --> $DIR/issue-33140.rs:22:1\n    |\n LL | impl Trait2 for dyn Send + Sync {\n    | ------------------------------- first implementation here\n ...\n LL | impl Trait2 for dyn Sync + Send + Sync {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn Send + Sync + 'static)`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + std::marker::Sync + 'static)`\n \n error[E0592]: duplicate definitions with name `abc`\n   --> $DIR/issue-33140.rs:29:5"}, {"sha": "f1342181b37d90d6fe67be5cbfd19d6d39835221", "filename": "src/test/ui/issues/issue-41974.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fissues%2Fissue-41974.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fissues%2Fissue-41974.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-41974.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `Drop` for type `Box<_>`:\n+error[E0119]: conflicting implementations of trait `std::ops::Drop` for type `std::boxed::Box<_>`:\n   --> $DIR/issue-41974.rs:7:1\n    |\n LL | impl<T> Drop for T where T: A {"}, {"sha": "75c69e5b3e3f506866f7f4a0cd8f127af8401f1d", "filename": "src/test/ui/issues/issue-43355.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fissues%2Fissue-43355.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fissues%2Fissue-43355.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-43355.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `Trait1<Box<_>>` for type `A`:\n+error[E0119]: conflicting implementations of trait `Trait1<std::boxed::Box<_>>` for type `A`:\n   --> $DIR/issue-43355.rs:13:1\n    |\n LL | impl<X, T> Trait1<X> for T where T: Trait2<X> {"}, {"sha": "8405a30478bde8b5470fdd155268262b6217fb0f", "filename": "src/test/ui/issues/issue-48728.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fissues%2Fissue-48728.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fissues%2Fissue-48728.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-48728.rs?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,7 +1,7 @@\n // Regression test for #48728, an ICE that occurred computing\n // coherence \"help\" information.\n \n-#[derive(Clone)] //~ ERROR conflicting implementations of trait `Clone`\n+#[derive(Clone)] //~ ERROR conflicting implementations of trait `std::clone::Clone`\n struct Node<T: ?Sized>(Box<T>);\n \n impl<T: Clone + ?Sized> Clone for Node<[T]> {"}, {"sha": "a0698c20798356fe628e685972e71860d03a189f", "filename": "src/test/ui/issues/issue-48728.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fissues%2Fissue-48728.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fissues%2Fissue-48728.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-48728.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `Clone` for type `Node<[_]>`:\n+error[E0119]: conflicting implementations of trait `std::clone::Clone` for type `Node<[_]>`:\n   --> $DIR/issue-48728.rs:4:10\n    |\n LL | #[derive(Clone)]"}, {"sha": "5308bba440e06c07daac92dd0ff795c22adaba07", "filename": "src/test/ui/lint/lint-incoherent-auto-trait-objects.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Flint%2Flint-incoherent-auto-trait-objects.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Flint%2Flint-incoherent-auto-trait-objects.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-incoherent-auto-trait-objects.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,36 +1,36 @@\n-error: conflicting implementations of trait `Foo` for type `(dyn Send + 'static)`: (E0119)\n+error: conflicting implementations of trait `Foo` for type `(dyn std::marker::Send + 'static)`: (E0119)\n   --> $DIR/lint-incoherent-auto-trait-objects.rs:5:1\n    |\n LL | impl Foo for dyn Send {}\n    | --------------------- first implementation here\n LL | \n LL | impl Foo for dyn Send + Send {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn Send + 'static)`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + 'static)`\n    |\n    = note: `#[deny(order_dependent_trait_objects)]` on by default\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>\n \n-error: conflicting implementations of trait `Foo` for type `(dyn Send + Sync + 'static)`: (E0119)\n+error: conflicting implementations of trait `Foo` for type `(dyn std::marker::Send + std::marker::Sync + 'static)`: (E0119)\n   --> $DIR/lint-incoherent-auto-trait-objects.rs:11:1\n    |\n LL | impl Foo for dyn Send + Sync {}\n    | ---------------------------- first implementation here\n LL | \n LL | impl Foo for dyn Sync + Send {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn Send + Sync + 'static)`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + std::marker::Sync + 'static)`\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>\n \n-error: conflicting implementations of trait `Foo` for type `(dyn Send + Sync + 'static)`: (E0119)\n+error: conflicting implementations of trait `Foo` for type `(dyn std::marker::Send + std::marker::Sync + 'static)`: (E0119)\n   --> $DIR/lint-incoherent-auto-trait-objects.rs:15:1\n    |\n LL | impl Foo for dyn Sync + Send {}\n    | ---------------------------- first implementation here\n ...\n LL | impl Foo for dyn Send + Sync + Send {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn Send + Sync + 'static)`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + std::marker::Sync + 'static)`\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>"}, {"sha": "2b4fa66ecf2820561246e54823601eadcdfcbe34", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-and-non-const-impl.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-and-non-const-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-and-non-const-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-and-non-const-impl.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `Add` for type `i32`:\n+error[E0119]: conflicting implementations of trait `std::ops::Add` for type `i32`:\n   --> $DIR/const-and-non-const-impl.rs:6:1\n    |\n LL | impl const std::ops::Add for i32 {\n@@ -7,7 +7,7 @@ LL | impl const std::ops::Add for i32 {\n    = note: conflicting implementation in crate `core`:\n            - impl Add for i32;\n \n-error[E0119]: conflicting implementations of trait `Add` for type `Int`:\n+error[E0119]: conflicting implementations of trait `std::ops::Add` for type `Int`:\n   --> $DIR/const-and-non-const-impl.rs:24:1\n    |\n LL | impl std::ops::Add for Int {"}, {"sha": "6141174ba8c03c084ac83c92c8b73db3202e312d", "filename": "src/test/ui/specialization/specialization-overlap-negative.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fspecialization%2Fspecialization-overlap-negative.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fspecialization%2Fspecialization-overlap-negative.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fspecialization-overlap-negative.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -7,7 +7,7 @@ LL | #![feature(specialization)]\n    = note: `#[warn(incomplete_features)]` on by default\n    = note: see issue #31844 <https://github.com/rust-lang/rust/issues/31844> for more information\n \n-error[E0751]: found both positive and negative implementation of trait `Send` for type `TestType<_>`:\n+error[E0751]: found both positive and negative implementation of trait `std::marker::Send` for type `TestType<_>`:\n   --> $DIR/specialization-overlap-negative.rs:9:1\n    |\n LL | unsafe impl<T: Clone> Send for TestType<T> {}"}, {"sha": "cf0f186a18337be7e57c8f6239316f36cb9bb69d", "filename": "src/test/ui/specialization/specialization-overlap.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fspecialization%2Fspecialization-overlap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Fspecialization%2Fspecialization-overlap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fspecialization-overlap.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -7,13 +7,13 @@ LL | #![feature(specialization)]\n    = note: `#[warn(incomplete_features)]` on by default\n    = note: see issue #31844 <https://github.com/rust-lang/rust/issues/31844> for more information\n \n-error[E0119]: conflicting implementations of trait `Foo` for type `Vec<_>`:\n+error[E0119]: conflicting implementations of trait `Foo` for type `std::vec::Vec<_>`:\n   --> $DIR/specialization-overlap.rs:5:1\n    |\n LL | impl<T: Clone> Foo for T {}\n    | ------------------------ first implementation here\n LL | impl<T> Foo for Vec<T> {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `Vec<_>`\n+   | ^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `std::vec::Vec<_>`\n \n error[E0119]: conflicting implementations of trait `Bar` for type `(u8, u8)`:\n   --> $DIR/specialization-overlap.rs:9:1"}, {"sha": "d7039e3db6bde1a36feefec69285946b6e2d81c7", "filename": "src/test/ui/traits/negative-impls/pin-unsound-issue-66544-clone.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Ftraits%2Fnegative-impls%2Fpin-unsound-issue-66544-clone.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Ftraits%2Fnegative-impls%2Fpin-unsound-issue-66544-clone.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fnegative-impls%2Fpin-unsound-issue-66544-clone.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,4 +1,4 @@\n-error[E0751]: found both positive and negative implementation of trait `Clone` for type `&mut MyType<'_>`:\n+error[E0751]: found both positive and negative implementation of trait `std::clone::Clone` for type `&mut MyType<'_>`:\n   --> $DIR/pin-unsound-issue-66544-clone.rs:7:1\n    |\n LL | impl<'a> Clone for &'a mut MyType<'a> {"}, {"sha": "a0b62a8bab68f32b4c236bcf9155fd8569a45bf6", "filename": "src/test/ui/traits/negative-impls/pin-unsound-issue-66544-derefmut.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Ftraits%2Fnegative-impls%2Fpin-unsound-issue-66544-derefmut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Ftraits%2Fnegative-impls%2Fpin-unsound-issue-66544-derefmut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fnegative-impls%2Fpin-unsound-issue-66544-derefmut.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,4 +1,4 @@\n-error[E0751]: found both positive and negative implementation of trait `DerefMut` for type `&MyType<'_>`:\n+error[E0751]: found both positive and negative implementation of trait `std::ops::DerefMut` for type `&MyType<'_>`:\n   --> $DIR/pin-unsound-issue-66544-derefmut.rs:12:1\n    |\n LL | impl<'a> DerefMut for &'a MyType<'a> {"}, {"sha": "7cce45d2c8f8f1929ace12f1f52aa867d9f0bd68", "filename": "src/test/ui/traits/negative-impls/rely-on-negative-impl-in-coherence.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Ftraits%2Fnegative-impls%2Frely-on-negative-impl-in-coherence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Ftraits%2Fnegative-impls%2Frely-on-negative-impl-in-coherence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fnegative-impls%2Frely-on-negative-impl-in-coherence.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,10 +1,10 @@\n-error[E0119]: conflicting implementations of trait `LocalTrait` for type `String`:\n+error[E0119]: conflicting implementations of trait `LocalTrait` for type `std::string::String`:\n   --> $DIR/rely-on-negative-impl-in-coherence.rs:19:1\n    |\n LL | impl<T: ForeignTrait> LocalTrait for T { }\n    | -------------------------------------- first implementation here\n LL | impl LocalTrait for String { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `String`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `std::string::String`\n \n error: aborting due to previous error\n "}, {"sha": "94a0c287f4a32d693a43873fabc5e47b05fdee24", "filename": "src/test/ui/traits/overlap-not-permitted-for-builtin-trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Ftraits%2Foverlap-not-permitted-for-builtin-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Ftraits%2Foverlap-not-permitted-for-builtin-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Foverlap-not-permitted-for-builtin-trait.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `Send` for type `MyStruct`:\n+error[E0119]: conflicting implementations of trait `std::marker::Send` for type `MyStruct`:\n   --> $DIR/overlap-not-permitted-for-builtin-trait.rs:7:1\n    |\n LL | impl !Send for MyStruct {}"}, {"sha": "cb893c40c3252abf1b274e415b770f5688fac198", "filename": "src/test/ui/type-alias-impl-trait/incoherent-assoc-imp-trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fincoherent-assoc-imp-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51742be6d8c828c956f662a8e9a472cd31886b4a/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fincoherent-assoc-imp-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fincoherent-assoc-imp-trait.stderr?ref=51742be6d8c828c956f662a8e9a472cd31886b4a", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `FnOnce<()>` for type `&_`:\n+error[E0119]: conflicting implementations of trait `std::ops::FnOnce<()>` for type `&_`:\n   --> $DIR/incoherent-assoc-imp-trait.rs:10:1\n    |\n LL | impl<F> FnOnce<()> for &F {"}]}