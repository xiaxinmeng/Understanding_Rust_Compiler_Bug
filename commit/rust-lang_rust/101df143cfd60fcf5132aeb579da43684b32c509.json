{"sha": "101df143cfd60fcf5132aeb579da43684b32c509", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwMWRmMTQzY2ZkNjBmY2Y1MTMyYWViNTc5ZGE0MzY4NGIzMmM1MDk=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-07-05T09:25:50Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-07-05T09:25:50Z"}, "message": "Refactor rewrite_static", "tree": {"sha": "068edd6d778e75734359ab6f49d5e11f1baae3bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/068edd6d778e75734359ab6f49d5e11f1baae3bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/101df143cfd60fcf5132aeb579da43684b32c509", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/101df143cfd60fcf5132aeb579da43684b32c509", "html_url": "https://github.com/rust-lang/rust/commit/101df143cfd60fcf5132aeb579da43684b32c509", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/101df143cfd60fcf5132aeb579da43684b32c509/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "818ff7a60241c6cbc808eb7c12a5742df03583c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/818ff7a60241c6cbc808eb7c12a5742df03583c9", "html_url": "https://github.com/rust-lang/rust/commit/818ff7a60241c6cbc808eb7c12a5742df03583c9"}], "stats": {"total": 29, "additions": 10, "deletions": 19}, "files": [{"sha": "bbe5438a01fb89ec35c7e3f170935667f46b54cf", "filename": "src/items.rs", "status": "modified", "additions": 10, "deletions": 19, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/101df143cfd60fcf5132aeb579da43684b32c509/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/101df143cfd60fcf5132aeb579da43684b32c509/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=101df143cfd60fcf5132aeb579da43684b32c509", "patch": "@@ -1531,22 +1531,23 @@ pub fn rewrite_static(\n     span: Span,\n     context: &RewriteContext,\n ) -> Option<String> {\n-    let type_annotation_spacing = type_annotation_spacing(context.config);\n+    let colon = colon_spaces(\n+        context.config.space_before_type_annotation(),\n+        context.config.space_after_type_annotation_colon(),\n+    );\n     let prefix = format!(\n-        \"{}{} {}{}{}:{}\",\n+        \"{}{} {}{}{}\",\n         format_visibility(vis),\n         prefix,\n         format_mutability(mutability),\n         ident,\n-        type_annotation_spacing.0,\n-        type_annotation_spacing.1\n+        colon,\n     );\n     // 2 = \" =\".len()\n     let ty_str = try_opt!(ty.rewrite(\n         context,\n-        Shape::legacy(\n-            context.config.max_width() - offset.block_indent - prefix.len() - 2,\n-            offset.block_only(),\n+        try_opt!(\n+            Shape::indented(offset.block_only(), context.config).offset_left(prefix.len() + 2)\n         ),\n     ));\n \n@@ -1560,21 +1561,11 @@ pub fn rewrite_static(\n             expr,\n             Shape::legacy(remaining_width, offset.block_only()),\n         ).and_then(|res| {\n-            recover_comment_removed(\n-                res,\n-                span,\n-                context,\n-                Shape {\n-                    width: context.config.max_width(),\n-                    indent: offset,\n-                    offset: offset.alignment,\n-                },\n-            )\n+            recover_comment_removed(res, span, context, Shape::indented(offset, context.config))\n         })\n             .map(|s| if s.ends_with(';') { s } else { s + \";\" })\n     } else {\n-        let lhs = format!(\"{}{};\", prefix, ty_str);\n-        Some(lhs)\n+        Some(format!(\"{}{};\", prefix, ty_str))\n     }\n }\n "}]}