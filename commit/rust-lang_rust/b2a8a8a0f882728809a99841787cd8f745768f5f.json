{"sha": "b2a8a8a0f882728809a99841787cd8f745768f5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyYThhOGEwZjg4MjcyODgwOWE5OTg0MTc4N2NkOGY3NDU3NjhmNWY=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-04-26T19:02:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-26T19:02:39Z"}, "message": "Rollup merge of #71569 - samrat:miri-ub-on-size-mismatch, r=RalfJung\n\n[miri] Throw UB if target size and data size don't match\n\nIssue: https://github.com/rust-lang/miri/issues/1355\n\nIf an extern C function is defined as\n\n```\nextern \"C\" {\n    fn malloc(size: u32) -> *mut std::ffi::c_void;\n}\n```\n\non a 64-bit machine(ie. pointer sizes don't match), return undefined behaviour from Miri when [converting the argument into machine_usize](https://github.com/rust-lang/miri/blob/master/src/shims/foreign_items.rs#L200)", "tree": {"sha": "8b8c2a0ef1c5462cceccfead3db274faa274ff55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b8c2a0ef1c5462cceccfead3db274faa274ff55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2a8a8a0f882728809a99841787cd8f745768f5f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJepdrPCRBK7hj4Ov3rIwAAdHIIAHPfLd1nmNnoVz2YKKYjKe6M\n3QT6ZW8gWc4IfJBdW/T9+GfZMjl3Q2XlzQshc4LpSWlxSY6xTDBCKJMv+IsS5NDw\nPAmBOWkxvZk372DpfFjeCNjf8xmYYmiUaTDGa5D5XRAfM4hnkbOW/8mKuK9eLlxs\nR6NOtHPtAzudNwFy2qKHXq5YY/wVBqbNeGVSxEFLdijNh2G0IIDxMyXVcA6a9P+5\nbzIJrqdQ7LsfGtpSyFtpIaa/zaXYXqLW1kh8p+g7JvfQPs5s7V9PdOdWvBA4if1y\nukJ1rffsGX16DzInoeu/BJboYOUvoS0IuOPE/mOmMyW3yZ8Vn953WINBeS4M4cw=\n=QJ81\n-----END PGP SIGNATURE-----\n", "payload": "tree 8b8c2a0ef1c5462cceccfead3db274faa274ff55\nparent d1287746cd16c793131969b623e39956d783f545\nparent c8d8c42d1ce10d945bcd8cbff3ac9858fc909abc\nauthor Dylan DPC <dylan.dpc@gmail.com> 1587927759 +0200\ncommitter GitHub <noreply@github.com> 1587927759 +0200\n\nRollup merge of #71569 - samrat:miri-ub-on-size-mismatch, r=RalfJung\n\n[miri] Throw UB if target size and data size don't match\n\nIssue: https://github.com/rust-lang/miri/issues/1355\n\nIf an extern C function is defined as\n\n```\nextern \"C\" {\n    fn malloc(size: u32) -> *mut std::ffi::c_void;\n}\n```\n\non a 64-bit machine(ie. pointer sizes don't match), return undefined behaviour from Miri when [converting the argument into machine_usize](https://github.com/rust-lang/miri/blob/master/src/shims/foreign_items.rs#L200)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2a8a8a0f882728809a99841787cd8f745768f5f", "html_url": "https://github.com/rust-lang/rust/commit/b2a8a8a0f882728809a99841787cd8f745768f5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2a8a8a0f882728809a99841787cd8f745768f5f/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1287746cd16c793131969b623e39956d783f545", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1287746cd16c793131969b623e39956d783f545", "html_url": "https://github.com/rust-lang/rust/commit/d1287746cd16c793131969b623e39956d783f545"}, {"sha": "c8d8c42d1ce10d945bcd8cbff3ac9858fc909abc", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8d8c42d1ce10d945bcd8cbff3ac9858fc909abc", "html_url": "https://github.com/rust-lang/rust/commit/c8d8c42d1ce10d945bcd8cbff3ac9858fc909abc"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "e6557c9fbd59d4e61aacd27e58eb29f943d78e40", "filename": "src/librustc_middle/mir/interpret/error.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b2a8a8a0f882728809a99841787cd8f745768f5f/src%2Flibrustc_middle%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2a8a8a0f882728809a99841787cd8f745768f5f/src%2Flibrustc_middle%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Finterpret%2Ferror.rs?ref=b2a8a8a0f882728809a99841787cd8f745768f5f", "patch": "@@ -360,6 +360,11 @@ pub enum UndefinedBehaviorInfo {\n     InvalidUndefBytes(Option<Pointer>),\n     /// Working with a local that is not currently live.\n     DeadLocal,\n+    /// Data size is not equal to target size.\n+    ScalarSizeMismatch {\n+        target_size: u64,\n+        data_size: u64,\n+    },\n }\n \n impl fmt::Debug for UndefinedBehaviorInfo {\n@@ -421,6 +426,11 @@ impl fmt::Debug for UndefinedBehaviorInfo {\n                 \"using uninitialized data, but this operation requires initialized memory\"\n             ),\n             DeadLocal => write!(f, \"accessing a dead local variable\"),\n+            ScalarSizeMismatch { target_size, data_size } => write!(\n+                f,\n+                \"scalar size mismatch: expected {} bytes but got {} bytes instead\",\n+                target_size, data_size\n+            ),\n         }\n     }\n }"}, {"sha": "6e013f75ed7590fa148e175fbe230d943aabcbe4", "filename": "src/librustc_middle/mir/interpret/value.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b2a8a8a0f882728809a99841787cd8f745768f5f/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2a8a8a0f882728809a99841787cd8f745768f5f/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fvalue.rs?ref=b2a8a8a0f882728809a99841787cd8f745768f5f", "patch": "@@ -393,7 +393,12 @@ impl<'tcx, Tag> Scalar<Tag> {\n         assert_ne!(target_size.bytes(), 0, \"you should never look at the bits of a ZST\");\n         match self {\n             Scalar::Raw { data, size } => {\n-                assert_eq!(target_size.bytes(), u64::from(size));\n+                if target_size.bytes() != u64::from(size) {\n+                    throw_ub!(ScalarSizeMismatch {\n+                        target_size: target_size.bytes(),\n+                        data_size: u64::from(size),\n+                    });\n+                }\n                 Scalar::check_data(data, size);\n                 Ok(data)\n             }"}]}