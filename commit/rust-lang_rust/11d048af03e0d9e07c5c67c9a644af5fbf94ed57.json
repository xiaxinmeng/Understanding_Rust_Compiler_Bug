{"sha": "11d048af03e0d9e07c5c67c9a644af5fbf94ed57", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExZDA0OGFmMDNlMGQ5ZTA3YzVjNjdjOWE2NDRhZjVmYmY5NGVkNTc=", "commit": {"author": {"name": "unexge", "email": "unexge@gmail.com", "date": "2020-08-14T19:17:26Z"}, "committer": {"name": "unexge", "email": "unexge@gmail.com", "date": "2020-08-20T18:34:53Z"}, "message": "Run rustfmt", "tree": {"sha": "015cf8312848c502d3e224eb069e70e89dc576cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/015cf8312848c502d3e224eb069e70e89dc576cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11d048af03e0d9e07c5c67c9a644af5fbf94ed57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11d048af03e0d9e07c5c67c9a644af5fbf94ed57", "html_url": "https://github.com/rust-lang/rust/commit/11d048af03e0d9e07c5c67c9a644af5fbf94ed57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11d048af03e0d9e07c5c67c9a644af5fbf94ed57/comments", "author": {"login": "unexge", "id": 16212576, "node_id": "MDQ6VXNlcjE2MjEyNTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16212576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unexge", "html_url": "https://github.com/unexge", "followers_url": "https://api.github.com/users/unexge/followers", "following_url": "https://api.github.com/users/unexge/following{/other_user}", "gists_url": "https://api.github.com/users/unexge/gists{/gist_id}", "starred_url": "https://api.github.com/users/unexge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unexge/subscriptions", "organizations_url": "https://api.github.com/users/unexge/orgs", "repos_url": "https://api.github.com/users/unexge/repos", "events_url": "https://api.github.com/users/unexge/events{/privacy}", "received_events_url": "https://api.github.com/users/unexge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "unexge", "id": 16212576, "node_id": "MDQ6VXNlcjE2MjEyNTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16212576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unexge", "html_url": "https://github.com/unexge", "followers_url": "https://api.github.com/users/unexge/followers", "following_url": "https://api.github.com/users/unexge/following{/other_user}", "gists_url": "https://api.github.com/users/unexge/gists{/gist_id}", "starred_url": "https://api.github.com/users/unexge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unexge/subscriptions", "organizations_url": "https://api.github.com/users/unexge/orgs", "repos_url": "https://api.github.com/users/unexge/repos", "events_url": "https://api.github.com/users/unexge/events{/privacy}", "received_events_url": "https://api.github.com/users/unexge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb72150f0214c9395c48fdd3ee93650f0a507112", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb72150f0214c9395c48fdd3ee93650f0a507112", "html_url": "https://github.com/rust-lang/rust/commit/bb72150f0214c9395c48fdd3ee93650f0a507112"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "f9a08e84e5b27b42db255aee2f6e00692bcd5482", "filename": "crates/assists/src/handlers/expand_glob_import.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/11d048af03e0d9e07c5c67c9a644af5fbf94ed57/crates%2Fassists%2Fsrc%2Fhandlers%2Fexpand_glob_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11d048af03e0d9e07c5c67c9a644af5fbf94ed57/crates%2Fassists%2Fsrc%2Fhandlers%2Fexpand_glob_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fexpand_glob_import.rs?ref=11d048af03e0d9e07c5c67c9a644af5fbf94ed57", "patch": "@@ -183,10 +183,12 @@ fn replace_ast(\n ) {\n     let existing_use_trees = match parent.clone() {\n         Either::Left(_) => vec![],\n-        Either::Right(u) => u.use_trees().filter(|n| \n+        Either::Right(u) => u\n+            .use_trees()\n+            .filter(|n|\n             // filter out star\n-            n.star_token().is_none()\n-        ).collect(),\n+            n.star_token().is_none())\n+            .collect(),\n     };\n \n     let new_use_trees: Vec<ast::UseTree> = names_to_import"}]}