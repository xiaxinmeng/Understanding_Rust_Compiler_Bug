{"sha": "d5ec9dfa5cd7dbd6fbd0685c44c3e38c5754192d", "node_id": "C_kwDOAAsO6NoAKGQ1ZWM5ZGZhNWNkN2RiZDZmYmQwNjg1YzQ0YzNlMzhjNTc1NDE5MmQ", "commit": {"author": {"name": "Fe\u0301lix Saparelli", "email": "felix@passcod.name", "date": "2021-10-27T13:13:09Z"}, "committer": {"name": "Fe\u0301lix Saparelli", "email": "felix@passcod.name", "date": "2021-10-27T13:38:56Z"}, "message": "Rename HashMap:Entry:insert to :insert_entry", "tree": {"sha": "c5f37ad6ebafd30c07c99461f327dd3733db2507", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5f37ad6ebafd30c07c99461f327dd3733db2507"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5ec9dfa5cd7dbd6fbd0685c44c3e38c5754192d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5ec9dfa5cd7dbd6fbd0685c44c3e38c5754192d", "html_url": "https://github.com/rust-lang/rust/commit/d5ec9dfa5cd7dbd6fbd0685c44c3e38c5754192d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5ec9dfa5cd7dbd6fbd0685c44c3e38c5754192d/comments", "author": {"login": "passcod", "id": 155787, "node_id": "MDQ6VXNlcjE1NTc4Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/155787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/passcod", "html_url": "https://github.com/passcod", "followers_url": "https://api.github.com/users/passcod/followers", "following_url": "https://api.github.com/users/passcod/following{/other_user}", "gists_url": "https://api.github.com/users/passcod/gists{/gist_id}", "starred_url": "https://api.github.com/users/passcod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/passcod/subscriptions", "organizations_url": "https://api.github.com/users/passcod/orgs", "repos_url": "https://api.github.com/users/passcod/repos", "events_url": "https://api.github.com/users/passcod/events{/privacy}", "received_events_url": "https://api.github.com/users/passcod/received_events", "type": "User", "site_admin": false}, "committer": {"login": "passcod", "id": 155787, "node_id": "MDQ6VXNlcjE1NTc4Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/155787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/passcod", "html_url": "https://github.com/passcod", "followers_url": "https://api.github.com/users/passcod/followers", "following_url": "https://api.github.com/users/passcod/following{/other_user}", "gists_url": "https://api.github.com/users/passcod/gists{/gist_id}", "starred_url": "https://api.github.com/users/passcod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/passcod/subscriptions", "organizations_url": "https://api.github.com/users/passcod/orgs", "repos_url": "https://api.github.com/users/passcod/repos", "events_url": "https://api.github.com/users/passcod/events{/privacy}", "received_events_url": "https://api.github.com/users/passcod/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8f6e614f86be429b5862f30e023063f619aeed2", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8f6e614f86be429b5862f30e023063f619aeed2", "html_url": "https://github.com/rust-lang/rust/commit/a8f6e614f86be429b5862f30e023063f619aeed2"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e7f05854b7e3321fa4c8fc9eee7ebf634088c598", "filename": "library/std/src/collections/hash/map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d5ec9dfa5cd7dbd6fbd0685c44c3e38c5754192d/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5ec9dfa5cd7dbd6fbd0685c44c3e38c5754192d/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs?ref=d5ec9dfa5cd7dbd6fbd0685c44c3e38c5754192d", "patch": "@@ -2460,7 +2460,7 @@ impl<'a, K, V> Entry<'a, K, V> {\n     /// ```\n     #[inline]\n     #[unstable(feature = \"entry_insert\", issue = \"65225\")]\n-    pub fn insert(self, value: V) -> OccupiedEntry<'a, K, V> {\n+    pub fn insert_entry(self, value: V) -> OccupiedEntry<'a, K, V> {\n         match self {\n             Occupied(mut entry) => {\n                 entry.insert(value);"}]}