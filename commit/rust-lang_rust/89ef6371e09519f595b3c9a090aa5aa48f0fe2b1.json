{"sha": "89ef6371e09519f595b3c9a090aa5aa48f0fe2b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5ZWY2MzcxZTA5NTE5ZjU5NWIzYzlhMDkwYWE1YWE0OGYwZmUyYjE=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-04-20T13:59:58Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-04-20T13:59:58Z"}, "message": "remove bad example from PartialEq docs\n\nFixes #24173", "tree": {"sha": "59b7b518c2756a4eea5a5926c1601160bc9ae890", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59b7b518c2756a4eea5a5926c1601160bc9ae890"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89ef6371e09519f595b3c9a090aa5aa48f0fe2b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89ef6371e09519f595b3c9a090aa5aa48f0fe2b1", "html_url": "https://github.com/rust-lang/rust/commit/89ef6371e09519f595b3c9a090aa5aa48f0fe2b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89ef6371e09519f595b3c9a090aa5aa48f0fe2b1/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5910dc0e8e396a4af7b948b83bab03f27b414a0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5910dc0e8e396a4af7b948b83bab03f27b414a0e", "html_url": "https://github.com/rust-lang/rust/commit/5910dc0e8e396a4af7b948b83bab03f27b414a0e"}], "stats": {"total": 21, "additions": 0, "deletions": 21}, "files": [{"sha": "dd59ceff577a8c427fc8565761cfdc9697c85157", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/89ef6371e09519f595b3c9a090aa5aa48f0fe2b1/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89ef6371e09519f595b3c9a090aa5aa48f0fe2b1/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=89ef6371e09519f595b3c9a090aa5aa48f0fe2b1", "patch": "@@ -14,27 +14,6 @@\n //! implement comparison operators. Rust programs may implement `PartialOrd` to overload the `<`,\n //! `<=`, `>`, and `>=` operators, and may implement `PartialEq` to overload the `==` and `!=`\n //! operators.\n-//!\n-//! For example, to define a type with a customized definition for the PartialEq operators, you\n-//! could do the following:\n-//!\n-//! ```\n-//! # #![feature(core)]\n-//! struct FuzzyNum {\n-//!     num: i32,\n-//! }\n-//!\n-//! impl PartialEq for FuzzyNum {\n-//!     // Our custom eq allows numbers which are near each other to be equal! :D\n-//!     fn eq(&self, other: &FuzzyNum) -> bool {\n-//!         (self.num - other.num).abs() < 5\n-//!     }\n-//! }\n-//!\n-//! // Now these binary operators will work when applied!\n-//! assert!(FuzzyNum { num: 37 } == FuzzyNum { num: 34 });\n-//! assert!(FuzzyNum { num: 25 } != FuzzyNum { num: 57 });\n-//! ```\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n "}]}