{"sha": "df05c5c3e20cfdfccd0165dd3370fed7c3676cd0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmMDVjNWMzZTIwY2ZkZmNjZDAxNjVkZDMzNzBmZWQ3YzM2NzZjZDA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-08T12:39:28Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-08T12:39:28Z"}, "message": "Don't overflow when limiting symbol search", "tree": {"sha": "9750bd3135a71d2f178e53991b9e3cb3b795200c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9750bd3135a71d2f178e53991b9e3cb3b795200c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df05c5c3e20cfdfccd0165dd3370fed7c3676cd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df05c5c3e20cfdfccd0165dd3370fed7c3676cd0", "html_url": "https://github.com/rust-lang/rust/commit/df05c5c3e20cfdfccd0165dd3370fed7c3676cd0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df05c5c3e20cfdfccd0165dd3370fed7c3676cd0/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7daaddb2ac281dcad3ac99496b1cf3f06840887d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7daaddb2ac281dcad3ac99496b1cf3f06840887d", "html_url": "https://github.com/rust-lang/rust/commit/7daaddb2ac281dcad3ac99496b1cf3f06840887d"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "4c93761aad2cf586b52874e5308202eb8282440a", "filename": "crates/libanalysis/src/symbol_index.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/df05c5c3e20cfdfccd0165dd3370fed7c3676cd0/crates%2Flibanalysis%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df05c5c3e20cfdfccd0165dd3370fed7c3676cd0/crates%2Flibanalysis%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibanalysis%2Fsrc%2Fsymbol_index.rs?ref=df05c5c3e20cfdfccd0165dd3370fed7c3676cd0", "patch": "@@ -42,7 +42,7 @@ impl SymbolIndex {\n \n impl Query {\n     pub(crate) fn search(\n-        mut self,\n+        self,\n         indices: &[&SymbolIndex],\n         token: &JobToken,\n     ) -> Vec<(FileId, FileSymbol)> {\n@@ -55,7 +55,7 @@ impl Query {\n         let mut stream = op.union();\n         let mut res = Vec::new();\n         while let Some((_, indexed_values)) = stream.next() {\n-            if self.limit == 0 || token.is_canceled() {\n+            if res.len() >= self.limit || token.is_canceled() {\n                 break;\n             }\n             for indexed_value in indexed_values {\n@@ -70,7 +70,6 @@ impl Query {\n                     continue;\n                 }\n                 res.push((*file_id, symbol.clone()));\n-                self.limit -= 1;\n             }\n         }\n         res"}]}