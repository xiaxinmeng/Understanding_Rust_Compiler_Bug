{"sha": "5496d875252b89aac1a38dc591e290dc78d65ee9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0OTZkODc1MjUyYjg5YWFjMWEzOGRjNTkxZTI5MGRjNzhkNjVlZTk=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-11-10T21:14:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-11-10T21:14:49Z"}, "message": "Merge pull request #2136 from topecongiro/issue-2025\n\nRemove empty lines at the beginning of the file", "tree": {"sha": "863653490dc51137a7de4e0c8d7c754d243b39f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/863653490dc51137a7de4e0c8d7c754d243b39f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5496d875252b89aac1a38dc591e290dc78d65ee9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaBhbJCRBK7hj4Ov3rIwAAdHIIABZTzcRVH1u9B2vruoN2tCXD\n+qhZ42aFnQA6jLvJXsCkqu3YRhC5zUhi6jIgG83uyMZGuNdkQ9YT8mCcyLbtIH7t\nigb9F1pvspAHnUv843ktwIy9OHrgVpG1fzg77uVJHXaijiZlrbg0w3jzuEP8Pr7x\nNixMb6Do3vte/wYBM9lNevoEHL4kN5We/l42PdLiOC/VxzxOpXFvg9VTy5IMs18Q\n0Vcea805gB1soKuBUMVtR9LRW6oopNig21q46V31/NeC0pWW9YLEGj8m3Jss+vzo\nb4Mgs9zgqZObeAv2kHrQwuA8RGRjjskb7xMzdm11v+hhuXNRql7CD7Ud+0V2m9Y=\n=2fWl\n-----END PGP SIGNATURE-----\n", "payload": "tree 863653490dc51137a7de4e0c8d7c754d243b39f2\nparent 291dbe8d87701f3617ccdd70caa49df1c27af0e0\nparent 05798572bb59b59078c1fbd213ae22916d498010\nauthor Nick Cameron <nrc@ncameron.org> 1510348489 +1300\ncommitter GitHub <noreply@github.com> 1510348489 +1300\n\nMerge pull request #2136 from topecongiro/issue-2025\n\nRemove empty lines at the beginning of the file "}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5496d875252b89aac1a38dc591e290dc78d65ee9", "html_url": "https://github.com/rust-lang/rust/commit/5496d875252b89aac1a38dc591e290dc78d65ee9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5496d875252b89aac1a38dc591e290dc78d65ee9/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "291dbe8d87701f3617ccdd70caa49df1c27af0e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/291dbe8d87701f3617ccdd70caa49df1c27af0e0", "html_url": "https://github.com/rust-lang/rust/commit/291dbe8d87701f3617ccdd70caa49df1c27af0e0"}, {"sha": "05798572bb59b59078c1fbd213ae22916d498010", "url": "https://api.github.com/repos/rust-lang/rust/commits/05798572bb59b59078c1fbd213ae22916d498010", "html_url": "https://github.com/rust-lang/rust/commit/05798572bb59b59078c1fbd213ae22916d498010"}], "stats": {"total": 43, "additions": 40, "deletions": 3}, "files": [{"sha": "efbe50bcf649765d537cdc5c281b8c80d2f81ed4", "filename": "src/codemap.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5496d875252b89aac1a38dc591e290dc78d65ee9/src%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5496d875252b89aac1a38dc591e290dc78d65ee9/src%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcodemap.rs?ref=5496d875252b89aac1a38dc591e290dc78d65ee9", "patch": "@@ -34,6 +34,7 @@ pub trait SpanUtils {\n     fn span_after(&self, original: Span, needle: &str) -> BytePos;\n     fn span_after_last(&self, original: Span, needle: &str) -> BytePos;\n     fn span_before(&self, original: Span, needle: &str) -> BytePos;\n+    fn opt_span_after(&self, original: Span, needle: &str) -> Option<BytePos>;\n }\n \n pub trait LineRangeUtils {\n@@ -70,6 +71,13 @@ impl SpanUtils for CodeMap {\n \n         original.lo() + BytePos(offset as u32)\n     }\n+\n+    fn opt_span_after(&self, original: Span, needle: &str) -> Option<BytePos> {\n+        let snippet = self.span_to_snippet(original).ok()?;\n+        let offset = snippet.find_uncommented(needle)? + needle.len();\n+\n+        Some(original.lo() + BytePos(offset as u32))\n+    }\n }\n \n impl LineRangeUtils for CodeMap {"}, {"sha": "7b441c4de02ad48ed2c69ccd32fe12cbc33c1aef", "filename": "src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5496d875252b89aac1a38dc591e290dc78d65ee9/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5496d875252b89aac1a38dc591e290dc78d65ee9/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=5496d875252b89aac1a38dc591e290dc78d65ee9", "patch": "@@ -321,13 +321,15 @@ where\n         let filemap = visitor.codemap.lookup_char_pos(module.inner.lo()).file;\n         // Format inner attributes if available.\n         if !krate.attrs.is_empty() && path == main_file {\n+            visitor.skip_empty_lines(filemap.end_pos);\n             if visitor.visit_attrs(&krate.attrs, ast::AttrStyle::Inner) {\n                 visitor.push_rewrite(module.inner, None);\n             } else {\n                 visitor.format_separate_mod(module, &*filemap);\n             }\n         } else {\n             visitor.last_pos = filemap.start_pos;\n+            visitor.skip_empty_lines(filemap.end_pos);\n             visitor.format_separate_mod(module, &*filemap);\n         };\n "}, {"sha": "b69edfda0c62fdf6cabfe410aced89daffdcb320", "filename": "src/visitor.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5496d875252b89aac1a38dc591e290dc78d65ee9/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5496d875252b89aac1a38dc591e290dc78d65ee9/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=5496d875252b89aac1a38dc591e290dc78d65ee9", "patch": "@@ -510,6 +510,10 @@ impl<'a> FmtVisitor<'a> {\n         }\n     }\n \n+    pub fn opt_snippet(&self, span: Span) -> Option<String> {\n+        self.codemap.span_to_snippet(span).ok()\n+    }\n+\n     pub fn snippet(&self, span: Span) -> String {\n         match self.codemap.span_to_snippet(span) {\n             Ok(s) => s,\n@@ -695,6 +699,20 @@ impl<'a> FmtVisitor<'a> {\n         self.format_missing_with_indent(filemap.end_pos);\n     }\n \n+    pub fn skip_empty_lines(&mut self, end_pos: BytePos) {\n+        while let Some(pos) = self.codemap\n+            .opt_span_after(mk_sp(self.last_pos, end_pos), \"\\n\")\n+        {\n+            if let Some(snippet) = self.opt_snippet(mk_sp(self.last_pos, pos)) {\n+                if snippet.trim().is_empty() {\n+                    self.last_pos = pos;\n+                } else {\n+                    return;\n+                }\n+            }\n+        }\n+    }\n+\n     pub fn get_context(&self) -> RewriteContext {\n         RewriteContext {\n             parse_session: self.parse_session,"}, {"sha": "c6f61b4e3e19b939172b45cfc6ddf14fe8a4ea99", "filename": "tests/source/issue-2025.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5496d875252b89aac1a38dc591e290dc78d65ee9/tests%2Fsource%2Fissue-2025.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5496d875252b89aac1a38dc591e290dc78d65ee9/tests%2Fsource%2Fissue-2025.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-2025.rs?ref=5496d875252b89aac1a38dc591e290dc78d65ee9", "patch": "@@ -0,0 +1,8 @@\n+\n+\n+\n+\n+// See if rustfmt removes empty lines on top of the file.\n+pub fn foo() {\n+    println!(\"hello, world\");\n+}"}, {"sha": "38bf369bea322291e28b108d59ffa738da4ee283", "filename": "tests/target/issue-2025.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5496d875252b89aac1a38dc591e290dc78d65ee9/tests%2Ftarget%2Fissue-2025.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5496d875252b89aac1a38dc591e290dc78d65ee9/tests%2Ftarget%2Fissue-2025.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-2025.rs?ref=5496d875252b89aac1a38dc591e290dc78d65ee9", "patch": "@@ -0,0 +1,4 @@\n+// See if rustfmt removes empty lines on top of the file.\n+pub fn foo() {\n+    println!(\"hello, world\");\n+}"}, {"sha": "f669e7e2c584dc73462479e54ce7aef8ab045e61", "filename": "tests/target/loop.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5496d875252b89aac1a38dc591e290dc78d65ee9/tests%2Ftarget%2Floop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5496d875252b89aac1a38dc591e290dc78d65ee9/tests%2Ftarget%2Floop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Floop.rs?ref=5496d875252b89aac1a38dc591e290dc78d65ee9", "patch": "@@ -1,4 +1,3 @@\n-\n fn main() {\n     loop {\n         return some_val;"}, {"sha": "1df46293184660c0857989d7eb9cf691dfcf02e5", "filename": "tests/target/nestedmod/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5496d875252b89aac1a38dc591e290dc78d65ee9/tests%2Ftarget%2Fnestedmod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5496d875252b89aac1a38dc591e290dc78d65ee9/tests%2Ftarget%2Fnestedmod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fnestedmod%2Fmod.rs?ref=5496d875252b89aac1a38dc591e290dc78d65ee9", "patch": "@@ -1,4 +1,3 @@\n-\n mod mod2a;\n mod mod2b;\n "}, {"sha": "9b6ea844e65dc957a60b766487eb4fc4c6c79ddf", "filename": "tests/target/nestedmod/mod2b.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5496d875252b89aac1a38dc591e290dc78d65ee9/tests%2Ftarget%2Fnestedmod%2Fmod2b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5496d875252b89aac1a38dc591e290dc78d65ee9/tests%2Ftarget%2Fnestedmod%2Fmod2b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fnestedmod%2Fmod2b.rs?ref=5496d875252b89aac1a38dc591e290dc78d65ee9", "patch": "@@ -1,3 +1,2 @@\n-\n #[path = \"mod2a.rs\"]\n mod c;"}]}