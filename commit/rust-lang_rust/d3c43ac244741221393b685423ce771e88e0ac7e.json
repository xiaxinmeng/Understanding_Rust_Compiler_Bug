{"sha": "d3c43ac244741221393b685423ce771e88e0ac7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzYzQzYWMyNDQ3NDEyMjEzOTNiNjg1NDIzY2U3NzFlODhlMGFjN2U=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-12-28T13:13:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-28T13:13:06Z"}, "message": "Rollup merge of #79815 - XAMPPRocky:relnotes-1.49.0, r=Mark-Simulacrum\n\nUpdate RELEASES.md for 1.49.0\n\n### [Rendered](https://github.com/XAMPPRocky/rust/tree/relnotes-1.49.0/RELEASES.md)\n\nr? ``@Mark-Simulacrum``\ncc ``@rust-lang/release``", "tree": {"sha": "f950b7401ba852a05a3c5ecd705b2cb374e89c6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f950b7401ba852a05a3c5ecd705b2cb374e89c6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3c43ac244741221393b685423ce771e88e0ac7e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf6dniCRBK7hj4Ov3rIwAAdHIIAGP9290UhbMGkt8eAVEUqhnU\nEYCOYnHlC1leEfah7mHEKFGtIl0ylupjivqtmG2VYWpwZhLbFVeLySnCPpP+jS95\nNynNhCa84jrsdNQrXljdgSAArNjAc9UbtbW6Ec88IhaqaxnjjfMTLlcSp9iR/4Jz\nMuKiouYSghPGrCs0mmWv5XsR/fgC8gE+3sPCUbn1ELeTKSthyLeL7bw8IM83ka65\ny4YlOkxj7wW/Ia/TMzu4vNpHryfKyafi+ImrwBPcvhazmEwGAwZeXv75wAGpKIQ2\nOhD4nVEAwqtO/Naby2d5QGTnaTpKiTlZ+OqpgPU2+v3kUan5jMjhEk372opNoWo=\n=Nu9X\n-----END PGP SIGNATURE-----\n", "payload": "tree f950b7401ba852a05a3c5ecd705b2cb374e89c6f\nparent 98d80bda01950b16dfa5e4a1fe7ecec0e24614f6\nparent 481f6dbebfdb85739e821eddc3781612dfd0830a\nauthor Dylan DPC <dylan.dpc@gmail.com> 1609161186 +0100\ncommitter GitHub <noreply@github.com> 1609161186 +0100\n\nRollup merge of #79815 - XAMPPRocky:relnotes-1.49.0, r=Mark-Simulacrum\n\nUpdate RELEASES.md for 1.49.0\n\n### [Rendered](https://github.com/XAMPPRocky/rust/tree/relnotes-1.49.0/RELEASES.md)\n\nr? ``@Mark-Simulacrum``\ncc ``@rust-lang/release``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3c43ac244741221393b685423ce771e88e0ac7e", "html_url": "https://github.com/rust-lang/rust/commit/d3c43ac244741221393b685423ce771e88e0ac7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3c43ac244741221393b685423ce771e88e0ac7e/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98d80bda01950b16dfa5e4a1fe7ecec0e24614f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/98d80bda01950b16dfa5e4a1fe7ecec0e24614f6", "html_url": "https://github.com/rust-lang/rust/commit/98d80bda01950b16dfa5e4a1fe7ecec0e24614f6"}, {"sha": "481f6dbebfdb85739e821eddc3781612dfd0830a", "url": "https://api.github.com/repos/rust-lang/rust/commits/481f6dbebfdb85739e821eddc3781612dfd0830a", "html_url": "https://github.com/rust-lang/rust/commit/481f6dbebfdb85739e821eddc3781612dfd0830a"}], "stats": {"total": 134, "additions": 131, "deletions": 3}, "files": [{"sha": "8f04980e390367dcf5bb9c187f710a00ead0d819", "filename": "RELEASES.md", "status": "modified", "additions": 131, "deletions": 3, "changes": 134, "blob_url": "https://github.com/rust-lang/rust/blob/d3c43ac244741221393b685423ce771e88e0ac7e/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/d3c43ac244741221393b685423ce771e88e0ac7e/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=d3c43ac244741221393b685423ce771e88e0ac7e", "patch": "@@ -1,3 +1,131 @@\n+Version 1.49.0 (2020-12-31)\n+============================\n+\n+Language\n+-----------------------\n+\n+- [Unions can now implement `Drop`, and you can now have a field in a union\n+  with `ManuallyDrop<T>`.][77547]\n+- [You can now cast uninhabited enums to integers.][76199]\n+- [You can now bind by reference and by move in patterns.][76119] This\n+  allows you to selectively borrow individual components of a type. E.g.\n+  ```rust\n+  #[derive(Debug)]\n+  struct Person {\n+      name: String,\n+      age: u8,\n+  }\n+\n+  let person = Person {\n+      name: String::from(\"Alice\"),\n+      age: 20,\n+  };\n+\n+  // `name` is moved out of person, but `age` is referenced.\n+  let Person { name, ref age } = person;\n+  println!(\"{} {}\", name, age);\n+  ```\n+\n+Compiler\n+-----------------------\n+\n+- [Added tier 1\\* support for `aarch64-unknown-linux-gnu`.][78228]\n+- [Added tier 2 support for `aarch64-apple-darwin`.][75991]\n+- [Added tier 2 support for `aarch64-pc-windows-msvc`.][75914]\n+- [Added tier 3 support for `mipsel-unknown-none`.][78676]\n+- [Raised the minimum supported LLVM version to LLVM 9.][78848]\n+- [Output from threads spawned in tests is now captured.][78227]\n+- [Change os and vendor values to \"none\" and \"unknown\" for some targets][78951]\n+\n+\\* Refer to Rust's [platform support page][forge-platform-support] for more\n+information on Rust's tiered platform support.\n+\n+Libraries\n+-----------------------\n+\n+- [`RangeInclusive` now checks for exhaustion when calling `contains` and indexing.][78109]\n+- [`ToString::to_string` now no longer shrinks the internal buffer in the default implementation.][77997]\n+- [`ops::{Index, IndexMut}` are now implemented for fixed sized arrays of any length.][74989]\n+\n+Stabilized APIs\n+---------------\n+\n+- [`slice::select_nth_unstable`]\n+- [`slice::select_nth_unstable_by`]\n+- [`slice::select_nth_unstable_by_key`]\n+\n+The following previously stable methods are now `const`.\n+\n+- [`Poll::is_ready`]\n+- [`Poll::is_pending`]\n+\n+Cargo\n+-----------------------\n+- [Building a crate with `cargo-package` should now be independently reproducible.][cargo/8864]\n+- [`cargo-tree` now marks proc-macro crates.][cargo/8765]\n+- [Added `CARGO_PRIMARY_PACKAGE` build-time environment variable.][cargo/8758] This\n+  variable will be set if the crate being built is one the user selected to build, either\n+  with `-p` or through defaults.\n+- [You can now use glob patterns when specifying packages & targets.][cargo/8752]\n+\n+\n+Compatibility Notes\n+-------------------\n+\n+- [Demoted `i686-unknown-freebsd` from host tier 2 to target tier 2 support.][78746]\n+- [Macros that end with a semi-colon are now treated as statements even if they expand to nothing.][78376]\n+- [Rustc will now check for the validity of some built-in attributes on enum variants.][77015]\n+  Previously such invalid or unused attributes could be ignored.\n+- Leading whitespace is stripped more uniformly in documentation comments, which may change behavior. You\n+  read [this post about the changes][rustdoc-ws-post] for more details.\n+- [Trait bounds are no longer inferred for associated types.][79904]\n+\n+Internal Only\n+-------------\n+These changes provide no direct user facing benefits, but represent significant\n+improvements to the internals and overall performance of rustc and\n+related tools.\n+\n+- [rustc's internal crates are now compiled using the `initial-exec` Thread\n+  Local Storage model.][78201]\n+- [Calculate visibilities once in resolve.][78077]\n+- [Added `system` to the `llvm-libunwind` bootstrap config option.][77703]\n+- [Added `--color` for configuring terminal color support to bootstrap.][79004]\n+\n+\n+[75991]: https://github.com/rust-lang/rust/pull/75991\n+[78951]: https://github.com/rust-lang/rust/pull/78951\n+[78848]: https://github.com/rust-lang/rust/pull/78848\n+[78746]: https://github.com/rust-lang/rust/pull/78746\n+[78376]: https://github.com/rust-lang/rust/pull/78376\n+[78228]: https://github.com/rust-lang/rust/pull/78228\n+[78227]: https://github.com/rust-lang/rust/pull/78227\n+[78201]: https://github.com/rust-lang/rust/pull/78201\n+[78109]: https://github.com/rust-lang/rust/pull/78109\n+[78077]: https://github.com/rust-lang/rust/pull/78077\n+[77997]: https://github.com/rust-lang/rust/pull/77997\n+[77703]: https://github.com/rust-lang/rust/pull/77703\n+[77547]: https://github.com/rust-lang/rust/pull/77547\n+[77015]: https://github.com/rust-lang/rust/pull/77015\n+[76199]: https://github.com/rust-lang/rust/pull/76199\n+[76119]: https://github.com/rust-lang/rust/pull/76119\n+[75914]: https://github.com/rust-lang/rust/pull/75914\n+[74989]: https://github.com/rust-lang/rust/pull/74989\n+[79004]: https://github.com/rust-lang/rust/pull/79004\n+[78676]: https://github.com/rust-lang/rust/pull/78676\n+[79904]: https://github.com/rust-lang/rust/issues/79904\n+[cargo/8864]: https://github.com/rust-lang/cargo/pull/8864\n+[cargo/8765]: https://github.com/rust-lang/cargo/pull/8765\n+[cargo/8758]: https://github.com/rust-lang/cargo/pull/8758\n+[cargo/8752]: https://github.com/rust-lang/cargo/pull/8752\n+[`slice::select_nth_unstable`]: https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.select_nth_unstable\n+[`slice::select_nth_unstable_by`]: https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.select_nth_unstable_by\n+[`slice::select_nth_unstable_by_key`]: https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.select_nth_unstable_by_key\n+[`hint::spin_loop`]: https://doc.rust-lang.org/stable/std/hint/fn.spin_loop.html\n+[`Poll::is_ready`]: https://doc.rust-lang.org/stable/std/task/enum.Poll.html#method.is_ready\n+[`Poll::is_pending`]: https://doc.rust-lang.org/stable/std/task/enum.Poll.html#method.is_pending\n+[rustdoc-ws-post]: https://blog.guillaume-gomez.fr/articles/2020-11-11+New+doc+comment+handling+in+rustdoc\n+\n Version 1.48.0 (2020-11-19)\n ==========================\n \n@@ -10,7 +138,7 @@ Language\n Compiler\n --------\n - [Stabilised the `-C link-self-contained=<yes|no>` compiler flag.][76158] This tells\n-  `rustc` whether to link its own C runtime and libraries or to rely on a external \n+  `rustc` whether to link its own C runtime and libraries or to rely on a external\n   linker to find them. (Supported only on `windows-gnu`, `linux-musl`, and `wasi` platforms.)\n - [You can now use `-C target-feature=+crt-static` on `linux-gnu` targets.][77386]\n   Note: If you're using cargo you must explicitly pass the `--target` flag.\n@@ -82,7 +210,7 @@ Compatibility Notes\n - [Foreign exceptions are now caught by `catch_unwind` and will cause an abort.][70212]\n   Note: This behaviour is not guaranteed and is still considered undefined behaviour,\n   see the [`catch_unwind`] documentation for further information.\n-  \n+\n \n \n Internal Only\n@@ -102,7 +230,7 @@ related tools.\n [76030]: https://github.com/rust-lang/rust/pull/76030/\n [70212]: https://github.com/rust-lang/rust/pull/70212/\n [27675]: https://github.com/rust-lang/rust/issues/27675/\n-[54121]: https://github.com/rust-lang/rust/issues/54121/  \n+[54121]: https://github.com/rust-lang/rust/issues/54121/\n [71274]: https://github.com/rust-lang/rust/pull/71274/\n [77386]: https://github.com/rust-lang/rust/pull/77386/\n [77153]: https://github.com/rust-lang/rust/pull/77153/"}]}