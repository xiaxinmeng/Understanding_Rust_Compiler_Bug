{"sha": "84f1d73182f4882518d5eef067b18b49b49e985a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0ZjFkNzMxODJmNDg4MjUxOGQ1ZWVmMDY3YjE4YjQ5YjQ5ZTk4NWE=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-06-18T08:06:57Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-06-19T16:13:42Z"}, "message": "Tidy got confused on `rustc_const_unstable` `issue`s", "tree": {"sha": "3aa89515de8eb82154ccaecb6953fb199bd8f8a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3aa89515de8eb82154ccaecb6953fb199bd8f8a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84f1d73182f4882518d5eef067b18b49b49e985a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84f1d73182f4882518d5eef067b18b49b49e985a", "html_url": "https://github.com/rust-lang/rust/commit/84f1d73182f4882518d5eef067b18b49b49e985a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84f1d73182f4882518d5eef067b18b49b49e985a/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e09b62033926dff8bfedca35b93e0dfbf767749f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e09b62033926dff8bfedca35b93e0dfbf767749f", "html_url": "https://github.com/rust-lang/rust/commit/e09b62033926dff8bfedca35b93e0dfbf767749f"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "2b34e980282325fe46eb5c531880ebc281ba6034", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/84f1d73182f4882518d5eef067b18b49b49e985a/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f1d73182f4882518d5eef067b18b49b49e985a/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=84f1d73182f4882518d5eef067b18b49b49e985a", "patch": "@@ -11,7 +11,7 @@\n //! In order to make an intrinsic usable at compile-time, one needs to copy the implementation\n //! from https://github.com/rust-lang/miri/blob/master/src/shims/intrinsics.rs to\n //! `librustc_mir/interpret/intrinsics.rs` and add a\n-//! `#[rustc_const_unstable(feature = \"foo\", issue = \"01234\")]` to the intrinsic.\n+//! `#[rustc_const_unstable(feature = \"foo2\", issue = \"01234\")]` to the intrinsic.\n //!\n //! If an intrinsic is supposed to be used from a `const fn` with a `rustc_const_stable` attribute,\n //! the intrinsic's attribute must be `rustc_const_stable`, too. Such a change should not be done\n@@ -1012,7 +1012,7 @@ extern \"rust-intrinsic\" {\n     ///\n     /// The stabilized version of this intrinsic is\n     /// [`std::any::type_name`](../../std/any/fn.type_name.html)\n-    #[rustc_const_unstable(feature = \"const_type_name\", issue = \"none\")]\n+    #[rustc_const_unstable(feature = \"const_type_name\", issue = \"63084\")]\n     pub fn type_name<T: ?Sized>() -> &'static str;\n \n     /// Gets an identifier which is globally unique to the specified type. This\n@@ -1021,7 +1021,7 @@ extern \"rust-intrinsic\" {\n     ///\n     /// The stabilized version of this intrinsic is\n     /// [`std::any::TypeId::of`](../../std/any/struct.TypeId.html#method.of)\n-    #[rustc_const_unstable(feature = \"const_type_id\", issue = \"none\")]\n+    #[rustc_const_unstable(feature = \"const_type_id\", issue = \"41875\")]\n     pub fn type_id<T: ?Sized + 'static>() -> u64;\n \n     /// A guard for unsafe functions that cannot ever be executed if `T` is uninhabited:\n@@ -1931,7 +1931,7 @@ extern \"rust-intrinsic\" {\n     pub fn nontemporal_store<T>(ptr: *mut T, val: T);\n \n     /// See documentation of `<*const T>::offset_from` for details.\n-    #[rustc_const_unstable(feature = \"const_ptr_offset_from\", issue = \"none\")]\n+    #[rustc_const_unstable(feature = \"const_ptr_offset_from\", issue = \"41079\")]\n     pub fn ptr_offset_from<T>(ptr: *const T, base: *const T) -> isize;\n \n     /// Internal hook used by Miri to implement unwinding."}, {"sha": "3fa637b5a696f4824b2b42d60d21ebc40eb973ef", "filename": "src/tools/tidy/src/features.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/84f1d73182f4882518d5eef067b18b49b49e985a/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f1d73182f4882518d5eef067b18b49b49e985a/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs?ref=84f1d73182f4882518d5eef067b18b49b49e985a", "patch": "@@ -444,10 +444,7 @@ fn map_lib_features(\n                         level: Status::Unstable,\n                         since: None,\n                         has_gate_test: false,\n-                        // FIXME(#57563): #57563 is now used as a common tracking issue,\n-                        // although we would like to have specific tracking issues for each\n-                        // `rustc_const_unstable` in the future.\n-                        tracking_issue: NonZeroU32::new(57563),\n+                        tracking_issue: find_attr_val(line, \"issue\").and_then(handle_issue_none),\n                     };\n                     mf(Ok((feature_name, feature)), file, i + 1);\n                     continue;"}]}