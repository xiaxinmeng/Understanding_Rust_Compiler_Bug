{"sha": "153e4dc38ac120ca9630050e2109cc636d2a2d28", "node_id": "C_kwDOAAsO6NoAKDE1M2U0ZGMzOGFjMTIwY2E5NjMwMDUwZTIxMDljYzYzNmQyYTJkMjg", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-11-18T17:22:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-18T17:22:55Z"}, "message": "Rollup merge of #90438 - GuillaumeGomez:doc-show-coverage, r=camelid\n\nClean up mess for --show-coverage documentation\n\nIt was somewhat duplicated for some reasons... Anyway, this remove this duplication and clean up a bit.\n\nr? ```@camelid```", "tree": {"sha": "d3a49633de4c25c2da110f0b05f05eea48326ada", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3a49633de4c25c2da110f0b05f05eea48326ada"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/153e4dc38ac120ca9630050e2109cc636d2a2d28", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhlovvCRBK7hj4Ov3rIwAAkk4IABQuViC+X5+qg8LFOMm7x6wH\nYU0BLmKT3O7aYrcaOtVWFJrFUMN+9rRZcVG0q6GsJDNdq5RRhKCArFNo80HmEeTj\nGQG7HyXFggukXdLbRqQ3yIXYseM57+it4A6bY3Zlc0LMhaDw/Q2lWVTYk0p1fgRv\n63Jl8AE4ymX9Bb+rn4H3u9CXj6hqF4vwF+X8pdbBhY/ZwnRE8oNjxKDe3x6oqh36\nGWXG9yUMaHZjT8JsUXrZPf7r1o0+/Wzd5hL5dJLy9Uv6H/0+ox4G+m5D/eBf2Ehe\nRjB8063glTjZc0xuwbtSsyvQA/463x/kT4WE9jIxWKvPknift+PFsNrvTNUTRSs=\n=TZZe\n-----END PGP SIGNATURE-----\n", "payload": "tree d3a49633de4c25c2da110f0b05f05eea48326ada\nparent 728b3f235656623082f558f38ede29e0f8be43d9\nparent 530eaa8b255250bef00f75c51175887cfbe09e13\nauthor Yuki Okushi <jtitor@2k36.org> 1637256175 +0900\ncommitter GitHub <noreply@github.com> 1637256175 +0900\n\nRollup merge of #90438 - GuillaumeGomez:doc-show-coverage, r=camelid\n\nClean up mess for --show-coverage documentation\n\nIt was somewhat duplicated for some reasons... Anyway, this remove this duplication and clean up a bit.\n\nr? ```@camelid```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/153e4dc38ac120ca9630050e2109cc636d2a2d28", "html_url": "https://github.com/rust-lang/rust/commit/153e4dc38ac120ca9630050e2109cc636d2a2d28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/153e4dc38ac120ca9630050e2109cc636d2a2d28/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "728b3f235656623082f558f38ede29e0f8be43d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/728b3f235656623082f558f38ede29e0f8be43d9", "html_url": "https://github.com/rust-lang/rust/commit/728b3f235656623082f558f38ede29e0f8be43d9"}, {"sha": "530eaa8b255250bef00f75c51175887cfbe09e13", "url": "https://api.github.com/repos/rust-lang/rust/commits/530eaa8b255250bef00f75c51175887cfbe09e13", "html_url": "https://github.com/rust-lang/rust/commit/530eaa8b255250bef00f75c51175887cfbe09e13"}], "stats": {"total": 73, "additions": 33, "deletions": 40}, "files": [{"sha": "16532215c6f334603321432241821e37d2ec2b00", "filename": "src/doc/rustdoc/src/unstable-features.md", "status": "modified", "additions": 33, "deletions": 40, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/153e4dc38ac120ca9630050e2109cc636d2a2d28/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/153e4dc38ac120ca9630050e2109cc636d2a2d28/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md?ref=153e4dc38ac120ca9630050e2109cc636d2a2d28", "patch": "@@ -348,6 +348,18 @@ Using this flag looks like this:\n $ rustdoc src/lib.rs -Z unstable-options --show-coverage\n ```\n \n+It generates something like this:\n+\n+```bash\n++-------------------------------------+------------+------------+------------+------------+\n+| File                                | Documented | Percentage |   Examples | Percentage |\n++-------------------------------------+------------+------------+------------+------------+\n+| lib.rs                              |          4 |     100.0% |          1 |      25.0% |\n++-------------------------------------+------------+------------+------------+------------+\n+| Total                               |          4 |     100.0% |          1 |      25.0% |\n++-------------------------------------+------------+------------+------------+------------+\n+```\n+\n If you want to determine how many items in your crate are documented, pass this flag to rustdoc.\n When it receives this flag, it will count the public items in your crate that have documentation,\n and print out the counts and a percentage instead of generating docs.\n@@ -367,17 +379,25 @@ Some methodology notes about what rustdoc counts in this metric:\n Public items that are not documented can be seen with the built-in `missing_docs` lint. Private\n items that are not documented can be seen with Clippy's `missing_docs_in_private_items` lint.\n \n-### `-w`/`--output-format`: output format\n+Calculating code examples follows these rules:\n \n-When using\n-[`--show-coverage`](https://doc.rust-lang.org/nightly/rustdoc/unstable-features.html#--show-coverage-get-statistics-about-code-documentation-coverage),\n-passing `--output-format json` will display the coverage information in JSON format. For example,\n-here is the JSON for a file with one documented item and one undocumented item:\n+1. These items aren't accounted by default:\n+  * struct/union field\n+  * enum variant\n+  * constant\n+  * static\n+  * typedef\n+2. If one of the previously listed items has a code example, then it'll be counted.\n+\n+#### JSON output\n+\n+When using `--output-format json` with this option, it will display the coverage information in\n+JSON format. For example, here is the JSON for a file with one documented item and one\n+undocumented item:\n \n ```rust\n /// This item has documentation\n pub fn foo() {}\n-\n pub fn no_documentation() {}\n ```\n \n@@ -387,10 +407,16 @@ pub fn no_documentation() {}\n \n Note that the third item is the crate root, which in this case is undocumented.\n \n-When not using `--show-coverage`, `--output-format json` emits documentation in the experimental\n+### `-w`/`--output-format`: output format\n+\n+`--output-format json` emits documentation in the experimental\n [JSON format](https://github.com/rust-lang/rfcs/pull/2963). `--output-format html` has no effect,\n and is also accepted on stable toolchains.\n \n+It can also be used with `--show-coverage`. Take a look at its\n+[documentation](#--show-coverage-get-statistics-about-code-documentation-coverage) for more\n+information.\n+\n ### `--enable-per-target-ignores`: allow `ignore-foo` style filters for doctests\n \n Using this flag looks like this:\n@@ -441,39 +467,6 @@ $ rustdoc src/lib.rs -Z unstable-options --runtool valgrind\n \n Another use case would be to run a test inside an emulator, or through a Virtual Machine.\n \n-### `--show-coverage`: get statistics about code documentation coverage\n-\n-This option allows you to get a nice overview over your code documentation coverage, including both\n-doc-comments and code examples in the doc-comments. Example:\n-\n-```bash\n-$ rustdoc src/lib.rs -Z unstable-options --show-coverage\n-+-------------------------------------+------------+------------+------------+------------+\n-| File                                | Documented | Percentage |   Examples | Percentage |\n-+-------------------------------------+------------+------------+------------+------------+\n-| lib.rs                              |          4 |     100.0% |          1 |      25.0% |\n-+-------------------------------------+------------+------------+------------+------------+\n-| Total                               |          4 |     100.0% |          1 |      25.0% |\n-+-------------------------------------+------------+------------+------------+------------+\n-```\n-\n-You can also use this option with the `--output-format` one:\n-\n-```bash\n-$ rustdoc src/lib.rs -Z unstable-options --show-coverage --output-format json\n-{\"lib.rs\":{\"total\":4,\"with_docs\":4,\"total_examples\":4,\"with_examples\":1}}\n-```\n-\n-Calculating code examples follows these rules:\n-\n-1. These items aren't accounted by default:\n-  * struct/union field\n-  * enum variant\n-  * constant\n-  * static\n-  * typedef\n-2. If one of the previously listed items has a code example, then it'll be counted.\n-\n ### `--with-examples`: include examples of uses of items as documentation\n \n This option, combined with `--scrape-examples-target-crate` and"}]}