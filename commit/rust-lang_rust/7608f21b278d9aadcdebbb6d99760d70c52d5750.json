{"sha": "7608f21b278d9aadcdebbb6d99760d70c52d5750", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2MDhmMjFiMjc4ZDlhYWRjZGViYmI2ZDk5NzYwZDcwYzUyZDU3NTA=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-12-29T16:42:23Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-12-30T16:18:18Z"}, "message": "Rename `rustc_resolve/resolve_imports.rs` -> `rustc_resolve/imports.rs`", "tree": {"sha": "bdca5be3161d2625b6a4f125256927748484070b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdca5be3161d2625b6a4f125256927748484070b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7608f21b278d9aadcdebbb6d99760d70c52d5750", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7608f21b278d9aadcdebbb6d99760d70c52d5750", "html_url": "https://github.com/rust-lang/rust/commit/7608f21b278d9aadcdebbb6d99760d70c52d5750", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7608f21b278d9aadcdebbb6d99760d70c52d5750/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2823e3af6fd8bce53419e9945b7f7c63b267789", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2823e3af6fd8bce53419e9945b7f7c63b267789", "html_url": "https://github.com/rust-lang/rust/commit/a2823e3af6fd8bce53419e9945b7f7c63b267789"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "388b00e9911b1ff5d6e4f17789fd894f64589a30", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7608f21b278d9aadcdebbb6d99760d70c52d5750/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7608f21b278d9aadcdebbb6d99760d70c52d5750/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=7608f21b278d9aadcdebbb6d99760d70c52d5750", "patch": "@@ -6,9 +6,9 @@\n //! Imports are also considered items and placed into modules here, but not resolved yet.\n \n use crate::def_collector::collect_definitions;\n+use crate::imports::ImportDirective;\n+use crate::imports::ImportDirectiveSubclass::{self, GlobImport, SingleImport};\n use crate::macros::{LegacyBinding, LegacyScope};\n-use crate::resolve_imports::ImportDirective;\n-use crate::resolve_imports::ImportDirectiveSubclass::{self, GlobImport, SingleImport};\n use crate::Namespace::{self, MacroNS, TypeNS, ValueNS};\n use crate::{CrateLint, Determinacy, PathResult, ResolutionError, VisResolutionError};\n use crate::{"}, {"sha": "93217aa147713322f8a1539d01043534526e9d6f", "filename": "src/librustc_resolve/check_unused.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7608f21b278d9aadcdebbb6d99760d70c52d5750/src%2Flibrustc_resolve%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7608f21b278d9aadcdebbb6d99760d70c52d5750/src%2Flibrustc_resolve%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fcheck_unused.rs?ref=7608f21b278d9aadcdebbb6d99760d70c52d5750", "patch": "@@ -23,7 +23,7 @@\n //  - `check_crate` finally emits the diagnostics based on the data generated\n //    in the last step\n \n-use crate::resolve_imports::ImportDirectiveSubclass;\n+use crate::imports::ImportDirectiveSubclass;\n use crate::Resolver;\n \n use errors::pluralize;"}, {"sha": "82b9e5347b7a70442ac6bb85c5b1e06416c6bfc2", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7608f21b278d9aadcdebbb6d99760d70c52d5750/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7608f21b278d9aadcdebbb6d99760d70c52d5750/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=7608f21b278d9aadcdebbb6d99760d70c52d5750", "patch": "@@ -19,8 +19,8 @@ use syntax::util::lev_distance::find_best_match_for_name;\n use syntax_pos::hygiene::MacroKind;\n use syntax_pos::{BytePos, MultiSpan, Span};\n \n+use crate::imports::{ImportDirective, ImportDirectiveSubclass, ImportResolver};\n use crate::path_names_to_string;\n-use crate::resolve_imports::{ImportDirective, ImportDirectiveSubclass, ImportResolver};\n use crate::VisResolutionError;\n use crate::{BindingError, CrateLint, HasGenericParams, LegacyScope, Module, ModuleOrUniformRoot};\n use crate::{ParentScope, PathResult, ResolutionError, Resolver, Scope, ScopeSet, Segment};"}, {"sha": "afbfb647b3cacbdf720d5fe95834b26583fa5a85", "filename": "src/librustc_resolve/imports.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/7608f21b278d9aadcdebbb6d99760d70c52d5750/src%2Flibrustc_resolve%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7608f21b278d9aadcdebbb6d99760d70c52d5750/src%2Flibrustc_resolve%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fimports.rs?ref=7608f21b278d9aadcdebbb6d99760d70c52d5750", "previous_filename": "src/librustc_resolve/resolve_imports.rs"}, {"sha": "ae0a9255497e90f06b085ba1a7b8befcb6c2c707", "filename": "src/librustc_resolve/late.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7608f21b278d9aadcdebbb6d99760d70c52d5750/src%2Flibrustc_resolve%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7608f21b278d9aadcdebbb6d99760d70c52d5750/src%2Flibrustc_resolve%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate.rs?ref=7608f21b278d9aadcdebbb6d99760d70c52d5750", "patch": "@@ -3,7 +3,7 @@\n //! So it just walks through the crate and resolves all the expressions, types, etc.\n //!\n //! If you wonder why there's no `early.rs`, that's because it's split into three files -\n-//! `build_reduced_graph.rs`, `macros.rs` and `resolve_imports.rs`.\n+//! `build_reduced_graph.rs`, `macros.rs` and `imports.rs`.\n \n use RibKind::*;\n "}, {"sha": "357176ae090ca053d4e0e108847c4a1734ebf706", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7608f21b278d9aadcdebbb6d99760d70c52d5750/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7608f21b278d9aadcdebbb6d99760d70c52d5750/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=7608f21b278d9aadcdebbb6d99760d70c52d5750", "patch": "@@ -60,9 +60,9 @@ use std::{cmp, fmt, iter, ptr};\n \n use diagnostics::{extend_span_to_previous_binding, find_span_of_binding_until_next_binding};\n use diagnostics::{ImportSuggestion, Suggestion};\n+use imports::{ImportDirective, ImportDirectiveSubclass, ImportResolver, NameResolution};\n use late::{HasGenericParams, PathSource, Rib, RibKind::*};\n use macros::{LegacyBinding, LegacyScope};\n-use resolve_imports::{ImportDirective, ImportDirectiveSubclass, ImportResolver, NameResolution};\n \n use rustc_error_codes::*;\n \n@@ -72,9 +72,9 @@ mod build_reduced_graph;\n mod check_unused;\n mod def_collector;\n mod diagnostics;\n+mod imports;\n mod late;\n mod macros;\n-mod resolve_imports;\n \n enum Weak {\n     Yes,"}, {"sha": "d9c3cf0f5f056f29858c53af4e08a07ee1fed41a", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7608f21b278d9aadcdebbb6d99760d70c52d5750/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7608f21b278d9aadcdebbb6d99760d70c52d5750/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=7608f21b278d9aadcdebbb6d99760d70c52d5750", "patch": "@@ -1,7 +1,7 @@\n //! A bunch of methods and structures more or less related to resolving macros and\n //! interface provided by `Resolver` to macro expander.\n \n-use crate::resolve_imports::ImportResolver;\n+use crate::imports::ImportResolver;\n use crate::Namespace::*;\n use crate::{AmbiguityError, AmbiguityErrorMisc, AmbiguityKind, Determinacy};\n use crate::{CrateLint, ParentScope, ResolutionError, Resolver, Scope, ScopeSet, Weak};"}]}