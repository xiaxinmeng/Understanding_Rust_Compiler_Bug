{"sha": "cd2e621c60b897a2f37fab36bc357da30aa9cc54", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkMmU2MjFjNjBiODk3YTJmMzdmYWIzNmJjMzU3ZGEzMGFhOWNjNTQ=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-05-26T11:52:40Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-05-26T11:52:40Z"}, "message": "made in_macro distinguish intra-crate and extra-crate macros, as the latter have no working source (note: may fail in the face of compiler plugins doing whatever they like with spans), also one more run-pass test", "tree": {"sha": "362d02adc16e1e77c291a2494e05e1df8f91aee9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/362d02adc16e1e77c291a2494e05e1df8f91aee9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd2e621c60b897a2f37fab36bc357da30aa9cc54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd2e621c60b897a2f37fab36bc357da30aa9cc54", "html_url": "https://github.com/rust-lang/rust/commit/cd2e621c60b897a2f37fab36bc357da30aa9cc54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd2e621c60b897a2f37fab36bc357da30aa9cc54/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d651c72ff4c8833046dbdad0049893fbc57bef2", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d651c72ff4c8833046dbdad0049893fbc57bef2", "html_url": "https://github.com/rust-lang/rust/commit/0d651c72ff4c8833046dbdad0049893fbc57bef2"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "e1308fb9cb894a901b5f73ec8e056faa11ccf47e", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cd2e621c60b897a2f37fab36bc357da30aa9cc54/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/cd2e621c60b897a2f37fab36bc357da30aa9cc54/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=cd2e621c60b897a2f37fab36bc357da30aa9cc54", "patch": "@@ -19,3 +19,4 @@ plugin = true\n compiletest_rs = \"*\"\n regex = \"*\"\n regex_macros = \"*\"\n+lazy_static = \"*\""}, {"sha": "a4c2d3932a3f03b3e7153e2380036b15f7bad8b7", "filename": "src/mut_mut.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cd2e621c60b897a2f37fab36bc357da30aa9cc54/src%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd2e621c60b897a2f37fab36bc357da30aa9cc54/src%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmut_mut.rs?ref=cd2e621c60b897a2f37fab36bc357da30aa9cc54", "patch": "@@ -2,7 +2,7 @@ use syntax::ptr::P;\n use syntax::ast::*;\n use rustc::lint::{Context, LintPass, LintArray, Lint};\n use rustc::middle::ty::{expr_ty, sty, ty_ptr, ty_rptr, mt};\n-use syntax::codemap::ExpnInfo;\n+use syntax::codemap::{BytePos, ExpnInfo, MacroFormat, Span};\n \n declare_lint!(pub MUT_MUT, Warn,\n               \"Warn on usage of double-mut refs, e.g. '&mut &mut ...'\");\n@@ -27,7 +27,7 @@ impl LintPass for MutMut {\n }\n \n fn check_expr_expd(cx: &Context, expr: &Expr, info: Option<&ExpnInfo>) {\n-\tif in_macro(info) { return; }\n+\tif in_macro(cx, info) { return; }\n \n \tfn unwrap_addr(expr : &Expr) -> Option<&Expr> {\n \t\tmatch expr.node {\n@@ -51,8 +51,14 @@ fn check_expr_expd(cx: &Context, expr: &Expr, info: Option<&ExpnInfo>) {\n \t})\n }\n \n-fn in_macro(info: Option<&ExpnInfo>) -> bool {\n-\tinfo.is_some()\n+fn in_macro(cx: &Context, opt_info: Option<&ExpnInfo>) -> bool {\n+\topt_info.map_or(false, |info| {\n+\t\tinfo.callee.span.map_or(true, |span| {\n+\t\t\tcx.sess().codemap().span_to_snippet(span).ok().map_or(true, |code| \n+\t\t\t\t!code.starts_with(\"macro_rules\")\n+\t\t\t)\n+\t\t})\n+\t})\n }\n \n fn unwrap_mut(ty : &Ty) -> Option<&Ty> {"}, {"sha": "32fdea3a3402f0f6774f1c1f6122760336ac25d2", "filename": "tests/run-pass.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/cd2e621c60b897a2f37fab36bc357da30aa9cc54/tests%2Frun-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd2e621c60b897a2f37fab36bc357da30aa9cc54/tests%2Frun-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass.rs?ref=cd2e621c60b897a2f37fab36bc357da30aa9cc54", "patch": "@@ -1,11 +1,31 @@\n #![feature(plugin)]\n #![plugin(clippy, regex_macros)]\n \n+#[macro_use]\n+extern crate lazy_static;\n extern crate regex;\n \n+use std::collections::HashMap;\n+\n #[test]\n #[deny(mut_mut)]\n fn test_regex() {\n \tlet pattern = regex!(r\"^(?P<level>[#]+)\\s(?P<title>.+)$\");\n \tassert!(pattern.is_match(\"# headline\"));\n }\n+\n+#[test]\n+#[deny(mut_mut)]\n+#[allow(unused_variables, unused_mut)]\n+fn test_lazy_static() {\n+\tlazy_static! {\n+\t\tstatic ref MUT_MAP : HashMap<usize, &'static str> = {\n+\t\t\tlet mut m = HashMap::new();\n+\t\t\tlet mut zero = &mut &mut \"zero\";\n+\t\t\tm.insert(0, \"zero\");\n+\t\t\tm\n+\t\t};\n+\t\tstatic ref MUT_COUNT : usize = MUT_MAP.len();\n+\t}\n+\tassert!(*MUT_COUNT == 1);\n+}"}]}