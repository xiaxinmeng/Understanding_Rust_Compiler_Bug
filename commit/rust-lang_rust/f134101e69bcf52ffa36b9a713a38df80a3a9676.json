{"sha": "f134101e69bcf52ffa36b9a713a38df80a3a9676", "node_id": "C_kwDOAAsO6NoAKGYxMzQxMDFlNjliY2Y1MmZmYTM2YjlhNzEzYTM4ZGY4MGEzYTk2NzY", "commit": {"author": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2023-06-14T20:04:51Z"}, "committer": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2023-06-14T23:01:36Z"}, "message": "remove unused postorder CFG cache", "tree": {"sha": "467cc3f0f67d2342a807777a68c3c7de080ffd57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/467cc3f0f67d2342a807777a68c3c7de080ffd57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f134101e69bcf52ffa36b9a713a38df80a3a9676", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f134101e69bcf52ffa36b9a713a38df80a3a9676", "html_url": "https://github.com/rust-lang/rust/commit/f134101e69bcf52ffa36b9a713a38df80a3a9676", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f134101e69bcf52ffa36b9a713a38df80a3a9676/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b4b0869a7968a2612c9bd93019a021ce168c557", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b4b0869a7968a2612c9bd93019a021ce168c557", "html_url": "https://github.com/rust-lang/rust/commit/0b4b0869a7968a2612c9bd93019a021ce168c557"}], "stats": {"total": 9, "additions": 0, "deletions": 9}, "files": [{"sha": "7722e7b47cffa756dd1e9429646dea94ef5ab59e", "filename": "compiler/rustc_middle/src/mir/basic_blocks.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f134101e69bcf52ffa36b9a713a38df80a3a9676/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fbasic_blocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f134101e69bcf52ffa36b9a713a38df80a3a9676/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fbasic_blocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fbasic_blocks.rs?ref=f134101e69bcf52ffa36b9a713a38df80a3a9676", "patch": "@@ -26,7 +26,6 @@ struct Cache {\n     predecessors: OnceCell<Predecessors>,\n     switch_sources: OnceCell<SwitchSources>,\n     is_cyclic: OnceCell<bool>,\n-    postorder: OnceCell<Vec<BasicBlock>>,\n     reverse_postorder: OnceCell<Vec<BasicBlock>>,\n     dominators: OnceCell<Dominators<BasicBlock>>,\n }\n@@ -63,14 +62,6 @@ impl<'tcx> BasicBlocks<'tcx> {\n         })\n     }\n \n-    /// Returns basic blocks in a postorder.\n-    #[inline]\n-    pub fn postorder(&self) -> &[BasicBlock] {\n-        self.cache.postorder.get_or_init(|| {\n-            Postorder::new(&self.basic_blocks, START_BLOCK).map(|(bb, _)| bb).collect()\n-        })\n-    }\n-\n     /// Returns basic blocks in a reverse postorder.\n     #[inline]\n     pub fn reverse_postorder(&self) -> &[BasicBlock] {"}]}