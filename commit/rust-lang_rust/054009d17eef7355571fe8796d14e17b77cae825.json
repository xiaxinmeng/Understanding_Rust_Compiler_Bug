{"sha": "054009d17eef7355571fe8796d14e17b77cae825", "node_id": "C_kwDOAAsO6NoAKDA1NDAwOWQxN2VlZjczNTU1NzFmZTg3OTZkMTRlMTdiNzdjYWU4MjU", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2023-03-28T08:40:37Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2023-03-28T08:52:46Z"}, "message": "fix long line", "tree": {"sha": "6035e08a3e10bac817b1ce8786da964575d69146", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6035e08a3e10bac817b1ce8786da964575d69146"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/054009d17eef7355571fe8796d14e17b77cae825", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/054009d17eef7355571fe8796d14e17b77cae825", "html_url": "https://github.com/rust-lang/rust/commit/054009d17eef7355571fe8796d14e17b77cae825", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/054009d17eef7355571fe8796d14e17b77cae825/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b17e6680d668d136e643976c4079c7b1cac1b6b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/b17e6680d668d136e643976c4079c7b1cac1b6b4", "html_url": "https://github.com/rust-lang/rust/commit/b17e6680d668d136e643976c4079c7b1cac1b6b4"}], "stats": {"total": 48, "additions": 25, "deletions": 23}, "files": [{"sha": "bcdc80f82f82e792ad5427456e081ba68c9bc499", "filename": "tests/ui/rfc-2632-const-trait-impl/const-drop-fail-2.precise.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/054009d17eef7355571fe8796d14e17b77cae825/tests%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail-2.precise.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/054009d17eef7355571fe8796d14e17b77cae825/tests%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail-2.precise.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail-2.precise.stderr?ref=054009d17eef7355571fe8796d14e17b77cae825", "patch": "@@ -1,13 +1,13 @@\n error[E0277]: the trait bound `NonTrivialDrop: ~const A` is not satisfied\n   --> $DIR/const-drop-fail-2.rs:31:23\n    |\n-LL | const _: () = check::<ConstDropImplWithBounds<NonTrivialDrop>>(ConstDropImplWithBounds(PhantomData));\n+LL | const _: () = check::<ConstDropImplWithBounds<NonTrivialDrop>>(\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `~const A` is not implemented for `NonTrivialDrop`\n    |\n note: the trait `A` is implemented for `NonTrivialDrop`, but that implementation is not `const`\n   --> $DIR/const-drop-fail-2.rs:31:23\n    |\n-LL | const _: () = check::<ConstDropImplWithBounds<NonTrivialDrop>>(ConstDropImplWithBounds(PhantomData));\n+LL | const _: () = check::<ConstDropImplWithBounds<NonTrivialDrop>>(\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n note: required by a bound in `ConstDropImplWithBounds`\n   --> $DIR/const-drop-fail-2.rs:21:35\n@@ -16,30 +16,30 @@ LL | struct ConstDropImplWithBounds<T: ~const A>(PhantomData<T>);\n    |                                   ^^^^^^^^ required by this bound in `ConstDropImplWithBounds`\n \n error[E0277]: the trait bound `NonTrivialDrop: ~const A` is not satisfied\n-  --> $DIR/const-drop-fail-2.rs:31:64\n+  --> $DIR/const-drop-fail-2.rs:33:5\n    |\n-LL | const _: () = check::<ConstDropImplWithBounds<NonTrivialDrop>>(ConstDropImplWithBounds(PhantomData));\n-   |                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `~const A` is not implemented for `NonTrivialDrop`\n+LL |     ConstDropImplWithBounds(PhantomData)\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `~const A` is not implemented for `NonTrivialDrop`\n    |\n note: the trait `A` is implemented for `NonTrivialDrop`, but that implementation is not `const`\n-  --> $DIR/const-drop-fail-2.rs:31:64\n+  --> $DIR/const-drop-fail-2.rs:33:5\n    |\n-LL | const _: () = check::<ConstDropImplWithBounds<NonTrivialDrop>>(ConstDropImplWithBounds(PhantomData));\n-   |                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     ConstDropImplWithBounds(PhantomData)\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n note: required by a bound in `ConstDropImplWithBounds`\n   --> $DIR/const-drop-fail-2.rs:21:35\n    |\n LL | struct ConstDropImplWithBounds<T: ~const A>(PhantomData<T>);\n    |                                   ^^^^^^^^ required by this bound in `ConstDropImplWithBounds`\n \n error[E0367]: `Drop` impl requires `T: ~const A` but the struct it is implemented for does not\n-  --> $DIR/const-drop-fail-2.rs:37:9\n+  --> $DIR/const-drop-fail-2.rs:39:9\n    |\n LL | impl<T: ~const A> const Drop for ConstDropImplWithNonConstBounds<T> {\n    |         ^^^^^^^^\n    |\n note: the implementor must specify the same requirement\n-  --> $DIR/const-drop-fail-2.rs:35:1\n+  --> $DIR/const-drop-fail-2.rs:37:1\n    |\n LL | struct ConstDropImplWithNonConstBounds<T: A>(PhantomData<T>);\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "6a252c5d37bacfdd38200a3813c9160ab630bb22", "filename": "tests/ui/rfc-2632-const-trait-impl/const-drop-fail-2.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/054009d17eef7355571fe8796d14e17b77cae825/tests%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/054009d17eef7355571fe8796d14e17b77cae825/tests%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail-2.rs?ref=054009d17eef7355571fe8796d14e17b77cae825", "patch": "@@ -28,9 +28,11 @@ impl<T: ~const A> const Drop for ConstDropImplWithBounds<T> {\n \n const fn check<T: ~const Destruct>(_: T) {}\n \n-const _: () = check::<ConstDropImplWithBounds<NonTrivialDrop>>(ConstDropImplWithBounds(PhantomData));\n-//~^ ERROR the trait bound\n-//~| ERROR the trait bound\n+const _: () = check::<ConstDropImplWithBounds<NonTrivialDrop>>(\n+    //~^ ERROR the trait bound\n+    ConstDropImplWithBounds(PhantomData)\n+    //~^ ERROR the trait bound\n+);\n \n struct ConstDropImplWithNonConstBounds<T: A>(PhantomData<T>);\n "}, {"sha": "bcdc80f82f82e792ad5427456e081ba68c9bc499", "filename": "tests/ui/rfc-2632-const-trait-impl/const-drop-fail-2.stock.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/054009d17eef7355571fe8796d14e17b77cae825/tests%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail-2.stock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/054009d17eef7355571fe8796d14e17b77cae825/tests%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail-2.stock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail-2.stock.stderr?ref=054009d17eef7355571fe8796d14e17b77cae825", "patch": "@@ -1,13 +1,13 @@\n error[E0277]: the trait bound `NonTrivialDrop: ~const A` is not satisfied\n   --> $DIR/const-drop-fail-2.rs:31:23\n    |\n-LL | const _: () = check::<ConstDropImplWithBounds<NonTrivialDrop>>(ConstDropImplWithBounds(PhantomData));\n+LL | const _: () = check::<ConstDropImplWithBounds<NonTrivialDrop>>(\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `~const A` is not implemented for `NonTrivialDrop`\n    |\n note: the trait `A` is implemented for `NonTrivialDrop`, but that implementation is not `const`\n   --> $DIR/const-drop-fail-2.rs:31:23\n    |\n-LL | const _: () = check::<ConstDropImplWithBounds<NonTrivialDrop>>(ConstDropImplWithBounds(PhantomData));\n+LL | const _: () = check::<ConstDropImplWithBounds<NonTrivialDrop>>(\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n note: required by a bound in `ConstDropImplWithBounds`\n   --> $DIR/const-drop-fail-2.rs:21:35\n@@ -16,30 +16,30 @@ LL | struct ConstDropImplWithBounds<T: ~const A>(PhantomData<T>);\n    |                                   ^^^^^^^^ required by this bound in `ConstDropImplWithBounds`\n \n error[E0277]: the trait bound `NonTrivialDrop: ~const A` is not satisfied\n-  --> $DIR/const-drop-fail-2.rs:31:64\n+  --> $DIR/const-drop-fail-2.rs:33:5\n    |\n-LL | const _: () = check::<ConstDropImplWithBounds<NonTrivialDrop>>(ConstDropImplWithBounds(PhantomData));\n-   |                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `~const A` is not implemented for `NonTrivialDrop`\n+LL |     ConstDropImplWithBounds(PhantomData)\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `~const A` is not implemented for `NonTrivialDrop`\n    |\n note: the trait `A` is implemented for `NonTrivialDrop`, but that implementation is not `const`\n-  --> $DIR/const-drop-fail-2.rs:31:64\n+  --> $DIR/const-drop-fail-2.rs:33:5\n    |\n-LL | const _: () = check::<ConstDropImplWithBounds<NonTrivialDrop>>(ConstDropImplWithBounds(PhantomData));\n-   |                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     ConstDropImplWithBounds(PhantomData)\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n note: required by a bound in `ConstDropImplWithBounds`\n   --> $DIR/const-drop-fail-2.rs:21:35\n    |\n LL | struct ConstDropImplWithBounds<T: ~const A>(PhantomData<T>);\n    |                                   ^^^^^^^^ required by this bound in `ConstDropImplWithBounds`\n \n error[E0367]: `Drop` impl requires `T: ~const A` but the struct it is implemented for does not\n-  --> $DIR/const-drop-fail-2.rs:37:9\n+  --> $DIR/const-drop-fail-2.rs:39:9\n    |\n LL | impl<T: ~const A> const Drop for ConstDropImplWithNonConstBounds<T> {\n    |         ^^^^^^^^\n    |\n note: the implementor must specify the same requirement\n-  --> $DIR/const-drop-fail-2.rs:35:1\n+  --> $DIR/const-drop-fail-2.rs:37:1\n    |\n LL | struct ConstDropImplWithNonConstBounds<T: A>(PhantomData<T>);\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}]}