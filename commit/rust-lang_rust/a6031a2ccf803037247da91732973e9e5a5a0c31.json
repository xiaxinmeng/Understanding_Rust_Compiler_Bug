{"sha": "a6031a2ccf803037247da91732973e9e5a5a0c31", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2MDMxYTJjY2Y4MDMwMzcyNDdkYTkxNzMyOTczZTllNWE1YTBjMzE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-23T05:53:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-23T05:53:08Z"}, "message": "Auto merge of #46024 - estebank:no-variant, r=petrochenkov\n\nUse the proper term when using non-existing variant\n\nWhen using a non-existing variant, function or associated item, refer to\nthe proper term, instead of defaulting to \"associated item\" in\ndiagnostics.\n\nFix #28972.\n\n```\nerror[E0599]: no variant named `Quux` found for type `Foo` in the current scope\n --> file.rs:7:9\n  |\n7 |         Foo::Quux(..) =>(),\n  |         ^^^^^^^^^^^^^\n```", "tree": {"sha": "5a2bf5a0a186c3d4c826e4f0b9f6c9f06502d7ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a2bf5a0a186c3d4c826e4f0b9f6c9f06502d7ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6031a2ccf803037247da91732973e9e5a5a0c31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6031a2ccf803037247da91732973e9e5a5a0c31", "html_url": "https://github.com/rust-lang/rust/commit/a6031a2ccf803037247da91732973e9e5a5a0c31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6031a2ccf803037247da91732973e9e5a5a0c31/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10ef344d8c56563570a7647aa81e1586164f812b", "url": "https://api.github.com/repos/rust-lang/rust/commits/10ef344d8c56563570a7647aa81e1586164f812b", "html_url": "https://github.com/rust-lang/rust/commit/10ef344d8c56563570a7647aa81e1586164f812b"}, {"sha": "b450aff18689ea0d0695b4f5a59bb360ae549f87", "url": "https://api.github.com/repos/rust-lang/rust/commits/b450aff18689ea0d0695b4f5a59bb360ae549f87", "html_url": "https://github.com/rust-lang/rust/commit/b450aff18689ea0d0695b4f5a59bb360ae549f87"}], "stats": {"total": 209, "additions": 170, "deletions": 39}, "files": [{"sha": "85755c01d31027cf8e119f3ec04c14d1a8de4687", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=a6031a2ccf803037247da91732973e9e5a5a0c31", "patch": "@@ -1365,6 +1365,15 @@ impl<'a, 'gcx, 'tcx> TyS<'tcx> {\n         }\n     }\n \n+    pub fn is_enum(&self) -> bool {\n+        match self.sty {\n+            TyAdt(adt_def, _) => {\n+                adt_def.is_enum()\n+            }\n+            _ => false,\n+        }\n+    }\n+\n     pub fn is_closure(&self) -> bool {\n         match self.sty {\n             TyClosure(..) => true,\n@@ -1386,6 +1395,13 @@ impl<'a, 'gcx, 'tcx> TyS<'tcx> {\n         }\n     }\n \n+    pub fn is_fresh_ty(&self) -> bool {\n+        match self.sty {\n+            TyInfer(FreshTy(_)) => true,\n+            _ => false,\n+        }\n+    }\n+\n     pub fn is_fresh(&self) -> bool {\n         match self.sty {\n             TyInfer(FreshTy(_)) => true,"}, {"sha": "b3a7c32140b2ec452b51210fd84ee87ad5b3223a", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 52, "deletions": 28, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=a6031a2ccf803037247da91732973e9e5a5a0c31", "patch": "@@ -164,41 +164,63 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         };\n \n         match error {\n-            MethodError::NoMatch(NoMatchData { static_candidates: static_sources,\n-                                               unsatisfied_predicates,\n-                                               out_of_scope_traits,\n-                                               lev_candidate,\n-                                               mode,\n-                                               .. }) => {\n+            MethodError::NoMatch(NoMatchData {\n+                static_candidates: static_sources,\n+                unsatisfied_predicates,\n+                out_of_scope_traits,\n+                lev_candidate,\n+                mode,\n+                ..\n+            }) => {\n                 let tcx = self.tcx;\n \n                 let actual = self.resolve_type_vars_if_possible(&rcvr_ty);\n+                let ty_string = self.ty_to_string(actual);\n+                let is_method = mode == Mode::MethodCall;\n+                let type_str = if is_method {\n+                    \"method\"\n+                } else if actual.is_enum() {\n+                    \"variant\"\n+                } else {\n+                    match (item_name.as_str().chars().next(), actual.is_fresh_ty()) {\n+                        (Some(name), false) if name.is_lowercase() => {\n+                            \"function or associated item\"\n+                        }\n+                        (Some(_), false) => \"associated item\",\n+                        (Some(_), true) | (None, false) => {\n+                            \"variant or associated item\"\n+                        }\n+                        (None, true) => \"variant\",\n+                    }\n+                };\n                 let mut err = if !actual.references_error() {\n-                    struct_span_err!(tcx.sess, span, E0599,\n-                                     \"no {} named `{}` found for type `{}` in the \\\n-                                      current scope\",\n-                                     if mode == Mode::MethodCall {\n-                                         \"method\"\n-                                     } else {\n-                                         match item_name.as_str().chars().next() {\n-                                             Some(name) => {\n-                                                 if name.is_lowercase() {\n-                                                     \"function or associated item\"\n-                                                 } else {\n-                                                     \"associated item\"\n-                                                 }\n-                                             },\n-                                             None => {\n-                                                 \"\"\n-                                             },\n-                                         }\n-                                     },\n-                                     item_name,\n-                                     self.ty_to_string(actual))\n+                    struct_span_err!(\n+                        tcx.sess,\n+                        span,\n+                        E0599,\n+                        \"no {} named `{}` found for type `{}` in the current scope\",\n+                        type_str,\n+                        item_name,\n+                        ty_string\n+                    )\n                 } else {\n-                    self.tcx.sess.diagnostic().struct_dummy()\n+                    tcx.sess.diagnostic().struct_dummy()\n                 };\n \n+                if let Some(def) =  actual.ty_adt_def() {\n+                    if let Some(full_sp) = tcx.hir.span_if_local(def.did) {\n+                        let def_sp = tcx.sess.codemap().def_span(full_sp);\n+                        err.span_label(def_sp, format!(\"{} `{}` not found {}\",\n+                                                       type_str,\n+                                                       item_name,\n+                                                       if def.is_enum() && !is_method {\n+                                                           \"here\"\n+                                                       } else {\n+                                                           \"for this\"\n+                                                       }));\n+                    }\n+                }\n+\n                 // If the method name is the name of a field with a function or closure type,\n                 // give a helping note that it has to be called as (x.f)(...).\n                 if let Some(expr) = rcvr_expr {\n@@ -240,6 +262,8 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                             _ => {}\n                         }\n                     }\n+                } else {\n+                    err.span_label(span, format!(\"{} not found in `{}`\", type_str, ty_string));\n                 }\n \n                 if self.is_fn_ty(&rcvr_ty, span) {"}, {"sha": "a629f76d8b3e917b0b4af361e6472d8319970dc6", "filename": "src/test/compile-fail/bogus-tag.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fcompile-fail%2Fbogus-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fcompile-fail%2Fbogus-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbogus-tag.rs?ref=a6031a2ccf803037247da91732973e9e5a5a0c31", "patch": "@@ -10,11 +10,14 @@\n \n \n enum color { rgb(isize, isize, isize), rgba(isize, isize, isize, isize), }\n+//~^ NOTE variant `hsl` not found here\n \n fn main() {\n     let red: color = color::rgb(255, 0, 0);\n     match red {\n       color::rgb(r, g, b) => { println!(\"rgb\"); }\n-      color::hsl(h, s, l) => { println!(\"hsl\"); }  //~ ERROR no function\n+      color::hsl(h, s, l) => { println!(\"hsl\"); }\n+      //~^ ERROR no variant\n+      //~| NOTE variant not found in `color`\n     }\n }"}, {"sha": "3096e8f8313685fad147675d84c4262159071d85", "filename": "src/test/compile-fail/empty-struct-braces-expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fcompile-fail%2Fempty-struct-braces-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fcompile-fail%2Fempty-struct-braces-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fempty-struct-braces-expr.rs?ref=a6031a2ccf803037247da91732973e9e5a5a0c31", "patch": "@@ -29,6 +29,6 @@ fn main() {\n \n     let xe1 = XEmpty1; //~ ERROR expected value, found struct `XEmpty1`\n     let xe1 = XEmpty1(); //~ ERROR expected function, found struct `XEmpty1`\n-    let xe3 = XE::Empty3; //~ ERROR no associated item named `Empty3` found for type\n-    let xe3 = XE::Empty3(); //~ ERROR no associated item named `Empty3` found for type\n+    let xe3 = XE::Empty3; //~ ERROR no variant named `Empty3` found for type\n+    let xe3 = XE::Empty3(); //~ ERROR no variant named `Empty3` found for type\n }"}, {"sha": "583f2ace4ba054b65a0678ff4b107cf5374499f8", "filename": "src/test/compile-fail/issue-22933-2.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fcompile-fail%2Fissue-22933-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fcompile-fail%2Fissue-22933-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-22933-2.rs?ref=a6031a2ccf803037247da91732973e9e5a5a0c31", "patch": "@@ -8,11 +8,12 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-enum Delicious {\n+enum Delicious { //~ NOTE variant `PIE` not found here\n     Pie      = 0x1,\n     Apple    = 0x2,\n     ApplePie = Delicious::Apple as isize | Delicious::PIE as isize,\n-    //~^ ERROR no associated item named `PIE` found for type `Delicious`\n+    //~^ ERROR no variant named `PIE` found for type `Delicious`\n+    //~| NOTE variant not found in `Delicious`\n }\n \n fn main() {}"}, {"sha": "c0983eb0e5257dc4a7f84e3ea5d648d1d7143339", "filename": "src/test/compile-fail/issue-23173.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fcompile-fail%2Fissue-23173.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fcompile-fail%2Fissue-23173.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-23173.rs?ref=a6031a2ccf803037247da91732973e9e5a5a0c31", "patch": "@@ -9,9 +9,27 @@\n // except according to those terms.\n \n enum Token { LeftParen, RightParen, Plus, Minus, /* etc */ }\n+//~^ NOTE variant `Homura` not found here\n+struct Struct {\n+    //~^ NOTE function or associated item `method` not found for this\n+    //~| NOTE function or associated item `method` not found for this\n+    //~| NOTE associated item `Assoc` not found for this\n+    a: usize,\n+}\n \n fn use_token(token: &Token) { unimplemented!() }\n \n fn main() {\n-    use_token(&Token::Homura); //~ ERROR no associated item named\n+    use_token(&Token::Homura);\n+    //~^ ERROR no variant named `Homura`\n+    //~| NOTE variant not found in `Token`\n+    Struct::method();\n+    //~^ ERROR no function or associated item named `method` found for type\n+    //~| NOTE function or associated item not found in `Struct`\n+    Struct::method;\n+    //~^ ERROR no function or associated item named `method` found for type\n+    //~| NOTE function or associated item not found in `Struct`\n+    Struct::Assoc;\n+    //~^ ERROR no associated item named `Assoc` found for type `Struct` in\n+    //~| NOTE associated item not found in `Struct`\n }"}, {"sha": "cce0b99c04d79822727675b4197ba48d5445e45f", "filename": "src/test/compile-fail/issue-23217.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fcompile-fail%2Fissue-23217.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fcompile-fail%2Fissue-23217.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-23217.rs?ref=a6031a2ccf803037247da91732973e9e5a5a0c31", "patch": "@@ -8,9 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-pub enum SomeEnum {\n+pub enum SomeEnum { //~ NOTE variant `A` not found here\n     B = SomeEnum::A,\n-    //~^ ERROR no associated item named `A` found for type `SomeEnum`\n+    //~^ ERROR no variant named `A` found for type `SomeEnum`\n+    //~| NOTE variant not found in `SomeEnum`\n }\n \n fn main() {}"}, {"sha": "10be4d6210d7adbdd747db9d55343f71025fd048", "filename": "src/test/compile-fail/issue-28971.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fcompile-fail%2Fissue-28971.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fcompile-fail%2Fissue-28971.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-28971.rs?ref=a6031a2ccf803037247da91732973e9e5a5a0c31", "patch": "@@ -10,13 +10,15 @@\n \n // This should not cause an ICE\n \n-enum Foo {\n+enum Foo { //~ NOTE variant `Baz` not found here\n     Bar(u8)\n }\n fn main(){\n     foo(|| {\n         match Foo::Bar(1) {\n-            Foo::Baz(..) => (), //~ ERROR no associated\n+            Foo::Baz(..) => (),\n+            //~^ ERROR no variant named `Baz` found for type `Foo`\n+            //~| NOTE variant not found in `Foo`\n             _ => (),\n         }\n     });"}, {"sha": "297694568493deb8814cb0be0f9a387ce081b672", "filename": "src/test/ui/impl-trait/issue-21659-show-relevant-trait-impls-3.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-21659-show-relevant-trait-impls-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-21659-show-relevant-trait-impls-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-21659-show-relevant-trait-impls-3.stderr?ref=a6031a2ccf803037247da91732973e9e5a5a0c31", "patch": "@@ -1,6 +1,9 @@\n error[E0599]: no method named `foo` found for type `Bar` in the current scope\n   --> $DIR/issue-21659-show-relevant-trait-impls-3.rs:30:8\n    |\n+23 | struct Bar;\n+   | ----------- method `foo` not found for this\n+...\n 30 |     f1.foo(1usize);\n    |        ^^^\n    |"}, {"sha": "52d3931011a7749a224a65f4309f739d4a2687d9", "filename": "src/test/ui/impl-trait/method-suggestion-no-duplication.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fui%2Fimpl-trait%2Fmethod-suggestion-no-duplication.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fui%2Fimpl-trait%2Fmethod-suggestion-no-duplication.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmethod-suggestion-no-duplication.stderr?ref=a6031a2ccf803037247da91732973e9e5a5a0c31", "patch": "@@ -1,6 +1,9 @@\n error[E0599]: no method named `is_empty` found for type `Foo` in the current scope\n   --> $DIR/method-suggestion-no-duplication.rs:19:15\n    |\n+14 | struct Foo;\n+   | ----------- method `is_empty` not found for this\n+...\n 19 |     foo(|s| s.is_empty());\n    |               ^^^^^^^^\n    |"}, {"sha": "ce9a6fa4e053e7eb60778e16780bf18249d496e6", "filename": "src/test/ui/impl-trait/no-method-suggested-traits.stderr", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr?ref=a6031a2ccf803037247da91732973e9e5a5a0c31", "patch": "@@ -85,6 +85,9 @@ help: the following trait is implemented but not in scope, perhaps add a `use` f\n error[E0599]: no method named `method` found for type `Foo` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:62:9\n    |\n+14 | struct Foo;\n+   | ----------- method `method` not found for this\n+...\n 62 |     Foo.method();\n    |         ^^^^^^\n    |\n@@ -175,6 +178,9 @@ error[E0599]: no method named `method2` found for type `std::rc::Rc<&mut std::bo\n error[E0599]: no method named `method3` found for type `Foo` in the current scope\n    --> $DIR/no-method-suggested-traits.rs:107:9\n     |\n+14  | struct Foo;\n+    | ----------- method `method3` not found for this\n+...\n 107 |     Foo.method3();\n     |         ^^^^^^^\n     |\n@@ -195,6 +201,9 @@ error[E0599]: no method named `method3` found for type `std::rc::Rc<&mut std::bo\n error[E0599]: no method named `method3` found for type `Bar` in the current scope\n    --> $DIR/no-method-suggested-traits.rs:115:12\n     |\n+15  | enum Bar { X }\n+    | -------- method `method3` not found for this\n+...\n 115 |     Bar::X.method3();\n     |            ^^^^^^^\n     |"}, {"sha": "1d4558cad6717ed8be652093edc02b9e0ee9e089", "filename": "src/test/ui/method-call-err-msg.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fui%2Fmethod-call-err-msg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fui%2Fmethod-call-err-msg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethod-call-err-msg.stderr?ref=a6031a2ccf803037247da91732973e9e5a5a0c31", "patch": "@@ -28,6 +28,9 @@ error[E0061]: this function takes 2 parameters but 1 parameter was supplied\n error[E0599]: no method named `take` found for type `Foo` in the current scope\n   --> $DIR/method-call-err-msg.rs:34:7\n    |\n+13 | pub struct Foo;\n+   | --------------- method `take` not found for this\n+...\n 34 |      .take()    //~ ERROR no method named `take` found for type `Foo` in the current scope\n    |       ^^^^\n    |"}, {"sha": "4a83b606dccd9758183af4d23f543fe49f859217", "filename": "src/test/ui/rfc-2005-default-binding-mode/no-double-error.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fno-double-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fno-double-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fno-double-error.stderr?ref=a6031a2ccf803037247da91732973e9e5a5a0c31", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no associated item named `XXX` found for type `u32` in the current\n   --> $DIR/no-double-error.rs:18:9\n    |\n 18 |         u32::XXX => { }\n-   |         ^^^^^^^^\n+   |         ^^^^^^^^ associated item not found in `u32`\n \n error: aborting due to previous error\n "}, {"sha": "9b248f49e08b8fe8fc171c2e01f4d2319f04dfbc", "filename": "src/test/ui/span/issue-7575.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr?ref=a6031a2ccf803037247da91732973e9e5a5a0c31", "patch": "@@ -33,6 +33,9 @@ note: candidate #3 is defined in the trait `UnusedTrait`\n error[E0599]: no method named `fff` found for type `Myisize` in the current scope\n   --> $DIR/issue-7575.rs:74:30\n    |\n+48 | struct Myisize(isize);\n+   | ---------------------- method `fff` not found for this\n+...\n 74 |     u.f8(42) + u.f9(342) + m.fff(42)\n    |                              ^^^\n    |"}, {"sha": "bbe8fe7345aa021f59708808312c0a6c41157f8e", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-18343.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-18343.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-18343.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-18343.stderr?ref=a6031a2ccf803037247da91732973e9e5a5a0c31", "patch": "@@ -1,6 +1,9 @@\n error[E0599]: no method named `closure` found for type `Obj<[closure@$DIR/issue-18343.rs:16:28: 16:33]>` in the current scope\n   --> $DIR/issue-18343.rs:17:7\n    |\n+11 | struct Obj<F> where F: FnMut() -> u32 {\n+   | ------------------------------------- method `closure` not found for this\n+...\n 17 |     o.closure();\n    |       ^^^^^^^ field, not a method\n    |"}, {"sha": "a9211e1864e3b2df523d04f79b43a22af49bf3c0", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-2392.stderr", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-2392.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-2392.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-2392.stderr?ref=a6031a2ccf803037247da91732973e9e5a5a0c31", "patch": "@@ -1,6 +1,9 @@\n error[E0599]: no method named `closure` found for type `Obj<[closure@$DIR/issue-2392.rs:49:36: 49:41]>` in the current scope\n   --> $DIR/issue-2392.rs:50:15\n    |\n+25 | struct Obj<F> where F: FnOnce() -> u32 {\n+   | -------------------------------------- method `closure` not found for this\n+...\n 50 |     o_closure.closure(); //~ ERROR no method named `closure` found\n    |               ^^^^^^^ field, not a method\n    |\n@@ -9,6 +12,9 @@ error[E0599]: no method named `closure` found for type `Obj<[closure@$DIR/issue-\n error[E0599]: no method named `not_closure` found for type `Obj<[closure@$DIR/issue-2392.rs:49:36: 49:41]>` in the current scope\n   --> $DIR/issue-2392.rs:54:15\n    |\n+25 | struct Obj<F> where F: FnOnce() -> u32 {\n+   | -------------------------------------- method `not_closure` not found for this\n+...\n 54 |     o_closure.not_closure();\n    |               ^^^^^^^^^^^ field, not a method\n    |\n@@ -17,6 +23,9 @@ error[E0599]: no method named `not_closure` found for type `Obj<[closure@$DIR/is\n error[E0599]: no method named `closure` found for type `Obj<fn() -> u32 {func}>` in the current scope\n   --> $DIR/issue-2392.rs:60:12\n    |\n+25 | struct Obj<F> where F: FnOnce() -> u32 {\n+   | -------------------------------------- method `closure` not found for this\n+...\n 60 |     o_func.closure(); //~ ERROR no method named `closure` found\n    |            ^^^^^^^ field, not a method\n    |\n@@ -25,6 +34,9 @@ error[E0599]: no method named `closure` found for type `Obj<fn() -> u32 {func}>`\n error[E0599]: no method named `boxed_closure` found for type `BoxedObj` in the current scope\n   --> $DIR/issue-2392.rs:65:14\n    |\n+30 | struct BoxedObj {\n+   | --------------- method `boxed_closure` not found for this\n+...\n 65 |     boxed_fn.boxed_closure();//~ ERROR no method named `boxed_closure` found\n    |              ^^^^^^^^^^^^^ field, not a method\n    |\n@@ -33,6 +45,9 @@ error[E0599]: no method named `boxed_closure` found for type `BoxedObj` in the c\n error[E0599]: no method named `boxed_closure` found for type `BoxedObj` in the current scope\n   --> $DIR/issue-2392.rs:70:19\n    |\n+30 | struct BoxedObj {\n+   | --------------- method `boxed_closure` not found for this\n+...\n 70 |     boxed_closure.boxed_closure();//~ ERROR no method named `boxed_closure` found\n    |                   ^^^^^^^^^^^^^ field, not a method\n    |\n@@ -41,6 +56,9 @@ error[E0599]: no method named `boxed_closure` found for type `BoxedObj` in the c\n error[E0599]: no method named `closure` found for type `Obj<fn() -> u32 {func}>` in the current scope\n   --> $DIR/issue-2392.rs:77:12\n    |\n+25 | struct Obj<F> where F: FnOnce() -> u32 {\n+   | -------------------------------------- method `closure` not found for this\n+...\n 77 |     w.wrap.closure();//~ ERROR no method named `closure` found\n    |            ^^^^^^^ field, not a method\n    |\n@@ -49,6 +67,9 @@ error[E0599]: no method named `closure` found for type `Obj<fn() -> u32 {func}>`\n error[E0599]: no method named `not_closure` found for type `Obj<fn() -> u32 {func}>` in the current scope\n   --> $DIR/issue-2392.rs:81:12\n    |\n+25 | struct Obj<F> where F: FnOnce() -> u32 {\n+   | -------------------------------------- method `not_closure` not found for this\n+...\n 81 |     w.wrap.not_closure();\n    |            ^^^^^^^^^^^ field, not a method\n    |\n@@ -57,6 +78,9 @@ error[E0599]: no method named `not_closure` found for type `Obj<fn() -> u32 {fun\n error[E0599]: no method named `closure` found for type `Obj<std::boxed::Box<std::boxed::FnBox<(), Output=u32> + 'static>>` in the current scope\n   --> $DIR/issue-2392.rs:86:24\n    |\n+25 | struct Obj<F> where F: FnOnce() -> u32 {\n+   | -------------------------------------- method `closure` not found for this\n+...\n 86 |     check_expression().closure();//~ ERROR no method named `closure` found\n    |                        ^^^^^^^ field, not a method\n    |\n@@ -65,6 +89,9 @@ error[E0599]: no method named `closure` found for type `Obj<std::boxed::Box<std:\n error[E0599]: no method named `f1` found for type `FuncContainer` in the current scope\n   --> $DIR/issue-2392.rs:94:31\n    |\n+15 | struct FuncContainer {\n+   | -------------------- method `f1` not found for this\n+...\n 94 |             (*self.container).f1(1); //~ ERROR no method named `f1` found\n    |                               ^^ field, not a method\n    |\n@@ -73,6 +100,9 @@ error[E0599]: no method named `f1` found for type `FuncContainer` in the current\n error[E0599]: no method named `f2` found for type `FuncContainer` in the current scope\n   --> $DIR/issue-2392.rs:97:31\n    |\n+15 | struct FuncContainer {\n+   | -------------------- method `f2` not found for this\n+...\n 97 |             (*self.container).f2(1); //~ ERROR no method named `f2` found\n    |                               ^^ field, not a method\n    |\n@@ -81,6 +111,9 @@ error[E0599]: no method named `f2` found for type `FuncContainer` in the current\n error[E0599]: no method named `f3` found for type `FuncContainer` in the current scope\n    --> $DIR/issue-2392.rs:100:31\n     |\n+15  | struct FuncContainer {\n+    | -------------------- method `f3` not found for this\n+...\n 100 |             (*self.container).f3(1); //~ ERROR no method named `f3` found\n     |                               ^^ field, not a method\n     |"}, {"sha": "d6a837a17ae1ce3182e493e5516b198b42cec366", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-32128.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-32128.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-32128.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-32128.stderr?ref=a6031a2ccf803037247da91732973e9e5a5a0c31", "patch": "@@ -1,6 +1,9 @@\n error[E0599]: no method named `example` found for type `Example` in the current scope\n   --> $DIR/issue-32128.rs:22:10\n    |\n+11 | struct Example {\n+   | -------------- method `example` not found for this\n+...\n 22 |     demo.example(1);\n    |          ^^^^^^^ field, not a method\n    |"}, {"sha": "dd0081782f418f3e90d0921fe37b66323e8ce15b", "filename": "src/test/ui/suggestions/confuse-field-and-method/private-field.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fprivate-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fprivate-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fprivate-field.stderr?ref=a6031a2ccf803037247da91732973e9e5a5a0c31", "patch": "@@ -1,6 +1,9 @@\n error[E0599]: no method named `dog_age` found for type `animal::Dog` in the current scope\n   --> $DIR/private-field.rs:26:23\n    |\n+12 |     pub struct Dog {\n+   |     -------------- method `dog_age` not found for this\n+...\n 26 |     let dog_age = dog.dog_age();\n    |                       ^^^^^^^ private field, not a method\n "}, {"sha": "30e3bbd9979766d6398dadacd306beadae4f957a", "filename": "src/test/ui/suggestions/suggest-methods.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-methods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6031a2ccf803037247da91732973e9e5a5a0c31/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-methods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-methods.stderr?ref=a6031a2ccf803037247da91732973e9e5a5a0c31", "patch": "@@ -1,6 +1,9 @@\n error[E0599]: no method named `bat` found for type `Foo` in the current scope\n   --> $DIR/suggest-methods.rs:28:7\n    |\n+11 | struct Foo;\n+   | ----------- method `bat` not found for this\n+...\n 28 |     f.bat(1.0);\n    |       ^^^\n    |"}]}