{"sha": "9473e2195518d64074e8e3f85d64c82fe285915c", "node_id": "C_kwDOAAsO6NoAKDk0NzNlMjE5NTUxOGQ2NDA3NGU4ZTNmODVkNjRjODJmZTI4NTkxNWM", "commit": {"author": {"name": "ltdk", "email": "usr@ltdk.xyz", "date": "2022-06-06T02:24:14Z"}, "committer": {"name": "ltdk", "email": "usr@ltdk.xyz", "date": "2022-06-06T02:24:14Z"}, "message": "Changes from code review", "tree": {"sha": "84d79e6c771a396ed40eaac37397e1406778c1b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84d79e6c771a396ed40eaac37397e1406778c1b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9473e2195518d64074e8e3f85d64c82fe285915c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9473e2195518d64074e8e3f85d64c82fe285915c", "html_url": "https://github.com/rust-lang/rust/commit/9473e2195518d64074e8e3f85d64c82fe285915c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9473e2195518d64074e8e3f85d64c82fe285915c/comments", "author": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fabdb8f7fd0c2c48d47ce08126d27ade5beefd9", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fabdb8f7fd0c2c48d47ce08126d27ade5beefd9", "html_url": "https://github.com/rust-lang/rust/commit/5fabdb8f7fd0c2c48d47ce08126d27ade5beefd9"}], "stats": {"total": 79, "additions": 56, "deletions": 23}, "files": [{"sha": "d26f9b594550c887e86042380f35772697db1f54", "filename": "compiler/rustc_error_codes/src/error_codes/E0788.md", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9473e2195518d64074e8e3f85d64c82fe285915c/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0788.md", "raw_url": "https://github.com/rust-lang/rust/raw/9473e2195518d64074e8e3f85d64c82fe285915c/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0788.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0788.md?ref=9473e2195518d64074e8e3f85d64c82fe285915c", "patch": "@@ -1,5 +1,10 @@\n-A `#[no_coverage]` attribute was incorrectly placed on something that couldn't\n-be covered.\n+A `#[no_coverage]` attribute was applied to something which does not show up\n+in code coverage, or is too granular to be excluded from the coverage report.\n+\n+For now, this attribute can only be applied to function, method, and closure\n+definitions. In the future, it may be added to statements, blocks, and\n+expressions, and for the time being, using this attribute in those places\n+will just emit an `unused_attributes` lint instead of this error.\n \n Example of erroneous code:\n "}, {"sha": "67144d03d98da096ff99ac701e433b2ddc8af222", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9473e2195518d64074e8e3f85d64c82fe285915c/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9473e2195518d64074e8e3f85d64c82fe285915c/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=9473e2195518d64074e8e3f85d64c82fe285915c", "patch": "@@ -317,14 +317,15 @@ impl CheckAttrVisitor<'_> {\n \n             Target::Mod | Target::ForeignMod | Target::Impl | Target::Trait => {\n                 self.tcx.struct_span_lint_hir(UNUSED_ATTRIBUTES, hir_id, attr.span, |lint| {\n-                    lint.build(\"`#[no_coverage]` cannot be done recursively and must be applied to functions directly\").emit();\n+                    lint.build(\"`#[no_coverage]` does not propagate into items and must be applied to the contained functions directly\").emit();\n                 });\n                 true\n             }\n \n             Target::Expression | Target::Statement | Target::Arm => {\n                 self.tcx.struct_span_lint_hir(UNUSED_ATTRIBUTES, hir_id, attr.span, |lint| {\n-                    lint.build(\"`#[no_coverage]` can only be applied at the function level, not on code directly\").emit();\n+                    lint.build(\"`#[no_coverage]` may only be applied to function definitions\")\n+                        .emit();\n                 });\n                 true\n             }"}, {"sha": "ff24c12b2bcfcbe5b5279f70b7a56f8fc707dc3e", "filename": "src/test/ui/lint/no-coverage.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9473e2195518d64074e8e3f85d64c82fe285915c/src%2Ftest%2Fui%2Flint%2Fno-coverage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9473e2195518d64074e8e3f85d64c82fe285915c/src%2Ftest%2Fui%2Flint%2Fno-coverage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fno-coverage.rs?ref=9473e2195518d64074e8e3f85d64c82fe285915c", "patch": "@@ -2,7 +2,11 @@\n #![feature(no_coverage)]\n #![feature(type_alias_impl_trait)]\n #![warn(unused_attributes)]\n+#![no_coverage]\n+//~^ WARN: `#[no_coverage]` does not propagate into items and must be applied to the contained functions directly\n \n+#[no_coverage]\n+//~^ WARN: `#[no_coverage]` does not propagate into items and must be applied to the contained functions directly\n trait Trait {\n     #[no_coverage] //~ ERROR `#[no_coverage]` must be applied to coverable code\n     const X: u32;\n@@ -13,6 +17,8 @@ trait Trait {\n     type U;\n }\n \n+#[no_coverage]\n+//~^ WARN: `#[no_coverage]` does not propagate into items and must be applied to the contained functions directly\n impl Trait for () {\n     const X: u32 = 0;\n \n@@ -33,14 +39,17 @@ extern \"C\" {\n \n #[no_coverage]\n fn main() {\n-    #[no_coverage] //~ WARN `#[no_coverage]` can only be applied at the function level, not on code directly\n+    #[no_coverage]\n+    //~^ WARN `#[no_coverage]` may only be applied to function definitions\n     let _ = ();\n \n     match () {\n-        #[no_coverage] //~ WARN `#[no_coverage]` can only be applied at the function level, not on code directly\n+        #[no_coverage]\n+        //~^ WARN `#[no_coverage]` may only be applied to function definitions\n         () => (),\n     }\n \n-    #[no_coverage] //~ WARN `#[no_coverage]` can only be applied at the function level, not on code directly\n+    #[no_coverage]\n+    //~^ WARN `#[no_coverage]` may only be applied to function definitions\n     return ();\n }"}, {"sha": "8452ccc7a03cbe5e40819c28caac78a3871627c9", "filename": "src/test/ui/lint/no-coverage.stderr", "status": "modified", "additions": 34, "deletions": 16, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/9473e2195518d64074e8e3f85d64c82fe285915c/src%2Ftest%2Fui%2Flint%2Fno-coverage.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9473e2195518d64074e8e3f85d64c82fe285915c/src%2Ftest%2Fui%2Flint%2Fno-coverage.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fno-coverage.stderr?ref=9473e2195518d64074e8e3f85d64c82fe285915c", "patch": "@@ -1,83 +1,101 @@\n-warning: `#[no_coverage]` can only be applied at the function level, not on code directly\n-  --> $DIR/no-coverage.rs:36:5\n+warning: `#[no_coverage]` does not propagate into items and must be applied to the contained functions directly\n+  --> $DIR/no-coverage.rs:8:1\n    |\n-LL |     #[no_coverage]\n-   |     ^^^^^^^^^^^^^^\n+LL | #[no_coverage]\n+   | ^^^^^^^^^^^^^^\n    |\n note: the lint level is defined here\n   --> $DIR/no-coverage.rs:4:9\n    |\n LL | #![warn(unused_attributes)]\n    |         ^^^^^^^^^^^^^^^^^\n \n-warning: `#[no_coverage]` can only be applied at the function level, not on code directly\n-  --> $DIR/no-coverage.rs:40:9\n+warning: `#[no_coverage]` does not propagate into items and must be applied to the contained functions directly\n+  --> $DIR/no-coverage.rs:20:1\n+   |\n+LL | #[no_coverage]\n+   | ^^^^^^^^^^^^^^\n+\n+warning: `#[no_coverage]` may only be applied to function definitions\n+  --> $DIR/no-coverage.rs:42:5\n+   |\n+LL |     #[no_coverage]\n+   |     ^^^^^^^^^^^^^^\n+\n+warning: `#[no_coverage]` may only be applied to function definitions\n+  --> $DIR/no-coverage.rs:47:9\n    |\n LL |         #[no_coverage]\n    |         ^^^^^^^^^^^^^^\n \n-warning: `#[no_coverage]` can only be applied at the function level, not on code directly\n-  --> $DIR/no-coverage.rs:44:5\n+warning: `#[no_coverage]` may only be applied to function definitions\n+  --> $DIR/no-coverage.rs:52:5\n    |\n LL |     #[no_coverage]\n    |     ^^^^^^^^^^^^^^\n \n error[E0788]: `#[no_coverage]` must be applied to coverable code\n-  --> $DIR/no-coverage.rs:7:5\n+  --> $DIR/no-coverage.rs:11:5\n    |\n LL |     #[no_coverage]\n    |     ^^^^^^^^^^^^^^\n LL |     const X: u32;\n    |     ------------- not coverable code\n \n error[E0788]: `#[no_coverage]` must be applied to coverable code\n-  --> $DIR/no-coverage.rs:10:5\n+  --> $DIR/no-coverage.rs:14:5\n    |\n LL |     #[no_coverage]\n    |     ^^^^^^^^^^^^^^\n LL |     type T;\n    |     ------- not coverable code\n \n error[E0788]: `#[no_coverage]` must be applied to coverable code\n-  --> $DIR/no-coverage.rs:19:5\n+  --> $DIR/no-coverage.rs:25:5\n    |\n LL |     #[no_coverage]\n    |     ^^^^^^^^^^^^^^\n LL |     type T = Self;\n    |     -------------- not coverable code\n \n error[E0788]: `#[no_coverage]` must be applied to coverable code\n-  --> $DIR/no-coverage.rs:22:5\n+  --> $DIR/no-coverage.rs:28:5\n    |\n LL |     #[no_coverage]\n    |     ^^^^^^^^^^^^^^\n LL |     type U = impl Trait;\n    |     -------------------- not coverable code\n \n error[E0788]: `#[no_coverage]` must be applied to coverable code\n-  --> $DIR/no-coverage.rs:27:5\n+  --> $DIR/no-coverage.rs:33:5\n    |\n LL |     #[no_coverage]\n    |     ^^^^^^^^^^^^^^\n LL |     static X: u32;\n    |     -------------- not coverable code\n \n error[E0788]: `#[no_coverage]` must be applied to coverable code\n-  --> $DIR/no-coverage.rs:30:5\n+  --> $DIR/no-coverage.rs:36:5\n    |\n LL |     #[no_coverage]\n    |     ^^^^^^^^^^^^^^\n LL |     type T;\n    |     ------- not coverable code\n \n+warning: `#[no_coverage]` does not propagate into items and must be applied to the contained functions directly\n+  --> $DIR/no-coverage.rs:5:1\n+   |\n+LL | #![no_coverage]\n+   | ^^^^^^^^^^^^^^^\n+\n error: unconstrained opaque type\n-  --> $DIR/no-coverage.rs:23:14\n+  --> $DIR/no-coverage.rs:29:14\n    |\n LL |     type U = impl Trait;\n    |              ^^^^^^^^^^\n    |\n    = note: `U` must be used in combination with a concrete type within the same module\n \n-error: aborting due to 7 previous errors; 3 warnings emitted\n+error: aborting due to 7 previous errors; 6 warnings emitted\n \n For more information about this error, try `rustc --explain E0788`."}]}