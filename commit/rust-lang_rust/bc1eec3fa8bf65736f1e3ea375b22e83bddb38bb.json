{"sha": "bc1eec3fa8bf65736f1e3ea375b22e83bddb38bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjMWVlYzNmYThiZjY1NzM2ZjFlM2VhMzc1YjIyZTgzYmRkYjM4YmI=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2018-07-18T19:53:46Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-07-23T11:28:54Z"}, "message": "Remove unneded lifetimes relations declaration", "tree": {"sha": "499697d65703638eff8b0a8ea1f9e5ec8b02548c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/499697d65703638eff8b0a8ea1f9e5ec8b02548c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc1eec3fa8bf65736f1e3ea375b22e83bddb38bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc1eec3fa8bf65736f1e3ea375b22e83bddb38bb", "html_url": "https://github.com/rust-lang/rust/commit/bc1eec3fa8bf65736f1e3ea375b22e83bddb38bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc1eec3fa8bf65736f1e3ea375b22e83bddb38bb/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4e84fd8ff25c2e033b4efaba3ef55a57713083c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4e84fd8ff25c2e033b4efaba3ef55a57713083c", "html_url": "https://github.com/rust-lang/rust/commit/e4e84fd8ff25c2e033b4efaba3ef55a57713083c"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "f8dc7d2a2a8d1828e5fae183ee76a38efc51b673", "filename": "src/librustc_mir/dataflow/graphviz.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc1eec3fa8bf65736f1e3ea375b22e83bddb38bb/src%2Flibrustc_mir%2Fdataflow%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc1eec3fa8bf65736f1e3ea375b22e83bddb38bb/src%2Flibrustc_mir%2Fdataflow%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fgraphviz.rs?ref=bc1eec3fa8bf65736f1e3ea375b22e83bddb38bb", "patch": "@@ -34,8 +34,8 @@ pub trait MirWithFlowState<'tcx> {\n     fn flow_state(&self) -> &DataflowState<Self::BD>;\n }\n \n-impl<'a, 'tcx: 'a, BD> MirWithFlowState<'tcx> for DataflowBuilder<'a, 'tcx, BD>\n-    where 'tcx: 'a, BD: BitDenotation\n+impl<'a, 'tcx, BD> MirWithFlowState<'tcx> for DataflowBuilder<'a, 'tcx, BD>\n+    where BD: BitDenotation\n {\n     type BD = BD;\n     fn node_id(&self) -> NodeId { self.node_id }"}]}