{"sha": "e7065b7f92c777b70065b51f930fa494600cd275", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3MDY1YjdmOTJjNzc3YjcwMDY1YjUxZjkzMGZhNDk0NjAwY2QyNzU=", "commit": {"author": {"name": "Chiu-Hsiang Hsu", "email": "wdv4758h@gmail.com", "date": "2016-08-10T07:29:45Z"}, "committer": {"name": "Chiu-Hsiang Hsu", "email": "wdv4758h@gmail.com", "date": "2016-08-10T07:29:45Z"}, "message": "Update E0133 to new format", "tree": {"sha": "e9133324e6f9f0960f73f8bd897eae72d2ccc284", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9133324e6f9f0960f73f8bd897eae72d2ccc284"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7065b7f92c777b70065b51f930fa494600cd275", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7065b7f92c777b70065b51f930fa494600cd275", "html_url": "https://github.com/rust-lang/rust/commit/e7065b7f92c777b70065b51f930fa494600cd275", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7065b7f92c777b70065b51f930fa494600cd275/comments", "author": {"login": "wdv4758h", "id": 2716047, "node_id": "MDQ6VXNlcjI3MTYwNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2716047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wdv4758h", "html_url": "https://github.com/wdv4758h", "followers_url": "https://api.github.com/users/wdv4758h/followers", "following_url": "https://api.github.com/users/wdv4758h/following{/other_user}", "gists_url": "https://api.github.com/users/wdv4758h/gists{/gist_id}", "starred_url": "https://api.github.com/users/wdv4758h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wdv4758h/subscriptions", "organizations_url": "https://api.github.com/users/wdv4758h/orgs", "repos_url": "https://api.github.com/users/wdv4758h/repos", "events_url": "https://api.github.com/users/wdv4758h/events{/privacy}", "received_events_url": "https://api.github.com/users/wdv4758h/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wdv4758h", "id": 2716047, "node_id": "MDQ6VXNlcjI3MTYwNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2716047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wdv4758h", "html_url": "https://github.com/wdv4758h", "followers_url": "https://api.github.com/users/wdv4758h/followers", "following_url": "https://api.github.com/users/wdv4758h/following{/other_user}", "gists_url": "https://api.github.com/users/wdv4758h/gists{/gist_id}", "starred_url": "https://api.github.com/users/wdv4758h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wdv4758h/subscriptions", "organizations_url": "https://api.github.com/users/wdv4758h/orgs", "repos_url": "https://api.github.com/users/wdv4758h/repos", "events_url": "https://api.github.com/users/wdv4758h/events{/privacy}", "received_events_url": "https://api.github.com/users/wdv4758h/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "576f7665942414cb95239f8cbec4b654f231f4aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/576f7665942414cb95239f8cbec4b654f231f4aa", "html_url": "https://github.com/rust-lang/rust/commit/576f7665942414cb95239f8cbec4b654f231f4aa"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "3ca6cf039979705cc09477902e3912c270daf7d2", "filename": "src/librustc/middle/effect.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e7065b7f92c777b70065b51f930fa494600cd275/src%2Flibrustc%2Fmiddle%2Feffect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7065b7f92c777b70065b51f930fa494600cd275/src%2Flibrustc%2Fmiddle%2Feffect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Feffect.rs?ref=e7065b7f92c777b70065b51f930fa494600cd275", "patch": "@@ -63,9 +63,11 @@ impl<'a, 'tcx> EffectCheckVisitor<'a, 'tcx> {\n         match self.unsafe_context.root {\n             SafeContext => {\n                 // Report an error.\n-                span_err!(self.tcx.sess, span, E0133,\n-                          \"{} requires unsafe function or block\",\n-                          description);\n+                struct_span_err!(\n+                    self.tcx.sess, span, E0133,\n+                    \"{} requires unsafe function or block\", description)\n+                    .span_label(span, &format!(\"unsafe call requires unsafe function or block\"))\n+                    .emit();\n             }\n             UnsafeBlock(block_id) => {\n                 // OK, but record this."}, {"sha": "b8a4476fc59671b2b5e4f6b769ce5bad5ad9bfd9", "filename": "src/test/compile-fail/E0133.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7065b7f92c777b70065b51f930fa494600cd275/src%2Ftest%2Fcompile-fail%2FE0133.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7065b7f92c777b70065b51f930fa494600cd275/src%2Ftest%2Fcompile-fail%2FE0133.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0133.rs?ref=e7065b7f92c777b70065b51f930fa494600cd275", "patch": "@@ -11,5 +11,7 @@\n unsafe fn f() { return; }\n \n fn main() {\n-    f(); //~ ERROR E0133\n+    f();\n+    //~^ ERROR E0133\n+    //~| NOTE unsafe call requires unsafe function or block\n }"}, {"sha": "52b0eba96cbdf59631f784bc662fe72f14cfc001", "filename": "src/test/compile-fail/issue-28776.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7065b7f92c777b70065b51f930fa494600cd275/src%2Ftest%2Fcompile-fail%2Fissue-28776.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7065b7f92c777b70065b51f930fa494600cd275/src%2Ftest%2Fcompile-fail%2Fissue-28776.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-28776.rs?ref=e7065b7f92c777b70065b51f930fa494600cd275", "patch": "@@ -11,5 +11,7 @@\n use std::ptr;\n \n fn main() {\n-    (&ptr::write)(1 as *mut _, 42); //~ ERROR E0133\n+    (&ptr::write)(1 as *mut _, 42);\n+    //~^ ERROR E0133\n+    //~| NOTE unsafe call requires unsafe function or block\n }"}, {"sha": "0df7ee8cabed21a4adb3db8a14e1d1962127f669", "filename": "src/test/compile-fail/trait-safety-fn-body.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7065b7f92c777b70065b51f930fa494600cd275/src%2Ftest%2Fcompile-fail%2Ftrait-safety-fn-body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7065b7f92c777b70065b51f930fa494600cd275/src%2Ftest%2Fcompile-fail%2Ftrait-safety-fn-body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-safety-fn-body.rs?ref=e7065b7f92c777b70065b51f930fa494600cd275", "patch": "@@ -18,7 +18,9 @@ unsafe trait UnsafeTrait : Sized {\n unsafe impl UnsafeTrait for *mut isize {\n     fn foo(self) {\n         // Unsafe actions are not made legal by taking place in an unsafe trait:\n-        *self += 1; //~ ERROR E0133\n+        *self += 1;\n+        //~^ ERROR E0133\n+        //~| NOTE unsafe call requires unsafe function or block\n     }\n }\n "}, {"sha": "174939b09009cbd3ef0bef677506f6a3191146c8", "filename": "src/test/compile-fail/unsafe-const-fn.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7065b7f92c777b70065b51f930fa494600cd275/src%2Ftest%2Fcompile-fail%2Funsafe-const-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7065b7f92c777b70065b51f930fa494600cd275/src%2Ftest%2Fcompile-fail%2Funsafe-const-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funsafe-const-fn.rs?ref=e7065b7f92c777b70065b51f930fa494600cd275", "patch": "@@ -16,7 +16,9 @@ const unsafe fn dummy(v: u32) -> u32 {\n     !v\n }\n \n-const VAL: u32 = dummy(0xFFFF); //~ ERROR E0133\n+const VAL: u32 = dummy(0xFFFF);\n+//~^ ERROR E0133\n+//~| NOTE unsafe call requires unsafe function or block\n \n fn main() {\n     assert_eq!(VAL, 0xFFFF0000);"}]}