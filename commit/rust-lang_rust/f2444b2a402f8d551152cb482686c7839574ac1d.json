{"sha": "f2444b2a402f8d551152cb482686c7839574ac1d", "node_id": "C_kwDOAAsO6NoAKGYyNDQ0YjJhNDAyZjhkNTUxMTUyY2I0ODI2ODZjNzgzOTU3NGFjMWQ", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-01-14T11:20:12Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-01-14T12:08:45Z"}, "message": "Remove unnecessary Hint suffix on InlayKind variants", "tree": {"sha": "f34edf772f94f8d95f2311333271da665a05963c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f34edf772f94f8d95f2311333271da665a05963c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2444b2a402f8d551152cb482686c7839574ac1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2444b2a402f8d551152cb482686c7839574ac1d", "html_url": "https://github.com/rust-lang/rust/commit/f2444b2a402f8d551152cb482686c7839574ac1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2444b2a402f8d551152cb482686c7839574ac1d/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60075a6625bb5d4064ef02123b84bd81e574c8e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/60075a6625bb5d4064ef02123b84bd81e574c8e6", "html_url": "https://github.com/rust-lang/rust/commit/60075a6625bb5d4064ef02123b84bd81e574c8e6"}], "stats": {"total": 182, "additions": 87, "deletions": 95}, "files": [{"sha": "861bf1c66cbe946d245b31b421501962c9063029", "filename": "crates/ide/src/inlay_hints.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f2444b2a402f8d551152cb482686c7839574ac1d/crates%2Fide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2444b2a402f8d551152cb482686c7839574ac1d/crates%2Fide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints.rs?ref=f2444b2a402f8d551152cb482686c7839574ac1d", "patch": "@@ -86,17 +86,17 @@ pub enum AdjustmentHintsMode {\n \n #[derive(Copy, Clone, Debug, PartialEq, Eq)]\n pub enum InlayKind {\n-    BindingModeHint,\n-    ChainingHint,\n-    ClosingBraceHint,\n-    ClosureReturnTypeHint,\n-    GenericParamListHint,\n-    AdjustmentHint,\n-    AdjustmentHintPostfix,\n-    LifetimeHint,\n-    ParameterHint,\n-    TypeHint,\n-    DiscriminantHint,\n+    BindingMode,\n+    Chaining,\n+    ClosingBrace,\n+    ClosureReturnType,\n+    GenericParamList,\n+    Adjustment,\n+    AdjustmentPostfix,\n+    Lifetime,\n+    Parameter,\n+    Type,\n+    Discriminant,\n     OpeningParenthesis,\n     ClosingParenthesis,\n }"}, {"sha": "581813f3b7700a6655a83035ba8e1b90e556dfb5", "filename": "crates/ide/src/inlay_hints/adjustment.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f2444b2a402f8d551152cb482686c7839574ac1d/crates%2Fide%2Fsrc%2Finlay_hints%2Fadjustment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2444b2a402f8d551152cb482686c7839574ac1d/crates%2Fide%2Fsrc%2Finlay_hints%2Fadjustment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints%2Fadjustment.rs?ref=f2444b2a402f8d551152cb482686c7839574ac1d", "patch": "@@ -97,11 +97,7 @@ pub(super) fn hints(\n         };\n         acc.push(InlayHint {\n             range: expr.syntax().text_range(),\n-            kind: if postfix {\n-                InlayKind::AdjustmentHintPostfix\n-            } else {\n-                InlayKind::AdjustmentHint\n-            },\n+            kind: if postfix { InlayKind::AdjustmentPostfix } else { InlayKind::Adjustment },\n             label: if postfix { format!(\".{}\", text.trim_end()).into() } else { text.into() },\n         });\n     }"}, {"sha": "5227c651ff454a244a3d3b872b654382cb6f5e9e", "filename": "crates/ide/src/inlay_hints/bind_pat.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f2444b2a402f8d551152cb482686c7839574ac1d/crates%2Fide%2Fsrc%2Finlay_hints%2Fbind_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2444b2a402f8d551152cb482686c7839574ac1d/crates%2Fide%2Fsrc%2Finlay_hints%2Fbind_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints%2Fbind_pat.rs?ref=f2444b2a402f8d551152cb482686c7839574ac1d", "patch": "@@ -48,7 +48,7 @@ pub(super) fn hints(\n             Some(name) => name.syntax().text_range(),\n             None => pat.syntax().text_range(),\n         },\n-        kind: InlayKind::TypeHint,\n+        kind: InlayKind::Type,\n         label,\n     });\n \n@@ -316,14 +316,14 @@ fn main(a: SliceIter<'_, Container>) {\n                 [\n                     InlayHint {\n                         range: 484..554,\n-                        kind: ChainingHint,\n+                        kind: Chaining,\n                         label: [\n                             \"impl Iterator<Item = impl Iterator<Item = &&str>>\",\n                         ],\n                     },\n                     InlayHint {\n                         range: 484..485,\n-                        kind: ChainingHint,\n+                        kind: Chaining,\n                         label: [\n                             \"\",\n                             InlayHintLabelPart {"}, {"sha": "11b9cd269bfa8c77b2005f28842a99a743a3c586", "filename": "crates/ide/src/inlay_hints/binding_mode.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f2444b2a402f8d551152cb482686c7839574ac1d/crates%2Fide%2Fsrc%2Finlay_hints%2Fbinding_mode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2444b2a402f8d551152cb482686c7839574ac1d/crates%2Fide%2Fsrc%2Finlay_hints%2Fbinding_mode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints%2Fbinding_mode.rs?ref=f2444b2a402f8d551152cb482686c7839574ac1d", "patch": "@@ -40,11 +40,7 @@ pub(super) fn hints(\n             (true, false) => \"&\",\n             _ => return,\n         };\n-        acc.push(InlayHint {\n-            range,\n-            kind: InlayKind::BindingModeHint,\n-            label: r.to_string().into(),\n-        });\n+        acc.push(InlayHint { range, kind: InlayKind::BindingMode, label: r.to_string().into() });\n     });\n     match pat {\n         ast::Pat::IdentPat(pat) if pat.ref_token().is_none() && pat.mut_token().is_none() => {\n@@ -56,7 +52,7 @@ pub(super) fn hints(\n             };\n             acc.push(InlayHint {\n                 range: pat.syntax().text_range(),\n-                kind: InlayKind::BindingModeHint,\n+                kind: InlayKind::BindingMode,\n                 label: bm.to_string().into(),\n             });\n         }"}, {"sha": "e0045a53d7469367a3974029b437ed6d0d5552c0", "filename": "crates/ide/src/inlay_hints/chaining.rs", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f2444b2a402f8d551152cb482686c7839574ac1d/crates%2Fide%2Fsrc%2Finlay_hints%2Fchaining.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2444b2a402f8d551152cb482686c7839574ac1d/crates%2Fide%2Fsrc%2Finlay_hints%2Fchaining.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints%2Fchaining.rs?ref=f2444b2a402f8d551152cb482686c7839574ac1d", "patch": "@@ -59,7 +59,7 @@ pub(super) fn hints(\n             }\n             acc.push(InlayHint {\n                 range: expr.syntax().text_range(),\n-                kind: InlayKind::ChainingHint,\n+                kind: InlayKind::Chaining,\n                 label: label_of_ty(famous_defs, config, ty)?,\n             });\n         }\n@@ -110,7 +110,7 @@ fn main() {\n                 [\n                     InlayHint {\n                         range: 147..172,\n-                        kind: ChainingHint,\n+                        kind: Chaining,\n                         label: [\n                             \"\",\n                             InlayHintLabelPart {\n@@ -130,7 +130,7 @@ fn main() {\n                     },\n                     InlayHint {\n                         range: 147..154,\n-                        kind: ChainingHint,\n+                        kind: Chaining,\n                         label: [\n                             \"\",\n                             InlayHintLabelPart {\n@@ -195,14 +195,14 @@ fn main() {\n                 [\n                     InlayHint {\n                         range: 143..190,\n-                        kind: ChainingHint,\n+                        kind: Chaining,\n                         label: [\n                             \"C\",\n                         ],\n                     },\n                     InlayHint {\n                         range: 143..179,\n-                        kind: ChainingHint,\n+                        kind: Chaining,\n                         label: [\n                             \"B\",\n                         ],\n@@ -238,7 +238,7 @@ fn main() {\n                 [\n                     InlayHint {\n                         range: 143..190,\n-                        kind: ChainingHint,\n+                        kind: Chaining,\n                         label: [\n                             \"\",\n                             InlayHintLabelPart {\n@@ -258,7 +258,7 @@ fn main() {\n                     },\n                     InlayHint {\n                         range: 143..179,\n-                        kind: ChainingHint,\n+                        kind: Chaining,\n                         label: [\n                             \"\",\n                             InlayHintLabelPart {\n@@ -308,7 +308,7 @@ fn main() {\n                 [\n                     InlayHint {\n                         range: 246..283,\n-                        kind: ChainingHint,\n+                        kind: Chaining,\n                         label: [\n                             \"\",\n                             InlayHintLabelPart {\n@@ -341,7 +341,7 @@ fn main() {\n                     },\n                     InlayHint {\n                         range: 246..265,\n-                        kind: ChainingHint,\n+                        kind: Chaining,\n                         label: [\n                             \"\",\n                             InlayHintLabelPart {\n@@ -406,28 +406,28 @@ fn main() {\n                 [\n                     InlayHint {\n                         range: 174..241,\n-                        kind: ChainingHint,\n+                        kind: Chaining,\n                         label: [\n                             \"impl Iterator<Item = ()>\",\n                         ],\n                     },\n                     InlayHint {\n                         range: 174..224,\n-                        kind: ChainingHint,\n+                        kind: Chaining,\n                         label: [\n                             \"impl Iterator<Item = ()>\",\n                         ],\n                     },\n                     InlayHint {\n                         range: 174..206,\n-                        kind: ChainingHint,\n+                        kind: Chaining,\n                         label: [\n                             \"impl Iterator<Item = ()>\",\n                         ],\n                     },\n                     InlayHint {\n                         range: 174..189,\n-                        kind: ChainingHint,\n+                        kind: Chaining,\n                         label: [\n                             \"&mut \",\n                             InlayHintLabelPart {\n@@ -476,7 +476,7 @@ fn main() {\n                 [\n                     InlayHint {\n                         range: 124..130,\n-                        kind: TypeHint,\n+                        kind: Type,\n                         label: [\n                             \"\",\n                             InlayHintLabelPart {\n@@ -496,7 +496,7 @@ fn main() {\n                     },\n                     InlayHint {\n                         range: 145..185,\n-                        kind: ChainingHint,\n+                        kind: Chaining,\n                         label: [\n                             \"\",\n                             InlayHintLabelPart {\n@@ -516,7 +516,7 @@ fn main() {\n                     },\n                     InlayHint {\n                         range: 145..168,\n-                        kind: ChainingHint,\n+                        kind: Chaining,\n                         label: [\n                             \"\",\n                             InlayHintLabelPart {\n@@ -536,7 +536,7 @@ fn main() {\n                     },\n                     InlayHint {\n                         range: 222..228,\n-                        kind: ParameterHint,\n+                        kind: Parameter,\n                         label: [\n                             InlayHintLabelPart {\n                                 text: \"self\","}, {"sha": "aae805f78d6900d6691bba2d8d9b689b9c6971e9", "filename": "crates/ide/src/inlay_hints/closing_brace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2444b2a402f8d551152cb482686c7839574ac1d/crates%2Fide%2Fsrc%2Finlay_hints%2Fclosing_brace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2444b2a402f8d551152cb482686c7839574ac1d/crates%2Fide%2Fsrc%2Finlay_hints%2Fclosing_brace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints%2Fclosing_brace.rs?ref=f2444b2a402f8d551152cb482686c7839574ac1d", "patch": "@@ -113,7 +113,7 @@ pub(super) fn hints(\n         .flatten();\n     acc.push(InlayHint {\n         range: closing_token.text_range(),\n-        kind: InlayKind::ClosingBraceHint,\n+        kind: InlayKind::ClosingBrace,\n         label: InlayHintLabel::simple(label, None, linked_location),\n     });\n "}, {"sha": "f03a18b8e960faf176c805064bb04ecdffc00a5e", "filename": "crates/ide/src/inlay_hints/closure_ret.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2444b2a402f8d551152cb482686c7839574ac1d/crates%2Fide%2Fsrc%2Finlay_hints%2Fclosure_ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2444b2a402f8d551152cb482686c7839574ac1d/crates%2Fide%2Fsrc%2Finlay_hints%2Fclosure_ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints%2Fclosure_ret.rs?ref=f2444b2a402f8d551152cb482686c7839574ac1d", "patch": "@@ -41,7 +41,7 @@ pub(super) fn hints(\n     }\n     acc.push(InlayHint {\n         range: param_list.syntax().text_range(),\n-        kind: InlayKind::ClosureReturnTypeHint,\n+        kind: InlayKind::ClosureReturnType,\n         label: label_of_ty(famous_defs, config, ty)?,\n     });\n     Some(())"}, {"sha": "310295cc379353652583db6ecfbea171527b3d6b", "filename": "crates/ide/src/inlay_hints/discriminant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2444b2a402f8d551152cb482686c7839574ac1d/crates%2Fide%2Fsrc%2Finlay_hints%2Fdiscriminant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2444b2a402f8d551152cb482686c7839574ac1d/crates%2Fide%2Fsrc%2Finlay_hints%2Fdiscriminant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints%2Fdiscriminant.rs?ref=f2444b2a402f8d551152cb482686c7839574ac1d", "patch": "@@ -43,7 +43,7 @@ pub(super) fn hints(\n             Some(field_list) => name.syntax().text_range().cover(field_list.syntax().text_range()),\n             None => name.syntax().text_range(),\n         },\n-        kind: InlayKind::DiscriminantHint,\n+        kind: InlayKind::Discriminant,\n         label: InlayHintLabel::simple(\n             match &d {\n                 Ok(v) => format!(\"{}\", v),"}, {"sha": "b7182085b312ee2a964f2524f93999c57bcb4f4e", "filename": "crates/ide/src/inlay_hints/fn_lifetime_fn.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f2444b2a402f8d551152cb482686c7839574ac1d/crates%2Fide%2Fsrc%2Finlay_hints%2Ffn_lifetime_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2444b2a402f8d551152cb482686c7839574ac1d/crates%2Fide%2Fsrc%2Finlay_hints%2Ffn_lifetime_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints%2Ffn_lifetime_fn.rs?ref=f2444b2a402f8d551152cb482686c7839574ac1d", "patch": "@@ -23,7 +23,7 @@ pub(super) fn hints(\n \n     let mk_lt_hint = |t: SyntaxToken, label: String| InlayHint {\n         range: t.text_range(),\n-        kind: InlayKind::LifetimeHint,\n+        kind: InlayKind::Lifetime,\n         label: label.into(),\n     };\n \n@@ -182,7 +182,7 @@ pub(super) fn hints(\n             let is_empty = gpl.generic_params().next().is_none();\n             acc.push(InlayHint {\n                 range: angle_tok.text_range(),\n-                kind: InlayKind::LifetimeHint,\n+                kind: InlayKind::Lifetime,\n                 label: format!(\n                     \"{}{}\",\n                     allocated_lifetimes.iter().format(\", \"),\n@@ -193,7 +193,7 @@ pub(super) fn hints(\n         }\n         (None, allocated_lifetimes) => acc.push(InlayHint {\n             range: func.name()?.syntax().text_range(),\n-            kind: InlayKind::GenericParamListHint,\n+            kind: InlayKind::GenericParamList,\n             label: format!(\"<{}>\", allocated_lifetimes.iter().format(\", \"),).into(),\n         }),\n     }"}, {"sha": "1122ee2e3925dfde7e827c66548c8265a7cc4f62", "filename": "crates/ide/src/inlay_hints/implicit_static.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2444b2a402f8d551152cb482686c7839574ac1d/crates%2Fide%2Fsrc%2Finlay_hints%2Fimplicit_static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2444b2a402f8d551152cb482686c7839574ac1d/crates%2Fide%2Fsrc%2Finlay_hints%2Fimplicit_static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints%2Fimplicit_static.rs?ref=f2444b2a402f8d551152cb482686c7839574ac1d", "patch": "@@ -32,7 +32,7 @@ pub(super) fn hints(\n             let t = ty.amp_token()?;\n             acc.push(InlayHint {\n                 range: t.text_range(),\n-                kind: InlayKind::LifetimeHint,\n+                kind: InlayKind::Lifetime,\n                 label: \"'static\".to_owned().into(),\n             });\n         }"}, {"sha": "9cdae6324104480a0280435b63685629d323cfeb", "filename": "crates/ide/src/inlay_hints/param_name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2444b2a402f8d551152cb482686c7839574ac1d/crates%2Fide%2Fsrc%2Finlay_hints%2Fparam_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2444b2a402f8d551152cb482686c7839574ac1d/crates%2Fide%2Fsrc%2Finlay_hints%2Fparam_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints%2Fparam_name.rs?ref=f2444b2a402f8d551152cb482686c7839574ac1d", "patch": "@@ -55,7 +55,7 @@ pub(super) fn hints(\n \n             InlayHint {\n                 range,\n-                kind: InlayKind::ParameterHint,\n+                kind: InlayKind::Parameter,\n                 label: InlayHintLabel::simple(param_name, None, linked_location),\n             }\n         });"}, {"sha": "0f0642bb4b5686816f872cf3f5cbcb64b6313c3f", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 44, "deletions": 44, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/f2444b2a402f8d551152cb482686c7839574ac1d/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2444b2a402f8d551152cb482686c7839574ac1d/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=f2444b2a402f8d551152cb482686c7839574ac1d", "patch": "@@ -431,10 +431,10 @@ pub(crate) fn inlay_hint(\n     mut inlay_hint: InlayHint,\n ) -> Cancellable<lsp_types::InlayHint> {\n     match inlay_hint.kind {\n-        InlayKind::ParameterHint if render_colons => inlay_hint.label.append_str(\":\"),\n-        InlayKind::TypeHint if render_colons => inlay_hint.label.prepend_str(\": \"),\n-        InlayKind::ClosureReturnTypeHint => inlay_hint.label.prepend_str(\" -> \"),\n-        InlayKind::DiscriminantHint => inlay_hint.label.prepend_str(\" = \"),\n+        InlayKind::Parameter if render_colons => inlay_hint.label.append_str(\":\"),\n+        InlayKind::Type if render_colons => inlay_hint.label.prepend_str(\": \"),\n+        InlayKind::ClosureReturnType => inlay_hint.label.prepend_str(\" -> \"),\n+        InlayKind::Discriminant => inlay_hint.label.prepend_str(\" = \"),\n         _ => {}\n     }\n \n@@ -444,64 +444,64 @@ pub(crate) fn inlay_hint(\n         position: match inlay_hint.kind {\n             // before annotated thing\n             InlayKind::OpeningParenthesis\n-            | InlayKind::ParameterHint\n-            | InlayKind::AdjustmentHint\n-            | InlayKind::BindingModeHint => position(line_index, inlay_hint.range.start()),\n+            | InlayKind::Parameter\n+            | InlayKind::Adjustment\n+            | InlayKind::BindingMode => position(line_index, inlay_hint.range.start()),\n             // after annotated thing\n-            InlayKind::ClosureReturnTypeHint\n-            | InlayKind::TypeHint\n-            | InlayKind::DiscriminantHint\n-            | InlayKind::ChainingHint\n-            | InlayKind::GenericParamListHint\n+            InlayKind::ClosureReturnType\n+            | InlayKind::Type\n+            | InlayKind::Discriminant\n+            | InlayKind::Chaining\n+            | InlayKind::GenericParamList\n             | InlayKind::ClosingParenthesis\n-            | InlayKind::AdjustmentHintPostfix\n-            | InlayKind::LifetimeHint\n-            | InlayKind::ClosingBraceHint => position(line_index, inlay_hint.range.end()),\n+            | InlayKind::AdjustmentPostfix\n+            | InlayKind::Lifetime\n+            | InlayKind::ClosingBrace => position(line_index, inlay_hint.range.end()),\n         },\n         padding_left: Some(match inlay_hint.kind {\n-            InlayKind::TypeHint => !render_colons,\n-            InlayKind::ChainingHint | InlayKind::ClosingBraceHint => true,\n+            InlayKind::Type => !render_colons,\n+            InlayKind::Chaining | InlayKind::ClosingBrace => true,\n             InlayKind::ClosingParenthesis\n-            | InlayKind::DiscriminantHint\n+            | InlayKind::Discriminant\n             | InlayKind::OpeningParenthesis\n-            | InlayKind::BindingModeHint\n-            | InlayKind::ClosureReturnTypeHint\n-            | InlayKind::GenericParamListHint\n-            | InlayKind::AdjustmentHint\n-            | InlayKind::AdjustmentHintPostfix\n-            | InlayKind::LifetimeHint\n-            | InlayKind::ParameterHint => false,\n+            | InlayKind::BindingMode\n+            | InlayKind::ClosureReturnType\n+            | InlayKind::GenericParamList\n+            | InlayKind::Adjustment\n+            | InlayKind::AdjustmentPostfix\n+            | InlayKind::Lifetime\n+            | InlayKind::Parameter => false,\n         }),\n         padding_right: Some(match inlay_hint.kind {\n             InlayKind::ClosingParenthesis\n             | InlayKind::OpeningParenthesis\n-            | InlayKind::ChainingHint\n-            | InlayKind::ClosureReturnTypeHint\n-            | InlayKind::GenericParamListHint\n-            | InlayKind::AdjustmentHint\n-            | InlayKind::AdjustmentHintPostfix\n-            | InlayKind::TypeHint\n-            | InlayKind::DiscriminantHint\n-            | InlayKind::ClosingBraceHint => false,\n-            InlayKind::BindingModeHint => {\n+            | InlayKind::Chaining\n+            | InlayKind::ClosureReturnType\n+            | InlayKind::GenericParamList\n+            | InlayKind::Adjustment\n+            | InlayKind::AdjustmentPostfix\n+            | InlayKind::Type\n+            | InlayKind::Discriminant\n+            | InlayKind::ClosingBrace => false,\n+            InlayKind::BindingMode => {\n                 matches!(&label, lsp_types::InlayHintLabel::String(s) if s != \"&\")\n             }\n-            InlayKind::ParameterHint | InlayKind::LifetimeHint => true,\n+            InlayKind::Parameter | InlayKind::Lifetime => true,\n         }),\n         kind: match inlay_hint.kind {\n-            InlayKind::ParameterHint => Some(lsp_types::InlayHintKind::PARAMETER),\n-            InlayKind::ClosureReturnTypeHint | InlayKind::TypeHint | InlayKind::ChainingHint => {\n+            InlayKind::Parameter => Some(lsp_types::InlayHintKind::PARAMETER),\n+            InlayKind::ClosureReturnType | InlayKind::Type | InlayKind::Chaining => {\n                 Some(lsp_types::InlayHintKind::TYPE)\n             }\n             InlayKind::ClosingParenthesis\n-            | InlayKind::DiscriminantHint\n+            | InlayKind::Discriminant\n             | InlayKind::OpeningParenthesis\n-            | InlayKind::BindingModeHint\n-            | InlayKind::GenericParamListHint\n-            | InlayKind::LifetimeHint\n-            | InlayKind::AdjustmentHint\n-            | InlayKind::AdjustmentHintPostfix\n-            | InlayKind::ClosingBraceHint => None,\n+            | InlayKind::BindingMode\n+            | InlayKind::GenericParamList\n+            | InlayKind::Lifetime\n+            | InlayKind::Adjustment\n+            | InlayKind::AdjustmentPostfix\n+            | InlayKind::ClosingBrace => None,\n         },\n         text_edits: None,\n         data: None,"}, {"sha": "0f24ddbbc00e2377306cfa9a890ade13d6eed9be", "filename": "docs/dev/lsp-extensions.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2444b2a402f8d551152cb482686c7839574ac1d/docs%2Fdev%2Flsp-extensions.md", "raw_url": "https://github.com/rust-lang/rust/raw/f2444b2a402f8d551152cb482686c7839574ac1d/docs%2Fdev%2Flsp-extensions.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Flsp-extensions.md?ref=f2444b2a402f8d551152cb482686c7839574ac1d", "patch": "@@ -1,5 +1,5 @@\n <!---\n-lsp_ext.rs hash: 45bd7985265725c5\n+lsp_ext.rs hash: d296ce1226e3568d\n \n If you need to change the above hash to make the test pass, please check if you\n need to adjust this doc as well and ping this issue:"}]}