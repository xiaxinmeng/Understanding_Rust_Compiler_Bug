{"sha": "17a0e228833de16ed7e8718ba177dceeec4abfb2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3YTBlMjI4ODMzZGUxNmVkN2U4NzE4YmExNzdkY2VlZWM0YWJmYjI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-13T06:36:28Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-13T06:36:28Z"}, "message": "simplify", "tree": {"sha": "da5fff6200c47687d6871425bf4c1090bc74a36f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da5fff6200c47687d6871425bf4c1090bc74a36f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17a0e228833de16ed7e8718ba177dceeec4abfb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17a0e228833de16ed7e8718ba177dceeec4abfb2", "html_url": "https://github.com/rust-lang/rust/commit/17a0e228833de16ed7e8718ba177dceeec4abfb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17a0e228833de16ed7e8718ba177dceeec4abfb2/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65b00736535255c089cfef58c7b4eb13d4d8dbad", "url": "https://api.github.com/repos/rust-lang/rust/commits/65b00736535255c089cfef58c7b4eb13d4d8dbad", "html_url": "https://github.com/rust-lang/rust/commit/65b00736535255c089cfef58c7b4eb13d4d8dbad"}], "stats": {"total": 15, "additions": 5, "deletions": 10}, "files": [{"sha": "649c5b684784f678890c131b9d71749747026484", "filename": "crates/ra_hir/src/source_binder.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/17a0e228833de16ed7e8718ba177dceeec4abfb2/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17a0e228833de16ed7e8718ba177dceeec4abfb2/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs?ref=17a0e228833de16ed7e8718ba177dceeec4abfb2", "patch": "@@ -101,15 +101,6 @@ fn function_from_source(\n     Some(Function { id: ctx.to_def(fn_def) })\n }\n \n-fn function_from_child_node(\n-    db: &impl HirDatabase,\n-    file_id: FileId,\n-    node: &SyntaxNode,\n-) -> Option<Function> {\n-    let fn_def = node.ancestors().find_map(ast::FnDef::cast)?;\n-    function_from_source(db, file_id, fn_def)\n-}\n-\n pub fn struct_from_module(\n     db: &impl HirDatabase,\n     module: Module,\n@@ -148,7 +139,11 @@ fn resolver_for_node(\n     node.ancestors()\n         .find_map(|node| {\n             if ast::Expr::cast(node).is_some() || ast::Block::cast(node).is_some() {\n-                if let Some(func) = function_from_child_node(db, file_id, node) {\n+                if let Some(func) = node\n+                    .ancestors()\n+                    .find_map(ast::FnDef::cast)\n+                    .and_then(|it| function_from_source(db, file_id, it))\n+                {\n                     let scopes = func.scopes(db);\n                     let scope = match offset {\n                         None => scopes.scope_for(&node),"}]}