{"sha": "6e11329b54c2fc4e3ed73f84c1bce13f253cfed7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlMTEzMjliNTRjMmZjNGUzZWQ3M2Y4NGMxYmNlMTNmMjUzY2ZlZDc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-08-14T09:17:03Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-08-14T09:17:03Z"}, "message": "mention 'lifetime extension' in promotion doc comments", "tree": {"sha": "703cec12ca1c14a4c97a82509edb351a1e4beb9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/703cec12ca1c14a4c97a82509edb351a1e4beb9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e11329b54c2fc4e3ed73f84c1bce13f253cfed7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e11329b54c2fc4e3ed73f84c1bce13f253cfed7", "html_url": "https://github.com/rust-lang/rust/commit/6e11329b54c2fc4e3ed73f84c1bce13f253cfed7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e11329b54c2fc4e3ed73f84c1bce13f253cfed7/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e5a27766ff14af36448a4b4c0a8bff84090168f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e5a27766ff14af36448a4b4c0a8bff84090168f", "html_url": "https://github.com/rust-lang/rust/commit/8e5a27766ff14af36448a4b4c0a8bff84090168f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "94637bae44a7806cce8d6c3b9157890ebd74f512", "filename": "src/librustc_mir/transform/promote_consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e11329b54c2fc4e3ed73f84c1bce13f253cfed7/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e11329b54c2fc4e3ed73f84c1bce13f253cfed7/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs?ref=6e11329b54c2fc4e3ed73f84c1bce13f253cfed7", "patch": "@@ -101,7 +101,7 @@ impl TempState {\n /// of a larger candidate.\n #[derive(Copy, Clone, PartialEq, Eq, Debug)]\n pub enum Candidate {\n-    /// Borrow of a constant temporary.\n+    /// Borrow of a constant temporary, candidate for lifetime extension.\n     Ref(Location),\n \n     /// Promotion of the `x` in `[x; 32]`."}]}