{"sha": "958a9cf297d313c04c40b4b5164679b516e92885", "node_id": "C_kwDOAAsO6NoAKDk1OGE5Y2YyOTdkMzEzYzA0YzQwYjRiNTE2NDY3OWI1MTZlOTI4ODU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-02T18:07:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-02T18:07:38Z"}, "message": "Auto merge of #9417 - Jarcho:ice_9414, r=Alexendoo\n\nDon't use `hir_ty_to_ty` in `result_large_err`\n\nfixes #9414\n\nThis occurs starting with 2022-09-01. I checked that this does fix the ICE on rust-lang/rust@9353538. Not sure which pr caused the late-bound region to leak through `hir_ty_to_ty`.\n\nchangelog: None", "tree": {"sha": "7ca70d02e54acccf6e40738e020205cd991eebc8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ca70d02e54acccf6e40738e020205cd991eebc8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/958a9cf297d313c04c40b4b5164679b516e92885", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/958a9cf297d313c04c40b4b5164679b516e92885", "html_url": "https://github.com/rust-lang/rust/commit/958a9cf297d313c04c40b4b5164679b516e92885", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/958a9cf297d313c04c40b4b5164679b516e92885/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "334be18a74c770e30a7cf4a069106bc0d4ae8daf", "url": "https://api.github.com/repos/rust-lang/rust/commits/334be18a74c770e30a7cf4a069106bc0d4ae8daf", "html_url": "https://github.com/rust-lang/rust/commit/334be18a74c770e30a7cf4a069106bc0d4ae8daf"}, {"sha": "bd70ccf915482503b193d8d53e00dcdc6197676a", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd70ccf915482503b193d8d53e00dcdc6197676a", "html_url": "https://github.com/rust-lang/rust/commit/bd70ccf915482503b193d8d53e00dcdc6197676a"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "9591405cb06f7b2d836d55f2c42148faf1ac0947", "filename": "clippy_lints/src/functions/result.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/958a9cf297d313c04c40b4b5164679b516e92885/clippy_lints%2Fsrc%2Ffunctions%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/958a9cf297d313c04c40b4b5164679b516e92885/clippy_lints%2Fsrc%2Ffunctions%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions%2Fresult.rs?ref=958a9cf297d313c04c40b4b5164679b516e92885", "patch": "@@ -4,7 +4,6 @@ use rustc_lint::{LateContext, LintContext};\n use rustc_middle::lint::in_external_macro;\n use rustc_middle::ty::{self, Ty};\n use rustc_span::{sym, Span};\n-use rustc_typeck::hir_ty_to_ty;\n \n use clippy_utils::diagnostics::{span_lint_and_help, span_lint_and_then};\n use clippy_utils::trait_ref_of_method;\n@@ -17,11 +16,12 @@ use super::{RESULT_LARGE_ERR, RESULT_UNIT_ERR};\n fn result_err_ty<'tcx>(\n     cx: &LateContext<'tcx>,\n     decl: &hir::FnDecl<'tcx>,\n+    id: hir::def_id::LocalDefId,\n     item_span: Span,\n ) -> Option<(&'tcx hir::Ty<'tcx>, Ty<'tcx>)> {\n     if !in_external_macro(cx.sess(), item_span)\n         && let hir::FnRetTy::Return(hir_ty) = decl.output\n-        && let ty = hir_ty_to_ty(cx.tcx, hir_ty)\n+        && let ty = cx.tcx.erase_late_bound_regions(cx.tcx.fn_sig(id).output())\n         && is_type_diagnostic_item(cx, ty, sym::Result)\n         && let ty::Adt(_, substs) = ty.kind()\n     {\n@@ -34,7 +34,7 @@ fn result_err_ty<'tcx>(\n \n pub(super) fn check_item<'tcx>(cx: &LateContext<'tcx>, item: &hir::Item<'tcx>, large_err_threshold: u64) {\n     if let hir::ItemKind::Fn(ref sig, _generics, _) = item.kind\n-        && let Some((hir_ty, err_ty)) = result_err_ty(cx, sig.decl, item.span)\n+        && let Some((hir_ty, err_ty)) = result_err_ty(cx, sig.decl, item.def_id, item.span)\n     {\n         if cx.access_levels.is_exported(item.def_id) {\n             let fn_header_span = item.span.with_hi(sig.decl.output.span().hi());\n@@ -47,7 +47,7 @@ pub(super) fn check_item<'tcx>(cx: &LateContext<'tcx>, item: &hir::Item<'tcx>, l\n pub(super) fn check_impl_item<'tcx>(cx: &LateContext<'tcx>, item: &hir::ImplItem<'tcx>, large_err_threshold: u64) {\n     // Don't lint if method is a trait's implementation, we can't do anything about those\n     if let hir::ImplItemKind::Fn(ref sig, _) = item.kind\n-        && let Some((hir_ty, err_ty)) = result_err_ty(cx, sig.decl, item.span)\n+        && let Some((hir_ty, err_ty)) = result_err_ty(cx, sig.decl, item.def_id, item.span)\n         && trait_ref_of_method(cx, item.def_id).is_none()\n     {\n         if cx.access_levels.is_exported(item.def_id) {\n@@ -61,7 +61,7 @@ pub(super) fn check_impl_item<'tcx>(cx: &LateContext<'tcx>, item: &hir::ImplItem\n pub(super) fn check_trait_item<'tcx>(cx: &LateContext<'tcx>, item: &hir::TraitItem<'tcx>, large_err_threshold: u64) {\n     if let hir::TraitItemKind::Fn(ref sig, _) = item.kind {\n         let fn_header_span = item.span.with_hi(sig.decl.output.span().hi());\n-        if let Some((hir_ty, err_ty)) = result_err_ty(cx, sig.decl, item.span) {\n+        if let Some((hir_ty, err_ty)) = result_err_ty(cx, sig.decl, item.def_id, item.span) {\n             if cx.access_levels.is_exported(item.def_id) {\n                 check_result_unit_err(cx, err_ty, fn_header_span);\n             }"}, {"sha": "02cf5d5c240fa131765f8a9e77cbbfc36f6d336b", "filename": "tests/ui/crashes/ice-9414.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/958a9cf297d313c04c40b4b5164679b516e92885/tests%2Fui%2Fcrashes%2Fice-9414.rs", "raw_url": "https://github.com/rust-lang/rust/raw/958a9cf297d313c04c40b4b5164679b516e92885/tests%2Fui%2Fcrashes%2Fice-9414.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-9414.rs?ref=958a9cf297d313c04c40b4b5164679b516e92885", "patch": "@@ -0,0 +1,8 @@\n+#![warn(clippy::result_large_err)]\n+\n+trait T {}\n+fn f(_: &u32) -> Result<(), *const (dyn '_ + T)> {\n+    Ok(())\n+}\n+\n+fn main() {}"}]}