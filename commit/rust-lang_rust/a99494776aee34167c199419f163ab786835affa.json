{"sha": "a99494776aee34167c199419f163ab786835affa", "node_id": "C_kwDOAAsO6NoAKGE5OTQ5NDc3NmFlZTM0MTY3YzE5OTQxOWYxNjNhYjc4NjgzNWFmZmE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-11T22:30:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-11T22:30:34Z"}, "message": "Auto merge of #2809 - saethlin:round_ties_even, r=oli-obk\n\nImplement round_ties_even\n\nFor tests, I just copied over the standard library's tests for this feature. It looks like the library uses an approximate equality check for most/all float tests, and I've replaced that check with our float equality check pattern.", "tree": {"sha": "d0135fd35529d6baab3d8035fc1e2b535d30d291", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0135fd35529d6baab3d8035fc1e2b535d30d291"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a99494776aee34167c199419f163ab786835affa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a99494776aee34167c199419f163ab786835affa", "html_url": "https://github.com/rust-lang/rust/commit/a99494776aee34167c199419f163ab786835affa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a99494776aee34167c199419f163ab786835affa/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f1f7b0840885fac83ff3f36053cb04833c1af5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f1f7b0840885fac83ff3f36053cb04833c1af5a", "html_url": "https://github.com/rust-lang/rust/commit/0f1f7b0840885fac83ff3f36053cb04833c1af5a"}, {"sha": "0ea51e101e7c6bf56b83572e2d818a6da3c907e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ea51e101e7c6bf56b83572e2d818a6da3c907e7", "html_url": "https://github.com/rust-lang/rust/commit/0ea51e101e7c6bf56b83572e2d818a6da3c907e7"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "5412507ecfa3279dce697fc1f172aa505a467176", "filename": "src/tools/miri/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a99494776aee34167c199419f163ab786835affa/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a99494776aee34167c199419f163ab786835affa/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs?ref=a99494776aee34167c199419f163ab786835affa", "patch": "@@ -9,6 +9,7 @@\n #![feature(nonzero_ops)]\n #![feature(local_key_cell_methods)]\n #![feature(is_terminal)]\n+#![feature(round_ties_even)]\n // Configure clippy and other lints\n #![allow(\n     clippy::collapsible_else_if,"}, {"sha": "9ecbb18ef5ad58f99ce314b3e1da4963588175fd", "filename": "src/tools/miri/src/shims/intrinsics/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a99494776aee34167c199419f163ab786835affa/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a99494776aee34167c199419f163ab786835affa/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fintrinsics%2Fmod.rs?ref=a99494776aee34167c199419f163ab786835affa", "patch": "@@ -157,6 +157,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n             | \"ceilf32\"\n             | \"truncf32\"\n             | \"roundf32\"\n+            | \"rintf32\"\n             => {\n                 let [f] = check_arg_count(args)?;\n                 // FIXME: Using host floats.\n@@ -174,6 +175,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n                     \"ceilf32\" => f.ceil(),\n                     \"truncf32\" => f.trunc(),\n                     \"roundf32\" => f.round(),\n+                    \"rintf32\" => f.round_ties_even(),\n                     _ => bug!(),\n                 };\n                 this.write_scalar(Scalar::from_u32(f.to_bits()), dest)?;\n@@ -192,6 +194,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n             | \"ceilf64\"\n             | \"truncf64\"\n             | \"roundf64\"\n+            | \"rintf64\"\n             => {\n                 let [f] = check_arg_count(args)?;\n                 // FIXME: Using host floats.\n@@ -209,6 +212,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n                     \"ceilf64\" => f.ceil(),\n                     \"truncf64\" => f.trunc(),\n                     \"roundf64\" => f.round(),\n+                    \"rintf64\" => f.round_ties_even(),\n                     _ => bug!(),\n                 };\n                 this.write_scalar(Scalar::from_u64(f.to_bits()), dest)?;"}, {"sha": "fee5ca44ffb344b7f3bbf9c7577dc7f0b2cc3d56", "filename": "src/tools/miri/tests/pass/float.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/a99494776aee34167c199419f163ab786835affa/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a99494776aee34167c199419f163ab786835affa/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Ffloat.rs?ref=a99494776aee34167c199419f163ab786835affa", "patch": "@@ -1,4 +1,5 @@\n #![feature(stmt_expr_attributes)]\n+#![feature(round_ties_even)]\n #![allow(arithmetic_overflow)]\n use std::fmt::Debug;\n use std::hint::black_box;\n@@ -9,6 +10,7 @@ fn main() {\n     more_casts();\n     ops();\n     nan_casts();\n+    rounding();\n }\n \n // Helper function to avoid promotion so that this tests \"run-time\" casts, not CTFE.\n@@ -553,3 +555,31 @@ fn nan_casts() {\n     assert!(nan1_32.is_nan());\n     assert!(nan2_32.is_nan());\n }\n+\n+fn rounding() {\n+    // Test cases taken from the library's tests for this feature\n+    // f32\n+    assert_eq(2.5f32.round_ties_even(), 2.0f32);\n+    assert_eq(1.0f32.round_ties_even(), 1.0f32);\n+    assert_eq(1.3f32.round_ties_even(), 1.0f32);\n+    assert_eq(1.5f32.round_ties_even(), 2.0f32);\n+    assert_eq(1.7f32.round_ties_even(), 2.0f32);\n+    assert_eq(0.0f32.round_ties_even(), 0.0f32);\n+    assert_eq((-0.0f32).round_ties_even(), -0.0f32);\n+    assert_eq((-1.0f32).round_ties_even(), -1.0f32);\n+    assert_eq((-1.3f32).round_ties_even(), -1.0f32);\n+    assert_eq((-1.5f32).round_ties_even(), -2.0f32);\n+    assert_eq((-1.7f32).round_ties_even(), -2.0f32);\n+    // f64\n+    assert_eq(2.5f64.round_ties_even(), 2.0f64);\n+    assert_eq(1.0f64.round_ties_even(), 1.0f64);\n+    assert_eq(1.3f64.round_ties_even(), 1.0f64);\n+    assert_eq(1.5f64.round_ties_even(), 2.0f64);\n+    assert_eq(1.7f64.round_ties_even(), 2.0f64);\n+    assert_eq(0.0f64.round_ties_even(), 0.0f64);\n+    assert_eq((-0.0f64).round_ties_even(), -0.0f64);\n+    assert_eq((-1.0f64).round_ties_even(), -1.0f64);\n+    assert_eq((-1.3f64).round_ties_even(), -1.0f64);\n+    assert_eq((-1.5f64).round_ties_even(), -2.0f64);\n+    assert_eq((-1.7f64).round_ties_even(), -2.0f64);\n+}"}]}