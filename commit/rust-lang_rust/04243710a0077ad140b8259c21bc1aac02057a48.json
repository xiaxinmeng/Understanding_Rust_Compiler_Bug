{"sha": "04243710a0077ad140b8259c21bc1aac02057a48", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0MjQzNzEwYTAwNzdhZDE0MGI4MjU5YzIxYmMxYWFjMDIwNTdhNDg=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-05-28T23:31:48Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-05-28T23:31:48Z"}, "message": "Account for trailing comma when suggesting `where` clauses\n\nFix #72693.", "tree": {"sha": "49b30c93b3b984fa66922b1ea60b7db4689d86ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49b30c93b3b984fa66922b1ea60b7db4689d86ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04243710a0077ad140b8259c21bc1aac02057a48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04243710a0077ad140b8259c21bc1aac02057a48", "html_url": "https://github.com/rust-lang/rust/commit/04243710a0077ad140b8259c21bc1aac02057a48", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04243710a0077ad140b8259c21bc1aac02057a48/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff991d60349201a90ca15202dd0323ebdfab8745", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff991d60349201a90ca15202dd0323ebdfab8745", "html_url": "https://github.com/rust-lang/rust/commit/ff991d60349201a90ca15202dd0323ebdfab8745"}], "stats": {"total": 34, "additions": 20, "deletions": 14}, "files": [{"sha": "96c36d989e9281f189f5e78b76f9c10d7b04c8b6", "filename": "src/librustc_middle/ty/diagnostics.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/04243710a0077ad140b8259c21bc1aac02057a48/src%2Flibrustc_middle%2Fty%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04243710a0077ad140b8259c21bc1aac02057a48/src%2Flibrustc_middle%2Fty%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fdiagnostics.rs?ref=04243710a0077ad140b8259c21bc1aac02057a48", "patch": "@@ -7,7 +7,6 @@ use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::{QPath, TyKind, WhereBoundPredicate, WherePredicate};\n-use rustc_span::{BytePos, Span};\n \n impl<'tcx> TyS<'tcx> {\n     /// Similar to `TyS::is_primitive`, but also considers inferred numeric values to be primitive.\n@@ -221,18 +220,16 @@ pub fn suggest_constraining_type_param(\n             }\n         }\n \n-        let where_clause_span = generics.where_clause.span_for_predicates_or_empty_place();\n         // Account for `fn foo<T>(t: T) where T: Foo,` so we don't suggest two trailing commas.\n-        let mut trailing_comma = false;\n-        if let Ok(snippet) = tcx.sess.source_map().span_to_snippet(where_clause_span) {\n-            trailing_comma = snippet.ends_with(',');\n-        }\n-        let where_clause_span = if trailing_comma {\n-            let hi = where_clause_span.hi();\n-            Span::new(hi - BytePos(1), hi, where_clause_span.ctxt())\n-        } else {\n-            where_clause_span.shrink_to_hi()\n-        };\n+        let end = generics.where_clause.span_for_predicates_or_empty_place().shrink_to_hi();\n+        let where_clause_span = generics\n+            .where_clause\n+            .predicates\n+            .last()\n+            .map(|p| p.span())\n+            .unwrap_or(end)\n+            .shrink_to_hi()\n+            .to(end);\n \n         match &param_spans[..] {\n             &[&param_span] => suggest_restrict(param_span.shrink_to_hi()),"}, {"sha": "eb281b270ff2a85dfdc59cc4e6c4bd058b279552", "filename": "src/librustc_trait_selection/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/04243710a0077ad140b8259c21bc1aac02057a48/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04243710a0077ad140b8259c21bc1aac02057a48/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=04243710a0077ad140b8259c21bc1aac02057a48", "patch": "@@ -169,8 +169,17 @@ pub trait InferCtxtExt<'tcx> {\n }\n \n fn predicate_constraint(generics: &hir::Generics<'_>, pred: String) -> (Span, String) {\n+    let end = generics.where_clause.span_for_predicates_or_empty_place().shrink_to_hi();\n     (\n-        generics.where_clause.span_for_predicates_or_empty_place().shrink_to_hi(),\n+        // Account for `where T: Foo,` so we don't suggest two trailing commas.\n+        generics\n+            .where_clause\n+            .predicates\n+            .last()\n+            .map(|p| p.span())\n+            .unwrap_or(end)\n+            .shrink_to_hi()\n+            .to(end),\n         format!(\n             \"{} {}\",\n             if !generics.where_clause.predicates.is_empty() { \",\" } else { \" where\" },"}, {"sha": "562dec9f080de55e89350c49b20ab13e27bb2443", "filename": "src/test/ui/bound-suggestions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04243710a0077ad140b8259c21bc1aac02057a48/src%2Ftest%2Fui%2Fbound-suggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04243710a0077ad140b8259c21bc1aac02057a48/src%2Ftest%2Fui%2Fbound-suggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbound-suggestions.rs?ref=04243710a0077ad140b8259c21bc1aac02057a48", "patch": "@@ -19,7 +19,7 @@ fn test_one_bound<T: Sized>(t: T) {\n }\n \n #[allow(dead_code)]\n-fn test_no_bounds_where<X, Y>(x: X, y: Y) where X: std::fmt::Debug {\n+fn test_no_bounds_where<X, Y>(x: X, y: Y) where X: std::fmt::Debug, {\n     println!(\"{:?} {:?}\", x, y);\n     //~^ ERROR doesn't implement\n }"}]}