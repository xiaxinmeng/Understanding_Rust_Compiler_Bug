{"sha": "14534fa071b7d5d886a9c17bbf180854682b69b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0NTM0ZmEwNzFiN2Q1ZDg4NmE5YzE3YmJmMTgwODU0NjgyYjY5YjM=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-03-25T18:09:04Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-03-25T18:52:58Z"}, "message": "Document how to create a Clippy release", "tree": {"sha": "164cda743f4f11b85490c4301d52e94e94036c83", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/164cda743f4f11b85490c4301d52e94e94036c83"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14534fa071b7d5d886a9c17bbf180854682b69b3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEqv54U47RUUXZfOLnLO/Nsn7QvnkFAl57qIoACgkQLO/Nsn7Q\nvnlqWw/7B17t3WjUAp6M5E8j8NR0F9c+WCt8IrHhI8KN+Q797S5Xdihp+xwErDjJ\nA4FMIROoX7+XBjhL2KU7cxAxlQNKXGGtG3UZrX07LaRLjDuxMzT0afTWtcASXTo5\n3ZqWhJxCsf/Il8+un8ijSyLUSQjjOvEsZAuBVko37CLtTOm3ErN7NMSKOSOz/O4B\n3fq+hkTaG8srAo5tlhJqaUrDWn7aiX8NJi4NpceXBVB1ok8a8aXOkdrnner7tjQw\nLSyw9OAZHabKqV4DLYoup66MvxdHMHHjbNSRXqxS+ca/nJ9hV493W5SaZ6eg3s/M\noTA9bP5isftk9n1vZOw6OOq2ZxM9B511hi5FReowyfxzrvpwbCdmLvbDEE83ty0y\npA55XKZB3khE6mAamfjkZS3Q/5uZS7yN4w59+E9UcItaevO+GV/LroGwFS8gSeAM\n5p4NliTe1yNLOWbseV21m1tkNn0EmuARMq/ULRkB/xwdx9iraA6EShivoJGNMP2a\nwri/wYI1nLfTj4yS6rIsSyzpY9E5RCftHXXbqxpL6wlNqbHSeiBjhX0cTC+2VtEr\nOqPDJAC812hfXZ/C9pZE8GyeN9HS9CfX3dTHv9nBosnrBOH/B/6IUwyAe1ZYwqgX\nxQBtEKolS49LzlWwsgzlDx1Cu6A9jSSxB2xF2Glaxw1eL/Oi5P4=\n=t7YN\n-----END PGP SIGNATURE-----", "payload": "tree 164cda743f4f11b85490c4301d52e94e94036c83\nparent 2ff568d746e4641b992c0b74bea046e43a637997\nauthor flip1995 <hello@philkrones.com> 1585159744 +0100\ncommitter flip1995 <hello@philkrones.com> 1585162378 +0100\n\nDocument how to create a Clippy release\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14534fa071b7d5d886a9c17bbf180854682b69b3", "html_url": "https://github.com/rust-lang/rust/commit/14534fa071b7d5d886a9c17bbf180854682b69b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14534fa071b7d5d886a9c17bbf180854682b69b3/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ff568d746e4641b992c0b74bea046e43a637997", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ff568d746e4641b992c0b74bea046e43a637997", "html_url": "https://github.com/rust-lang/rust/commit/2ff568d746e4641b992c0b74bea046e43a637997"}], "stats": {"total": 101, "additions": 101, "deletions": 0}, "files": [{"sha": "6ba8266a77e685dc40167bb2f3b9277f04525783", "filename": "doc/release.md", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/rust-lang/rust/blob/14534fa071b7d5d886a9c17bbf180854682b69b3/doc%2Frelease.md", "raw_url": "https://github.com/rust-lang/rust/raw/14534fa071b7d5d886a9c17bbf180854682b69b3/doc%2Frelease.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frelease.md?ref=14534fa071b7d5d886a9c17bbf180854682b69b3", "patch": "@@ -0,0 +1,101 @@\n+# Release a new Clippy Version\n+\n+_NOTE: This document is probably only relevant to you, if you're a member of the\n+Clippy team._\n+\n+Clippy is released together with stable Rust releases. The dates for these\n+releases can be found at the [Rust Forge]. This document explains the necessary\n+steps to create a Clippy release.\n+\n+1. [Find the Clippy commit](#find-the-clippy-commit)\n+2. [Tag the stable commit](#tag-the-stable-commit)\n+3. [Update `CHANGELOG.md`](#update-changelogmd)\n+4. [Remerge the `beta` branch](#remerge-the-beta-branch)\n+5. [Update the `beta` branch](#update-the-beta-branch)\n+\n+_NOTE: This document is for stable Rust releases, not for point releases. For\n+point releases, step 1. and 2. should be enough._\n+\n+[Rust Forge]: https://forge.rust-lang.org/\n+\n+\n+## Find the Clippy commit\n+\n+The first step is to tag the Clippy commit, that is included in the stable Rust\n+release. This commit can be found in the Rust repository.\n+\n+```bash\n+# Assuming the current directory corresponds to the Rust repository\n+$ git fetch upstream    # `upstream` is the `rust-lang/rust` remote\n+$ git checkout 1.XX.0   # XX should be exchanged with the corresponding version\n+$ git submodule update\n+$ SHA=$(git submodule status src/tools/clippy | awk '{print $1}')\n+```\n+\n+\n+## Tag the stable commit\n+\n+After finding the Clippy commit, it can be tagged with the release number.\n+\n+```bash\n+# Assuming the current directory corresponds to the Clippy repository\n+$ git checkout $SHA\n+$ git tag rust-1.XX.0               # XX should be exchanged with the corresponding version\n+$ git push upstream master --tags   # `upstream` is the `rust-lang/rust-clippy` remote\n+```\n+\n+After this, the release should be available on the Clippy [release page].\n+\n+[release page]: https://github.com/rust-lang/rust-clippy/releases\n+\n+\n+## Update `CHANGELOG.md`\n+\n+For this see the document on [how to update the changelog].\n+\n+[how to update the changelog]: https://github.com/rust-lang/rust-clippy/blob/master/doc/changelog_update.md\n+\n+\n+## Remerge the `beta` branch\n+\n+This step is only necessary, if since the last release something was backported\n+to the beta Rust release. The remerge is then necessary, to make sure that the\n+Clippy commit, that was used by the now stable Rust release, persists in the\n+tree of the Clippy repository.\n+\n+```bash\n+# Assuming `HEAD` is the current `master` branch of rust-lang/rust-clippy\n+$ git checkout -b backport_remerge\n+$ git merge beta\n+$ git diff  # This diff has to be empty, otherwise something with the remerge failed\n+$ git push origin backport_remerge  # This can be pushed to your fork\n+```\n+\n+After this, open a PR to the master branch. In this PR, the commit hash of the\n+`HEAD` of the `beta` branch must exists. In addition to that, no files should\n+be changed by this PR.\n+\n+\n+## Update the `beta` branch\n+\n+This step must be done, **after** the PR of the previous step was merged.\n+\n+First, the Clippy commit of the `beta` branch of the Rust repository has to be\n+determined.\n+\n+```bash\n+# Assuming the current directory corresponds to the Rust repository\n+$ git checkout beta\n+$ git submodule update\n+$ BETA_SHA=$(git submodule status src/tools/clippy | awk '{print $1}')\n+```\n+\n+After finding the Clippy commit, the `beta` branch in the Clippy repository can\n+be updated.\n+\n+```bash\n+# Assuming the current directory corresponds to the Clippy repository\n+$ git checkout beta\n+$ git rebase $BETA_SHA\n+$ git push upstream beta [-f]   # This requires a force push, if a remerge was done\n+```"}]}