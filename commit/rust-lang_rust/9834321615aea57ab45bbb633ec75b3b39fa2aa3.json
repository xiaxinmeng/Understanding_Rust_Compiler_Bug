{"sha": "9834321615aea57ab45bbb633ec75b3b39fa2aa3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4MzQzMjE2MTVhZWE1N2FiNDViYmI2MzNlYzc1YjNiMzlmYTJhYTM=", "commit": {"author": {"name": "Elly Jones", "email": "elly@leptoquark.net", "date": "2011-12-21T01:41:23Z"}, "committer": {"name": "Elly Jones", "email": "elly@leptoquark.net", "date": "2011-12-21T01:41:23Z"}, "message": "cargo: Add list and search.\n\nIn aid of search, add a new field to the packages.json format, called \"tags\",\nwhose value is a list of strings. Search accepts a list of tags, all of which\nmust match for the package to be shown.\n\nSigned-off-by: Elly Jones <elly@leptoquark.net>", "tree": {"sha": "5a449da6e859534f8d276f66d895b91afc3498dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a449da6e859534f8d276f66d895b91afc3498dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9834321615aea57ab45bbb633ec75b3b39fa2aa3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9834321615aea57ab45bbb633ec75b3b39fa2aa3", "html_url": "https://github.com/rust-lang/rust/commit/9834321615aea57ab45bbb633ec75b3b39fa2aa3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9834321615aea57ab45bbb633ec75b3b39fa2aa3/comments", "author": null, "committer": null, "parents": [{"sha": "af564caff73441dac4c212c621f34dc709e167b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/af564caff73441dac4c212c621f34dc709e167b4", "html_url": "https://github.com/rust-lang/rust/commit/af564caff73441dac4c212c621f34dc709e167b4"}], "stats": {"total": 59, "additions": 55, "deletions": 4}, "files": [{"sha": "043644b9a153ffd185684cb00978d270dbf93ab3", "filename": "src/cargo/cargo.rs", "status": "modified", "additions": 55, "deletions": 4, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/9834321615aea57ab45bbb633ec75b3b39fa2aa3/src%2Fcargo%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9834321615aea57ab45bbb633ec75b3b39fa2aa3/src%2Fcargo%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo%2Fcargo.rs?ref=9834321615aea57ab45bbb633ec75b3b39fa2aa3", "patch": "@@ -30,7 +30,8 @@ type package = {\n     name: str,\n     uuid: str,\n     url: str,\n-    method: str\n+    method: str,\n+    tags: [str]\n };\n \n type source = {\n@@ -241,18 +242,31 @@ fn load_one_source_package(&src: source, p: map::hashmap<str, json::json>) {\n         }\n     };\n \n+    let tags = [];\n+    alt p.find(\"tags\") {\n+        some(json::list(js)) {\n+            for j in *js {\n+                alt j {\n+                    json::string(_j) { vec::grow(tags, 1u, _j); }\n+                    _ { }\n+                }\n+            }\n+        }\n+        _ { }\n+    }\n     vec::grow(src.packages, 1u, {\n         // source: _source(src),\n         name: name,\n         uuid: uuid,\n         url: url,\n-        method: method\n+        method: method,\n+        tags: tags\n     });\n-    info(\"  Loaded package: \" + src.name + \"/\" + name);\n+    log \"  Loaded package: \" + src.name + \"/\" + name;\n }\n \n fn load_source_packages(&c: cargo, &src: source) {\n-    info(\"Loading source: \" + src.name);\n+    log \"Loading source: \" + src.name;\n     let dir = fs::connect(c.sourcedir, src.name);\n     let pkgfile = fs::connect(dir, \"packages.json\");\n     if !fs::path_exists(pkgfile) { ret; }\n@@ -618,11 +632,46 @@ fn cmd_init(c: cargo, argv: [str]) {\n     run::run_program(\"cp\", [srcfile, destsrcfile]);\n }\n \n+fn print_pkg(s: source, p: package) {\n+    let m = s.name + \"/\" + p.name + \" (\" + p.uuid + \")\";\n+    if vec::len(p.tags) > 0u {\n+        m = m + \" [\" + str::connect(p.tags, \", \") + \"]\";\n+    }\n+    info(m);\n+}\n+fn cmd_list(c: cargo, argv: [str]) {\n+    for_each_package(c, { |s, p|\n+        if vec::len(argv) <= 2u || argv[2] == s.name {\n+            print_pkg(s, p);\n+        }\n+    });\n+}\n+\n+fn cmd_search(c: cargo, argv: [str]) {\n+    if vec::len(argv) < 3u {\n+        cmd_usage();\n+        ret;\n+    }\n+    let n = 0;\n+    let name = argv[2];\n+    let tags = vec::slice(argv, 3u, vec::len(argv));\n+    for_each_package(c, { |s, p|\n+        if (str::contains(p.name, name) || name == \"*\") &&\n+            vec::all(tags, { |t| vec::member(t, p.tags) }) {\n+            print_pkg(s, p);\n+            n += 1;\n+        }\n+    });\n+    info(#fmt[\"Found %d packages.\", n]);\n+}\n+\n fn cmd_usage() {\n     print(\"Usage: cargo <verb> [args...]\");\n     print(\"  init                                 Fetch default sources.json\");\n     print(\"  install [source/]package-name        Install by name\");\n     print(\"  install uuid:[source/]package-uuid   Install by uuid\");\n+    print(\"  list [source]                        List packages\");\n+    print(\"  search <name | '*'> [tags...]        Search packages\");\n     print(\"  sync                                 Sync all sources\");\n     print(\"  usage                                This\");\n }\n@@ -636,6 +685,8 @@ fn main(argv: [str]) {\n     alt argv[1] {\n         \"init\" { cmd_init(c, argv); }\n         \"install\" { cmd_install(c, argv); }\n+        \"list\" { cmd_list(c, argv); }\n+        \"search\" { cmd_search(c, argv); }\n         \"sync\" { cmd_sync(c, argv); }\n         \"usage\" { cmd_usage(); }\n         _ { cmd_usage(); }"}]}