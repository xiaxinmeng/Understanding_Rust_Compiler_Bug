{"sha": "917dafc73a9eb257b9b5c2d357c4abd8bb1c3a8e", "node_id": "C_kwDOAAsO6NoAKDkxN2RhZmM3M2E5ZWIyNTdiOWI1YzJkMzU3YzRhYmQ4YmIxYzNhOGU", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-12-10T07:42:26Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-12-10T07:42:26Z"}, "message": "Add separate impl of unwrap_failed to avoid constructing trait objects", "tree": {"sha": "43f7b92cb803cb984041e7ccac00b7ac42ca2d11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43f7b92cb803cb984041e7ccac00b7ac42ca2d11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/917dafc73a9eb257b9b5c2d357c4abd8bb1c3a8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/917dafc73a9eb257b9b5c2d357c4abd8bb1c3a8e", "html_url": "https://github.com/rust-lang/rust/commit/917dafc73a9eb257b9b5c2d357c4abd8bb1c3a8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/917dafc73a9eb257b9b5c2d357c4abd8bb1c3a8e/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0adee2c01eb5ecb91df3b4ac1c045b18f8a4c2f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/0adee2c01eb5ecb91df3b4ac1c045b18f8a4c2f5", "html_url": "https://github.com/rust-lang/rust/commit/0adee2c01eb5ecb91df3b4ac1c045b18f8a4c2f5"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "ab067d57d082abc66ae74307382457573f88d874", "filename": "library/core/src/result.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/917dafc73a9eb257b9b5c2d357c4abd8bb1c3a8e/library%2Fcore%2Fsrc%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/917dafc73a9eb257b9b5c2d357c4abd8bb1c3a8e/library%2Fcore%2Fsrc%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fresult.rs?ref=917dafc73a9eb257b9b5c2d357c4abd8bb1c3a8e", "patch": "@@ -1653,13 +1653,26 @@ impl<T> Result<T, T> {\n }\n \n // This is a separate function to reduce the code size of the methods\n+#[cfg(not(feature = \"panic_immediate_abort\"))]\n #[inline(never)]\n #[cold]\n #[track_caller]\n fn unwrap_failed(msg: &str, error: &dyn fmt::Debug) -> ! {\n     panic!(\"{}: {:?}\", msg, error)\n }\n \n+// This is a separate function to avoid constructing a `dyn Debug`\n+// that gets immediately thrown away, since vtables don't get cleaned up\n+// by dead code elimination if a trait object is constructed even if it goes\n+// unused\n+#[cfg(feature = \"panic_immediate_abort\")]\n+#[inline]\n+#[cold]\n+#[track_caller]\n+fn unwrap_failed<T>(_msg: &str, _error: &T) -> ! {\n+    panic!()\n+}\n+\n /////////////////////////////////////////////////////////////////////////////\n // Trait implementations\n /////////////////////////////////////////////////////////////////////////////"}]}