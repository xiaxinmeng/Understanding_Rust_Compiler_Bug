{"sha": "1f00191de28cf53c54936ee843c39b0d91ced43c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmMDAxOTFkZTI4Y2Y1M2M1NDkzNmVlODQzYzM5YjBkOTFjZWQ0M2M=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-04-05T13:27:45Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-04-05T13:27:45Z"}, "message": "internal: document hypothetical completion problem", "tree": {"sha": "beaeaad206b380c8e768b584b3f9e06c46a1e878", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/beaeaad206b380c8e768b584b3f9e06c46a1e878"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f00191de28cf53c54936ee843c39b0d91ced43c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f00191de28cf53c54936ee843c39b0d91ced43c", "html_url": "https://github.com/rust-lang/rust/commit/1f00191de28cf53c54936ee843c39b0d91ced43c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f00191de28cf53c54936ee843c39b0d91ced43c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2be91dcd826e1529ac6ac431b3f871ec72abebc", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2be91dcd826e1529ac6ac431b3f871ec72abebc", "html_url": "https://github.com/rust-lang/rust/commit/c2be91dcd826e1529ac6ac431b3f871ec72abebc"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "6f3d5c5c57fb8d4cc3c8a6e71075b2d163f8303d", "filename": "crates/ide_completion/src/lib.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1f00191de28cf53c54936ee843c39b0d91ced43c/crates%2Fide_completion%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f00191de28cf53c54936ee843c39b0d91ced43c/crates%2Fide_completion%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Flib.rs?ref=1f00191de28cf53c54936ee843c39b0d91ced43c", "patch": "@@ -106,6 +106,34 @@ pub use crate::{\n /// `foo` *should* be present among the completion variants. Filtering by\n /// identifier prefix/fuzzy match should be done higher in the stack, together\n /// with ordering of completions (currently this is done by the client).\n+///\n+/// # Hypothetical Completion Problem\n+///\n+/// There's a curious unsolved problem in the current implementation. Often, you\n+/// want to compute completions on a *slightly different* text document.\n+///\n+/// In the simplest case, when the code looks like `let x = `, you want to\n+/// insert a fake identifier to get a better syntax tree: `let x = complete_me`.\n+///\n+/// We do this in `CompletionContext`, and it works OK-enough for *syntax*\n+/// analysis. However, we might want to, eg, ask for the type of `complete_me`\n+/// variable, and that's where our current infrastructure breaks down. salsa\n+/// doesn't allow such \"phantom\" inputs.\n+///\n+/// Another case where this would be instrumental is macro expansion. We want to\n+/// insert a fake ident and re-expand code. There's `expand_hypothetical` as a\n+/// work-around for this.\n+///\n+/// A different use-case is completion of injection (examples and links in doc\n+/// comments). When computing completion for a path in a doc-comment, you want\n+/// to inject a fake path expression into the item being documented and complete\n+/// that.\n+///\n+/// IntelliJ has CodeFragment/Context infrastructure for that. You can create a\n+/// temporary PSI node, and say that the context (\"parent\") of this node is some\n+/// existing node. Asking for, eg, type of this `CodeFragment` node works\n+/// correctly, as the underlying infrastructure makes use of contexts to do\n+/// analysis.\n pub fn completions(\n     db: &RootDatabase,\n     config: &CompletionConfig,"}]}