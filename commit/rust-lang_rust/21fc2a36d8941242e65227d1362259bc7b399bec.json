{"sha": "21fc2a36d8941242e65227d1362259bc7b399bec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxZmMyYTM2ZDg5NDEyNDJlNjUyMjdkMTM2MjI1OWJjN2IzOTliZWM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-27T06:14:16Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-27T06:14:16Z"}, "message": "rustdoc: Build resource arguments as well", "tree": {"sha": "198a3f5ffa88e789e8a42d89a2e63d5b154591e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/198a3f5ffa88e789e8a42d89a2e63d5b154591e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21fc2a36d8941242e65227d1362259bc7b399bec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21fc2a36d8941242e65227d1362259bc7b399bec", "html_url": "https://github.com/rust-lang/rust/commit/21fc2a36d8941242e65227d1362259bc7b399bec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21fc2a36d8941242e65227d1362259bc7b399bec/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06ab83de2c72ebaf87b33133007a0dd0e79962db", "url": "https://api.github.com/repos/rust-lang/rust/commits/06ab83de2c72ebaf87b33133007a0dd0e79962db", "html_url": "https://github.com/rust-lang/rust/commit/06ab83de2c72ebaf87b33133007a0dd0e79962db"}], "stats": {"total": 31, "additions": 23, "deletions": 8}, "files": [{"sha": "9ee4f8ec78c22a38043ba96d314d761f1a41078f", "filename": "src/rustdoc/attr_pass.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/21fc2a36d8941242e65227d1362259bc7b399bec/src%2Frustdoc%2Fattr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21fc2a36d8941242e65227d1362259bc7b399bec/src%2Frustdoc%2Fattr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fattr_pass.rs?ref=21fc2a36d8941242e65227d1362259bc7b399bec", "patch": "@@ -320,11 +320,17 @@ fn fold_res(\n     ~{\n         brief: attrs.brief,\n         desc: attrs.desc,\n-        args: vec::map(attrs.args) {|attrs|\n-            ~{\n-                name: attrs.name,\n-                desc: some(attrs.desc),\n-                ty: none\n+        args: vec::map(doc.args) {|doc|\n+            alt vec::find(attrs.args) {|attr|\n+                attr.name == doc.name\n+            } {\n+                some(attr) {\n+                    ~{\n+                        desc: some(attr.desc)\n+                        with *doc\n+                    }\n+                }\n+                none { doc }\n             }\n         }\n         with *doc"}, {"sha": "f5d2f613aa73bd1090e3530112fe605e607d95e7", "filename": "src/rustdoc/extract.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/21fc2a36d8941242e65227d1362259bc7b399bec/src%2Frustdoc%2Fextract.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21fc2a36d8941242e65227d1362259bc7b399bec/src%2Frustdoc%2Fextract.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fextract.rs?ref=21fc2a36d8941242e65227d1362259bc7b399bec", "patch": "@@ -91,8 +91,8 @@ fn moddoc_from_mod(\n         resources: doc::reslist(\n             vec::filter_map(module.items) {|item|\n                 alt item.node {\n-                  ast::item_res(_, _, _, _, _) {\n-                    some(resdoc_from_resource(item.ident, item.id))\n+                  ast::item_res(decl, _, _, _, _) {\n+                    some(resdoc_from_resource(decl, item.ident, item.id))\n                   }\n                   _ {\n                     none\n@@ -212,6 +212,7 @@ fn should_extract_enum_variants() {\n }\n \n fn resdoc_from_resource(\n+    decl: ast::fn_decl,\n     name: str,\n     id: ast::node_id\n ) -> doc::resdoc {\n@@ -220,7 +221,7 @@ fn resdoc_from_resource(\n         name: name,\n         brief: none,\n         desc: none,\n-        args: [],\n+        args: argdocs_from_args(decl.inputs),\n         sig: none\n     }\n }\n@@ -234,6 +235,14 @@ fn should_extract_resources() {\n     assert doc.topmod.resources[0].name == \"r\";\n }\n \n+#[test]\n+fn should_extract_resource_args() {\n+    let source = \"resource r(b: bool) { }\";\n+    let ast = parse::from_str(source);\n+    let doc = extract(ast, \"\");\n+    assert doc.topmod.resources[0].args[0].name == \"b\";\n+}\n+\n #[cfg(test)]\n mod tests {\n "}]}