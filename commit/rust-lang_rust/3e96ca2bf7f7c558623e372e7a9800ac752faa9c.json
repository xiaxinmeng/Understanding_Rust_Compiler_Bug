{"sha": "3e96ca2bf7f7c558623e372e7a9800ac752faa9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlOTZjYTJiZjdmN2M1NTg2MjNlMzcyZTdhOTgwMGFjNzUyZmFhOWM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-26T08:24:39Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-26T08:24:39Z"}, "message": "abort on BoxMeUp misuse", "tree": {"sha": "1eb587ba287c8472ff59b5bf7ca3588cdcf1785d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1eb587ba287c8472ff59b5bf7ca3588cdcf1785d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e96ca2bf7f7c558623e372e7a9800ac752faa9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e96ca2bf7f7c558623e372e7a9800ac752faa9c", "html_url": "https://github.com/rust-lang/rust/commit/3e96ca2bf7f7c558623e372e7a9800ac752faa9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e96ca2bf7f7c558623e372e7a9800ac752faa9c/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a8e1b63cfc472a3c4884f6a31ab2236d7dd2fb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a8e1b63cfc472a3c4884f6a31ab2236d7dd2fb7", "html_url": "https://github.com/rust-lang/rust/commit/3a8e1b63cfc472a3c4884f6a31ab2236d7dd2fb7"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "99b372d92c8b6c4945aa5f8761a35442a71a2306", "filename": "src/libcore/panic.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3e96ca2bf7f7c558623e372e7a9800ac752faa9c/src%2Flibcore%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e96ca2bf7f7c558623e372e7a9800ac752faa9c/src%2Flibcore%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpanic.rs?ref=3e96ca2bf7f7c558623e372e7a9800ac752faa9c", "patch": "@@ -266,8 +266,16 @@ impl fmt::Display for Location<'_> {\n #[unstable(feature = \"std_internals\", issue = \"0\")]\n #[doc(hidden)]\n pub unsafe trait BoxMeUp {\n+    /// Take full ownership of the contents.\n     /// The return type is actually `Box<dyn Any + Send>`, but we cannot use `Box` in libcore.\n+    ///\n     /// After this method got called, only some dummy default value is left in `self`.\n+    /// Calling this method twice, or calling `get` after calling this method, is an error.\n+    ///\n+    /// The argument is borrowed because the panic runtime (`__rust_start_panic`) only\n+    /// gets a borrowed `dyn BoxMeUp`.\n     fn take_box(&mut self) -> *mut (dyn Any + Send);\n+\n+    /// Just borrow the contents.\n     fn get(&mut self) -> &(dyn Any + Send);\n }"}, {"sha": "5ba5d89bb63b97e8b7321e0daa506045f436c8db", "filename": "src/libstd/panicking.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3e96ca2bf7f7c558623e372e7a9800ac752faa9c/src%2Flibstd%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e96ca2bf7f7c558623e372e7a9800ac752faa9c/src%2Flibstd%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpanicking.rs?ref=3e96ca2bf7f7c558623e372e7a9800ac752faa9c", "patch": "@@ -20,6 +20,7 @@ use crate::sys_common::rwlock::RWLock;\n use crate::sys_common::{thread_info, util};\n use crate::sys_common::backtrace::{self, RustBacktrace};\n use crate::thread;\n+use crate::process;\n \n #[cfg(not(test))]\n use crate::io::set_panic;\n@@ -414,15 +415,15 @@ pub fn begin_panic<M: Any + Send>(msg: M, file_line_col: &(&'static str, u32, u3\n         fn take_box(&mut self) -> *mut (dyn Any + Send) {\n             let data = match self.inner.take() {\n                 Some(a) => Box::new(a) as Box<dyn Any + Send>,\n-                None => Box::new(()), // this should never happen: we got called twice\n+                None => process::abort(),\n             };\n             Box::into_raw(data)\n         }\n \n         fn get(&mut self) -> &(dyn Any + Send) {\n             match self.inner {\n                 Some(ref a) => a,\n-                None => &(),\n+                None => process::abort(),\n             }\n         }\n     }"}]}