{"sha": "9b9dd4aeea858fb2249adc9421ab156a78e84b8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliOWRkNGFlZWE4NThmYjIyNDlhZGM5NDIxYWIxNTZhNzhlODRiOGI=", "commit": {"author": {"name": "LinkTed", "email": "link.ted@mailbox.org", "date": "2020-11-24T18:24:39Z"}, "committer": {"name": "LinkTed", "email": "link.ted@mailbox.org", "date": "2020-11-24T21:15:04Z"}, "message": "Bug fix for android platform, because of the wrong behavior of CMSG_NXTHDR", "tree": {"sha": "320b6bb64045a19c6396ce2df55efc4c69460aaa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/320b6bb64045a19c6396ce2df55efc4c69460aaa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b9dd4aeea858fb2249adc9421ab156a78e84b8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b9dd4aeea858fb2249adc9421ab156a78e84b8b", "html_url": "https://github.com/rust-lang/rust/commit/9b9dd4aeea858fb2249adc9421ab156a78e84b8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b9dd4aeea858fb2249adc9421ab156a78e84b8b/comments", "author": {"login": "LinkTed", "id": 6806266, "node_id": "MDQ6VXNlcjY4MDYyNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6806266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LinkTed", "html_url": "https://github.com/LinkTed", "followers_url": "https://api.github.com/users/LinkTed/followers", "following_url": "https://api.github.com/users/LinkTed/following{/other_user}", "gists_url": "https://api.github.com/users/LinkTed/gists{/gist_id}", "starred_url": "https://api.github.com/users/LinkTed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LinkTed/subscriptions", "organizations_url": "https://api.github.com/users/LinkTed/orgs", "repos_url": "https://api.github.com/users/LinkTed/repos", "events_url": "https://api.github.com/users/LinkTed/events{/privacy}", "received_events_url": "https://api.github.com/users/LinkTed/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LinkTed", "id": 6806266, "node_id": "MDQ6VXNlcjY4MDYyNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6806266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LinkTed", "html_url": "https://github.com/LinkTed", "followers_url": "https://api.github.com/users/LinkTed/followers", "following_url": "https://api.github.com/users/LinkTed/following{/other_user}", "gists_url": "https://api.github.com/users/LinkTed/gists{/gist_id}", "starred_url": "https://api.github.com/users/LinkTed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LinkTed/subscriptions", "organizations_url": "https://api.github.com/users/LinkTed/orgs", "repos_url": "https://api.github.com/users/LinkTed/repos", "events_url": "https://api.github.com/users/LinkTed/events{/privacy}", "received_events_url": "https://api.github.com/users/LinkTed/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ead7185db69d84e6af53712508600cad136f972b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ead7185db69d84e6af53712508600cad136f972b", "html_url": "https://github.com/rust-lang/rust/commit/ead7185db69d84e6af53712508600cad136f972b"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "a94456b4e7a6b19c6b94724fa8ae8f6b2cb1b712", "filename": "library/std/src/sys/unix/ext/net/ancillary.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/9b9dd4aeea858fb2249adc9421ab156a78e84b8b/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fancillary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b9dd4aeea858fb2249adc9421ab156a78e84b8b/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fancillary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fancillary.rs?ref=9b9dd4aeea858fb2249adc9421ab156a78e84b8b", "patch": "@@ -5,6 +5,8 @@ use crate::marker::PhantomData;\n use crate::mem::{size_of, zeroed};\n use crate::os::unix::io::RawFd;\n use crate::path::Path;\n+#[cfg(target_os = \"android\")]\n+use crate::ptr::eq;\n use crate::ptr::read_unaligned;\n use crate::slice::from_raw_parts;\n use crate::sys::net::Socket;\n@@ -157,6 +159,13 @@ fn add_to_ancillary_data<T>(\n         while !cmsg.is_null() {\n             previous_cmsg = cmsg;\n             cmsg = libc::CMSG_NXTHDR(&msg, cmsg);\n+            cfg_if::cfg_if! {\n+                if #[cfg(target_os = \"android\")] {\n+                    if cmsg == previous_cmsg {\n+                        break;\n+                    }\n+                }\n+            }\n         }\n \n         if previous_cmsg.is_null() {\n@@ -420,6 +429,16 @@ impl<'a> Iterator for Messages<'a> {\n             };\n \n             let cmsg = cmsg.as_ref()?;\n+            cfg_if::cfg_if! {\n+                if #[cfg(target_os = \"android\")] {\n+                    if let Some(current) = self.current {\n+                        if eq(current, cmsg) {\n+                            return None;\n+                        }\n+                    }\n+                }\n+            }\n+\n             self.current = Some(cmsg);\n             let ancillary_result = AncillaryData::try_from_cmsghdr(cmsg);\n             Some(ancillary_result)"}]}