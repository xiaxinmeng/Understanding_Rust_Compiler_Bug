{"sha": "deb40d52aaa1989402fc01d65da389dc92fb66fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlYjQwZDUyYWFhMTk4OTQwMmZjMDFkNjVkYTM4OWRjOTJmYjY2ZmE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-11T15:20:26Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-11T15:20:26Z"}, "message": "Align naming", "tree": {"sha": "0467c3d574da65b3e112c1f579cc2c6506b6ec0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0467c3d574da65b3e112c1f579cc2c6506b6ec0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/deb40d52aaa1989402fc01d65da389dc92fb66fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/deb40d52aaa1989402fc01d65da389dc92fb66fa", "html_url": "https://github.com/rust-lang/rust/commit/deb40d52aaa1989402fc01d65da389dc92fb66fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/deb40d52aaa1989402fc01d65da389dc92fb66fa/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55356332bfd22db159fef044b9e611b5b82b417c", "url": "https://api.github.com/repos/rust-lang/rust/commits/55356332bfd22db159fef044b9e611b5b82b417c", "html_url": "https://github.com/rust-lang/rust/commit/55356332bfd22db159fef044b9e611b5b82b417c"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "c7c3c0bc7f54b72cecaccb773f5c73e4754f83af", "filename": "crates/ra_hir_def/src/adt.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/deb40d52aaa1989402fc01d65da389dc92fb66fa/crates%2Fra_hir_def%2Fsrc%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deb40d52aaa1989402fc01d65da389dc92fb66fa/crates%2Fra_hir_def%2Fsrc%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fadt.rs?ref=deb40d52aaa1989402fc01d65da389dc92fb66fa", "patch": "@@ -202,7 +202,7 @@ fn lower_struct(\n         ast::StructKind::Tuple(fl) => {\n             for (i, fd) in fl.fields().enumerate() {\n                 let attrs = expander.parse_attrs(&fd);\n-                if !expander.check_cfg(&attrs) {\n+                if !expander.is_cfg_enabled(&attrs) {\n                     continue;\n                 }\n \n@@ -220,7 +220,7 @@ fn lower_struct(\n         ast::StructKind::Record(fl) => {\n             for fd in fl.fields() {\n                 let attrs = expander.parse_attrs(&fd);\n-                if !expander.check_cfg(&attrs) {\n+                if !expander.is_cfg_enabled(&attrs) {\n                     continue;\n                 }\n "}, {"sha": "7fe5403c032007ed585c182179313bb66d6ad192", "filename": "crates/ra_hir_def/src/body.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/deb40d52aaa1989402fc01d65da389dc92fb66fa/crates%2Fra_hir_def%2Fsrc%2Fbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deb40d52aaa1989402fc01d65da389dc92fb66fa/crates%2Fra_hir_def%2Fsrc%2Fbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody.rs?ref=deb40d52aaa1989402fc01d65da389dc92fb66fa", "patch": "@@ -118,7 +118,7 @@ impl Expander {\n         Attrs::new(owner, &self.hygiene)\n     }\n \n-    pub(crate) fn check_cfg(&self, attrs: &Attrs) -> bool {\n+    pub(crate) fn is_cfg_enabled(&self, attrs: &Attrs) -> bool {\n         attrs.is_cfg_enabled(&self.cfg_options)\n     }\n "}, {"sha": "c1d7eb826a7904638e643b361595a55d001376aa", "filename": "crates/ra_hir_def/src/body/lower.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/deb40d52aaa1989402fc01d65da389dc92fb66fa/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deb40d52aaa1989402fc01d65da389dc92fb66fa/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs?ref=deb40d52aaa1989402fc01d65da389dc92fb66fa", "patch": "@@ -306,8 +306,7 @@ impl ExprCollector<'_> {\n                         .inspect(|field| field_ptrs.push(AstPtr::new(field)))\n                         .filter_map(|field| {\n                             let attrs = self.expander.parse_attrs(&field);\n-\n-                            if !self.expander.check_cfg(&attrs) {\n+                            if !self.expander.is_cfg_enabled(&attrs) {\n                                 return None;\n                             }\n "}, {"sha": "56a20c5bd18fa3355841e7d9e69fc50b3daf8109", "filename": "crates/ra_hir_def/src/data.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/deb40d52aaa1989402fc01d65da389dc92fb66fa/crates%2Fra_hir_def%2Fsrc%2Fdata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deb40d52aaa1989402fc01d65da389dc92fb66fa/crates%2Fra_hir_def%2Fsrc%2Fdata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fdata.rs?ref=deb40d52aaa1989402fc01d65da389dc92fb66fa", "patch": "@@ -337,7 +337,7 @@ fn collect_impl_items(\n         .filter_map(|item_node| match item_node {\n             ast::ImplItem::FnDef(it) => {\n                 let attrs = expander.parse_attrs(&it);\n-                if !expander.check_cfg(&attrs) {\n+                if !expander.is_cfg_enabled(&attrs) {\n                     return None;\n                 }\n                 let def = FunctionLoc {"}]}