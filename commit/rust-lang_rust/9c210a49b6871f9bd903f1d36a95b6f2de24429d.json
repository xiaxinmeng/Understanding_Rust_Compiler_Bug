{"sha": "9c210a49b6871f9bd903f1d36a95b6f2de24429d", "node_id": "C_kwDOAAsO6NoAKDljMjEwYTQ5YjY4NzFmOWJkOTAzZjFkMzZhOTViNmYyZGUyNDQyOWQ", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-01-01T16:17:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-01T16:17:39Z"}, "message": "Merge #11151\n\n11151: feat: correctly fallback to notify if the clinet-side file watching is not supported r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "cb26abb8045ee91e1602d1fdbff97a979f587c65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb26abb8045ee91e1602d1fdbff97a979f587c65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c210a49b6871f9bd903f1d36a95b6f2de24429d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh0H6jCRBK7hj4Ov3rIwAAcs4IACY5qoECoU3TT8dG4d2tB6eU\nSj+X7T2Uo3i744va8F5ToFxjkpiLoTXkeMNg0nYemUain+j5y7k+Z/c0T9bcDSzu\noraDRFg+OirNLxPMCQ5iyPX6p8mj4Z5vTwQCModjp1CUfx84cC8bRCS+2qi4wm1v\nFVZiH3QKHTqPhk9M//BX2pNDI2SdByK0RX8yfAgPvTsfG44UVZ9zEAtbwazZRzNK\nNGBeZWokFboWLydBOuORxtk5PL7C9K1Kpha3zFnGKQDVNKMG/LeN3kHCHe7W1PAh\nIzpk5p0uCRdimmEvfcSpURRhwe+VqkIVrLmR3XjHoA2/+J1sMz5pf6v7qi88IlA=\n=7dkr\n-----END PGP SIGNATURE-----\n", "payload": "tree cb26abb8045ee91e1602d1fdbff97a979f587c65\nparent b8a632121b051f65061fc78ba6bbd3ad006a9e69\nparent a1c33c2e1ab3b10c0e3a9c18db955492e94f690b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1641053859 +0000\ncommitter GitHub <noreply@github.com> 1641053859 +0000\n\nMerge #11151\n\n11151: feat: correctly fallback to notify if the clinet-side file watching is not supported r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c210a49b6871f9bd903f1d36a95b6f2de24429d", "html_url": "https://github.com/rust-lang/rust/commit/9c210a49b6871f9bd903f1d36a95b6f2de24429d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c210a49b6871f9bd903f1d36a95b6f2de24429d/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8a632121b051f65061fc78ba6bbd3ad006a9e69", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8a632121b051f65061fc78ba6bbd3ad006a9e69", "html_url": "https://github.com/rust-lang/rust/commit/b8a632121b051f65061fc78ba6bbd3ad006a9e69"}, {"sha": "a1c33c2e1ab3b10c0e3a9c18db955492e94f690b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1c33c2e1ab3b10c0e3a9c18db955492e94f690b", "html_url": "https://github.com/rust-lang/rust/commit/a1c33c2e1ab3b10c0e3a9c18db955492e94f690b"}], "stats": {"total": 74, "additions": 41, "deletions": 33}, "files": [{"sha": "818aab35157aa25e497a66b03e75161e2ecd73d0", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9c210a49b6871f9bd903f1d36a95b6f2de24429d/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c210a49b6871f9bd903f1d36a95b6f2de24429d/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=9c210a49b6871f9bd903f1d36a95b6f2de24429d", "patch": "@@ -723,7 +723,10 @@ impl Config {\n         FilesConfig {\n             watcher: match self.data.files_watcher.as_str() {\n                 \"notify\" => FilesWatcher::Notify,\n-                \"client\" | _ => FilesWatcher::Client,\n+                \"client\" if self.did_change_watched_files_dynamic_registration() => {\n+                    FilesWatcher::Client\n+                }\n+                _ => FilesWatcher::Notify,\n             },\n             exclude: self.data.files_excludeDirs.iter().map(|it| self.root_path.join(it)).collect(),\n         }"}, {"sha": "b14b3dbcfa9249b886bdeb7e005a9dd9de4ee210", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 26, "deletions": 31, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/9c210a49b6871f9bd903f1d36a95b6f2de24429d/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c210a49b6871f9bd903f1d36a95b6f2de24429d/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=9c210a49b6871f9bd903f1d36a95b6f2de24429d", "patch": "@@ -241,38 +241,33 @@ impl GlobalState {\n         }\n \n         if let FilesWatcher::Client = self.config.files().watcher {\n-            if self.config.did_change_watched_files_dynamic_registration() {\n-                let registration_options = lsp_types::DidChangeWatchedFilesRegistrationOptions {\n-                    watchers: self\n-                        .workspaces\n-                        .iter()\n-                        .flat_map(|ws| ws.to_roots())\n-                        .filter(|it| it.is_local)\n-                        .flat_map(|root| {\n-                            root.include.into_iter().flat_map(|it| {\n-                                [\n-                                    format!(\"{}/**/*.rs\", it.display()),\n-                                    format!(\"{}/**/Cargo.toml\", it.display()),\n-                                    format!(\"{}/**/Cargo.lock\", it.display()),\n-                                ]\n-                            })\n-                        })\n-                        .map(|glob_pattern| lsp_types::FileSystemWatcher {\n-                            glob_pattern,\n-                            kind: None,\n+            let registration_options = lsp_types::DidChangeWatchedFilesRegistrationOptions {\n+                watchers: self\n+                    .workspaces\n+                    .iter()\n+                    .flat_map(|ws| ws.to_roots())\n+                    .filter(|it| it.is_local)\n+                    .flat_map(|root| {\n+                        root.include.into_iter().flat_map(|it| {\n+                            [\n+                                format!(\"{}/**/*.rs\", it.display()),\n+                                format!(\"{}/**/Cargo.toml\", it.display()),\n+                                format!(\"{}/**/Cargo.lock\", it.display()),\n+                            ]\n                         })\n-                        .collect(),\n-                };\n-                let registration = lsp_types::Registration {\n-                    id: \"workspace/didChangeWatchedFiles\".to_string(),\n-                    method: \"workspace/didChangeWatchedFiles\".to_string(),\n-                    register_options: Some(serde_json::to_value(registration_options).unwrap()),\n-                };\n-                self.send_request::<lsp_types::request::RegisterCapability>(\n-                    lsp_types::RegistrationParams { registrations: vec![registration] },\n-                    |_, _| (),\n-                );\n-            }\n+                    })\n+                    .map(|glob_pattern| lsp_types::FileSystemWatcher { glob_pattern, kind: None })\n+                    .collect(),\n+            };\n+            let registration = lsp_types::Registration {\n+                id: \"workspace/didChangeWatchedFiles\".to_string(),\n+                method: \"workspace/didChangeWatchedFiles\".to_string(),\n+                register_options: Some(serde_json::to_value(registration_options).unwrap()),\n+            };\n+            self.send_request::<lsp_types::request::RegisterCapability>(\n+                lsp_types::RegistrationParams { registrations: vec![registration] },\n+                |_, _| (),\n+            );\n         }\n \n         let mut change = Change::new();"}, {"sha": "6e7ecec5b2bf95f024d396409f32f14f0f59e34a", "filename": "crates/rust-analyzer/tests/slow-tests/support.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9c210a49b6871f9bd903f1d36a95b6f2de24429d/crates%2Frust-analyzer%2Ftests%2Fslow-tests%2Fsupport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c210a49b6871f9bd903f1d36a95b6f2de24429d/crates%2Frust-analyzer%2Ftests%2Fslow-tests%2Fsupport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Fslow-tests%2Fsupport.rs?ref=9c210a49b6871f9bd903f1d36a95b6f2de24429d", "patch": "@@ -101,6 +101,14 @@ impl<'a> Project<'a> {\n         let mut config = Config::new(\n             tmp_dir_path,\n             lsp_types::ClientCapabilities {\n+                workspace: Some(lsp_types::WorkspaceClientCapabilities {\n+                    did_change_watched_files: Some(\n+                        lsp_types::DidChangeWatchedFilesClientCapabilities {\n+                            dynamic_registration: Some(true),\n+                        },\n+                    ),\n+                    ..Default::default()\n+                }),\n                 text_document: Some(lsp_types::TextDocumentClientCapabilities {\n                     definition: Some(lsp_types::GotoCapability {\n                         link_support: Some(true),"}, {"sha": "3bec23a911750fdf703eb246e7a538775367a133", "filename": "crates/rust-analyzer/tests/slow-tests/testdir.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9c210a49b6871f9bd903f1d36a95b6f2de24429d/crates%2Frust-analyzer%2Ftests%2Fslow-tests%2Ftestdir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c210a49b6871f9bd903f1d36a95b6f2de24429d/crates%2Frust-analyzer%2Ftests%2Fslow-tests%2Ftestdir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Fslow-tests%2Ftestdir.rs?ref=9c210a49b6871f9bd903f1d36a95b6f2de24429d", "patch": "@@ -52,7 +52,9 @@ impl Drop for TestDir {\n         if self.keep {\n             return;\n         }\n-        remove_dir_all(&self.path).unwrap()\n+        remove_dir_all(&self.path).unwrap_or_else(|err| {\n+            panic!(\"failed to remove temporary directory {}: {}\", self.path.display(), err)\n+        })\n     }\n }\n "}]}