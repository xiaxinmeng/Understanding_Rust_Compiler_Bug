{"sha": "0ca2ed364662351da9e8a1f4ba54e027e1f420df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjYTJlZDM2NDY2MjM1MWRhOWU4YTFmNGJhNTRlMDI3ZTFmNDIwZGY=", "commit": {"author": {"name": "iximeow", "email": "me@iximeow.net", "date": "2020-03-13T04:17:10Z"}, "committer": {"name": "iximeow", "email": "me@iximeow.net", "date": "2020-03-13T04:17:10Z"}, "message": "return a pointer to the end of the valid part of the sigstack, no further\n\nalso unmap the whole thing when cleaning up, rather than leaving a spare\npage floating around.", "tree": {"sha": "4016e599df56a467a529fd98b1345900bcd879a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4016e599df56a467a529fd98b1345900bcd879a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ca2ed364662351da9e8a1f4ba54e027e1f420df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ca2ed364662351da9e8a1f4ba54e027e1f420df", "html_url": "https://github.com/rust-lang/rust/commit/0ca2ed364662351da9e8a1f4ba54e027e1f420df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ca2ed364662351da9e8a1f4ba54e027e1f420df/comments", "author": {"login": "iximeow", "id": 4615790, "node_id": "MDQ6VXNlcjQ2MTU3OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/4615790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iximeow", "html_url": "https://github.com/iximeow", "followers_url": "https://api.github.com/users/iximeow/followers", "following_url": "https://api.github.com/users/iximeow/following{/other_user}", "gists_url": "https://api.github.com/users/iximeow/gists{/gist_id}", "starred_url": "https://api.github.com/users/iximeow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iximeow/subscriptions", "organizations_url": "https://api.github.com/users/iximeow/orgs", "repos_url": "https://api.github.com/users/iximeow/repos", "events_url": "https://api.github.com/users/iximeow/events{/privacy}", "received_events_url": "https://api.github.com/users/iximeow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iximeow", "id": 4615790, "node_id": "MDQ6VXNlcjQ2MTU3OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/4615790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iximeow", "html_url": "https://github.com/iximeow", "followers_url": "https://api.github.com/users/iximeow/followers", "following_url": "https://api.github.com/users/iximeow/following{/other_user}", "gists_url": "https://api.github.com/users/iximeow/gists{/gist_id}", "starred_url": "https://api.github.com/users/iximeow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iximeow/subscriptions", "organizations_url": "https://api.github.com/users/iximeow/orgs", "repos_url": "https://api.github.com/users/iximeow/repos", "events_url": "https://api.github.com/users/iximeow/events{/privacy}", "received_events_url": "https://api.github.com/users/iximeow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "041d97f4fdd625ca193e29f389f754904441aa04", "url": "https://api.github.com/repos/rust-lang/rust/commits/041d97f4fdd625ca193e29f389f754904441aa04", "html_url": "https://github.com/rust-lang/rust/commit/041d97f4fdd625ca193e29f389f754904441aa04"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "c4d771d75d9676ff2f2cd1a3fbfede6599443970", "filename": "src/libstd/sys/unix/stack_overflow.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0ca2ed364662351da9e8a1f4ba54e027e1f420df/src%2Flibstd%2Fsys%2Funix%2Fstack_overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ca2ed364662351da9e8a1f4ba54e027e1f420df/src%2Flibstd%2Fsys%2Funix%2Fstack_overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fstack_overflow.rs?ref=0ca2ed364662351da9e8a1f4ba54e027e1f420df", "patch": "@@ -47,6 +47,7 @@ mod imp {\n     use libc::{sigaltstack, SIGSTKSZ, SS_DISABLE};\n     use libc::{MAP_ANON, MAP_PRIVATE, PROT_NONE, PROT_READ, PROT_WRITE, SIGSEGV};\n \n+    use crate::sys::unix::os::page_size;\n     use crate::sys_common::thread_info;\n \n     #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n@@ -137,17 +138,16 @@ mod imp {\n     }\n \n     unsafe fn get_stackp() -> *mut libc::c_void {\n-        let page_size = crate::sys::unix::os::page_size();\n         let stackp =\n-            mmap(ptr::null_mut(), SIGSTKSZ + page_size, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANON, -1, 0);\n+            mmap(ptr::null_mut(), SIGSTKSZ + page_size(), PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANON, -1, 0);\n         if stackp == MAP_FAILED {\n             panic!(\"failed to allocate an alternative stack\");\n         }\n-        let guard_result = libc::mprotect(stackp, page_size, PROT_NONE);\n+        let guard_result = libc::mprotect(stackp, page_size(), PROT_NONE);\n         if guard_result != 0 {\n             panic!(\"failed to set up alternative stack guard page\");\n         }\n-        stackp\n+        stackp.add(page_size())\n     }\n \n     #[cfg(any(\n@@ -195,7 +195,9 @@ mod imp {\n                 ss_size: SIGSTKSZ,\n             };\n             sigaltstack(&stack, ptr::null_mut());\n-            munmap(handler._data, SIGSTKSZ);\n+            // We know from `get_stackp` that the alternate stack we installed is part of a mapping\n+            // that started one page earlier, so walk back a page and unmap from there.\n+            munmap(handler._data.sub(page_size()), SIGSTKSZ + page_size());\n         }\n     }\n }"}]}