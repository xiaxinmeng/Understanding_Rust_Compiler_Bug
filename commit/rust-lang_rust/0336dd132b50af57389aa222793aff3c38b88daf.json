{"sha": "0336dd132b50af57389aa222793aff3c38b88daf", "node_id": "C_kwDOAAsO6NoAKDAzMzZkZDEzMmI1MGFmNTczODlhYTIyMjc5M2FmZjNjMzhiODhkYWY", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-05-16T17:40:02Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-05-16T18:09:25Z"}, "message": "Add derive for `core::marker::ConstParamTy`\n\nThis makes it easier to implement it for a type, just like `Copy`.", "tree": {"sha": "4f01af97cfcd8d8e402c7bdcce5c3bcf2a94b13c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f01af97cfcd8d8e402c7bdcce5c3bcf2a94b13c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0336dd132b50af57389aa222793aff3c38b88daf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0336dd132b50af57389aa222793aff3c38b88daf", "html_url": "https://github.com/rust-lang/rust/commit/0336dd132b50af57389aa222793aff3c38b88daf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0336dd132b50af57389aa222793aff3c38b88daf/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cba14074bb4cc12bfe918eabd0d52a3999b2a461", "url": "https://api.github.com/repos/rust-lang/rust/commits/cba14074bb4cc12bfe918eabd0d52a3999b2a461", "html_url": "https://github.com/rust-lang/rust/commit/cba14074bb4cc12bfe918eabd0d52a3999b2a461"}], "stats": {"total": 117, "additions": 115, "deletions": 2}, "files": [{"sha": "2c8e6f99c6739a1787ecc43d6527b7c215852fff", "filename": "compiler/rustc_builtin_macros/src/deriving/bounds.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/0336dd132b50af57389aa222793aff3c38b88daf/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fbounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0336dd132b50af57389aa222793aff3c38b88daf/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fbounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fbounds.rs?ref=0336dd132b50af57389aa222793aff3c38b88daf", "patch": "@@ -27,3 +27,26 @@ pub fn expand_deriving_copy(\n \n     trait_def.expand(cx, mitem, item, push);\n }\n+\n+pub fn expand_deriving_const_param_ty(\n+    cx: &mut ExtCtxt<'_>,\n+    span: Span,\n+    mitem: &MetaItem,\n+    item: &Annotatable,\n+    push: &mut dyn FnMut(Annotatable),\n+    is_const: bool,\n+) {\n+    let trait_def = TraitDef {\n+        span,\n+        path: path_std!(marker::ConstParamTy),\n+        skip_path_as_bound: false,\n+        needs_copy_as_bound_if_packed: false,\n+        additional_bounds: Vec::new(),\n+        supports_unions: false,\n+        methods: Vec::new(),\n+        associated_types: Vec::new(),\n+        is_const,\n+    };\n+\n+    trait_def.expand(cx, mitem, item, push);\n+}"}, {"sha": "ebf1448f55c9985818089ee8dd9e71a31d7781dd", "filename": "compiler/rustc_builtin_macros/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0336dd132b50af57389aa222793aff3c38b88daf/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0336dd132b50af57389aa222793aff3c38b88daf/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs?ref=0336dd132b50af57389aa222793aff3c38b88daf", "patch": "@@ -115,6 +115,7 @@ pub fn register_builtin_macros(resolver: &mut dyn ResolverExpand) {\n     register_derive! {\n         Clone: clone::expand_deriving_clone,\n         Copy: bounds::expand_deriving_copy,\n+        ConstParamTy: bounds::expand_deriving_const_param_ty,\n         Debug: debug::expand_deriving_debug,\n         Default: default::expand_deriving_default,\n         Eq: eq::expand_deriving_eq,"}, {"sha": "b3e54b109009713a5e900045c003cb5a453b587c", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0336dd132b50af57389aa222793aff3c38b88daf/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0336dd132b50af57389aa222793aff3c38b88daf/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=0336dd132b50af57389aa222793aff3c38b88daf", "patch": "@@ -164,6 +164,7 @@ symbols! {\n         Capture,\n         Center,\n         Clone,\n+        ConstParamTy,\n         Context,\n         Continue,\n         Copy,"}, {"sha": "ede0e5db50cb7cf2d4b2c1f11641304cd6f60cf1", "filename": "library/core/src/marker.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0336dd132b50af57389aa222793aff3c38b88daf/library%2Fcore%2Fsrc%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0336dd132b50af57389aa222793aff3c38b88daf/library%2Fcore%2Fsrc%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmarker.rs?ref=0336dd132b50af57389aa222793aff3c38b88daf", "patch": "@@ -991,6 +991,14 @@ pub trait PointerLike {}\n #[rustc_on_unimplemented(message = \"`{Self}` can't be used as a const parameter type\")]\n pub trait ConstParamTy: StructuralEq {}\n \n+/// Derive macro generating an impl of the trait `Copy`.\n+#[rustc_builtin_macro]\n+#[unstable(feature = \"adt_const_params\", issue = \"95174\")]\n+#[cfg(not(bootstrap))]\n+pub macro ConstParamTy($item:item) {\n+    /* compiler built-in */\n+}\n+\n // FIXME(generic_const_parameter_types): handle `ty::FnDef`/`ty::Closure`\n // FIXME(generic_const_parameter_types): handle `ty::Tuple`\n marker_impls! {"}, {"sha": "87ae83dd9660364cc6e58b1267a026caa6c8521f", "filename": "tests/ui/const-generics/adt_const_params/const_param_ty_good.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0336dd132b50af57389aa222793aff3c38b88daf/tests%2Fui%2Fconst-generics%2Fadt_const_params%2Fconst_param_ty_good.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0336dd132b50af57389aa222793aff3c38b88daf/tests%2Fui%2Fconst-generics%2Fadt_const_params%2Fconst_param_ty_good.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fadt_const_params%2Fconst_param_ty_good.rs?ref=0336dd132b50af57389aa222793aff3c38b88daf", "patch": "@@ -11,6 +11,13 @@ struct S<T> {\n \n impl<T: ConstParamTy> ConstParamTy for S<T> {}\n \n+#[derive(PartialEq, Eq, ConstParamTy)]\n+struct D<T> {\n+    field: u8,\n+    gen: T,\n+}\n+\n+\n fn check<T: ConstParamTy + ?Sized>() {}\n \n fn main() {\n@@ -39,5 +46,8 @@ fn main() {\n     check::<S<u8>>();\n     check::<S<[&[bool]; 8]>>();\n \n+    check::<D<u8>>();\n+    check::<D<[&[bool]; 8]>>();\n+\n     // FIXME: test tuples\n }"}, {"sha": "74283a37afcaf071d33dbefdf770e789a9be39c1", "filename": "tests/ui/const-generics/adt_const_params/const_param_ty_impl_bad_field.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0336dd132b50af57389aa222793aff3c38b88daf/tests%2Fui%2Fconst-generics%2Fadt_const_params%2Fconst_param_ty_impl_bad_field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0336dd132b50af57389aa222793aff3c38b88daf/tests%2Fui%2Fconst-generics%2Fadt_const_params%2Fconst_param_ty_impl_bad_field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fadt_const_params%2Fconst_param_ty_impl_bad_field.rs?ref=0336dd132b50af57389aa222793aff3c38b88daf", "patch": "@@ -10,4 +10,8 @@ struct CantParam(NotParam);\n impl std::marker::ConstParamTy for CantParam {}\n //~^ error: the trait `ConstParamTy` cannot be implemented for this type\n \n+#[derive(std::marker::ConstParamTy, Eq, PartialEq)]\n+//~^ error: the trait `ConstParamTy` cannot be implemented for this type\n+struct CantParamDerive(NotParam);\n+\n fn main() {}"}, {"sha": "52b65d6061ab502515953f3018fe78baa3ac99fc", "filename": "tests/ui/const-generics/adt_const_params/const_param_ty_impl_bad_field.stderr", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0336dd132b50af57389aa222793aff3c38b88daf/tests%2Fui%2Fconst-generics%2Fadt_const_params%2Fconst_param_ty_impl_bad_field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0336dd132b50af57389aa222793aff3c38b88daf/tests%2Fui%2Fconst-generics%2Fadt_const_params%2Fconst_param_ty_impl_bad_field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fadt_const_params%2Fconst_param_ty_impl_bad_field.stderr?ref=0336dd132b50af57389aa222793aff3c38b88daf", "patch": "@@ -7,6 +7,17 @@ LL |\n LL | impl std::marker::ConstParamTy for CantParam {}\n    |                                    ^^^^^^^^^\n \n-error: aborting due to previous error\n+error[E0204]: the trait `ConstParamTy` cannot be implemented for this type\n+  --> $DIR/const_param_ty_impl_bad_field.rs:13:10\n+   |\n+LL | #[derive(std::marker::ConstParamTy, Eq, PartialEq)]\n+   |          ^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |\n+LL | struct CantParamDerive(NotParam);\n+   |                        -------- this field does not implement `ConstParamTy`\n+   |\n+   = note: this error originates in the derive macro `std::marker::ConstParamTy` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0204`."}, {"sha": "37986de481f111a9662557202aa2268bc9b979d3", "filename": "tests/ui/const-generics/adt_const_params/const_param_ty_impl_no_structural_eq.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0336dd132b50af57389aa222793aff3c38b88daf/tests%2Fui%2Fconst-generics%2Fadt_const_params%2Fconst_param_ty_impl_no_structural_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0336dd132b50af57389aa222793aff3c38b88daf/tests%2Fui%2Fconst-generics%2Fadt_const_params%2Fconst_param_ty_impl_no_structural_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fadt_const_params%2Fconst_param_ty_impl_no_structural_eq.rs?ref=0336dd132b50af57389aa222793aff3c38b88daf", "patch": "@@ -10,6 +10,10 @@ struct CantParam(ImplementsConstParamTy);\n impl std::marker::ConstParamTy for CantParam {}\n //~^ error: the type `CantParam` does not `#[derive(Eq)]`\n \n+#[derive(std::marker::ConstParamTy)]\n+//~^ error: the type `CantParamDerive` does not `#[derive(Eq)]`\n+struct CantParamDerive(ImplementsConstParamTy);\n+\n fn check<T: std::marker::ConstParamTy>() {}\n \n fn main() {"}, {"sha": "52701d55914420d03e6910ecedac7a780012f414", "filename": "tests/ui/const-generics/adt_const_params/const_param_ty_impl_no_structural_eq.stderr", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0336dd132b50af57389aa222793aff3c38b88daf/tests%2Fui%2Fconst-generics%2Fadt_const_params%2Fconst_param_ty_impl_no_structural_eq.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0336dd132b50af57389aa222793aff3c38b88daf/tests%2Fui%2Fconst-generics%2Fadt_const_params%2Fconst_param_ty_impl_no_structural_eq.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fadt_const_params%2Fconst_param_ty_impl_no_structural_eq.stderr?ref=0336dd132b50af57389aa222793aff3c38b88daf", "patch": "@@ -7,6 +7,16 @@ LL | impl std::marker::ConstParamTy for CantParam {}\n note: required by a bound in `ConstParamTy`\n   --> $SRC_DIR/core/src/marker.rs:LL:COL\n \n-error: aborting due to previous error\n+error[E0277]: the type `CantParamDerive` does not `#[derive(Eq)]`\n+  --> $DIR/const_param_ty_impl_no_structural_eq.rs:13:10\n+   |\n+LL | #[derive(std::marker::ConstParamTy)]\n+   |          ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `StructuralEq` is not implemented for `CantParamDerive`\n+   |\n+note: required by a bound in `ConstParamTy`\n+  --> $SRC_DIR/core/src/marker.rs:LL:COL\n+   = note: this error originates in the derive macro `std::marker::ConstParamTy` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "d70377a20c170054ce49dbabbe04afb5f0973282", "filename": "tests/ui/const-generics/adt_const_params/const_param_ty_impl_union.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/0336dd132b50af57389aa222793aff3c38b88daf/tests%2Fui%2Fconst-generics%2Fadt_const_params%2Fconst_param_ty_impl_union.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0336dd132b50af57389aa222793aff3c38b88daf/tests%2Fui%2Fconst-generics%2Fadt_const_params%2Fconst_param_ty_impl_union.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fadt_const_params%2Fconst_param_ty_impl_union.rs?ref=0336dd132b50af57389aa222793aff3c38b88daf", "patch": "@@ -0,0 +1,33 @@\n+#![allow(incomplete_features)]\n+#![feature(adt_const_params, structural_match)]\n+\n+union Union {\n+    a: u8,\n+}\n+\n+impl PartialEq for Union {\n+    fn eq(&self, other: &Union) -> bool {\n+        true\n+    }\n+}\n+impl Eq for Union {}\n+impl std::marker::StructuralEq for Union {}\n+\n+impl std::marker::ConstParamTy for Union {}\n+\n+#[derive(std::marker::ConstParamTy)]\n+//~^ ERROR this trait cannot be derived for unions\n+union UnionDerive {\n+    a: u8,\n+}\n+\n+impl PartialEq for UnionDerive {\n+    fn eq(&self, other: &UnionDerive) -> bool {\n+        true\n+    }\n+}\n+impl Eq for UnionDerive {}\n+impl std::marker::StructuralEq for UnionDerive {}\n+\n+\n+fn main() {}"}, {"sha": "293703046050357d0a9c04c52fd3e8ca68ed97d4", "filename": "tests/ui/const-generics/adt_const_params/const_param_ty_impl_union.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0336dd132b50af57389aa222793aff3c38b88daf/tests%2Fui%2Fconst-generics%2Fadt_const_params%2Fconst_param_ty_impl_union.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0336dd132b50af57389aa222793aff3c38b88daf/tests%2Fui%2Fconst-generics%2Fadt_const_params%2Fconst_param_ty_impl_union.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fadt_const_params%2Fconst_param_ty_impl_union.stderr?ref=0336dd132b50af57389aa222793aff3c38b88daf", "patch": "@@ -0,0 +1,8 @@\n+error: this trait cannot be derived for unions\n+  --> $DIR/const_param_ty_impl_union.rs:18:10\n+   |\n+LL | #[derive(std::marker::ConstParamTy)]\n+   |          ^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}