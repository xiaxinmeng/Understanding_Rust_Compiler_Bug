{"sha": "d73aa67208447dcc38c01bb01b513eccf3dfc3d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3M2FhNjcyMDg0NDdkY2MzOGMwMWJiMDFiNTEzZWNjZjNkZmMzZDI=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-02-24T10:15:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-24T10:15:31Z"}, "message": "Rollup merge of #69385 - ridiculousfish:relax_get_unchecked, r=nagisa\n\nRelax str::get_unchecked precondition to permit empty slicing\n\nPrior to this commit, `str` documented that `get_unchecked` had\nthe precondition that \"`begin` must come before `end`\". This would appear\nto prohibit empty slices (i.e. begin == end).\n\nIn practice, get_unchecked is called often with empty slices. Let's relax\nthe precondition so as to allow them.", "tree": {"sha": "2785c453b7b0e5e56cdb39eb72a60851ed120d09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2785c453b7b0e5e56cdb39eb72a60851ed120d09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d73aa67208447dcc38c01bb01b513eccf3dfc3d2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeU6JDCRBK7hj4Ov3rIwAAdHIIADu0ehWfpFifoUxCHrMBEr45\n7HrhHu1FS5auFVYGWvhobzI/fI2hGcwxJ88jTftpNPc++RJw47ItbFhiELs/IwIR\ng/05ylbu2oLGSXuJGSYQ0J7YbMJDwBGOto5YwbvkTETG0yDI/OPSAX+N/+bsXuZi\neXtKIpu81Bp0PNozdW5YfoS4qoMNJXiXog3xi0Q9evJhKI7kLIpoPfr6Z/9XIVIh\nWaCLPY+2we1a/O+GHBH1Sjvc5IkR2U+p1ycBABu4qQ8NSY02uQoP5Yfqn0yVp6/x\nMCo5S/h50hcgcCwltK7krVMM+FQ/F85ZJNDABRgcoMtoK5IsG8QhEeDeIezPBqw=\n=H01E\n-----END PGP SIGNATURE-----\n", "payload": "tree 2785c453b7b0e5e56cdb39eb72a60851ed120d09\nparent 331044627a58f28d96c2393b52b4019f2729c216\nparent 9e41c4b682f625ae7860255c2d17790f5d9f324a\nauthor Pietro Albini <pietro@pietroalbini.org> 1582539331 +0100\ncommitter GitHub <noreply@github.com> 1582539331 +0100\n\nRollup merge of #69385 - ridiculousfish:relax_get_unchecked, r=nagisa\n\nRelax str::get_unchecked precondition to permit empty slicing\n\nPrior to this commit, `str` documented that `get_unchecked` had\nthe precondition that \"`begin` must come before `end`\". This would appear\nto prohibit empty slices (i.e. begin == end).\n\nIn practice, get_unchecked is called often with empty slices. Let's relax\nthe precondition so as to allow them.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d73aa67208447dcc38c01bb01b513eccf3dfc3d2", "html_url": "https://github.com/rust-lang/rust/commit/d73aa67208447dcc38c01bb01b513eccf3dfc3d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d73aa67208447dcc38c01bb01b513eccf3dfc3d2/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "331044627a58f28d96c2393b52b4019f2729c216", "url": "https://api.github.com/repos/rust-lang/rust/commits/331044627a58f28d96c2393b52b4019f2729c216", "html_url": "https://github.com/rust-lang/rust/commit/331044627a58f28d96c2393b52b4019f2729c216"}, {"sha": "9e41c4b682f625ae7860255c2d17790f5d9f324a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e41c4b682f625ae7860255c2d17790f5d9f324a", "html_url": "https://github.com/rust-lang/rust/commit/9e41c4b682f625ae7860255c2d17790f5d9f324a"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "9c0db5d98725dfe779a723303e4abee6d7d7a39a", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d73aa67208447dcc38c01bb01b513eccf3dfc3d2/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d73aa67208447dcc38c01bb01b513eccf3dfc3d2/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=d73aa67208447dcc38c01bb01b513eccf3dfc3d2", "patch": "@@ -2486,7 +2486,7 @@ impl str {\n     /// Callers of this function are responsible that these preconditions are\n     /// satisfied:\n     ///\n-    /// * The starting index must come before the ending index;\n+    /// * The starting index must not exceed the ending index;\n     /// * Indexes must be within bounds of the original slice;\n     /// * Indexes must lie on UTF-8 sequence boundaries.\n     ///\n@@ -2518,7 +2518,7 @@ impl str {\n     /// Callers of this function are responsible that these preconditions are\n     /// satisfied:\n     ///\n-    /// * The starting index must come before the ending index;\n+    /// * The starting index must not exceed the ending index;\n     /// * Indexes must be within bounds of the original slice;\n     /// * Indexes must lie on UTF-8 sequence boundaries.\n     ///\n@@ -2563,7 +2563,7 @@ impl str {\n     /// Callers of this function are responsible that three preconditions are\n     /// satisfied:\n     ///\n-    /// * `begin` must come before `end`.\n+    /// * `begin` must not exceed `end`.\n     /// * `begin` and `end` must be byte positions within the string slice.\n     /// * `begin` and `end` must lie on UTF-8 sequence boundaries.\n     ///\n@@ -2612,7 +2612,7 @@ impl str {\n     /// Callers of this function are responsible that three preconditions are\n     /// satisfied:\n     ///\n-    /// * `begin` must come before `end`.\n+    /// * `begin` must not exceed `end`.\n     /// * `begin` and `end` must be byte positions within the string slice.\n     /// * `begin` and `end` must lie on UTF-8 sequence boundaries.\n     #[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]"}]}