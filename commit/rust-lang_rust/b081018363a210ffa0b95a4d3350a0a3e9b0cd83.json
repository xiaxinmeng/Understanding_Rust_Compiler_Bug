{"sha": "b081018363a210ffa0b95a4d3350a0a3e9b0cd83", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwODEwMTgzNjNhMjEwZmZhMGI5NWE0ZDMzNTBhMGEzZTliMGNkODM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-27T10:11:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-27T10:11:00Z"}, "message": "Merge #5094\n\n5094: cleanup r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "93d3793a4de59a4a9c3cee39ace5ee45c0944ef5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93d3793a4de59a4a9c3cee39ace5ee45c0944ef5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b081018363a210ffa0b95a4d3350a0a3e9b0cd83", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe9xs0CRBK7hj4Ov3rIwAAdHIIAEknI0WlJAk5EpDUgu8bgpIH\nTj4VZWwQ6+kbOZ5DnZPjpDMflhzGOZPwtvqOZelYleBBmubfePLrgpaugdsYjT57\n5ZaGyQsZJC5Vo5MPryPB+K6HJmS0ylZP0+zzYt7eRq29PFzAc1WwcZp+IvzcCqb/\nhqhOvqZvfZbUvOat5fmVaXq14X4hKhC74NZZ/1SVIquxp0GWiN6jj4FvYQ6zUI+R\nIvjXuXbDAuMQjiGRnChq9vF9YyPxSnfn8cczmALRSYjKhaC3pW7XI+rSnhuoIdTS\nimR3YnwcTEOL7U4tBbwxX9llBRn8938UP7h7r8PggTbrP22zK0/Pw0lgZkWxDQI=\n=W0Dr\n-----END PGP SIGNATURE-----\n", "payload": "tree 93d3793a4de59a4a9c3cee39ace5ee45c0944ef5\nparent 18a6dd4635be18ebe73eb25ffa34a33f0ec8203f\nparent 4e3e8d1ab265e9d0024cd33f2f3b8c2a8b31265d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1593252660 +0000\ncommitter GitHub <noreply@github.com> 1593252660 +0000\n\nMerge #5094\n\n5094: cleanup r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b081018363a210ffa0b95a4d3350a0a3e9b0cd83", "html_url": "https://github.com/rust-lang/rust/commit/b081018363a210ffa0b95a4d3350a0a3e9b0cd83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b081018363a210ffa0b95a4d3350a0a3e9b0cd83/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18a6dd4635be18ebe73eb25ffa34a33f0ec8203f", "url": "https://api.github.com/repos/rust-lang/rust/commits/18a6dd4635be18ebe73eb25ffa34a33f0ec8203f", "html_url": "https://github.com/rust-lang/rust/commit/18a6dd4635be18ebe73eb25ffa34a33f0ec8203f"}, {"sha": "4e3e8d1ab265e9d0024cd33f2f3b8c2a8b31265d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e3e8d1ab265e9d0024cd33f2f3b8c2a8b31265d", "html_url": "https://github.com/rust-lang/rust/commit/4e3e8d1ab265e9d0024cd33f2f3b8c2a8b31265d"}], "stats": {"total": 23, "additions": 10, "deletions": 13}, "files": [{"sha": "5c01654cc01d91c1906698dd2b15a46630b82b82", "filename": "crates/ra_ide/src/completion/test_utils.rs", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b081018363a210ffa0b95a4d3350a0a3e9b0cd83/crates%2Fra_ide%2Fsrc%2Fcompletion%2Ftest_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b081018363a210ffa0b95a4d3350a0a3e9b0cd83/crates%2Fra_ide%2Fsrc%2Fcompletion%2Ftest_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Ftest_utils.rs?ref=b081018363a210ffa0b95a4d3350a0a3e9b0cd83", "patch": "@@ -1,21 +1,18 @@\n //! Runs completion for testing purposes.\n \n+use hir::Semantics;\n+use ra_syntax::{AstNode, NodeOrToken, SyntaxElement};\n+\n use crate::{\n     completion::{completion_item::CompletionKind, CompletionConfig},\n     mock_analysis::analysis_and_position,\n     CompletionItem,\n };\n-use hir::Semantics;\n-use ra_syntax::{AstNode, NodeOrToken, SyntaxElement};\n \n pub(crate) fn do_completion(code: &str, kind: CompletionKind) -> Vec<CompletionItem> {\n     do_completion_with_options(code, kind, &CompletionConfig::default())\n }\n \n-pub(crate) fn completion_list(code: &str, kind: CompletionKind) -> String {\n-    completion_list_with_options(code, kind, &CompletionConfig::default())\n-}\n-\n pub(crate) fn do_completion_with_options(\n     code: &str,\n     kind: CompletionKind,\n@@ -29,13 +26,8 @@ pub(crate) fn do_completion_with_options(\n     kind_completions\n }\n \n-fn get_all_completion_items(code: &str, options: &CompletionConfig) -> Vec<CompletionItem> {\n-    let (analysis, position) = if code.contains(\"//-\") {\n-        analysis_and_position(code)\n-    } else {\n-        analysis_and_position(code)\n-    };\n-    analysis.completions(options, position).unwrap().unwrap().into()\n+pub(crate) fn completion_list(code: &str, kind: CompletionKind) -> String {\n+    completion_list_with_options(code, kind, &CompletionConfig::default())\n }\n \n pub(crate) fn completion_list_with_options(\n@@ -65,3 +57,8 @@ pub(crate) fn check_pattern_is_applicable(code: &str, check: fn(SyntaxElement) -\n         })\n         .unwrap();\n }\n+\n+fn get_all_completion_items(code: &str, options: &CompletionConfig) -> Vec<CompletionItem> {\n+    let (analysis, position) = analysis_and_position(code);\n+    analysis.completions(options, position).unwrap().unwrap().into()\n+}"}]}