{"sha": "26b23f4a378eeb266360465223cf60be2c84c3bd", "node_id": "C_kwDOAAsO6NoAKDI2YjIzZjRhMzc4ZWViMjY2MzYwNDY1MjIzY2Y2MGJlMmM4NGMzYmQ", "commit": {"author": {"name": "Max Willsey", "email": "me@mwillsey.com", "date": "2022-11-17T20:50:33Z"}, "committer": {"name": "Max Willsey", "email": "me@mwillsey.com", "date": "2022-11-17T20:50:33Z"}, "message": "Improve accuracy of asinh and acosh", "tree": {"sha": "3f7fb2abd3fcaa46f9c3f5643919deba8c243c00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f7fb2abd3fcaa46f9c3f5643919deba8c243c00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26b23f4a378eeb266360465223cf60be2c84c3bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26b23f4a378eeb266360465223cf60be2c84c3bd", "html_url": "https://github.com/rust-lang/rust/commit/26b23f4a378eeb266360465223cf60be2c84c3bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26b23f4a378eeb266360465223cf60be2c84c3bd/comments", "author": {"login": "mwillsey", "id": 1783756, "node_id": "MDQ6VXNlcjE3ODM3NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1783756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwillsey", "html_url": "https://github.com/mwillsey", "followers_url": "https://api.github.com/users/mwillsey/followers", "following_url": "https://api.github.com/users/mwillsey/following{/other_user}", "gists_url": "https://api.github.com/users/mwillsey/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwillsey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwillsey/subscriptions", "organizations_url": "https://api.github.com/users/mwillsey/orgs", "repos_url": "https://api.github.com/users/mwillsey/repos", "events_url": "https://api.github.com/users/mwillsey/events{/privacy}", "received_events_url": "https://api.github.com/users/mwillsey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mwillsey", "id": 1783756, "node_id": "MDQ6VXNlcjE3ODM3NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1783756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwillsey", "html_url": "https://github.com/mwillsey", "followers_url": "https://api.github.com/users/mwillsey/followers", "following_url": "https://api.github.com/users/mwillsey/following{/other_user}", "gists_url": "https://api.github.com/users/mwillsey/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwillsey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwillsey/subscriptions", "organizations_url": "https://api.github.com/users/mwillsey/orgs", "repos_url": "https://api.github.com/users/mwillsey/repos", "events_url": "https://api.github.com/users/mwillsey/events{/privacy}", "received_events_url": "https://api.github.com/users/mwillsey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6097f2e1b2ca62e188ba53cf43bd66b06b36915", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6097f2e1b2ca62e188ba53cf43bd66b06b36915", "html_url": "https://github.com/rust-lang/rust/commit/b6097f2e1b2ca62e188ba53cf43bd66b06b36915"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "4e30076246314edb50cdf017b1f1aa00878a3d12", "filename": "library/std/src/f32.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/26b23f4a378eeb266360465223cf60be2c84c3bd/library%2Fstd%2Fsrc%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26b23f4a378eeb266360465223cf60be2c84c3bd/library%2Fstd%2Fsrc%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ff32.rs?ref=26b23f4a378eeb266360465223cf60be2c84c3bd", "patch": "@@ -880,7 +880,9 @@ impl f32 {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn asinh(self) -> f32 {\n-        (self.abs() + ((self * self) + 1.0).sqrt()).ln().copysign(self)\n+        let ax = self.abs();\n+        let ix = 1.0 / ax;\n+        (ax + (ax / (Self::hypot(1.0, ix) + ix))).ln_1p().copysign(self)\n     }\n \n     /// Inverse hyperbolic cosine function.\n@@ -900,7 +902,11 @@ impl f32 {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn acosh(self) -> f32 {\n-        if self < 1.0 { Self::NAN } else { (self + ((self * self) - 1.0).sqrt()).ln() }\n+        if self < 1.0 {\n+            Self::NAN\n+        } else {\n+            (self + ((self - 1.0).sqrt() * (self + 1.0).sqrt())).ln()\n+        }\n     }\n \n     /// Inverse hyperbolic tangent function."}, {"sha": "6ee295de6163f3807fee36515ad138a61c10dc98", "filename": "library/std/src/f32/tests.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/26b23f4a378eeb266360465223cf60be2c84c3bd/library%2Fstd%2Fsrc%2Ff32%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26b23f4a378eeb266360465223cf60be2c84c3bd/library%2Fstd%2Fsrc%2Ff32%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ff32%2Ftests.rs?ref=26b23f4a378eeb266360465223cf60be2c84c3bd", "patch": "@@ -587,6 +587,11 @@ fn test_asinh() {\n     assert_approx_eq!((-2.0f32).asinh(), -1.443635475178810342493276740273105f32);\n     // regression test for the catastrophic cancellation fixed in 72486\n     assert_approx_eq!((-3000.0f32).asinh(), -8.699514775987968673236893537700647f32);\n+\n+    // test for low accuracy from issue 104548\n+    assert_approx_eq!(60.0f32, 60.0f32.sinh().asinh());\n+    // mul needed for approximate comparison to be meaningful\n+    assert_approx_eq!(1.0f32, 1e-15f32.sinh().asinh() * 1e15f32);\n }\n \n #[test]\n@@ -602,6 +607,9 @@ fn test_acosh() {\n     assert!(nan.acosh().is_nan());\n     assert_approx_eq!(2.0f32.acosh(), 1.31695789692481670862504634730796844f32);\n     assert_approx_eq!(3.0f32.acosh(), 1.76274717403908605046521864995958461f32);\n+\n+    // test for low accuracy from issue 104548\n+    assert_approx_eq!(60.0f32, 60.0f32.cosh().acosh());\n }\n \n #[test]"}, {"sha": "ec67fdad4f726f50ac11d503701fef61ab8664b5", "filename": "library/std/src/f64.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/26b23f4a378eeb266360465223cf60be2c84c3bd/library%2Fstd%2Fsrc%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26b23f4a378eeb266360465223cf60be2c84c3bd/library%2Fstd%2Fsrc%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ff64.rs?ref=26b23f4a378eeb266360465223cf60be2c84c3bd", "patch": "@@ -882,7 +882,9 @@ impl f64 {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn asinh(self) -> f64 {\n-        (self.abs() + ((self * self) + 1.0).sqrt()).ln().copysign(self)\n+        let ax = self.abs();\n+        let ix = 1.0 / ax;\n+        (ax + (ax / (Self::hypot(1.0, ix) + ix))).ln_1p().copysign(self)\n     }\n \n     /// Inverse hyperbolic cosine function.\n@@ -902,7 +904,11 @@ impl f64 {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn acosh(self) -> f64 {\n-        if self < 1.0 { Self::NAN } else { (self + ((self * self) - 1.0).sqrt()).ln() }\n+        if self < 1.0 {\n+            Self::NAN\n+        } else {\n+            (self + ((self - 1.0).sqrt() * (self + 1.0).sqrt())).ln()\n+        }\n     }\n \n     /// Inverse hyperbolic tangent function."}, {"sha": "5b039d445ce14db91eabb7e6c570d6dc29cf0be5", "filename": "library/std/src/f64/tests.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/26b23f4a378eeb266360465223cf60be2c84c3bd/library%2Fstd%2Fsrc%2Ff64%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26b23f4a378eeb266360465223cf60be2c84c3bd/library%2Fstd%2Fsrc%2Ff64%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ff64%2Ftests.rs?ref=26b23f4a378eeb266360465223cf60be2c84c3bd", "patch": "@@ -575,6 +575,11 @@ fn test_asinh() {\n     assert_approx_eq!((-2.0f64).asinh(), -1.443635475178810342493276740273105f64);\n     // regression test for the catastrophic cancellation fixed in 72486\n     assert_approx_eq!((-67452098.07139316f64).asinh(), -18.72007542627454439398548429400083);\n+\n+    // test for low accuracy from issue 104548\n+    assert_approx_eq!(60.0f64, 60.0f64.sinh().asinh());\n+    // mul needed for approximate comparison to be meaningful\n+    assert_approx_eq!(1.0f64, 1e-15f64.sinh().asinh() * 1e15f64);\n }\n \n #[test]\n@@ -590,6 +595,9 @@ fn test_acosh() {\n     assert!(nan.acosh().is_nan());\n     assert_approx_eq!(2.0f64.acosh(), 1.31695789692481670862504634730796844f64);\n     assert_approx_eq!(3.0f64.acosh(), 1.76274717403908605046521864995958461f64);\n+\n+    // test for low accuracy from issue 104548\n+    assert_approx_eq!(60.0f64, 60.0f64.cosh().acosh());\n }\n \n #[test]"}]}