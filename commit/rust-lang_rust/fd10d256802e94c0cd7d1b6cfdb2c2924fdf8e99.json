{"sha": "fd10d256802e94c0cd7d1b6cfdb2c2924fdf8e99", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkMTBkMjU2ODAyZTk0YzBjZDdkMWI2Y2ZkYjJjMjkyNGZkZjhlOTk=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-08-27T05:41:15Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-08-27T05:41:15Z"}, "message": "Allow pre-line single-lined comments to stay on the same line", "tree": {"sha": "9079c1760faffed53235d430c983e0941cd83393", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9079c1760faffed53235d430c983e0941cd83393"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd10d256802e94c0cd7d1b6cfdb2c2924fdf8e99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd10d256802e94c0cd7d1b6cfdb2c2924fdf8e99", "html_url": "https://github.com/rust-lang/rust/commit/fd10d256802e94c0cd7d1b6cfdb2c2924fdf8e99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd10d256802e94c0cd7d1b6cfdb2c2924fdf8e99/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6554e7c20653b6e77fbbdc54ec27c40959dd0446", "url": "https://api.github.com/repos/rust-lang/rust/commits/6554e7c20653b6e77fbbdc54ec27c40959dd0446", "html_url": "https://github.com/rust-lang/rust/commit/6554e7c20653b6e77fbbdc54ec27c40959dd0446"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "a9d705b4c64938e50840cb103296b71f7b98b1df", "filename": "src/lists.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fd10d256802e94c0cd7d1b6cfdb2c2924fdf8e99/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd10d256802e94c0cd7d1b6cfdb2c2924fdf8e99/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=fd10d256802e94c0cd7d1b6cfdb2c2924fdf8e99", "patch": "@@ -117,13 +117,23 @@ impl ListItem {\n         self.item.as_ref().map_or(\"\", |s| &*s)\n     }\n \n-    pub fn is_multiline(&self) -> bool {\n+    pub fn is_different_group(&self) -> bool {\n         self.inner_as_ref().contains('\\n') || self.pre_comment.is_some() ||\n             self.post_comment\n                 .as_ref()\n                 .map_or(false, |s| s.contains('\\n'))\n     }\n \n+    pub fn is_multiline(&self) -> bool {\n+        self.inner_as_ref().contains('\\n') ||\n+            self.pre_comment\n+                .as_ref()\n+                .map_or(false, |s| s.contains('\\n')) ||\n+            self.post_comment\n+                .as_ref()\n+                .map_or(false, |s| s.contains('\\n'))\n+    }\n+\n     pub fn has_comment(&self) -> bool {\n         self.pre_comment\n             .as_ref()\n@@ -469,7 +479,7 @@ where\n         let item = item.as_ref();\n         let inner_item_width = item.inner_as_ref().len();\n         if !first &&\n-            (item.is_multiline() || !item.post_comment.is_some() ||\n+            (item.is_different_group() || !item.post_comment.is_some() ||\n                 inner_item_width + overhead > max_budget)\n         {\n             return max_width;"}]}