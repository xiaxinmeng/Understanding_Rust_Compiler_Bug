{"sha": "52c8b536c954bc543290f36f2d90f3e75facaa0b", "node_id": "C_kwDOAAsO6NoAKDUyYzhiNTM2Yzk1NGJjNTQzMjkwZjM2ZjJkOTBmM2U3NWZhY2FhMGI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-16T14:21:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-16T14:21:43Z"}, "message": "Auto merge of #10342 - mitsuhiko:feature/question-mark-used, r=Alexendoo\n\nAdd question-mark-used lint\n\nThis lint complains when the question mark operator (try operator) is used.  This is a restriction lint that can be useful on local scopes where a custom error handling macro is supposed to be used to augment the error based on local scope data before returning.\n\nFixes #10340\n\n---\n\nchangelog: New lint [`question_mark_used`]\n[#10342](https://github.com/rust-lang/rust-clippy/pull/10342)\n<!-- changelog_checked -->", "tree": {"sha": "9a15b893f92bd011ccbcdd174348efedcd5159c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a15b893f92bd011ccbcdd174348efedcd5159c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52c8b536c954bc543290f36f2d90f3e75facaa0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52c8b536c954bc543290f36f2d90f3e75facaa0b", "html_url": "https://github.com/rust-lang/rust/commit/52c8b536c954bc543290f36f2d90f3e75facaa0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52c8b536c954bc543290f36f2d90f3e75facaa0b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99d4ea4f399a81f09a04045ac3f0bce022d0f1ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/99d4ea4f399a81f09a04045ac3f0bce022d0f1ba", "html_url": "https://github.com/rust-lang/rust/commit/99d4ea4f399a81f09a04045ac3f0bce022d0f1ba"}, {"sha": "09337981b21c7004791260fde7ab7f1e21abf5ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/09337981b21c7004791260fde7ab7f1e21abf5ca", "html_url": "https://github.com/rust-lang/rust/commit/09337981b21c7004791260fde7ab7f1e21abf5ca"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "73ae215ce1b2e5236e627ee26fd38538e4b26b81", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/52c8b536c954bc543290f36f2d90f3e75facaa0b/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/52c8b536c954bc543290f36f2d90f3e75facaa0b/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=52c8b536c954bc543290f36f2d90f3e75facaa0b", "patch": "@@ -4676,6 +4676,7 @@ Released 2018-09-13\n [`pub_enum_variant_names`]: https://rust-lang.github.io/rust-clippy/master/index.html#pub_enum_variant_names\n [`pub_use`]: https://rust-lang.github.io/rust-clippy/master/index.html#pub_use\n [`question_mark`]: https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n+[`question_mark_used`]: https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used\n [`range_minus_one`]: https://rust-lang.github.io/rust-clippy/master/index.html#range_minus_one\n [`range_plus_one`]: https://rust-lang.github.io/rust-clippy/master/index.html#range_plus_one\n [`range_step_by_zero`]: https://rust-lang.github.io/rust-clippy/master/index.html#range_step_by_zero"}, {"sha": "0dab6b5f3f1c5190c75dc028687c529e90142dd2", "filename": "clippy_lints/src/declared_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/52c8b536c954bc543290f36f2d90f3e75facaa0b/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52c8b536c954bc543290f36f2d90f3e75facaa0b/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdeclared_lints.rs?ref=52c8b536c954bc543290f36f2d90f3e75facaa0b", "patch": "@@ -508,6 +508,7 @@ pub(crate) static LINTS: &[&crate::LintInfo] = &[\n     crate::ptr_offset_with_cast::PTR_OFFSET_WITH_CAST_INFO,\n     crate::pub_use::PUB_USE_INFO,\n     crate::question_mark::QUESTION_MARK_INFO,\n+    crate::question_mark_used::QUESTION_MARK_USED_INFO,\n     crate::ranges::MANUAL_RANGE_CONTAINS_INFO,\n     crate::ranges::RANGE_MINUS_ONE_INFO,\n     crate::ranges::RANGE_PLUS_ONE_INFO,"}, {"sha": "ce5df8c7a7becef65f84e94550d37fd64b4ccf04", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52c8b536c954bc543290f36f2d90f3e75facaa0b/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52c8b536c954bc543290f36f2d90f3e75facaa0b/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=52c8b536c954bc543290f36f2d90f3e75facaa0b", "patch": "@@ -243,6 +243,7 @@ mod ptr;\n mod ptr_offset_with_cast;\n mod pub_use;\n mod question_mark;\n+mod question_mark_used;\n mod ranges;\n mod rc_clone_in_vec_init;\n mod read_zero_byte_vec;\n@@ -696,6 +697,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|_| Box::new(implicit_hasher::ImplicitHasher));\n     store.register_late_pass(|_| Box::new(fallible_impl_from::FallibleImplFrom));\n     store.register_late_pass(|_| Box::new(question_mark::QuestionMark));\n+    store.register_late_pass(|_| Box::new(question_mark_used::QuestionMarkUsed));\n     store.register_early_pass(|| Box::new(suspicious_operation_groupings::SuspiciousOperationGroupings));\n     store.register_late_pass(|_| Box::new(suspicious_trait_impl::SuspiciousImpl));\n     store.register_late_pass(|_| Box::new(map_unit_fn::MapUnit));"}, {"sha": "9b678e8d753c2a20f9abb96f29462a5d0be11ef8", "filename": "clippy_lints/src/question_mark_used.rs", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/52c8b536c954bc543290f36f2d90f3e75facaa0b/clippy_lints%2Fsrc%2Fquestion_mark_used.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52c8b536c954bc543290f36f2d90f3e75facaa0b/clippy_lints%2Fsrc%2Fquestion_mark_used.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fquestion_mark_used.rs?ref=52c8b536c954bc543290f36f2d90f3e75facaa0b", "patch": "@@ -0,0 +1,52 @@\n+use clippy_utils::diagnostics::span_lint_and_help;\n+\n+use clippy_utils::macros::span_is_local;\n+use rustc_hir::{Expr, ExprKind, MatchSource};\n+use rustc_lint::{LateContext, LateLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+\n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Checks for expressions that use the question mark operator and rejects them.\n+    ///\n+    /// ### Why is this bad?\n+    /// Sometimes code wants to avoid the question mark operator because for instance a local\n+    /// block requires a macro to re-throw errors to attach additional information to the\n+    /// error.\n+    ///\n+    /// ### Example\n+    /// ```ignore\n+    /// let result = expr?;\n+    /// ```\n+    ///\n+    /// Could be written:\n+    ///\n+    /// ```ignore\n+    /// utility_macro!(expr);\n+    /// ```\n+    #[clippy::version = \"pre 1.29.0\"]\n+    pub QUESTION_MARK_USED,\n+    restriction,\n+    \"complains if the question mark operator is used\"\n+}\n+\n+declare_lint_pass!(QuestionMarkUsed => [QUESTION_MARK_USED]);\n+\n+impl<'tcx> LateLintPass<'tcx> for QuestionMarkUsed {\n+    fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) {\n+        if let ExprKind::Match(_, _, MatchSource::TryDesugar) = expr.kind {\n+            if !span_is_local(expr.span) {\n+                return;\n+            }\n+\n+            span_lint_and_help(\n+                cx,\n+                QUESTION_MARK_USED,\n+                expr.span,\n+                \"question mark operator was used\",\n+                None,\n+                \"consider using a custom macro or match expression\",\n+            );\n+        }\n+    }\n+}"}, {"sha": "8c3ef789697fc062ecc66b62fbca87ae0200892c", "filename": "tests/ui/question_mark_used.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/52c8b536c954bc543290f36f2d90f3e75facaa0b/tests%2Fui%2Fquestion_mark_used.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52c8b536c954bc543290f36f2d90f3e75facaa0b/tests%2Fui%2Fquestion_mark_used.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fquestion_mark_used.rs?ref=52c8b536c954bc543290f36f2d90f3e75facaa0b", "patch": "@@ -0,0 +1,15 @@\n+// non rustfixable\n+#![allow(unreachable_code)]\n+#![allow(dead_code)]\n+#![warn(clippy::question_mark_used)]\n+\n+fn other_function() -> Option<i32> {\n+    Some(32)\n+}\n+\n+fn my_function() -> Option<i32> {\n+    other_function()?;\n+    None\n+}\n+\n+fn main() {}"}, {"sha": "8b5fcbcdbfd6cc4ec38cc2994456bd11fe8113eb", "filename": "tests/ui/question_mark_used.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/52c8b536c954bc543290f36f2d90f3e75facaa0b/tests%2Fui%2Fquestion_mark_used.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/52c8b536c954bc543290f36f2d90f3e75facaa0b/tests%2Fui%2Fquestion_mark_used.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fquestion_mark_used.stderr?ref=52c8b536c954bc543290f36f2d90f3e75facaa0b", "patch": "@@ -0,0 +1,11 @@\n+error: question mark operator was used\n+  --> $DIR/question_mark_used.rs:11:5\n+   |\n+LL |     other_function()?;\n+   |     ^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using a custom macro or match expression\n+   = note: `-D clippy::question-mark-used` implied by `-D warnings`\n+\n+error: aborting due to previous error\n+"}]}