{"sha": "567e54fca5e864f95cd41ca05c113aa6b18d7006", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2N2U1NGZjYTVlODY0Zjk1Y2Q0MWNhMDVjMTEzYWE2YjE4ZDcwMDY=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-04-22T01:34:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-22T01:34:04Z"}, "message": "Rollup merge of #71236 - sinkuu:cleanup, r=nikomatsakis\n\nRemove unused rustc_serialize::hex module\n\n* Remove unused `rustc_serialize::hex` module\n* Cleanup `Cargo.toml`", "tree": {"sha": "b8d3dc60730c3e968f99636d7d8e0bfe9bb58ce4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8d3dc60730c3e968f99636d7d8e0bfe9bb58ce4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/567e54fca5e864f95cd41ca05c113aa6b18d7006", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJen58MCRBK7hj4Ov3rIwAAdHIIAGgFVdHcTkzcFmzM2OqMLC13\nG3KGFohvSBdw3YWxFk096qpBDOoLPIe2Pv6ZpC/8nFQkRu8V6KfsRhpBPrfHu8gb\nWV7iA99gI1FdHKzmX+oldr1Kwh0EELWGXf1KRMz8pGfkzs7zTQxBXmr9g+vCzoXm\nh+m/rLnXoWJvvB4Gy3CJXhziRu/6kFi6Fz2ANuTdNnv9PJ/ZZJbHa6dPNg+EFXRm\np2kNvQjL5m+kVr64IuEVIZKCTHcjIdoou/HifzwVIdDrtGM1f/9Ty3I02lWaplRR\nZHybRoghtDnQ/b8A2DG5/Ef0PYAqfo+ep6eY/1nz3F40uHu8PTqEFfPxIrccScs=\n=pRBG\n-----END PGP SIGNATURE-----\n", "payload": "tree b8d3dc60730c3e968f99636d7d8e0bfe9bb58ce4\nparent 24fb393207967d3f3b2802a0dbdd3efafab4e595\nparent fae4e2a155c860f81201e404eb2e28bde50bcc4e\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1587519244 +0900\ncommitter GitHub <noreply@github.com> 1587519244 +0900\n\nRollup merge of #71236 - sinkuu:cleanup, r=nikomatsakis\n\nRemove unused rustc_serialize::hex module\n\n* Remove unused `rustc_serialize::hex` module\n* Cleanup `Cargo.toml`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/567e54fca5e864f95cd41ca05c113aa6b18d7006", "html_url": "https://github.com/rust-lang/rust/commit/567e54fca5e864f95cd41ca05c113aa6b18d7006", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/567e54fca5e864f95cd41ca05c113aa6b18d7006/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24fb393207967d3f3b2802a0dbdd3efafab4e595", "url": "https://api.github.com/repos/rust-lang/rust/commits/24fb393207967d3f3b2802a0dbdd3efafab4e595", "html_url": "https://github.com/rust-lang/rust/commit/24fb393207967d3f3b2802a0dbdd3efafab4e595"}, {"sha": "fae4e2a155c860f81201e404eb2e28bde50bcc4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/fae4e2a155c860f81201e404eb2e28bde50bcc4e", "html_url": "https://github.com/rust-lang/rust/commit/fae4e2a155c860f81201e404eb2e28bde50bcc4e"}], "stats": {"total": 237, "additions": 0, "deletions": 237}, "files": [{"sha": "84bd2a78f7bbf9692f5ca389b485b35ff84da976", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/567e54fca5e864f95cd41ca05c113aa6b18d7006/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/567e54fca5e864f95cd41ca05c113aa6b18d7006/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=567e54fca5e864f95cd41ca05c113aa6b18d7006", "patch": "@@ -3577,7 +3577,6 @@ version = \"0.0.0\"\n dependencies = [\n  \"log\",\n  \"rustc_ast\",\n- \"rustc_data_structures\",\n  \"rustc_span\",\n ]\n \n@@ -3594,7 +3593,6 @@ dependencies = [\n  \"rustc_session\",\n  \"rustc_span\",\n  \"serialize\",\n- \"smallvec 1.0.0\",\n ]\n \n [[package]]\n@@ -3666,7 +3664,6 @@ dependencies = [\n  \"rustc_hir\",\n  \"rustc_incremental\",\n  \"rustc_index\",\n- \"rustc_metadata\",\n  \"rustc_middle\",\n  \"rustc_session\",\n  \"rustc_span\",\n@@ -3809,7 +3806,6 @@ version = \"0.0.0\"\n dependencies = [\n  \"rustc_ast\",\n  \"rustc_ast_pretty\",\n- \"rustc_data_structures\",\n  \"rustc_hir\",\n  \"rustc_span\",\n  \"rustc_target\",\n@@ -3879,7 +3875,6 @@ dependencies = [\n  \"rustc_expand\",\n  \"rustc_hir\",\n  \"rustc_incremental\",\n- \"rustc_infer\",\n  \"rustc_lint\",\n  \"rustc_metadata\",\n  \"rustc_middle\",\n@@ -3924,7 +3919,6 @@ dependencies = [\n  \"rustc_feature\",\n  \"rustc_hir\",\n  \"rustc_index\",\n- \"rustc_infer\",\n  \"rustc_middle\",\n  \"rustc_session\",\n  \"rustc_span\",\n@@ -3986,10 +3980,8 @@ dependencies = [\n  \"backtrace\",\n  \"bitflags\",\n  \"byteorder\",\n- \"jobserver\",\n  \"log\",\n  \"measureme\",\n- \"parking_lot 0.10.2\",\n  \"polonius-engine\",\n  \"rustc-rayon\",\n  \"rustc-rayon-core\",\n@@ -4023,7 +4015,6 @@ dependencies = [\n  \"polonius-engine\",\n  \"rustc_apfloat\",\n  \"rustc_ast\",\n- \"rustc_ast_pretty\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n@@ -4079,7 +4070,6 @@ dependencies = [\n  \"rustc_lexer\",\n  \"rustc_session\",\n  \"rustc_span\",\n- \"smallvec 1.0.0\",\n  \"unicode-normalization\",\n ]\n \n@@ -4092,10 +4082,8 @@ dependencies = [\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n- \"rustc_feature\",\n  \"rustc_hir\",\n  \"rustc_index\",\n- \"rustc_infer\",\n  \"rustc_middle\",\n  \"rustc_session\",\n  \"rustc_span\",\n@@ -4143,7 +4131,6 @@ dependencies = [\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_index\",\n- \"rustc_macros\",\n  \"rustc_span\",\n  \"serialize\",\n  \"smallvec 1.0.0\",\n@@ -4296,10 +4283,8 @@ dependencies = [\n  \"rustc_data_structures\",\n  \"rustc_hir\",\n  \"rustc_infer\",\n- \"rustc_macros\",\n  \"rustc_middle\",\n  \"rustc_span\",\n- \"rustc_target\",\n  \"rustc_trait_selection\",\n  \"smallvec 1.0.0\",\n ]"}, {"sha": "81d98721089f59da3e6853902771752da3f83026", "filename": "src/librustc_ast_pretty/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_ast_pretty%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_ast_pretty%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_pretty%2FCargo.toml?ref=567e54fca5e864f95cd41ca05c113aa6b18d7006", "patch": "@@ -12,5 +12,4 @@ doctest = false\n [dependencies]\n log = \"0.4\"\n rustc_span = { path = \"../librustc_span\" }\n-rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_ast = { path = \"../librustc_ast\" }"}, {"sha": "a7a7e3dcc5f028ef935d1b78d6c2bd654630a76c", "filename": "src/librustc_attr/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_attr%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_attr%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_attr%2FCargo.toml?ref=567e54fca5e864f95cd41ca05c113aa6b18d7006", "patch": "@@ -17,6 +17,5 @@ rustc_span = { path = \"../librustc_span\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_feature = { path = \"../librustc_feature\" }\n rustc_macros = { path = \"../librustc_macros\" }\n-smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n rustc_session = { path = \"../librustc_session\" }\n rustc_ast = { path = \"../librustc_ast\" }"}, {"sha": "e8bfc87aef5ea58ab1c350777cc4cfd5e512809a", "filename": "src/librustc_codegen_ssa/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_codegen_ssa%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_codegen_ssa%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2FCargo.toml?ref=567e54fca5e864f95cd41ca05c113aa6b18d7006", "patch": "@@ -34,4 +34,3 @@ rustc_incremental = { path = \"../librustc_incremental\" }\n rustc_index = { path = \"../librustc_index\" }\n rustc_target = { path = \"../librustc_target\" }\n rustc_session = { path = \"../librustc_session\" }\n-rustc_metadata = { path = \"../librustc_metadata\" }"}, {"sha": "bc2da535fd3728b8cd412cd42746c96575e17447", "filename": "src/librustc_data_structures/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_data_structures%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_data_structures%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Flib.rs?ref=567e54fca5e864f95cd41ca05c113aa6b18d7006", "patch": "@@ -29,8 +29,6 @@ extern crate log;\n #[macro_use]\n extern crate cfg_if;\n \n-pub use rustc_serialize::hex::ToHex;\n-\n #[inline(never)]\n #[cold]\n pub fn cold_path<F: FnOnce() -> R, R>(f: F) -> R {"}, {"sha": "ccd3e9b6e43c3f5f341e67b2269d9ed184f8adbd", "filename": "src/librustc_hir_pretty/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_hir_pretty%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_hir_pretty%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir_pretty%2FCargo.toml?ref=567e54fca5e864f95cd41ca05c113aa6b18d7006", "patch": "@@ -13,6 +13,5 @@ doctest = false\n rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }\n rustc_hir = { path = \"../librustc_hir\" }\n rustc_target = { path = \"../librustc_target\" }\n-rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_span = { path = \"../librustc_span\" }\n rustc_ast = { path = \"../librustc_ast\" }"}, {"sha": "2963eb29bc170ef3b5ba438d171c52a8512af7ce", "filename": "src/librustc_interface/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_interface%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_interface%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2FCargo.toml?ref=567e54fca5e864f95cd41ca05c113aa6b18d7006", "patch": "@@ -32,7 +32,6 @@ rustc_codegen_ssa = { path = \"../librustc_codegen_ssa\" }\n rustc_symbol_mangling = { path = \"../librustc_symbol_mangling\" }\n rustc_codegen_llvm = { path = \"../librustc_codegen_llvm\", optional = true }\n rustc_hir = { path = \"../librustc_hir\" }\n-rustc_infer = { path = \"../librustc_infer\" }\n rustc_metadata = { path = \"../librustc_metadata\" }\n rustc_mir = { path = \"../librustc_mir\" }\n rustc_mir_build = { path = \"../librustc_mir_build\" }"}, {"sha": "b238a3156fae55b890716efc7b77eb779be2ad5f", "filename": "src/librustc_lint/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_lint%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_lint%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2FCargo.toml?ref=567e54fca5e864f95cd41ca05c113aa6b18d7006", "patch": "@@ -23,5 +23,4 @@ rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_feature = { path = \"../librustc_feature\" }\n rustc_index = { path = \"../librustc_index\" }\n rustc_session = { path = \"../librustc_session\" }\n-rustc_infer = { path = \"../librustc_infer\" }\n rustc_trait_selection = { path = \"../librustc_trait_selection\" }"}, {"sha": "8e27e03ea4ffe70f589761479a76b181e9995896", "filename": "src/librustc_middle/Cargo.toml", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_middle%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_middle%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2FCargo.toml?ref=567e54fca5e864f95cd41ca05c113aa6b18d7006", "patch": "@@ -12,7 +12,6 @@ doctest = false\n [dependencies]\n arena = { path = \"../libarena\" }\n bitflags = \"1.2.1\"\n-jobserver = \"0.1\"\n scoped-tls = \"1.0\"\n log = { version = \"0.4\", features = [\"release_max_level_info\", \"std\"] }\n rustc-rayon = \"0.3.0\"\n@@ -32,7 +31,6 @@ rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n rustc_ast = { path = \"../librustc_ast\" }\n rustc_span = { path = \"../librustc_span\" }\n backtrace = \"0.3.40\"\n-parking_lot = \"0.10\"\n byteorder = { version = \"1.3\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n measureme = \"0.7.1\""}, {"sha": "d922a8323290177a7eebd0b5e539433a3116144f", "filename": "src/librustc_mir/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_mir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_mir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2FCargo.toml?ref=567e54fca5e864f95cd41ca05c113aa6b18d7006", "patch": "@@ -17,7 +17,6 @@ log = \"0.4\"\n log_settings = \"0.1.1\"\n polonius-engine = \"0.12.0\"\n rustc_middle = { path = \"../librustc_middle\" }\n-rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }\n rustc_attr = { path = \"../librustc_attr\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }"}, {"sha": "7164c6788086398bf2535dc58807afc714b48af6", "filename": "src/librustc_parse/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_parse%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_parse%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2FCargo.toml?ref=567e54fca5e864f95cd41ca05c113aa6b18d7006", "patch": "@@ -17,7 +17,6 @@ rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_feature = { path = \"../librustc_feature\" }\n rustc_lexer = { path = \"../librustc_lexer\" }\n rustc_errors = { path = \"../librustc_errors\" }\n-smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n rustc_session = { path = \"../librustc_session\" }\n rustc_span = { path = \"../librustc_span\" }\n rustc_ast = { path = \"../librustc_ast\" }"}, {"sha": "69048cbf24a3085d335cb8f6ac2dc399c80c13a1", "filename": "src/librustc_passes/Cargo.toml", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_passes%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_passes%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2FCargo.toml?ref=567e54fca5e864f95cd41ca05c113aa6b18d7006", "patch": "@@ -14,10 +14,8 @@ rustc_middle = { path = \"../librustc_middle\" }\n rustc_attr = { path = \"../librustc_attr\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }\n-rustc_feature = { path = \"../librustc_feature\" }\n rustc_hir = { path = \"../librustc_hir\" }\n rustc_index = { path = \"../librustc_index\" }\n-rustc_infer = { path = \"../librustc_infer\" }\n rustc_session = { path = \"../librustc_session\" }\n rustc_target = { path = \"../librustc_target\" }\n rustc_ast = { path = \"../librustc_ast\" }"}, {"sha": "6629d841fc8bbc9486c76231ce2c7cf49f7e1e33", "filename": "src/librustc_query_system/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_query_system%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_query_system%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_query_system%2FCargo.toml?ref=567e54fca5e864f95cd41ca05c113aa6b18d7006", "patch": "@@ -15,7 +15,6 @@ rustc-rayon-core = \"0.3.0\"\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_index = { path = \"../librustc_index\" }\n-rustc_macros = { path = \"../librustc_macros\" }\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n rustc_span = { path = \"../librustc_span\" }\n parking_lot = \"0.10\""}, {"sha": "839558f38fddd2ec744c6cc80375362e8962527b", "filename": "src/librustc_traits/Cargo.toml", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_traits%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibrustc_traits%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2FCargo.toml?ref=567e54fca5e864f95cd41ca05c113aa6b18d7006", "patch": "@@ -13,8 +13,6 @@ log = { version = \"0.4\" }\n rustc_middle = { path = \"../librustc_middle\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_hir = { path = \"../librustc_hir\" }\n-rustc_macros = { path = \"../librustc_macros\" }\n-rustc_target = { path = \"../librustc_target\" }\n rustc_ast = { path = \"../librustc_ast\" }\n rustc_span = { path = \"../librustc_span\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }"}, {"sha": "cfb165a3d4397d4848774f6e1b0aece763a49c24", "filename": "src/libserialize/hex.rs", "status": "removed", "additions": 0, "deletions": 137, "changes": 137, "blob_url": "https://github.com/rust-lang/rust/blob/24fb393207967d3f3b2802a0dbdd3efafab4e595/src%2Flibserialize%2Fhex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24fb393207967d3f3b2802a0dbdd3efafab4e595/src%2Flibserialize%2Fhex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fhex.rs?ref=24fb393207967d3f3b2802a0dbdd3efafab4e595", "patch": "@@ -1,137 +0,0 @@\n-//! Hex binary-to-text encoding\n-\n-pub use self::FromHexError::*;\n-\n-use std::error;\n-use std::fmt;\n-\n-/// A trait for converting a value to hexadecimal encoding\n-pub trait ToHex {\n-    /// Converts the value of `self` to a hex value, returning the owned\n-    /// string.\n-    fn to_hex(&self) -> String;\n-}\n-\n-const CHARS: &[u8] = b\"0123456789abcdef\";\n-\n-impl ToHex for [u8] {\n-    /// Turn a vector of `u8` bytes into a hexadecimal string.\n-    ///\n-    /// # Examples\n-    ///\n-    /// ```\n-    /// #![feature(rustc_private)]\n-    ///\n-    /// extern crate serialize;\n-    /// use serialize::hex::ToHex;\n-    ///\n-    /// fn main () {\n-    ///     let str = [52,32].to_hex();\n-    ///     println!(\"{}\", str);\n-    /// }\n-    /// ```\n-    fn to_hex(&self) -> String {\n-        let mut v = Vec::with_capacity(self.len() * 2);\n-        for &byte in self {\n-            v.push(CHARS[(byte >> 4) as usize]);\n-            v.push(CHARS[(byte & 0xf) as usize]);\n-        }\n-\n-        unsafe { String::from_utf8_unchecked(v) }\n-    }\n-}\n-\n-/// A trait for converting hexadecimal encoded values\n-pub trait FromHex {\n-    /// Converts the value of `self`, interpreted as hexadecimal encoded data,\n-    /// into an owned vector of bytes, returning the vector.\n-    fn from_hex(&self) -> Result<Vec<u8>, FromHexError>;\n-}\n-\n-/// Errors that can occur when decoding a hex encoded string\n-#[derive(Copy, Clone, Debug)]\n-pub enum FromHexError {\n-    /// The input contained a character not part of the hex format\n-    InvalidHexCharacter(char, usize),\n-    /// The input had an invalid length\n-    InvalidHexLength,\n-}\n-\n-impl fmt::Display for FromHexError {\n-    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        match *self {\n-            InvalidHexCharacter(ch, idx) => {\n-                write!(f, \"Invalid character '{}' at position {}\", ch, idx)\n-            }\n-            InvalidHexLength => write!(f, \"Invalid input length\"),\n-        }\n-    }\n-}\n-\n-impl error::Error for FromHexError {}\n-\n-impl FromHex for str {\n-    /// Converts any hexadecimal encoded string (literal, `@`, `&`, or `~`)\n-    /// to the byte values it encodes.\n-    ///\n-    /// You can use the `String::from_utf8` function to turn a\n-    /// `Vec<u8>` into a string with characters corresponding to those values.\n-    ///\n-    /// # Examples\n-    ///\n-    /// This converts a string literal to hexadecimal and back.\n-    ///\n-    /// ```\n-    /// #![feature(rustc_private)]\n-    ///\n-    /// extern crate serialize;\n-    /// use serialize::hex::{FromHex, ToHex};\n-    ///\n-    /// fn main () {\n-    ///     let hello_str = \"Hello, World\".as_bytes().to_hex();\n-    ///     println!(\"{}\", hello_str);\n-    ///     let bytes = hello_str.from_hex().unwrap();\n-    ///     println!(\"{:?}\", bytes);\n-    ///     let result_str = String::from_utf8(bytes).unwrap();\n-    ///     println!(\"{}\", result_str);\n-    /// }\n-    /// ```\n-    fn from_hex(&self) -> Result<Vec<u8>, FromHexError> {\n-        // This may be an overestimate if there is any whitespace\n-        let mut b = Vec::with_capacity(self.len() / 2);\n-        let mut modulus = 0;\n-        let mut buf = 0;\n-\n-        for (idx, byte) in self.bytes().enumerate() {\n-            buf <<= 4;\n-\n-            match byte {\n-                b'A'..=b'F' => buf |= byte - b'A' + 10,\n-                b'a'..=b'f' => buf |= byte - b'a' + 10,\n-                b'0'..=b'9' => buf |= byte - b'0',\n-                b' ' | b'\\r' | b'\\n' | b'\\t' => {\n-                    buf >>= 4;\n-                    continue;\n-                }\n-                _ => {\n-                    let ch = self[idx..].chars().next().unwrap();\n-                    return Err(InvalidHexCharacter(ch, idx));\n-                }\n-            }\n-\n-            modulus += 1;\n-            if modulus == 2 {\n-                modulus = 0;\n-                b.push(buf);\n-            }\n-        }\n-\n-        match modulus {\n-            0 => Ok(b),\n-            _ => Err(InvalidHexLength),\n-        }\n-    }\n-}\n-\n-#[cfg(test)]\n-mod tests;"}, {"sha": "ce62c0ff2329db6d2f72ba872907ebde2aed7893", "filename": "src/libserialize/hex/tests.rs", "status": "removed", "additions": 0, "deletions": 67, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/24fb393207967d3f3b2802a0dbdd3efafab4e595/src%2Flibserialize%2Fhex%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24fb393207967d3f3b2802a0dbdd3efafab4e595/src%2Flibserialize%2Fhex%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fhex%2Ftests.rs?ref=24fb393207967d3f3b2802a0dbdd3efafab4e595", "patch": "@@ -1,67 +0,0 @@\n-extern crate test;\n-use crate::hex::{FromHex, ToHex};\n-use test::Bencher;\n-\n-#[test]\n-pub fn test_to_hex() {\n-    assert_eq!(\"foobar\".as_bytes().to_hex(), \"666f6f626172\");\n-}\n-\n-#[test]\n-pub fn test_from_hex_okay() {\n-    assert_eq!(\"666f6f626172\".from_hex().unwrap(), b\"foobar\");\n-    assert_eq!(\"666F6F626172\".from_hex().unwrap(), b\"foobar\");\n-}\n-\n-#[test]\n-pub fn test_from_hex_odd_len() {\n-    assert!(\"666\".from_hex().is_err());\n-    assert!(\"66 6\".from_hex().is_err());\n-}\n-\n-#[test]\n-pub fn test_from_hex_invalid_char() {\n-    assert!(\"66y6\".from_hex().is_err());\n-}\n-\n-#[test]\n-pub fn test_from_hex_ignores_whitespace() {\n-    assert_eq!(\"666f 6f6\\r\\n26172 \".from_hex().unwrap(), b\"foobar\");\n-}\n-\n-#[test]\n-pub fn test_to_hex_all_bytes() {\n-    for i in 0..256 {\n-        assert_eq!([i as u8].to_hex(), format!(\"{:02x}\", i as usize));\n-    }\n-}\n-\n-#[test]\n-pub fn test_from_hex_all_bytes() {\n-    for i in 0..256 {\n-        let ii: &[u8] = &[i as u8];\n-        assert_eq!(format!(\"{:02x}\", i as usize).from_hex().unwrap(), ii);\n-        assert_eq!(format!(\"{:02X}\", i as usize).from_hex().unwrap(), ii);\n-    }\n-}\n-\n-#[bench]\n-pub fn bench_to_hex(b: &mut Bencher) {\n-    let s = \"\u30a4\u30ed\u30cf\u30cb\u30db\u30d8\u30c8 \u30c1\u30ea\u30cc\u30eb\u30f2 \u30ef\u30ab\u30e8\u30bf\u30ec\u30bd \u30c4\u30cd\u30ca\u30e9\u30e0 \\\n-             \u30a6\u30f0\u30ce\u30aa\u30af\u30e4\u30de \u30b1\u30d5\u30b3\u30a8\u30c6 \u30a2\u30b5\u30ad\u30e6\u30e1\u30df\u30b7 \u30f1\u30d2\u30e2\u30bb\u30b9\u30f3\";\n-    b.iter(|| {\n-        s.as_bytes().to_hex();\n-    });\n-    b.bytes = s.len() as u64;\n-}\n-\n-#[bench]\n-pub fn bench_from_hex(b: &mut Bencher) {\n-    let s = \"\u30a4\u30ed\u30cf\u30cb\u30db\u30d8\u30c8 \u30c1\u30ea\u30cc\u30eb\u30f2 \u30ef\u30ab\u30e8\u30bf\u30ec\u30bd \u30c4\u30cd\u30ca\u30e9\u30e0 \\\n-             \u30a6\u30f0\u30ce\u30aa\u30af\u30e4\u30de \u30b1\u30d5\u30b3\u30a8\u30c6 \u30a2\u30b5\u30ad\u30e6\u30e1\u30df\u30b7 \u30f1\u30d2\u30e2\u30bb\u30b9\u30f3\";\n-    let sb = s.as_bytes().to_hex();\n-    b.iter(|| {\n-        sb.from_hex().unwrap();\n-    });\n-    b.bytes = sb.len() as u64;\n-}"}, {"sha": "c0011fddf4ff3552641d23eb8a85a51922334013", "filename": "src/libserialize/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibserialize%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/567e54fca5e864f95cd41ca05c113aa6b18d7006/src%2Flibserialize%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Flib.rs?ref=567e54fca5e864f95cd41ca05c113aa6b18d7006", "patch": "@@ -25,7 +25,6 @@ pub use self::serialize::{UseSpecializedDecodable, UseSpecializedEncodable};\n mod collection_impls;\n mod serialize;\n \n-pub mod hex;\n pub mod json;\n \n pub mod leb128;"}]}