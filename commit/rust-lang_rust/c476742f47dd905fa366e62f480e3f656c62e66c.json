{"sha": "c476742f47dd905fa366e62f480e3f656c62e66c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0NzY3NDJmNDdkZDkwNWZhMzY2ZTYyZjQ4MGUzZjY1NmM2MmU2NmM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-10T15:47:49Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-10T15:47:49Z"}, "message": "Simplify", "tree": {"sha": "2267fb0aa4f15d900d7ce8c6bcc4ef976aac8084", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2267fb0aa4f15d900d7ce8c6bcc4ef976aac8084"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c476742f47dd905fa366e62f480e3f656c62e66c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c476742f47dd905fa366e62f480e3f656c62e66c", "html_url": "https://github.com/rust-lang/rust/commit/c476742f47dd905fa366e62f480e3f656c62e66c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c476742f47dd905fa366e62f480e3f656c62e66c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c5bde47fb759440d007c90fd83021de538120b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c5bde47fb759440d007c90fd83021de538120b8", "html_url": "https://github.com/rust-lang/rust/commit/5c5bde47fb759440d007c90fd83021de538120b8"}], "stats": {"total": 23, "additions": 3, "deletions": 20}, "files": [{"sha": "76b7655e68c490d8eaf18cc482857721f0fdb0ce", "filename": "crates/ra_syntax/src/ast/extensions.rs", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c476742f47dd905fa366e62f480e3f656c62e66c/crates%2Fra_syntax%2Fsrc%2Fast%2Fextensions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c476742f47dd905fa366e62f480e3f656c62e66c/crates%2Fra_syntax%2Fsrc%2Fast%2Fextensions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fextensions.rs?ref=c476742f47dd905fa366e62f480e3f656c62e66c", "patch": "@@ -275,7 +275,7 @@ pub enum SelfParamKind {\n impl ast::SelfParam {\n     pub fn kind(&self) -> SelfParamKind {\n         if self.amp_token().is_some() {\n-            if self.amp_mut_token().is_some() {\n+            if self.mut_token().is_some() {\n                 SelfParamKind::MutRef\n             } else {\n                 SelfParamKind::Ref\n@@ -284,24 +284,6 @@ impl ast::SelfParam {\n             SelfParamKind::Owned\n         }\n     }\n-\n-    /// the \"mut\" in \"mut self\", not the one in \"&mut self\"\n-    pub fn mut_token(&self) -> Option<SyntaxToken> {\n-        self.syntax()\n-            .children_with_tokens()\n-            .filter_map(|it| it.into_token())\n-            .take_while(|it| it.kind() != T![&])\n-            .find(|it| it.kind() == T![mut])\n-    }\n-\n-    /// the \"mut\" in \"&mut self\", not the one in \"mut self\"\n-    pub fn amp_mut_token(&self) -> Option<SyntaxToken> {\n-        self.syntax()\n-            .children_with_tokens()\n-            .filter_map(|it| it.into_token())\n-            .skip_while(|it| it.kind() != T![&])\n-            .find(|it| it.kind() == T![mut])\n-    }\n }\n \n #[derive(Clone, Debug, PartialEq, Eq, Hash)]"}, {"sha": "f1098755b6e7c430c2c728b4ef3cddadca130d9a", "filename": "crates/ra_syntax/src/ast/generated/nodes.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c476742f47dd905fa366e62f480e3f656c62e66c/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c476742f47dd905fa366e62f480e3f656c62e66c/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs?ref=c476742f47dd905fa366e62f480e3f656c62e66c", "patch": "@@ -2307,6 +2307,7 @@ impl ast::TypeAscriptionOwner for SelfParam {}\n impl ast::AttrsOwner for SelfParam {}\n impl SelfParam {\n     pub fn amp_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![&]) }\n+    pub fn mut_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![mut]) }\n     pub fn lifetime_token(&self) -> Option<SyntaxToken> {\n         support::token(&self.syntax, T![lifetime])\n     }"}, {"sha": "69cba91684418bae877b227ea6fe4dc472da2076", "filename": "xtask/src/ast_src.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c476742f47dd905fa366e62f480e3f656c62e66c/xtask%2Fsrc%2Fast_src.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c476742f47dd905fa366e62f480e3f656c62e66c/xtask%2Fsrc%2Fast_src.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fast_src.rs?ref=c476742f47dd905fa366e62f480e3f656c62e66c", "patch": "@@ -568,7 +568,7 @@ pub(crate) const AST_SRC: AstSrc = AstSrc {\n             params: [Param],\n             T![')']\n         }\n-        struct SelfParam: TypeAscriptionOwner, AttrsOwner { T![&], T![lifetime], T![self] }\n+        struct SelfParam: TypeAscriptionOwner, AttrsOwner { T![&], T![mut], T![lifetime], T![self] }\n         struct Param: TypeAscriptionOwner, AttrsOwner {\n             Pat,\n             T![...]"}]}