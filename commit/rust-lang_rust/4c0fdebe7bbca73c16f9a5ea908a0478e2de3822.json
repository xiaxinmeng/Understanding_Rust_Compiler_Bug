{"sha": "4c0fdebe7bbca73c16f9a5ea908a0478e2de3822", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjMGZkZWJlN2JiY2E3M2MxNmY5YTVlYTkwOGEwNDc4ZTJkZTM4MjI=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-04-25T20:14:51Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-04-25T20:14:51Z"}, "message": "Rollup merge of #33167 - benaryorg:master, r=alexcrichton\n\nclarify documentation of TcpStream::connect() for multiple valid addresses\n\nI am not sure how the UDP part of the stdlib behaves when passing multiple valid addresses, but it should be mentioned as there are legit use cases for [`impl<'a> ToSocketAddrs for &'a [SocketAddr]`](http://doc.rust-lang.org/nightly/std/net/trait.ToSocketAddrs.html), a TCP fallback only being one.\n\nJust a little example program for anyone willing to enhance the documentation further:\n\n```rust\nuse std::net::SocketAddr;\nuse std::net::ToSocketAddrs;\nuse std::net::TcpStream;\n\nfn main()\n{\n\tlet v: Vec<SocketAddr> = vec!\n\t[\n\t\t\"127.0.0.1:1338\".to_socket_addrs().unwrap().next().unwrap(),\n\t\t\"127.0.0.1:1337\".to_socket_addrs().unwrap().next().unwrap(),\n\t\t\"127.0.0.1:1339\".to_socket_addrs().unwrap().next().unwrap(),\n\t];\n\n\tlet stream = TcpStream::connect(&v[..]).unwrap();\n}\n```", "tree": {"sha": "24af838c94707b5c025a2f4e61d309482d1c2d02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24af838c94707b5c025a2f4e61d309482d1c2d02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c0fdebe7bbca73c16f9a5ea908a0478e2de3822", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c0fdebe7bbca73c16f9a5ea908a0478e2de3822", "html_url": "https://github.com/rust-lang/rust/commit/4c0fdebe7bbca73c16f9a5ea908a0478e2de3822", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c0fdebe7bbca73c16f9a5ea908a0478e2de3822/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b588f6903dff7a04e094119232c3e980591ecdfc", "url": "https://api.github.com/repos/rust-lang/rust/commits/b588f6903dff7a04e094119232c3e980591ecdfc", "html_url": "https://github.com/rust-lang/rust/commit/b588f6903dff7a04e094119232c3e980591ecdfc"}, {"sha": "68a18c4dbc8589a6cffcf16626e3d57633b32463", "url": "https://api.github.com/repos/rust-lang/rust/commits/68a18c4dbc8589a6cffcf16626e3d57633b32463", "html_url": "https://github.com/rust-lang/rust/commit/68a18c4dbc8589a6cffcf16626e3d57633b32463"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "5ab0d5a0877b7fee92d85e95b0c3806e3ab0a0bc", "filename": "src/libstd/net/tcp.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c0fdebe7bbca73c16f9a5ea908a0478e2de3822/src%2Flibstd%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c0fdebe7bbca73c16f9a5ea908a0478e2de3822/src%2Flibstd%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Ftcp.rs?ref=4c0fdebe7bbca73c16f9a5ea908a0478e2de3822", "patch": "@@ -86,6 +86,8 @@ impl TcpStream {\n     /// `addr` is an address of the remote host. Anything which implements\n     /// `ToSocketAddrs` trait can be supplied for the address; see this trait\n     /// documentation for concrete examples.\n+    /// In case `ToSocketAddrs::to_socket_addrs()` returns more than one entry,\n+    /// then the first valid and reachable address is used.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn connect<A: ToSocketAddrs>(addr: A) -> io::Result<TcpStream> {\n         super::each_addr(addr, net_imp::TcpStream::connect).map(TcpStream)"}]}