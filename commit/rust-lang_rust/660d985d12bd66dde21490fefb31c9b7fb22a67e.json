{"sha": "660d985d12bd66dde21490fefb31c9b7fb22a67e", "node_id": "C_kwDOAAsO6NoAKDY2MGQ5ODVkMTJiZDY2ZGRlMjE0OTBmZWZiMzFjOWI3ZmIyMmE2N2U", "commit": {"author": {"name": "Mads Marquart", "email": "mads@marquart.dk", "date": "2023-01-15T21:39:43Z"}, "committer": {"name": "Mads Marquart", "email": "mads@marquart.dk", "date": "2023-01-24T19:59:39Z"}, "message": "Guarantee the memory layout of `Cell`", "tree": {"sha": "49e4fe177da39922c685f16c06cf24568754d688", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49e4fe177da39922c685f16c06cf24568754d688"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/660d985d12bd66dde21490fefb31c9b7fb22a67e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/660d985d12bd66dde21490fefb31c9b7fb22a67e", "html_url": "https://github.com/rust-lang/rust/commit/660d985d12bd66dde21490fefb31c9b7fb22a67e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/660d985d12bd66dde21490fefb31c9b7fb22a67e/comments", "author": {"login": "madsmtm", "id": 10577181, "node_id": "MDQ6VXNlcjEwNTc3MTgx", "avatar_url": "https://avatars.githubusercontent.com/u/10577181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madsmtm", "html_url": "https://github.com/madsmtm", "followers_url": "https://api.github.com/users/madsmtm/followers", "following_url": "https://api.github.com/users/madsmtm/following{/other_user}", "gists_url": "https://api.github.com/users/madsmtm/gists{/gist_id}", "starred_url": "https://api.github.com/users/madsmtm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madsmtm/subscriptions", "organizations_url": "https://api.github.com/users/madsmtm/orgs", "repos_url": "https://api.github.com/users/madsmtm/repos", "events_url": "https://api.github.com/users/madsmtm/events{/privacy}", "received_events_url": "https://api.github.com/users/madsmtm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "madsmtm", "id": 10577181, "node_id": "MDQ6VXNlcjEwNTc3MTgx", "avatar_url": "https://avatars.githubusercontent.com/u/10577181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madsmtm", "html_url": "https://github.com/madsmtm", "followers_url": "https://api.github.com/users/madsmtm/followers", "following_url": "https://api.github.com/users/madsmtm/following{/other_user}", "gists_url": "https://api.github.com/users/madsmtm/gists{/gist_id}", "starred_url": "https://api.github.com/users/madsmtm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madsmtm/subscriptions", "organizations_url": "https://api.github.com/users/madsmtm/orgs", "repos_url": "https://api.github.com/users/madsmtm/repos", "events_url": "https://api.github.com/users/madsmtm/events{/privacy}", "received_events_url": "https://api.github.com/users/madsmtm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae4d89dfb51535c1c43052ef848564bd2323c9ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae4d89dfb51535c1c43052ef848564bd2323c9ca", "html_url": "https://github.com/rust-lang/rust/commit/ae4d89dfb51535c1c43052ef848564bd2323c9ca"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "c65c30e566a1415abf7cfb582faad203f6e5c28c", "filename": "library/core/src/cell.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/660d985d12bd66dde21490fefb31c9b7fb22a67e/library%2Fcore%2Fsrc%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/660d985d12bd66dde21490fefb31c9b7fb22a67e/library%2Fcore%2Fsrc%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcell.rs?ref=660d985d12bd66dde21490fefb31c9b7fb22a67e", "patch": "@@ -209,6 +209,12 @@ pub use once::OnceCell;\n \n /// A mutable memory location.\n ///\n+/// # Memory layout\n+///\n+/// `Cell<T>` has the same [memory layout and caveats as\n+/// `UnsafeCell<T>`](UnsafeCell#memory-layout). In particular, this means that\n+/// `Cell<T>` has the same in-memory representation as its inner type `T`.\n+///\n /// # Examples\n ///\n /// In this example, you can see that `Cell<T>` enables mutation inside an"}]}