{"sha": "274122426e5004c8bc6fb37fe55511812671a45a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3NDEyMjQyNmU1MDA0YzhiYzZmYjM3ZmU1NTUxMTgxMjY3MWE0NWE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-30T15:48:34Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-30T15:48:34Z"}, "message": "fix example", "tree": {"sha": "2ccd820d478843e1b4170f515a816ed37f71cb10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ccd820d478843e1b4170f515a816ed37f71cb10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/274122426e5004c8bc6fb37fe55511812671a45a", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/274122426e5004c8bc6fb37fe55511812671a45a", "html_url": "https://github.com/rust-lang/rust/commit/274122426e5004c8bc6fb37fe55511812671a45a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/274122426e5004c8bc6fb37fe55511812671a45a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c06f5517dc00798c85ecad37504ebd0b29ede35a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c06f5517dc00798c85ecad37504ebd0b29ede35a", "html_url": "https://github.com/rust-lang/rust/commit/c06f5517dc00798c85ecad37504ebd0b29ede35a"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "b811b9392953251238ec6c3ef5c91431668a7ee7", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/274122426e5004c8bc6fb37fe55511812671a45a/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274122426e5004c8bc6fb37fe55511812671a45a/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=274122426e5004c8bc6fb37fe55511812671a45a", "patch": "@@ -149,7 +149,8 @@ pub use intrinsics::write_bytes;\n /// assert!(weak.upgrade().is_none());\n /// ```\n ///\n-/// Drops a potentially unaligned value by copying it to aligned memory first:\n+/// Unaligned values cannot be dropped in place, they must be copied to an aligned\n+/// location first:\n /// ```\n /// use std::ptr;\n /// use std::mem;\n@@ -158,7 +159,7 @@ pub use intrinsics::write_bytes;\n ///     let mut copy: T = mem::uninitialized();\n ///     let copy = &mut copy as *mut T;\n ///     ptr::copy(to_drop, copy, 1);\n-///     ptr::drop_in_place(copy);\n+///     drop(copy);\n /// }\n ///\n /// #[repr(packed, C)]"}]}