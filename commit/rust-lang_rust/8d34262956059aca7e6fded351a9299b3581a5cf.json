{"sha": "8d34262956059aca7e6fded351a9299b3581a5cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkMzQyNjI5NTYwNTlhY2E3ZTZmZGVkMzUxYTkyOTliMzU4MWE1Y2Y=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-12T14:52:28Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-12T14:52:28Z"}, "message": "Rename ra_toolchain -> toolchain", "tree": {"sha": "d61e655acf03a8116f67f5a65bae4db15d0661df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d61e655acf03a8116f67f5a65bae4db15d0661df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d34262956059aca7e6fded351a9299b3581a5cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d34262956059aca7e6fded351a9299b3581a5cf", "html_url": "https://github.com/rust-lang/rust/commit/8d34262956059aca7e6fded351a9299b3581a5cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d34262956059aca7e6fded351a9299b3581a5cf/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "550d7fbe3cbf2af4a47fca6c9bbefaf798cd7b7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/550d7fbe3cbf2af4a47fca6c9bbefaf798cd7b7b", "html_url": "https://github.com/rust-lang/rust/commit/550d7fbe3cbf2af4a47fca6c9bbefaf798cd7b7b"}], "stats": {"total": 62, "additions": 30, "deletions": 32}, "files": [{"sha": "c48c6a59779e76bf2acb30c21803c312a93b5816", "filename": "Cargo.lock", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8d34262956059aca7e6fded351a9299b3581a5cf/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/8d34262956059aca7e6fded351a9299b3581a5cf/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=8d34262956059aca7e6fded351a9299b3581a5cf", "patch": "@@ -358,8 +358,8 @@ dependencies = [\n  \"crossbeam-channel\",\n  \"jod-thread\",\n  \"log\",\n- \"ra_toolchain\",\n  \"serde_json\",\n+ \"toolchain\",\n ]\n \n [[package]]\n@@ -1143,9 +1143,9 @@ dependencies = [\n  \"memmap\",\n  \"ra_mbe\",\n  \"ra_proc_macro\",\n- \"ra_toolchain\",\n  \"serde_derive\",\n  \"test_utils\",\n+ \"toolchain\",\n  \"tt\",\n ]\n \n@@ -1161,11 +1161,11 @@ dependencies = [\n  \"ra_cfg\",\n  \"ra_db\",\n  \"ra_proc_macro\",\n- \"ra_toolchain\",\n  \"rustc-hash\",\n  \"serde\",\n  \"serde_json\",\n  \"stdx\",\n+ \"toolchain\",\n ]\n \n [[package]]\n@@ -1210,13 +1210,6 @@ dependencies = [\n  \"text-size\",\n ]\n \n-[[package]]\n-name = \"ra_toolchain\"\n-version = \"0.1.0\"\n-dependencies = [\n- \"home\",\n-]\n-\n [[package]]\n name = \"rayon\"\n version = \"1.3.1\"\n@@ -1320,14 +1313,14 @@ dependencies = [\n  \"ra_ssr\",\n  \"ra_syntax\",\n  \"ra_text_edit\",\n- \"ra_toolchain\",\n  \"rayon\",\n  \"rustc-hash\",\n  \"serde\",\n  \"serde_json\",\n  \"stdx\",\n  \"test_utils\",\n  \"threadpool\",\n+ \"toolchain\",\n  \"tt\",\n  \"vfs\",\n  \"vfs-notify\",\n@@ -1612,6 +1605,13 @@ version = \"0.3.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"53953d2d3a5ad81d9f844a32f14ebb121f50b650cd59d0ee2a07cf13c617efed\"\n \n+[[package]]\n+name = \"toolchain\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"home\",\n+]\n+\n [[package]]\n name = \"tracing\"\n version = \"0.1.18\""}, {"sha": "acc72bc59ccfd0e0f8ccdaeb47336b5b88449b14", "filename": "crates/flycheck/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d34262956059aca7e6fded351a9299b3581a5cf/crates%2Fflycheck%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8d34262956059aca7e6fded351a9299b3581a5cf/crates%2Fflycheck%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fflycheck%2FCargo.toml?ref=8d34262956059aca7e6fded351a9299b3581a5cf", "patch": "@@ -14,4 +14,4 @@ log = \"0.4.8\"\n cargo_metadata = \"0.11.1\"\n serde_json = \"1.0.48\"\n jod-thread = \"0.1.1\"\n-ra_toolchain = { path = \"../ra_toolchain\" }\n+toolchain = { path = \"../toolchain\" }"}, {"sha": "16078d10434d304d9047c35fa3b27cc3ef0e5a12", "filename": "crates/flycheck/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d34262956059aca7e6fded351a9299b3581a5cf/crates%2Fflycheck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d34262956059aca7e6fded351a9299b3581a5cf/crates%2Fflycheck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fflycheck%2Fsrc%2Flib.rs?ref=8d34262956059aca7e6fded351a9299b3581a5cf", "patch": "@@ -193,7 +193,7 @@ impl FlycheckActor {\n                 extra_args,\n                 features,\n             } => {\n-                let mut cmd = Command::new(ra_toolchain::cargo());\n+                let mut cmd = Command::new(toolchain::cargo());\n                 cmd.arg(command);\n                 cmd.args(&[\"--workspace\", \"--message-format=json\", \"--manifest-path\"])\n                     .arg(self.workspace_root.join(\"Cargo.toml\"));"}, {"sha": "1c25e72296f8ccc16acd75108e0ca1ab2bc9fce0", "filename": "crates/ra_proc_macro_srv/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d34262956059aca7e6fded351a9299b3581a5cf/crates%2Fra_proc_macro_srv%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8d34262956059aca7e6fded351a9299b3581a5cf/crates%2Fra_proc_macro_srv%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro_srv%2FCargo.toml?ref=8d34262956059aca7e6fded351a9299b3581a5cf", "patch": "@@ -23,4 +23,4 @@ cargo_metadata = \"0.11.1\"\n difference = \"2.0.0\"\n # used as proc macro test target\n serde_derive = \"1.0.106\"\n-ra_toolchain = { path = \"../ra_toolchain\" }\n+toolchain = { path = \"../toolchain\" }"}, {"sha": "1b6a0b6fb798a978b3a0b59ec4bc12742fe62b87", "filename": "crates/ra_proc_macro_srv/src/tests/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d34262956059aca7e6fded351a9299b3581a5cf/crates%2Fra_proc_macro_srv%2Fsrc%2Ftests%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d34262956059aca7e6fded351a9299b3581a5cf/crates%2Fra_proc_macro_srv%2Fsrc%2Ftests%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro_srv%2Fsrc%2Ftests%2Futils.rs?ref=8d34262956059aca7e6fded351a9299b3581a5cf", "patch": "@@ -12,7 +12,7 @@ mod fixtures {\n \n     // Use current project metadata to get the proc-macro dylib path\n     pub fn dylib_path(crate_name: &str, version: &str) -> std::path::PathBuf {\n-        let command = Command::new(ra_toolchain::cargo())\n+        let command = Command::new(toolchain::cargo())\n             .args(&[\"check\", \"--message-format\", \"json\"])\n             .output()\n             .unwrap()"}, {"sha": "171fe86264b61395ad470767318630624fc2bc05", "filename": "crates/ra_project_model/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d34262956059aca7e6fded351a9299b3581a5cf/crates%2Fra_project_model%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8d34262956059aca7e6fded351a9299b3581a5cf/crates%2Fra_project_model%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2FCargo.toml?ref=8d34262956059aca7e6fded351a9299b3581a5cf", "patch": "@@ -17,7 +17,7 @@ cargo_metadata = \"0.11.1\"\n arena = { path = \"../arena\" }\n ra_cfg = { path = \"../ra_cfg\" }\n ra_db = { path = \"../ra_db\" }\n-ra_toolchain = { path = \"../ra_toolchain\" }\n+toolchain = { path = \"../toolchain\" }\n ra_proc_macro =  { path = \"../ra_proc_macro\" }\n paths =  { path = \"../paths\" }\n stdx =  { path = \"../stdx\" }"}, {"sha": "abf8dca9644b3d7346bef79fe100cbd8d5321dfb", "filename": "crates/ra_project_model/src/cargo_workspace.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8d34262956059aca7e6fded351a9299b3581a5cf/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d34262956059aca7e6fded351a9299b3581a5cf/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs?ref=8d34262956059aca7e6fded351a9299b3581a5cf", "patch": "@@ -140,7 +140,7 @@ impl CargoWorkspace {\n         cargo_features: &CargoConfig,\n     ) -> Result<CargoWorkspace> {\n         let mut meta = MetadataCommand::new();\n-        meta.cargo_path(ra_toolchain::cargo());\n+        meta.cargo_path(toolchain::cargo());\n         meta.manifest_path(cargo_toml.to_path_buf());\n         if cargo_features.all_features {\n             meta.features(CargoOpt::AllFeatures);\n@@ -288,7 +288,7 @@ pub fn load_extern_resources(\n     cargo_toml: &Path,\n     cargo_features: &CargoConfig,\n ) -> Result<ExternResources> {\n-    let mut cmd = Command::new(ra_toolchain::cargo());\n+    let mut cmd = Command::new(toolchain::cargo());\n     cmd.args(&[\"check\", \"--message-format=json\", \"--manifest-path\"]).arg(cargo_toml);\n     if cargo_features.all_features {\n         cmd.arg(\"--all-features\");"}, {"sha": "46f44910c03151781ecb65d8ae72c630d635ef26", "filename": "crates/ra_project_model/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d34262956059aca7e6fded351a9299b3581a5cf/crates%2Fra_project_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d34262956059aca7e6fded351a9299b3581a5cf/crates%2Fra_project_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Flib.rs?ref=8d34262956059aca7e6fded351a9299b3581a5cf", "patch": "@@ -513,7 +513,7 @@ fn get_rustc_cfg_options(target: Option<&str>) -> Vec<CfgFlag> {\n     }\n \n     let rustc_cfgs = {\n-        let mut cmd = Command::new(ra_toolchain::rustc());\n+        let mut cmd = Command::new(toolchain::rustc());\n         cmd.args(&[\"--print\", \"cfg\", \"-O\"]);\n         if let Some(target) = target {\n             cmd.args(&[\"--target\", target]);"}, {"sha": "8239797b6b763b4b8d43de5242dc529b26b52445", "filename": "crates/ra_project_model/src/sysroot.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8d34262956059aca7e6fded351a9299b3581a5cf/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d34262956059aca7e6fded351a9299b3581a5cf/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs?ref=8d34262956059aca7e6fded351a9299b3581a5cf", "patch": "@@ -101,13 +101,13 @@ fn get_or_install_rust_src(cargo_toml: &AbsPath) -> Result<AbsPathBuf> {\n         return Ok(path);\n     }\n     let current_dir = cargo_toml.parent().unwrap();\n-    let mut rustc = Command::new(ra_toolchain::rustc());\n+    let mut rustc = Command::new(toolchain::rustc());\n     rustc.current_dir(current_dir).args(&[\"--print\", \"sysroot\"]);\n     let stdout = utf8_stdout(rustc)?;\n     let sysroot_path = AbsPath::assert(Path::new(stdout.trim()));\n     let mut src = get_rust_src(sysroot_path);\n     if src.is_none() {\n-        let mut rustup = Command::new(ra_toolchain::rustup());\n+        let mut rustup = Command::new(toolchain::rustup());\n         rustup.current_dir(current_dir).args(&[\"component\", \"add\", \"rust-src\"]);\n         utf8_stdout(rustup)?;\n         src = get_rust_src(sysroot_path);"}, {"sha": "3f70510fd76e3cc34ccd266f9aa3efabb4268a5f", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d34262956059aca7e6fded351a9299b3581a5cf/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8d34262956059aca7e6fded351a9299b3581a5cf/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=8d34262956059aca7e6fded351a9299b3581a5cf", "patch": "@@ -43,7 +43,7 @@ ra_text_edit = { path = \"../ra_text_edit\" }\n vfs = { path = \"../vfs\" }\n vfs-notify = { path = \"../vfs-notify\" }\n ra_cfg = { path = \"../ra_cfg\" }\n-ra_toolchain = { path = \"../ra_toolchain\" }\n+toolchain = { path = \"../toolchain\" }\n \n # This should only be used in CLI\n ra_db = { path = \"../ra_db\" }"}, {"sha": "07f4af3d3b60da670701d41dfe3378aab545d70f", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d34262956059aca7e6fded351a9299b3581a5cf/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d34262956059aca7e6fded351a9299b3581a5cf/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=8d34262956059aca7e6fded351a9299b3581a5cf", "patch": "@@ -692,7 +692,7 @@ pub(crate) fn handle_formatting(\n \n     let mut rustfmt = match &snap.config.rustfmt {\n         RustfmtConfig::Rustfmt { extra_args } => {\n-            let mut cmd = process::Command::new(ra_toolchain::rustfmt());\n+            let mut cmd = process::Command::new(toolchain::rustfmt());\n             cmd.args(extra_args);\n             if let Some(&crate_id) = crate_ids.first() {\n                 // Assume all crates are in the same edition"}, {"sha": "4856668f844090b3d67c0d9627eab100c5b6eb17", "filename": "crates/toolchain/Cargo.toml", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8d34262956059aca7e6fded351a9299b3581a5cf/crates%2Ftoolchain%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8d34262956059aca7e6fded351a9299b3581a5cf/crates%2Ftoolchain%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftoolchain%2FCargo.toml?ref=8d34262956059aca7e6fded351a9299b3581a5cf", "patch": "@@ -1,9 +1,9 @@\n [package]\n-edition = \"2018\"\n-name = \"ra_toolchain\"\n-version = \"0.1.0\"\n-authors = [\"rust-analyzer developers\"]\n+name = \"toolchain\"\n+version = \"0.0.0\"\n license = \"MIT OR Apache-2.0\"\n+authors = [\"rust-analyzer developers\"]\n+edition = \"2018\"\n \n [lib]\n doctest = false", "previous_filename": "crates/ra_toolchain/Cargo.toml"}, {"sha": "3b6886f5b576d715b98c419dfd02ad833f1e3f03", "filename": "crates/toolchain/src/lib.rs", "status": "renamed", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8d34262956059aca7e6fded351a9299b3581a5cf/crates%2Ftoolchain%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d34262956059aca7e6fded351a9299b3581a5cf/crates%2Ftoolchain%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftoolchain%2Fsrc%2Flib.rs?ref=8d34262956059aca7e6fded351a9299b3581a5cf", "patch": "@@ -1,6 +1,4 @@\n-//! This crate contains a single public function\n-//! [`get_path_for_executable`](fn.get_path_for_executable.html).\n-//! See docs there for more information.\n+//! Discovery of `cargo` & `rustc` executables.\n use std::{env, iter, path::PathBuf};\n \n pub fn cargo() -> PathBuf {", "previous_filename": "crates/ra_toolchain/src/lib.rs"}, {"sha": "a5dc3cf0ccf59ee6ae3ec89eed109b0b53ce6ae6", "filename": "editors/code/src/toolchain.ts", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8d34262956059aca7e6fded351a9299b3581a5cf/editors%2Fcode%2Fsrc%2Ftoolchain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/8d34262956059aca7e6fded351a9299b3581a5cf/editors%2Fcode%2Fsrc%2Ftoolchain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Ftoolchain.ts?ref=8d34262956059aca7e6fded351a9299b3581a5cf", "patch": "@@ -121,12 +121,12 @@ export class Cargo {\n     }\n }\n \n-/** Mirrors `ra_toolchain::cargo()` implementation */\n+/** Mirrors `toolchain::cargo()` implementation */\n export function cargoPath(): string {\n     return getPathForExecutable(\"cargo\");\n }\n \n-/** Mirrors `ra_toolchain::get_path_for_executable()` implementation */\n+/** Mirrors `toolchain::get_path_for_executable()` implementation */\n export const getPathForExecutable = memoize(\n     // We apply caching to decrease file-system interactions\n     (executableName: \"cargo\" | \"rustc\" | \"rustup\"): string => {"}]}