{"sha": "24fa9deddc8d5bf940ee89672cb819e802b39d43", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0ZmE5ZGVkZGM4ZDViZjk0MGVlODk2NzJjYjgxOWU4MDJiMzlkNDM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-07-25T12:33:41Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-07-25T12:36:00Z"}, "message": "add test for mixing up System and Global memory", "tree": {"sha": "82fd1a66c41f8cc4045b72bfc0276d5b7dbc60ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82fd1a66c41f8cc4045b72bfc0276d5b7dbc60ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24fa9deddc8d5bf940ee89672cb819e802b39d43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24fa9deddc8d5bf940ee89672cb819e802b39d43", "html_url": "https://github.com/rust-lang/rust/commit/24fa9deddc8d5bf940ee89672cb819e802b39d43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24fa9deddc8d5bf940ee89672cb819e802b39d43/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2872a3f2a26154b91a6a6085d56016509803c61", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2872a3f2a26154b91a6a6085d56016509803c61", "html_url": "https://github.com/rust-lang/rust/commit/e2872a3f2a26154b91a6a6085d56016509803c61"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "afe9d5cc825403a65482ae3fc890ab5f98f227ae", "filename": "tests/compile-fail/alloc/global_system_mixup.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/24fa9deddc8d5bf940ee89672cb819e802b39d43/tests%2Fcompile-fail%2Falloc%2Fglobal_system_mixup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24fa9deddc8d5bf940ee89672cb819e802b39d43/tests%2Fcompile-fail%2Falloc%2Fglobal_system_mixup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Falloc%2Fglobal_system_mixup.rs?ref=24fa9deddc8d5bf940ee89672cb819e802b39d43", "patch": "@@ -0,0 +1,13 @@\n+// Make sure we detect when the `Global` and `System` allocators are mixed\n+// (even when the default `Global` uses `System`).\n+// error-pattern: which is Rust heap memory, using\n+\n+#![feature(allocator_api, slice_ptr_get)]\n+\n+use std::alloc::{Allocator, Global, System, Layout};\n+\n+fn main() {\n+    let l = Layout::from_size_align(1, 1).unwrap();\n+    let ptr = Global.allocate(l).unwrap().as_non_null_ptr();\n+    unsafe { System.deallocate(ptr, l); }\n+}"}]}