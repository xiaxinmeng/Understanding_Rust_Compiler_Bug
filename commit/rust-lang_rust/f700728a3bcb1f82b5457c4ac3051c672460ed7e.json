{"sha": "f700728a3bcb1f82b5457c4ac3051c672460ed7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3MDA3MjhhM2JjYjFmODJiNTQ1N2M0YWMzMDUxYzY3MjQ2MGVkN2U=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-10-25T18:17:17Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-10-31T16:41:39Z"}, "message": "make end-point optional in the borrow check", "tree": {"sha": "edcdbf21db024c9202f1c834c93f3011c2045666", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edcdbf21db024c9202f1c834c93f3011c2045666"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f700728a3bcb1f82b5457c4ac3051c672460ed7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f700728a3bcb1f82b5457c4ac3051c672460ed7e", "html_url": "https://github.com/rust-lang/rust/commit/f700728a3bcb1f82b5457c4ac3051c672460ed7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f700728a3bcb1f82b5457c4ac3051c672460ed7e/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b2adcce115ee0e3fe4e53b57a2b9f168c26b288", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b2adcce115ee0e3fe4e53b57a2b9f168c26b288", "html_url": "https://github.com/rust-lang/rust/commit/5b2adcce115ee0e3fe4e53b57a2b9f168c26b288"}], "stats": {"total": 58, "additions": 37, "deletions": 21}, "files": [{"sha": "908737669c5cb37b989f6e9a18daf1319eb1c431", "filename": "src/librustc_borrowck/borrowck/check_loans.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f700728a3bcb1f82b5457c4ac3051c672460ed7e/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f700728a3bcb1f82b5457c4ac3051c672460ed7e/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs?ref=f700728a3bcb1f82b5457c4ac3051c672460ed7e", "patch": "@@ -484,7 +484,8 @@ impl<'a, 'tcx> CheckLoanCtxt<'a, 'tcx> {\n             // 3. Where does old loan expire.\n \n             let previous_end_span =\n-                old_loan.kill_scope.span(self.tcx(), &self.bccx.region_scope_tree).end_point();\n+                Some(old_loan.kill_scope.span(self.tcx(), &self.bccx.region_scope_tree)\n+                     .end_point());\n \n             let mut err = match (new_loan.kind, old_loan.kind) {\n                 (ty::MutBorrow, ty::MutBorrow) =>"}, {"sha": "38e77a96df9733b98d215741603ace7e9d695551", "filename": "src/librustc_mir/borrow_check.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f700728a3bcb1f82b5457c4ac3051c672460ed7e/src%2Flibrustc_mir%2Fborrow_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f700728a3bcb1f82b5457c4ac3051c672460ed7e/src%2Flibrustc_mir%2Fborrow_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check.rs?ref=f700728a3bcb1f82b5457c4ac3051c672460ed7e", "patch": "@@ -425,8 +425,8 @@ impl<'c, 'b, 'a: 'b+'c, 'gcx, 'tcx: 'a> MirBorrowckCtxt<'c, 'b, 'a, 'gcx, 'tcx>\n                                     context, lvalue_span, borrow),\n                             ReadKind::Borrow(bk) => {\n                                 let end_issued_loan_span =\n-                                    flow_state.borrows.base_results.operator().region_span(\n-                                        &borrow.region).end_point();\n+                                    flow_state.borrows.base_results.operator().opt_region_end_span(\n+                                        &borrow.region);\n                                 this.report_conflicting_borrow(\n                                     context, common_prefix, lvalue_span, bk,\n                                     &borrow, end_issued_loan_span)\n@@ -438,8 +438,8 @@ impl<'c, 'b, 'a: 'b+'c, 'gcx, 'tcx: 'a> MirBorrowckCtxt<'c, 'b, 'a, 'gcx, 'tcx>\n                         match kind {\n                             WriteKind::MutableBorrow(bk) => {\n                                 let end_issued_loan_span =\n-                                    flow_state.borrows.base_results.operator().region_span(\n-                                        &borrow.region).end_point();\n+                                    flow_state.borrows.base_results.operator().opt_region_end_span(\n+                                        &borrow.region);\n                                 this.report_conflicting_borrow(\n                                     context, common_prefix, lvalue_span, bk,\n                                     &borrow, end_issued_loan_span)\n@@ -1101,7 +1101,7 @@ impl<'c, 'b, 'a: 'b+'c, 'gcx, 'tcx: 'a> MirBorrowckCtxt<'c, 'b, 'a, 'gcx, 'tcx>\n                                  (lvalue, span): (&Lvalue, Span),\n                                  gen_borrow_kind: BorrowKind,\n                                  issued_borrow: &BorrowData,\n-                                 end_issued_loan_span: Span) {\n+                                 end_issued_loan_span: Option<Span>) {\n         use self::prefixes::IsPrefixOf;\n \n         assert!(common_prefix.is_prefix_of(lvalue));"}, {"sha": "396bfac8eb28f94ca107a6771c91fd020b569b21", "filename": "src/librustc_mir/dataflow/impls/borrows.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f700728a3bcb1f82b5457c4ac3051c672460ed7e/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f700728a3bcb1f82b5457c4ac3051c672460ed7e/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs?ref=f700728a3bcb1f82b5457c4ac3051c672460ed7e", "patch": "@@ -116,10 +116,13 @@ impl<'a, 'tcx> Borrows<'a, 'tcx> {\n         &self.borrows[idx].location\n     }\n \n-    pub fn region_span(&self, region: &Region) -> Span {\n+    /// Returns the span for the \"end point\" given region. This will\n+    /// return `None` if NLL is enabled, since that concept has no\n+    /// meaning there.  Otherwise, it should return some.\n+    pub fn opt_region_end_span(&self, region: &Region) -> Option<Span> {\n         let opt_span = self.region_span_map.get(region);\n         assert!(opt_span.is_some(), \"end region not found for {:?}\", region);\n-        *opt_span.unwrap()\n+        opt_span.map(|s| s.end_point())\n     }\n }\n "}, {"sha": "5cc960face9d131b3b37ae0c55014d7e6f071ee8", "filename": "src/librustc_mir/util/borrowck_errors.rs", "status": "modified", "additions": 25, "deletions": 13, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f700728a3bcb1f82b5457c4ac3051c672460ed7e/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f700728a3bcb1f82b5457c4ac3051c672460ed7e/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs?ref=f700728a3bcb1f82b5457c4ac3051c672460ed7e", "patch": "@@ -93,7 +93,7 @@ pub trait BorrowckErrors {\n                                       opt_via: &str,\n                                       old_loan_span: Span,\n                                       old_opt_via: &str,\n-                                      old_load_end_span:Span,\n+                                      old_load_end_span: Option<Span>,\n                                       o: Origin)\n                                       -> DiagnosticBuilder\n     {\n@@ -106,13 +106,17 @@ pub trait BorrowckErrors {\n             err.span_label(new_loan_span,\n                            format!(\"mutable borrow starts here in previous \\\n                                     iteration of loop{}\", opt_via));\n-            err.span_label(old_load_end_span, \"mutable borrow ends here\");\n+            if let Some(old_load_end_span) = old_load_end_span {\n+                err.span_label(old_load_end_span, \"mutable borrow ends here\");\n+            }\n         } else {\n             err.span_label(old_loan_span,\n                            format!(\"first mutable borrow occurs here{}\", old_opt_via));\n             err.span_label(new_loan_span,\n                            format!(\"second mutable borrow occurs here{}\", opt_via));\n-            err.span_label(old_load_end_span, \"first borrow ends here\");\n+            if let Some(old_load_end_span) = old_load_end_span {\n+                err.span_label(old_load_end_span, \"first borrow ends here\");\n+            }\n         }\n         err\n     }\n@@ -121,7 +125,7 @@ pub trait BorrowckErrors {\n                                               new_loan_span: Span,\n                                               desc: &str,\n                                               old_loan_span: Span,\n-                                              old_load_end_span: Span,\n+                                              old_load_end_span: Option<Span>,\n                                               o: Origin)\n                                               -> DiagnosticBuilder\n     {\n@@ -134,9 +138,11 @@ pub trait BorrowckErrors {\n         err.span_label(\n             new_loan_span,\n             \"second closure is constructed here\");\n-        err.span_label(\n-            old_load_end_span,\n-            \"borrow from first closure ends here\");\n+        if let Some(old_load_end_span) = old_load_end_span {\n+            err.span_label(\n+                old_load_end_span,\n+                \"borrow from first closure ends here\");\n+        }\n         err\n     }\n \n@@ -147,7 +153,7 @@ pub trait BorrowckErrors {\n                                              old_loan_span: Span,\n                                              noun_old: &str,\n                                              old_opt_via: &str,\n-                                             previous_end_span: Span,\n+                                             previous_end_span: Option<Span>,\n                                              o: Origin)\n                                              -> DiagnosticBuilder\n     {\n@@ -158,7 +164,9 @@ pub trait BorrowckErrors {\n                        format!(\"closure construction occurs here{}\", opt_via));\n         err.span_label(old_loan_span,\n                        format!(\"borrow occurs here{}\", old_opt_via));\n-        err.span_label(previous_end_span, \"borrow ends here\");\n+        if let Some(previous_end_span) = previous_end_span {\n+            err.span_label(previous_end_span, \"borrow ends here\");\n+        }\n         err\n     }\n \n@@ -169,7 +177,7 @@ pub trait BorrowckErrors {\n                                                  kind_new: &str,\n                                                  old_loan_span: Span,\n                                                  old_opt_via: &str,\n-                                                 previous_end_span: Span,\n+                                                 previous_end_span: Option<Span>,\n                                                  o: Origin)\n                                                  -> DiagnosticBuilder\n     {\n@@ -181,7 +189,9 @@ pub trait BorrowckErrors {\n                        format!(\"borrow occurs here{}\", opt_via));\n         err.span_label(old_loan_span,\n                        format!(\"closure construction occurs here{}\", old_opt_via));\n-        err.span_label(previous_end_span, \"borrow from closure ends here\");\n+        if let Some(previous_end_span) = previous_end_span {\n+            err.span_label(previous_end_span, \"borrow from closure ends here\");\n+        }\n         err\n     }\n \n@@ -194,7 +204,7 @@ pub trait BorrowckErrors {\n                                         noun_old: &str,\n                                         kind_old: &str,\n                                         msg_old: &str,\n-                                        old_load_end_span: Span,\n+                                        old_load_end_span: Option<Span>,\n                                         o: Origin)\n                                         -> DiagnosticBuilder\n     {\n@@ -203,7 +213,9 @@ pub trait BorrowckErrors {\n                          desc_new, msg_new, kind_new, noun_old, kind_old, msg_old, OGN=o);\n         err.span_label(span, format!(\"{} borrow occurs here{}\", kind_new, msg_new));\n         err.span_label(old_span, format!(\"{} borrow occurs here{}\", kind_old, msg_old));\n-        err.span_label(old_load_end_span, format!(\"{} borrow ends here\", kind_old));\n+        if let Some(old_load_end_span) = old_load_end_span {\n+            err.span_label(old_load_end_span, format!(\"{} borrow ends here\", kind_old));\n+        }\n         err\n     }\n "}]}