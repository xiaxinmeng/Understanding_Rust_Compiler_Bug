{"sha": "8cab350c85b9738e4dbc99c67e71bd4a5b6f62a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjYWIzNTBjODViOTczOGU0ZGJjOTljNjdlNzFiZDRhNWI2ZjYyYTc=", "commit": {"author": {"name": "Masaki Hara", "email": "ackie.h.gmai@gmail.com", "date": "2018-11-28T14:59:19Z"}, "committer": {"name": "Masaki Hara", "email": "ackie.h.gmai@gmail.com", "date": "2018-11-28T14:59:19Z"}, "message": "Don't use ReErased in deferred sizedness checking.", "tree": {"sha": "8fbb45d1b05612efcd1c59882c97c61f829e4ccc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fbb45d1b05612efcd1c59882c97c61f829e4ccc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cab350c85b9738e4dbc99c67e71bd4a5b6f62a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cab350c85b9738e4dbc99c67e71bd4a5b6f62a7", "html_url": "https://github.com/rust-lang/rust/commit/8cab350c85b9738e4dbc99c67e71bd4a5b6f62a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cab350c85b9738e4dbc99c67e71bd4a5b6f62a7/comments", "author": {"login": "qnighy", "id": 41755, "node_id": "MDQ6VXNlcjQxNzU1", "avatar_url": "https://avatars.githubusercontent.com/u/41755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qnighy", "html_url": "https://github.com/qnighy", "followers_url": "https://api.github.com/users/qnighy/followers", "following_url": "https://api.github.com/users/qnighy/following{/other_user}", "gists_url": "https://api.github.com/users/qnighy/gists{/gist_id}", "starred_url": "https://api.github.com/users/qnighy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qnighy/subscriptions", "organizations_url": "https://api.github.com/users/qnighy/orgs", "repos_url": "https://api.github.com/users/qnighy/repos", "events_url": "https://api.github.com/users/qnighy/events{/privacy}", "received_events_url": "https://api.github.com/users/qnighy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "qnighy", "id": 41755, "node_id": "MDQ6VXNlcjQxNzU1", "avatar_url": "https://avatars.githubusercontent.com/u/41755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qnighy", "html_url": "https://github.com/qnighy", "followers_url": "https://api.github.com/users/qnighy/followers", "following_url": "https://api.github.com/users/qnighy/following{/other_user}", "gists_url": "https://api.github.com/users/qnighy/gists{/gist_id}", "starred_url": "https://api.github.com/users/qnighy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qnighy/subscriptions", "organizations_url": "https://api.github.com/users/qnighy/orgs", "repos_url": "https://api.github.com/users/qnighy/repos", "events_url": "https://api.github.com/users/qnighy/events{/privacy}", "received_events_url": "https://api.github.com/users/qnighy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d35e57907ce2a57446e94dcf9e3403a51de6205", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d35e57907ce2a57446e94dcf9e3403a51de6205", "html_url": "https://github.com/rust-lang/rust/commit/9d35e57907ce2a57446e94dcf9e3403a51de6205"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "a107cec9ef41b868b2de8d47cb083237ba1bad92", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8cab350c85b9738e4dbc99c67e71bd4a5b6f62a7/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cab350c85b9738e4dbc99c67e71bd4a5b6f62a7/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=8cab350c85b9738e4dbc99c67e71bd4a5b6f62a7", "patch": "@@ -3970,15 +3970,27 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                         //\n                         // to work in stable even if the Sized bound on `drop` is relaxed.\n                         for i in 0..fn_sig.inputs().skip_binder().len() {\n-                            let input = tcx.erase_late_bound_regions(&fn_sig.input(i));\n+                            // We just want to check sizedness, so instead of introducing\n+                            // placeholder lifetimes with probing, we just replace higher lifetimes\n+                            // with fresh vars.\n+                            let input = self.replace_bound_vars_with_fresh_vars(\n+                                expr.span,\n+                                infer::LateBoundRegionConversionTime::FnCall,\n+                                &fn_sig.input(i)).0;\n                             self.require_type_is_sized_deferred(input, expr.span,\n                                                                 traits::SizedArgumentType);\n                         }\n                     }\n                     // Here we want to prevent struct constructors from returning unsized types.\n                     // There were two cases this happened: fn pointer coercion in stable\n                     // and usual function call in presense of unsized_locals.\n-                    let output = tcx.erase_late_bound_regions(&fn_sig.output());\n+                    // Also, as we just want to check sizedness, instead of introducing\n+                    // placeholder lifetimes with probing, we just replace higher lifetimes\n+                    // with fresh vars.\n+                    let output = self.replace_bound_vars_with_fresh_vars(\n+                        expr.span,\n+                        infer::LateBoundRegionConversionTime::FnCall,\n+                        &fn_sig.output()).0;\n                     self.require_type_is_sized_deferred(output, expr.span, traits::SizedReturnType);\n                 }\n "}]}