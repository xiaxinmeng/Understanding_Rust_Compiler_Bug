{"sha": "e74d1cd581411a8d307ad9ee286f6f8fc785e002", "node_id": "C_kwDOAAsO6NoAKGU3NGQxY2Q1ODE0MTFhOGQzMDdhZDllZTI4NmY2ZjhmYzc4NWUwMDI", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-06-12T10:47:09Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-06-12T10:47:09Z"}, "message": "update comment", "tree": {"sha": "35ff6d4b2b9e1f77136aa648612316bd19d61e02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35ff6d4b2b9e1f77136aa648612316bd19d61e02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e74d1cd581411a8d307ad9ee286f6f8fc785e002", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e74d1cd581411a8d307ad9ee286f6f8fc785e002", "html_url": "https://github.com/rust-lang/rust/commit/e74d1cd581411a8d307ad9ee286f6f8fc785e002", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e74d1cd581411a8d307ad9ee286f6f8fc785e002/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f45502d20d771503281e5d1159be6e60a0b9d188", "url": "https://api.github.com/repos/rust-lang/rust/commits/f45502d20d771503281e5d1159be6e60a0b9d188", "html_url": "https://github.com/rust-lang/rust/commit/f45502d20d771503281e5d1159be6e60a0b9d188"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "1b749b9c854cd412e879068ada7225fe9d40f92e", "filename": "compiler/rustc_trait_selection/src/solve/assembly/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e74d1cd581411a8d307ad9ee286f6f8fc785e002/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fassembly%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e74d1cd581411a8d307ad9ee286f6f8fc785e002/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fassembly%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fassembly%2Fmod.rs?ref=e74d1cd581411a8d307ad9ee286f6f8fc785e002", "patch": "@@ -320,7 +320,7 @@ impl<'tcx> EvalCtxt<'_, 'tcx> {\n         candidates\n     }\n \n-    /// If the self type of a goal is a projection, computing the relevant candidates is difficult.\n+    /// If the self type of a goal is an alias, computing the relevant candidates is difficult.\n     ///\n     /// To deal with this, we first try to normalize the self type and add the candidates for the normalized\n     /// self type to the list of candidates in case that succeeds. We also have to consider candidates with the"}]}