{"sha": "a4be1ec140e7c61b8f73834ab722f7b056ad21b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0YmUxZWMxNDBlN2M2MWI4ZjczODM0YWI3MjJmN2IwNTZhZDIxYjk=", "commit": {"author": {"name": "Florian Hartwig", "email": "florian.j.hartwig@gmail.com", "date": "2015-04-16T20:12:13Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-04-17T03:50:16Z"}, "message": "Fix broken links in the docs", "tree": {"sha": "1ffba4c7e35c38c759bb33b21d2c918d100494a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ffba4c7e35c38c759bb33b21d2c918d100494a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4be1ec140e7c61b8f73834ab722f7b056ad21b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4be1ec140e7c61b8f73834ab722f7b056ad21b9", "html_url": "https://github.com/rust-lang/rust/commit/a4be1ec140e7c61b8f73834ab722f7b056ad21b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4be1ec140e7c61b8f73834ab722f7b056ad21b9/comments", "author": {"login": "fhartwig", "id": 83271, "node_id": "MDQ6VXNlcjgzMjcx", "avatar_url": "https://avatars.githubusercontent.com/u/83271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhartwig", "html_url": "https://github.com/fhartwig", "followers_url": "https://api.github.com/users/fhartwig/followers", "following_url": "https://api.github.com/users/fhartwig/following{/other_user}", "gists_url": "https://api.github.com/users/fhartwig/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhartwig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhartwig/subscriptions", "organizations_url": "https://api.github.com/users/fhartwig/orgs", "repos_url": "https://api.github.com/users/fhartwig/repos", "events_url": "https://api.github.com/users/fhartwig/events{/privacy}", "received_events_url": "https://api.github.com/users/fhartwig/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "525a1462b50ca12a3889751652bc8993e7f0b540", "url": "https://api.github.com/repos/rust-lang/rust/commits/525a1462b50ca12a3889751652bc8993e7f0b540", "html_url": "https://github.com/rust-lang/rust/commit/525a1462b50ca12a3889751652bc8993e7f0b540"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "678c3970fe282554dc67fd0e0ddac08e54a0a438", "filename": "src/doc/complement-design-faq.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a4be1ec140e7c61b8f73834ab722f7b056ad21b9/src%2Fdoc%2Fcomplement-design-faq.md", "raw_url": "https://github.com/rust-lang/rust/raw/a4be1ec140e7c61b8f73834ab722f7b056ad21b9/src%2Fdoc%2Fcomplement-design-faq.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fcomplement-design-faq.md?ref=a4be1ec140e7c61b8f73834ab722f7b056ad21b9", "patch": "@@ -56,7 +56,7 @@ Types which are [`Sync`][sync] are thread-safe when multiple shared\n references to them are used concurrently. Types which are not `Sync` are not\n thread-safe, and thus when used in a global require unsafe code to use.\n \n-[sync]: core/kinds/trait.Sync.html\n+[sync]: core/marker/trait.Sync.html\n \n ### If mutable static items that implement `Sync` are safe, why is taking &mut SHARABLE unsafe?\n \n@@ -139,7 +139,7 @@ and explicitly calling the `clone` method. Making user-defined copy operators\n explicit surfaces the underlying complexity, forcing the developer to opt-in\n to potentially expensive operations.\n \n-[copy]: core/kinds/trait.Copy.html\n+[copy]: core/marker/trait.Copy.html\n [clone]: core/clone/trait.Clone.html\n \n ## No move constructors"}, {"sha": "e3de8eb30be916336b8739545a01783d6bceec18", "filename": "src/doc/trpl/closures.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a4be1ec140e7c61b8f73834ab722f7b056ad21b9/src%2Fdoc%2Ftrpl%2Fclosures.md", "raw_url": "https://github.com/rust-lang/rust/raw/a4be1ec140e7c61b8f73834ab722f7b056ad21b9/src%2Fdoc%2Ftrpl%2Fclosures.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fclosures.md?ref=a4be1ec140e7c61b8f73834ab722f7b056ad21b9", "patch": "@@ -205,11 +205,11 @@ you tons of control over what your code does, and closures are no different.\n \n Rust's implementation of closures is a bit different than other languages. They\n are effectively syntax sugar for traits. You'll want to make sure to have read\n-the [traits chapter][traits] before this one, as well as the chapter on [static\n-and dynamic dispatch][dispatch], which talks about trait objects.\n+the [traits chapter][traits] before this one, as well as the chapter on [trait\n+objects][trait-objects].\n \n [traits]: traits.html\n-[dispatch]: static-and-dynamic-dispatch.html\n+[trait-objects]: trait-objects.html\n \n Got all that? Good.\n "}, {"sha": "685b3e5c546ddfb097edbf553ed2ae9e0e14a473", "filename": "src/libcore/raw.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a4be1ec140e7c61b8f73834ab722f7b056ad21b9/src%2Flibcore%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4be1ec140e7c61b8f73834ab722f7b056ad21b9/src%2Flibcore%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fraw.rs?ref=a4be1ec140e7c61b8f73834ab722f7b056ad21b9", "patch": "@@ -71,11 +71,11 @@ impl<T> Clone for Slice<T> {\n /// The representation of a trait object like `&SomeTrait`.\n ///\n /// This struct has the same layout as types like `&SomeTrait` and\n-/// `Box<AnotherTrait>`. The [Static and Dynamic Dispatch chapter of the\n+/// `Box<AnotherTrait>`. The [Trait Objects chapter of the\n /// Book][moreinfo] contains more details about the precise nature of\n /// these internals.\n ///\n-/// [moreinfo]: ../../book/static-and-dynamic-dispatch.html#representation\n+/// [moreinfo]: ../../book/trait-objects.html#representation\n ///\n /// `TraitObject` is guaranteed to match layouts, but it is not the\n /// type of trait objects (e.g. the fields are not directly accessible"}, {"sha": "26bc653b26fa44ecae8de8cf98bd0bc698bf74a2", "filename": "src/libcore/result.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a4be1ec140e7c61b8f73834ab722f7b056ad21b9/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4be1ec140e7c61b8f73834ab722f7b056ad21b9/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=a4be1ec140e7c61b8f73834ab722f7b056ad21b9", "patch": "@@ -86,12 +86,12 @@\n //! useful value.\n //!\n //! Consider the `write_all` method defined for I/O types\n-//! by the [`Write`](../io/trait.Write.html) trait:\n+//! by the [`Write`](../../std/io/trait.Write.html) trait:\n //!\n //! ```\n //! use std::io;\n //!\n-//! trait Writer {\n+//! trait Write {\n //!     fn write_all(&mut self, bytes: &[u8]) -> Result<(), io::Error>;\n //! }\n //! ```"}, {"sha": "4a85e1893f0a136e3dc2fb4de39eacdbb006723e", "filename": "src/librustc/plugin/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a4be1ec140e7c61b8f73834ab722f7b056ad21b9/src%2Flibrustc%2Fplugin%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4be1ec140e7c61b8f73834ab722f7b056ad21b9/src%2Flibrustc%2Fplugin%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fplugin%2Fmod.rs?ref=a4be1ec140e7c61b8f73834ab722f7b056ad21b9", "patch": "@@ -47,7 +47,7 @@\n //! #![plugin(myplugin)]\n //! ```\n //!\n-//! See the [Plugins Chapter](../../book/plugins.html) of the book\n+//! See the [Plugins Chapter](../../book/compiler-plugins.html) of the book\n //! for more examples.\n \n pub use self::registry::Registry;"}]}