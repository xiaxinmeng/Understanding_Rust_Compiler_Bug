{"sha": "d130d8798ded736a697a92fa68ab19e7e32c1608", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxMzBkODc5OGRlZDczNmE2OTdhOTJmYTY4YWIxOWU3ZTMyYzE2MDg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-03-25T20:51:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-03-25T20:51:52Z"}, "message": "auto merge of #12961 : cmr/rust/rustdoc-impls, r=alexcrichton\n\nRendered form available at http://docs.octayn.net/doc/\n\nThis moves derived impls to the bottom of the list, separate from the rest,\nand collapses default methods that aren't overridden into an expandible\naccordion.", "tree": {"sha": "64a8b9db73fba111f53e1be8fbd8bd1bee495c06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64a8b9db73fba111f53e1be8fbd8bd1bee495c06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d130d8798ded736a697a92fa68ab19e7e32c1608", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d130d8798ded736a697a92fa68ab19e7e32c1608", "html_url": "https://github.com/rust-lang/rust/commit/d130d8798ded736a697a92fa68ab19e7e32c1608", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d130d8798ded736a697a92fa68ab19e7e32c1608/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de4473201a85bf8f5522f7def903a068f8a7d12a", "url": "https://api.github.com/repos/rust-lang/rust/commits/de4473201a85bf8f5522f7def903a068f8a7d12a", "html_url": "https://github.com/rust-lang/rust/commit/de4473201a85bf8f5522f7def903a068f8a7d12a"}, {"sha": "1f937fa79e6f6a4d010b9d22b1370214c952fbfa", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f937fa79e6f6a4d010b9d22b1370214c952fbfa", "html_url": "https://github.com/rust-lang/rust/commit/1f937fa79e6f6a4d010b9d22b1370214c952fbfa"}], "stats": {"total": 97, "additions": 65, "deletions": 32}, "files": [{"sha": "0bc3da15462ad483747d47380da7f74f1ccf35e6", "filename": "src/librustdoc/clean.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d130d8798ded736a697a92fa68ab19e7e32c1608/src%2Flibrustdoc%2Fclean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d130d8798ded736a697a92fa68ab19e7e32c1608/src%2Flibrustdoc%2Fclean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean.rs?ref=d130d8798ded736a697a92fa68ab19e7e32c1608", "patch": "@@ -174,12 +174,18 @@ pub enum ItemEnum {\n     StaticItem(Static),\n     TraitItem(Trait),\n     ImplItem(Impl),\n+    /// `use` and `extern crate`\n     ViewItemItem(ViewItem),\n+    /// A method signature only. Used for required methods in traits (ie,\n+    /// non-default-methods).\n     TyMethodItem(TyMethod),\n+    /// A method with a body.\n     MethodItem(Method),\n     StructFieldItem(StructField),\n     VariantItem(Variant),\n+    /// `fn`s from an extern block\n     ForeignFunctionItem(Function),\n+    /// `static`s from an extern block\n     ForeignStaticItem(Static),\n     MacroItem(Macro),\n }\n@@ -1014,11 +1020,23 @@ pub struct Impl {\n     generics: Generics,\n     trait_: Option<Type>,\n     for_: Type,\n-    methods: Vec<Item> ,\n+    methods: Vec<Item>,\n+    derived: bool,\n }\n \n impl Clean<Item> for doctree::Impl {\n     fn clean(&self) -> Item {\n+        let mut derived = false;\n+        for attr in self.attrs.iter() {\n+            match attr.node.value.node {\n+                ast::MetaWord(ref s) => {\n+                    if s.get() == \"automatically_derived\" {\n+                        derived = true;\n+                    }\n+                }\n+                _ => {}\n+            }\n+        }\n         Item {\n             name: None,\n             attrs: self.attrs.clean(),\n@@ -1030,6 +1048,7 @@ impl Clean<Item> for doctree::Impl {\n                 trait_: self.trait_.clean(),\n                 for_: self.for_.clean(),\n                 methods: self.methods.clean(),\n+                derived: derived,\n             }),\n         }\n     }"}, {"sha": "095f27d25b350baf460501d9d8fea9d4f06e9e4b", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/d130d8798ded736a697a92fa68ab19e7e32c1608/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d130d8798ded736a697a92fa68ab19e7e32c1608/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=d130d8798ded736a697a92fa68ab19e7e32c1608", "patch": "@@ -29,53 +29,53 @@ pub fn render<T: fmt::Show, S: fmt::Show>(\n     -> fmt::Result\n {\n     write!(dst,\n-\"<!DOCTYPE html>\n-<html lang=\\\"en\\\">\n+r##\"<!DOCTYPE html>\n+<html lang=\"en\">\n <head>\n-    <meta charset=\\\"utf-8\\\" />\n+    <meta charset=\"utf-8\" />\n     <title>{title}</title>\n \n     <link href='http://fonts.googleapis.com/css?family=Oswald:700|Inconsolata:400,700'\n           rel='stylesheet' type='text/css'>\n-    <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{root_path}main.css\\\">\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"{root_path}main.css\">\n \n-    {favicon, select, none{} other{<link rel=\\\"shortcut icon\\\" href=\\\"#\\\" />}}\n+    {favicon, select, none{} other{<link rel=\"shortcut icon\" href=\"\\#\" />}}\n </head>\n <body>\n     <!--[if lte IE 8]>\n-    <div class=\\\"warning\\\">\n+    <div class=\"warning\">\n         This old browser is unsupported and will most likely display funky\n         things.\n     </div>\n     <![endif]-->\n \n-    <section class=\\\"sidebar\\\">\n+    <section class=\"sidebar\">\n         {logo, select, none{} other{\n-            <a href='{root_path}{krate}/index.html'><img src='#' alt=''/></a>\n+            <a href='{root_path}{krate}/index.html'><img src='\\#' alt=''/></a>\n         }}\n \n         {sidebar}\n     </section>\n \n-    <nav class=\\\"sub\\\">\n-        <form class=\\\"search-form js-only\\\">\n-            <button class=\\\"do-search\\\">Search</button>\n-            <div class=\\\"search-container\\\">\n-                <input class=\\\"search-input\\\" name=\\\"search\\\"\n-                       autocomplete=\\\"off\\\"\n-                       placeholder=\\\"Search documentation...\\\"\n-                       type=\\\"search\\\" />\n+    <nav class=\"sub\">\n+        <form class=\"search-form js-only\">\n+            <button class=\"do-search\">Search</button>\n+            <div class=\"search-container\">\n+                <input class=\"search-input\" name=\"search\"\n+                       autocomplete=\"off\"\n+                       placeholder=\"Search documentation...\"\n+                       type=\"search\" />\n             </div>\n         </form>\n     </nav>\n \n-    <section id='main' class=\\\"content {ty}\\\">{content}</section>\n-    <section id='search' class=\\\"content hidden\\\"></section>\n+    <section id='main' class=\"content {ty}\">{content}</section>\n+    <section id='search' class=\"content hidden\"></section>\n \n-    <section class=\\\"footer\\\"></section>\n+    <section class=\"footer\"></section>\n \n-    <div id=\\\"help\\\" class=\\\"hidden\\\">\n-        <div class=\\\"shortcuts\\\">\n+    <div id=\"help\" class=\"hidden\">\n+        <div class=\"shortcuts\">\n             <h1>Keyboard shortcuts</h1>\n             <dl>\n                 <dt>?</dt>\n@@ -86,11 +86,11 @@ pub fn render<T: fmt::Show, S: fmt::Show>(\n                 <dd>Move up in search results</dd>\n                 <dt>&darr;</dt>\n                 <dd>Move down in search results</dd>\n-                <dt>&\\\\#9166;</dt>\n+                <dt>&\\#9166;</dt>\n                 <dd>Go to active search result</dd>\n             </dl>\n         </div>\n-        <div class=\\\"infos\\\">\n+        <div class=\"infos\">\n             <h1>Search tricks</h1>\n             <p>\n                 Prefix searches with a type followed by a colon (e.g.\n@@ -106,15 +106,15 @@ pub fn render<T: fmt::Show, S: fmt::Show>(\n     </div>\n \n     <script>\n-        var rootPath = \\\"{root_path}\\\";\n-        var currentCrate = \\\"{krate}\\\";\n+        var rootPath = \"{root_path}\";\n+        var currentCrate = \"{krate}\";\n     </script>\n-    <script src=\\\"{root_path}jquery.js\\\"></script>\n-    <script src=\\\"{root_path}main.js\\\"></script>\n-    <script async src=\\\"{root_path}search-index.js\\\"></script>\n+    <script src=\"{root_path}jquery.js\"></script>\n+    <script src=\"{root_path}main.js\"></script>\n+    <script async src=\"{root_path}search-index.js\"></script>\n </body>\n </html>\n-\",\n+\"##,\n     content   = *t,\n     root_path = page.root_path,\n     ty        = page.ty,"}, {"sha": "3629692e5b0338b2c4633c2f5094794aa14cd182", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d130d8798ded736a697a92fa68ab19e7e32c1608/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d130d8798ded736a697a92fa68ab19e7e32c1608/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=d130d8798ded736a697a92fa68ab19e7e32c1608", "patch": "@@ -1517,8 +1517,22 @@ fn render_methods(w: &mut Writer, it: &clean::Item) -> fmt::Result {\n                 if traits.len() > 0 {\n                     try!(write!(w, \"<h2 id='implementations'>Trait \\\n                                       Implementations</h2>\"));\n-                    for &(ref i, ref dox) in traits.move_iter() {\n-                        try!(render_impl(w, i, dox));\n+                    let mut any_derived = false;\n+                    for & &(ref i, ref dox) in traits.iter() {\n+                        if !i.derived {\n+                            try!(render_impl(w, i, dox));\n+                        } else {\n+                            any_derived = true;\n+                        }\n+                    }\n+                    if any_derived {\n+                        try!(write!(w, \"<h3 id='derived_implementations'>Derived Implementations \\\n+                                    </h3>\"));\n+                        for &(ref i, ref dox) in traits.move_iter() {\n+                            if i.derived {\n+                                try!(render_impl(w, i, dox));\n+                            }\n+                        }\n                     }\n                 }\n             }"}]}