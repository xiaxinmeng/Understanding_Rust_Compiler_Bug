{"sha": "adc8cd3e62a2d23cdc20e2d3b282652a8c1900b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkYzhjZDNlNjJhMmQyM2NkYzIwZTJkM2IyODI2NTJhOGMxOTAwYjM=", "commit": {"author": {"name": "Mukund Lakshman", "email": "yaymukund@gmail.com", "date": "2021-08-19T20:58:17Z"}, "committer": {"name": "Mukund Lakshman", "email": "yaymukund@gmail.com", "date": "2021-08-20T10:58:18Z"}, "message": "Add cherry-pick.sh convenience script.", "tree": {"sha": "9cba4e7f24eb5d6e1fe5d78f5e435bf3e42466f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cba4e7f24eb5d6e1fe5d78f5e435bf3e42466f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adc8cd3e62a2d23cdc20e2d3b282652a8c1900b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adc8cd3e62a2d23cdc20e2d3b282652a8c1900b3", "html_url": "https://github.com/rust-lang/rust/commit/adc8cd3e62a2d23cdc20e2d3b282652a8c1900b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adc8cd3e62a2d23cdc20e2d3b282652a8c1900b3/comments", "author": null, "committer": null, "parents": [{"sha": "700b64e100b79fc2d7c1fdf9b2c97b3fcbdab092", "url": "https://api.github.com/repos/rust-lang/rust/commits/700b64e100b79fc2d7c1fdf9b2c97b3fcbdab092", "html_url": "https://github.com/rust-lang/rust/commit/700b64e100b79fc2d7c1fdf9b2c97b3fcbdab092"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "90539a96389b05f71de34e07370a09af0295a7db", "filename": "src/tools/cherry-pick.sh", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/adc8cd3e62a2d23cdc20e2d3b282652a8c1900b3/src%2Ftools%2Fcherry-pick.sh", "raw_url": "https://github.com/rust-lang/rust/raw/adc8cd3e62a2d23cdc20e2d3b282652a8c1900b3/src%2Ftools%2Fcherry-pick.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcherry-pick.sh?ref=adc8cd3e62a2d23cdc20e2d3b282652a8c1900b3", "patch": "@@ -0,0 +1,34 @@\n+#!/bin/bash\n+set -euo pipefail\n+IFS=$'\\n\\t'\n+\n+print_error() {\n+  echo \"Error: \\`$1\\` is not a valid commit. To debug, run:\"\n+  echo\n+  echo \"    git rev-parse --verify $1\"\n+  echo\n+}\n+\n+full_sha() {\n+  git rev-parse \\\n+    --verify \\\n+    --quiet \\\n+    \"$1^{object}\" || print_error $1\n+}\n+\n+commit_message_with_backport_note() {\n+  message=$(git log --format=%B -n 1 $1)\n+  echo $message | awk \"NR==1{print; print \\\"\\n(backport-of: $1)\\\"} NR!=1\"\n+}\n+\n+cherry_pick_commit() {\n+  sha=$(full_sha $1)\n+  git cherry-pick $sha > /dev/null\n+  git commit \\\n+    --amend \\\n+    --file <(commit_message_with_backport_note $sha)\n+}\n+\n+for arg ; do\n+  cherry_pick_commit $arg\n+done"}]}