{"sha": "965161714bd770d2a86d5864556e3a93d2ad9bc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2NTE2MTcxNGJkNzcwZDJhODZkNTg2NDU1NmUzYTkzZDJhZDliYzg=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-11-19T02:31:40Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-11-19T03:27:16Z"}, "message": "Delay an `is_local_ever_initialized` call.\n\nThis commit moves the call after a `return` that almost always runs. It\nspeeds up the `unicode_normalization` benchmark by about 2%.", "tree": {"sha": "22772617d4e77b7b26c75f317d681e11e078bf52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22772617d4e77b7b26c75f317d681e11e078bf52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/965161714bd770d2a86d5864556e3a93d2ad9bc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/965161714bd770d2a86d5864556e3a93d2ad9bc8", "html_url": "https://github.com/rust-lang/rust/commit/965161714bd770d2a86d5864556e3a93d2ad9bc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/965161714bd770d2a86d5864556e3a93d2ad9bc8/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f0c640e0ee5a9ad365e78e3c62239b3d65b7045", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f0c640e0ee5a9ad365e78e3c62239b3d65b7045", "html_url": "https://github.com/rust-lang/rust/commit/0f0c640e0ee5a9ad365e78e3c62239b3d65b7045"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "7ae27841d9cd69e30c594202f30e59f098e0a257", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/965161714bd770d2a86d5864556e3a93d2ad9bc8/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/965161714bd770d2a86d5864556e3a93d2ad9bc8/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=965161714bd770d2a86d5864556e3a93d2ad9bc8", "patch": "@@ -1883,16 +1883,6 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n         let error_access;\n         let the_place_err;\n \n-        // rust-lang/rust#21232, #54986: during period where we reject\n-        // partial initialization, do not complain about mutability\n-        // errors except for actual mutation (as opposed to an attempt\n-        // to do a partial initialization).\n-        let previously_initialized = if let PlaceBase::Local(local) = place.base {\n-            self.is_local_ever_initialized(local, flow_state).is_some()\n-        } else {\n-            true\n-        };\n-\n         match kind {\n             Reservation(WriteKind::MutableBorrow(borrow_kind @ BorrowKind::Unique))\n             | Reservation(WriteKind::MutableBorrow(borrow_kind @ BorrowKind::Mut { .. }))\n@@ -1966,8 +1956,18 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n             }\n         }\n \n+        // rust-lang/rust#21232, #54986: during period where we reject\n+        // partial initialization, do not complain about mutability\n+        // errors except for actual mutation (as opposed to an attempt\n+        // to do a partial initialization).\n+        let previously_initialized = if let PlaceBase::Local(local) = place.base {\n+            self.is_local_ever_initialized(local, flow_state).is_some()\n+        } else {\n+            true\n+        };\n+\n         // at this point, we have set up the error reporting state.\n-        return if previously_initialized {\n+        if previously_initialized {\n             self.report_mutability_error(\n                 place,\n                 span,\n@@ -1978,7 +1978,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n             true\n         } else {\n             false\n-        };\n+        }\n     }\n \n     fn is_local_ever_initialized("}]}