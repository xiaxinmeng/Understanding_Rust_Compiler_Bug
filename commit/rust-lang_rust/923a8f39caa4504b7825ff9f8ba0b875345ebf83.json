{"sha": "923a8f39caa4504b7825ff9f8ba0b875345ebf83", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyM2E4ZjM5Y2FhNDUwNGI3ODI1ZmY5ZjhiYTBiODc1MzQ1ZWJmODM=", "commit": {"author": {"name": "Herman J. Radtke III", "email": "hermanradtke@gmail.com", "date": "2014-05-02T07:02:15Z"}, "committer": {"name": "Herman J. Radtke III", "email": "hermanradtke@gmail.com", "date": "2014-05-02T07:02:15Z"}, "message": "Implement ToJson for Vec<T>\n\nNow that ~[T] is obsolete, we need to allow to_json() to work for\nvectors.", "tree": {"sha": "af2004eedd9c837634b3462b6b192bb921d746f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af2004eedd9c837634b3462b6b192bb921d746f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/923a8f39caa4504b7825ff9f8ba0b875345ebf83", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/923a8f39caa4504b7825ff9f8ba0b875345ebf83", "html_url": "https://github.com/rust-lang/rust/commit/923a8f39caa4504b7825ff9f8ba0b875345ebf83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/923a8f39caa4504b7825ff9f8ba0b875345ebf83/comments", "author": {"login": "hjr3", "id": 33318, "node_id": "MDQ6VXNlcjMzMzE4", "avatar_url": "https://avatars.githubusercontent.com/u/33318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjr3", "html_url": "https://github.com/hjr3", "followers_url": "https://api.github.com/users/hjr3/followers", "following_url": "https://api.github.com/users/hjr3/following{/other_user}", "gists_url": "https://api.github.com/users/hjr3/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjr3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjr3/subscriptions", "organizations_url": "https://api.github.com/users/hjr3/orgs", "repos_url": "https://api.github.com/users/hjr3/repos", "events_url": "https://api.github.com/users/hjr3/events{/privacy}", "received_events_url": "https://api.github.com/users/hjr3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjr3", "id": 33318, "node_id": "MDQ6VXNlcjMzMzE4", "avatar_url": "https://avatars.githubusercontent.com/u/33318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjr3", "html_url": "https://github.com/hjr3", "followers_url": "https://api.github.com/users/hjr3/followers", "following_url": "https://api.github.com/users/hjr3/following{/other_user}", "gists_url": "https://api.github.com/users/hjr3/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjr3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjr3/subscriptions", "organizations_url": "https://api.github.com/users/hjr3/orgs", "repos_url": "https://api.github.com/users/hjr3/repos", "events_url": "https://api.github.com/users/hjr3/events{/privacy}", "received_events_url": "https://api.github.com/users/hjr3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "adcbf539550eab5ef0b351b1d198d10acecf5301", "url": "https://api.github.com/repos/rust-lang/rust/commits/adcbf539550eab5ef0b351b1d198d10acecf5301", "html_url": "https://github.com/rust-lang/rust/commit/adcbf539550eab5ef0b351b1d198d10acecf5301"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "6e7fab2144282a1a2bb4625892a27d355cafd2b0", "filename": "src/libserialize/json.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/923a8f39caa4504b7825ff9f8ba0b875345ebf83/src%2Flibserialize%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/923a8f39caa4504b7825ff9f8ba0b875345ebf83/src%2Flibserialize%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fjson.rs?ref=923a8f39caa4504b7825ff9f8ba0b875345ebf83", "patch": "@@ -2233,6 +2233,10 @@ impl<A:ToJson> ToJson for ~[A] {\n     fn to_json(&self) -> Json { List(self.iter().map(|elt| elt.to_json()).collect()) }\n }\n \n+impl<A:ToJson> ToJson for Vec<A> {\n+    fn to_json(&self) -> Json { List(self.iter().map(|elt| elt.to_json()).collect()) }\n+}\n+\n impl<A:ToJson> ToJson for TreeMap<~str, A> {\n     fn to_json(&self) -> Json {\n         let mut d = TreeMap::new();"}]}