{"sha": "2be44ceaa207f6a29f2c10399b524e8700ec173d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiZTQ0Y2VhYTIwN2Y2YTI5ZjJjMTAzOTliNTI0ZTg3MDBlYzE3M2Q=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-02-14T08:14:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-02-14T08:14:29Z"}, "message": "Rollup merge of #47846 - roblabla:bugfix-ocaml, r=kennytm\n\nWork around LLVM OCAML binding installation failure\n\nHello,\n\nI have OCaml installed on my machine, and compiling rust systematically fails when LLVM attempts installing the OCaml bindings in `/usr/lib/ocaml`, which is write-protected. Here are the logs: https://gist.github.com/roblabla/3f147914c5df627c9d97ab311ba133ad\n\nSome digging around the issue reveals:\n\n- The code that finds if OCaml is installed, and sets the bindings to be compiled/installed: https://github.com/llvm-mirror/llvm/blob/b24a45d2e9f4fc10c3f9e16172104910b38637f2/cmake/config-ix.cmake#L612\n- https://github.com/llvm-mirror/llvm/blob/b24a45d2e9f4fc10c3f9e16172104910b38637f2/bindings/ocaml/llvm/CMakeLists.txt Some code that does the installation.\n\nThe problem seems to be that `LLVM_OCAML_INSTALL_PATH` is set to `OCAML_STDLIB_PATH` by default, which is in `/usr/lib/ocaml`, instead of the prefix.\n\nThis PR \"fixes\" the issue by setting `LLVM_OCAML_INSTALL_PATH` to `usr/lib/ocaml`. I haven't found a way to make LLVM not build OCaml, which would probably be a superior fix.", "tree": {"sha": "e18a53329d14e88330f13212fc0f4b6ee082c247", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e18a53329d14e88330f13212fc0f4b6ee082c247"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2be44ceaa207f6a29f2c10399b524e8700ec173d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJag+/lCRBK7hj4Ov3rIwAAdHIIAEBDfxwAJRuQ3dhRk4a70AQ6\nx6pzxr+34lNQiAUDmbMk/8BJo5XxdDo82B/ySsRbjnpJkKjV1yREtP35JYyjWYQw\nDFLWrH9rkgocTDi/Fq8AMITsp+VEAnScMO0R3Q+JuRo7hb30NtUOeB70Ilr/0+hH\n8bfzjG8np+vR+41JUe8achNFeXRPRN35rQI0pCV0BWyuG97woFuAM8MJaeEpGw9k\n07ojgcamOxk1GWDzvAh8eBvvQqTbMtBvE4RGRIkksuEdYEmhGURADbi3XxCWy8oJ\nWaURJjg5OmhaWe95mxQy17qj8VBWj5BIGxm1q+wnBnmJLXoS+Vxt2MmMS13Evt4=\n=T4GY\n-----END PGP SIGNATURE-----\n", "payload": "tree e18a53329d14e88330f13212fc0f4b6ee082c247\nparent c89976e55621a43b573576c3ed0083842e4049d5\nparent 3c01dea03e1b4ffbcb665a68bcf228c02497ecdc\nauthor kennytm <kennytm@gmail.com> 1518596069 +0800\ncommitter GitHub <noreply@github.com> 1518596069 +0800\n\nRollup merge of #47846 - roblabla:bugfix-ocaml, r=kennytm\n\nWork around LLVM OCAML binding installation failure\n\nHello,\n\nI have OCaml installed on my machine, and compiling rust systematically fails when LLVM attempts installing the OCaml bindings in `/usr/lib/ocaml`, which is write-protected. Here are the logs: https://gist.github.com/roblabla/3f147914c5df627c9d97ab311ba133ad\n\nSome digging around the issue reveals:\n\n- The code that finds if OCaml is installed, and sets the bindings to be compiled/installed: https://github.com/llvm-mirror/llvm/blob/b24a45d2e9f4fc10c3f9e16172104910b38637f2/cmake/config-ix.cmake#L612\n- https://github.com/llvm-mirror/llvm/blob/b24a45d2e9f4fc10c3f9e16172104910b38637f2/bindings/ocaml/llvm/CMakeLists.txt Some code that does the installation.\n\nThe problem seems to be that `LLVM_OCAML_INSTALL_PATH` is set to `OCAML_STDLIB_PATH` by default, which is in `/usr/lib/ocaml`, instead of the prefix.\n\nThis PR \"fixes\" the issue by setting `LLVM_OCAML_INSTALL_PATH` to `usr/lib/ocaml`. I haven't found a way to make LLVM not build OCaml, which would probably be a superior fix.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2be44ceaa207f6a29f2c10399b524e8700ec173d", "html_url": "https://github.com/rust-lang/rust/commit/2be44ceaa207f6a29f2c10399b524e8700ec173d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2be44ceaa207f6a29f2c10399b524e8700ec173d/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c89976e55621a43b573576c3ed0083842e4049d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c89976e55621a43b573576c3ed0083842e4049d5", "html_url": "https://github.com/rust-lang/rust/commit/c89976e55621a43b573576c3ed0083842e4049d5"}, {"sha": "3c01dea03e1b4ffbcb665a68bcf228c02497ecdc", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c01dea03e1b4ffbcb665a68bcf228c02497ecdc", "html_url": "https://github.com/rust-lang/rust/commit/3c01dea03e1b4ffbcb665a68bcf228c02497ecdc"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "5a4791833fe0d510569f5c588394718fe257f3fa", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2be44ceaa207f6a29f2c10399b524e8700ec173d/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2be44ceaa207f6a29f2c10399b524e8700ec173d/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=2be44ceaa207f6a29f2c10399b524e8700ec173d", "patch": "@@ -159,6 +159,14 @@ impl Step for Llvm {\n            .define(\"LLVM_TARGET_ARCH\", target.split('-').next().unwrap())\n            .define(\"LLVM_DEFAULT_TARGET_TRIPLE\", target);\n \n+        // By default, LLVM will automatically find OCaml and, if it finds it,\n+        // install the LLVM bindings in LLVM_OCAML_INSTALL_PATH, which defaults\n+        // to /usr/bin/ocaml.\n+        // This causes problem for non-root builds of Rust. Side-step the issue\n+        // by setting LLVM_OCAML_INSTALL_PATH to a relative path, so it installs\n+        // in the prefix.\n+        cfg.define(\"LLVM_OCAML_INSTALL_PATH\",\n+            env::var_os(\"LLVM_OCAML_INSTALL_PATH\").unwrap_or_else(|| \"usr/lib/ocaml\".into()));\n \n         // This setting makes the LLVM tools link to the dynamic LLVM library,\n         // which saves both memory during parallel links and overall disk space"}]}