{"sha": "84e19930e341a9b68d55f1925c6c8ed43dadac49", "node_id": "C_kwDOAAsO6NoAKDg0ZTE5OTMwZTM0MWE5YjY4ZDU1ZjE5MjVjNmM4ZWQ0M2RhZGFjNDk", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-04-21T20:44:48Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-06-02T17:24:24Z"}, "message": "Bless tests.", "tree": {"sha": "bbf78767183b42875b7216857e4873de4671eac5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbf78767183b42875b7216857e4873de4671eac5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84e19930e341a9b68d55f1925c6c8ed43dadac49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84e19930e341a9b68d55f1925c6c8ed43dadac49", "html_url": "https://github.com/rust-lang/rust/commit/84e19930e341a9b68d55f1925c6c8ed43dadac49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84e19930e341a9b68d55f1925c6c8ed43dadac49/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "257d8fce3e38177c3cc357f1ce23db87b69e1682", "url": "https://api.github.com/repos/rust-lang/rust/commits/257d8fce3e38177c3cc357f1ce23db87b69e1682", "html_url": "https://github.com/rust-lang/rust/commit/257d8fce3e38177c3cc357f1ce23db87b69e1682"}], "stats": {"total": 267, "additions": 0, "deletions": 267}, "files": [{"sha": "741ea0c1ca8bc51bc91fe97636016e0880fa442b", "filename": "src/test/ui/loops/loops-reject-labels-shadowing-lifetimes.rs", "status": "removed", "additions": 0, "deletions": 109, "changes": 109, "blob_url": "https://github.com/rust-lang/rust/blob/257d8fce3e38177c3cc357f1ce23db87b69e1682/src%2Ftest%2Fui%2Floops%2Floops-reject-labels-shadowing-lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/257d8fce3e38177c3cc357f1ce23db87b69e1682/src%2Ftest%2Fui%2Floops%2Floops-reject-labels-shadowing-lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Floops%2Floops-reject-labels-shadowing-lifetimes.rs?ref=257d8fce3e38177c3cc357f1ce23db87b69e1682", "patch": "@@ -1,109 +0,0 @@\n-// Issue #21633: reject duplicate loop labels in function bodies.\n-// This is testing interaction between lifetime-params and labels.\n-\n-// check-pass\n-\n-#![allow(dead_code, unused_variables)]\n-\n-fn foo() {\n-    fn foo<'a>() {\n-        'a: loop { break 'a; }\n-        //~^ WARN label name `'a` shadows a lifetime name that is already in scope\n-    }\n-\n-    struct Struct<'b, 'c> { _f: &'b i8, _g: &'c i8 }\n-    enum Enum<'d, 'e> { A(&'d i8), B(&'e i8) }\n-\n-    impl<'d, 'e> Struct<'d, 'e> {\n-        fn meth_okay() {\n-            'a: loop { break 'a; }\n-            'b: loop { break 'b; }\n-            'c: loop { break 'c; }\n-        }\n-    }\n-\n-    impl <'d, 'e> Enum<'d, 'e> {\n-        fn meth_okay() {\n-            'a: loop { break 'a; }\n-            'b: loop { break 'b; }\n-            'c: loop { break 'c; }\n-        }\n-    }\n-\n-    impl<'bad, 'c> Struct<'bad, 'c> {\n-        fn meth_bad(&self) {\n-            'bad: loop { break 'bad; }\n-            //~^ WARN label name `'bad` shadows a lifetime name that is already in scope\n-        }\n-    }\n-\n-    impl<'b, 'bad> Struct<'b, 'bad> {\n-        fn meth_bad2(&self) {\n-            'bad: loop { break 'bad; }\n-            //~^ WARN label name `'bad` shadows a lifetime name that is already in scope\n-        }\n-    }\n-\n-    impl<'b, 'c> Struct<'b, 'c> {\n-        fn meth_bad3<'bad>(x: &'bad i8) {\n-            'bad: loop { break 'bad; }\n-            //~^ WARN label name `'bad` shadows a lifetime name that is already in scope\n-        }\n-\n-        fn meth_bad4<'a,'bad>(x: &'a i8, y: &'bad i8) {\n-            'bad: loop { break 'bad; }\n-            //~^ WARN label name `'bad` shadows a lifetime name that is already in scope\n-        }\n-    }\n-\n-    impl <'bad, 'e> Enum<'bad, 'e> {\n-        fn meth_bad(&self) {\n-            'bad: loop { break 'bad; }\n-            //~^ WARN label name `'bad` shadows a lifetime name that is already in scope\n-        }\n-    }\n-    impl <'d, 'bad> Enum<'d, 'bad> {\n-        fn meth_bad2(&self) {\n-            'bad: loop { break 'bad; }\n-            //~^ WARN label name `'bad` shadows a lifetime name that is already in scope\n-        }\n-    }\n-    impl <'d, 'e> Enum<'d, 'e> {\n-        fn meth_bad3<'bad>(x: &'bad i8) {\n-            'bad: loop { break 'bad; }\n-            //~^ WARN label name `'bad` shadows a lifetime name that is already in scope\n-        }\n-\n-        fn meth_bad4<'a,'bad>(x: &'bad i8) {\n-            'bad: loop { break 'bad; }\n-            //~^ WARN label name `'bad` shadows a lifetime name that is already in scope\n-        }\n-    }\n-\n-    trait HasDefaultMethod1<'bad> {\n-        fn meth_okay() {\n-            'c: loop { break 'c; }\n-        }\n-        fn meth_bad(&self) {\n-            'bad: loop { break 'bad; }\n-            //~^ WARN label name `'bad` shadows a lifetime name that is already in scope\n-        }\n-    }\n-    trait HasDefaultMethod2<'a,'bad> {\n-        fn meth_bad(&self) {\n-            'bad: loop { break 'bad; }\n-            //~^ WARN label name `'bad` shadows a lifetime name that is already in scope\n-        }\n-    }\n-    trait HasDefaultMethod3<'a,'b> {\n-        fn meth_bad<'bad>(&self) {\n-            'bad: loop { break 'bad; }\n-            //~^ WARN label name `'bad` shadows a lifetime name that is already in scope\n-        }\n-    }\n-}\n-\n-\n-pub fn main() {\n-    foo();\n-}"}, {"sha": "0d96c0b3a35b63fc5cdbaa938e47d9d50e3cd139", "filename": "src/test/ui/loops/loops-reject-labels-shadowing-lifetimes.stderr", "status": "removed", "additions": 0, "deletions": 104, "changes": 104, "blob_url": "https://github.com/rust-lang/rust/blob/257d8fce3e38177c3cc357f1ce23db87b69e1682/src%2Ftest%2Fui%2Floops%2Floops-reject-labels-shadowing-lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/257d8fce3e38177c3cc357f1ce23db87b69e1682/src%2Ftest%2Fui%2Floops%2Floops-reject-labels-shadowing-lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Floops%2Floops-reject-labels-shadowing-lifetimes.stderr?ref=257d8fce3e38177c3cc357f1ce23db87b69e1682", "patch": "@@ -1,104 +0,0 @@\n-warning: label name `'a` shadows a lifetime name that is already in scope\n-  --> $DIR/loops-reject-labels-shadowing-lifetimes.rs:10:9\n-   |\n-LL |     fn foo<'a>() {\n-   |            -- first declared here\n-LL |         'a: loop { break 'a; }\n-   |         ^^ lifetime `'a` already in scope\n-\n-warning: label name `'bad` shadows a lifetime name that is already in scope\n-  --> $DIR/loops-reject-labels-shadowing-lifetimes.rs:35:13\n-   |\n-LL |     impl<'bad, 'c> Struct<'bad, 'c> {\n-   |          ---- first declared here\n-LL |         fn meth_bad(&self) {\n-LL |             'bad: loop { break 'bad; }\n-   |             ^^^^ lifetime `'bad` already in scope\n-\n-warning: label name `'bad` shadows a lifetime name that is already in scope\n-  --> $DIR/loops-reject-labels-shadowing-lifetimes.rs:42:13\n-   |\n-LL |     impl<'b, 'bad> Struct<'b, 'bad> {\n-   |              ---- first declared here\n-LL |         fn meth_bad2(&self) {\n-LL |             'bad: loop { break 'bad; }\n-   |             ^^^^ lifetime `'bad` already in scope\n-\n-warning: label name `'bad` shadows a lifetime name that is already in scope\n-  --> $DIR/loops-reject-labels-shadowing-lifetimes.rs:49:13\n-   |\n-LL |         fn meth_bad3<'bad>(x: &'bad i8) {\n-   |                      ---- first declared here\n-LL |             'bad: loop { break 'bad; }\n-   |             ^^^^ lifetime `'bad` already in scope\n-\n-warning: label name `'bad` shadows a lifetime name that is already in scope\n-  --> $DIR/loops-reject-labels-shadowing-lifetimes.rs:54:13\n-   |\n-LL |         fn meth_bad4<'a,'bad>(x: &'a i8, y: &'bad i8) {\n-   |                         ---- first declared here\n-LL |             'bad: loop { break 'bad; }\n-   |             ^^^^ lifetime `'bad` already in scope\n-\n-warning: label name `'bad` shadows a lifetime name that is already in scope\n-  --> $DIR/loops-reject-labels-shadowing-lifetimes.rs:61:13\n-   |\n-LL |     impl <'bad, 'e> Enum<'bad, 'e> {\n-   |           ---- first declared here\n-LL |         fn meth_bad(&self) {\n-LL |             'bad: loop { break 'bad; }\n-   |             ^^^^ lifetime `'bad` already in scope\n-\n-warning: label name `'bad` shadows a lifetime name that is already in scope\n-  --> $DIR/loops-reject-labels-shadowing-lifetimes.rs:67:13\n-   |\n-LL |     impl <'d, 'bad> Enum<'d, 'bad> {\n-   |               ---- first declared here\n-LL |         fn meth_bad2(&self) {\n-LL |             'bad: loop { break 'bad; }\n-   |             ^^^^ lifetime `'bad` already in scope\n-\n-warning: label name `'bad` shadows a lifetime name that is already in scope\n-  --> $DIR/loops-reject-labels-shadowing-lifetimes.rs:73:13\n-   |\n-LL |         fn meth_bad3<'bad>(x: &'bad i8) {\n-   |                      ---- first declared here\n-LL |             'bad: loop { break 'bad; }\n-   |             ^^^^ lifetime `'bad` already in scope\n-\n-warning: label name `'bad` shadows a lifetime name that is already in scope\n-  --> $DIR/loops-reject-labels-shadowing-lifetimes.rs:78:13\n-   |\n-LL |         fn meth_bad4<'a,'bad>(x: &'bad i8) {\n-   |                         ---- first declared here\n-LL |             'bad: loop { break 'bad; }\n-   |             ^^^^ lifetime `'bad` already in scope\n-\n-warning: label name `'bad` shadows a lifetime name that is already in scope\n-  --> $DIR/loops-reject-labels-shadowing-lifetimes.rs:88:13\n-   |\n-LL |     trait HasDefaultMethod1<'bad> {\n-   |                             ---- first declared here\n-...\n-LL |             'bad: loop { break 'bad; }\n-   |             ^^^^ lifetime `'bad` already in scope\n-\n-warning: label name `'bad` shadows a lifetime name that is already in scope\n-  --> $DIR/loops-reject-labels-shadowing-lifetimes.rs:94:13\n-   |\n-LL |     trait HasDefaultMethod2<'a,'bad> {\n-   |                                ---- first declared here\n-LL |         fn meth_bad(&self) {\n-LL |             'bad: loop { break 'bad; }\n-   |             ^^^^ lifetime `'bad` already in scope\n-\n-warning: label name `'bad` shadows a lifetime name that is already in scope\n-  --> $DIR/loops-reject-labels-shadowing-lifetimes.rs:100:13\n-   |\n-LL |         fn meth_bad<'bad>(&self) {\n-   |                     ---- first declared here\n-LL |             'bad: loop { break 'bad; }\n-   |             ^^^^ lifetime `'bad` already in scope\n-\n-warning: 12 warnings emitted\n-"}, {"sha": "ce2d07eb06a4d766e8fcbc86ade0b87b98fb8a09", "filename": "src/test/ui/loops/loops-reject-lifetime-shadowing-label.rs", "status": "removed", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/257d8fce3e38177c3cc357f1ce23db87b69e1682/src%2Ftest%2Fui%2Floops%2Floops-reject-lifetime-shadowing-label.rs", "raw_url": "https://github.com/rust-lang/rust/raw/257d8fce3e38177c3cc357f1ce23db87b69e1682/src%2Ftest%2Fui%2Floops%2Floops-reject-lifetime-shadowing-label.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Floops%2Floops-reject-lifetime-shadowing-label.rs?ref=257d8fce3e38177c3cc357f1ce23db87b69e1682", "patch": "@@ -1,36 +0,0 @@\n-// check-pass\n-#![feature(label_break_value)]\n-#![allow(dead_code, unused_variables)]\n-\n-// Issue #21633:  reject duplicate loop labels and block labels in function bodies.\n-//\n-// Test rejection of lifetimes in *expressions* that shadow labels.\n-\n-fn foo() {\n-    // Reusing lifetime `'a` in function item is okay.\n-    fn foo<'a>(x: &'a i8) -> i8 { *x }\n-\n-    // So is reusing `'a` in struct item\n-    struct S1<'a> { x: &'a i8 } impl<'a> S1<'a> { fn m(&self) {} }\n-    // and a method item\n-    struct S2; impl S2 { fn m<'a>(&self) {} }\n-\n-    let z = 3_i8;\n-\n-    'a: loop {\n-        let b = Box::new(|x: &i8| *x) as Box<dyn for <'a> Fn(&'a i8) -> i8>;\n-        //~^ WARN lifetime name `'a` shadows a label name that is already in scope\n-        assert_eq!((*b)(&z), z);\n-        break 'a;\n-    }\n-\n-    'b: {\n-        let b = Box::new(|x: &()| ()) as Box<dyn for <'b> Fn(&'b ())>;\n-        //~^ WARN lifetime name `'b` shadows a label name that is already in scope\n-        break 'b;\n-    }\n-}\n-\n-pub fn main() {\n-    foo();\n-}"}, {"sha": "9702b71600b5e572878742d1bc26542ae750ff84", "filename": "src/test/ui/loops/loops-reject-lifetime-shadowing-label.stderr", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/257d8fce3e38177c3cc357f1ce23db87b69e1682/src%2Ftest%2Fui%2Floops%2Floops-reject-lifetime-shadowing-label.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/257d8fce3e38177c3cc357f1ce23db87b69e1682/src%2Ftest%2Fui%2Floops%2Floops-reject-lifetime-shadowing-label.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Floops%2Floops-reject-lifetime-shadowing-label.stderr?ref=257d8fce3e38177c3cc357f1ce23db87b69e1682", "patch": "@@ -1,18 +0,0 @@\n-warning: lifetime name `'a` shadows a label name that is already in scope\n-  --> $DIR/loops-reject-lifetime-shadowing-label.rs:21:55\n-   |\n-LL |     'a: loop {\n-   |     -- first declared here\n-LL |         let b = Box::new(|x: &i8| *x) as Box<dyn for <'a> Fn(&'a i8) -> i8>;\n-   |                                                       ^^ label `'a` already in scope\n-\n-warning: lifetime name `'b` shadows a label name that is already in scope\n-  --> $DIR/loops-reject-lifetime-shadowing-label.rs:28:55\n-   |\n-LL |     'b: {\n-   |     -- first declared here\n-LL |         let b = Box::new(|x: &()| ()) as Box<dyn for <'b> Fn(&'b ())>;\n-   |                                                       ^^ label `'b` already in scope\n-\n-warning: 2 warnings emitted\n-"}]}