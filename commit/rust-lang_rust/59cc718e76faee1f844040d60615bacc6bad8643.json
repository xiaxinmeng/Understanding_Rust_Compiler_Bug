{"sha": "59cc718e76faee1f844040d60615bacc6bad8643", "node_id": "C_kwDOAAsO6NoAKDU5Y2M3MThlNzZmYWVlMWY4NDQwNDBkNjA2MTViYWNjNmJhZDg2NDM", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2022-08-19T20:15:15Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2022-08-19T20:15:15Z"}, "message": "Update codegen tests to accommodate the potential presence/absence of the\nextension operation depending on target architecture.", "tree": {"sha": "7fd8f9669bf3e6e413ad9d60b567bc8f4dc2ab06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7fd8f9669bf3e6e413ad9d60b567bc8f4dc2ab06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59cc718e76faee1f844040d60615bacc6bad8643", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59cc718e76faee1f844040d60615bacc6bad8643", "html_url": "https://github.com/rust-lang/rust/commit/59cc718e76faee1f844040d60615bacc6bad8643", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59cc718e76faee1f844040d60615bacc6bad8643/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bf3d5a82b689484b12bc5cc053d10f632ea6095", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bf3d5a82b689484b12bc5cc053d10f632ea6095", "html_url": "https://github.com/rust-lang/rust/commit/9bf3d5a82b689484b12bc5cc053d10f632ea6095"}], "stats": {"total": 51, "additions": 48, "deletions": 3}, "files": [{"sha": "23ade3c7216d3c46070fbc49556281bbdbfbab02", "filename": "src/test/codegen/abi-repr-ext.rs", "status": "modified", "additions": 44, "deletions": 2, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/59cc718e76faee1f844040d60615bacc6bad8643/src%2Ftest%2Fcodegen%2Fabi-repr-ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59cc718e76faee1f844040d60615bacc6bad8643/src%2Ftest%2Fcodegen%2Fabi-repr-ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fabi-repr-ext.rs?ref=59cc718e76faee1f844040d60615bacc6bad8643", "patch": "@@ -1,14 +1,56 @@\n // compile-flags: -O\n \n-#![crate_type=\"lib\"]\n+// revisions:x86_64 i686 aarch64-apple aarch64-windows aarch64-linux arm riscv\n+\n+//[x86_64] compile-flags: --target x86_64-unknown-uefi\n+//[x86_64] needs-llvm-components: x86\n+//[i686] compile-flags: --target i686-unknown-linux-musl\n+//[i686] needs-llvm-components: x86\n+//[aarch64-windows] compile-flags: --target aarch64-pc-windows-msvc\n+//[aarch64-windows] needs-llvm-components: aarch64\n+//[aarch64-linux] compile-flags: --target aarch64-unknown-linux-gnu\n+//[aarch64-linux] needs-llvm-components: aarch64\n+//[aarch64-apple] compile-flags: --target aarch64-apple-darwin\n+//[aarch64-apple] needs-llvm-components: aarch64\n+//[arm] compile-flags: --target armv7r-none-eabi\n+//[arm] needs-llvm-components: arm\n+//[riscv] compile-flags: --target riscv64gc-unknown-none-elf\n+//[riscv] needs-llvm-components: riscv\n+\n+// See bottom of file for a corresponding C source file that is meant to yield\n+// equivalent declarations.\n+#![feature(no_core, lang_items)]\n+#![crate_type = \"lib\"]\n+#![no_std]\n+#![no_core]\n+\n+#[lang=\"sized\"] trait Sized { }\n+#[lang=\"freeze\"] trait Freeze { }\n+#[lang=\"copy\"] trait Copy { }\n \n #[repr(i8)]\n pub enum Type {\n     Type1 = 0,\n     Type2 = 1\n }\n \n-// CHECK: define{{( dso_local)?}} noundef signext i8 @test()\n+// To accommodate rust#97800, one might consider writing the below as:\n+//\n+// `define{{( dso_local)?}} noundef{{( signext)?}} i8 @test()`\n+//\n+// but based on rust#80556, it seems important to actually check for the\n+// presence of the `signext` for those targets where we expect it.\n+\n+// CHECK: define{{( dso_local)?}} noundef\n+// x86_64-SAME:                 signext\n+// aarch64-apple-SAME:          signext\n+// aarch64-windows-NOT: signext\n+// aarch64-linux-NOT:   signext\n+// arm-SAME:                    signext\n+// riscv-SAME:                  signext\n+// CHECK-SAME: i8 @test()\n+\n+\n #[no_mangle]\n pub extern \"C\" fn test() -> Type {\n     Type::Type1"}, {"sha": "9b378ecb4e590651cc7b8b8a41a11c957160fcd1", "filename": "src/test/codegen/pic-relocation-model.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/59cc718e76faee1f844040d60615bacc6bad8643/src%2Ftest%2Fcodegen%2Fpic-relocation-model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59cc718e76faee1f844040d60615bacc6bad8643/src%2Ftest%2Fcodegen%2Fpic-relocation-model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fpic-relocation-model.rs?ref=59cc718e76faee1f844040d60615bacc6bad8643", "patch": "@@ -10,7 +10,10 @@ pub fn call_foreign_fn() -> u8 {\n     }\n }\n \n-// CHECK: declare zeroext i8 @foreign_fn()\n+// (Allow but do not require `zeroext` here, because it is not worth effort to\n+// spell out which targets have it and which ones do not; see rust#97800.)\n+\n+// CHECK: declare{{( zeroext)?}} i8 @foreign_fn()\n extern \"C\" {fn foreign_fn() -> u8;}\n \n // CHECK: !{i32 7, !\"PIC Level\", i32 2}"}]}