{"sha": "3bc59b5205410b229eb66236b4aafbb90487fa34", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiYzU5YjUyMDU0MTBiMjI5ZWI2NjIzNmI0YWFmYmI5MDQ4N2ZhMzQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-07-27T09:54:38Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-07-27T09:54:38Z"}, "message": "use slice::align_to", "tree": {"sha": "3b3eab19686334753b02e33d318d267d7a53b6c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b3eab19686334753b02e33d318d267d7a53b6c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bc59b5205410b229eb66236b4aafbb90487fa34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bc59b5205410b229eb66236b4aafbb90487fa34", "html_url": "https://github.com/rust-lang/rust/commit/3bc59b5205410b229eb66236b4aafbb90487fa34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bc59b5205410b229eb66236b4aafbb90487fa34/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70cb75c31e5d084da3a06457484096330ca72a61", "url": "https://api.github.com/repos/rust-lang/rust/commits/70cb75c31e5d084da3a06457484096330ca72a61", "html_url": "https://github.com/rust-lang/rust/commit/70cb75c31e5d084da3a06457484096330ca72a61"}], "stats": {"total": 33, "additions": 7, "deletions": 26}, "files": [{"sha": "72e7b57a6cb3cee63e87b970f026d946e9c40ee8", "filename": "src/libcore/slice/memchr.rs", "status": "modified", "additions": 7, "deletions": 26, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/3bc59b5205410b229eb66236b4aafbb90487fa34/src%2Flibcore%2Fslice%2Fmemchr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bc59b5205410b229eb66236b4aafbb90487fa34/src%2Flibcore%2Fslice%2Fmemchr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmemchr.rs?ref=3bc59b5205410b229eb66236b4aafbb90487fa34", "patch": "@@ -102,32 +102,13 @@ pub fn memrchr(x: u8, text: &[u8]) -> Option<usize> {\n     let ptr = text.as_ptr();\n     let usize_bytes = mem::size_of::<usize>();\n \n-    // a version of align_offset that says how much must be *subtracted*\n-    // from a pointer to be aligned.\n-    #[inline(always)]\n-    fn align_offset_down(ptr: *const u8, align: usize) -> usize {\n-        let align_offset = ptr.align_offset(align);\n-        if align_offset > align {\n-            // Not possible to align\n-            usize::max_value()\n-        } else if align_offset == 0 {\n-            0\n-        } else {\n-            // E.g. if align=8 and we have to add 1, then we can also subtract 7.\n-            align - align_offset\n-        }\n-    }\n-\n-    // search to an aligned boundary\n-    let end_align = align_offset_down(unsafe { ptr.offset(len as isize) }, usize_bytes);\n-    let mut offset;\n-    if end_align > 0 {\n-        offset = if end_align >= len { 0 } else { len - end_align };\n-        if let Some(index) = text[offset..].iter().rposition(|elt| *elt == x) {\n-            return Some(offset + index);\n-        }\n-    } else {\n-        offset = len;\n+    let mut offset = {\n+        // We call this just to obtain the length of the suffix\n+        let (_, _, suffix) = unsafe { text.align_to::<usize>() };\n+        len - suffix.len()\n+    };\n+    if let Some(index) = text[offset..].iter().rposition(|elt| *elt == x) {\n+        return Some(offset + index);\n     }\n \n     // search the body of the text"}]}