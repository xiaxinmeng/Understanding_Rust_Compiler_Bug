{"sha": "751d82e825d7c309ce4ebda84fa7d88ed4f363eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1MWQ4MmU4MjVkN2MzMDljZTRlYmRhODRmYTdkODhlZDRmMzYzZWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-01-19T11:12:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-01-19T11:12:03Z"}, "message": "Auto merge of #3672 - mikerite:fix-3670, r=oli-obk\n\nFix bad `while_let_on_iterator` suggestion.\n\nDon't suggest a `for` loop if the iterator is used inside the `while` loop.\n\nCloses #3670", "tree": {"sha": "accb78e0d7b05afb06deeba8cf41709e680ba7a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/accb78e0d7b05afb06deeba8cf41709e680ba7a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/751d82e825d7c309ce4ebda84fa7d88ed4f363eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/751d82e825d7c309ce4ebda84fa7d88ed4f363eb", "html_url": "https://github.com/rust-lang/rust/commit/751d82e825d7c309ce4ebda84fa7d88ed4f363eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/751d82e825d7c309ce4ebda84fa7d88ed4f363eb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e99a4d8d9e6c6e3294706486299f84667bf9133c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e99a4d8d9e6c6e3294706486299f84667bf9133c", "html_url": "https://github.com/rust-lang/rust/commit/e99a4d8d9e6c6e3294706486299f84667bf9133c"}, {"sha": "a773276da35afc67a2c3cb8b6ec7123f3866e8a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/a773276da35afc67a2c3cb8b6ec7123f3866e8a8", "html_url": "https://github.com/rust-lang/rust/commit/a773276da35afc67a2c3cb8b6ec7123f3866e8a8"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "acc7b11e3463827456a9d2cba0b3fe6568f935f7", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/751d82e825d7c309ce4ebda84fa7d88ed4f363eb/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/751d82e825d7c309ce4ebda84fa7d88ed4f363eb/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=751d82e825d7c309ce4ebda84fa7d88ed4f363eb", "patch": "@@ -565,6 +565,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                     && lhs_constructor.ident.name == \"Some\"\n                     && (pat_args.is_empty()\n                         || !is_refutable(cx, &pat_args[0])\n+                            && !is_used_inside(cx, iter_expr, &arms[0].body)\n                             && !is_iterator_used_after_while_let(cx, iter_expr)\n                             && !is_nested(cx, expr, &method_args[0]))\n                 {\n@@ -1888,6 +1889,19 @@ impl<'a, 'tcx> Visitor<'tcx> for VarVisitor<'a, 'tcx> {\n     }\n }\n \n+fn is_used_inside<'a, 'tcx: 'a>(cx: &'a LateContext<'a, 'tcx>, expr: &'tcx Expr, container: &'tcx Expr) -> bool {\n+    let def_id = match var_def_id(cx, expr) {\n+        Some(id) => id,\n+        None => return false,\n+    };\n+    if let Some(used_mutably) = mutated_variables(container, cx) {\n+        if used_mutably.contains(&def_id) {\n+            return true;\n+        }\n+    }\n+    false\n+}\n+\n fn is_iterator_used_after_while_let<'a, 'tcx: 'a>(cx: &LateContext<'a, 'tcx>, iter_expr: &'tcx Expr) -> bool {\n     let def_id = match var_def_id(cx, iter_expr) {\n         Some(id) => id,"}, {"sha": "8c3bf1cc674b617e8b752116343ce9877f31c41b", "filename": "tests/ui/while_loop.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/751d82e825d7c309ce4ebda84fa7d88ed4f363eb/tests%2Fui%2Fwhile_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/751d82e825d7c309ce4ebda84fa7d88ed4f363eb/tests%2Fui%2Fwhile_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_loop.rs?ref=751d82e825d7c309ce4ebda84fa7d88ed4f363eb", "patch": "@@ -216,4 +216,14 @@ fn refutable() {\n     while let Some(..) = values.iter().next() {\n         values.remove(&1);\n     }\n+\n+    // Issue 3670\n+    {\n+        let array = [Some(0), None, Some(1)];\n+        let mut iter = array.iter();\n+\n+        while let Some(elem) = iter.next() {\n+            let _ = elem.or_else(|| *iter.next()?);\n+        }\n+    }\n }"}]}