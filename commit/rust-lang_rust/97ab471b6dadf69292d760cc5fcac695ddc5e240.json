{"sha": "97ab471b6dadf69292d760cc5fcac695ddc5e240", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3YWI0NzFiNmRhZGY2OTI5MmQ3NjBjYzVmY2FjNjk1ZGRjNWUyNDA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-18T17:52:33Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-18T17:52:33Z"}, "message": "Minor simplification", "tree": {"sha": "0e608631db939f1e174ff8f793759c0a3dcef006", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e608631db939f1e174ff8f793759c0a3dcef006"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97ab471b6dadf69292d760cc5fcac695ddc5e240", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97ab471b6dadf69292d760cc5fcac695ddc5e240", "html_url": "https://github.com/rust-lang/rust/commit/97ab471b6dadf69292d760cc5fcac695ddc5e240", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97ab471b6dadf69292d760cc5fcac695ddc5e240/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04080dc4f6522f99356ea130fc83c55e9457e700", "url": "https://api.github.com/repos/rust-lang/rust/commits/04080dc4f6522f99356ea130fc83c55e9457e700", "html_url": "https://github.com/rust-lang/rust/commit/04080dc4f6522f99356ea130fc83c55e9457e700"}], "stats": {"total": 9, "additions": 3, "deletions": 6}, "files": [{"sha": "1e5e0f42068a8133a1cbd21b1bacb515b1c2105d", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/97ab471b6dadf69292d760cc5fcac695ddc5e240/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97ab471b6dadf69292d760cc5fcac695ddc5e240/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=97ab471b6dadf69292d760cc5fcac695ddc5e240", "patch": "@@ -95,7 +95,6 @@ pub(crate) fn highlight(db: &RootDatabase, file_id: FileId) -> Vec<HighlightedRa\n                 _ if in_macro_call.is_some() => {\n                     if let Some(token) = node.as_token() {\n                         if let Some((tag, binding_hash)) = highlight_token_tree(\n-                            db,\n                             &mut sb,\n                             &analyzer,\n                             &mut bindings_shadow_count,\n@@ -111,7 +110,6 @@ pub(crate) fn highlight(db: &RootDatabase, file_id: FileId) -> Vec<HighlightedRa\n                 }\n                 _ => {\n                     if let Some((tag, binding_hash)) = highlight_node(\n-                        db,\n                         &mut sb,\n                         &mut bindings_shadow_count,\n                         InFile::new(file_id.into(), node.clone()),\n@@ -151,7 +149,6 @@ fn highlight_macro(node: InFile<SyntaxElement>) -> Option<TextRange> {\n }\n \n fn highlight_token_tree(\n-    db: &RootDatabase,\n     sb: &mut SourceBinder<RootDatabase>,\n     analyzer: &SourceAnalyzer,\n     bindings_shadow_count: &mut FxHashMap<Name, u32>,\n@@ -160,7 +157,7 @@ fn highlight_token_tree(\n     if token.value.parent().kind() != TOKEN_TREE {\n         return None;\n     }\n-    let token = descend_into_macros_with_analyzer(db, analyzer, token);\n+    let token = descend_into_macros_with_analyzer(sb.db, analyzer, token);\n     let expanded = {\n         let parent = token.value.parent();\n         // We only care Name and Name_ref\n@@ -170,15 +167,15 @@ fn highlight_token_tree(\n         }\n     };\n \n-    highlight_node(db, sb, bindings_shadow_count, expanded)\n+    highlight_node(sb, bindings_shadow_count, expanded)\n }\n \n fn highlight_node(\n-    db: &RootDatabase,\n     sb: &mut SourceBinder<RootDatabase>,\n     bindings_shadow_count: &mut FxHashMap<Name, u32>,\n     node: InFile<SyntaxElement>,\n ) -> Option<(&'static str, Option<u64>)> {\n+    let db = sb.db;\n     let mut binding_hash = None;\n     let tag = match node.value.kind() {\n         FN_DEF => {"}]}