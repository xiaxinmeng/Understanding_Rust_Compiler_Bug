{"sha": "f7c61783e4cbc169955c7e633ecf629ed901a54e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3YzYxNzgzZTRjYmMxNjk5NTVjN2U2MzNlY2Y2MjllZDkwMWE1NGU=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-01-23T03:13:06Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-02-01T23:06:22Z"}, "message": "Fix tests", "tree": {"sha": "2559b0811769c07f377b9776be784d3471378df4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2559b0811769c07f377b9776be784d3471378df4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7c61783e4cbc169955c7e633ecf629ed901a54e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7c61783e4cbc169955c7e633ecf629ed901a54e", "html_url": "https://github.com/rust-lang/rust/commit/f7c61783e4cbc169955c7e633ecf629ed901a54e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7c61783e4cbc169955c7e633ecf629ed901a54e/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27a23db66032be9be96e697fdda50e73b0b90cc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/27a23db66032be9be96e697fdda50e73b0b90cc5", "html_url": "https://github.com/rust-lang/rust/commit/27a23db66032be9be96e697fdda50e73b0b90cc5"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "380170207301a7541b5d938c3537fe7e506c2eea", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7c61783e4cbc169955c7e633ecf629ed901a54e/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7c61783e4cbc169955c7e633ecf629ed901a54e/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=f7c61783e4cbc169955c7e633ecf629ed901a54e", "patch": "@@ -779,7 +779,7 @@ impl<'a> Parser<'a> {\n \n     pub fn parse_ident_attr(&mut self) -> PResult<'a, ast::Ident> {\n         match self.token {\n-            token::Ident(i) if i.name == keywords::SelfType.name() {\n+            token::Ident(i) if i.name == keywords::SelfType.name() => {\n                 self.bump();\n                 Ok(i)\n             }"}, {"sha": "6028df1883967e30086b35c55b5cc6bd951c70e6", "filename": "src/test/compile-fail/const-eval-overflow-4b.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7c61783e4cbc169955c7e633ecf629ed901a54e/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow-4b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7c61783e4cbc169955c7e633ecf629ed901a54e/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow-4b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow-4b.rs?ref=f7c61783e4cbc169955c7e633ecf629ed901a54e", "patch": "@@ -22,7 +22,7 @@ const A_I8_T\n     : [u32; (i8::MAX as i8 + 1u8) as usize]\n     //~^ ERROR mismatched types\n     //~| expected i8, found u8\n-    //~| ERROR the trait bound `i8: std::ops::Add<u8>` is not satisfied\n+    //~| ERROR cannot add `u8` to `i8`\n     = [0; (i8::MAX as usize) + 1];\n \n "}, {"sha": "caf510071bd68d11eb1862772d5032127f851e57", "filename": "src/test/compile-fail/ufcs-qpath-self-mismatch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7c61783e4cbc169955c7e633ecf629ed901a54e/src%2Ftest%2Fcompile-fail%2Fufcs-qpath-self-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7c61783e4cbc169955c7e633ecf629ed901a54e/src%2Ftest%2Fcompile-fail%2Fufcs-qpath-self-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fufcs-qpath-self-mismatch.rs?ref=f7c61783e4cbc169955c7e633ecf629ed901a54e", "patch": "@@ -12,7 +12,7 @@ use std::ops::Add;\n \n fn main() {\n     <i32 as Add<u32>>::add(1, 2);\n-    //~^ ERROR `i32: std::ops::Add<u32>` is not satisfied\n+    //~^ ERROR cannot add `u32` to `i32`\n     <i32 as Add<i32>>::add(1u32, 2);\n     //~^ ERROR mismatched types\n     <i32 as Add<i32>>::add(1, 2u32);"}]}