{"sha": "465662a69187f89a48700c746ec63200bbb21942", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2NTY2MmE2OTE4N2Y4OWE0ODcwMGM3NDZlYzYzMjAwYmJiMjE5NDI=", "commit": {"author": {"name": "Markus Westerlind", "email": "marwes91@gmail.com", "date": "2015-11-21T00:04:23Z"}, "committer": {"name": "Markus Westerlind", "email": "marwes91@gmail.com", "date": "2015-11-21T00:05:31Z"}, "message": "Fix long field accesses not being broken onto separate lines\n\nFixes #512", "tree": {"sha": "bd09431d4acbaef5811a1853aff3d7af896cbf1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd09431d4acbaef5811a1853aff3d7af896cbf1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/465662a69187f89a48700c746ec63200bbb21942", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/465662a69187f89a48700c746ec63200bbb21942", "html_url": "https://github.com/rust-lang/rust/commit/465662a69187f89a48700c746ec63200bbb21942", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/465662a69187f89a48700c746ec63200bbb21942/comments", "author": {"login": "Marwes", "id": 957312, "node_id": "MDQ6VXNlcjk1NzMxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/957312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Marwes", "html_url": "https://github.com/Marwes", "followers_url": "https://api.github.com/users/Marwes/followers", "following_url": "https://api.github.com/users/Marwes/following{/other_user}", "gists_url": "https://api.github.com/users/Marwes/gists{/gist_id}", "starred_url": "https://api.github.com/users/Marwes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Marwes/subscriptions", "organizations_url": "https://api.github.com/users/Marwes/orgs", "repos_url": "https://api.github.com/users/Marwes/repos", "events_url": "https://api.github.com/users/Marwes/events{/privacy}", "received_events_url": "https://api.github.com/users/Marwes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Marwes", "id": 957312, "node_id": "MDQ6VXNlcjk1NzMxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/957312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Marwes", "html_url": "https://github.com/Marwes", "followers_url": "https://api.github.com/users/Marwes/followers", "following_url": "https://api.github.com/users/Marwes/following{/other_user}", "gists_url": "https://api.github.com/users/Marwes/gists{/gist_id}", "starred_url": "https://api.github.com/users/Marwes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Marwes/subscriptions", "organizations_url": "https://api.github.com/users/Marwes/orgs", "repos_url": "https://api.github.com/users/Marwes/repos", "events_url": "https://api.github.com/users/Marwes/events{/privacy}", "received_events_url": "https://api.github.com/users/Marwes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdc2e4fd3fb2ea7e10c2c730782b7f15a86db562", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdc2e4fd3fb2ea7e10c2c730782b7f15a86db562", "html_url": "https://github.com/rust-lang/rust/commit/bdc2e4fd3fb2ea7e10c2c730782b7f15a86db562"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "9e85b22da022a743a2dcf7ca5e95c03d1b03c24c", "filename": "src/chains.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/465662a69187f89a48700c746ec63200bbb21942/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/465662a69187f89a48700c746ec63200bbb21942/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=465662a69187f89a48700c746ec63200bbb21942", "patch": "@@ -194,8 +194,22 @@ fn rewrite_chain_expr(expr: &ast::Expr,\n                                 width,\n                                 offset)\n         }\n-        ast::Expr_::ExprField(_, ref field) => Some(format!(\".{}\", field.node)),\n-        ast::Expr_::ExprTupField(_, ref field) => Some(format!(\".{}\", field.node)),\n+        ast::Expr_::ExprField(_, ref field) => {\n+            let s = format!(\".{}\", field.node);\n+            if s.len() <= width {\n+                Some(s)\n+            } else {\n+                None\n+            }\n+        }\n+        ast::Expr_::ExprTupField(_, ref field) => {\n+            let s = format!(\".{}\", field.node);\n+            if s.len() <= width {\n+                Some(s)\n+            } else {\n+                None\n+            }\n+        }\n         _ => unreachable!(),\n     }\n }"}, {"sha": "7aa626221aea5748b64982fec32c811974c9d532", "filename": "tests/source/long_field_access.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/465662a69187f89a48700c746ec63200bbb21942/tests%2Fsource%2Flong_field_access.rs", "raw_url": "https://github.com/rust-lang/rust/raw/465662a69187f89a48700c746ec63200bbb21942/tests%2Fsource%2Flong_field_access.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Flong_field_access.rs?ref=465662a69187f89a48700c746ec63200bbb21942", "patch": "@@ -0,0 +1,3 @@\n+fn f() {\n+    block_flow.base.stacking_relative_position_of_display_port = self.base.stacking_relative_position_of_display_port;\n+}"}, {"sha": "349d2c2f639ba3d9dfed1e0fea17f635939924d8", "filename": "tests/target/long_field_access.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/465662a69187f89a48700c746ec63200bbb21942/tests%2Ftarget%2Flong_field_access.rs", "raw_url": "https://github.com/rust-lang/rust/raw/465662a69187f89a48700c746ec63200bbb21942/tests%2Ftarget%2Flong_field_access.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Flong_field_access.rs?ref=465662a69187f89a48700c746ec63200bbb21942", "patch": "@@ -0,0 +1,4 @@\n+fn f() {\n+    block_flow.base.stacking_relative_position_of_display_port =\n+        self.base.stacking_relative_position_of_display_port;\n+}"}]}