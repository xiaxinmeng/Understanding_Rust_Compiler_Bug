{"sha": "d52dafd2a885f91081faa0ff3dcd4ea24ef6d073", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1MmRhZmQyYTg4NWY5MTA4MWZhYTBmZjNkY2Q0ZWEyNGVmNmQwNzM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-11-13T13:09:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-13T13:09:31Z"}, "message": "Rollup merge of #66337 - Mark-Simulacrum:no-decode-lint-id, r=Dylan-DPC\n\nRemove dead code for encoding/decoding lint IDs\n\nThis helps decouple the lint system from needing the implicit TLS TyCtxt\nas well.", "tree": {"sha": "9097068ee322e19c2a947de662df6c3a1ed50cd5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9097068ee322e19c2a947de662df6c3a1ed50cd5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d52dafd2a885f91081faa0ff3dcd4ea24ef6d073", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdzACLCRBK7hj4Ov3rIwAAdHIIAGBK/ldwmxKsdgzJ0jDSVPen\nnkOWVhFMC00WZpuXrj2iaPO+pR8kh3l6XYEq59flMUcYIpkP7dC9q/uT1UbSeTMh\nkyqJnhE1O+y5Kq8M5AzoHldAlCWV+ISVb0eG4lVQXDOd3D99IA1PD8y5gDHT//Eo\nAfTS5l3Dp6EeBSWzDO4BBXnIhZw6WAd6+92INEQwquTgAn2mP2z5wqweCsSA59d4\nIEGiVcftr9FtcjK6PJHgoG5j11dN30XFvPr1Sq7lHHgyZ8DhWrIPzCPxfm3mptHj\ntaR3CxGdtGy+fNX0GupZCA3V/tcfpjwXF+DRWckszVKa8MjPGbpTou/HTCJe4ZA=\n=Qh1Y\n-----END PGP SIGNATURE-----\n", "payload": "tree 9097068ee322e19c2a947de662df6c3a1ed50cd5\nparent fab583bdfc319323cbb6ac8e98c2a1020cb4baa6\nparent 8c29b74b15d494fd963109bade5f31a0ada431d0\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1573650571 +0900\ncommitter GitHub <noreply@github.com> 1573650571 +0900\n\nRollup merge of #66337 - Mark-Simulacrum:no-decode-lint-id, r=Dylan-DPC\n\nRemove dead code for encoding/decoding lint IDs\n\nThis helps decouple the lint system from needing the implicit TLS TyCtxt\nas well.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d52dafd2a885f91081faa0ff3dcd4ea24ef6d073", "html_url": "https://github.com/rust-lang/rust/commit/d52dafd2a885f91081faa0ff3dcd4ea24ef6d073", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d52dafd2a885f91081faa0ff3dcd4ea24ef6d073/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fab583bdfc319323cbb6ac8e98c2a1020cb4baa6", "url": "https://api.github.com/repos/rust-lang/rust/commits/fab583bdfc319323cbb6ac8e98c2a1020cb4baa6", "html_url": "https://github.com/rust-lang/rust/commit/fab583bdfc319323cbb6ac8e98c2a1020cb4baa6"}, {"sha": "8c29b74b15d494fd963109bade5f31a0ada431d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c29b74b15d494fd963109bade5f31a0ada431d0", "html_url": "https://github.com/rust-lang/rust/commit/8c29b74b15d494fd963109bade5f31a0ada431d0"}], "stats": {"total": 27, "additions": 1, "deletions": 26}, "files": [{"sha": "dc3bc5fa0cebfddac642f97dd861cb96e8481411", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 1, "deletions": 26, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/d52dafd2a885f91081faa0ff3dcd4ea24ef6d073/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d52dafd2a885f91081faa0ff3dcd4ea24ef6d073/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=d52dafd2a885f91081faa0ff3dcd4ea24ef6d073", "patch": "@@ -35,7 +35,6 @@ use crate::util::common::time;\n use errors::DiagnosticBuilder;\n use std::slice;\n use rustc_data_structures::sync::{self, ParallelIterator, join, par_iter};\n-use rustc_serialize::{Decoder, Decodable, Encoder, Encodable};\n use syntax::ast;\n use syntax::util::lev_distance::find_best_match_for_name;\n use syntax::visit as ast_visit;\n@@ -71,7 +70,7 @@ pub struct LintStore {\n \n /// Lints that are buffered up early on in the `Session` before the\n /// `LintLevels` is calculated\n-#[derive(PartialEq, RustcEncodable, RustcDecodable, Debug)]\n+#[derive(PartialEq, Debug)]\n pub struct BufferedEarlyLint {\n     pub lint_id: LintId,\n     pub ast_id: ast::NodeId,\n@@ -1574,27 +1573,3 @@ pub fn check_ast_crate<T: EarlyLintPass>(\n         }\n     }\n }\n-\n-impl Encodable for LintId {\n-    fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {\n-        s.emit_str(&self.lint.name.to_lowercase())\n-    }\n-}\n-\n-impl Decodable for LintId {\n-    #[inline]\n-    fn decode<D: Decoder>(d: &mut D) -> Result<LintId, D::Error> {\n-        let s = d.read_str()?;\n-        ty::tls::with(|tcx| {\n-            match tcx.lint_store.find_lints(&s) {\n-                Ok(ids) => {\n-                    if ids.len() != 0 {\n-                        panic!(\"invalid lint-id `{}`\", s);\n-                    }\n-                    Ok(ids[0])\n-                }\n-                Err(_) => panic!(\"invalid lint-id `{}`\", s),\n-            }\n-        })\n-    }\n-}"}]}