{"sha": "7109d03db50379c881b7efa42a46a8472c65f9a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxMDlkMDNkYjUwMzc5Yzg4MWI3ZWZhNDJhNDZhODQ3MmM2NWY5YTA=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-06-16T14:24:10Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-07-11T12:27:37Z"}, "message": "Allow setting the limit on std::io::Take.", "tree": {"sha": "ed1b4280fa24a8c5100911f8edccf7bf0d59fee5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed1b4280fa24a8c5100911f8edccf7bf0d59fee5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7109d03db50379c881b7efa42a46a8472c65f9a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7109d03db50379c881b7efa42a46a8472c65f9a0", "html_url": "https://github.com/rust-lang/rust/commit/7109d03db50379c881b7efa42a46a8472c65f9a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7109d03db50379c881b7efa42a46a8472c65f9a0/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1f180bde3fedc67db04e595a29c9cb4e03f7eaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1f180bde3fedc67db04e595a29c9cb4e03f7eaf", "html_url": "https://github.com/rust-lang/rust/commit/a1f180bde3fedc67db04e595a29c9cb4e03f7eaf"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "9a3036f753ed314e155321dea34d8acfdaea0a92", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/7109d03db50379c881b7efa42a46a8472c65f9a0/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7109d03db50379c881b7efa42a46a8472c65f9a0/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=7109d03db50379c881b7efa42a46a8472c65f9a0", "patch": "@@ -1755,6 +1755,35 @@ impl<T> Take<T> {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn limit(&self) -> u64 { self.limit }\n \n+    /// Sets the number of bytes that can be read before this instance will\n+    /// return EOF. This is the same as constructing a new `Take` instance, so\n+    /// the amount of bytes read and the previous limit value don't matter when\n+    /// calling this method.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(take_set_limit)]\n+    /// use std::io;\n+    /// use std::io::prelude::*;\n+    /// use std::fs::File;\n+    ///\n+    /// # fn foo() -> io::Result<()> {\n+    /// let f = File::open(\"foo.txt\")?;\n+    ///\n+    /// // read at most five bytes\n+    /// let mut handle = f.take(5);\n+    /// handle.set_limit(10);\n+    ///\n+    /// assert_eq!(handle.limit(), 10);\n+    /// # Ok(())\n+    /// # }\n+    /// ```\n+    #[unstable(feature = \"take_set_limit\", issue = \"42781\")]\n+    pub fn set_limit(&mut self, limit: u64) {\n+        self.limit = limit;\n+    }\n+\n     /// Consumes the `Take`, returning the wrapped reader.\n     ///\n     /// # Examples"}]}