{"sha": "a3b816be53b5d3eae48e7291836442f6dff9e318", "node_id": "C_kwDOAAsO6NoAKGEzYjgxNmJlNTNiNWQzZWFlNDhlNzI5MTgzNjQ0MmY2ZGZmOWUzMTg", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-05-24T14:33:43Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-05-24T14:33:43Z"}, "message": "Use `is_some_and`/`is_ok_and` in less obvious spots", "tree": {"sha": "2e3b799ccc2cacc835f88092635d16047339229e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e3b799ccc2cacc835f88092635d16047339229e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3b816be53b5d3eae48e7291836442f6dff9e318", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3b816be53b5d3eae48e7291836442f6dff9e318", "html_url": "https://github.com/rust-lang/rust/commit/a3b816be53b5d3eae48e7291836442f6dff9e318", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3b816be53b5d3eae48e7291836442f6dff9e318/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84644eb9c66281d31c9261a8ab7ccf99f2f2055e", "url": "https://api.github.com/repos/rust-lang/rust/commits/84644eb9c66281d31c9261a8ab7ccf99f2f2055e", "html_url": "https://github.com/rust-lang/rust/commit/84644eb9c66281d31c9261a8ab7ccf99f2f2055e"}], "stats": {"total": 18, "additions": 8, "deletions": 10}, "files": [{"sha": "84e09cf0abe4fe54d1f82263d110a1f8c0c733b5", "filename": "src/abi/mod.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a3b816be53b5d3eae48e7291836442f6dff9e318/src%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3b816be53b5d3eae48e7291836442f6dff9e318/src%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fmod.rs?ref=a3b816be53b5d3eae48e7291836442f6dff9e318", "patch": "@@ -432,11 +432,9 @@ pub(crate) fn codegen_terminator_call<'tcx>(\n     let is_cold = if fn_sig.abi() == Abi::RustCold {\n         true\n     } else {\n-        instance\n-            .map(|inst| {\n-                fx.tcx.codegen_fn_attrs(inst.def_id()).flags.contains(CodegenFnAttrFlags::COLD)\n-            })\n-            .unwrap_or(false)\n+        instance.is_some_and(|inst| {\n+            fx.tcx.codegen_fn_attrs(inst.def_id()).flags.contains(CodegenFnAttrFlags::COLD)\n+        })\n     };\n     if is_cold {\n         fx.bcx.set_cold_block(fx.bcx.current_block().unwrap());\n@@ -470,7 +468,7 @@ pub(crate) fn codegen_terminator_call<'tcx>(\n     };\n \n     // Pass the caller location for `#[track_caller]`.\n-    if instance.map(|inst| inst.def.requires_caller_location(fx.tcx)).unwrap_or(false) {\n+    if instance.is_some_and(|inst| inst.def.requires_caller_location(fx.tcx)) {\n         let caller_location = fx.get_caller_location(source_info);\n         args.push(CallArgument { value: caller_location, is_owned: false });\n     }"}, {"sha": "9c6a0fae327cf2999c680095bfbb6b74bcc9415d", "filename": "src/base.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a3b816be53b5d3eae48e7291836442f6dff9e318/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3b816be53b5d3eae48e7291836442f6dff9e318/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=a3b816be53b5d3eae48e7291836442f6dff9e318", "patch": "@@ -630,11 +630,11 @@ fn codegen_stmt<'tcx>(\n                     let to_ty = fx.monomorphize(to_ty);\n \n                     fn is_fat_ptr<'tcx>(fx: &FunctionCx<'_, '_, 'tcx>, ty: Ty<'tcx>) -> bool {\n-                        ty.builtin_deref(true)\n-                            .map(|ty::TypeAndMut { ty: pointee_ty, mutbl: _ }| {\n+                        ty.builtin_deref(true).is_some_and(\n+                            |ty::TypeAndMut { ty: pointee_ty, mutbl: _ }| {\n                                 has_ptr_meta(fx.tcx, pointee_ty)\n-                            })\n-                            .unwrap_or(false)\n+                            },\n+                        )\n                     }\n \n                     if is_fat_ptr(fx, from_ty) {"}]}