{"sha": "265e0f0d4b89038052f80c0332608dda9d87af6b", "node_id": "C_kwDOAAsO6NoAKDI2NWUwZjBkNGI4OTAzODA1MmY4MGMwMzMyNjA4ZGRhOWQ4N2FmNmI", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-06-12T10:14:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-12T10:14:28Z"}, "message": "Rollup merge of #97991 - davidkna:fix-macos-strip, r=joshtriplett\n\nUse safer `strip=symbols`-flag for dylibs on macOS\n\nCloses #93988\n\nTo safely strip dylibs on macOS, the `-x` flag is needed per the manpage (see the discussion here: https://github.com/rust-lang/rust/issues/93988#issuecomment-1042574854).\n\nThus, when the current `crate_type` is producing a dylib (I assume this is the case for proc macros) use the `-x` flag instead of bare `strip` for `strip=symbols`.", "tree": {"sha": "1b23ef70761e0937d02f5c93c320ac8c8f104b87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b23ef70761e0937d02f5c93c320ac8c8f104b87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/265e0f0d4b89038052f80c0332608dda9d87af6b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJipbyECRBK7hj4Ov3rIwAAuOcIAG391gWgczIngAyqxfUx6WIi\nv6d8m6G8FST1uiqaHUYrhUvaSY2eB3TCgQyPrwjq2oKwhR2qTU4jpkt0jli7E5mk\nAbCuXUeYBHgMjjA0ueguiz2qgU3RlFJwiinpCwEmjPXFByKrImY0FlA2L7r5/NwE\nANYy2eXT74KCkLBKexWbfsHgM7KjENppsESFw2Bg0I+iQU73Yyj7u2oFnpW+0pu+\nA6ZZOvfKM8Ibw3s/aiEOQZjYx5taTacYF2yzSrMyp/AEmMVe7tGJM3O/qb40yMn/\nSENVIPsryzQWwvbBOuXg5ZTKJve8QTRUgAzT2QeUwsUjsDLuIT3is+fUo1fuFvM=\n=aabq\n-----END PGP SIGNATURE-----\n", "payload": "tree 1b23ef70761e0937d02f5c93c320ac8c8f104b87\nparent cf3c41aa9d31ea199e82ce6c3fa27a096d35b0c4\nparent 8558b352955b39267b1663de3c4867a6092d6099\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1655028868 +0200\ncommitter GitHub <noreply@github.com> 1655028868 +0200\n\nRollup merge of #97991 - davidkna:fix-macos-strip, r=joshtriplett\n\nUse safer `strip=symbols`-flag for dylibs on macOS\n\nCloses #93988\n\nTo safely strip dylibs on macOS, the `-x` flag is needed per the manpage (see the discussion here: https://github.com/rust-lang/rust/issues/93988#issuecomment-1042574854).\n\nThus, when the current `crate_type` is producing a dylib (I assume this is the case for proc macros) use the `-x` flag instead of bare `strip` for `strip=symbols`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/265e0f0d4b89038052f80c0332608dda9d87af6b", "html_url": "https://github.com/rust-lang/rust/commit/265e0f0d4b89038052f80c0332608dda9d87af6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/265e0f0d4b89038052f80c0332608dda9d87af6b/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf3c41aa9d31ea199e82ce6c3fa27a096d35b0c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf3c41aa9d31ea199e82ce6c3fa27a096d35b0c4", "html_url": "https://github.com/rust-lang/rust/commit/cf3c41aa9d31ea199e82ce6c3fa27a096d35b0c4"}, {"sha": "8558b352955b39267b1663de3c4867a6092d6099", "url": "https://api.github.com/repos/rust-lang/rust/commits/8558b352955b39267b1663de3c4867a6092d6099", "html_url": "https://github.com/rust-lang/rust/commit/8558b352955b39267b1663de3c4867a6092d6099"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "82213e7d748478c684311d62d6f77b7a8559d0a3", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/265e0f0d4b89038052f80c0332608dda9d87af6b/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/265e0f0d4b89038052f80c0332608dda9d87af6b/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=265e0f0d4b89038052f80c0332608dda9d87af6b", "patch": "@@ -1003,10 +1003,14 @@ fn link_natively<'a, B: ArchiveBuilder<'a>>(\n     let strip = strip_value(sess);\n \n     if sess.target.is_like_osx {\n-        match strip {\n-            Strip::Debuginfo => strip_symbols_in_osx(sess, &out_filename, Some(\"-S\")),\n-            Strip::Symbols => strip_symbols_in_osx(sess, &out_filename, None),\n-            Strip::None => {}\n+        match (strip, crate_type) {\n+            (Strip::Debuginfo, _) => strip_symbols_in_osx(sess, &out_filename, Some(\"-S\")),\n+            // Per the manpage, `-x` is the maximum safe strip level for dynamic libraries. (#93988)\n+            (Strip::Symbols, CrateType::Dylib | CrateType::Cdylib | CrateType::ProcMacro) => {\n+                strip_symbols_in_osx(sess, &out_filename, Some(\"-x\"))\n+            }\n+            (Strip::Symbols, _) => strip_symbols_in_osx(sess, &out_filename, None),\n+            (Strip::None, _) => {}\n         }\n     }\n }"}]}