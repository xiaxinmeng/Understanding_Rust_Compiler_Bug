{"sha": "33a46581f79497da88aa31d48750f76bf7f7cf93", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzYTQ2NTgxZjc5NDk3ZGE4OGFhMzFkNDg3NTBmNzZiZjdmN2NmOTM=", "commit": {"author": {"name": "Tibo", "email": "delor.thibault@gmail.com", "date": "2018-05-26T17:15:26Z"}, "committer": {"name": "Tibo", "email": "delor.thibault@gmail.com", "date": "2018-05-26T17:20:02Z"}, "message": "Fix test failing on windows due to crlf", "tree": {"sha": "6b130c606929ec39ef86e26ae961fb1944b64684", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b130c606929ec39ef86e26ae961fb1944b64684"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33a46581f79497da88aa31d48750f76bf7f7cf93", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEElri4er6EfFqe1VRMLfdMrGi+j80FAlsJl0QACgkQLfdMrGi+\nj80PaAgAmBLWsX2YOoNPtvoSOEnHE0L0z1HgsGDGfoP9JU46YmuYll5LaC2BM1cE\nrSRXvhDAllYZHt4ejkOwXPQ9VDZKR0Fz7uUgTbf088TYCvRpocKmJL8uPd7SYj6B\noihDIh/8SWsNQYLmE2LcgLe4B/TvbwzdDdWKsKzIZ7CkwQmQA0ha6/saKioNIhc+\n/E6hJBOqYWZ3Uo0nlD9jKl7eXp9nCPa++ulhgavNhED74DO7FmPSivLayqLjxrwL\ncgi/Fv6RVpiXLYQKBljXtT2QEq1wOwrkM6GYO5XJqQ+FqDqeGdfh+V5yT6Ga6ISV\nM6KXX79gaQSD2q0OWaoF8XGvk07U3w==\n=qlB+\n-----END PGP SIGNATURE-----", "payload": "tree 6b130c606929ec39ef86e26ae961fb1944b64684\nparent a92a1cb51283bc6861bb1bb33b2b34c36b5d16bd\nauthor Tibo <delor.thibault@gmail.com> 1527354926 +1000\ncommitter Tibo <delor.thibault@gmail.com> 1527355202 +1000\n\nFix test failing on windows due to crlf\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33a46581f79497da88aa31d48750f76bf7f7cf93", "html_url": "https://github.com/rust-lang/rust/commit/33a46581f79497da88aa31d48750f76bf7f7cf93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33a46581f79497da88aa31d48750f76bf7f7cf93/comments", "author": {"login": "t-botz", "id": 693797, "node_id": "MDQ6VXNlcjY5Mzc5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/693797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-botz", "html_url": "https://github.com/t-botz", "followers_url": "https://api.github.com/users/t-botz/followers", "following_url": "https://api.github.com/users/t-botz/following{/other_user}", "gists_url": "https://api.github.com/users/t-botz/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-botz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-botz/subscriptions", "organizations_url": "https://api.github.com/users/t-botz/orgs", "repos_url": "https://api.github.com/users/t-botz/repos", "events_url": "https://api.github.com/users/t-botz/events{/privacy}", "received_events_url": "https://api.github.com/users/t-botz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "t-botz", "id": 693797, "node_id": "MDQ6VXNlcjY5Mzc5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/693797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-botz", "html_url": "https://github.com/t-botz", "followers_url": "https://api.github.com/users/t-botz/followers", "following_url": "https://api.github.com/users/t-botz/following{/other_user}", "gists_url": "https://api.github.com/users/t-botz/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-botz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-botz/subscriptions", "organizations_url": "https://api.github.com/users/t-botz/orgs", "repos_url": "https://api.github.com/users/t-botz/repos", "events_url": "https://api.github.com/users/t-botz/events{/privacy}", "received_events_url": "https://api.github.com/users/t-botz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a92a1cb51283bc6861bb1bb33b2b34c36b5d16bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/a92a1cb51283bc6861bb1bb33b2b34c36b5d16bd", "html_url": "https://github.com/rust-lang/rust/commit/a92a1cb51283bc6861bb1bb33b2b34c36b5d16bd"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "d776dbb6a79a66d0122e78bc701281822a2ebcd3", "filename": "src/config/file_lines.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/33a46581f79497da88aa31d48750f76bf7f7cf93/src%2Fconfig%2Ffile_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33a46581f79497da88aa31d48750f76bf7f7cf93/src%2Fconfig%2Ffile_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Ffile_lines.rs?ref=33a46581f79497da88aa31d48750f76bf7f7cf93", "patch": "@@ -209,9 +209,9 @@ impl FileLines {\n         self.file_range_matches(file_name, |r| r.lo <= line && r.hi >= line)\n     }\n \n-    /// Returns true if any of the lines between `lo` and `hi` from `file_name` are in `self`.\n-    pub(crate) fn intersects_range(&self, file_name: &FileName, lo: usize, hi: usize) -> bool {\n-        self.file_range_matches(file_name, |r| r.intersects(Range::new(lo, hi)))\n+    /// Returns true if all the lines between `lo` and `hi` from `file_name` are in `self`.\n+    pub(crate) fn contains_range(&self, file_name: &FileName, lo: usize, hi: usize) -> bool {\n+        self.file_range_matches(file_name, |r| r.contains(Range::new(lo, hi)))\n     }\n }\n "}, {"sha": "6ff2efa487fe7ce8f7294d6a389bbddf0c1c443c", "filename": "src/missed_spans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33a46581f79497da88aa31d48750f76bf7f7cf93/src%2Fmissed_spans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33a46581f79497da88aa31d48750f76bf7f7cf93/src%2Fmissed_spans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmissed_spans.rs?ref=33a46581f79497da88aa31d48750f76bf7f7cf93", "patch": "@@ -189,7 +189,7 @@ impl<'a> FmtVisitor<'a> {\n             debug!(\"{:?}: {:?}\", kind, subslice);\n \n             let newline_count = count_newlines(subslice);\n-            let within_file_lines_range = self.config.file_lines().intersects_range(\n+            let within_file_lines_range = self.config.file_lines().contains_range(\n                 file_name,\n                 status.cur_line,\n                 status.cur_line + newline_count,"}]}