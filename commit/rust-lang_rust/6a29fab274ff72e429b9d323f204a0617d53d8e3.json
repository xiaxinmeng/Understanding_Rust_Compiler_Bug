{"sha": "6a29fab274ff72e429b9d323f204a0617d53d8e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhMjlmYWIyNzRmZjcyZTQyOWI5ZDMyM2YyMDRhMDYxN2Q1M2Q4ZTM=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-01-11T01:25:44Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-01-12T22:53:02Z"}, "message": "Mark even more tests as gate tests\n\nNow, no feature outside of the whitelist is\nwithout a test marked as its gate test.", "tree": {"sha": "a6e7b4cf1a1771889bcf117620453f8dd1924461", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6e7b4cf1a1771889bcf117620453f8dd1924461"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a29fab274ff72e429b9d323f204a0617d53d8e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a29fab274ff72e429b9d323f204a0617d53d8e3", "html_url": "https://github.com/rust-lang/rust/commit/6a29fab274ff72e429b9d323f204a0617d53d8e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a29fab274ff72e429b9d323f204a0617d53d8e3/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "404572921d1c2cf87cf56a7c983d4ce9438d4a40", "url": "https://api.github.com/repos/rust-lang/rust/commits/404572921d1c2cf87cf56a7c983d4ce9438d4a40", "html_url": "https://github.com/rust-lang/rust/commit/404572921d1c2cf87cf56a7c983d4ce9438d4a40"}], "stats": {"total": 96, "additions": 96, "deletions": 0}, "files": [{"sha": "cd9cc2237014913ef947b4ebeceab872c46aa810", "filename": "src/test/compile-fail/asm-gated.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fasm-gated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fasm-gated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fasm-gated.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-asm\n+\n fn main() {\n     unsafe {\n         asm!(\"\"); //~ ERROR inline assembly is not stable enough"}, {"sha": "222190de9fe9c4a25651f78858bc413f5f8bc245", "filename": "src/test/compile-fail/asm-gated2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fasm-gated2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fasm-gated2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fasm-gated2.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-asm\n+\n fn main() {\n     unsafe {\n         println!(\"{}\", asm!(\"\")); //~ ERROR inline assembly is not stable"}, {"sha": "b341f7c78257a33bcc2e8ffd3e93f81cef0e3350", "filename": "src/test/compile-fail/attr-on-generic-formals-wo-feature-gate.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fattr-on-generic-formals-wo-feature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fattr-on-generic-formals-wo-feature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fattr-on-generic-formals-wo-feature-gate.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -16,6 +16,8 @@\n // using `rustc_attrs` feature. There is a separate compile-fail/ test\n // ensuring that the attribute feature-gating works in this context.)\n \n+// gate-test-generic_param_attrs\n+\n #![feature(rustc_attrs)]\n #![allow(dead_code)]\n "}, {"sha": "f65968e0e1192cfb1841f2f492671abf7f5a0aac", "filename": "src/test/compile-fail/check-static-values-constraints.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fcheck-static-values-constraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fcheck-static-values-constraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcheck-static-values-constraints.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -10,6 +10,8 @@\n \n // Verifies all possible restrictions for statics values.\n \n+// gate-test-drop_types_in_const\n+\n #![feature(box_syntax)]\n \n use std::marker;"}, {"sha": "5b125d0e51c084878d441b8da936156737c7e3e8", "filename": "src/test/compile-fail/concat_idents-gate.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fconcat_idents-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fconcat_idents-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconcat_idents-gate.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-concat_idents\n+\n const XY_1: i32 = 10;\n \n fn main() {"}, {"sha": "5a9ffe98c93cae0b8834dce062fd09cf3b0f8a45", "filename": "src/test/compile-fail/concat_idents-gate2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fconcat_idents-gate2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fconcat_idents-gate2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconcat_idents-gate2.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-concat_idents\n+\n const XY_1: i32 = 10;\n \n fn main() {"}, {"sha": "436244525e1c26c74be2169c27b224d45df5c4b8", "filename": "src/test/compile-fail/const-fn-stability.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fconst-fn-stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fconst-fn-stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-fn-stability.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-const_fn\n+\n // Test use of const fn without feature gate.\n \n const fn foo() -> usize { 0 } //~ ERROR const fn is unstable"}, {"sha": "c0fb94e8c42c94202be3abc4298455973f486443", "filename": "src/test/compile-fail/feature-gate-abi.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Ffeature-gate-abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Ffeature-gate-abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-abi.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-intrinsics\n+// gate-test-platform_intrinsics\n+// gate-test-abi_vectorcall\n+\n // Functions\n extern \"rust-intrinsic\" fn f1() {} //~ ERROR intrinsics are subject to change\n extern \"platform-intrinsic\" fn f2() {} //~ ERROR platform intrinsics are experimental"}, {"sha": "dc9b4e634ab723952797879d048cdca3ff91656c", "filename": "src/test/compile-fail/feature-gate-advanced-slice-features.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Ffeature-gate-advanced-slice-features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Ffeature-gate-advanced-slice-features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-advanced-slice-features.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-advanced_slice_patterns\n+\n #![feature(slice_patterns)]\n \n fn main() {"}, {"sha": "1aabe6b87dff58107870358f47adb266823c8f66", "filename": "src/test/compile-fail/feature-gate-allow-internal-unstable-nested-macro.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Ffeature-gate-allow-internal-unstable-nested-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Ffeature-gate-allow-internal-unstable-nested-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-allow-internal-unstable-nested-macro.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-allow_internal_unstable\n+\n macro_rules! bar {\n     () => {\n         // more layers don't help:"}, {"sha": "de3521eb0f20bc8d54616b922542fb90b0b5cdf6", "filename": "src/test/compile-fail/feature-gate-assoc-type-defaults.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Ffeature-gate-assoc-type-defaults.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Ffeature-gate-assoc-type-defaults.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-assoc-type-defaults.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-associated_type_defaults\n+\n trait Foo {\n     type Bar = u8; //~ ERROR associated type defaults are unstable\n }"}, {"sha": "65d437d0c0d31861834129994b39ca5c14639f62", "filename": "src/test/compile-fail/feature-gate-box-expr.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Ffeature-gate-box-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Ffeature-gate-box-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-box-expr.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-box_syntax\n+\n // Check that `box EXPR` is feature-gated.\n //\n // See also feature-gate-placement-expr.rs"}, {"sha": "c30f3952dbfbe246fe6efd0d597eecebdc09a02f", "filename": "src/test/compile-fail/feature-gate-box-pat.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Ffeature-gate-box-pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Ffeature-gate-box-pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-box-pat.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-box_patterns\n+\n fn main() {\n     let box x = Box::new('c'); //~ ERROR box pattern syntax is experimental\n     println!(\"x: {}\", x);"}, {"sha": "7c290b3c9c2620d871faa0744a99aee03b1b8b8c", "filename": "src/test/compile-fail/feature-gate-dropck-ugeh.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Ffeature-gate-dropck-ugeh.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Ffeature-gate-dropck-ugeh.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-dropck-ugeh.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-dropck_parametricity\n+\n // Ensure that attempts to use the unsafe attribute are feature-gated.\n \n // Example adapted from RFC 1238 text (just left out the feature gate)."}, {"sha": "0bf1e93d9aace4b40420d9c10b042f84ea7cf393", "filename": "src/test/compile-fail/feature-gate-may-dangle.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Ffeature-gate-may-dangle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Ffeature-gate-may-dangle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-may-dangle.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-dropck_eyepatch\n+\n // Check that `may_dangle` is rejected if `dropck_eyepatch` feature gate is absent.\n \n #![feature(generic_param_attrs)]"}, {"sha": "e3478876763b4dcffc4eea579be871794ce181ba", "filename": "src/test/compile-fail/feature-gate-placement-expr.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Ffeature-gate-placement-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Ffeature-gate-placement-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-placement-expr.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-placement_in_syntax\n+\n // Check that `in PLACE { EXPR }` is feature-gated.\n //\n // See also feature-gate-box-expr.rs"}, {"sha": "ee4422faf3a24f3e0176488567a30e760c75e7db", "filename": "src/test/compile-fail/gated-associated_consts.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fgated-associated_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fgated-associated_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgated-associated_consts.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-associated_consts\n+\n trait MyTrait {\n     const C: bool;\n     //~^ associated constants are experimental"}, {"sha": "9a68ddb305960f959b11762128c0f61155464eb1", "filename": "src/test/compile-fail/gated-box-syntax.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fgated-box-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fgated-box-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgated-box-syntax.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -10,6 +10,8 @@\n \n // Test that the use of the box syntax is gated by `box_syntax` feature gate.\n \n+// gate-test-box_syntax\n+\n fn main() {\n     let x = box 3;\n     //~^ ERROR box expression syntax is experimental; you can call `Box::new` instead."}, {"sha": "af288a97904400eecdda6f45010f0c43fe003aa0", "filename": "src/test/compile-fail/gated-concat_idents.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fgated-concat_idents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fgated-concat_idents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgated-concat_idents.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-concat_idents\n+\n fn main() {\n     concat_idents!(a, b); //~ ERROR `concat_idents` is not stable enough\n }"}, {"sha": "d34057e290eba384f25fc95ebcbd38e28c08e5f5", "filename": "src/test/compile-fail/gated-link-args.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fgated-link-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fgated-link-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgated-link-args.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -11,6 +11,8 @@\n // Test that `#[link_args]` attribute is gated by `link_args`\n // feature gate.\n \n+// gate-test-link_args\n+\n #[link_args = \"aFdEfSeVEEE\"]\n extern {}\n //~^ ERROR the `link_args` attribute is not portable across platforms"}, {"sha": "681824ae71dd066f425716d8e03ca138a3329186", "filename": "src/test/compile-fail/gated-link-llvm-intrinsics.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fgated-link-llvm-intrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fgated-link-llvm-intrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgated-link-llvm-intrinsics.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-link_llvm_intrinsics\n+\n extern {\n     #[link_name = \"llvm.sqrt.f32\"]\n     fn sqrt(x: f32) -> f32;"}, {"sha": "66b9c2e56705f47c51e891ec47319259e7bfe1ef", "filename": "src/test/compile-fail/gated-no-core.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fgated-no-core.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fgated-no-core.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgated-no-core.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-no_core\n+\n #![no_core] //~ ERROR no_core is experimental\n \n fn main() {}"}, {"sha": "1dff22839ad87a24bd259eeeefb30f0ad0e67dd6", "filename": "src/test/compile-fail/gated-non-ascii-idents.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fgated-non-ascii-idents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fgated-non-ascii-idents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgated-non-ascii-idents.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-non_ascii_idents\n+\n extern crate core as b\u00e4z; //~ ERROR non-ascii idents\n \n use f\u00f6\u00f6::bar; //~ ERROR non-ascii idents"}, {"sha": "8d185d183b419228369ea46b8baff849c7260bf2", "filename": "src/test/compile-fail/gated-plugin_registrar.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fgated-plugin_registrar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fgated-plugin_registrar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgated-plugin_registrar.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-plugin_registrar\n+\n // Test that `#[plugin_registrar]` attribute is gated by `plugin_registrar`\n // feature gate.\n "}, {"sha": "02db8a71d5340469a856b71e3d3f8398577b9fdf", "filename": "src/test/compile-fail/gated-target_feature.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fgated-target_feature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fgated-target_feature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgated-target_feature.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-target_feature\n+\n #[target_feature = \"+sse2\"]\n //~^ the `#[target_feature]` attribute is an experimental feature\n fn foo() {}"}, {"sha": "b02ce9b7ecb81d581492b46b7503648e64bee3a3", "filename": "src/test/compile-fail/gated-thread-local.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fgated-thread-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fgated-thread-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgated-thread-local.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-thread_local\n+\n // Test that `#[thread_local]` attribute is gated by `thread_local`\n // feature gate.\n //"}, {"sha": "0b85b19f176d75cb7bb7d9e946012ff239399c78", "filename": "src/test/compile-fail/gated-trace_macros.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fgated-trace_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fgated-trace_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgated-trace_macros.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-trace_macros\n \n fn main() {\n     trace_macros!(true); //~ ERROR: `trace_macros` is not stable"}, {"sha": "d3bd810ceb2b439100018e9ab621cf1c3e6d4e7f", "filename": "src/test/compile-fail/i128-feature-2.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fi128-feature-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fi128-feature-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fi128-feature-2.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -7,6 +7,9 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n+\n+// gate-test-i128_type\n+\n fn test1() -> i128 { //~ ERROR 128-bit type is unstable\n     0\n }"}, {"sha": "e94fd14a4216322664ba3188f2e251853f3e47de", "filename": "src/test/compile-fail/i128-feature.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fi128-feature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fi128-feature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fi128-feature.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -7,6 +7,9 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n+\n+// gate-test-i128_type\n+\n fn test2() {\n     0i128; //~ ERROR 128-bit integers are not stable\n }"}, {"sha": "f171b6becc4b754270b333522c1dff8f11453676", "filename": "src/test/compile-fail/impl-trait/feature-gate.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fimpl-trait%2Ffeature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fimpl-trait%2Ffeature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimpl-trait%2Ffeature-gate.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-conservative_impl_trait\n+\n fn foo() -> impl Fn() { || {} }\n //~^ ERROR `impl Trait` is experimental\n "}, {"sha": "bb6fb9e356352d042dfd3be4aac660afaedbe63e", "filename": "src/test/compile-fail/link-cfg-gated.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Flink-cfg-gated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Flink-cfg-gated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flink-cfg-gated.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-link_cfg\n+\n #[link(name = \"foo\", cfg(foo))]\n //~^ ERROR: is feature gated\n extern {}"}, {"sha": "1cf208f0215889666cad021f792b0a328ee545a6", "filename": "src/test/compile-fail/linkage1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Flinkage1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Flinkage1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flinkage1.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-linkage\n+\n extern {\n     #[linkage = \"extern_weak\"] static foo: isize;\n     //~^ ERROR: the `linkage` attribute is experimental and not portable"}, {"sha": "b9688af35dc901c2b8da92412b72c913990f9d60", "filename": "src/test/compile-fail/log-syntax-gate.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Flog-syntax-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Flog-syntax-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flog-syntax-gate.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-log_syntax\n+\n fn main() {\n     log_syntax!() //~ ERROR `log_syntax!` is not stable enough\n }"}, {"sha": "dcbe7eefee52c7004aea875cd588e4f7e9e06902", "filename": "src/test/compile-fail/log-syntax-gate2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Flog-syntax-gate2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Flog-syntax-gate2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flog-syntax-gate2.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-log_syntax\n+\n fn main() {\n     println!(\"{}\", log_syntax!()); //~ ERROR `log_syntax!` is not stable\n }"}, {"sha": "27f8fda98ab3430bce3e1c61e08a83b9de816b01", "filename": "src/test/compile-fail/no-core-gated.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fno-core-gated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fno-core-gated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-core-gated.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-no_core\n+\n #![no_core] //~ ERROR no_core is experimental\n \n fn main() {}"}, {"sha": "bd8ec16ef882678ed8da5c526ed9b9f577fc6e81", "filename": "src/test/compile-fail/numeric-fields-feature-gate.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fnumeric-fields-feature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fnumeric-fields-feature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnumeric-fields-feature-gate.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-relaxed_adts\n+\n struct S(u8);\n \n fn main() {"}, {"sha": "1b3b978c4081118eead90465e56f2ebabe59a8d2", "filename": "src/test/compile-fail/panic-runtime/needs-gate.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fpanic-runtime%2Fneeds-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fpanic-runtime%2Fneeds-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpanic-runtime%2Fneeds-gate.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-needs_panic_runtime\n+// gate-test-panic_runtime\n+\n #![panic_runtime] //~ ERROR: is an experimental feature\n #![needs_panic_runtime] //~ ERROR: is an experimental feature\n "}, {"sha": "e81e1e30d175011c91f06d7055263e8aa8bd1a72", "filename": "src/test/compile-fail/privacy/restricted/feature-gate.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ffeature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ffeature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ffeature-gate.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-pub_restricted\n+\n pub(crate) //~ ERROR experimental\n mod foo {}\n "}, {"sha": "b51ee3d8b5ed8a7136d3b594ed094b2c87249a82", "filename": "src/test/compile-fail/rfc1445/feature-gate.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Frfc1445%2Ffeature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Frfc1445%2Ffeature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frfc1445%2Ffeature-gate.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -14,6 +14,8 @@\n \n // revisions: with_gate no_gate\n \n+// gate-test-structural_match\n+\n #![allow(dead_code)]\n #![deny(future_incompatible)]\n #![feature(rustc_attrs)]"}, {"sha": "cd37611aceda9c6bd39b32ce0d76b5aed88d6810", "filename": "src/test/compile-fail/single-derive-attr.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fsingle-derive-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fsingle-derive-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsingle-derive-attr.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-custom_derive\n+\n #[derive_Clone]\n //~^ ERROR attributes of the form `#[derive_*]` are reserved\n struct Test;"}, {"sha": "3a01ecdf9db6f71502f3776fa55b3df79de4d969", "filename": "src/test/compile-fail/specialization/specialization-feature-gate-default.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fspecialization%2Fspecialization-feature-gate-default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fspecialization%2Fspecialization-feature-gate-default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fspecialization%2Fspecialization-feature-gate-default.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -10,6 +10,8 @@\n \n // Check that specialization must be ungated to use the `default` keyword\n \n+// gate-test-specialization\n+\n trait Foo {\n     fn foo(&self);\n }"}, {"sha": "5eb48eab15e52468a38da694093aef6f72fa6d34", "filename": "src/test/compile-fail/specialization/specialization-feature-gate-overlap.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fspecialization%2Fspecialization-feature-gate-overlap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fspecialization%2Fspecialization-feature-gate-overlap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fspecialization%2Fspecialization-feature-gate-overlap.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -10,6 +10,8 @@\n \n // Check that writing an overlapping impl is not allow unless specialization is ungated.\n \n+// gate-test-specialization\n+\n trait Foo {\n     fn foo(&self);\n }"}, {"sha": "7c37abf765769c25725f16cb9169f907418d1ad6", "filename": "src/test/compile-fail/static-mut-not-constant.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fstatic-mut-not-constant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fstatic-mut-not-constant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstatic-mut-not-constant.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-drop_types_in_const\n+\n #![feature(box_syntax)]\n \n static mut a: Box<isize> = box 3;"}, {"sha": "bf4ca03069c5737ab4175a589c01d5c73b2925ae", "filename": "src/test/compile-fail/type-ascription-feature-gate.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Ftype-ascription-feature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Ftype-ascription-feature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftype-ascription-feature-gate.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-type_ascription\n+\n // Type ascription is feature gated\n \n fn main() {"}, {"sha": "0c2165871f6dbfcf8e45829ff0e82cada3e43640", "filename": "src/test/compile-fail/union/union-feature-gate.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Funion%2Funion-feature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Funion%2Funion-feature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funion%2Funion-feature-gate.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-untagged_unions\n+\n union U { //~ ERROR unions are unstable and possibly buggy\n     a: u8,\n }"}, {"sha": "63f891a2af7bf9b6491c9661a5d44b1df82c74cd", "filename": "src/test/compile-fail/windows-subsystem-gated.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fwindows-subsystem-gated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a29fab274ff72e429b9d323f204a0617d53d8e3/src%2Ftest%2Fcompile-fail%2Fwindows-subsystem-gated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fwindows-subsystem-gated.rs?ref=6a29fab274ff72e429b9d323f204a0617d53d8e3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// gate-test-windows_subsystem\n+\n #![windows_subsystem = \"console\"]\n //~^ ERROR: the windows subsystem attribute is currently unstable\n "}]}