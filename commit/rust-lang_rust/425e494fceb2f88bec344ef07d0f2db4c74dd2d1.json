{"sha": "425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyNWU0OTRmY2ViMmY4OGJlYzM0NGVmMDdkMGYyZGI0Yzc0ZGQyZDE=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-12-27T12:03:03Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-02-01T22:07:11Z"}, "message": "Remove or_patterns from INCOMPLETE_FEATURES", "tree": {"sha": "389fb2f95b34419d7a19010e9d51fb6776e59b80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/389fb2f95b34419d7a19010e9d51fb6776e59b80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "html_url": "https://github.com/rust-lang/rust/commit/425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13db6501c7273cd1997ce20e15106f362e5613c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/13db6501c7273cd1997ce20e15106f362e5613c4", "html_url": "https://github.com/rust-lang/rust/commit/13db6501c7273cd1997ce20e15106f362e5613c4"}], "stats": {"total": 402, "additions": 154, "deletions": 248}, "files": [{"sha": "0252d88e73889a51c75408f6acdbc7eef7193993", "filename": "src/librustc_feature/active.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Flibrustc_feature%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Flibrustc_feature%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_feature%2Factive.rs?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -556,7 +556,6 @@ pub const INCOMPLETE_FEATURES: &[Symbol] = &[\n     sym::impl_trait_in_bindings,\n     sym::generic_associated_types,\n     sym::const_generics,\n-    sym::or_patterns,\n     sym::let_chains,\n     sym::raw_dylib,\n     sym::const_trait_impl,"}, {"sha": "f3d2d1bb58d8f67984d3096f1c6b8bc7b4385536", "filename": "src/test/ui/lint/issue-54538-unused-parens-lint.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2Flint%2Fissue-54538-unused-parens-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2Flint%2Fissue-54538-unused-parens-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-54538-unused-parens-lint.rs?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -1,7 +1,6 @@\n #![feature(box_patterns, stmt_expr_attributes)]\n \n #![feature(or_patterns)]\n-//~^ WARN the feature `or_patterns` is incomplete\n \n #![allow(ellipsis_inclusive_range_patterns)]\n #![allow(unreachable_patterns)]"}, {"sha": "b31ad95b191c986c1e1711764113b4a97a062587", "filename": "src/test/ui/lint/issue-54538-unused-parens-lint.stderr", "status": "modified", "additions": 25, "deletions": 33, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2Flint%2Fissue-54538-unused-parens-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2Flint%2Fissue-54538-unused-parens-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-54538-unused-parens-lint.stderr?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -1,157 +1,149 @@\n-warning: the feature `or_patterns` is incomplete and may cause the compiler to crash\n-  --> $DIR/issue-54538-unused-parens-lint.rs:3:12\n-   |\n-LL | #![feature(or_patterns)]\n-   |            ^^^^^^^^^^^\n-   |\n-   = note: `#[warn(incomplete_features)]` on by default\n-\n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:12:9\n+  --> $DIR/issue-54538-unused-parens-lint.rs:11:9\n    |\n LL |     let (a) = 0;\n    |         ^^^ help: remove these parentheses\n    |\n note: the lint level is defined here\n-  --> $DIR/issue-54538-unused-parens-lint.rs:9:9\n+  --> $DIR/issue-54538-unused-parens-lint.rs:8:9\n    |\n LL | #![deny(unused_parens)]\n    |         ^^^^^^^^^^^^^\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:13:9\n+  --> $DIR/issue-54538-unused-parens-lint.rs:12:9\n    |\n LL |     for (a) in 0..1 {}\n    |         ^^^ help: remove these parentheses\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:14:12\n+  --> $DIR/issue-54538-unused-parens-lint.rs:13:12\n    |\n LL |     if let (a) = 0 {}\n    |            ^^^ help: remove these parentheses\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:15:15\n+  --> $DIR/issue-54538-unused-parens-lint.rs:14:15\n    |\n LL |     while let (a) = 0 {}\n    |               ^^^ help: remove these parentheses\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:16:12\n+  --> $DIR/issue-54538-unused-parens-lint.rs:15:12\n    |\n LL |     fn foo((a): u8) {}\n    |            ^^^ help: remove these parentheses\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:17:14\n+  --> $DIR/issue-54538-unused-parens-lint.rs:16:14\n    |\n LL |     let _ = |(a): u8| 0;\n    |              ^^^ help: remove these parentheses\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:45:12\n+  --> $DIR/issue-54538-unused-parens-lint.rs:44:12\n    |\n LL |     if let (0 | 1) = 0 {}\n    |            ^^^^^^^ help: remove these parentheses\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:46:13\n+  --> $DIR/issue-54538-unused-parens-lint.rs:45:13\n    |\n LL |     if let ((0 | 1),) = (0,) {}\n    |             ^^^^^^^ help: remove these parentheses\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:47:13\n+  --> $DIR/issue-54538-unused-parens-lint.rs:46:13\n    |\n LL |     if let [(0 | 1)] = [0] {}\n    |             ^^^^^^^ help: remove these parentheses\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:48:16\n+  --> $DIR/issue-54538-unused-parens-lint.rs:47:16\n    |\n LL |     if let 0 | (1 | 2) = 0 {}\n    |                ^^^^^^^ help: remove these parentheses\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:50:15\n+  --> $DIR/issue-54538-unused-parens-lint.rs:49:15\n    |\n LL |     if let TS((0 | 1)) = TS(0) {}\n    |               ^^^^^^^ help: remove these parentheses\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:52:20\n+  --> $DIR/issue-54538-unused-parens-lint.rs:51:20\n    |\n LL |     if let NS { f: (0 | 1) } = (NS { f: 0 }) {}\n    |                    ^^^^^^^ help: remove these parentheses\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:62:9\n+  --> $DIR/issue-54538-unused-parens-lint.rs:61:9\n    |\n LL |         (_) => {}\n    |         ^^^ help: remove these parentheses\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:63:9\n+  --> $DIR/issue-54538-unused-parens-lint.rs:62:9\n    |\n LL |         (y) => {}\n    |         ^^^ help: remove these parentheses\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:64:9\n+  --> $DIR/issue-54538-unused-parens-lint.rs:63:9\n    |\n LL |         (ref r) => {}\n    |         ^^^^^^^ help: remove these parentheses\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:65:9\n+  --> $DIR/issue-54538-unused-parens-lint.rs:64:9\n    |\n LL |         (e @ 1...2) => {}\n    |         ^^^^^^^^^^^ help: remove these parentheses\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:71:9\n+  --> $DIR/issue-54538-unused-parens-lint.rs:70:9\n    |\n LL |         (e @ &(1...2)) => {}\n    |         ^^^^^^^^^^^^^^ help: remove these parentheses\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:72:10\n+  --> $DIR/issue-54538-unused-parens-lint.rs:71:10\n    |\n LL |         &(_) => {}\n    |          ^^^ help: remove these parentheses\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:83:9\n+  --> $DIR/issue-54538-unused-parens-lint.rs:82:9\n    |\n LL |         (_) => {}\n    |         ^^^ help: remove these parentheses\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:84:9\n+  --> $DIR/issue-54538-unused-parens-lint.rs:83:9\n    |\n LL |         (y) => {}\n    |         ^^^ help: remove these parentheses\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:85:9\n+  --> $DIR/issue-54538-unused-parens-lint.rs:84:9\n    |\n LL |         (ref r) => {}\n    |         ^^^^^^^ help: remove these parentheses\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:86:9\n+  --> $DIR/issue-54538-unused-parens-lint.rs:85:9\n    |\n LL |         (e @ 1..=2) => {}\n    |         ^^^^^^^^^^^ help: remove these parentheses\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:92:9\n+  --> $DIR/issue-54538-unused-parens-lint.rs:91:9\n    |\n LL |         (e @ &(1..=2)) => {}\n    |         ^^^^^^^^^^^^^^ help: remove these parentheses\n \n error: unnecessary parentheses around pattern\n-  --> $DIR/issue-54538-unused-parens-lint.rs:93:10\n+  --> $DIR/issue-54538-unused-parens-lint.rs:92:10\n    |\n LL |         &(_) => {}\n    |          ^^^ help: remove these parentheses"}, {"sha": "726e17b7ec226f310b50afda782baf8b4fad1d08", "filename": "src/test/ui/or-patterns/already-bound-name.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Falready-bound-name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Falready-bound-name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Falready-bound-name.rs?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -2,7 +2,6 @@\n // correctly accounts for or-patterns.\n \n #![feature(or_patterns)]\n-//~^ WARN the feature `or_patterns` is incomplete\n \n enum E<T> { A(T, T), B(T) }\n "}, {"sha": "9924b0d7f72eb806ed447413ba4d3ea217eb0430", "filename": "src/test/ui/or-patterns/already-bound-name.stderr", "status": "modified", "additions": 15, "deletions": 23, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Falready-bound-name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Falready-bound-name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Falready-bound-name.stderr?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -1,97 +1,89 @@\n error[E0416]: identifier `a` is bound more than once in the same pattern\n-  --> $DIR/already-bound-name.rs:12:13\n+  --> $DIR/already-bound-name.rs:11:13\n    |\n LL |     let (a, a) = (0, 1); // Standard duplication without an or-pattern.\n    |             ^ used in a pattern more than once\n \n error[E0416]: identifier `a` is bound more than once in the same pattern\n-  --> $DIR/already-bound-name.rs:15:15\n+  --> $DIR/already-bound-name.rs:14:15\n    |\n LL |     let (a, A(a, _) | B(a)) = (0, A(1, 2));\n    |               ^ used in a pattern more than once\n \n error[E0416]: identifier `a` is bound more than once in the same pattern\n-  --> $DIR/already-bound-name.rs:15:25\n+  --> $DIR/already-bound-name.rs:14:25\n    |\n LL |     let (a, A(a, _) | B(a)) = (0, A(1, 2));\n    |                         ^ used in a pattern more than once\n \n error[E0416]: identifier `a` is bound more than once in the same pattern\n-  --> $DIR/already-bound-name.rs:19:26\n+  --> $DIR/already-bound-name.rs:18:26\n    |\n LL |     let (A(a, _) | B(a), a) = (A(0, 1), 2);\n    |                          ^ used in a pattern more than once\n \n error[E0416]: identifier `a` is bound more than once in the same pattern\n-  --> $DIR/already-bound-name.rs:22:14\n+  --> $DIR/already-bound-name.rs:21:14\n    |\n LL |     let A(a, a) | B(a) = A(0, 1);\n    |              ^ used in a pattern more than once\n \n error[E0416]: identifier `a` is bound more than once in the same pattern\n-  --> $DIR/already-bound-name.rs:25:21\n+  --> $DIR/already-bound-name.rs:24:21\n    |\n LL |     let B(a) | A(a, a) = A(0, 1);\n    |                     ^ used in a pattern more than once\n \n error[E0416]: identifier `a` is bound more than once in the same pattern\n-  --> $DIR/already-bound-name.rs:29:21\n+  --> $DIR/already-bound-name.rs:28:21\n    |\n LL |         B(a) | A(a, a) => {} // Let's ensure `match` has no funny business.\n    |                     ^ used in a pattern more than once\n \n error[E0416]: identifier `a` is bound more than once in the same pattern\n-  --> $DIR/already-bound-name.rs:33:36\n+  --> $DIR/already-bound-name.rs:32:36\n    |\n LL |     let B(A(a, _) | B(a)) | A(a, A(a, _) | B(a)) = B(B(1));\n    |                                    ^ used in a pattern more than once\n \n error[E0416]: identifier `a` is bound more than once in the same pattern\n-  --> $DIR/already-bound-name.rs:33:46\n+  --> $DIR/already-bound-name.rs:32:46\n    |\n LL |     let B(A(a, _) | B(a)) | A(a, A(a, _) | B(a)) = B(B(1));\n    |                                              ^ used in a pattern more than once\n \n error[E0416]: identifier `a` is bound more than once in the same pattern\n-  --> $DIR/already-bound-name.rs:38:36\n+  --> $DIR/already-bound-name.rs:37:36\n    |\n LL |     let B(_) | A(A(a, _) | B(a), A(a, _) | B(a)) = B(B(1));\n    |                                    ^ used in a pattern more than once\n \n error[E0416]: identifier `a` is bound more than once in the same pattern\n-  --> $DIR/already-bound-name.rs:38:46\n+  --> $DIR/already-bound-name.rs:37:46\n    |\n LL |     let B(_) | A(A(a, _) | B(a), A(a, _) | B(a)) = B(B(1));\n    |                                              ^ used in a pattern more than once\n \n error[E0408]: variable `a` is not bound in all patterns\n-  --> $DIR/already-bound-name.rs:38:9\n+  --> $DIR/already-bound-name.rs:37:9\n    |\n LL |     let B(_) | A(A(a, _) | B(a), A(a, _) | B(a)) = B(B(1));\n    |         ^^^^ pattern doesn't bind `a`        - variable not in all patterns\n \n error[E0416]: identifier `a` is bound more than once in the same pattern\n-  --> $DIR/already-bound-name.rs:43:49\n+  --> $DIR/already-bound-name.rs:42:49\n    |\n LL |     let B(A(a, _) | B(a)) | A(A(a, _) | B(a), A(a, _) | B(a)) = B(B(1));\n    |                                                 ^ used in a pattern more than once\n \n error[E0416]: identifier `a` is bound more than once in the same pattern\n-  --> $DIR/already-bound-name.rs:43:59\n+  --> $DIR/already-bound-name.rs:42:59\n    |\n LL |     let B(A(a, _) | B(a)) | A(A(a, _) | B(a), A(a, _) | B(a)) = B(B(1));\n    |                                                           ^ used in a pattern more than once\n \n-warning: the feature `or_patterns` is incomplete and may cause the compiler to crash\n-  --> $DIR/already-bound-name.rs:4:12\n-   |\n-LL | #![feature(or_patterns)]\n-   |            ^^^^^^^^^^^\n-   |\n-   = note: `#[warn(incomplete_features)]` on by default\n-\n error[E0308]: mismatched types\n-  --> $DIR/already-bound-name.rs:33:31\n+  --> $DIR/already-bound-name.rs:32:31\n    |\n LL |     let B(A(a, _) | B(a)) | A(a, A(a, _) | B(a)) = B(B(1));\n    |                               ^                    ------- this expression has type `E<E<{integer}>>`"}, {"sha": "ec71afed872bae742d4b5adb436a942424c0b24f", "filename": "src/test/ui/or-patterns/consistent-bindings.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Fconsistent-bindings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Fconsistent-bindings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fconsistent-bindings.rs?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -3,7 +3,6 @@\n // edition:2018\n \n #![feature(or_patterns)]\n-//~^ WARN the feature `or_patterns` is incomplete\n \n fn main() {\n     // One level:"}, {"sha": "bb8e90af5f2027ab9ae78ac2ca01e21e858f0b32", "filename": "src/test/ui/or-patterns/consistent-bindings.stderr", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Fconsistent-bindings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Fconsistent-bindings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fconsistent-bindings.stderr?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -1,13 +1,5 @@\n-warning: the feature `or_patterns` is incomplete and may cause the compiler to crash\n-  --> $DIR/consistent-bindings.rs:5:12\n-   |\n-LL | #![feature(or_patterns)]\n-   |            ^^^^^^^^^^^\n-   |\n-   = note: `#[warn(incomplete_features)]` on by default\n-\n error[E0308]: mismatched types\n-  --> $DIR/consistent-bindings.rs:44:9\n+  --> $DIR/consistent-bindings.rs:43:9\n    |\n LL |     let () = 0;\n    |         ^^ expected integer, found `()`"}, {"sha": "2e8baf978e2518b1fafc166a80aec4cd862fea22", "filename": "src/test/ui/or-patterns/exhaustiveness-non-exhaustive.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-non-exhaustive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-non-exhaustive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-non-exhaustive.rs?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -1,14 +1,11 @@\n #![feature(or_patterns)]\n-\n-#![allow(incomplete_features)]\n #![deny(unreachable_patterns)]\n \n // We wrap patterns in a tuple because top-level or-patterns are special-cased for now.\n fn main() {\n     // Get the fatal error out of the way\n     match (0u8,) {\n-        (0 | _,) => {}\n-        //~^ ERROR or-patterns are not fully implemented yet\n+        (0 | _,) => {} //~^ ERROR or-patterns are not fully implemented yet\n     }\n \n     match (0u8, 0u8) {\n@@ -17,7 +14,7 @@ fn main() {\n     }\n     match ((0u8,),) {\n         //~^ ERROR non-exhaustive patterns: `((4u8..=std::u8::MAX))`\n-        ((0 | 1,) | (2 | 3,),) => {},\n+        ((0 | 1,) | (2 | 3,),) => {}\n     }\n     match (Some(0u8),) {\n         //~^ ERROR non-exhaustive patterns: `(Some(2u8..=std::u8::MAX))`"}, {"sha": "7fbd846a22f2b12c5ee99ed74e226718811b7629", "filename": "src/test/ui/or-patterns/exhaustiveness-non-exhaustive.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-non-exhaustive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-non-exhaustive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-non-exhaustive.stderr?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -1,29 +1,29 @@\n error[E0004]: non-exhaustive patterns: `(2u8..=std::u8::MAX, _)` not covered\n-  --> $DIR/exhaustiveness-non-exhaustive.rs:14:11\n+  --> $DIR/exhaustiveness-non-exhaustive.rs:13:11\n    |\n LL |     match (0u8, 0u8) {\n    |           ^^^^^^^^^^ pattern `(2u8..=std::u8::MAX, _)` not covered\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n error[E0004]: non-exhaustive patterns: `((4u8..=std::u8::MAX))` not covered\n-  --> $DIR/exhaustiveness-non-exhaustive.rs:18:11\n+  --> $DIR/exhaustiveness-non-exhaustive.rs:17:11\n    |\n LL |     match ((0u8,),) {\n    |           ^^^^^^^^^ pattern `((4u8..=std::u8::MAX))` not covered\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n error[E0004]: non-exhaustive patterns: `(Some(2u8..=std::u8::MAX))` not covered\n-  --> $DIR/exhaustiveness-non-exhaustive.rs:22:11\n+  --> $DIR/exhaustiveness-non-exhaustive.rs:21:11\n    |\n LL |     match (Some(0u8),) {\n    |           ^^^^^^^^^^^^ pattern `(Some(2u8..=std::u8::MAX))` not covered\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n error: or-patterns are not fully implemented yet\n-  --> $DIR/exhaustiveness-non-exhaustive.rs:10:10\n+  --> $DIR/exhaustiveness-non-exhaustive.rs:9:10\n    |\n LL |         (0 | _,) => {}\n    |          ^^^^^"}, {"sha": "9b62810d29db9bc4938e2853731bc951f177d951", "filename": "src/test/ui/or-patterns/exhaustiveness-pass.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-pass.rs?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -1,14 +1,11 @@\n #![feature(or_patterns)]\n-\n-#![allow(incomplete_features)]\n #![deny(unreachable_patterns)]\n \n // We wrap patterns in a tuple because top-level or-patterns are special-cased for now.\n fn main() {\n     // Get the fatal error out of the way\n     match (0,) {\n-        (0 | _,) => {}\n-        //~^ ERROR or-patterns are not fully implemented yet\n+        (0 | _,) => {} //~^ ERROR or-patterns are not fully implemented yet\n     }\n \n     match (0,) {\n@@ -27,11 +24,11 @@ fn main() {\n         (Some(2..=255),) => {}\n     }\n     match ((0,),) {\n-        ((0 | 1,) | (2 | 3,),) => {},\n-        ((_,),) => {},\n+        ((0 | 1,) | (2 | 3,),) => {}\n+        ((_,),) => {}\n     }\n     match (&[0u8][..],) {\n-        ([] | [0 | 1..=255] | [_, ..],) => {},\n+        ([] | [0 | 1..=255] | [_, ..],) => {}\n     }\n \n     match ((0, 0),) {"}, {"sha": "dc5a4186ac7004d4be975e8f0075bd68994250db", "filename": "src/test/ui/or-patterns/exhaustiveness-pass.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-pass.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-pass.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-pass.stderr?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -1,5 +1,5 @@\n error: or-patterns are not fully implemented yet\n-  --> $DIR/exhaustiveness-pass.rs:10:10\n+  --> $DIR/exhaustiveness-pass.rs:9:10\n    |\n LL |         (0 | _,) => {}\n    |          ^^^^^"}, {"sha": "dd1c16f5000288bc0fe6746f770f5b7c1a60f8ea", "filename": "src/test/ui/or-patterns/exhaustiveness-unreachable-pattern.rs", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.rs?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -1,14 +1,11 @@\n #![feature(or_patterns)]\n-\n-#![allow(incomplete_features)]\n #![deny(unreachable_patterns)]\n \n // We wrap patterns in a tuple because top-level or-patterns are special-cased for now.\n fn main() {\n     // Get the fatal error out of the way\n     match (0u8,) {\n-        (0 | _,) => {}\n-        //~^ ERROR or-patterns are not fully implemented yet\n+        (0 | _,) => {} //~^ ERROR or-patterns are not fully implemented yet\n     }\n \n     match (0u8,) {\n@@ -29,9 +26,9 @@ fn main() {\n     }\n     match (0u8, 0u8) {\n         (1 | 2, 3 | 4) => {}\n-        (1, 3) => {} //~ ERROR unreachable pattern\n-        (1, 4) => {} //~ ERROR unreachable pattern\n-        (2, 4) => {} //~ ERROR unreachable pattern\n+        (1, 3) => {}     //~ ERROR unreachable pattern\n+        (1, 4) => {}     //~ ERROR unreachable pattern\n+        (2, 4) => {}     //~ ERROR unreachable pattern\n         (2 | 1, 4) => {} //~ ERROR unreachable pattern\n         (1, 5 | 6) => {}\n         (1, 4 | 5) => {} //~ ERROR unreachable pattern\n@@ -40,18 +37,17 @@ fn main() {\n     match (Some(0u8),) {\n         (None | Some(1 | 2),) => {}\n         (Some(1),) => {} //~ ERROR unreachable pattern\n-        (None,) => {} //~ ERROR unreachable pattern\n+        (None,) => {}    //~ ERROR unreachable pattern\n         _ => {}\n     }\n     match ((0u8,),) {\n-        ((1 | 2,) | (3 | 4,),) => {},\n-        ((1..=4,),) => {}, //~ ERROR unreachable pattern\n-        _ => {},\n+        ((1 | 2,) | (3 | 4,),) => {}\n+        ((1..=4,),) => {} //~ ERROR unreachable pattern\n+        _ => {}\n     }\n \n     match (0,) {\n-        (1\n-         | 1,) => {} //~ ERROR unreachable\n+        (1 | 1,) => {} //~ ERROR unreachable\n         _ => {}\n     }\n     match [0; 2] {"}, {"sha": "1f07c27afad9cb8a1db107c7dcab544543d85f98", "filename": "src/test/ui/or-patterns/exhaustiveness-unreachable-pattern.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.stderr?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -1,107 +1,107 @@\n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:16:9\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:15:9\n    |\n LL |         (1,) => {}\n    |         ^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:4:9\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:3:9\n    |\n LL | #![deny(unreachable_patterns)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:21:9\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:20:9\n    |\n LL |         (2,) => {}\n    |         ^^^^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:27:9\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:26:9\n    |\n LL |         (1 | 2,) => {}\n    |         ^^^^^^^^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:32:9\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:31:9\n    |\n LL |         (1, 3) => {}\n    |         ^^^^^^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:33:9\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:32:9\n    |\n LL |         (1, 4) => {}\n    |         ^^^^^^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:34:9\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:33:9\n    |\n LL |         (2, 4) => {}\n    |         ^^^^^^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:35:9\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:34:9\n    |\n LL |         (2 | 1, 4) => {}\n    |         ^^^^^^^^^^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:37:9\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:36:9\n    |\n LL |         (1, 4 | 5) => {}\n    |         ^^^^^^^^^^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:42:9\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:41:9\n    |\n LL |         (Some(1),) => {}\n    |         ^^^^^^^^^^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:43:9\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:42:9\n    |\n LL |         (None,) => {}\n    |         ^^^^^^^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:48:9\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:47:9\n    |\n LL |         ((1..=4,),) => {},\n    |         ^^^^^^^^^^^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:54:12\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:53:12\n    |\n LL |          | 1,) => {}\n    |            ^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:61:15\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:60:15\n    |\n LL |             | 0] => {}\n    |               ^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:59:15\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:58:15\n    |\n LL |             | 0\n    |               ^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:69:10\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:68:10\n    |\n LL |         [1\n    |          ^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:75:14\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:74:14\n    |\n LL |         Some(0\n    |              ^\n \n error: or-patterns are not fully implemented yet\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:10:10\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:9:10\n    |\n LL |         (0 | _,) => {}\n    |          ^^^^^"}, {"sha": "d21cf3dc72c99f59d9b25466f48a9357f1fb4aa6", "filename": "src/test/ui/or-patterns/feature-gate-const-fn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Ffeature-gate-const-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Ffeature-gate-const-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Ffeature-gate-const-fn.rs?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -1,5 +1,4 @@\n #![feature(or_patterns)]\n-#![allow(incomplete_features)]\n \n const fn foo((Ok(a) | Err(a)): Result<i32, i32>) {\n     //~^ ERROR or-pattern is not allowed in a `const fn`"}, {"sha": "112bc625172600c361ebb2048acdf25e23f718a7", "filename": "src/test/ui/or-patterns/feature-gate-const-fn.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Ffeature-gate-const-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Ffeature-gate-const-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Ffeature-gate-const-fn.stderr?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -1,5 +1,5 @@\n error[E0658]: or-pattern is not allowed in a `const fn`\n-  --> $DIR/feature-gate-const-fn.rs:4:15\n+  --> $DIR/feature-gate-const-fn.rs:3:15\n    |\n LL | const fn foo((Ok(a) | Err(a)): Result<i32, i32>) {\n    |               ^^^^^^^^^^^^^^\n@@ -8,7 +8,7 @@ LL | const fn foo((Ok(a) | Err(a)): Result<i32, i32>) {\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: or-pattern is not allowed in a `const fn`\n-  --> $DIR/feature-gate-const-fn.rs:7:9\n+  --> $DIR/feature-gate-const-fn.rs:6:9\n    |\n LL |     let Ok(y) | Err(y) = x;\n    |         ^^^^^^^^^^^^^^\n@@ -17,7 +17,7 @@ LL |     let Ok(y) | Err(y) = x;\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: or-pattern is not allowed in a `const`\n-  --> $DIR/feature-gate-const-fn.rs:13:9\n+  --> $DIR/feature-gate-const-fn.rs:12:9\n    |\n LL |     let Ok(y) | Err(y) = x;\n    |         ^^^^^^^^^^^^^^\n@@ -26,7 +26,7 @@ LL |     let Ok(y) | Err(y) = x;\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: or-pattern is not allowed in a `static`\n-  --> $DIR/feature-gate-const-fn.rs:19:9\n+  --> $DIR/feature-gate-const-fn.rs:18:9\n    |\n LL |     let Ok(y) | Err(y) = x;\n    |         ^^^^^^^^^^^^^^\n@@ -35,7 +35,7 @@ LL |     let Ok(y) | Err(y) = x;\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: or-pattern is not allowed in a `static mut`\n-  --> $DIR/feature-gate-const-fn.rs:25:9\n+  --> $DIR/feature-gate-const-fn.rs:24:9\n    |\n LL |     let Ok(y) | Err(y) = x;\n    |         ^^^^^^^^^^^^^^\n@@ -44,7 +44,7 @@ LL |     let Ok(y) | Err(y) = x;\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: or-pattern is not allowed in a `const`\n-  --> $DIR/feature-gate-const-fn.rs:32:13\n+  --> $DIR/feature-gate-const-fn.rs:31:13\n    |\n LL |         let Ok(y) | Err(y) = x;\n    |             ^^^^^^^^^^^^^^"}, {"sha": "28b5f0c02fef4beeea20a54676eb00f065462eb4", "filename": "src/test/ui/or-patterns/inconsistent-modes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Finconsistent-modes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Finconsistent-modes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Finconsistent-modes.rs?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -1,8 +1,6 @@\n // This test ensures that or patterns require binding mode consistency across arms.\n \n #![feature(or_patterns)]\n-//~^ WARN the feature `or_patterns` is incomplete\n-\n #![allow(non_camel_case_types)]\n fn main() {\n     // One level:"}, {"sha": "c329f90596091a32bdfb405e0101ea41e03196ba", "filename": "src/test/ui/or-patterns/inconsistent-modes.stderr", "status": "modified", "additions": 9, "deletions": 17, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Finconsistent-modes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Finconsistent-modes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Finconsistent-modes.stderr?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -1,63 +1,55 @@\n error[E0409]: variable `a` is bound in inconsistent ways within the same match arm\n-  --> $DIR/inconsistent-modes.rs:9:25\n+  --> $DIR/inconsistent-modes.rs:7:25\n    |\n LL |     let Ok(a) | Err(ref a): Result<&u8, u8> = Ok(&0);\n    |            -            ^ bound in different ways\n    |            |\n    |            first binding\n \n error[E0409]: variable `a` is bound in inconsistent ways within the same match arm\n-  --> $DIR/inconsistent-modes.rs:11:29\n+  --> $DIR/inconsistent-modes.rs:9:29\n    |\n LL |     let Ok(ref mut a) | Err(a): Result<u8, &mut u8> = Ok(0);\n    |                    -        ^ bound in different ways\n    |                    |\n    |                    first binding\n \n error[E0409]: variable `a` is bound in inconsistent ways within the same match arm\n-  --> $DIR/inconsistent-modes.rs:13:33\n+  --> $DIR/inconsistent-modes.rs:11:33\n    |\n LL |     let Ok(ref a) | Err(ref mut a): Result<&u8, &mut u8> = Ok(&0);\n    |                - first binding  ^ bound in different ways\n \n error[E0409]: variable `a` is bound in inconsistent ways within the same match arm\n-  --> $DIR/inconsistent-modes.rs:16:39\n+  --> $DIR/inconsistent-modes.rs:14:39\n    |\n LL |     let Ok((ref a, b)) | Err((ref mut a, ref b)) = Ok((0, &0));\n    |                 - first binding       ^ bound in different ways\n \n error[E0409]: variable `b` is bound in inconsistent ways within the same match arm\n-  --> $DIR/inconsistent-modes.rs:16:46\n+  --> $DIR/inconsistent-modes.rs:14:46\n    |\n LL |     let Ok((ref a, b)) | Err((ref mut a, ref b)) = Ok((0, &0));\n    |                    - first binding           ^ bound in different ways\n \n error[E0409]: variable `a` is bound in inconsistent ways within the same match arm\n-  --> $DIR/inconsistent-modes.rs:22:38\n+  --> $DIR/inconsistent-modes.rs:20:38\n    |\n LL |     let Ok(Ok(a) | Err(a)) | Err(ref a) = Err(0);\n    |                        -             ^ bound in different ways\n    |                        |\n    |                        first binding\n \n error[E0409]: variable `a` is bound in inconsistent ways within the same match arm\n-  --> $DIR/inconsistent-modes.rs:26:34\n+  --> $DIR/inconsistent-modes.rs:24:34\n    |\n LL |     let Ok([ Ok((Ok(ref a) | Err(a),)) | Err(a) ]) | Err(a) = Err(&1);\n    |                         -        ^ bound in different ways\n    |                         |\n    |                         first binding\n \n-warning: the feature `or_patterns` is incomplete and may cause the compiler to crash\n-  --> $DIR/inconsistent-modes.rs:3:12\n-   |\n-LL | #![feature(or_patterns)]\n-   |            ^^^^^^^^^^^\n-   |\n-   = note: `#[warn(incomplete_features)]` on by default\n-\n error[E0308]: mismatched types\n-  --> $DIR/inconsistent-modes.rs:13:25\n+  --> $DIR/inconsistent-modes.rs:11:25\n    |\n LL |     let Ok(ref a) | Err(ref mut a): Result<&u8, &mut u8> = Ok(&0);\n    |                         ^^^^^^^^^   -------------------- expected due to this\n@@ -68,7 +60,7 @@ LL |     let Ok(ref a) | Err(ref mut a): Result<&u8, &mut u8> = Ok(&0);\n               found type `&mut &mut u8`\n \n error[E0308]: mismatched types\n-  --> $DIR/inconsistent-modes.rs:16:31\n+  --> $DIR/inconsistent-modes.rs:14:31\n    |\n LL |     let Ok((ref a, b)) | Err((ref mut a, ref b)) = Ok((0, &0));\n    |                               ^^^^^^^^^            ----------- this expression has type `std::result::Result<({integer}, &{integer}), (_, _)>`"}, {"sha": "67cf52fa8c4187bd570b9fdd97325d47d2909965", "filename": "src/test/ui/or-patterns/missing-bindings.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Fmissing-bindings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Fmissing-bindings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fmissing-bindings.rs?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -3,8 +3,6 @@\n // edition:2018\n \n #![feature(or_patterns)]\n-//~^ WARN the feature `or_patterns` is incomplete\n-\n #![allow(non_camel_case_types)]\n \n fn main() {}"}, {"sha": "57270e4412351c654b3f15fa55935646b5222cea", "filename": "src/test/ui/or-patterns/missing-bindings.stderr", "status": "modified", "additions": 26, "deletions": 34, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Fmissing-bindings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Fmissing-bindings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fmissing-bindings.stderr?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -1,5 +1,5 @@\n error[E0408]: variable `beta` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:22:9\n+  --> $DIR/missing-bindings.rs:20:9\n    |\n LL |     let alpha | beta | charlie = alpha;\n    |         ^^^^^   ----   ^^^^^^^ pattern doesn't bind `beta`\n@@ -8,167 +8,167 @@ LL |     let alpha | beta | charlie = alpha;\n    |         pattern doesn't bind `beta`\n \n error[E0408]: variable `beta` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:24:14\n+  --> $DIR/missing-bindings.rs:22:14\n    |\n LL |         Some(alpha | beta) => {}\n    |              ^^^^^   ---- variable not in all patterns\n    |              |\n    |              pattern doesn't bind `beta`\n \n error[E0408]: variable `a` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:36:19\n+  --> $DIR/missing-bindings.rs:34:19\n    |\n LL |     let A(a, _) | _ = X;\n    |           -       ^ pattern doesn't bind `a`\n    |           |\n    |           variable not in all patterns\n \n error[E0408]: variable `a` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:37:9\n+  --> $DIR/missing-bindings.rs:35:9\n    |\n LL |     let _ | B(a) = X;\n    |         ^     - variable not in all patterns\n    |         |\n    |         pattern doesn't bind `a`\n \n error[E0408]: variable `a` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:38:9\n+  --> $DIR/missing-bindings.rs:36:9\n    |\n LL |     let A(..) | B(a) = X;\n    |         ^^^^^     - variable not in all patterns\n    |         |\n    |         pattern doesn't bind `a`\n \n error[E0408]: variable `a` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:39:19\n+  --> $DIR/missing-bindings.rs:37:19\n    |\n LL |     let A(a, _) | B(_) = X;\n    |           -       ^^^^ pattern doesn't bind `a`\n    |           |\n    |           variable not in all patterns\n \n error[E0408]: variable `a` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:40:19\n+  --> $DIR/missing-bindings.rs:38:19\n    |\n LL |     let A(_, a) | B(_) = X;\n    |              -    ^^^^ pattern doesn't bind `a`\n    |              |\n    |              variable not in all patterns\n \n error[E0408]: variable `b` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:41:19\n+  --> $DIR/missing-bindings.rs:39:19\n    |\n LL |     let A(a, b) | B(a) = X;\n    |              -    ^^^^ pattern doesn't bind `b`\n    |              |\n    |              variable not in all patterns\n \n error[E0408]: variable `a` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:45:9\n+  --> $DIR/missing-bindings.rs:43:9\n    |\n LL |     let A(A(..) | B(_), _) | B(a) = Y;\n    |         ^^^^^^^^^^^^^^^^^^     - variable not in all patterns\n    |         |\n    |         pattern doesn't bind `a`\n \n error[E0408]: variable `a` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:46:11\n+  --> $DIR/missing-bindings.rs:44:11\n    |\n LL |     let A(A(..) | B(a), _) | B(A(a, _) | B(a)) = Y;\n    |           ^^^^^     - variable not in all patterns\n    |           |\n    |           pattern doesn't bind `a`\n \n error[E0408]: variable `a` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:48:21\n+  --> $DIR/missing-bindings.rs:46:21\n    |\n LL |     let A(A(a, b) | B(c), d) | B(e) = Y;\n    |             -       ^^^^ pattern doesn't bind `a`\n    |             |\n    |             variable not in all patterns\n \n error[E0408]: variable `b` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:48:21\n+  --> $DIR/missing-bindings.rs:46:21\n    |\n LL |     let A(A(a, b) | B(c), d) | B(e) = Y;\n    |                -    ^^^^ pattern doesn't bind `b`\n    |                |\n    |                variable not in all patterns\n \n error[E0408]: variable `c` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:48:11\n+  --> $DIR/missing-bindings.rs:46:11\n    |\n LL |     let A(A(a, b) | B(c), d) | B(e) = Y;\n    |           ^^^^^^^     - variable not in all patterns\n    |           |\n    |           pattern doesn't bind `c`\n \n error[E0408]: variable `a` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:48:32\n+  --> $DIR/missing-bindings.rs:46:32\n    |\n LL |     let A(A(a, b) | B(c), d) | B(e) = Y;\n    |             -                  ^^^^ pattern doesn't bind `a`\n    |             |\n    |             variable not in all patterns\n \n error[E0408]: variable `b` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:48:32\n+  --> $DIR/missing-bindings.rs:46:32\n    |\n LL |     let A(A(a, b) | B(c), d) | B(e) = Y;\n    |                -               ^^^^ pattern doesn't bind `b`\n    |                |\n    |                variable not in all patterns\n \n error[E0408]: variable `c` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:48:32\n+  --> $DIR/missing-bindings.rs:46:32\n    |\n LL |     let A(A(a, b) | B(c), d) | B(e) = Y;\n    |                       -        ^^^^ pattern doesn't bind `c`\n    |                       |\n    |                       variable not in all patterns\n \n error[E0408]: variable `d` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:48:32\n+  --> $DIR/missing-bindings.rs:46:32\n    |\n LL |     let A(A(a, b) | B(c), d) | B(e) = Y;\n    |                           -    ^^^^ pattern doesn't bind `d`\n    |                           |\n    |                           variable not in all patterns\n \n error[E0408]: variable `e` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:48:9\n+  --> $DIR/missing-bindings.rs:46:9\n    |\n LL |     let A(A(a, b) | B(c), d) | B(e) = Y;\n    |         ^^^^^^^^^^^^^^^^^^^^     - variable not in all patterns\n    |         |\n    |         pattern doesn't bind `e`\n \n error[E0408]: variable `a` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:64:29\n+  --> $DIR/missing-bindings.rs:62:29\n    |\n LL |                     Ok(a) | Err(_),\n    |                        -    ^^^^^^ pattern doesn't bind `a`\n    |                        |\n    |                        variable not in all patterns\n \n error[E0408]: variable `a` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:72:21\n+  --> $DIR/missing-bindings.rs:70:21\n    |\n LL |                     A(_, a) |\n    |                          - variable not in all patterns\n LL |                     B(b),\n    |                     ^^^^ pattern doesn't bind `a`\n \n error[E0408]: variable `b` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:71:21\n+  --> $DIR/missing-bindings.rs:69:21\n    |\n LL |                     A(_, a) |\n    |                     ^^^^^^^ pattern doesn't bind `b`\n LL |                     B(b),\n    |                       - variable not in all patterns\n \n error[E0408]: variable `a` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:75:17\n+  --> $DIR/missing-bindings.rs:73:17\n    |\n LL |                     A(_, a) |\n    |                          - variable not in all patterns\n@@ -177,7 +177,7 @@ LL |                 B(_)\n    |                 ^^^^ pattern doesn't bind `a`\n \n error[E0408]: variable `b` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:75:17\n+  --> $DIR/missing-bindings.rs:73:17\n    |\n LL |                     B(b),\n    |                       - variable not in all patterns\n@@ -186,7 +186,7 @@ LL |                 B(_)\n    |                 ^^^^ pattern doesn't bind `b`\n \n error[E0408]: variable `a` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:79:13\n+  --> $DIR/missing-bindings.rs:77:13\n    |\n LL |                 B(Ok(a) | Err(a))\n    |                               - variable not in all patterns\n@@ -198,7 +198,7 @@ LL |             V3(c),\n    |             ^^^^^ pattern doesn't bind `a`\n \n error[E0408]: variable `b` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:60:13\n+  --> $DIR/missing-bindings.rs:58:13\n    |\n LL | /             V1(\n LL | |\n@@ -216,7 +216,7 @@ LL |               V3(c),\n    |               ^^^^^ pattern doesn't bind `b`\n \n error[E0408]: variable `c` is not bound in all patterns\n-  --> $DIR/missing-bindings.rs:60:13\n+  --> $DIR/missing-bindings.rs:58:13\n    |\n LL | /             V1(\n LL | |\n@@ -237,14 +237,6 @@ LL | |             ) |\n LL |               V3(c),\n    |                  - variable not in all patterns\n \n-warning: the feature `or_patterns` is incomplete and may cause the compiler to crash\n-  --> $DIR/missing-bindings.rs:5:12\n-   |\n-LL | #![feature(or_patterns)]\n-   |            ^^^^^^^^^^^\n-   |\n-   = note: `#[warn(incomplete_features)]` on by default\n-\n error: aborting due to 26 previous errors\n \n For more information about this error, try `rustc --explain E0408`."}, {"sha": "702c9573741e764f1eb6b488e12355669e66d995", "filename": "src/test/ui/or-patterns/multiple-pattern-typo.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Fmultiple-pattern-typo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Fmultiple-pattern-typo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fmultiple-pattern-typo.rs?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -1,5 +1,4 @@\n #![feature(or_patterns)]\n-//~^ WARN the feature `or_patterns` is incomplete and may cause the compiler to crash\n \n fn main() {\n     let x = 3;"}, {"sha": "cb32068ec0d5eb61ac2af8af6d91253877d47c47", "filename": "src/test/ui/or-patterns/multiple-pattern-typo.stderr", "status": "modified", "additions": 7, "deletions": 15, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Fmultiple-pattern-typo.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2Fmultiple-pattern-typo.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fmultiple-pattern-typo.stderr?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -1,64 +1,56 @@\n error: unexpected token `||` after pattern\n-  --> $DIR/multiple-pattern-typo.rs:8:15\n+  --> $DIR/multiple-pattern-typo.rs:7:15\n    |\n LL |         1 | 2 || 3 => (),\n    |         -     ^^ help: use a single `|` to separate multiple alternative patterns: `|`\n    |         |\n    |         while parsing this or-pattern starting here\n \n error: unexpected token `||` after pattern\n-  --> $DIR/multiple-pattern-typo.rs:13:16\n+  --> $DIR/multiple-pattern-typo.rs:12:16\n    |\n LL |         (1 | 2 || 3) => (),\n    |          -     ^^ help: use a single `|` to separate multiple alternative patterns: `|`\n    |          |\n    |          while parsing this or-pattern starting here\n \n error: unexpected token `||` after pattern\n-  --> $DIR/multiple-pattern-typo.rs:18:16\n+  --> $DIR/multiple-pattern-typo.rs:17:16\n    |\n LL |         (1 | 2 || 3,) => (),\n    |          -     ^^ help: use a single `|` to separate multiple alternative patterns: `|`\n    |          |\n    |          while parsing this or-pattern starting here\n \n error: unexpected token `||` after pattern\n-  --> $DIR/multiple-pattern-typo.rs:25:18\n+  --> $DIR/multiple-pattern-typo.rs:24:18\n    |\n LL |         TS(1 | 2 || 3) => (),\n    |            -     ^^ help: use a single `|` to separate multiple alternative patterns: `|`\n    |            |\n    |            while parsing this or-pattern starting here\n \n error: unexpected token `||` after pattern\n-  --> $DIR/multiple-pattern-typo.rs:32:23\n+  --> $DIR/multiple-pattern-typo.rs:31:23\n    |\n LL |         NS { f: 1 | 2 || 3 } => (),\n    |                 -     ^^ help: use a single `|` to separate multiple alternative patterns: `|`\n    |                 |\n    |                 while parsing this or-pattern starting here\n \n error: unexpected token `||` after pattern\n-  --> $DIR/multiple-pattern-typo.rs:37:16\n+  --> $DIR/multiple-pattern-typo.rs:36:16\n    |\n LL |         [1 | 2 || 3] => (),\n    |          -     ^^ help: use a single `|` to separate multiple alternative patterns: `|`\n    |          |\n    |          while parsing this or-pattern starting here\n \n error: unexpected token `||` after pattern\n-  --> $DIR/multiple-pattern-typo.rs:42:9\n+  --> $DIR/multiple-pattern-typo.rs:41:9\n    |\n LL |         || 1 | 2 | 3 => (),\n    |         ^^ help: use a single `|` to separate multiple alternative patterns: `|`\n \n-warning: the feature `or_patterns` is incomplete and may cause the compiler to crash\n-  --> $DIR/multiple-pattern-typo.rs:1:12\n-   |\n-LL | #![feature(or_patterns)]\n-   |            ^^^^^^^^^^^\n-   |\n-   = note: `#[warn(incomplete_features)]` on by default\n-\n error: aborting due to 7 previous errors\n "}, {"sha": "d23220056524b5b2a08df386a166dcca8a833f17", "filename": "src/test/ui/or-patterns/or-patterns-syntactic-fail.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-fail.rs?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -2,7 +2,6 @@\n // This is not a semantic test. We only test parsing.\n \n #![feature(or_patterns)]\n-//~^ WARN the feature `or_patterns` is incomplete and may cause the compiler to crash\n \n fn main() {}\n "}, {"sha": "6cbb59dc22031309d916f87fcb1b7a964e6fca1b", "filename": "src/test/ui/or-patterns/or-patterns-syntactic-fail.stderr", "status": "modified", "additions": 16, "deletions": 24, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-fail.stderr?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -1,85 +1,85 @@\n error: an or-pattern parameter must be wrapped in parenthesis\n-  --> $DIR/or-patterns-syntactic-fail.rs:28:13\n+  --> $DIR/or-patterns-syntactic-fail.rs:27:13\n    |\n LL |     fn fun1(A | B: E) {}\n    |             ^^^^^ help: wrap the pattern in parenthesis: `(A | B)`\n \n error: a leading `|` is not allowed in a parameter pattern\n-  --> $DIR/or-patterns-syntactic-fail.rs:30:13\n+  --> $DIR/or-patterns-syntactic-fail.rs:29:13\n    |\n LL |     fn fun2(| A | B: E) {}\n    |             ^ help: remove the `|`\n \n error: an or-pattern parameter must be wrapped in parenthesis\n-  --> $DIR/or-patterns-syntactic-fail.rs:30:15\n+  --> $DIR/or-patterns-syntactic-fail.rs:29:15\n    |\n LL |     fn fun2(| A | B: E) {}\n    |               ^^^^^ help: wrap the pattern in parenthesis: `(A | B)`\n \n error: a leading `|` is only allowed in a top-level pattern\n-  --> $DIR/or-patterns-syntactic-fail.rs:41:11\n+  --> $DIR/or-patterns-syntactic-fail.rs:40:11\n    |\n LL |     let ( | A | B) = E::A;\n    |           ^ help: remove the `|`\n \n error: a leading `|` is only allowed in a top-level pattern\n-  --> $DIR/or-patterns-syntactic-fail.rs:42:11\n+  --> $DIR/or-patterns-syntactic-fail.rs:41:11\n    |\n LL |     let ( | A | B,) = (E::B,);\n    |           ^ help: remove the `|`\n \n error: a leading `|` is only allowed in a top-level pattern\n-  --> $DIR/or-patterns-syntactic-fail.rs:43:11\n+  --> $DIR/or-patterns-syntactic-fail.rs:42:11\n    |\n LL |     let [ | A | B ] = [E::A];\n    |           ^ help: remove the `|`\n \n error: a leading `|` is only allowed in a top-level pattern\n-  --> $DIR/or-patterns-syntactic-fail.rs:44:13\n+  --> $DIR/or-patterns-syntactic-fail.rs:43:13\n    |\n LL |     let TS( | A | B );\n    |             ^ help: remove the `|`\n \n error: a leading `|` is only allowed in a top-level pattern\n-  --> $DIR/or-patterns-syntactic-fail.rs:45:17\n+  --> $DIR/or-patterns-syntactic-fail.rs:44:17\n    |\n LL |     let NS { f: | A | B };\n    |                 ^ help: remove the `|`\n \n error: a leading `|` is only allowed in a top-level pattern\n-  --> $DIR/or-patterns-syntactic-fail.rs:47:11\n+  --> $DIR/or-patterns-syntactic-fail.rs:46:11\n    |\n LL |     let ( || A | B) = E::A;\n    |           ^^ help: remove the `||`\n    |\n    = note: alternatives in or-patterns are separated with `|`, not `||`\n \n error: a leading `|` is only allowed in a top-level pattern\n-  --> $DIR/or-patterns-syntactic-fail.rs:48:11\n+  --> $DIR/or-patterns-syntactic-fail.rs:47:11\n    |\n LL |     let [ || A | B ] = [E::A];\n    |           ^^ help: remove the `||`\n    |\n    = note: alternatives in or-patterns are separated with `|`, not `||`\n \n error: a leading `|` is only allowed in a top-level pattern\n-  --> $DIR/or-patterns-syntactic-fail.rs:49:13\n+  --> $DIR/or-patterns-syntactic-fail.rs:48:13\n    |\n LL |     let TS( || A | B );\n    |             ^^ help: remove the `||`\n    |\n    = note: alternatives in or-patterns are separated with `|`, not `||`\n \n error: a leading `|` is only allowed in a top-level pattern\n-  --> $DIR/or-patterns-syntactic-fail.rs:50:17\n+  --> $DIR/or-patterns-syntactic-fail.rs:49:17\n    |\n LL |     let NS { f: || A | B };\n    |                 ^^ help: remove the `||`\n    |\n    = note: alternatives in or-patterns are separated with `|`, not `||`\n \n error: no rules expected the token `|`\n-  --> $DIR/or-patterns-syntactic-fail.rs:14:15\n+  --> $DIR/or-patterns-syntactic-fail.rs:13:15\n    |\n LL | macro_rules! accept_pat {\n    | ----------------------- when calling this macro\n@@ -88,24 +88,16 @@ LL | accept_pat!(p | q);\n    |               ^ no rules expected this token in macro call\n \n error: no rules expected the token `|`\n-  --> $DIR/or-patterns-syntactic-fail.rs:15:13\n+  --> $DIR/or-patterns-syntactic-fail.rs:14:13\n    |\n LL | macro_rules! accept_pat {\n    | ----------------------- when calling this macro\n ...\n LL | accept_pat!(| p | q);\n    |             ^ no rules expected this token in macro call\n \n-warning: the feature `or_patterns` is incomplete and may cause the compiler to crash\n-  --> $DIR/or-patterns-syntactic-fail.rs:4:12\n-   |\n-LL | #![feature(or_patterns)]\n-   |            ^^^^^^^^^^^\n-   |\n-   = note: `#[warn(incomplete_features)]` on by default\n-\n error[E0369]: no implementation for `E | ()`\n-  --> $DIR/or-patterns-syntactic-fail.rs:24:22\n+  --> $DIR/or-patterns-syntactic-fail.rs:23:22\n    |\n LL |     let _ = |A | B: E| ();\n    |                  ----^ -- ()\n@@ -115,7 +107,7 @@ LL |     let _ = |A | B: E| ();\n    = note: an implementation of `std::ops::BitOr` might be missing for `E`\n \n error[E0308]: mismatched types\n-  --> $DIR/or-patterns-syntactic-fail.rs:52:36\n+  --> $DIR/or-patterns-syntactic-fail.rs:51:36\n    |\n LL |     let recovery_witness: String = 0;\n    |                           ------   ^"}, {"sha": "5fe72caf9c1ff7a9c3ee401a76dd4f6ab8e86761", "filename": "src/test/ui/or-patterns/or-patterns-syntactic-pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-pass.rs?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -3,7 +3,7 @@\n \n // check-pass\n \n-#![feature(or_patterns)] //~ WARNING the feature `or_patterns` is incomplete\n+#![feature(or_patterns)]\n \n fn main() {}\n "}, {"sha": "3145a2e9f2a6edef9a25352ee7645a346a5c1e84", "filename": "src/test/ui/or-patterns/or-patterns-syntactic-pass.stderr", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/13db6501c7273cd1997ce20e15106f362e5613c4/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-pass.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/13db6501c7273cd1997ce20e15106f362e5613c4/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-pass.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-pass.stderr?ref=13db6501c7273cd1997ce20e15106f362e5613c4", "patch": "@@ -1,8 +0,0 @@\n-warning: the feature `or_patterns` is incomplete and may cause the compiler to crash\n-  --> $DIR/or-patterns-syntactic-pass.rs:6:12\n-   |\n-LL | #![feature(or_patterns)]\n-   |            ^^^^^^^^^^^\n-   |\n-   = note: `#[warn(incomplete_features)]` on by default\n-"}, {"sha": "e8b5b492b7738faec1d77cc5465d79930d3bb174", "filename": "src/test/ui/pattern/bindings-after-at/pat-at-same-name-both.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fpat-at-same-name-both.rs", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fpat-at-same-name-both.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fpat-at-same-name-both.rs?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -3,7 +3,6 @@\n \n #![feature(bindings_after_at)]\n #![feature(or_patterns)]\n-//~^ WARN the feature `or_patterns` is incomplete and may cause the compiler to crash\n \n fn main() {\n     fn f(a @ a @ a: ()) {}"}, {"sha": "cba17d82e93c53654807aad9d53eabf7e30a2b7c", "filename": "src/test/ui/pattern/bindings-after-at/pat-at-same-name-both.stderr", "status": "modified", "additions": 10, "deletions": 18, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fpat-at-same-name-both.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/425e494fceb2f88bec344ef07d0f2db4c74dd2d1/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fpat-at-same-name-both.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fpat-at-same-name-both.stderr?ref=425e494fceb2f88bec344ef07d0f2db4c74dd2d1", "patch": "@@ -1,71 +1,63 @@\n error[E0415]: identifier `a` is bound more than once in this parameter list\n-  --> $DIR/pat-at-same-name-both.rs:9:14\n+  --> $DIR/pat-at-same-name-both.rs:8:14\n    |\n LL |     fn f(a @ a @ a: ()) {}\n    |              ^ used as parameter more than once\n \n error[E0415]: identifier `a` is bound more than once in this parameter list\n-  --> $DIR/pat-at-same-name-both.rs:9:18\n+  --> $DIR/pat-at-same-name-both.rs:8:18\n    |\n LL |     fn f(a @ a @ a: ()) {}\n    |                  ^ used as parameter more than once\n \n error[E0416]: identifier `a` is bound more than once in the same pattern\n-  --> $DIR/pat-at-same-name-both.rs:14:20\n+  --> $DIR/pat-at-same-name-both.rs:13:20\n    |\n LL |         Ok(a @ b @ a)\n    |                    ^ used in a pattern more than once\n \n error[E0416]: identifier `a` is bound more than once in the same pattern\n-  --> $DIR/pat-at-same-name-both.rs:16:23\n+  --> $DIR/pat-at-same-name-both.rs:15:23\n    |\n LL |         | Err(a @ b @ a)\n    |                       ^ used in a pattern more than once\n \n error[E0416]: identifier `a` is bound more than once in the same pattern\n-  --> $DIR/pat-at-same-name-both.rs:21:13\n+  --> $DIR/pat-at-same-name-both.rs:20:13\n    |\n LL |     let a @ a @ a = ();\n    |             ^ used in a pattern more than once\n \n error[E0416]: identifier `a` is bound more than once in the same pattern\n-  --> $DIR/pat-at-same-name-both.rs:21:17\n+  --> $DIR/pat-at-same-name-both.rs:20:17\n    |\n LL |     let a @ a @ a = ();\n    |                 ^ used in a pattern more than once\n \n error[E0416]: identifier `a` is bound more than once in the same pattern\n-  --> $DIR/pat-at-same-name-both.rs:24:21\n+  --> $DIR/pat-at-same-name-both.rs:23:21\n    |\n LL |     let ref a @ ref a = ();\n    |                     ^ used in a pattern more than once\n \n error[E0416]: identifier `a` is bound more than once in the same pattern\n-  --> $DIR/pat-at-same-name-both.rs:26:29\n+  --> $DIR/pat-at-same-name-both.rs:25:29\n    |\n LL |     let ref mut a @ ref mut a = ();\n    |                             ^ used in a pattern more than once\n \n error[E0416]: identifier `a` is bound more than once in the same pattern\n-  --> $DIR/pat-at-same-name-both.rs:29:17\n+  --> $DIR/pat-at-same-name-both.rs:28:17\n    |\n LL |     let a @ (Ok(a) | Err(a)) = Ok(());\n    |                 ^ used in a pattern more than once\n \n error[E0416]: identifier `a` is bound more than once in the same pattern\n-  --> $DIR/pat-at-same-name-both.rs:29:26\n+  --> $DIR/pat-at-same-name-both.rs:28:26\n    |\n LL |     let a @ (Ok(a) | Err(a)) = Ok(());\n    |                          ^ used in a pattern more than once\n \n-warning: the feature `or_patterns` is incomplete and may cause the compiler to crash\n-  --> $DIR/pat-at-same-name-both.rs:5:12\n-   |\n-LL | #![feature(or_patterns)]\n-   |            ^^^^^^^^^^^\n-   |\n-   = note: `#[warn(incomplete_features)]` on by default\n-\n error: aborting due to 10 previous errors\n \n Some errors have detailed explanations: E0415, E0416."}]}