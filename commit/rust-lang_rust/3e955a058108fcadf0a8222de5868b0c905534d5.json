{"sha": "3e955a058108fcadf0a8222de5868b0c905534d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlOTU1YTA1ODEwOGZjYWRmMGE4MjIyZGU1ODY4YjBjOTA1NTM0ZDU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-05-13T11:32:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-05-13T11:32:21Z"}, "message": "Auto merge of #50704 - kennytm:rollup, r=kennytm\n\nRollup of 8 pull requests\n\nSuccessful merges:\n\n - #50624 (fs::write: Add example writing a &str)\n - #50634 (Do not silently truncate offsets for `read_at`/`write_at` on emscripten)\n - #50644 (AppVeyor: Read back trace from crash dump on failure.)\n - #50661 (Ignore non .rs files for tidy libcoretest)\n - #50663 (rustc: Allow an edition's feature on that edition)\n - #50667 (rustc: Only suggest deleting `extern crate` if it works)\n - #50670 (rustc: Include semicolon when removing `extern crate`)\n - #50678 (Update openbsd targets)\n\nFailed merges:", "tree": {"sha": "f26872749b5d66e82fd42055d59ad5bde51303fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f26872749b5d66e82fd42055d59ad5bde51303fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e955a058108fcadf0a8222de5868b0c905534d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e955a058108fcadf0a8222de5868b0c905534d5", "html_url": "https://github.com/rust-lang/rust/commit/3e955a058108fcadf0a8222de5868b0c905534d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e955a058108fcadf0a8222de5868b0c905534d5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d48c965071f630a200d4a0cfccb233e836b7483", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d48c965071f630a200d4a0cfccb233e836b7483", "html_url": "https://github.com/rust-lang/rust/commit/0d48c965071f630a200d4a0cfccb233e836b7483"}, {"sha": "98ce5053dfdbc6c7851244e4d98ad4655723e1f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/98ce5053dfdbc6c7851244e4d98ad4655723e1f0", "html_url": "https://github.com/rust-lang/rust/commit/98ce5053dfdbc6c7851244e4d98ad4655723e1f0"}], "stats": {"total": 151, "additions": 140, "deletions": 11}, "files": [{"sha": "c2dcbad8d24519fc1b1d23f5c78362185827fc51", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3e955a058108fcadf0a8222de5868b0c905534d5/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e955a058108fcadf0a8222de5868b0c905534d5/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=3e955a058108fcadf0a8222de5868b0c905534d5", "patch": "@@ -1568,10 +1568,10 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for ExternCrate {\n \n                 if let Some(orig) = orig {\n                     err.span_suggestion(it.span, &help,\n-                        format!(\"{}use {} as {}\", pub_, orig, it.name));\n+                        format!(\"{}use {} as {};\", pub_, orig, it.name));\n                 } else {\n                     err.span_suggestion(it.span, &help,\n-                        format!(\"{}use {}\", pub_, it.name));\n+                        format!(\"{}use {};\", pub_, it.name));\n                 }\n             } else {\n                 err.span_suggestion(it.span, \"remove it\", \"\".into());"}, {"sha": "25817fce5ce6c579a9c2df380a1e36c0f8fb45bf", "filename": "src/librustc_target/spec/aarch64_unknown_openbsd.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/3e955a058108fcadf0a8222de5868b0c905534d5/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_openbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e955a058108fcadf0a8222de5868b0c905534d5/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_openbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_openbsd.rs?ref=3e955a058108fcadf0a8222de5868b0c905534d5", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use spec::{LinkerFlavor, Target, TargetResult};\n+\n+pub fn target() -> TargetResult {\n+    let mut base = super::openbsd_base::opts();\n+    base.max_atomic_width = Some(128);\n+    base.abi_blacklist = super::arm_base::abi_blacklist();\n+\n+    Ok(Target {\n+        llvm_target: \"aarch64-unknown-openbsd\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"64\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        data_layout: \"e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128\".to_string(),\n+        arch: \"aarch64\".to_string(),\n+        target_os: \"openbsd\".to_string(),\n+        target_env: \"\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n+        linker_flavor: LinkerFlavor::Gcc,\n+        options: base,\n+    })\n+}"}, {"sha": "f22bf2abe4501f23c30760651c2f67dca6f9cb2c", "filename": "src/librustc_target/spec/i686_unknown_openbsd.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3e955a058108fcadf0a8222de5868b0c905534d5/src%2Flibrustc_target%2Fspec%2Fi686_unknown_openbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e955a058108fcadf0a8222de5868b0c905534d5/src%2Flibrustc_target%2Fspec%2Fi686_unknown_openbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_unknown_openbsd.rs?ref=3e955a058108fcadf0a8222de5868b0c905534d5", "patch": "@@ -15,6 +15,7 @@ pub fn target() -> TargetResult {\n     base.cpu = \"pentium4\".to_string();\n     base.max_atomic_width = Some(64);\n     base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap().push(\"-m32\".to_string());\n+    base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap().push(\"-fuse-ld=lld\".to_string());\n     base.stack_probes = true;\n \n     Ok(Target {"}, {"sha": "fb20fe9c8918f060aef00931ea6a14dfd07080fb", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3e955a058108fcadf0a8222de5868b0c905534d5/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e955a058108fcadf0a8222de5868b0c905534d5/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=3e955a058108fcadf0a8222de5868b0c905534d5", "patch": "@@ -313,6 +313,7 @@ supported_targets! {\n \n     (\"x86_64-unknown-bitrig\", x86_64_unknown_bitrig),\n \n+    (\"aarch64-unknown-openbsd\", aarch64_unknown_openbsd),\n     (\"i686-unknown-openbsd\", i686_unknown_openbsd),\n     (\"x86_64-unknown-openbsd\", x86_64_unknown_openbsd),\n "}, {"sha": "ab5457018eda66d9e0a068faa17919396fd78062", "filename": "src/test/ui-fulldeps/unnecessary-extern-crate.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3e955a058108fcadf0a8222de5868b0c905534d5/src%2Ftest%2Fui-fulldeps%2Funnecessary-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3e955a058108fcadf0a8222de5868b0c905534d5/src%2Ftest%2Fui-fulldeps%2Funnecessary-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Funnecessary-extern-crate.stderr?ref=3e955a058108fcadf0a8222de5868b0c905534d5", "patch": "@@ -14,55 +14,55 @@ error: `extern crate` is unnecessary in the new edition\n   --> $DIR/unnecessary-extern-crate.rs:19:1\n    |\n LL | extern crate alloc as x;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^ help: use `use`: `use alloc as x`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^ help: use `use`: `use alloc as x;`\n \n error: `extern crate` is unnecessary in the new edition\n   --> $DIR/unnecessary-extern-crate.rs:25:1\n    |\n LL | pub extern crate test as y;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `pub use`: `pub use test as y`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `pub use`: `pub use test as y;`\n \n error: `extern crate` is unnecessary in the new edition\n   --> $DIR/unnecessary-extern-crate.rs:28:1\n    |\n LL | pub extern crate libc;\n-   | ^^^^^^^^^^^^^^^^^^^^^^ help: use `pub use`: `pub use libc`\n+   | ^^^^^^^^^^^^^^^^^^^^^^ help: use `pub use`: `pub use libc;`\n \n error: `extern crate` is unnecessary in the new edition\n   --> $DIR/unnecessary-extern-crate.rs:34:5\n    |\n LL |     extern crate alloc;\n-   |     ^^^^^^^^^^^^^^^^^^^ help: use `use`: `use alloc`\n+   |     ^^^^^^^^^^^^^^^^^^^ help: use `use`: `use alloc;`\n \n error: `extern crate` is unnecessary in the new edition\n   --> $DIR/unnecessary-extern-crate.rs:37:5\n    |\n LL |     extern crate alloc as x;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: use `use`: `use alloc as x`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: use `use`: `use alloc as x;`\n \n error: `extern crate` is unnecessary in the new edition\n   --> $DIR/unnecessary-extern-crate.rs:40:5\n    |\n LL |     pub extern crate test;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^ help: use `pub use`: `pub use test`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^ help: use `pub use`: `pub use test;`\n \n error: `extern crate` is unnecessary in the new edition\n   --> $DIR/unnecessary-extern-crate.rs:43:5\n    |\n LL |     pub extern crate test as y;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `pub use`: `pub use test as y`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `pub use`: `pub use test as y;`\n \n error: `extern crate` is unnecessary in the new edition\n   --> $DIR/unnecessary-extern-crate.rs:47:9\n    |\n LL |         extern crate alloc;\n-   |         ^^^^^^^^^^^^^^^^^^^ help: use `use`: `use alloc`\n+   |         ^^^^^^^^^^^^^^^^^^^ help: use `use`: `use alloc;`\n \n error: `extern crate` is unnecessary in the new edition\n   --> $DIR/unnecessary-extern-crate.rs:50:9\n    |\n LL |         extern crate alloc as x;\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: use `use`: `use alloc as x`\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: use `use`: `use alloc as x;`\n \n error: aborting due to 10 previous errors\n "}, {"sha": "4275e80e7fe8b32bcdfb26b201ccb9b84f8f0c0c", "filename": "src/test/ui/suggestions/auxiliary/removing-extern-crate.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3e955a058108fcadf0a8222de5868b0c905534d5/src%2Ftest%2Fui%2Fsuggestions%2Fauxiliary%2Fremoving-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e955a058108fcadf0a8222de5868b0c905534d5/src%2Ftest%2Fui%2Fsuggestions%2Fauxiliary%2Fremoving-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fauxiliary%2Fremoving-extern-crate.rs?ref=3e955a058108fcadf0a8222de5868b0c905534d5", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// intentionally blank"}, {"sha": "723137f5db0c12d68175827b0a61d9fa8160eaf9", "filename": "src/test/ui/suggestions/removing-extern-crate.fixed", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/3e955a058108fcadf0a8222de5868b0c905534d5/src%2Ftest%2Fui%2Fsuggestions%2Fremoving-extern-crate.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/3e955a058108fcadf0a8222de5868b0c905534d5/src%2Ftest%2Fui%2Fsuggestions%2Fremoving-extern-crate.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fremoving-extern-crate.fixed?ref=3e955a058108fcadf0a8222de5868b0c905534d5", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: --edition 2018\n+// aux-build:removing-extern-crate.rs\n+// run-rustfix\n+// compile-pass\n+\n+#![warn(rust_2018_idioms)]\n+#![allow(unused_imports)]\n+\n+use std as foo;\n+\n+\n+mod another {\n+    use std as foo;\n+    use std;\n+}\n+\n+fn main() {}"}, {"sha": "29479086460e6cca9095f4ec5ebc646b7dd091c9", "filename": "src/test/ui/suggestions/removing-extern-crate.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/3e955a058108fcadf0a8222de5868b0c905534d5/src%2Ftest%2Fui%2Fsuggestions%2Fremoving-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e955a058108fcadf0a8222de5868b0c905534d5/src%2Ftest%2Fui%2Fsuggestions%2Fremoving-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fremoving-extern-crate.rs?ref=3e955a058108fcadf0a8222de5868b0c905534d5", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: --edition 2018\n+// aux-build:removing-extern-crate.rs\n+// run-rustfix\n+// compile-pass\n+\n+#![warn(rust_2018_idioms)]\n+#![allow(unused_imports)]\n+\n+extern crate std as foo;\n+extern crate core;\n+\n+mod another {\n+    extern crate std as foo;\n+    extern crate std;\n+}\n+\n+fn main() {}"}, {"sha": "317703d0caa521d622b981a4090bdb19e777fbe3", "filename": "src/test/ui/suggestions/removing-extern-crate.stderr", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/3e955a058108fcadf0a8222de5868b0c905534d5/src%2Ftest%2Fui%2Fsuggestions%2Fremoving-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3e955a058108fcadf0a8222de5868b0c905534d5/src%2Ftest%2Fui%2Fsuggestions%2Fremoving-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fremoving-extern-crate.stderr?ref=3e955a058108fcadf0a8222de5868b0c905534d5", "patch": "@@ -0,0 +1,31 @@\n+warning: `extern crate` is unnecessary in the new edition\n+  --> $DIR/removing-extern-crate.rs:19:1\n+   |\n+LL | extern crate std as foo;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^ help: use `use`: `use std as foo;`\n+   |\n+note: lint level defined here\n+  --> $DIR/removing-extern-crate.rs:16:9\n+   |\n+LL | #![warn(rust_2018_idioms)]\n+   |         ^^^^^^^^^^^^^^^^\n+   = note: #[warn(unnecessary_extern_crate)] implied by #[warn(rust_2018_idioms)]\n+\n+warning: `extern crate` is unnecessary in the new edition\n+  --> $DIR/removing-extern-crate.rs:20:1\n+   |\n+LL | extern crate core;\n+   | ^^^^^^^^^^^^^^^^^^ help: remove it\n+\n+warning: `extern crate` is unnecessary in the new edition\n+  --> $DIR/removing-extern-crate.rs:23:5\n+   |\n+LL |     extern crate std as foo;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: use `use`: `use std as foo;`\n+\n+warning: `extern crate` is unnecessary in the new edition\n+  --> $DIR/removing-extern-crate.rs:24:5\n+   |\n+LL |     extern crate std;\n+   |     ^^^^^^^^^^^^^^^^^ help: use `use`: `use std;`\n+"}]}