{"sha": "f5ea2a2ab0df1a8ccf9f20d97ca07f9169e70c79", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1ZWEyYTJhYjBkZjFhOGNjZjlmMjBkOTdjYTA3ZjkxNjllNzBjNzk=", "commit": {"author": {"name": "hi-rustin", "email": "rustin.liu@gmail.com", "date": "2021-05-15T13:12:06Z"}, "committer": {"name": "hi-rustin", "email": "rustin.liu@gmail.com", "date": "2021-05-15T13:12:06Z"}, "message": "Remove attrs", "tree": {"sha": "d4e87a4f8e71c295337daa79f0a1fe6059f60446", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4e87a4f8e71c295337daa79f0a1fe6059f60446"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5ea2a2ab0df1a8ccf9f20d97ca07f9169e70c79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5ea2a2ab0df1a8ccf9f20d97ca07f9169e70c79", "html_url": "https://github.com/rust-lang/rust/commit/f5ea2a2ab0df1a8ccf9f20d97ca07f9169e70c79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5ea2a2ab0df1a8ccf9f20d97ca07f9169e70c79/comments", "author": {"login": "hi-rustin", "id": 29879298, "node_id": "MDQ6VXNlcjI5ODc5Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/29879298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hi-rustin", "html_url": "https://github.com/hi-rustin", "followers_url": "https://api.github.com/users/hi-rustin/followers", "following_url": "https://api.github.com/users/hi-rustin/following{/other_user}", "gists_url": "https://api.github.com/users/hi-rustin/gists{/gist_id}", "starred_url": "https://api.github.com/users/hi-rustin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hi-rustin/subscriptions", "organizations_url": "https://api.github.com/users/hi-rustin/orgs", "repos_url": "https://api.github.com/users/hi-rustin/repos", "events_url": "https://api.github.com/users/hi-rustin/events{/privacy}", "received_events_url": "https://api.github.com/users/hi-rustin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hi-rustin", "id": 29879298, "node_id": "MDQ6VXNlcjI5ODc5Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/29879298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hi-rustin", "html_url": "https://github.com/hi-rustin", "followers_url": "https://api.github.com/users/hi-rustin/followers", "following_url": "https://api.github.com/users/hi-rustin/following{/other_user}", "gists_url": "https://api.github.com/users/hi-rustin/gists{/gist_id}", "starred_url": "https://api.github.com/users/hi-rustin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hi-rustin/subscriptions", "organizations_url": "https://api.github.com/users/hi-rustin/orgs", "repos_url": "https://api.github.com/users/hi-rustin/repos", "events_url": "https://api.github.com/users/hi-rustin/events{/privacy}", "received_events_url": "https://api.github.com/users/hi-rustin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "696a8bf870ba7df15e54ebabbc72813c93f8d279", "url": "https://api.github.com/repos/rust-lang/rust/commits/696a8bf870ba7df15e54ebabbc72813c93f8d279", "html_url": "https://github.com/rust-lang/rust/commit/696a8bf870ba7df15e54ebabbc72813c93f8d279"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "bad826366946dc31f95d184f0527e0c845f55ee7", "filename": "crates/ide_assists/src/handlers/generate_default_from_new.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5ea2a2ab0df1a8ccf9f20d97ca07f9169e70c79/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_default_from_new.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5ea2a2ab0df1a8ccf9f20d97ca07f9169e70c79/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_default_from_new.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_default_from_new.rs?ref=f5ea2a2ab0df1a8ccf9f20d97ca07f9169e70c79", "patch": "@@ -6,7 +6,7 @@ use ide_db::helpers::FamousDefs;\n use itertools::Itertools;\n use stdx::format_to;\n use syntax::{\n-    ast::{self, AttrsOwner, GenericParamsOwner, Impl, NameOwner, TypeBoundsOwner},\n+    ast::{self, GenericParamsOwner, Impl, NameOwner, TypeBoundsOwner},\n     AstNode,\n };\n \n@@ -80,10 +80,6 @@ fn generate_trait_impl_text_from_impl(impl_: &ast::Impl, trait_text: &str, code:\n     let generic_params = impl_.generic_param_list();\n     let mut buf = String::with_capacity(code.len());\n     buf.push_str(\"\\n\\n\");\n-    impl_\n-        .attrs()\n-        .filter(|attr| attr.as_simple_call().map(|(name, _arg)| name == \"cfg\").unwrap_or(false))\n-        .for_each(|attr| buf.push_str(format!(\"{}\\n\", attr.to_string()).as_str()));\n     buf.push_str(\"impl\");\n \n     if let Some(generic_params) = &generic_params {"}]}