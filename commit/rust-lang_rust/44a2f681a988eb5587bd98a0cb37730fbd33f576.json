{"sha": "44a2f681a988eb5587bd98a0cb37730fbd33f576", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0YTJmNjgxYTk4OGViNTU4N2JkOThhMGNiMzc3MzBmYmQzM2Y1NzY=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-10-16T13:39:07Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-10-16T14:57:26Z"}, "message": "Add `Place::base_local` method and improve doc for `Place::local` to clarify why we need the former.", "tree": {"sha": "28e17c32cf99dbbcb72224d624f8d2577ded3475", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28e17c32cf99dbbcb72224d624f8d2577ded3475"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44a2f681a988eb5587bd98a0cb37730fbd33f576", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44a2f681a988eb5587bd98a0cb37730fbd33f576", "html_url": "https://github.com/rust-lang/rust/commit/44a2f681a988eb5587bd98a0cb37730fbd33f576", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44a2f681a988eb5587bd98a0cb37730fbd33f576/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ea8eb55cd9f4547b332f43c9f723de30187c223", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ea8eb55cd9f4547b332f43c9f723de30187c223", "html_url": "https://github.com/rust-lang/rust/commit/5ea8eb55cd9f4547b332f43c9f723de30187c223"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "883a9d6497b0be59ef936723873ca019dde51986", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/44a2f681a988eb5587bd98a0cb37730fbd33f576/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44a2f681a988eb5587bd98a0cb37730fbd33f576/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=44a2f681a988eb5587bd98a0cb37730fbd33f576", "patch": "@@ -1967,7 +1967,10 @@ impl<'tcx> Place<'tcx> {\n         Place::Projection(Box::new(PlaceProjection { base: self, elem }))\n     }\n \n-    /// Find the innermost `Local` from this `Place`.\n+    /// Find the innermost `Local` from this `Place`, *if* it is either a local itself or\n+    /// a single deref of a local.\n+    ///\n+    /// FIXME: can we safely swap the semantics of `fn base_local` below in here instead?\n     pub fn local(&self) -> Option<Local> {\n         match self {\n             Place::Local(local) |\n@@ -1978,6 +1981,15 @@ impl<'tcx> Place<'tcx> {\n             _ => None,\n         }\n     }\n+\n+    /// Find the innermost `Local` from this `Place`.\n+    pub fn base_local(&self) -> Option<Local> {\n+        match self {\n+            Place::Local(local) => Some(*local),\n+            Place::Projection(box Projection { base, elem: _ }) => base.base_local(),\n+            Place::Promoted(..) | Place::Static(..) => None,\n+        }\n+    }\n }\n \n impl<'tcx> Debug for Place<'tcx> {"}]}