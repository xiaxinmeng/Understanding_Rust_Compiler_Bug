{"sha": "bceab25d6c206a7b92716e0c9e9a89b97d131e8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjZWFiMjVkNmMyMDZhN2I5MjcxNmUwYzllOWE4OWI5N2QxMzFlOGU=", "commit": {"author": {"name": "Russell Cohen", "email": "russell.r.cohen@gmail.com", "date": "2020-03-29T16:02:28Z"}, "committer": {"name": "Russell Cohen", "email": "russell.r.cohen@gmail.com", "date": "2020-03-29T16:02:28Z"}, "message": "Cleanup match expression", "tree": {"sha": "bb0b8130ef35101355653aaea12f800a98a11de6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb0b8130ef35101355653aaea12f800a98a11de6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bceab25d6c206a7b92716e0c9e9a89b97d131e8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bceab25d6c206a7b92716e0c9e9a89b97d131e8e", "html_url": "https://github.com/rust-lang/rust/commit/bceab25d6c206a7b92716e0c9e9a89b97d131e8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bceab25d6c206a7b92716e0c9e9a89b97d131e8e/comments", "author": {"login": "rcoh", "id": 492903, "node_id": "MDQ6VXNlcjQ5MjkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/492903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rcoh", "html_url": "https://github.com/rcoh", "followers_url": "https://api.github.com/users/rcoh/followers", "following_url": "https://api.github.com/users/rcoh/following{/other_user}", "gists_url": "https://api.github.com/users/rcoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/rcoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rcoh/subscriptions", "organizations_url": "https://api.github.com/users/rcoh/orgs", "repos_url": "https://api.github.com/users/rcoh/repos", "events_url": "https://api.github.com/users/rcoh/events{/privacy}", "received_events_url": "https://api.github.com/users/rcoh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rcoh", "id": 492903, "node_id": "MDQ6VXNlcjQ5MjkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/492903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rcoh", "html_url": "https://github.com/rcoh", "followers_url": "https://api.github.com/users/rcoh/followers", "following_url": "https://api.github.com/users/rcoh/following{/other_user}", "gists_url": "https://api.github.com/users/rcoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/rcoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rcoh/subscriptions", "organizations_url": "https://api.github.com/users/rcoh/orgs", "repos_url": "https://api.github.com/users/rcoh/repos", "events_url": "https://api.github.com/users/rcoh/events{/privacy}", "received_events_url": "https://api.github.com/users/rcoh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82b2989ae0dbb1166289a360620e07865135a5e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/82b2989ae0dbb1166289a360620e07865135a5e8", "html_url": "https://github.com/rust-lang/rust/commit/82b2989ae0dbb1166289a360620e07865135a5e8"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "e542588d8b5ccae4c842bfe6aff9f54468276391", "filename": "src/librustc_parse/parser/diagnostics.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/bceab25d6c206a7b92716e0c9e9a89b97d131e8e/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bceab25d6c206a7b92716e0c9e9a89b97d131e8e/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs?ref=bceab25d6c206a7b92716e0c9e9a89b97d131e8e", "patch": "@@ -6,7 +6,7 @@ use rustc_ast::ast::{\n };\n use rustc_ast::ast::{AttrVec, ItemKind, Mutability, Pat, PatKind, PathSegment, QSelf, Ty, TyKind};\n use rustc_ast::ptr::P;\n-use rustc_ast::token::{self, Lit, LitKind, Token, TokenKind};\n+use rustc_ast::token::{self, Lit, LitKind, TokenKind};\n use rustc_ast::util::parser::AssocOp;\n use rustc_ast_pretty::pprust;\n use rustc_data_structures::fx::FxHashSet;\n@@ -287,14 +287,10 @@ impl<'a> Parser<'a> {\n     }\n \n     fn check_too_many_raw_str_terminators(&mut self, err: &mut DiagnosticBuilder<'_>) -> bool {\n-        let prev_token_raw_str = match self.prev_token {\n-            Token {\n-                kind:\n-                    TokenKind::Literal(Lit {\n-                        kind: LitKind::StrRaw(n) | LitKind::ByteStrRaw(n), ..\n-                    }),\n-                ..\n-            } => Some(n),\n+        let prev_token_raw_str = match self.prev_token.kind {\n+            TokenKind::Literal(Lit {\n+                kind: LitKind::StrRaw(n) | LitKind::ByteStrRaw(n), ..\n+            }) => Some(n),\n             _ => None,\n         };\n \n@@ -523,7 +519,7 @@ impl<'a> Parser<'a> {\n                             .unwrap_or_else(|_| pprust::expr_to_string(&e))\n                     };\n                     err.span_suggestion_verbose(\n-                            inner_op.span.shrink_to_hi(),\n+                        inner_op.span.shrink_to_hi(),\n                         \"split the comparison into two\",\n                         format!(\" && {}\", expr_to_str(&r1)),\n                         Applicability::MaybeIncorrect,\n@@ -1118,7 +1114,7 @@ impl<'a> Parser<'a> {\n             self.look_ahead(2, |t| t.is_ident())\n             || self.look_ahead(1, |t| t == &token::ModSep)\n                 && (self.look_ahead(2, |t| t.is_ident()) ||   // `foo:bar::baz`\n-             self.look_ahead(2, |t| t == &token::Lt)) // `foo:bar::<baz>`\n+            self.look_ahead(2, |t| t == &token::Lt)) // `foo:bar::<baz>`\n     }\n \n     pub(super) fn recover_seq_parse_error("}]}