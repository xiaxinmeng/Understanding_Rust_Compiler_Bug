{"sha": "bd2c072b9b85847a7fe18e66398f2b607e2691a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkMmMwNzJiOWI4NTg0N2E3ZmUxOGU2NjM5OGYyYjYwN2UyNjkxYTI=", "commit": {"author": {"name": "Ashley Mannix", "email": "kodraus@hey.com", "date": "2021-01-13T03:48:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-13T03:48:36Z"}, "message": "bump split_inclusive stabilization to 1.51.0", "tree": {"sha": "0b25810ce327c92fa51c41ec23712cd324bf827b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b25810ce327c92fa51c41ec23712cd324bf827b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd2c072b9b85847a7fe18e66398f2b607e2691a2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf/m2UCRBK7hj4Ov3rIwAAdHIIAH2OM6AudEfQM2gp8hRlz4lY\nh5KG79y64BqOF5Ax8CSItrrrRt73H9Z6c7FgU297/4IF42ZqmYFuO/OFhzsBPW1Y\n/kv6INIBmYN67FQ3rY8DSrOh3P8tWnIzeUPCERvEUtAItWnf8VaOIixawZpTbjkC\n72ocrzjpDlmaAgVq4SXNGaIHlus2L8BoHWU5KXD9MCui/psV+fgCjSY0ngeDCmZv\nxniaVD89UE5cYEAox7BoD3GEkur/Tj2FYXUAhJq9ukO9b4RKKgfq9UrxDjyhPcco\nuy/Qqxp5chDL+JlZw86s7+NZHDeOfbd3x2JqdkibqBYl3XmzsjibG01Any1q7Y8=\n=Dq6A\n-----END PGP SIGNATURE-----\n", "payload": "tree 0b25810ce327c92fa51c41ec23712cd324bf827b\nparent 2c1d6557c96fd65bd519fccdf3fe9c62ea17947b\nauthor Ashley Mannix <kodraus@hey.com> 1610509716 +1000\ncommitter GitHub <noreply@github.com> 1610509716 +1000\n\nbump split_inclusive stabilization to 1.51.0"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd2c072b9b85847a7fe18e66398f2b607e2691a2", "html_url": "https://github.com/rust-lang/rust/commit/bd2c072b9b85847a7fe18e66398f2b607e2691a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd2c072b9b85847a7fe18e66398f2b607e2691a2/comments", "author": {"login": "KodrAus", "id": 6721458, "node_id": "MDQ6VXNlcjY3MjE0NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/6721458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KodrAus", "html_url": "https://github.com/KodrAus", "followers_url": "https://api.github.com/users/KodrAus/followers", "following_url": "https://api.github.com/users/KodrAus/following{/other_user}", "gists_url": "https://api.github.com/users/KodrAus/gists{/gist_id}", "starred_url": "https://api.github.com/users/KodrAus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KodrAus/subscriptions", "organizations_url": "https://api.github.com/users/KodrAus/orgs", "repos_url": "https://api.github.com/users/KodrAus/repos", "events_url": "https://api.github.com/users/KodrAus/events{/privacy}", "received_events_url": "https://api.github.com/users/KodrAus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c1d6557c96fd65bd519fccdf3fe9c62ea17947b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c1d6557c96fd65bd519fccdf3fe9c62ea17947b", "html_url": "https://github.com/rust-lang/rust/commit/2c1d6557c96fd65bd519fccdf3fe9c62ea17947b"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "93358f58d2b77deb405034848ec5248babc9d5a2", "filename": "library/core/src/slice/iter.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/bd2c072b9b85847a7fe18e66398f2b607e2691a2/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd2c072b9b85847a7fe18e66398f2b607e2691a2/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs?ref=bd2c072b9b85847a7fe18e66398f2b607e2691a2", "patch": "@@ -452,7 +452,7 @@ impl<T, P> FusedIterator for Split<'_, T, P> where P: FnMut(&T) -> bool {}\n ///\n /// [`split_inclusive`]: ../../std/primitive.slice.html#method.split_inclusive\n /// [slices]: ../../std/primitive.slice.html\n-#[stable(feature = \"split_inclusive\", since = \"1.49.0\")]\n+#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]\n pub struct SplitInclusive<'a, T: 'a, P>\n where\n     P: FnMut(&T) -> bool,\n@@ -469,7 +469,7 @@ impl<'a, T: 'a, P: FnMut(&T) -> bool> SplitInclusive<'a, T, P> {\n     }\n }\n \n-#[stable(feature = \"split_inclusive\", since = \"1.49.0\")]\n+#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]\n impl<T: fmt::Debug, P> fmt::Debug for SplitInclusive<'_, T, P>\n where\n     P: FnMut(&T) -> bool,\n@@ -483,7 +483,7 @@ where\n }\n \n // FIXME(#26925) Remove in favor of `#[derive(Clone)]`\n-#[stable(feature = \"split_inclusive\", since = \"1.49.0\")]\n+#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]\n impl<T, P> Clone for SplitInclusive<'_, T, P>\n where\n     P: Clone + FnMut(&T) -> bool,\n@@ -493,7 +493,7 @@ where\n     }\n }\n \n-#[stable(feature = \"split_inclusive\", since = \"1.49.0\")]\n+#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]\n impl<'a, T, P> Iterator for SplitInclusive<'a, T, P>\n where\n     P: FnMut(&T) -> bool,\n@@ -522,7 +522,7 @@ where\n     }\n }\n \n-#[stable(feature = \"split_inclusive\", since = \"1.49.0\")]\n+#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]\n impl<'a, T, P> DoubleEndedIterator for SplitInclusive<'a, T, P>\n where\n     P: FnMut(&T) -> bool,\n@@ -547,7 +547,7 @@ where\n     }\n }\n \n-#[stable(feature = \"split_inclusive\", since = \"1.49.0\")]\n+#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]\n impl<T, P> FusedIterator for SplitInclusive<'_, T, P> where P: FnMut(&T) -> bool {}\n \n /// An iterator over the mutable subslices of the vector which are separated\n@@ -693,7 +693,7 @@ impl<T, P> FusedIterator for SplitMut<'_, T, P> where P: FnMut(&T) -> bool {}\n ///\n /// [`split_inclusive_mut`]: ../../std/primitive.slice.html#method.split_inclusive_mut\n /// [slices]: ../../std/primitive.slice.html\n-#[stable(feature = \"split_inclusive\", since = \"1.49.0\")]\n+#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]\n pub struct SplitInclusiveMut<'a, T: 'a, P>\n where\n     P: FnMut(&T) -> bool,\n@@ -710,7 +710,7 @@ impl<'a, T: 'a, P: FnMut(&T) -> bool> SplitInclusiveMut<'a, T, P> {\n     }\n }\n \n-#[stable(feature = \"split_inclusive\", since = \"1.49.0\")]\n+#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]\n impl<T: fmt::Debug, P> fmt::Debug for SplitInclusiveMut<'_, T, P>\n where\n     P: FnMut(&T) -> bool,\n@@ -723,7 +723,7 @@ where\n     }\n }\n \n-#[stable(feature = \"split_inclusive\", since = \"1.49.0\")]\n+#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]\n impl<'a, T, P> Iterator for SplitInclusiveMut<'a, T, P>\n where\n     P: FnMut(&T) -> bool,\n@@ -763,7 +763,7 @@ where\n     }\n }\n \n-#[stable(feature = \"split_inclusive\", since = \"1.49.0\")]\n+#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]\n impl<'a, T, P> DoubleEndedIterator for SplitInclusiveMut<'a, T, P>\n where\n     P: FnMut(&T) -> bool,\n@@ -797,7 +797,7 @@ where\n     }\n }\n \n-#[stable(feature = \"split_inclusive\", since = \"1.49.0\")]\n+#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]\n impl<T, P> FusedIterator for SplitInclusiveMut<'_, T, P> where P: FnMut(&T) -> bool {}\n \n /// An iterator over subslices separated by elements that match a predicate"}]}