{"sha": "e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0MjgwODUyYWU4ZmYzMjQ5NGMxY2E2ZTRmZTc2ZTllNGExNWRkMzE=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-08-13T03:05:29Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-08-20T00:08:30Z"}, "message": "Make a try-blocks folder for all the try{} UI tests", "tree": {"sha": "385c884a4904fcecace9af0eaca220ba7835e09b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/385c884a4904fcecace9af0eaca220ba7835e09b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31", "html_url": "https://github.com/rust-lang/rust/commit/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5cf387c4f41fd0afc01650e896e865c90d387d31", "url": "https://api.github.com/repos/rust-lang/rust/commits/5cf387c4f41fd0afc01650e896e865c90d387d31", "html_url": "https://github.com/rust-lang/rust/commit/5cf387c4f41fd0afc01650e896e865c90d387d31"}], "stats": {"total": 168, "additions": 168, "deletions": 0}, "files": [{"sha": "576a0202018b6ae5b00fa8e020e9a1fc5efbf85a", "filename": "src/test/ui/try-block/try-block-bad-lifetime.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-lifetime.rs?ref=e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31", "previous_filename": "src/test/compile-fail/try-block-bad-lifetime.rs"}, {"sha": "36c89faf5a2ca8f35489c164d3d05f8f6cc88746", "filename": "src/test/ui/try-block/try-block-bad-lifetime.stderr", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-lifetime.stderr?ref=e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31", "patch": "@@ -0,0 +1,50 @@\n+error[E0597]: `my_string` does not live long enough\n+  --> $DIR/try-block-bad-lifetime.rs:25:33\n+   |\n+LL |             let my_str: & str = & my_string;\n+   |                                 ^^^^^^^^^^^ borrowed value does not live long enough\n+...\n+LL |         };\n+   |         - `my_string` dropped here while still borrowed\n+LL |         do_something_with(result);\n+   |                           ------ borrow later used here\n+\n+error[E0506]: cannot assign to `i` because it is borrowed\n+  --> $DIR/try-block-bad-lifetime.rs:39:13\n+   |\n+LL |         let k = &mut i;\n+   |                 ------ borrow of `i` occurs here\n+...\n+LL |             i = 10; //~ ERROR cannot assign to `i` because it is borrowed\n+   |             ^^^^^^ assignment to borrowed `i` occurs here\n+LL |         };\n+LL |         ::std::mem::drop(k); //~ ERROR use of moved value: `k`\n+   |                          - borrow later used here\n+\n+error[E0382]: use of moved value: `k`\n+  --> $DIR/try-block-bad-lifetime.rs:41:26\n+   |\n+LL |             Err(k) ?;\n+   |                 - value moved here\n+...\n+LL |         ::std::mem::drop(k); //~ ERROR use of moved value: `k`\n+   |                          ^ value used here after move\n+   |\n+   = note: move occurs because `k` has type `&mut i32`, which does not implement the `Copy` trait\n+\n+error[E0506]: cannot assign to `i` because it is borrowed\n+  --> $DIR/try-block-bad-lifetime.rs:42:9\n+   |\n+LL |         let k = &mut i;\n+   |                 ------ borrow of `i` occurs here\n+...\n+LL |         i = 40; //~ ERROR cannot assign to `i` because it is borrowed\n+   |         ^^^^^^ assignment to borrowed `i` occurs here\n+LL | \n+LL |         let i_ptr = if let Err(i_ptr) = j { i_ptr } else { panic ! (\"\") };\n+   |                                         - borrow later used here\n+\n+error: aborting due to 4 previous errors\n+\n+Some errors occurred: E0382, E0506, E0597.\n+For more information about an error, try `rustc --explain E0382`."}, {"sha": "a984b63af4575b3602e9302fb6ff53f9e0ce6e11", "filename": "src/test/ui/try-block/try-block-bad-type.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-type.rs?ref=e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31", "previous_filename": "src/test/compile-fail/try-block-bad-type.rs"}, {"sha": "159e43e13e4053b0ae4fcdcea9d45f0c24e2b3f4", "filename": "src/test/ui/try-block/try-block-bad-type.stderr", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-type.stderr?ref=e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31", "patch": "@@ -0,0 +1,52 @@\n+error[E0277]: the trait bound `i32: std::convert::From<&str>` is not satisfied\n+  --> $DIR/try-block-bad-type.rs:17:9\n+   |\n+LL |         Err(\"\")?; //~ ERROR the trait bound `i32: std::convert::From<&str>` is not satisfied\n+   |         ^^^^^^^^ the trait `std::convert::From<&str>` is not implemented for `i32`\n+   |\n+   = help: the following implementations were found:\n+             <i32 as std::convert::From<bool>>\n+             <i32 as std::convert::From<i16>>\n+             <i32 as std::convert::From<i8>>\n+             <i32 as std::convert::From<u16>>\n+             <i32 as std::convert::From<u8>>\n+   = note: required by `std::convert::From::from`\n+\n+error[E0271]: type mismatch resolving `<std::result::Result<i32, i32> as std::ops::Try>::Ok == &str`\n+  --> $DIR/try-block-bad-type.rs:22:9\n+   |\n+LL |         \"\" //~ ERROR type mismatch\n+   |         ^^ expected i32, found &str\n+   |\n+   = note: expected type `i32`\n+              found type `&str`\n+\n+error[E0271]: type mismatch resolving `<std::result::Result<i32, i32> as std::ops::Try>::Ok == ()`\n+  --> $DIR/try-block-bad-type.rs:25:39\n+   |\n+LL |     let res: Result<i32, i32> = try { }; //~ ERROR type mismatch\n+   |                                       ^ expected i32, found ()\n+   |\n+   = note: expected type `i32`\n+              found type `()`\n+\n+error[E0277]: the trait bound `(): std::ops::Try` is not satisfied\n+  --> $DIR/try-block-bad-type.rs:27:23\n+   |\n+LL |     let res: () = try { }; //~ the trait bound `(): std::ops::Try` is not satisfied\n+   |                       ^^^ the trait `std::ops::Try` is not implemented for `()`\n+   |\n+   = note: required by `std::ops::Try::from_ok`\n+\n+error[E0277]: the trait bound `i32: std::ops::Try` is not satisfied\n+  --> $DIR/try-block-bad-type.rs:29:24\n+   |\n+LL |     let res: i32 = try { 5 }; //~ ERROR the trait bound `i32: std::ops::Try` is not satisfied\n+   |                        ^^^^^ the trait `std::ops::Try` is not implemented for `i32`\n+   |\n+   = note: required by `std::ops::Try::from_ok`\n+\n+error: aborting due to 5 previous errors\n+\n+Some errors occurred: E0271, E0277.\n+For more information about an error, try `rustc --explain E0271`."}, {"sha": "64485bb8318f1754493625697ef0bad27fd14fe1", "filename": "src/test/ui/try-block/try-block-in-edition2015.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-edition2015.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-edition2015.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-edition2015.rs?ref=e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31", "previous_filename": "src/test/ui/try-block-in-edition2015.rs"}, {"sha": "7e6d515e111d060cf3bb967869f4ef2057933270", "filename": "src/test/ui/try-block/try-block-in-edition2015.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-edition2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-edition2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-edition2015.stderr?ref=e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31", "previous_filename": "src/test/ui/try-block-in-edition2015.stderr"}, {"sha": "d10149126ee891f4ca9af8786293f7d8f95968ab", "filename": "src/test/ui/try-block/try-block-in-match.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-match.rs?ref=e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31", "previous_filename": "src/test/compile-fail/try-block-in-match.rs"}, {"sha": "f07d23885aca19cef708a47bba7b2015ddf3cd60", "filename": "src/test/ui/try-block/try-block-in-match.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-match.stderr?ref=e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31", "patch": "@@ -0,0 +1,8 @@\n+error: expected expression, found reserved keyword `try`\n+  --> $DIR/try-block-in-match.rs:16:11\n+   |\n+LL |     match try { false } { _ => {} } //~ ERROR expected expression, found reserved keyword `try`\n+   |           ^^^ expected expression\n+\n+error: aborting due to previous error\n+"}, {"sha": "b531267a55bbafeafea1ba1d67b4d4b36cd9d573", "filename": "src/test/ui/try-block/try-block-in-while.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-while.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-while.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-while.rs?ref=e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31", "previous_filename": "src/test/compile-fail/try-block-in-while.rs"}, {"sha": "36577d784b83f5bf44988dbf820500438ab58cb2", "filename": "src/test/ui/try-block/try-block-in-while.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-while.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-while.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-while.stderr?ref=e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31", "patch": "@@ -0,0 +1,8 @@\n+error: expected expression, found reserved keyword `try`\n+  --> $DIR/try-block-in-while.rs:16:11\n+   |\n+LL |     while try { false } {} //~ ERROR expected expression, found reserved keyword `try`\n+   |           ^^^ expected expression\n+\n+error: aborting due to previous error\n+"}, {"sha": "b5e0ebdbc222ef10adcfc2979fd87ea3c04070ba", "filename": "src/test/ui/try-block/try-block-maybe-bad-lifetime.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-maybe-bad-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-maybe-bad-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-maybe-bad-lifetime.rs?ref=e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31", "previous_filename": "src/test/compile-fail/try-block-maybe-bad-lifetime.rs"}, {"sha": "366a8da4b6e837da9fe21878193a8c40b34f725c", "filename": "src/test/ui/try-block/try-block-maybe-bad-lifetime.stderr", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-maybe-bad-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-maybe-bad-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-maybe-bad-lifetime.stderr?ref=e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31", "patch": "@@ -0,0 +1,39 @@\n+error[E0506]: cannot assign to `i` because it is borrowed\n+  --> $DIR/try-block-maybe-bad-lifetime.rs:27:9\n+   |\n+LL |             &i\n+   |             -- borrow of `i` occurs here\n+LL |         };\n+LL |         i = 0; //~ ERROR cannot assign to `i` because it is borrowed\n+   |         ^^^^^ assignment to borrowed `i` occurs here\n+LL |         let _ = i;\n+LL |         do_something_with(x);\n+   |                           - borrow later used here\n+\n+error[E0382]: borrow of moved value: `x`\n+  --> $DIR/try-block-maybe-bad-lifetime.rs:38:24\n+   |\n+LL |             ::std::mem::drop(x);\n+   |                              - value moved here\n+LL |         };\n+LL |         println!(\"{}\", x); //~ ERROR borrow of moved value: `x`\n+   |                        ^ value borrowed here after move\n+   |\n+   = note: move occurs because `x` has type `std::string::String`, which does not implement the `Copy` trait\n+\n+error[E0506]: cannot assign to `i` because it is borrowed\n+  --> $DIR/try-block-maybe-bad-lifetime.rs:50:9\n+   |\n+LL |             j = &i;\n+   |                 -- borrow of `i` occurs here\n+LL |         };\n+LL |         i = 0; //~ ERROR cannot assign to `i` because it is borrowed\n+   |         ^^^^^ assignment to borrowed `i` occurs here\n+LL |         let _ = i;\n+LL |         do_something_with(j);\n+   |                           - borrow later used here\n+\n+error: aborting due to 3 previous errors\n+\n+Some errors occurred: E0382, E0506.\n+For more information about an error, try `rustc --explain E0382`."}, {"sha": "ca81a9c311037cc98e3f4cd085c078f3ae6537a4", "filename": "src/test/ui/try-block/try-block-opt-init.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-opt-init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-opt-init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-opt-init.rs?ref=e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31", "previous_filename": "src/test/compile-fail/try-block-opt-init.rs"}, {"sha": "3ebcb7dc37af1c982d2db4b19d9fb871862561f5", "filename": "src/test/ui/try-block/try-block-opt-init.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-opt-init.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-opt-init.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-opt-init.stderr?ref=e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31", "patch": "@@ -0,0 +1,11 @@\n+error[E0381]: borrow of possibly uninitialized variable: `cfg_res`\n+  --> $DIR/try-block-opt-init.rs:25:5\n+   |\n+LL |     assert_eq!(cfg_res, 5); //~ ERROR borrow of possibly uninitialized variable: `cfg_res`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^ use of possibly uninitialized `cfg_res`\n+   |\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0381`."}, {"sha": "6a69cff48836fc8f2708c58fa824006b4a490490", "filename": "src/test/ui/try-block/try-block-type-error.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-type-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-type-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-type-error.rs?ref=e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31", "previous_filename": "src/test/ui/try-block-type-error.rs"}, {"sha": "3b67e92ec61bf0dcf871d48648c4cede5f1c7307", "filename": "src/test/ui/try-block/try-block-type-error.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-type-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-type-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-type-error.stderr?ref=e4280852ae8ff32494c1ca6e4fe76e9e4a15dd31", "previous_filename": "src/test/ui/try-block-type-error.stderr"}]}