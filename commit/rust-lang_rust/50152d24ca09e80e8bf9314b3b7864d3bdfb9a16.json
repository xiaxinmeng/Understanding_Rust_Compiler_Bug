{"sha": "50152d24ca09e80e8bf9314b3b7864d3bdfb9a16", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwMTUyZDI0Y2EwOWU4MGU4YmY5MzE0YjNiNzg2NGQzYmRmYjlhMTY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2018-12-31T03:11:46Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2018-12-31T03:11:46Z"}, "message": "now that some intrisics are safe, use that fact.", "tree": {"sha": "6a7f4c868301fb1273a10e499ed003cfa9b92b26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a7f4c868301fb1273a10e499ed003cfa9b92b26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50152d24ca09e80e8bf9314b3b7864d3bdfb9a16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50152d24ca09e80e8bf9314b3b7864d3bdfb9a16", "html_url": "https://github.com/rust-lang/rust/commit/50152d24ca09e80e8bf9314b3b7864d3bdfb9a16", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50152d24ca09e80e8bf9314b3b7864d3bdfb9a16/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fedfb61f266cf1a5e8339552745a74edbe22f428", "url": "https://api.github.com/repos/rust-lang/rust/commits/fedfb61f266cf1a5e8339552745a74edbe22f428", "html_url": "https://github.com/rust-lang/rust/commit/fedfb61f266cf1a5e8339552745a74edbe22f428"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "7f087532e8b3be84bc46b7fada5ea6ce03647bc5", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/50152d24ca09e80e8bf9314b3b7864d3bdfb9a16/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50152d24ca09e80e8bf9314b3b7864d3bdfb9a16/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=50152d24ca09e80e8bf9314b3b7864d3bdfb9a16", "patch": "@@ -997,9 +997,12 @@ $EndFeature, \"\n             #[cfg_attr(stage0, rustc_const_unstable(feature = \"const_int_wrapping\"))]\n             #[inline]\n             pub const fn wrapping_add(self, rhs: Self) -> Self {\n+                #[cfg(stage0)]\n                 unsafe {\n                     intrinsics::overflowing_add(self, rhs)\n                 }\n+                #[cfg(not(stage0))]\n+                intrinsics::overflowing_add(self, rhs)\n             }\n         }\n \n@@ -1021,9 +1024,12 @@ $EndFeature, \"\n             #[cfg_attr(stage0, rustc_const_unstable(feature = \"const_int_wrapping\"))]\n             #[inline]\n             pub const fn wrapping_sub(self, rhs: Self) -> Self {\n+                #[cfg(stage0)]\n                 unsafe {\n                     intrinsics::overflowing_sub(self, rhs)\n                 }\n+                #[cfg(not(stage0))]\n+                intrinsics::overflowing_sub(self, rhs)\n             }\n         }\n \n@@ -1044,9 +1050,12 @@ $EndFeature, \"\n             #[cfg_attr(stage0, rustc_const_unstable(feature = \"const_int_wrapping\"))]\n             #[inline]\n             pub const fn wrapping_mul(self, rhs: Self) -> Self {\n+                #[cfg(stage0)]\n                 unsafe {\n                     intrinsics::overflowing_mul(self, rhs)\n                 }\n+                #[cfg(not(stage0))]\n+                intrinsics::overflowing_mul(self, rhs)\n             }\n         }\n \n@@ -2311,7 +2320,10 @@ assert_eq!(n.rotate_left(\", $rot, \"), m);\n             #[cfg_attr(stage0, rustc_const_unstable(feature = \"const_int_rotate\"))]\n             #[inline]\n             pub const fn rotate_left(self, n: u32) -> Self {\n+                #[cfg(stage0)]\n                 unsafe { intrinsics::rotate_left(self, n as $SelfT) }\n+                #[cfg(not(stage0))]\n+                intrinsics::rotate_left(self, n as $SelfT)\n             }\n         }\n \n@@ -2336,7 +2348,10 @@ assert_eq!(n.rotate_right(\", $rot, \"), m);\n             #[cfg_attr(stage0, rustc_const_unstable(feature = \"const_int_rotate\"))]\n             #[inline]\n             pub const fn rotate_right(self, n: u32) -> Self {\n+                #[cfg(stage0)]\n                 unsafe { intrinsics::rotate_right(self, n as $SelfT) }\n+                #[cfg(not(stage0))]\n+                intrinsics::rotate_right(self, n as $SelfT)\n             }\n         }\n \n@@ -2885,9 +2900,12 @@ $EndFeature, \"\n             #[cfg_attr(stage0, rustc_const_unstable(feature = \"const_int_wrapping\"))]\n             #[inline]\n             pub const fn wrapping_add(self, rhs: Self) -> Self {\n+                #[cfg(stage0)]\n                 unsafe {\n                     intrinsics::overflowing_add(self, rhs)\n                 }\n+                #[cfg(not(stage0))]\n+                intrinsics::overflowing_add(self, rhs)\n             }\n         }\n \n@@ -2908,9 +2926,12 @@ $EndFeature, \"\n             #[cfg_attr(stage0, rustc_const_unstable(feature = \"const_int_wrapping\"))]\n             #[inline]\n             pub const fn wrapping_sub(self, rhs: Self) -> Self {\n+                #[cfg(stage0)]\n                 unsafe {\n                     intrinsics::overflowing_sub(self, rhs)\n                 }\n+                #[cfg(not(stage0))]\n+                intrinsics::overflowing_sub(self, rhs)\n             }\n         }\n \n@@ -2932,9 +2953,12 @@ $EndFeature, \"\n         #[cfg_attr(stage0, rustc_const_unstable(feature = \"const_int_wrapping\"))]\n         #[inline]\n         pub const fn wrapping_mul(self, rhs: Self) -> Self {\n+            #[cfg(stage0)]\n             unsafe {\n                 intrinsics::overflowing_mul(self, rhs)\n             }\n+                #[cfg(not(stage0))]\n+                intrinsics::overflowing_mul(self, rhs)\n         }\n \n         doc_comment! {"}]}