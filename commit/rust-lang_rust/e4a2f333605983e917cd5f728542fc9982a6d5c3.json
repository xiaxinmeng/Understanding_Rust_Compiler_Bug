{"sha": "e4a2f333605983e917cd5f728542fc9982a6d5c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0YTJmMzMzNjA1OTgzZTkxN2NkNWY3Mjg1NDJmYzk5ODJhNmQ1YzM=", "commit": {"author": {"name": "Ashley Mannix", "email": "kodraus@hey.com", "date": "2021-01-13T03:50:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-13T03:50:39Z"}, "message": "bump split_inclusive stabilization to 1.51.0", "tree": {"sha": "f2fa8bf3e3137921f64671cb9da3a68320dd05aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2fa8bf3e3137921f64671cb9da3a68320dd05aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4a2f333605983e917cd5f728542fc9982a6d5c3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf/m4PCRBK7hj4Ov3rIwAAdHIIAEQWcorDkzATG6wZPFdLxv+0\nKW/cNcrcN2pC5aLftwH2hkkWSxMWF7kDHbi4FQEycCus5JyuCk3iYqvgcqX9yvVV\n+qsocf3Bx+7QziIWYTvqoM/3ZWUyZwcnsYCaR7J6vFcpsf2mLzKvX66nV6KgdEgO\nZIB+DNydjWNTf7v5Fk2BPE0WzWrwzB7o/aX7gnGgVuVnm99sOcZ+BkAwaxoada6M\nlzof3oYiwGQRx4ZAVYqxd0RSUVcOIh/TlDY7dqisYowzhh4mWWMzJLZC5fC+iVRd\nt0kS7fPeUUOQKfy3od9quywfoRPtw8ThBph5Im6kqepLwepKAzERxArbDhk/J0I=\n=M0yo\n-----END PGP SIGNATURE-----\n", "payload": "tree f2fa8bf3e3137921f64671cb9da3a68320dd05aa\nparent 0620514094ec1d7b73c6f5ef86f92bc31a254ef2\nauthor Ashley Mannix <kodraus@hey.com> 1610509839 +1000\ncommitter GitHub <noreply@github.com> 1610509839 +1000\n\nbump split_inclusive stabilization to 1.51.0"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4a2f333605983e917cd5f728542fc9982a6d5c3", "html_url": "https://github.com/rust-lang/rust/commit/e4a2f333605983e917cd5f728542fc9982a6d5c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4a2f333605983e917cd5f728542fc9982a6d5c3/comments", "author": {"login": "KodrAus", "id": 6721458, "node_id": "MDQ6VXNlcjY3MjE0NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/6721458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KodrAus", "html_url": "https://github.com/KodrAus", "followers_url": "https://api.github.com/users/KodrAus/followers", "following_url": "https://api.github.com/users/KodrAus/following{/other_user}", "gists_url": "https://api.github.com/users/KodrAus/gists{/gist_id}", "starred_url": "https://api.github.com/users/KodrAus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KodrAus/subscriptions", "organizations_url": "https://api.github.com/users/KodrAus/orgs", "repos_url": "https://api.github.com/users/KodrAus/repos", "events_url": "https://api.github.com/users/KodrAus/events{/privacy}", "received_events_url": "https://api.github.com/users/KodrAus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0620514094ec1d7b73c6f5ef86f92bc31a254ef2", "url": "https://api.github.com/repos/rust-lang/rust/commits/0620514094ec1d7b73c6f5ef86f92bc31a254ef2", "html_url": "https://github.com/rust-lang/rust/commit/0620514094ec1d7b73c6f5ef86f92bc31a254ef2"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "8b952eab2946dd6865baf946bbc546ffd25554ff", "filename": "library/core/src/str/iter.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e4a2f333605983e917cd5f728542fc9982a6d5c3/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4a2f333605983e917cd5f728542fc9982a6d5c3/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs?ref=e4a2f333605983e917cd5f728542fc9982a6d5c3", "patch": "@@ -1174,7 +1174,7 @@ pub struct SplitAsciiWhitespace<'a> {\n /// See its documentation for more.\n ///\n /// [`split_inclusive`]: str::split_inclusive\n-#[stable(feature = \"split_inclusive\", since = \"1.49.0\")]\n+#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]\n pub struct SplitInclusive<'a, P: Pattern<'a>>(pub(super) SplitInternal<'a, P>);\n \n #[stable(feature = \"split_whitespace\", since = \"1.1.0\")]\n@@ -1239,7 +1239,7 @@ impl<'a> DoubleEndedIterator for SplitAsciiWhitespace<'a> {\n #[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]\n impl FusedIterator for SplitAsciiWhitespace<'_> {}\n \n-#[stable(feature = \"split_inclusive\", since = \"1.49.0\")]\n+#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]\n impl<'a, P: Pattern<'a>> Iterator for SplitInclusive<'a, P> {\n     type Item = &'a str;\n \n@@ -1249,22 +1249,22 @@ impl<'a, P: Pattern<'a>> Iterator for SplitInclusive<'a, P> {\n     }\n }\n \n-#[stable(feature = \"split_inclusive\", since = \"1.49.0\")]\n+#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]\n impl<'a, P: Pattern<'a, Searcher: fmt::Debug>> fmt::Debug for SplitInclusive<'a, P> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         f.debug_struct(\"SplitInclusive\").field(\"0\", &self.0).finish()\n     }\n }\n \n // FIXME(#26925) Remove in favor of `#[derive(Clone)]`\n-#[stable(feature = \"split_inclusive\", since = \"1.49.0\")]\n+#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]\n impl<'a, P: Pattern<'a, Searcher: Clone>> Clone for SplitInclusive<'a, P> {\n     fn clone(&self) -> Self {\n         SplitInclusive(self.0.clone())\n     }\n }\n \n-#[stable(feature = \"split_inclusive\", since = \"1.49.0\")]\n+#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]\n impl<'a, P: Pattern<'a, Searcher: ReverseSearcher<'a>>> DoubleEndedIterator\n     for SplitInclusive<'a, P>\n {\n@@ -1274,7 +1274,7 @@ impl<'a, P: Pattern<'a, Searcher: ReverseSearcher<'a>>> DoubleEndedIterator\n     }\n }\n \n-#[stable(feature = \"split_inclusive\", since = \"1.49.0\")]\n+#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]\n impl<'a, P: Pattern<'a>> FusedIterator for SplitInclusive<'a, P> {}\n \n impl<'a, P: Pattern<'a>> SplitInclusive<'a, P> {"}]}