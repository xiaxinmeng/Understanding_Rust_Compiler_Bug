{"sha": "71a943820bee0daa2d9f89c0c9b7f8758bcfd429", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxYTk0MzgyMGJlZTBkYWEyZDlmODljMGM5YjdmODc1OGJjZmQ0Mjk=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-08-05T05:30:01Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-08-05T05:30:01Z"}, "message": "Rustup to https://github.com/rust-lang/rust/pull/63213", "tree": {"sha": "85f699477727586590999013d5858cf9f781f802", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85f699477727586590999013d5858cf9f781f802"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71a943820bee0daa2d9f89c0c9b7f8758bcfd429", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEEj4U0bmbiMSg/mWqvgqphyqETl+YFAl1HvvMQHGRldkBwaGFu\nc2NoLm5ldAAKCRCCqmHKoROX5nWMEADBzFJzXI4ng/vGLbvroWVkVtFSamrK9Yxt\nCgLjv5QdWlXsWJWKWVjdcmnPIU7HwuZa+/ePEa3c/jLrfAwFoRjzpKg8eCHUobC/\npYsV/FbD7Hf+KD6vrg0ukKWcFWc3NfLvrYnAzTOy5pVlobE7clgX7crSiRsryDcY\n4XR91ufefn8/OvgprZYqeqEhcwlgbnBrZw7B8QxDZCBBVE4S6OMG1L0LnWMcZu+F\nTKthSjE5UKKi1eNN8SwrATbUtBws0DHrszDYc3jVonu+/ipEKXhCQ2XjAXXQhfTK\n1f/0Gqz6yzOtCeHUF7jGNic2PMGmd4Wz9yHa/kCE83GYImeisH2D3arUqprzDu4O\nGM/M4MoIvGoQEoTbxQ4Ml211NZsjwWu57wbCEWL9mP+iZ6+kGRiQ3c4RzuYJRx0/\nfwGReHIY6hfq8/1bSQ2D/fzHCawcPBysoMHUPEZsiolntBOWQz0syquLsW+hIZYW\nompFBV3gUihM3WzpdUU6Yrhx/Sy76APsjTwmirGZU4kmJXhFQfvlroEsGlKDPp/i\ng4YxzUvkNrdTFYwnoMN9M/4dyyRjVTC4OvXvf9YPeE2LBjPpjRbf8rn5c/fs+g7t\n3Q4QWuLhLVRlSg4Wzfrr/stYFjXqByDj8wG0XPMPwdOEgd5KRQKFeNAZWKxtiTam\nfPmJzRO41w==\n=TsvF\n-----END PGP SIGNATURE-----", "payload": "tree 85f699477727586590999013d5858cf9f781f802\nparent 5c1e30ab05841af32e206c8111f5343be3475a90\nauthor Philipp Hansch <dev@phansch.net> 1564983001 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1564983001 +0200\n\nRustup to https://github.com/rust-lang/rust/pull/63213\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71a943820bee0daa2d9f89c0c9b7f8758bcfd429", "html_url": "https://github.com/rust-lang/rust/commit/71a943820bee0daa2d9f89c0c9b7f8758bcfd429", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71a943820bee0daa2d9f89c0c9b7f8758bcfd429/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c1e30ab05841af32e206c8111f5343be3475a90", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c1e30ab05841af32e206c8111f5343be3475a90", "html_url": "https://github.com/rust-lang/rust/commit/5c1e30ab05841af32e206c8111f5343be3475a90"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "7f49a287cff35c8c8f4d0a9da46f0be8c892103b", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/71a943820bee0daa2d9f89c0c9b7f8758bcfd429/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71a943820bee0daa2d9f89c0c9b7f8758bcfd429/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=71a943820bee0daa2d9f89c0c9b7f8758bcfd429", "patch": "@@ -146,7 +146,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingDoc {\n             hir::ItemKind::Struct(..) => \"a struct\",\n             hir::ItemKind::Trait(..) => \"a trait\",\n             hir::ItemKind::TraitAlias(..) => \"a trait alias\",\n-            hir::ItemKind::Ty(..) => \"a type alias\",\n+            hir::ItemKind::TyAlias(..) => \"a type alias\",\n             hir::ItemKind::Union(..) => \"a union\",\n             hir::ItemKind::OpaqueTy(..) => \"an existential type\",\n             hir::ItemKind::ExternCrate(..)\n@@ -184,7 +184,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingDoc {\n         let desc = match impl_item.node {\n             hir::ImplItemKind::Const(..) => \"an associated constant\",\n             hir::ImplItemKind::Method(..) => \"a method\",\n-            hir::ImplItemKind::Type(_) => \"an associated type\",\n+            hir::ImplItemKind::TyAlias(_) => \"an associated type\",\n             hir::ImplItemKind::OpaqueTy(_) => \"an existential type\",\n         };\n         self.check_missing_docs_attrs(cx, &impl_item.attrs, impl_item.span, desc);"}, {"sha": "e738fd55456a264abbd383b5f9daa56d59e45c20", "filename": "clippy_lints/src/missing_inline.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/71a943820bee0daa2d9f89c0c9b7f8758bcfd429/clippy_lints%2Fsrc%2Fmissing_inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71a943820bee0daa2d9f89c0c9b7f8758bcfd429/clippy_lints%2Fsrc%2Fmissing_inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_inline.rs?ref=71a943820bee0daa2d9f89c0c9b7f8758bcfd429", "patch": "@@ -119,7 +119,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingInline {\n             | hir::ItemKind::Struct(..)\n             | hir::ItemKind::TraitAlias(..)\n             | hir::ItemKind::GlobalAsm(..)\n-            | hir::ItemKind::Ty(..)\n+            | hir::ItemKind::TyAlias(..)\n             | hir::ItemKind::Union(..)\n             | hir::ItemKind::OpaqueTy(..)\n             | hir::ItemKind::ExternCrate(..)\n@@ -142,7 +142,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingInline {\n \n         let desc = match impl_item.node {\n             hir::ImplItemKind::Method(..) => \"a method\",\n-            hir::ImplItemKind::Const(..) | hir::ImplItemKind::Type(_) | hir::ImplItemKind::OpaqueTy(_) => return,\n+            hir::ImplItemKind::Const(..) | hir::ImplItemKind::TyAlias(_) | hir::ImplItemKind::OpaqueTy(_) => return,\n         };\n \n         let def_id = cx.tcx.hir().local_def_id(impl_item.hir_id);"}, {"sha": "654674de06af64cd01ffacf29890de200b7a1c87", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71a943820bee0daa2d9f89c0c9b7f8758bcfd429/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71a943820bee0daa2d9f89c0c9b7f8758bcfd429/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=71a943820bee0daa2d9f89c0c9b7f8758bcfd429", "patch": "@@ -1354,7 +1354,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for TypeComplexity {\n \n     fn check_impl_item(&mut self, cx: &LateContext<'a, 'tcx>, item: &'tcx ImplItem) {\n         match item.node {\n-            ImplItemKind::Const(ref ty, _) | ImplItemKind::Type(ref ty) => self.check_type(cx, ty),\n+            ImplItemKind::Const(ref ty, _) | ImplItemKind::TyAlias(ref ty) => self.check_type(cx, ty),\n             // methods are covered by check_fn\n             _ => (),\n         }"}, {"sha": "809590c88bf57093080c196f861dbc8957e776a4", "filename": "clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/71a943820bee0daa2d9f89c0c9b7f8758bcfd429/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71a943820bee0daa2d9f89c0c9b7f8758bcfd429/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=71a943820bee0daa2d9f89c0c9b7f8758bcfd429", "patch": "@@ -63,7 +63,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for DeepCodeInspector {\n                 print_expr(cx, &cx.tcx.hir().body(body_id).value, 1);\n             },\n             hir::ImplItemKind::Method(..) => println!(\"method\"),\n-            hir::ImplItemKind::Type(_) => println!(\"associated type\"),\n+            hir::ImplItemKind::TyAlias(_) => println!(\"associated type\"),\n             hir::ImplItemKind::OpaqueTy(_) => println!(\"existential type\"),\n         }\n     }\n@@ -360,7 +360,7 @@ fn print_item(cx: &LateContext<'_, '_>, item: &hir::Item) {\n         hir::ItemKind::Mod(..) => println!(\"module\"),\n         hir::ItemKind::ForeignMod(ref fm) => println!(\"foreign module with abi: {}\", fm.abi),\n         hir::ItemKind::GlobalAsm(ref asm) => println!(\"global asm: {:?}\", asm),\n-        hir::ItemKind::Ty(..) => {\n+        hir::ItemKind::TyAlias(..) => {\n             println!(\"type alias for {:?}\", cx.tcx.type_of(did));\n         },\n         hir::ItemKind::OpaqueTy(..) => {"}]}