{"sha": "c42fad8ff3b912719e5cbedc6756c6d1f27f8db3", "node_id": "C_kwDOAAsO6NoAKGM0MmZhZDhmZjNiOTEyNzE5ZTVjYmVkYzY3NTZjNmQxZjI3ZjhkYjM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-01-20T06:16:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-20T06:16:12Z"}, "message": "Rollup merge of #107091 - clubby789:infer-ftl-missing-dollar, r=compiler-errors\n\nFix broken format strings in `infer.ftl`\n\nFixes #107088", "tree": {"sha": "19245400a83ae04bb33e40b0922868d99834c2db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19245400a83ae04bb33e40b0922868d99834c2db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c42fad8ff3b912719e5cbedc6756c6d1f27f8db3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjyjGsCRBK7hj4Ov3rIwAAfBQIALCYY3HYt6RUkgkATVC63Eho\nLPA7sDdu4fNCg6ROTf1CT6u71Myczor4tD7IFoIjRYfVTvs/UagPr1xC/fvNfCNX\ncAwGQddGrz4G/UcPdFlduFCtcEho/N71nqy4JI3P7/5Bm/Ha+IegIhEjrHyo5NXO\nNqh5fVU9P+vdQawip/rWo4tlNNGAziaRWtnyabP308Oat2mUwnumAja/VmYs5UQF\n3Zz+ycJCrApUWH+dBsPpyB87ph+OUyqcAuHJ8kI0H0UJboRmv8AR/ehBip82kJZ9\naAXqZbVW7jCeuyhQZVJZRMqliIYkeNeHKXq4o+lg9XOhhLFNgg46o1FzlDkVuB8=\n=43rT\n-----END PGP SIGNATURE-----\n", "payload": "tree 19245400a83ae04bb33e40b0922868d99834c2db\nparent 75655a92469f2b96219042770ade63fc21efd84f\nparent f3cde8e9da7948295c5b770664786d03fa4979c5\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1674195372 +0100\ncommitter GitHub <noreply@github.com> 1674195372 +0100\n\nRollup merge of #107091 - clubby789:infer-ftl-missing-dollar, r=compiler-errors\n\nFix broken format strings in `infer.ftl`\n\nFixes #107088\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c42fad8ff3b912719e5cbedc6756c6d1f27f8db3", "html_url": "https://github.com/rust-lang/rust/commit/c42fad8ff3b912719e5cbedc6756c6d1f27f8db3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c42fad8ff3b912719e5cbedc6756c6d1f27f8db3/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75655a92469f2b96219042770ade63fc21efd84f", "url": "https://api.github.com/repos/rust-lang/rust/commits/75655a92469f2b96219042770ade63fc21efd84f", "html_url": "https://github.com/rust-lang/rust/commit/75655a92469f2b96219042770ade63fc21efd84f"}, {"sha": "f3cde8e9da7948295c5b770664786d03fa4979c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3cde8e9da7948295c5b770664786d03fa4979c5", "html_url": "https://github.com/rust-lang/rust/commit/f3cde8e9da7948295c5b770664786d03fa4979c5"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "cc38d71b484a452eed88db0be449f89a99d15cd1", "filename": "compiler/rustc_error_messages/locales/en-US/infer.ftl", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c42fad8ff3b912719e5cbedc6756c6d1f27f8db3/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Finfer.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/c42fad8ff3b912719e5cbedc6756c6d1f27f8db3/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Finfer.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Finfer.ftl?ref=c42fad8ff3b912719e5cbedc6756c6d1f27f8db3", "patch": "@@ -193,7 +193,7 @@ infer_actual_impl_expl_expected_signature_any = {$leading_ellipsis ->\n infer_actual_impl_expl_expected_signature_some = {$leading_ellipsis ->\n     [true] ...\n     *[false] {\"\"}\n-}closure with signature `{$ty_or_sig}` must implement `{$trait_path}`, for some specific lifetime `'{lifetime_1}`...\n+}closure with signature `{$ty_or_sig}` must implement `{$trait_path}`, for some specific lifetime `'{$lifetime_1}`...\n infer_actual_impl_expl_expected_signature_nothing = {$leading_ellipsis ->\n     [true] ...\n     *[false] {\"\"}\n@@ -209,7 +209,7 @@ infer_actual_impl_expl_expected_passive_any = {$leading_ellipsis ->\n infer_actual_impl_expl_expected_passive_some = {$leading_ellipsis ->\n     [true] ...\n     *[false] {\"\"}\n-}`{$trait_path}` would have to be implemented for the type `{$ty_or_sig}`, for some specific lifetime `'{lifetime_1}`...\n+}`{$trait_path}` would have to be implemented for the type `{$ty_or_sig}`, for some specific lifetime `'{$lifetime_1}`...\n infer_actual_impl_expl_expected_passive_nothing = {$leading_ellipsis ->\n     [true] ...\n     *[false] {\"\"}\n@@ -225,7 +225,7 @@ infer_actual_impl_expl_expected_other_any = {$leading_ellipsis ->\n infer_actual_impl_expl_expected_other_some = {$leading_ellipsis ->\n     [true] ...\n     *[false] {\"\"}\n-}`{$ty_or_sig}` must implement `{$trait_path}`, for some specific lifetime `'{lifetime_1}`...\n+}`{$ty_or_sig}` must implement `{$trait_path}`, for some specific lifetime `'{$lifetime_1}`...\n infer_actual_impl_expl_expected_other_nothing = {$leading_ellipsis ->\n     [true] ...\n     *[false] {\"\"}\n@@ -268,11 +268,11 @@ infer_but_calling_introduces = {$has_param_name ->\n     [true] `{$param_name}`\n     *[false] `fn` parameter\n } has {$lifetime_kind ->\n-    [named] lifetime `{lifetime}`\n+    [named] lifetime `{$lifetime}`\n     *[anon] an anonymous lifetime `'_`\n } but calling `{assoc_item}` introduces an implicit `'static` lifetime requirement\n     .label1 = {$has_lifetime ->\n-        [named] lifetime `{lifetime}`\n+        [named] lifetime `{$lifetime}`\n         *[anon] an anonymous lifetime `'_`\n     }\n     .label2 = ...is used and required to live as long as `'static` here because of an implicit lifetime bound on the {$has_impl_path ->\n@@ -284,11 +284,11 @@ infer_but_needs_to_satisfy = {$has_param_name ->\n     [true] `{$param_name}`\n     *[false] `fn` parameter\n } has {$has_lifetime ->\n-    [named] lifetime `{lifetime}`\n+    [named] lifetime `{$lifetime}`\n     *[anon] an anonymous lifetime `'_`\n } but it needs to satisfy a `'static` lifetime requirement\n     .influencer = this data with {$has_lifetime ->\n-        [named] lifetime `{lifetime}`\n+        [named] lifetime `{$lifetime}`\n         *[anon] an anonymous lifetime `'_`\n     }...\n     .require = {$spans_empty ->\n@@ -302,7 +302,7 @@ infer_more_targeted = {$has_param_name ->\n     [true] `{$param_name}`\n     *[false] `fn` parameter\n } has {$has_lifetime ->\n-    [named] lifetime `{lifetime}`\n+    [named] lifetime `{$lifetime}`\n     *[anon] an anonymous lifetime `'_`\n } but calling `{$ident}` introduces an implicit `'static` lifetime requirement\n "}]}