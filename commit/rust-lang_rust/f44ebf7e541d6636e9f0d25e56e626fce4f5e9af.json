{"sha": "f44ebf7e541d6636e9f0d25e56e626fce4f5e9af", "node_id": "C_kwDOAAsO6NoAKGY0NGViZjdlNTQxZDY2MzZlOWYwZDI1ZTU2ZTYyNmZjZTRmNWU5YWY", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-03-14T16:00:58Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-05-01T08:15:17Z"}, "message": "fix test cases", "tree": {"sha": "57dc3b0c66ac841af1cc30643373d228b70a36c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57dc3b0c66ac841af1cc30643373d228b70a36c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f44ebf7e541d6636e9f0d25e56e626fce4f5e9af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f44ebf7e541d6636e9f0d25e56e626fce4f5e9af", "html_url": "https://github.com/rust-lang/rust/commit/f44ebf7e541d6636e9f0d25e56e626fce4f5e9af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f44ebf7e541d6636e9f0d25e56e626fce4f5e9af/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b08eaca200ea5c7f6455b0302e031b479fb33dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b08eaca200ea5c7f6455b0302e031b479fb33dc", "html_url": "https://github.com/rust-lang/rust/commit/1b08eaca200ea5c7f6455b0302e031b479fb33dc"}], "stats": {"total": 373, "additions": 121, "deletions": 252}, "files": [{"sha": "96899fd3fc5ca59caef13693d4e5d8c40b55ce64", "filename": "tests/ui/parser/attr-stmt-expr-attr-bad.stderr", "status": "modified", "additions": 50, "deletions": 226, "changes": 276, "blob_url": "https://github.com/rust-lang/rust/blob/f44ebf7e541d6636e9f0d25e56e626fce4f5e9af/tests%2Fui%2Fparser%2Fattr-stmt-expr-attr-bad.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f44ebf7e541d6636e9f0d25e56e626fce4f5e9af/tests%2Fui%2Fparser%2Fattr-stmt-expr-attr-bad.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Fattr-stmt-expr-attr-bad.stderr?ref=f44ebf7e541d6636e9f0d25e56e626fce4f5e9af", "patch": "@@ -20,7 +20,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = foo(#![attr]); }\n    = note: outer attributes, like `#[test]`, annotate the item following them\n \n error: an inner attribute is not permitted in this context\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:9:36\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:7:36\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = foo(#![attr]); }\n    |                                    ^^^^^^^^\n@@ -35,11 +35,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = foo(#![attr]); }\n    |                                            ^ expected expression\n \n error: an inner attribute is not permitted in this context\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:10:38\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:13:38\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:11:38\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = x.foo(#![attr]); }\n    |                                      ^^^^^^^^\n@@ -48,13 +44,13 @@ LL | #[cfg(FALSE)] fn e() { let _ = x.foo(#![attr]); }\n    = note: outer attributes, like `#[test]`, annotate the item following them\n \n error: expected expression, found `)`\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:13:46\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:11:46\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = x.foo(#![attr]); }\n    |                                              ^ expected expression\n \n error: an inner attribute is not permitted in this context\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:16:36\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:14:36\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = 0 + #![attr] 0; }\n    |                                    ^^^^^^^^\n@@ -63,7 +59,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = 0 + #![attr] 0; }\n    = note: outer attributes, like `#[test]`, annotate the item following them\n \n error: an inner attribute is not permitted in this context\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:18:33\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:16:33\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = !#![attr] 0; }\n    |                                 ^^^^^^^^\n@@ -72,7 +68,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = !#![attr] 0; }\n    = note: outer attributes, like `#[test]`, annotate the item following them\n \n error: an inner attribute is not permitted in this context\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:20:33\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:18:33\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = -#![attr] 0; }\n    |                                 ^^^^^^^^\n@@ -81,17 +77,13 @@ LL | #[cfg(FALSE)] fn e() { let _ = -#![attr] 0; }\n    = note: outer attributes, like `#[test]`, annotate the item following them\n \n error: expected one of `!`, `.`, `::`, `;`, `?`, `else`, `{`, or an operator, found `#`\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:22:34\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:20:34\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = x #![attr] as Y; }\n    |                                  ^ expected one of 8 possible tokens\n \n error: an inner attribute is not permitted in this context\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:21:35\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:24:35\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:22:35\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = || #![attr] foo; }\n    |                                   ^^^^^^^^\n@@ -100,11 +92,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = || #![attr] foo; }\n    = note: outer attributes, like `#[test]`, annotate the item following them\n \n error: an inner attribute is not permitted in this context\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:23:40\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:26:40\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:24:40\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = move || #![attr] foo; }\n    |                                        ^^^^^^^^\n@@ -113,11 +101,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = move || #![attr] foo; }\n    = note: outer attributes, like `#[test]`, annotate the item following them\n \n error: an inner attribute is not permitted in this context\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:25:35\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:28:35\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:26:35\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = || #![attr] {foo}; }\n    |                                   ^^^^^^^^\n@@ -126,11 +110,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = || #![attr] {foo}; }\n    = note: outer attributes, like `#[test]`, annotate the item following them\n \n error: an inner attribute is not permitted in this context\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:27:40\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:30:40\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:28:40\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = move || #![attr] {foo}; }\n    |                                        ^^^^^^^^\n@@ -139,31 +119,19 @@ LL | #[cfg(FALSE)] fn e() { let _ = move || #![attr] {foo}; }\n    = note: outer attributes, like `#[test]`, annotate the item following them\n \n error: expected expression, found `..`\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:29:40\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:32:40\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:30:40\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = #[attr] ..#[attr] 0; }\n    |                                        ^^ expected expression\n \n error: expected expression, found `..`\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:31:40\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:34:40\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:32:40\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = #[attr] ..; }\n    |                                        ^^ expected expression\n \n error: an inner attribute is not permitted in this context\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:33:41\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:36:41\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:34:41\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = #[attr] &#![attr] 0; }\n    |                                         ^^^^^^^^\n@@ -172,11 +140,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = #[attr] &#![attr] 0; }\n    = note: outer attributes, like `#[test]`, annotate the item following them\n \n error: an inner attribute is not permitted in this context\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:35:45\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:38:45\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:36:45\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = #[attr] &mut #![attr] 0; }\n    |                                             ^^^^^^^^\n@@ -185,11 +149,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = #[attr] &mut #![attr] 0; }\n    = note: outer attributes, like `#[test]`, annotate the item following them\n \n error: outer attributes are not allowed on `if` and `else` branches\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:37:37\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:40:37\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:38:37\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = if 0 #[attr] {}; }\n    |                                --   ^^^^^^^ -- the attributes are attached to this branch\n@@ -198,11 +158,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = if 0 #[attr] {}; }\n    |                                the branch belongs to this `if`\n \n error: an inner attribute is not permitted in this context\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:39:38\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:42:38\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:40:38\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = if 0 {#![attr]}; }\n    |                                      ^^^^^^^^\n@@ -211,21 +167,13 @@ LL | #[cfg(FALSE)] fn e() { let _ = if 0 {#![attr]}; }\n    = note: outer attributes, like `#[test]`, annotate the item following them\n \n error: expected one of `.`, `;`, `?`, `else`, or an operator, found `#`\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:41:40\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:44:40\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:42:40\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = if 0 {} #[attr] else {}; }\n    |                                        ^ expected one of `.`, `;`, `?`, `else`, or an operator\n \n error: outer attributes are not allowed on `if` and `else` branches\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:43:45\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:46:45\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:44:45\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = if 0 {} else #[attr] {}; }\n    |                                        ---- ^^^^^^^ -- the attributes are attached to this branch\n@@ -234,11 +182,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = if 0 {} else #[attr] {}; }\n    |                                        the branch belongs to this `else`\n \n error: an inner attribute is not permitted in this context\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:45:46\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:48:46\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:46:46\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = if 0 {} else {#![attr]}; }\n    |                                              ^^^^^^^^\n@@ -247,11 +191,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = if 0 {} else {#![attr]}; }\n    = note: outer attributes, like `#[test]`, annotate the item following them\n \n error: outer attributes are not allowed on `if` and `else` branches\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:47:45\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:50:45\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:48:45\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = if 0 {} else #[attr] if 0 {}; }\n    |                                        ---- ^^^^^^^ ------- the attributes are attached to this branch\n@@ -260,11 +200,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = if 0 {} else #[attr] if 0 {}; }\n    |                                        the branch belongs to this `else`\n \n error: outer attributes are not allowed on `if` and `else` branches\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:49:50\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:52:50\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:50:50\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = if 0 {} else if 0 #[attr] {}; }\n    |                                             --   ^^^^^^^ -- the attributes are attached to this branch\n@@ -273,11 +209,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = if 0 {} else if 0 #[attr] {}; }\n    |                                             the branch belongs to this `if`\n \n error: an inner attribute is not permitted in this context\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:51:51\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:54:51\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:52:51\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = if 0 {} else if 0 {#![attr]}; }\n    |                                                   ^^^^^^^^\n@@ -286,11 +218,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = if 0 {} else if 0 {#![attr]}; }\n    = note: outer attributes, like `#[test]`, annotate the item following them\n \n error: outer attributes are not allowed on `if` and `else` branches\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:53:45\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:56:45\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:54:45\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = if let _ = 0 #[attr] {}; }\n    |                                --           ^^^^^^^ -- the attributes are attached to this branch\n@@ -299,11 +227,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = if let _ = 0 #[attr] {}; }\n    |                                the branch belongs to this `if`\n \n error: an inner attribute is not permitted in this context\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:55:46\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:58:46\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:56:46\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = if let _ = 0 {#![attr]}; }\n    |                                              ^^^^^^^^\n@@ -312,21 +236,13 @@ LL | #[cfg(FALSE)] fn e() { let _ = if let _ = 0 {#![attr]}; }\n    = note: outer attributes, like `#[test]`, annotate the item following them\n \n error: expected one of `.`, `;`, `?`, `else`, or an operator, found `#`\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:57:48\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:60:48\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:58:48\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = if let _ = 0 {} #[attr] else {}; }\n    |                                                ^ expected one of `.`, `;`, `?`, `else`, or an operator\n \n error: outer attributes are not allowed on `if` and `else` branches\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:59:53\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:62:53\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:60:53\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = if let _ = 0 {} else #[attr] {}; }\n    |                                                ---- ^^^^^^^ -- the attributes are attached to this branch\n@@ -335,11 +251,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = if let _ = 0 {} else #[attr] {}; }\n    |                                                the branch belongs to this `else`\n \n error: an inner attribute is not permitted in this context\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:61:54\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:64:54\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:62:54\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = if let _ = 0 {} else {#![attr]}; }\n    |                                                      ^^^^^^^^\n@@ -348,11 +260,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = if let _ = 0 {} else {#![attr]}; }\n    = note: outer attributes, like `#[test]`, annotate the item following them\n \n error: outer attributes are not allowed on `if` and `else` branches\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:63:53\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:66:53\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:64:53\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = if let _ = 0 {} else #[attr] if let _ = 0 {}; }\n    |                                                ---- ^^^^^^^ --------------- the attributes are attached to this branch\n@@ -361,11 +269,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = if let _ = 0 {} else #[attr] if let _ = 0 {}\n    |                                                the branch belongs to this `else`\n \n error: outer attributes are not allowed on `if` and `else` branches\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:65:66\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:68:66\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:66:66\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = if let _ = 0 {} else if let _ = 0 #[attr] {}; }\n    |                                                     --           ^^^^^^^ -- the attributes are attached to this branch\n@@ -374,11 +278,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = if let _ = 0 {} else if let _ = 0 #[attr] {}\n    |                                                     the branch belongs to this `if`\n \n error: an inner attribute is not permitted in this context\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:67:67\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:70:67\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:68:67\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = if let _ = 0 {} else if let _ = 0 {#![attr]}; }\n    |                                                                   ^^^^^^^^\n@@ -387,11 +287,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = if let _ = 0 {} else if let _ = 0 {#![attr]}\n    = note: outer attributes, like `#[test]`, annotate the item following them\n \n error: an inner attribute is not permitted following an outer attribute\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:70:32\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:73:32\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:71:32\n    |\n LL | #[cfg(FALSE)] fn s() { #[attr] #![attr] let _ = 0; }\n    |                        ------- ^^^^^^^^ not permitted following an outer attribute\n@@ -402,11 +298,7 @@ LL | #[cfg(FALSE)] fn s() { #[attr] #![attr] let _ = 0; }\n    = note: outer attributes, like `#[test]`, annotate the item following them\n \n error: an inner attribute is not permitted following an outer attribute\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:72:32\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:75:32\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:73:32\n    |\n LL | #[cfg(FALSE)] fn s() { #[attr] #![attr] 0; }\n    |                        ------- ^^^^^^^^ not permitted following an outer attribute\n@@ -417,11 +309,7 @@ LL | #[cfg(FALSE)] fn s() { #[attr] #![attr] 0; }\n    = note: outer attributes, like `#[test]`, annotate the item following them\n \n error: an inner attribute is not permitted following an outer attribute\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:74:32\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:77:32\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:75:32\n    |\n LL | #[cfg(FALSE)] fn s() { #[attr] #![attr] foo!(); }\n    |                        ------- ^^^^^^^^ ------- the inner attribute doesn't annotate this item macro invocation\n@@ -437,11 +325,7 @@ LL + #[cfg(FALSE)] fn s() { #[attr] #[attr] foo!(); }\n    |\n \n error: an inner attribute is not permitted following an outer attribute\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:76:32\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:79:32\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:77:32\n    |\n LL | #[cfg(FALSE)] fn s() { #[attr] #![attr] foo![]; }\n    |                        ------- ^^^^^^^^ ------- the inner attribute doesn't annotate this item macro invocation\n@@ -457,11 +341,7 @@ LL + #[cfg(FALSE)] fn s() { #[attr] #[attr] foo![]; }\n    |\n \n error: an inner attribute is not permitted following an outer attribute\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:78:32\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:81:32\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:79:32\n    |\n LL | #[cfg(FALSE)] fn s() { #[attr] #![attr] foo!{}; }\n    |                        ------- ^^^^^^^^ ------ the inner attribute doesn't annotate this item macro invocation\n@@ -477,145 +357,89 @@ LL + #[cfg(FALSE)] fn s() { #[attr] #[attr] foo!{}; }\n    |\n \n error[E0586]: inclusive range with no end\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:84:35\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:87:35\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:85:35\n    |\n LL | #[cfg(FALSE)] fn e() { match 0 { 0..=#[attr] 10 => () } }\n    |                                   ^^^ help: use `..` instead\n    |\n    = note: inclusive ranges must be bounded at the end (`..=b` or `a..=b`)\n \n error: expected one of `=>`, `if`, or `|`, found `#`\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:84:38\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:87:38\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:85:38\n    |\n LL | #[cfg(FALSE)] fn e() { match 0 { 0..=#[attr] 10 => () } }\n    |                                      ^ expected one of `=>`, `if`, or `|`\n \n error[E0586]: inclusive range with no end\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:87:35\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:90:35\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:88:35\n    |\n LL | #[cfg(FALSE)] fn e() { match 0 { 0..=#[attr] -10 => () } }\n    |                                   ^^^ help: use `..` instead\n    |\n    = note: inclusive ranges must be bounded at the end (`..=b` or `a..=b`)\n \n error: expected one of `=>`, `if`, or `|`, found `#`\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:87:38\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:90:38\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:88:38\n    |\n LL | #[cfg(FALSE)] fn e() { match 0 { 0..=#[attr] -10 => () } }\n    |                                      ^ expected one of `=>`, `if`, or `|`\n \n error: unexpected token: `#`\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:90:39\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:93:39\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:91:39\n    |\n LL | #[cfg(FALSE)] fn e() { match 0 { 0..=-#[attr] 10 => () } }\n    |                                       ^\n \n error[E0586]: inclusive range with no end\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:92:35\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:95:35\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:93:35\n    |\n LL | #[cfg(FALSE)] fn e() { match 0 { 0..=#[attr] FOO => () } }\n    |                                   ^^^ help: use `..` instead\n    |\n    = note: inclusive ranges must be bounded at the end (`..=b` or `a..=b`)\n \n error: expected one of `=>`, `if`, or `|`, found `#`\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:92:38\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:95:38\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:93:38\n    |\n LL | #[cfg(FALSE)] fn e() { match 0 { 0..=#[attr] FOO => () } }\n    |                                      ^ expected one of `=>`, `if`, or `|`\n \n error: unexpected token: `#`\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:96:34\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:99:34\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:97:34\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = x.#![attr]foo(); }\n    |                                  ^\n \n error: expected one of `.`, `;`, `?`, `else`, or an operator, found `#`\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:96:34\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:99:34\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:97:34\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = x.#![attr]foo(); }\n    |                                  ^ expected one of `.`, `;`, `?`, `else`, or an operator\n \n error: unexpected token: `#`\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:99:34\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:102:34\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:100:34\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = x.#[attr]foo(); }\n    |                                  ^\n \n error: expected one of `.`, `;`, `?`, `else`, or an operator, found `#`\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:99:34\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:102:34\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:100:34\n    |\n LL | #[cfg(FALSE)] fn e() { let _ = x.#[attr]foo(); }\n    |                                  ^ expected one of `.`, `;`, `?`, `else`, or an operator\n \n error: expected statement after outer attribute\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:104:37\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:107:37\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:105:37\n    |\n LL | #[cfg(FALSE)] fn e() { { fn foo() { #[attr]; } } }\n    |                                     ^^^^^^^\n \n error: expected statement after outer attribute\n-<<<<<<< HEAD\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:106:37\n-=======\n-  --> $DIR/attr-stmt-expr-attr-bad.rs:109:37\n->>>>>>> 30182b1d322 (Rip it out)\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:107:37\n    |\n LL | #[cfg(FALSE)] fn e() { { fn foo() { #[attr] } } }\n    |                                     ^^^^^^^\n \n-<<<<<<< HEAD\n-error: aborting due to 52 previous errors\n-=======\n-error: aborting due to 54 previous errors\n->>>>>>> 30182b1d322 (Rip it out)\n+error: aborting due to 53 previous errors\n \n For more information about this error, try `rustc --explain E0586`."}, {"sha": "db4fedfb0bdf866b643c8c3897878ebfb8eae7a1", "filename": "tests/ui/resolve/resolve-variant-assoc-item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f44ebf7e541d6636e9f0d25e56e626fce4f5e9af/tests%2Fui%2Fresolve%2Fresolve-variant-assoc-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f44ebf7e541d6636e9f0d25e56e626fce4f5e9af/tests%2Fui%2Fresolve%2Fresolve-variant-assoc-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresolve%2Fresolve-variant-assoc-item.rs?ref=f44ebf7e541d6636e9f0d25e56e626fce4f5e9af", "patch": "@@ -3,5 +3,5 @@ use E::V;\n \n fn main() {\n     E::V::associated_item; //~ ERROR failed to resolve: `V` is a variant, not a module\n-    V::associated_item(); //~ ERROR failed to resolve: `V` is a variant, not a module\n+    V::associated_item; //~ ERROR failed to resolve: `V` is a variant, not a module\n }"}, {"sha": "ed157197d17e1a199827da271104f2402480c6a6", "filename": "tests/ui/resolve/resolve-variant-assoc-item.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f44ebf7e541d6636e9f0d25e56e626fce4f5e9af/tests%2Fui%2Fresolve%2Fresolve-variant-assoc-item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f44ebf7e541d6636e9f0d25e56e626fce4f5e9af/tests%2Fui%2Fresolve%2Fresolve-variant-assoc-item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresolve%2Fresolve-variant-assoc-item.stderr?ref=f44ebf7e541d6636e9f0d25e56e626fce4f5e9af", "patch": "@@ -12,16 +12,16 @@ LL |     E;\n error[E0433]: failed to resolve: `V` is a variant, not a module\n   --> $DIR/resolve-variant-assoc-item.rs:6:5\n    |\n-LL |     V::associated_item();\n+LL |     V::associated_item;\n    |     ^ `V` is a variant, not a module\n    |\n help: there is an enum variant `E::V`; try using the variant's enum\n    |\n-LL |     E();\n+LL |     E;\n    |     ~\n help: an enum with a similar name exists\n    |\n-LL |     E::associated_item();\n+LL |     E::associated_item;\n    |     ~\n \n error: aborting due to 2 previous errors"}, {"sha": "02e316b264e87996c8fbaba22756cfc3bf1f468b", "filename": "tests/ui/suggestions/type-ascription-instead-of-method.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f44ebf7e541d6636e9f0d25e56e626fce4f5e9af/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-method.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f44ebf7e541d6636e9f0d25e56e626fce4f5e9af/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-method.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-method.fixed?ref=f44ebf7e541d6636e9f0d25e56e626fce4f5e9af", "patch": "@@ -1,5 +1,5 @@\n // run-rustfix\n fn main() {\n     let _ = Box::new(\"foo\".to_string());\n-    //~^ ERROR path separator must be a double colo\n+    //~^ ERROR path separator must be a double colon\n }"}, {"sha": "6f893ee89b2cc707e09d31f0378cdaa8fa3a3bb3", "filename": "tests/ui/suggestions/type-ascription-instead-of-method.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f44ebf7e541d6636e9f0d25e56e626fce4f5e9af/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f44ebf7e541d6636e9f0d25e56e626fce4f5e9af/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-method.rs?ref=f44ebf7e541d6636e9f0d25e56e626fce4f5e9af", "patch": "@@ -1,5 +1,5 @@\n // run-rustfix\n fn main() {\n     let _ = Box:new(\"foo\".to_string());\n-    //~^ ERROR path separator must be a double colo\n+    //~^ ERROR path separator must be a double colon\n }"}, {"sha": "1527bb7aa177ba543e13ff6280ecaf9281b9dc13", "filename": "tests/ui/type/type-ascription-precedence.rs", "status": "modified", "additions": 25, "deletions": 18, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/f44ebf7e541d6636e9f0d25e56e626fce4f5e9af/tests%2Fui%2Ftype%2Ftype-ascription-precedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f44ebf7e541d6636e9f0d25e56e626fce4f5e9af/tests%2Fui%2Ftype%2Ftype-ascription-precedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype%2Ftype-ascription-precedence.rs?ref=f44ebf7e541d6636e9f0d25e56e626fce4f5e9af", "patch": "@@ -1,7 +1,8 @@\n // Operator precedence of type ascription\n // Type ascription has very high precedence, the same as operator `as`\n-use std::ops::*;\n+#![feature(type_ascription)]\n \n+use std::ops::*;\n struct S;\n struct Z;\n \n@@ -22,28 +23,34 @@ impl Deref for S {\n     fn deref(&self) -> &Z { panic!() }\n }\n \n-fn main() {\n+fn test1() {\n     &S: &S; //~ ERROR expected one of\n-    (&S): &S; // OK\n+    (&S): &S;\n     &(S: &S);\n+}\n+\n+fn test2() {\n+    *(S: Z); //~ ERROR expected identifier\n+}\n \n-    *S: Z; // OK\n-    (*S): Z; // OK\n-    *(S: Z);\n+fn test3() {\n+    -(S: Z); //~ ERROR expected identifier\n+}\n \n-    -S: Z; // OK\n-    (-S): Z; // OK\n-    -(S: Z);\n+fn test4() {\n+    (S + Z): Z; //~ ERROR expected one of\n+}\n \n-    S + Z: Z; // OK\n-    S + (Z: Z); // OK\n-    (S + Z): Z;\n+fn test5() {\n+    (S * Z): Z; //~ ERROR expected one of\n+}\n \n-    S * Z: Z; // OK\n-    S * (Z: Z); // OK\n-    (S * Z): Z;\n+fn test6() {\n+    S .. S: S; //~ ERROR expected identifier, found `:`\n+}\n \n-    S .. S: S; // OK\n-    S .. (S: S); // OK\n-    (S .. S): S;\n+fn test7() {\n+    (S .. S): S; //~ ERROR expected one of\n }\n+\n+fn main() {}"}, {"sha": "09cdc370309dc5d92f2a5bff791983a75f195245", "filename": "tests/ui/type/type-ascription-precedence.stderr", "status": "modified", "additions": 40, "deletions": 2, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/f44ebf7e541d6636e9f0d25e56e626fce4f5e9af/tests%2Fui%2Ftype%2Ftype-ascription-precedence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f44ebf7e541d6636e9f0d25e56e626fce4f5e9af/tests%2Fui%2Ftype%2Ftype-ascription-precedence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype%2Ftype-ascription-precedence.stderr?ref=f44ebf7e541d6636e9f0d25e56e626fce4f5e9af", "patch": "@@ -1,8 +1,46 @@\n error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found `:`\n-  --> $DIR/type-ascription-precedence.rs:26:7\n+  --> $DIR/type-ascription-precedence.rs:27:7\n    |\n LL |     &S: &S;\n    |       ^ expected one of 8 possible tokens\n \n-error: aborting due to previous error\n+error: expected identifier, found `:`\n+  --> $DIR/type-ascription-precedence.rs:33:8\n+   |\n+LL |     *(S: Z);\n+   |        ^ expected identifier\n+\n+error: expected identifier, found `:`\n+  --> $DIR/type-ascription-precedence.rs:37:8\n+   |\n+LL |     -(S: Z);\n+   |        ^ expected identifier\n+\n+error: expected one of `.`, `;`, `?`, `}`, or an operator, found `:`\n+  --> $DIR/type-ascription-precedence.rs:41:12\n+   |\n+LL |     (S + Z): Z;\n+   |            ^ expected one of `.`, `;`, `?`, `}`, or an operator\n+\n+error: expected one of `.`, `;`, `?`, `}`, or an operator, found `:`\n+  --> $DIR/type-ascription-precedence.rs:45:12\n+   |\n+LL |     (S * Z): Z;\n+   |            ^ expected one of `.`, `;`, `?`, `}`, or an operator\n+\n+error: expected identifier, found `:`\n+  --> $DIR/type-ascription-precedence.rs:49:11\n+   |\n+LL |     S .. S: S;\n+   |           ^ expected identifier\n+   |\n+   = note: type ascription syntax has been removed, see issue #101728 <https://github.com/rust-lang/rust/issues/101728>\n+\n+error: expected one of `.`, `;`, `?`, `}`, or an operator, found `:`\n+  --> $DIR/type-ascription-precedence.rs:53:13\n+   |\n+LL |     (S .. S): S;\n+   |             ^ expected one of `.`, `;`, `?`, `}`, or an operator\n+\n+error: aborting due to 7 previous errors\n "}]}