{"sha": "dbdd75ab528aa31b7d3ce06f186df95ace91baa1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiZGQ3NWFiNTI4YWEzMWI3ZDNjZTA2ZjE4NmRmOTVhY2U5MWJhYTE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-28T09:30:16Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-28T09:30:16Z"}, "message": "Auto merge of #4855 - phansch:rollup-x7yail7, r=phansch\n\nRollup of 3 pull requests\n\nSuccessful merges:\n\n - #4832 (Add some positive examples to lint docs)\n - #4842 ([comparison_chain] #4827 Check `core::cmp::Ord` is implemented)\n - #4847 (fixing a typo)\n\nFailed merges:\n\nchangelog: none\n\nr? @ghost", "tree": {"sha": "fb9a92495de3977f7fa0cb55343fe60dbcf707a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb9a92495de3977f7fa0cb55343fe60dbcf707a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbdd75ab528aa31b7d3ce06f186df95ace91baa1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbdd75ab528aa31b7d3ce06f186df95ace91baa1", "html_url": "https://github.com/rust-lang/rust/commit/dbdd75ab528aa31b7d3ce06f186df95ace91baa1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbdd75ab528aa31b7d3ce06f186df95ace91baa1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3288eb48de43f09939694ef6f3dc898f9b2503a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3288eb48de43f09939694ef6f3dc898f9b2503a", "html_url": "https://github.com/rust-lang/rust/commit/f3288eb48de43f09939694ef6f3dc898f9b2503a"}, {"sha": "a05f3cb9a187f97730cfa72aab04f2807204c976", "url": "https://api.github.com/repos/rust-lang/rust/commits/a05f3cb9a187f97730cfa72aab04f2807204c976", "html_url": "https://github.com/rust-lang/rust/commit/a05f3cb9a187f97730cfa72aab04f2807204c976"}], "stats": {"total": 135, "additions": 132, "deletions": 3}, "files": [{"sha": "9f665a3361da336cc7672c12d5bb9219c6ea0e60", "filename": "clippy_lints/src/approx_const.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dbdd75ab528aa31b7d3ce06f186df95ace91baa1/clippy_lints%2Fsrc%2Fapprox_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbdd75ab528aa31b7d3ce06f186df95ace91baa1/clippy_lints%2Fsrc%2Fapprox_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fapprox_const.rs?ref=dbdd75ab528aa31b7d3ce06f186df95ace91baa1", "patch": "@@ -23,7 +23,13 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// // Bad\n     /// let x = 3.14;\n+    /// let y = 1_f64 / x;\n+    ///\n+    /// // Good\n+    /// let x = std::f32::consts::PI;\n+    /// let y = std::f64::consts::FRAC_1_PI;\n     /// ```\n     pub APPROX_CONSTANT,\n     correctness,"}, {"sha": "087bceaffd98326e9f71565e7f3d548895759e15", "filename": "clippy_lints/src/comparison_chain.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/dbdd75ab528aa31b7d3ce06f186df95ace91baa1/clippy_lints%2Fsrc%2Fcomparison_chain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbdd75ab528aa31b7d3ce06f186df95ace91baa1/clippy_lints%2Fsrc%2Fcomparison_chain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcomparison_chain.rs?ref=dbdd75ab528aa31b7d3ce06f186df95ace91baa1", "patch": "@@ -1,4 +1,6 @@\n-use crate::utils::{if_sequence, parent_node_is_if_expr, span_help_and_lint, SpanlessEq};\n+use crate::utils::{\n+    get_trait_def_id, if_sequence, implements_trait, parent_node_is_if_expr, paths, span_help_and_lint, SpanlessEq,\n+};\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint_pass, declare_tool_lint};\n@@ -84,6 +86,14 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for ComparisonChain {\n                 {\n                     return;\n                 }\n+\n+                // Check that the type being compared implements `core::cmp::Ord`\n+                let ty = cx.tables.expr_ty(lhs1);\n+                let is_ord = get_trait_def_id(cx, &paths::ORD).map_or(false, |id| implements_trait(cx, ty, id, &[]));\n+\n+                if !is_ord {\n+                    return;\n+                }\n             } else {\n                 // We only care about comparison chains\n                 return;"}, {"sha": "fe8938c581fa174af57fa25fcdb9ba5e8a560377", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/dbdd75ab528aa31b7d3ce06f186df95ace91baa1/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbdd75ab528aa31b7d3ce06f186df95ace91baa1/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=dbdd75ab528aa31b7d3ce06f186df95ace91baa1", "patch": "@@ -24,9 +24,15 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// // Bad: unnecessary lifetime annotations\n     /// fn in_and_out<'a>(x: &'a u8, y: u8) -> &'a u8 {\n     ///     x\n     /// }\n+    ///\n+    /// // Good\n+    /// fn elided(x: &u8, y: u8) -> &u8 {\n+    ///     x\n+    /// }\n     /// ```\n     pub NEEDLESS_LIFETIMES,\n     complexity,\n@@ -46,9 +52,15 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// // Bad: unnecessary lifetimes\n     /// fn unused_lifetime<'a>(x: u8) {\n     ///     // ..\n     /// }\n+    ///\n+    /// // Good\n+    /// fn no_lifetime(x: u8) {\n+    ///     // ...\n+    /// }\n     /// ```\n     pub EXTRA_UNUSED_LIFETIMES,\n     complexity,"}, {"sha": "057d1f3bedf754953d3c7c953fb9bd31558d95bd", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbdd75ab528aa31b7d3ce06f186df95ace91baa1/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbdd75ab528aa31b7d3ce06f186df95ace91baa1/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=dbdd75ab528aa31b7d3ce06f186df95ace91baa1", "patch": "@@ -1075,7 +1075,7 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```ignore\n-    /// unsafe { (&() as *const ()).offest(1) };\n+    /// unsafe { (&() as *const ()).offset(1) };\n     /// ```\n     pub ZST_OFFSET,\n     correctness,"}, {"sha": "9c2128469de9ded7afeaf9571882f4e3be171383", "filename": "tests/ui/comparison_chain.rs", "status": "modified", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/dbdd75ab528aa31b7d3ce06f186df95ace91baa1/tests%2Fui%2Fcomparison_chain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbdd75ab528aa31b7d3ce06f186df95ace91baa1/tests%2Fui%2Fcomparison_chain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcomparison_chain.rs?ref=dbdd75ab528aa31b7d3ce06f186df95ace91baa1", "patch": "@@ -76,4 +76,65 @@ fn f(x: u8, y: u8, z: u8) {\n     }\n }\n \n+#[allow(clippy::float_cmp)]\n+fn g(x: f64, y: f64, z: f64) {\n+    // Ignored: f64 doesn't implement Ord\n+    if x > y {\n+        a()\n+    } else if x < y {\n+        b()\n+    }\n+\n+    // Ignored: f64 doesn't implement Ord\n+    if x > y {\n+        a()\n+    } else if x < y {\n+        b()\n+    } else {\n+        c()\n+    }\n+\n+    // Ignored: f64 doesn't implement Ord\n+    if x > y {\n+        a()\n+    } else if y > x {\n+        b()\n+    } else {\n+        c()\n+    }\n+\n+    // Ignored: f64 doesn't implement Ord\n+    if x > 1.0 {\n+        a()\n+    } else if x < 1.0 {\n+        b()\n+    } else if x == 1.0 {\n+        c()\n+    }\n+}\n+\n+fn h<T: Ord>(x: T, y: T, z: T) {\n+    if x > y {\n+        a()\n+    } else if x < y {\n+        b()\n+    }\n+\n+    if x > y {\n+        a()\n+    } else if x < y {\n+        b()\n+    } else {\n+        c()\n+    }\n+\n+    if x > y {\n+        a()\n+    } else if y > x {\n+        b()\n+    } else {\n+        c()\n+    }\n+}\n+\n fn main() {}"}, {"sha": "69db88b03b5b55d30251dad120febb2fecf7be65", "filename": "tests/ui/comparison_chain.stderr", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/dbdd75ab528aa31b7d3ce06f186df95ace91baa1/tests%2Fui%2Fcomparison_chain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dbdd75ab528aa31b7d3ce06f186df95ace91baa1/tests%2Fui%2Fcomparison_chain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcomparison_chain.stderr?ref=dbdd75ab528aa31b7d3ce06f186df95ace91baa1", "patch": "@@ -53,5 +53,45 @@ LL | |     }\n    |\n    = help: Consider rewriting the `if` chain to use `cmp` and `match`.\n \n-error: aborting due to 4 previous errors\n+error: `if` chain can be rewritten with `match`\n+  --> $DIR/comparison_chain.rs:117:5\n+   |\n+LL | /     if x > y {\n+LL | |         a()\n+LL | |     } else if x < y {\n+LL | |         b()\n+LL | |     }\n+   | |_____^\n+   |\n+   = help: Consider rewriting the `if` chain to use `cmp` and `match`.\n+\n+error: `if` chain can be rewritten with `match`\n+  --> $DIR/comparison_chain.rs:123:5\n+   |\n+LL | /     if x > y {\n+LL | |         a()\n+LL | |     } else if x < y {\n+LL | |         b()\n+LL | |     } else {\n+LL | |         c()\n+LL | |     }\n+   | |_____^\n+   |\n+   = help: Consider rewriting the `if` chain to use `cmp` and `match`.\n+\n+error: `if` chain can be rewritten with `match`\n+  --> $DIR/comparison_chain.rs:131:5\n+   |\n+LL | /     if x > y {\n+LL | |         a()\n+LL | |     } else if y > x {\n+LL | |         b()\n+LL | |     } else {\n+LL | |         c()\n+LL | |     }\n+   | |_____^\n+   |\n+   = help: Consider rewriting the `if` chain to use `cmp` and `match`.\n+\n+error: aborting due to 7 previous errors\n "}]}