{"sha": "cd3d654f60dad121fb44dc7f2874003ee6f73a55", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkM2Q2NTRmNjBkYWQxMjFmYjQ0ZGM3ZjI4NzQwMDNlZTZmNzNhNTU=", "commit": {"author": {"name": "Igor Aleksanov", "email": "popzxc@yandex.ru", "date": "2020-09-12T15:09:00Z"}, "committer": {"name": "Igor Aleksanov", "email": "popzxc@yandex.ru", "date": "2020-10-02T09:42:39Z"}, "message": "Simplify is_string_literal function", "tree": {"sha": "2beb72cb83754e1579c96a307e22678cf542919b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2beb72cb83754e1579c96a307e22678cf542919b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd3d654f60dad121fb44dc7f2874003ee6f73a55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd3d654f60dad121fb44dc7f2874003ee6f73a55", "html_url": "https://github.com/rust-lang/rust/commit/cd3d654f60dad121fb44dc7f2874003ee6f73a55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd3d654f60dad121fb44dc7f2874003ee6f73a55/comments", "author": {"login": "popzxc", "id": 12111581, "node_id": "MDQ6VXNlcjEyMTExNTgx", "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popzxc", "html_url": "https://github.com/popzxc", "followers_url": "https://api.github.com/users/popzxc/followers", "following_url": "https://api.github.com/users/popzxc/following{/other_user}", "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions", "organizations_url": "https://api.github.com/users/popzxc/orgs", "repos_url": "https://api.github.com/users/popzxc/repos", "events_url": "https://api.github.com/users/popzxc/events{/privacy}", "received_events_url": "https://api.github.com/users/popzxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "popzxc", "id": 12111581, "node_id": "MDQ6VXNlcjEyMTExNTgx", "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popzxc", "html_url": "https://github.com/popzxc", "followers_url": "https://api.github.com/users/popzxc/followers", "following_url": "https://api.github.com/users/popzxc/following{/other_user}", "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions", "organizations_url": "https://api.github.com/users/popzxc/orgs", "repos_url": "https://api.github.com/users/popzxc/repos", "events_url": "https://api.github.com/users/popzxc/events{/privacy}", "received_events_url": "https://api.github.com/users/popzxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e447b3a4a2bf089e5e3a190a532c17a4572ea013", "url": "https://api.github.com/repos/rust-lang/rust/commits/e447b3a4a2bf089e5e3a190a532c17a4572ea013", "html_url": "https://github.com/rust-lang/rust/commit/e447b3a4a2bf089e5e3a190a532c17a4572ea013"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "8a16147ed7ce58098727523925f30ba183440282", "filename": "crates/ide/src/completion/complete_postfix/format_like.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cd3d654f60dad121fb44dc7f2874003ee6f73a55/crates%2Fide%2Fsrc%2Fcompletion%2Fcomplete_postfix%2Fformat_like.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd3d654f60dad121fb44dc7f2874003ee6f73a55/crates%2Fide%2Fsrc%2Fcompletion%2Fcomplete_postfix%2Fformat_like.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fcompletion%2Fcomplete_postfix%2Fformat_like.rs?ref=cd3d654f60dad121fb44dc7f2874003ee6f73a55", "patch": "@@ -51,11 +51,7 @@ fn is_string_literal(item: &str) -> bool {\n     if item.len() < 2 {\n         return false;\n     }\n-    if item.chars().nth(0) != Some('\"') || item.chars().nth(item.len() - 1) != Some('\"') {\n-        return false;\n-    }\n-\n-    true\n+    item.starts_with(\"\\\"\") && item.ends_with(\"\\\"\")\n }\n \n /// Parser for a format-like string. It is more allowing in terms of string contents,\n@@ -269,8 +265,8 @@ mod tests {\n             (\"{correct}}}\", Some((\"{}}}\", vec![\"correct\"]))),\n             (\"{correct}}}}}\", Some((\"{}}}}}\", vec![\"correct\"]))),\n             (\"{incorrect}}\", None),\n-            (\"placeholders {} {}\", Some((\"placeholders {} {}\", vec![\"$0\", \"$1\"]))),\n-            (\"mixed {} {2 + 2} {}\", Some((\"mixed {} {} {}\", vec![\"$0\", \"2 + 2\", \"$1\"]))),\n+            (\"placeholders {} {}\", Some((\"placeholders {} {}\", vec![\"$1\", \"$2\"]))),\n+            (\"mixed {} {2 + 2} {}\", Some((\"mixed {} {} {}\", vec![\"$1\", \"2 + 2\", \"$2\"]))),\n             (\n                 \"{SomeStruct { val_a: 0, val_b: 1 }}\",\n                 Some((\"{}\", vec![\"SomeStruct { val_a: 0, val_b: 1 }\"])),\n@@ -309,11 +305,11 @@ mod tests {\n     #[test]\n     fn test_into_suggestion() {\n         let test_vector = &[\n-            (PostfixKind::Println, \"{}\", r#\"println!(\"{}\", $0)\"#),\n+            (PostfixKind::Println, \"{}\", r#\"println!(\"{}\", $1)\"#),\n             (\n                 PostfixKind::LogInfo,\n                 \"{} {expr} {} {2 + 2}\",\n-                r#\"log::info!(\"{} {} {} {}\", $0, expr, $1, 2 + 2)\"#,\n+                r#\"log::info!(\"{} {} {} {}\", $1, expr, $2, 2 + 2)\"#,\n             ),\n             (PostfixKind::Format, \"{expr:?}\", r#\"format!(\"{:?}\", expr)\"#),\n         ];"}]}