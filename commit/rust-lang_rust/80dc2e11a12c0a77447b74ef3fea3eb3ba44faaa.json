{"sha": "80dc2e11a12c0a77447b74ef3fea3eb3ba44faaa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwZGMyZTExYTEyYzBhNzc0NDdiNzRlZjNmZWEzZWIzYmE0NGZhYWE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-26T00:18:33Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-31T04:23:34Z"}, "message": "rustc: Remove the last use of upcall_shared_malloc", "tree": {"sha": "2ee687744354eeae3bab1dca7f10dd6d873ab922", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ee687744354eeae3bab1dca7f10dd6d873ab922"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80dc2e11a12c0a77447b74ef3fea3eb3ba44faaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80dc2e11a12c0a77447b74ef3fea3eb3ba44faaa", "html_url": "https://github.com/rust-lang/rust/commit/80dc2e11a12c0a77447b74ef3fea3eb3ba44faaa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80dc2e11a12c0a77447b74ef3fea3eb3ba44faaa/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4f5f235e40c1916b14ee59e7066574d2c102725", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4f5f235e40c1916b14ee59e7066574d2c102725", "html_url": "https://github.com/rust-lang/rust/commit/e4f5f235e40c1916b14ee59e7066574d2c102725"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "a3b2ab85d5878dbb643bb4050d2d945182e8661e", "filename": "src/rustc/middle/trans/closure.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/80dc2e11a12c0a77447b74ef3fea3eb3ba44faaa/src%2Frustc%2Fmiddle%2Ftrans%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80dc2e11a12c0a77447b74ef3fea3eb3ba44faaa/src%2Frustc%2Fmiddle%2Ftrans%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fclosure.rs?ref=80dc2e11a12c0a77447b74ef3fea3eb3ba44faaa", "patch": "@@ -554,8 +554,8 @@ fn make_opaque_cbox_take_glue(\n         let sz = Add(bcx, sz, shape::llsize_of(ccx, T_box_header(ccx)));\n \n         // Allocate memory, update original ptr, and copy existing data\n-        let malloc = ccx.upcalls.shared_malloc;\n-        let cbox_out = Call(bcx, malloc, [sz]);\n+        let malloc = ccx.upcalls.exchange_malloc;\n+        let cbox_out = Call(bcx, malloc, [tydesc]);\n         let cbox_out = PointerCast(bcx, cbox_out, llopaquecboxty);\n         call_memmove(bcx, cbox_out, cbox_in, sz);\n         Store(bcx, cbox_out, cboxptr);"}]}