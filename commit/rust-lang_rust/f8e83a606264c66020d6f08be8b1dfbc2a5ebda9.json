{"sha": "f8e83a606264c66020d6f08be8b1dfbc2a5ebda9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4ZTgzYTYwNjI2NGM2NjAyMGQ2ZjA4YmU4YjFkZmJjMmE1ZWJkYTk=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-06-20T08:44:31Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-06-27T09:17:25Z"}, "message": "Don't generate a new NodeId for universal impl Trait", "tree": {"sha": "dd63f1d50bce155654b432b6a34209f0e79adda1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd63f1d50bce155654b432b6a34209f0e79adda1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8e83a606264c66020d6f08be8b1dfbc2a5ebda9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8e83a606264c66020d6f08be8b1dfbc2a5ebda9", "html_url": "https://github.com/rust-lang/rust/commit/f8e83a606264c66020d6f08be8b1dfbc2a5ebda9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8e83a606264c66020d6f08be8b1dfbc2a5ebda9/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2e2c321053a1bed9dd3ebf02e440072d797f3e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2e2c321053a1bed9dd3ebf02e440072d797f3e3", "html_url": "https://github.com/rust-lang/rust/commit/b2e2c321053a1bed9dd3ebf02e440072d797f3e3"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "18f652854d87b9d54d18e66bef210b18f6d669fb", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f8e83a606264c66020d6f08be8b1dfbc2a5ebda9/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8e83a606264c66020d6f08be8b1dfbc2a5ebda9/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=f8e83a606264c66020d6f08be8b1dfbc2a5ebda9", "patch": "@@ -1167,18 +1167,17 @@ impl<'a> LoweringContext<'a> {\n                 }\n                 hir::TyTraitObject(bounds, lifetime_bound)\n             }\n-            TyKind::ImplTrait(exist_ty_node_id, ref bounds) => {\n+            TyKind::ImplTrait(def_node_id, ref bounds) => {\n                 let span = t.span;\n                 match itctx {\n                     ImplTraitContext::Existential(fn_def_id) => {\n                         self.lower_existential_impl_trait(\n-                            span, fn_def_id, exist_ty_node_id,\n+                            span, fn_def_id, def_node_id,\n                             |this| this.lower_param_bounds(bounds, itctx),\n                         )\n                     }\n                     ImplTraitContext::Universal(def_id) => {\n-                        let def_node_id = self.next_id().node_id;\n-\n+                        self.lower_node_id(def_node_id);\n                         // Add a definition for the in-band TyParam\n                         let def_index = self.resolver.definitions().create_def_with_parent(\n                             def_id.index,"}, {"sha": "f16bf1d774455f7e9c0ce697e2648e9e3dfd8d85", "filename": "src/librustc/hir/map/collector.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f8e83a606264c66020d6f08be8b1dfbc2a5ebda9/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8e83a606264c66020d6f08be8b1dfbc2a5ebda9/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs?ref=f8e83a606264c66020d6f08be8b1dfbc2a5ebda9", "patch": "@@ -221,23 +221,27 @@ impl<'a, 'hir> NodeCollector<'a, 'hir> {\n         // Make sure that the DepNode of some node coincides with the HirId\n         // owner of that node.\n         if cfg!(debug_assertions) {\n-            let hir_id_owner = self.definitions.node_to_hir_id(id).owner;\n+            let hir_id = self.definitions.node_to_hir_id(id);\n \n-            if hir_id_owner != self.current_dep_node_owner {\n+            if hir_id.owner != self.current_dep_node_owner {\n                 let node_str = match self.definitions.opt_def_index(id) {\n                     Some(def_index) => {\n                         self.definitions.def_path(def_index).to_string_no_crate()\n                     }\n                     None => format!(\"{:?}\", node)\n                 };\n \n+                if hir_id == ::hir::DUMMY_HIR_ID {\n+                    println!(\"Maybe you forgot to lower the node id {:?}?\", id);\n+                }\n+\n                 bug!(\"inconsistent DepNode for `{}`: \\\n                       current_dep_node_owner={}, hir_id.owner={}\",\n                     node_str,\n                     self.definitions\n                         .def_path(self.current_dep_node_owner)\n                         .to_string_no_crate(),\n-                    self.definitions.def_path(hir_id_owner).to_string_no_crate())\n+                    self.definitions.def_path(hir_id.owner).to_string_no_crate())\n             }\n         }\n "}]}