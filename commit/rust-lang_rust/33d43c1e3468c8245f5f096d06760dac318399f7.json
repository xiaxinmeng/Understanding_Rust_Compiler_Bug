{"sha": "33d43c1e3468c8245f5f096d06760dac318399f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzZDQzYzFlMzQ2OGM4MjQ1ZjVmMDk2ZDA2NzYwZGFjMzE4Mzk5Zjc=", "commit": {"author": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2015-12-08T23:10:28Z"}, "committer": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2015-12-08T23:30:08Z"}, "message": "doc: these are just renames, so avoid duplication", "tree": {"sha": "7c319235d884e37cf7e7f1261983c2d388d66367", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c319235d884e37cf7e7f1261983c2d388d66367"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33d43c1e3468c8245f5f096d06760dac318399f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33d43c1e3468c8245f5f096d06760dac318399f7", "html_url": "https://github.com/rust-lang/rust/commit/33d43c1e3468c8245f5f096d06760dac318399f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33d43c1e3468c8245f5f096d06760dac318399f7/comments", "author": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4dbdfb493357427a0f94ce09badef581f5d62bbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/4dbdfb493357427a0f94ce09badef581f5d62bbd", "html_url": "https://github.com/rust-lang/rust/commit/4dbdfb493357427a0f94ce09badef581f5d62bbd"}], "stats": {"total": 57, "additions": 5, "deletions": 52}, "files": [{"sha": "ddad7533a081f8f89d2649f6c5399f53475c9309", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/33d43c1e3468c8245f5f096d06760dac318399f7/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33d43c1e3468c8245f5f096d06760dac318399f7/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=33d43c1e3468c8245f5f096d06760dac318399f7", "patch": "@@ -920,21 +920,7 @@ impl<T: Clone> Vec<T> {\n         }\n     }\n \n-    /// Appends all elements in a slice to the `Vec`.\n-    ///\n-    /// Iterates over the slice `other`, clones each element, and then appends\n-    /// it to this `Vec`. The `other` vector is traversed in-order.\n-    ///\n-    /// # Examples\n-    ///\n-    /// ```\n-    /// #![feature(vec_push_all)]\n-    /// #![allow(deprecated)]\n-    ///\n-    /// let mut vec = vec![1];\n-    /// vec.push_all(&[2, 3, 4]);\n-    /// assert_eq!(vec, [1, 2, 3, 4]);\n-    /// ```\n+    #[allow(missing_docs)]\n     #[inline]\n     #[unstable(feature = \"vec_push_all\",\n                reason = \"likely to be replaced by a more optimized extend\","}, {"sha": "959b6a97c5ccbacbcfdae275fe5efe0cfba13ac0", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 2, "deletions": 30, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/33d43c1e3468c8245f5f096d06760dac318399f7/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33d43c1e3468c8245f5f096d06760dac318399f7/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=33d43c1e3468c8245f5f096d06760dac318399f7", "patch": "@@ -1893,21 +1893,7 @@ pub trait Iterator {\n             .map(|(_, x)| x)\n     }\n \n-    /// Returns the element that gives the maximum value from the\n-    /// specified function.\n-    ///\n-    /// Returns the rightmost element if the comparison determines two elements\n-    /// to be equally maximum.\n-    ///\n-    /// # Examples\n-    ///\n-    /// ```\n-    /// #![feature(iter_cmp)]\n-    /// #![allow(deprecated)]\n-    ///\n-    /// let a = [-3_i32, 0, 1, 5, -10];\n-    /// assert_eq!(*a.iter().max_by(|x| x.abs()).unwrap(), -10);\n-    /// ```\n+    #[allow(missing_docs)]\n     #[inline]\n     #[unstable(feature = \"iter_cmp\",\n                reason = \"may want to produce an Ordering directly; see #15311\",\n@@ -1945,22 +1931,8 @@ pub trait Iterator {\n             .map(|(_, x)| x)\n     }\n \n-    /// Returns the element that gives the minimum value from the\n-    /// specified function.\n-    ///\n-    /// Returns the latest element if the comparison determines two elements\n-    /// to be equally minimum.\n-    ///\n-    /// # Examples\n-    ///\n-    /// ```\n-    /// #![feature(iter_cmp)]\n-    /// #![allow(deprecated)]\n-    ///\n-    /// let a = [-3_i32, 0, 1, 5, -10];\n-    /// assert_eq!(*a.iter().min_by(|x| x.abs()).unwrap(), 0);\n-    /// ```\n     #[inline]\n+    #[allow(missing_docs)]\n     #[unstable(feature = \"iter_cmp\",\n                reason = \"may want to produce an Ordering directly; see #15311\",\n                issue = \"27724\")]"}, {"sha": "1ff8f572a7f571cf179e9a9b3412b74d7a624a13", "filename": "src/libstd/io/error.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/33d43c1e3468c8245f5f096d06760dac318399f7/src%2Flibstd%2Fio%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33d43c1e3468c8245f5f096d06760dac318399f7/src%2Flibstd%2Fio%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Ferror.rs?ref=33d43c1e3468c8245f5f096d06760dac318399f7", "patch": "@@ -150,12 +150,7 @@ pub enum ErrorKind {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     Other,\n \n-    /// An error returned when an operation could not be completed because an\n-    /// \"end of file\" was reached prematurely.\n-    ///\n-    /// This typically means that an operation could only succeed if it read a\n-    /// particular number of bytes but only a smaller number of bytes could be\n-    /// read.\n+    #[allow(missing_docs)]\n     #[unstable(feature = \"read_exact_old\", reason = \"recently added\",\n                issue = \"0\")]\n     #[rustc_deprecated(since = \"1.6.0\", reason = \"renamed to UnexpectedEof\")]"}, {"sha": "efe40cf07c130981514329179759805502c9a57e", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33d43c1e3468c8245f5f096d06760dac318399f7/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33d43c1e3468c8245f5f096d06760dac318399f7/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=33d43c1e3468c8245f5f096d06760dac318399f7", "patch": "@@ -576,7 +576,7 @@ pub trait Read {\n     /// will continue.\n     ///\n     /// If this function encounters an \"end of file\" before completely filling\n-    /// the buffer, it returns an error of the kind `ErrorKind::UnexpectedEOF`.\n+    /// the buffer, it returns an error of the kind `ErrorKind::UnexpectedEof`.\n     /// The contents of `buf` are unspecified in this case.\n     ///\n     /// If any other read error is encountered then this function immediately"}]}