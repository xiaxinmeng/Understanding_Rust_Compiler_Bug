{"sha": "e1cf0a1d677a6f583baf96b14dccf61ec5e4cfeb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxY2YwYTFkNjc3YTZmNTgzYmFmOTZiMTRkY2NmNjFlYzVlNGNmZWI=", "commit": {"author": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2019-09-25T11:39:28Z"}, "committer": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2019-09-25T11:39:28Z"}, "message": "Format", "tree": {"sha": "90aaf037e6bcfd917fd42163f126242b611f2a4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90aaf037e6bcfd917fd42163f126242b611f2a4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1cf0a1d677a6f583baf96b14dccf61ec5e4cfeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1cf0a1d677a6f583baf96b14dccf61ec5e4cfeb", "html_url": "https://github.com/rust-lang/rust/commit/e1cf0a1d677a6f583baf96b14dccf61ec5e4cfeb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1cf0a1d677a6f583baf96b14dccf61ec5e4cfeb/comments", "author": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e74a268db511d4f124425c981300ebfaea0d64ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/e74a268db511d4f124425c981300ebfaea0d64ee", "html_url": "https://github.com/rust-lang/rust/commit/e74a268db511d4f124425c981300ebfaea0d64ee"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "afaf9d7ed9d67072c1ebf7902e8e2ac263b58f70", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e1cf0a1d677a6f583baf96b14dccf61ec5e4cfeb/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1cf0a1d677a6f583baf96b14dccf61ec5e4cfeb/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=e1cf0a1d677a6f583baf96b14dccf61ec5e4cfeb", "patch": "@@ -338,8 +338,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n     /// Read vector length and element type\n     pub fn read_vector_ty(\n         &self, op: OpTy<'tcx, M::PointerTag>\n-    )\n-        -> (u64, &rustc::ty::TyS<'tcx>) {\n+    ) -> (u64, &rustc::ty::TyS<'tcx>) {\n         if let layout::Abi::Vector { .. } = op.layout.abi {\n             (op.layout.ty.simd_size(*self.tcx) as _, op.layout.ty.simd_type(*self.tcx))\n         } else {"}]}