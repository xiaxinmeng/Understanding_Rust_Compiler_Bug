{"sha": "26297c56df78b3650e7a6bd5fdc6bdd74e5cc831", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2Mjk3YzU2ZGY3OGIzNjUwZTdhNmJkNWZkYzZiZGQ3NGU1Y2M4MzE=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2015-12-06T18:32:16Z"}, "committer": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2015-12-06T18:32:16Z"}, "message": "Merge pull request #615 from JanLikar/version\n\nAdd --version switch", "tree": {"sha": "67717bf7f0b0fa561cb81df3a2bba82d64b4ecd2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67717bf7f0b0fa561cb81df3a2bba82d64b4ecd2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26297c56df78b3650e7a6bd5fdc6bdd74e5cc831", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26297c56df78b3650e7a6bd5fdc6bdd74e5cc831", "html_url": "https://github.com/rust-lang/rust/commit/26297c56df78b3650e7a6bd5fdc6bdd74e5cc831", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26297c56df78b3650e7a6bd5fdc6bdd74e5cc831/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22353ca8c74feabbec005b6de77ce421fe0871a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/22353ca8c74feabbec005b6de77ce421fe0871a4", "html_url": "https://github.com/rust-lang/rust/commit/22353ca8c74feabbec005b6de77ce421fe0871a4"}, {"sha": "f85ff8d0e5e0149807c3f83b3554bf70ddf70831", "url": "https://api.github.com/repos/rust-lang/rust/commits/f85ff8d0e5e0149807c3f83b3554bf70ddf70831", "html_url": "https://github.com/rust-lang/rust/commit/f85ff8d0e5e0149807c3f83b3554bf70ddf70831"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "1b54d0d4d06ab4b237c8f63803aa7872f53eb46c", "filename": "src/bin/rustfmt.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/26297c56df78b3650e7a6bd5fdc6bdd74e5cc831/src%2Fbin%2Frustfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26297c56df78b3650e7a6bd5fdc6bdd74e5cc831/src%2Fbin%2Frustfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Frustfmt.rs?ref=26297c56df78b3650e7a6bd5fdc6bdd74e5cc831", "patch": "@@ -33,6 +33,8 @@ enum Operation {\n     Format(Vec<PathBuf>, WriteMode),\n     /// Print the help message.\n     Help,\n+    // Print version information\n+    Version,\n     /// Print detailed configuration help.\n     ConfigHelp,\n     /// Invalid program input, including reason.\n@@ -82,6 +84,7 @@ fn update_config(config: &mut Config, matches: &Matches) {\n fn execute() -> i32 {\n     let mut opts = Options::new();\n     opts.optflag(\"h\", \"help\", \"show this message\");\n+    opts.optflag(\"V\", \"version\", \"show version information\");\n     opts.optflag(\"v\", \"verbose\", \"show progress\");\n     opts.optopt(\"\",\n                 \"write-mode\",\n@@ -111,6 +114,10 @@ fn execute() -> i32 {\n             print_usage(&opts, \"\");\n             0\n         }\n+        Operation::Version => {\n+            print_version();\n+            0\n+        }\n         Operation::ConfigHelp => {\n             Config::print_docs();\n             0\n@@ -166,6 +173,14 @@ fn print_usage(opts: &Options, reason: &str) {\n     println!(\"{}\", opts.usage(&reason));\n }\n \n+fn print_version() {\n+    println!(\"{}.{}.{}{}\",\n+             option_env!(\"CARGO_PKG_VERSION_MAJOR\").unwrap_or(\"X\"),\n+             option_env!(\"CARGO_PKG_VERSION_MINOR\").unwrap_or(\"X\"),\n+             option_env!(\"CARGO_PKG_VERSION_PATCH\").unwrap_or(\"X\"),\n+             option_env!(\"CARGO_PKG_VERSION_PRE\").unwrap_or(\"\"));\n+}\n+\n fn determine_operation(matches: &Matches) -> Operation {\n     if matches.opt_present(\"h\") {\n         return Operation::Help;\n@@ -175,6 +190,10 @@ fn determine_operation(matches: &Matches) -> Operation {\n         return Operation::ConfigHelp;\n     }\n \n+    if matches.opt_present(\"version\") {\n+        return Operation::Version;\n+    }\n+\n     // if no file argument is supplied, read from stdin\n     if matches.free.is_empty() {\n "}]}