{"sha": "197f360e30538f34398854e35366d8909b131057", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5N2YzNjBlMzA1MzhmMzQzOTg4NTRlMzUzNjZkODkwOWIxMzEwNTc=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-15T09:15:14Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-15T09:15:14Z"}, "message": "Ensure parens are wrapped around composite exprs in call/index/field pos\n\nThis is needed to fix the second example in issue #919", "tree": {"sha": "d46cdadd13b0ffc7520a952ea336d32c24ba64be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d46cdadd13b0ffc7520a952ea336d32c24ba64be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/197f360e30538f34398854e35366d8909b131057", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/197f360e30538f34398854e35366d8909b131057", "html_url": "https://github.com/rust-lang/rust/commit/197f360e30538f34398854e35366d8909b131057", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/197f360e30538f34398854e35366d8909b131057/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c83ea564bb7da5300c2e39afc87fcffb1e1d252", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c83ea564bb7da5300c2e39afc87fcffb1e1d252", "html_url": "https://github.com/rust-lang/rust/commit/8c83ea564bb7da5300c2e39afc87fcffb1e1d252"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "c550531e38640a4193c85d3e1bd091ae7ec2e4e7", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/197f360e30538f34398854e35366d8909b131057/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/197f360e30538f34398854e35366d8909b131057/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=197f360e30538f34398854e35366d8909b131057", "patch": "@@ -718,7 +718,7 @@ fn print_expr(s: ps, expr: @ast::expr) {\n         pclose(s);\n       }\n       ast::expr_call(func, args) {\n-        print_expr_parens_if_unary_or_ret(s, func);\n+        print_expr_parens_if_not_bot(s, func);\n         popen(s);\n         commasep_exprs(s, inconsistent, args);\n         pclose(s);\n@@ -885,13 +885,13 @@ fn print_expr(s: ps, expr: @ast::expr) {\n         if ends_in_lit_int(expr) {\n             popen(s); print_expr(s, expr); pclose(s);\n         } else {\n-            print_expr_parens_if_unary_or_ret(s, expr);\n+            print_expr_parens_if_not_bot(s, expr);\n         }\n         word(s.s, \".\");\n         word(s.s, id);\n       }\n       ast::expr_index(expr, index) {\n-        print_expr_parens_if_unary_or_ret(s, expr);\n+        print_expr_parens_if_not_bot(s, expr);\n         word(s.s, \"[\");\n         print_expr(s, index);\n         word(s.s, \"]\");\n@@ -993,10 +993,15 @@ fn print_expr(s: ps, expr: @ast::expr) {\n     end(s);\n }\n \n-fn print_expr_parens_if_unary_or_ret(s: ps, ex: @ast::expr) {\n+fn print_expr_parens_if_not_bot(s: ps, ex: @ast::expr) {\n     let parens = alt ex.node {\n       ast::expr_fail(_) | ast::expr_ret(_) | ast::expr_put(_) |\n-      ast::expr_unary(_, _) { true }\n+      ast::expr_binary(_, _, _) | ast::expr_unary(_, _) |\n+      ast::expr_ternary(_, _, _) | ast::expr_move(_, _) |\n+      ast::expr_copy(_) | ast::expr_assign(_, _) | ast::expr_be(_) |\n+      ast::expr_assign_op(_, _, _) | ast::expr_swap(_, _) |\n+      ast::expr_log(_, _) | ast::expr_assert(_) | ast::expr_uniq(_) |\n+      ast::expr_check(_, _) { true }\n       _ { false }\n     };\n     if parens { popen(s); }"}]}