{"sha": "d28d5b7fb4ee11d29260b477b70ac32c25f61cff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyOGQ1YjdmYjRlZTExZDI5MjYwYjQ3N2I3MGFjMzJjMjVmNjFjZmY=", "commit": {"author": {"name": "Micah Chalmer", "email": "micah@micahchalmer.net", "date": "2014-03-12T00:23:32Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-03-12T22:01:25Z"}, "message": "Emacs: always jump the cursor if needed on indent\n\nThe rust-mode-indent-line function had a check, which ran after all the\ncalculations for how to indent had already happened, that skipped\nactually performing the indent if the line was already at the right\nindentation.\n\nBecause of that, the cursor did not jump to the indentation if the line\nwasn't changing.  This was particularly annoying if there was nothing\nbut spaces on the line and you were at the beginning of it--it looked\nlike the indent just wasn't working.\n\nThis removes the check and adds test cases to cover this.", "tree": {"sha": "47fb8b08d1d9870306b1e7f257c796c44b78bb5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47fb8b08d1d9870306b1e7f257c796c44b78bb5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d28d5b7fb4ee11d29260b477b70ac32c25f61cff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d28d5b7fb4ee11d29260b477b70ac32c25f61cff", "html_url": "https://github.com/rust-lang/rust/commit/d28d5b7fb4ee11d29260b477b70ac32c25f61cff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d28d5b7fb4ee11d29260b477b70ac32c25f61cff/comments", "author": {"login": "MicahChalmer", "id": 698400, "node_id": "MDQ6VXNlcjY5ODQwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/698400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MicahChalmer", "html_url": "https://github.com/MicahChalmer", "followers_url": "https://api.github.com/users/MicahChalmer/followers", "following_url": "https://api.github.com/users/MicahChalmer/following{/other_user}", "gists_url": "https://api.github.com/users/MicahChalmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/MicahChalmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MicahChalmer/subscriptions", "organizations_url": "https://api.github.com/users/MicahChalmer/orgs", "repos_url": "https://api.github.com/users/MicahChalmer/repos", "events_url": "https://api.github.com/users/MicahChalmer/events{/privacy}", "received_events_url": "https://api.github.com/users/MicahChalmer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aac6e317639140a149d97116d43e66b5bd76bce3", "url": "https://api.github.com/repos/rust-lang/rust/commits/aac6e317639140a149d97116d43e66b5bd76bce3", "html_url": "https://github.com/rust-lang/rust/commit/aac6e317639140a149d97116d43e66b5bd76bce3"}], "stats": {"total": 59, "additions": 50, "deletions": 9}, "files": [{"sha": "a4e837958c91b30030b1e665b909abc2df817b49", "filename": "src/etc/emacs/rust-mode-tests.el", "status": "modified", "additions": 42, "deletions": 1, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/d28d5b7fb4ee11d29260b477b70ac32c25f61cff/src%2Fetc%2Femacs%2Frust-mode-tests.el", "raw_url": "https://github.com/rust-lang/rust/raw/d28d5b7fb4ee11d29260b477b70ac32c25f61cff/src%2Fetc%2Femacs%2Frust-mode-tests.el", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Femacs%2Frust-mode-tests.el?ref=d28d5b7fb4ee11d29260b477b70ac32c25f61cff", "patch": "@@ -570,6 +570,11 @@ fn indenting_middle_of_line() {\n                pull_me_back_in();\n }\n }\n+\n+fn indented_already() {\n+    \n+    // The previous line already has its spaces\n+}\n \"\n \n       ;; Symbol -> (line column)\n@@ -596,7 +601,15 @@ fn indenting_middle_of_line() {\n                                   (after-whitespace-indent-start (13 1))\n                                   (after-whitespace-indent-target (13 8))\n                                   (middle-pull-indent-start (15 19))\n-                                  (middle-pull-indent-target (15 12))))\n+                                  (middle-pull-indent-target (15 12))\n+                                  (blank-line-indented-already-bol-start (20 0))\n+                                  (blank-line-indented-already-bol-target (20 4))\n+                                  (blank-line-indented-already-middle-start (20 2))\n+                                  (blank-line-indented-already-middle-target (20 4))\n+                                  (nonblank-line-indented-already-bol-start (21 0))\n+                                  (nonblank-line-indented-already-bol-target (21 4))\n+                                  (nonblank-line-indented-already-middle-start (21 2))\n+                                  (nonblank-line-indented-already-middle-target (21 4))))\n \n (defun rust-get-buffer-pos (pos-symbol)\n   \"Get buffer position from POS-SYMBOL.\n@@ -793,3 +806,31 @@ All positions are position symbols found in `rust-test-positions-alist'.\"\n    'middle-pull-indent-start\n    'middle-pull-indent-target\n    #'indent-for-tab-command))\n+\n+(ert-deftest indent-line-blank-line-indented-already-bol ()\n+  (rust-test-motion\n+   rust-test-indent-motion-string\n+   'blank-line-indented-already-bol-start\n+   'blank-line-indented-already-bol-target\n+   #'indent-for-tab-command))\n+\n+(ert-deftest indent-line-blank-line-indented-already-middle ()\n+  (rust-test-motion\n+   rust-test-indent-motion-string\n+   'blank-line-indented-already-middle-start\n+   'blank-line-indented-already-middle-target\n+   #'indent-for-tab-command))\n+\n+(ert-deftest indent-line-nonblank-line-indented-already-bol ()\n+  (rust-test-motion\n+   rust-test-indent-motion-string\n+   'nonblank-line-indented-already-bol-start\n+   'nonblank-line-indented-already-bol-target\n+   #'indent-for-tab-command))\n+\n+(ert-deftest indent-line-nonblank-line-indented-already-middle ()\n+  (rust-test-motion\n+   rust-test-indent-motion-string\n+   'nonblank-line-indented-already-middle-start\n+   'nonblank-line-indented-already-middle-target\n+   #'indent-for-tab-command))"}, {"sha": "3a99af3446c2e173da9d22e794d126cd46b9ee66", "filename": "src/etc/emacs/rust-mode.el", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d28d5b7fb4ee11d29260b477b70ac32c25f61cff/src%2Fetc%2Femacs%2Frust-mode.el", "raw_url": "https://github.com/rust-lang/rust/raw/d28d5b7fb4ee11d29260b477b70ac32c25f61cff/src%2Fetc%2Femacs%2Frust-mode.el", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Femacs%2Frust-mode.el?ref=d28d5b7fb4ee11d29260b477b70ac32c25f61cff", "patch": "@@ -140,14 +140,14 @@\n                     ;; Otherwise, we are continuing the same expression from the previous line,\n                     ;; so add one additional indent level\n                     (+ baseline rust-indent-offset))))))))))\n-    (when (not (eq (current-indentation) indent))\n-      ;; If we're at the beginning of the line (before or at the current\n-      ;; indentation), jump with the indentation change.  Otherwise, save the\n-      ;; excursion so that adding the indentations will leave us at the\n-      ;; equivalent position within the line to where we were before.\n-      (if (<= (current-column) (current-indentation))\n-          (indent-line-to indent)\n-        (save-excursion (indent-line-to indent))))))\n+\n+    ;; If we're at the beginning of the line (before or at the current\n+    ;; indentation), jump with the indentation change.  Otherwise, save the\n+    ;; excursion so that adding the indentations will leave us at the\n+    ;; equivalent position within the line to where we were before.\n+    (if (<= (current-column) (current-indentation))\n+        (indent-line-to indent)\n+      (save-excursion (indent-line-to indent)))))\n \n \n ;; Font-locking definitions and helpers"}]}