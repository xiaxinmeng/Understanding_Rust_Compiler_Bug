{"sha": "c9373903e759c96f2ab8ba2a78c6799b5d92b105", "node_id": "C_kwDOAAsO6NoAKGM5MzczOTAzZTc1OWM5NmYyYWI4YmEyYTc4YzY3OTliNWQ5MmIxMDU", "commit": {"author": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2022-07-14T00:46:40Z"}, "committer": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2022-07-16T16:26:37Z"}, "message": "Rearrange slice::split_mut to remove bounds check", "tree": {"sha": "3e7771c5c55f87e448cac469c225700d2811da54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e7771c5c55f87e448cac469c225700d2811da54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9373903e759c96f2ab8ba2a78c6799b5d92b105", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9373903e759c96f2ab8ba2a78c6799b5d92b105", "html_url": "https://github.com/rust-lang/rust/commit/c9373903e759c96f2ab8ba2a78c6799b5d92b105", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9373903e759c96f2ab8ba2a78c6799b5d92b105/comments", "author": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fb32dc924653e35950f17c8d91793c9ca983d03", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fb32dc924653e35950f17c8d91793c9ca983d03", "html_url": "https://github.com/rust-lang/rust/commit/9fb32dc924653e35950f17c8d91793c9ca983d03"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "a1889e3d21cb88481f3a6231149a8d52bf6296eb", "filename": "library/core/src/slice/iter.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c9373903e759c96f2ab8ba2a78c6799b5d92b105/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9373903e759c96f2ab8ba2a78c6799b5d92b105/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs?ref=c9373903e759c96f2ab8ba2a78c6799b5d92b105", "patch": "@@ -710,18 +710,17 @@ where\n             return None;\n         }\n \n-        let idx_opt = {\n-            // work around borrowck limitations\n-            let pred = &mut self.pred;\n-            self.v.iter().position(|x| (*pred)(x))\n-        };\n-        match idx_opt {\n+        match self.v.iter().position(|x| (self.pred)(x)) {\n             None => self.finish(),\n             Some(idx) => {\n-                let tmp = mem::replace(&mut self.v, &mut []);\n-                let (head, tail) = tmp.split_at_mut(idx);\n-                self.v = &mut tail[1..];\n-                Some(head)\n+                let tmp = mem::take(&mut self.v);\n+                // idx is the index of the element we are splitting on. We want to set self to the\n+                // region after idx, and return the subslice before and not including idx.\n+                // So first we split after idx\n+                let (head, tail) = tmp.split_at_mut(idx + 1);\n+                self.v = tail;\n+                // Then return the subslice up to but not including the found element\n+                Some(&mut head[..idx])\n             }\n         }\n     }"}]}