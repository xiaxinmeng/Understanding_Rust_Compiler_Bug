{"sha": "a2591639ec714a4c415ae432353ae3413ac18b67", "node_id": "C_kwDOAAsO6NoAKGEyNTkxNjM5ZWM3MTRhNGM0MTVhZTQzMjM1M2FlMzQxM2FjMThiNjc", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-06-04T14:35:19Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-06-03T16:46:20Z"}, "message": "Avoid rustc_serialize in linker.rs", "tree": {"sha": "feba7108159014a81e5ee6543767e2eaf25ca446", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/feba7108159014a81e5ee6543767e2eaf25ca446"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2591639ec714a4c415ae432353ae3413ac18b67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2591639ec714a4c415ae432353ae3413ac18b67", "html_url": "https://github.com/rust-lang/rust/commit/a2591639ec714a4c415ae432353ae3413ac18b67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2591639ec714a4c415ae432353ae3413ac18b67/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62a4f91a5a7c8c89e3eb681e6218d637ef419181", "url": "https://api.github.com/repos/rust-lang/rust/commits/62a4f91a5a7c8c89e3eb681e6218d637ef419181", "html_url": "https://github.com/rust-lang/rust/commit/62a4f91a5a7c8c89e3eb681e6218d637ef419181"}], "stats": {"total": 29, "additions": 13, "deletions": 16}, "files": [{"sha": "dca11a8e00cc6f789cb8f501e3f51448885044d9", "filename": "compiler/rustc_codegen_ssa/src/back/linker.rs", "status": "modified", "additions": 13, "deletions": 16, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/a2591639ec714a4c415ae432353ae3413ac18b67/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2591639ec714a4c415ae432353ae3413ac18b67/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs?ref=a2591639ec714a4c415ae432353ae3413ac18b67", "patch": "@@ -14,7 +14,6 @@ use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};\n use rustc_middle::middle::dependency_format::Linkage;\n use rustc_middle::middle::exported_symbols::{ExportedSymbol, SymbolExportInfo, SymbolExportKind};\n use rustc_middle::ty::TyCtxt;\n-use rustc_serialize::{json, Encoder};\n use rustc_session::config::{self, CrateType, DebugInfo, LinkerPluginLto, Lto, OptLevel, Strip};\n use rustc_session::Session;\n use rustc_span::symbol::Symbol;\n@@ -1147,26 +1146,24 @@ impl<'a> Linker for EmLinker<'a> {\n     }\n \n     fn export_symbols(&mut self, _tmpdir: &Path, _crate_type: CrateType, symbols: &[String]) {\n+        use std::fmt::Write;\n+\n         debug!(\"EXPORTED SYMBOLS:\");\n \n+        let mut encoded = \"[\".to_string();\n+        let mut symbols = symbols.iter();\n+        if let Some(first_symbol) = symbols.next() {\n+            write!(encoded, \"{:?}\", first_symbol).unwrap();\n+        }\n+        for symbol in symbols {\n+            write!(encoded, \",{:?}\", symbol).unwrap();\n+        }\n+        encoded.push(']');\n+        debug!(\"{}\", encoded);\n+\n         self.cmd.arg(\"-s\");\n \n         let mut arg = OsString::from(\"EXPORTED_FUNCTIONS=\");\n-        let mut encoded = String::new();\n-\n-        {\n-            let mut encoder = json::Encoder::new(&mut encoded);\n-            let res = encoder.emit_seq(symbols.len(), |encoder| {\n-                for (i, sym) in symbols.iter().enumerate() {\n-                    encoder.emit_seq_elt(i, |encoder| encoder.emit_str(&(\"_\".to_owned() + sym)))?;\n-                }\n-                Ok(())\n-            });\n-            if let Err(e) = res {\n-                self.sess.fatal(&format!(\"failed to encode exported symbols: {}\", e));\n-            }\n-        }\n-        debug!(\"{}\", encoded);\n         arg.push(encoded);\n \n         self.cmd.arg(arg);"}]}