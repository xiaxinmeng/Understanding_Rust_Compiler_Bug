{"sha": "fe6fc555acd51bd7ba8755d9fbc7060feb67be25", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlNmZjNTU1YWNkNTFiZDdiYTg3NTVkOWZiYzcwNjBmZWI2N2JlMjU=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-09-12T02:55:16Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-09-21T13:08:18Z"}, "message": "Add a changelog for x.py\n\n- Add a changelog and instructions for updating it\n- Use `changelog-seen` in `config.toml` and `VERSION` in bootstrap to determine whether the changelog has been read\n- Nag people if they haven't read the x.py changelog\n  + Print message twice to make sure it's seen\n- Give different error messages depending on whether the version needs to be updated or added", "tree": {"sha": "a2a1ff084475103530f9199c9460157ed76ee423", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2a1ff084475103530f9199c9460157ed76ee423"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe6fc555acd51bd7ba8755d9fbc7060feb67be25", "comment_count": 2, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe6fc555acd51bd7ba8755d9fbc7060feb67be25", "html_url": "https://github.com/rust-lang/rust/commit/fe6fc555acd51bd7ba8755d9fbc7060feb67be25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe6fc555acd51bd7ba8755d9fbc7060feb67be25/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "956e06c6c85e918524b67503c4d65c7baf539585", "url": "https://api.github.com/repos/rust-lang/rust/commits/956e06c6c85e918524b67503c4d65c7baf539585", "html_url": "https://github.com/rust-lang/rust/commit/956e06c6c85e918524b67503c4d65c7baf539585"}], "stats": {"total": 97, "additions": 96, "deletions": 1}, "files": [{"sha": "fb62e1b4726bcb42b97ee108aba55e52d91cea97", "filename": "config.toml.example", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fe6fc555acd51bd7ba8755d9fbc7060feb67be25/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/fe6fc555acd51bd7ba8755d9fbc7060feb67be25/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=fe6fc555acd51bd7ba8755d9fbc7060feb67be25", "patch": "@@ -9,6 +9,12 @@\n # a custom configuration file can also be specified with `--config` to the build\n # system.\n \n+# Keeps track of the last version of `x.py` used.\n+# If it does not match the version that is currently running,\n+# `x.py` will prompt you to update it and read the changelog.\n+# See `src/bootstrap/CHANGELOG.md` for more information.\n+changelog-seen = 1\n+\n # =============================================================================\n # Global Settings\n # ============================================================================="}, {"sha": "5fcaafab959e9edf484255b150547afd96611647", "filename": "src/bootstrap/CHANGELOG.md", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/fe6fc555acd51bd7ba8755d9fbc7060feb67be25/src%2Fbootstrap%2FCHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/fe6fc555acd51bd7ba8755d9fbc7060feb67be25/src%2Fbootstrap%2FCHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCHANGELOG.md?ref=fe6fc555acd51bd7ba8755d9fbc7060feb67be25", "patch": "@@ -0,0 +1,33 @@\n+# Changelog\n+\n+All notable changes to bootstrap will be documented in this file.\n+\n+The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n+\n+## [Non-breaking changes since the last major version]\n+\n+- Add a changelog for x.py [#76626](https://github.com/rust-lang/rust/pull/76626)\n+- Optionally, download LLVM from CI on Linux and NixOS\n+  + [#76439](https://github.com/rust-lang/rust/pull/76349)\n+  + [#76667](https://github.com/rust-lang/rust/pull/76667)\n+  + [#76708](https://github.com/rust-lang/rust/pull/76708)\n+- Distribute rustc sources as part of `rustc-dev` [#76856](https://github.com/rust-lang/rust/pull/76856)\n+- Make the default stage for x.py configurable [#76625](https://github.com/rust-lang/rust/pull/76625)\n+- Add a dedicated debug-logging option [#76588](https://github.com/rust-lang/rust/pull/76588)\n+- Add sample defaults for x.py [#76628](https://github.com/rust-lang/rust/pull/76628)\n+\n+## [Version 0] - 2020-09-11\n+\n+This is the first changelog entry, and it does not attempt to be an exhaustive list of features in x.py.\n+Instead, this documents the changes to bootstrap in the past 2 months.\n+\n+- Improve defaults in `x.py` [#73964](https://github.com/rust-lang/rust/pull/73964)\n+  (see [blog post] for details)\n+- Set `ninja = true` by default [#74922](https://github.com/rust-lang/rust/pull/74922)\n+- Avoid trying to inversely cross-compile for build triple from host triples [#76415](https://github.com/rust-lang/rust/pull/76415)\n+- Allow blessing expect-tests in tools [#75975](https://github.com/rust-lang/rust/pull/75975)\n+- `x.py check` checks tests/examples/benches [#76258](https://github.com/rust-lang/rust/pull/76258)\n+- Fix `rust.use-lld` when linker is not set [#76326](https://github.com/rust-lang/rust/pull/76326)\n+- Build tests with LLD if `use-lld = true` was passed [#76378](https://github.com/rust-lang/rust/pull/76378)\n+\n+[blog post]: https://blog.rust-lang.org/inside-rust/2020/08/30/changes-to-x-py-defaults.html"}, {"sha": "bc8bae14b210cf2f8ef97e53e7bb5662302eec2d", "filename": "src/bootstrap/README.md", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fe6fc555acd51bd7ba8755d9fbc7060feb67be25/src%2Fbootstrap%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/fe6fc555acd51bd7ba8755d9fbc7060feb67be25/src%2Fbootstrap%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FREADME.md?ref=fe6fc555acd51bd7ba8755d9fbc7060feb67be25", "patch": "@@ -313,6 +313,20 @@ are:\n   `Config` struct.\n * Adding a sanity check? Take a look at `bootstrap/sanity.rs`.\n \n+If you make a major change, please remember to:\n+\n++ Update `VERSION` in `src/bootstrap/main.rs`.\n+* Update `changelog-seen = N` in `config.toml.example`.\n+* Add an entry in `src/bootstrap/CHANGELOG.md`.\n+\n+A 'major change' includes\n+\n+* A new option or\n+* A change in the default options.\n+\n+Changes that do not affect contributors to the compiler or users\n+building rustc from source don't need an update to `VERSION`.\n+\n If you have any questions feel free to reach out on the `#t-infra` channel in\n the [Rust Zulip server][rust-zulip] or ask on internals.rust-lang.org. When\n you encounter bugs, please file issues on the rust-lang/rust issue tracker."}, {"sha": "f7512aa9fcebdd3648a9ed648aa3267a9dab6537", "filename": "src/bootstrap/bin/main.rs", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/fe6fc555acd51bd7ba8755d9fbc7060feb67be25/src%2Fbootstrap%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe6fc555acd51bd7ba8755d9fbc7060feb67be25/src%2Fbootstrap%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Fmain.rs?ref=fe6fc555acd51bd7ba8755d9fbc7060feb67be25", "patch": "@@ -12,5 +12,40 @@ use bootstrap::{Build, Config};\n fn main() {\n     let args = env::args().skip(1).collect::<Vec<_>>();\n     let config = Config::parse(&args);\n+\n+    let changelog_suggestion = check_version(&config);\n+    if let Some(suggestion) = &changelog_suggestion {\n+        println!(\"{}\", suggestion);\n+    }\n+\n     Build::new(config).build();\n+\n+    if let Some(suggestion) = changelog_suggestion {\n+        println!(\"{}\", suggestion);\n+        println!(\"note: this message was printed twice to make it more likely to be seen\");\n+    }\n+}\n+\n+fn check_version(config: &Config) -> Option<String> {\n+    const VERSION: usize = 1;\n+\n+    let mut msg = String::new();\n+\n+    let suggestion = if let Some(seen) = config.changelog_seen {\n+        if seen != VERSION {\n+            msg.push_str(\"warning: there have been changes to x.py since you last updated.\\n\");\n+            format!(\"update `config.toml` to use `changelog-seen = {}` instead\", VERSION)\n+        } else {\n+            return None;\n+        }\n+    } else {\n+        msg.push_str(\"warning: x.py has made several changes recently you may want to look at\\n\");\n+        format!(\"add `changelog-seen = {}` to `config.toml`\", VERSION)\n+    };\n+\n+    msg.push_str(\"help: consider looking at the changes in `src/bootstrap/CHANGELOG.md`\\n\");\n+    msg.push_str(\"note: to silence this warning, \");\n+    msg.push_str(&suggestion);\n+\n+    Some(msg)\n }"}, {"sha": "c74501979f0ecde4614756707dbeb018f6ef06e1", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fe6fc555acd51bd7ba8755d9fbc7060feb67be25/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe6fc555acd51bd7ba8755d9fbc7060feb67be25/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=fe6fc555acd51bd7ba8755d9fbc7060feb67be25", "patch": "@@ -42,6 +42,7 @@ macro_rules! check_ci_llvm {\n /// `config.toml.example`.\n #[derive(Default)]\n pub struct Config {\n+    pub changelog_seen: Option<usize>,\n     pub ccache: Option<String>,\n     /// Call Build::ninja() instead of this.\n     pub ninja_in_file: bool,\n@@ -273,6 +274,7 @@ impl Target {\n #[derive(Deserialize, Default)]\n #[serde(deny_unknown_fields, rename_all = \"kebab-case\")]\n struct TomlConfig {\n+    changelog_seen: Option<usize>,\n     build: Option<Build>,\n     install: Option<Install>,\n     llvm: Option<Llvm>,\n@@ -283,7 +285,10 @@ struct TomlConfig {\n }\n \n impl Merge for TomlConfig {\n-    fn merge(&mut self, TomlConfig { build, install, llvm, rust, dist, target, profile: _ }: Self) {\n+    fn merge(\n+        &mut self,\n+        TomlConfig { build, install, llvm, rust, dist, target, profile: _, changelog_seen: _ }: Self,\n+    ) {\n         fn do_merge<T: Merge>(x: &mut Option<T>, y: Option<T>) {\n             if let Some(new) = y {\n                 if let Some(original) = x {\n@@ -572,6 +577,8 @@ impl Config {\n             toml.merge(included_toml);\n         }\n \n+        config.changelog_seen = toml.changelog_seen;\n+\n         let build = toml.build.unwrap_or_default();\n \n         // If --target was specified but --host wasn't specified, don't run any host-only tests."}]}