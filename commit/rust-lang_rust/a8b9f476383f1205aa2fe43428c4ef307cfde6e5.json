{"sha": "a8b9f476383f1205aa2fe43428c4ef307cfde6e5", "node_id": "C_kwDOAAsO6NoAKGE4YjlmNDc2MzgzZjEyMDVhYTJmZTQzNDI4YzRlZjMwN2NmZGU2ZTU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-03T19:44:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-03T19:44:59Z"}, "message": "Rollup merge of #104549 - folkertdev:unstable-book-export-executable-symbols, r=WaffleLapkin\n\nadd -Zexport-executable-symbols to unstable book\n\nThis flag has been extremely useful to me, but it's hard to discover. The text contains a bunch of terms that hopefully a search engine will pick up on when someone searches for this functionality.", "tree": {"sha": "7a4937a12c746c66733abedd11dcdd2af73f8107", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a4937a12c746c66733abedd11dcdd2af73f8107"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8b9f476383f1205aa2fe43428c4ef307cfde6e5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkAk47CRBK7hj4Ov3rIwAAGbIIAEgLx9NySRt4ZXBA5WYUMsfN\np4UpEj3IOJm3YLLz/ST4rDeHNTMX84kzXeFpmOd0rhLu8gJlGv/zIPWzY0J7HqJj\nOBcwOrXZJLoz+18gG1q4MWrnfR15/g+f7ZaqJ5ZJIA3HQ0cKXTmTj6HqOktTrVsU\nZtiSwhqICJTUMPlJgmedwAABonKDiuwbwxzKPvCkct1970jW3uTM1oi3LjEwjJ1K\nF+cBnVfGhz0SEBR5rhDHoOeNxyW4fCp9sFQ7OE7sf0lDinlKCMJ6G++aEAwhJG/9\nTwkibrd1czNC4UUa4mt4FgASpfc9vKypZB0NmqOem9O1+THD1vz8YjRoEK8I5us=\n=4wx+\n-----END PGP SIGNATURE-----\n", "payload": "tree 7a4937a12c746c66733abedd11dcdd2af73f8107\nparent 7a809ce8997a1697b166b4bb2594993e87d69f31\nparent f53b364dd652c108ae950fb95ff50147dcd5aa67\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1677872699 +0100\ncommitter GitHub <noreply@github.com> 1677872699 +0100\n\nRollup merge of #104549 - folkertdev:unstable-book-export-executable-symbols, r=WaffleLapkin\n\nadd -Zexport-executable-symbols to unstable book\n\nThis flag has been extremely useful to me, but it's hard to discover. The text contains a bunch of terms that hopefully a search engine will pick up on when someone searches for this functionality.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8b9f476383f1205aa2fe43428c4ef307cfde6e5", "html_url": "https://github.com/rust-lang/rust/commit/a8b9f476383f1205aa2fe43428c4ef307cfde6e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8b9f476383f1205aa2fe43428c4ef307cfde6e5/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a809ce8997a1697b166b4bb2594993e87d69f31", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a809ce8997a1697b166b4bb2594993e87d69f31", "html_url": "https://github.com/rust-lang/rust/commit/7a809ce8997a1697b166b4bb2594993e87d69f31"}, {"sha": "f53b364dd652c108ae950fb95ff50147dcd5aa67", "url": "https://api.github.com/repos/rust-lang/rust/commits/f53b364dd652c108ae950fb95ff50147dcd5aa67", "html_url": "https://github.com/rust-lang/rust/commit/f53b364dd652c108ae950fb95ff50147dcd5aa67"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "c7f10afaccccd09af32d124e6a665365c956ea61", "filename": "src/doc/unstable-book/src/compiler-flags/export-executable-symbols.md", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/a8b9f476383f1205aa2fe43428c4ef307cfde6e5/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fexport-executable-symbols.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8b9f476383f1205aa2fe43428c4ef307cfde6e5/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fexport-executable-symbols.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fexport-executable-symbols.md?ref=a8b9f476383f1205aa2fe43428c4ef307cfde6e5", "patch": "@@ -0,0 +1,43 @@\n+# `export-executable-symbols`\n+\n+The tracking issue for this feature is: [#84161](https://github.com/rust-lang/rust/issues/84161).\n+\n+------------------------\n+\n+The `-Zexport-executable-symbols` compiler flag makes `rustc` export symbols from executables. The resulting binary is runnable, but can also be used as a dynamic library. This is useful for interoperating with programs written in other languages, in particular languages with a runtime like Java or Lua.\n+\n+For example on windows:\n+```rust\n+#[no_mangle]\n+fn my_function() -> usize {\n+    return 42;\n+}\n+\n+fn main() {\n+    println!(\"Hello, world!\");\n+}\n+```\n+\n+A standard `cargo build` will produce a `.exe` without an export directory. When the `export-executable-symbols` flag is added\n+\n+```Bash\n+export RUSTFLAGS=\"-Zexport-executable-symbols\"\n+cargo build\n+```\n+\n+the binary has an export directory with the functions:\n+\n+```plain\n+The Export Tables (interpreted .edata section contents)\n+\n+...\n+\n+[Ordinal/Name Pointer] Table\n+    [   0] my_function\n+    [   1] main\n+```\n+(the output of `objdump -x` on the binary)\n+\n+Please note that the `#[no_mangle]` attribute is required. Without it, the symbol is not exported.\n+\n+The equivalent of this flag in C and C++ compilers is the `__declspec(dllexport)` annotation or the `-rdynamic` linker flag."}]}