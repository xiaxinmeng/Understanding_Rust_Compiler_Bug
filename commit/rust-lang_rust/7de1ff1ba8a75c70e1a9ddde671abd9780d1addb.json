{"sha": "7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "node_id": "C_kwDOAAsO6NoAKDdkZTFmZjFiYThhNzVjNzBlMWE5ZGRkZTY3MWFiZDk3ODBkMWFkZGI", "commit": {"author": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2021-10-20T13:56:10Z"}, "committer": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2021-10-26T01:33:07Z"}, "message": "Edit error messages for rustc_resolve::AmbiguityKind variants\n\nEmit description of the ambiguity as a note.\n\nCo-authored-by: Noah Lev <camelidcamel@gmail.com>\nCo-authored-by: Vadim Petrochenkov <vadim.petrochenkov@gmail.com>", "tree": {"sha": "c47fa7c179f9e013b51195d86cf1e4172624e72d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c47fa7c179f9e013b51195d86cf1e4172624e72d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "html_url": "https://github.com/rust-lang/rust/commit/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/comments", "author": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84c2a8505dcdfa0e38e05f72066480ea51ba9cbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/84c2a8505dcdfa0e38e05f72066480ea51ba9cbd", "html_url": "https://github.com/rust-lang/rust/commit/84c2a8505dcdfa0e38e05f72066480ea51ba9cbd"}], "stats": {"total": 253, "additions": 160, "deletions": 93}, "files": [{"sha": "f94266c3aeaf052345d6a1f150104e13b107b093", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1165,14 +1165,9 @@ impl<'a> Resolver<'a> {\n             (b1, b2, misc1, misc2, false)\n         };\n \n-        let mut err = struct_span_err!(\n-            self.session,\n-            ident.span,\n-            E0659,\n-            \"`{ident}` is ambiguous ({why})\",\n-            why = kind.descr()\n-        );\n+        let mut err = struct_span_err!(self.session, ident.span, E0659, \"`{ident}` is ambiguous\");\n         err.span_label(ident.span, \"ambiguous name\");\n+        err.note(&format!(\"ambiguous because of {}\", kind.descr()));\n \n         let mut could_refer_to = |b: &NameBinding<'_>, misc: AmbiguityErrorMisc, also: &str| {\n             let what = self.binding_description(b, ident, misc == AmbiguityErrorMisc::FromPrelude);"}, {"sha": "4ba7e7d6f3b97b55d66dc0a2c5cfdbacf6ed859d", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -728,23 +728,21 @@ enum AmbiguityKind {\n impl AmbiguityKind {\n     fn descr(self) -> &'static str {\n         match self {\n-            AmbiguityKind::Import => \"name vs any other name during import resolution\",\n-            AmbiguityKind::BuiltinAttr => \"built-in attribute vs any other name\",\n-            AmbiguityKind::DeriveHelper => \"derive helper attribute vs any other name\",\n+            AmbiguityKind::Import => \"multiple potential import sources\",\n+            AmbiguityKind::BuiltinAttr => \"a name conflict with a builtin attribute\",\n+            AmbiguityKind::DeriveHelper => \"a name conflict with a derive helper attribute\",\n             AmbiguityKind::MacroRulesVsModularized => {\n-                \"`macro_rules` vs non-`macro_rules` from other module\"\n+                \"a conflict between a `macro_rules` name and a non-`macro_rules` name from another module\"\n             }\n             AmbiguityKind::GlobVsOuter => {\n-                \"glob import vs any other name from outer scope during import/macro resolution\"\n+                \"a conflict between a name from a glob import and an outer scope during import or macro resolution\"\n             }\n-            AmbiguityKind::GlobVsGlob => \"glob import vs glob import in the same module\",\n+            AmbiguityKind::GlobVsGlob => \"multiple glob imports of a name in the same module\",\n             AmbiguityKind::GlobVsExpanded => {\n-                \"glob import vs macro-expanded name in the same \\\n-                 module during import/macro resolution\"\n+                \"a conflict between a name from a glob import and a macro-expanded name in the same module during import or macro resolution\"\n             }\n             AmbiguityKind::MoreExpandedVsOuter => {\n-                \"macro-expanded name vs less macro-expanded name \\\n-                 from outer scope during import/macro resolution\"\n+                \"a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\"\n             }\n         }\n     }"}, {"sha": "f36201396423adb1b7bc3fd3c995c4bd2ee3d353", "filename": "src/test/ui/binding/ambiguity-item.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fbinding%2Fambiguity-item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fbinding%2Fambiguity-item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbinding%2Fambiguity-item.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,9 +1,10 @@\n-error[E0659]: `f` is ambiguous (glob import vs glob import in the same module)\n+error[E0659]: `f` is ambiguous\n   --> $DIR/ambiguity-item.rs:14:13\n    |\n LL |     let v = f;\n    |             ^ ambiguous name\n    |\n+   = note: ambiguous because of multiple glob imports of a name in the same module\n note: `f` could refer to the function imported here\n   --> $DIR/ambiguity-item.rs:6:5\n    |\n@@ -17,12 +18,13 @@ LL | use n::*; // OK, no conflict with `use m::*;`\n    |     ^^^^\n    = help: consider adding an explicit import of `f` to disambiguate\n \n-error[E0659]: `f` is ambiguous (glob import vs glob import in the same module)\n+error[E0659]: `f` is ambiguous\n   --> $DIR/ambiguity-item.rs:16:9\n    |\n LL |         f => {}\n    |         ^ ambiguous name\n    |\n+   = note: ambiguous because of multiple glob imports of a name in the same module\n note: `f` could refer to the function imported here\n   --> $DIR/ambiguity-item.rs:6:5\n    |"}, {"sha": "e8c70b06513c28b59bd14e072ce4a2db784b7264", "filename": "src/test/ui/entry-point/imported_main_conflict.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fentry-point%2Fimported_main_conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fentry-point%2Fimported_main_conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fentry-point%2Fimported_main_conflict.rs?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,5 +1,5 @@\n #![feature(imported_main)]\n-//~^ ERROR `main` is ambiguous (glob import vs glob import in the same module)\n+//~^ ERROR `main` is ambiguous\n mod m1 { pub(crate) fn main() {} }\n mod m2 { pub(crate) fn main() {} }\n "}, {"sha": "8fadd0e19b395a83b3b0bbb98b3598843478dc80", "filename": "src/test/ui/entry-point/imported_main_conflict.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fentry-point%2Fimported_main_conflict.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fentry-point%2Fimported_main_conflict.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fentry-point%2Fimported_main_conflict.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,5 +1,6 @@\n-error[E0659]: `main` is ambiguous (glob import vs glob import in the same module)\n+error[E0659]: `main` is ambiguous\n    |\n+   = note: ambiguous because of multiple glob imports of a name in the same module\n note: `main` could refer to the function imported here\n   --> $DIR/imported_main_conflict.rs:6:5\n    |"}, {"sha": "b0c73c636c62ffd0a95dfef75f82bdb1e3bb26dd", "filename": "src/test/ui/error-codes/E0659.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Ferror-codes%2FE0659.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Ferror-codes%2FE0659.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0659.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,9 +1,10 @@\n-error[E0659]: `foo` is ambiguous (glob import vs glob import in the same module)\n+error[E0659]: `foo` is ambiguous\n   --> $DIR/E0659.rs:15:15\n    |\n LL |     collider::foo();\n    |               ^^^ ambiguous name\n    |\n+   = note: ambiguous because of multiple glob imports of a name in the same module\n note: `foo` could refer to the function imported here\n   --> $DIR/E0659.rs:10:13\n    |"}, {"sha": "997a2741b382c8de1a7cc4efb1ffe58acda53681", "filename": "src/test/ui/imports/duplicate.stderr", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fimports%2Fduplicate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fimports%2Fduplicate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fduplicate.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -8,12 +8,13 @@ LL |     use a::foo;\n    |\n    = note: `foo` must be defined only once in the value namespace of this module\n \n-error[E0659]: `foo` is ambiguous (glob import vs glob import in the same module)\n+error[E0659]: `foo` is ambiguous\n   --> $DIR/duplicate.rs:46:15\n    |\n LL |     use self::foo::bar;\n    |               ^^^ ambiguous name\n    |\n+   = note: ambiguous because of multiple glob imports of a name in the same module\n note: `foo` could refer to the module imported here\n   --> $DIR/duplicate.rs:43:9\n    |\n@@ -27,12 +28,13 @@ LL |     use self::m2::*;\n    |         ^^^^^^^^^^^\n    = help: consider adding an explicit import of `foo` to disambiguate\n \n-error[E0659]: `foo` is ambiguous (glob import vs glob import in the same module)\n+error[E0659]: `foo` is ambiguous\n   --> $DIR/duplicate.rs:35:8\n    |\n LL |     f::foo();\n    |        ^^^ ambiguous name\n    |\n+   = note: ambiguous because of multiple glob imports of a name in the same module\n note: `foo` could refer to the function imported here\n   --> $DIR/duplicate.rs:24:13\n    |\n@@ -46,12 +48,13 @@ LL |     pub use b::*;\n    |             ^^^^\n    = help: consider adding an explicit import of `foo` to disambiguate\n \n-error[E0659]: `foo` is ambiguous (glob import vs glob import in the same module)\n+error[E0659]: `foo` is ambiguous\n   --> $DIR/duplicate.rs:49:9\n    |\n LL |         foo::bar();\n    |         ^^^ ambiguous name\n    |\n+   = note: ambiguous because of multiple glob imports of a name in the same module\n note: `foo` could refer to the module imported here\n   --> $DIR/duplicate.rs:43:9\n    |"}, {"sha": "c31c8840381537217a3ac5273b2561718a1da352", "filename": "src/test/ui/imports/extern-prelude-extern-crate-restricted-shadowing.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-restricted-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-restricted-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-restricted-shadowing.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -9,12 +9,13 @@ LL | define_other_core!();\n    |\n    = note: this error originates in the macro `define_other_core` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0659]: `Vec` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n+error[E0659]: `Vec` is ambiguous\n   --> $DIR/extern-prelude-extern-crate-restricted-shadowing.rs:13:9\n    |\n LL |         Vec::panic!();\n    |         ^^^ ambiguous name\n    |\n+   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n note: `Vec` could refer to the crate imported here\n   --> $DIR/extern-prelude-extern-crate-restricted-shadowing.rs:5:9\n    |"}, {"sha": "aff2eff68ac86d708015eefa2019c87b024d9d1c", "filename": "src/test/ui/imports/glob-shadowing.stderr", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fimports%2Fglob-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fimports%2Fglob-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fglob-shadowing.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,9 +1,10 @@\n-error[E0659]: `env` is ambiguous (glob import vs any other name from outer scope during import/macro resolution)\n+error[E0659]: `env` is ambiguous\n   --> $DIR/glob-shadowing.rs:11:17\n    |\n LL |         let x = env!(\"PATH\");\n    |                 ^^^ ambiguous name\n    |\n+   = note: ambiguous because of a conflict between a name from a glob import and an outer scope during import or macro resolution\n    = note: `env` could refer to a macro from prelude\n note: `env` could also refer to the macro imported here\n   --> $DIR/glob-shadowing.rs:9:9\n@@ -13,12 +14,13 @@ LL |     use m::*;\n    = help: consider adding an explicit import of `env` to disambiguate\n    = help: or use `self::env` to refer to this macro unambiguously\n \n-error[E0659]: `env` is ambiguous (glob import vs any other name from outer scope during import/macro resolution)\n+error[E0659]: `env` is ambiguous\n   --> $DIR/glob-shadowing.rs:19:21\n    |\n LL |             let x = env!(\"PATH\");\n    |                     ^^^ ambiguous name\n    |\n+   = note: ambiguous because of a conflict between a name from a glob import and an outer scope during import or macro resolution\n    = note: `env` could refer to a macro from prelude\n note: `env` could also refer to the macro imported here\n   --> $DIR/glob-shadowing.rs:17:13\n@@ -27,12 +29,13 @@ LL |         use m::*;\n    |             ^^^^\n    = help: consider adding an explicit import of `env` to disambiguate\n \n-error[E0659]: `fenv` is ambiguous (glob import vs any other name from outer scope during import/macro resolution)\n+error[E0659]: `fenv` is ambiguous\n   --> $DIR/glob-shadowing.rs:29:21\n    |\n LL |             let x = fenv!();\n    |                     ^^^^ ambiguous name\n    |\n+   = note: ambiguous because of a conflict between a name from a glob import and an outer scope during import or macro resolution\n note: `fenv` could refer to the macro imported here\n   --> $DIR/glob-shadowing.rs:27:13\n    |"}, {"sha": "a0e7bf8b61f6e4ceb79617cb9528b59be35952ee", "filename": "src/test/ui/imports/issue-53269.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fimports%2Fissue-53269.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fimports%2Fissue-53269.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fissue-53269.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -4,12 +4,13 @@ error[E0432]: unresolved import `nonexistent_module`\n LL |     use nonexistent_module::mac;\n    |         ^^^^^^^^^^^^^^^^^^ maybe a missing crate `nonexistent_module`?\n \n-error[E0659]: `mac` is ambiguous (`macro_rules` vs non-`macro_rules` from other module)\n+error[E0659]: `mac` is ambiguous\n   --> $DIR/issue-53269.rs:8:5\n    |\n LL |     mac!();\n    |     ^^^ ambiguous name\n    |\n+   = note: ambiguous because of a conflict between a `macro_rules` name and a non-`macro_rules` name from another module\n note: `mac` could refer to the macro defined here\n   --> $DIR/issue-53269.rs:3:1\n    |"}, {"sha": "c38166ddea6aaf4e4d6358828fdcbb30303be6b2", "filename": "src/test/ui/imports/issue-55884-1.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fimports%2Fissue-55884-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fimports%2Fissue-55884-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fissue-55884-1.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,9 +1,10 @@\n-error[E0659]: `S` is ambiguous (glob import vs glob import in the same module)\n+error[E0659]: `S` is ambiguous\n   --> $DIR/issue-55884-1.rs:19:12\n    |\n LL |     use m::S;\n    |            ^ ambiguous name\n    |\n+   = note: ambiguous because of multiple glob imports of a name in the same module\n note: `S` could refer to the struct imported here\n   --> $DIR/issue-55884-1.rs:14:13\n    |"}, {"sha": "2e4ba86237676090cb292469ee0b4b908317a816", "filename": "src/test/ui/imports/issue-56125.stderr", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fimports%2Fissue-56125.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fimports%2Fissue-56125.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fissue-56125.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -4,12 +4,13 @@ error[E0432]: unresolved import `empty::issue_56125`\n LL |     use empty::issue_56125;\n    |         ^^^^^^^^^^^^^^^^^^ no `issue_56125` in `m3::empty`\n \n-error[E0659]: `issue_56125` is ambiguous (name vs any other name during import resolution)\n+error[E0659]: `issue_56125` is ambiguous\n   --> $DIR/issue-56125.rs:6:9\n    |\n LL |     use issue_56125::last_segment::*;\n    |         ^^^^^^^^^^^ ambiguous name\n    |\n+   = note: ambiguous because of multiple potential import sources\n    = note: `issue_56125` could refer to a crate passed with `--extern`\n    = help: use `::issue_56125` to refer to this crate unambiguously\n note: `issue_56125` could also refer to the module imported here\n@@ -19,12 +20,13 @@ LL |     use issue_56125::last_segment::*;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: use `self::issue_56125` to refer to this module unambiguously\n \n-error[E0659]: `issue_56125` is ambiguous (name vs any other name during import resolution)\n+error[E0659]: `issue_56125` is ambiguous\n   --> $DIR/issue-56125.rs:11:9\n    |\n LL |     use issue_56125::non_last_segment::non_last_segment::*;\n    |         ^^^^^^^^^^^ ambiguous name\n    |\n+   = note: ambiguous because of multiple potential import sources\n    = note: `issue_56125` could refer to a crate passed with `--extern`\n    = help: use `::issue_56125` to refer to this crate unambiguously\n note: `issue_56125` could also refer to the module imported here\n@@ -34,12 +36,13 @@ LL |     use issue_56125::non_last_segment::non_last_segment::*;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: use `self::issue_56125` to refer to this module unambiguously\n \n-error[E0659]: `issue_56125` is ambiguous (name vs any other name during import resolution)\n+error[E0659]: `issue_56125` is ambiguous\n   --> $DIR/issue-56125.rs:18:9\n    |\n LL |     use issue_56125::*;\n    |         ^^^^^^^^^^^ ambiguous name\n    |\n+   = note: ambiguous because of multiple potential import sources\n    = note: `issue_56125` could refer to a crate passed with `--extern`\n    = help: use `::issue_56125` to refer to this crate unambiguously\n note: `issue_56125` could also refer to the module imported here"}, {"sha": "1a3ca4edaca9be106d3cb5d12d22e8b6d6984d05", "filename": "src/test/ui/imports/issue-57539.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fimports%2Fissue-57539.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fimports%2Fissue-57539.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fissue-57539.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,9 +1,10 @@\n-error[E0659]: `core` is ambiguous (name vs any other name during import resolution)\n+error[E0659]: `core` is ambiguous\n   --> $DIR/issue-57539.rs:4:9\n    |\n LL |     use core;\n    |         ^^^^ ambiguous name\n    |\n+   = note: ambiguous because of multiple potential import sources\n    = note: `core` could refer to a built-in crate\n    = help: use `::core` to refer to this crate unambiguously\n note: `core` could also refer to the module imported here"}, {"sha": "c048d2ea204202904d94bea1d31df44c42bcfaae", "filename": "src/test/ui/imports/local-modularized-tricky-fail-1.stderr", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,9 +1,10 @@\n-error[E0659]: `exported` is ambiguous (glob import vs macro-expanded name in the same module during import/macro resolution)\n+error[E0659]: `exported` is ambiguous\n   --> $DIR/local-modularized-tricky-fail-1.rs:28:1\n    |\n LL | exported!();\n    | ^^^^^^^^ ambiguous name\n    |\n+   = note: ambiguous because of a conflict between a name from a glob import and a macro-expanded name in the same module during import or macro resolution\n note: `exported` could refer to the macro defined here\n   --> $DIR/local-modularized-tricky-fail-1.rs:5:5\n    |\n@@ -22,12 +23,13 @@ LL | use inner1::*;\n    = help: consider adding an explicit import of `exported` to disambiguate\n    = note: this error originates in the macro `define_exported` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0659]: `exported` is ambiguous (glob import vs macro-expanded name in the same module during import/macro resolution)\n+error[E0659]: `exported` is ambiguous\n   --> $DIR/local-modularized-tricky-fail-1.rs:28:1\n    |\n LL | exported!();\n    | ^^^^^^^^ ambiguous name\n    |\n+   = note: ambiguous because of a conflict between a name from a glob import and a macro-expanded name in the same module during import or macro resolution\n note: `exported` could refer to the macro defined here\n   --> $DIR/local-modularized-tricky-fail-1.rs:5:5\n    |\n@@ -46,12 +48,13 @@ LL | use inner1::*;\n    = help: consider adding an explicit import of `exported` to disambiguate\n    = note: this error originates in the macro `define_exported` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0659]: `panic` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n+error[E0659]: `panic` is ambiguous\n   --> $DIR/local-modularized-tricky-fail-1.rs:36:5\n    |\n LL |     panic!();\n    |     ^^^^^ ambiguous name\n    |\n+   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n    = note: `panic` could refer to a macro from prelude\n note: `panic` could also refer to the macro defined here\n   --> $DIR/local-modularized-tricky-fail-1.rs:11:5\n@@ -66,12 +69,13 @@ LL |       define_panic!();\n    = help: use `crate::panic` to refer to this macro unambiguously\n    = note: this error originates in the macro `define_panic` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0659]: `include` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n+error[E0659]: `include` is ambiguous\n   --> $DIR/local-modularized-tricky-fail-1.rs:47:1\n    |\n LL | include!();\n    | ^^^^^^^ ambiguous name\n    |\n+   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n    = note: `include` could refer to a macro from prelude\n note: `include` could also refer to the macro defined here\n   --> $DIR/local-modularized-tricky-fail-1.rs:17:5"}, {"sha": "5f113ce2bee5df8045f87d635c07fa083796b5bf", "filename": "src/test/ui/imports/macro-paths.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fimports%2Fmacro-paths.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fimports%2Fmacro-paths.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fmacro-paths.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,9 +1,10 @@\n-error[E0659]: `bar` is ambiguous (glob import vs macro-expanded name in the same module during import/macro resolution)\n+error[E0659]: `bar` is ambiguous\n   --> $DIR/macro-paths.rs:13:5\n    |\n LL |     bar::m! {\n    |     ^^^ ambiguous name\n    |\n+   = note: ambiguous because of a conflict between a name from a glob import and a macro-expanded name in the same module during import or macro resolution\n note: `bar` could refer to the module defined here\n   --> $DIR/macro-paths.rs:14:9\n    |\n@@ -16,12 +17,13 @@ LL |     use foo::*;\n    |         ^^^^^^\n    = help: consider adding an explicit import of `bar` to disambiguate\n \n-error[E0659]: `baz` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n+error[E0659]: `baz` is ambiguous\n   --> $DIR/macro-paths.rs:23:5\n    |\n LL |     baz::m! {\n    |     ^^^ ambiguous name\n    |\n+   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n note: `baz` could refer to the module defined here\n   --> $DIR/macro-paths.rs:24:9\n    |"}, {"sha": "110548d1d6ae1604784e8f4768d875ea3da40639", "filename": "src/test/ui/imports/macros.stderr", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fimports%2Fmacros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fimports%2Fmacros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fmacros.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,9 +1,10 @@\n-error[E0659]: `m` is ambiguous (glob import vs macro-expanded name in the same module during import/macro resolution)\n+error[E0659]: `m` is ambiguous\n   --> $DIR/macros.rs:16:5\n    |\n LL |     m! {\n    |     ^ ambiguous name\n    |\n+   = note: ambiguous because of a conflict between a name from a glob import and a macro-expanded name in the same module during import or macro resolution\n note: `m` could refer to the macro imported here\n   --> $DIR/macros.rs:18:13\n    |\n@@ -16,12 +17,13 @@ LL |     use two_macros::*;\n    |         ^^^^^^^^^^^^^\n    = help: consider adding an explicit import of `m` to disambiguate\n \n-error[E0659]: `m` is ambiguous (glob import vs macro-expanded name in the same module during import/macro resolution)\n+error[E0659]: `m` is ambiguous\n   --> $DIR/macros.rs:16:5\n    |\n LL |     m! {\n    |     ^ ambiguous name\n    |\n+   = note: ambiguous because of a conflict between a name from a glob import and a macro-expanded name in the same module during import or macro resolution\n note: `m` could refer to the macro imported here\n   --> $DIR/macros.rs:18:13\n    |\n@@ -34,12 +36,13 @@ LL |     use two_macros::*;\n    |         ^^^^^^^^^^^^^\n    = help: consider adding an explicit import of `m` to disambiguate\n \n-error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n+error[E0659]: `m` is ambiguous\n   --> $DIR/macros.rs:30:9\n    |\n LL |         m! {\n    |         ^ ambiguous name\n    |\n+   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n note: `m` could refer to the macro imported here\n   --> $DIR/macros.rs:31:17\n    |"}, {"sha": "fd7e99165b551c40ad824042d33913e402e2454b", "filename": "src/test/ui/imports/rfc-1560-warning-cycle.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fimports%2Frfc-1560-warning-cycle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fimports%2Frfc-1560-warning-cycle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Frfc-1560-warning-cycle.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,9 +1,10 @@\n-error[E0659]: `Foo` is ambiguous (glob import vs glob import in the same module)\n+error[E0659]: `Foo` is ambiguous\n   --> $DIR/rfc-1560-warning-cycle.rs:9:17\n    |\n LL |         fn f(_: Foo) {}\n    |                 ^^^ ambiguous name\n    |\n+   = note: ambiguous because of multiple glob imports of a name in the same module\n note: `Foo` could refer to the struct imported here\n   --> $DIR/rfc-1560-warning-cycle.rs:7:13\n    |"}, {"sha": "6ffb31c20e60a21e894468c603cdd18bbb6217e4", "filename": "src/test/ui/imports/shadow_builtin_macros.stderr", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fimports%2Fshadow_builtin_macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fimports%2Fshadow_builtin_macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fshadow_builtin_macros.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,9 +1,10 @@\n-error[E0659]: `panic` is ambiguous (glob import vs any other name from outer scope during import/macro resolution)\n+error[E0659]: `panic` is ambiguous\n   --> $DIR/shadow_builtin_macros.rs:15:14\n    |\n LL |     fn f() { panic!(); }\n    |              ^^^^^ ambiguous name\n    |\n+   = note: ambiguous because of a conflict between a name from a glob import and an outer scope during import or macro resolution\n    = note: `panic` could refer to a macro from prelude\n note: `panic` could also refer to the macro imported here\n   --> $DIR/shadow_builtin_macros.rs:14:9\n@@ -13,12 +14,13 @@ LL |     use foo::*;\n    = help: consider adding an explicit import of `panic` to disambiguate\n    = help: or use `self::panic` to refer to this macro unambiguously\n \n-error[E0659]: `panic` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n+error[E0659]: `panic` is ambiguous\n   --> $DIR/shadow_builtin_macros.rs:33:5\n    |\n LL |     panic!();\n    |     ^^^^^ ambiguous name\n    |\n+   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n    = note: `panic` could refer to a macro from prelude\n note: `panic` could also refer to the macro defined here\n   --> $DIR/shadow_builtin_macros.rs:30:9\n@@ -30,12 +32,13 @@ LL |     m!();\n    |     ---- in this macro invocation\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0659]: `n` is ambiguous (glob import vs any other name from outer scope during import/macro resolution)\n+error[E0659]: `n` is ambiguous\n   --> $DIR/shadow_builtin_macros.rs:49:5\n    |\n LL |     n!();\n    |     ^ ambiguous name\n    |\n+   = note: ambiguous because of a conflict between a name from a glob import and an outer scope during import or macro resolution\n note: `n` could refer to the macro imported here\n   --> $DIR/shadow_builtin_macros.rs:48:9\n    |\n@@ -49,12 +52,13 @@ note: `n` could also refer to the macro imported here\n LL | #[macro_use(n)]\n    |             ^\n \n-error[E0659]: `panic` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n+error[E0659]: `panic` is ambiguous\n   --> $DIR/shadow_builtin_macros.rs:20:14\n    |\n LL |     fn f() { panic!(); }\n    |              ^^^^^ ambiguous name\n    |\n+   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n    = note: `panic` could refer to a macro from prelude\n note: `panic` could also refer to the macro imported here\n   --> $DIR/shadow_builtin_macros.rs:19:26"}, {"sha": "330aa6acf3550295a56b83e341b7fe861fc1bee0", "filename": "src/test/ui/macros/ambiguity-legacy-vs-modern.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fmacros%2Fambiguity-legacy-vs-modern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fmacros%2Fambiguity-legacy-vs-modern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fambiguity-legacy-vs-modern.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,9 +1,10 @@\n-error[E0659]: `m` is ambiguous (`macro_rules` vs non-`macro_rules` from other module)\n+error[E0659]: `m` is ambiguous\n   --> $DIR/ambiguity-legacy-vs-modern.rs:31:9\n    |\n LL |         m!()\n    |         ^ ambiguous name\n    |\n+   = note: ambiguous because of a conflict between a `macro_rules` name and a non-`macro_rules` name from another module\n note: `m` could refer to the macro defined here\n   --> $DIR/ambiguity-legacy-vs-modern.rs:26:5\n    |\n@@ -15,12 +16,13 @@ note: `m` could also refer to the macro defined here\n LL |         macro m() { 0 }\n    |         ^^^^^^^^^^^^^^^\n \n-error[E0659]: `m` is ambiguous (`macro_rules` vs non-`macro_rules` from other module)\n+error[E0659]: `m` is ambiguous\n   --> $DIR/ambiguity-legacy-vs-modern.rs:43:5\n    |\n LL |     m!()\n    |     ^ ambiguous name\n    |\n+   = note: ambiguous because of a conflict between a `macro_rules` name and a non-`macro_rules` name from another module\n note: `m` could refer to the macro defined here\n   --> $DIR/ambiguity-legacy-vs-modern.rs:40:9\n    |"}, {"sha": "4a864c2e92718f08d89d93b0ca943ebdb14b8bdb", "filename": "src/test/ui/macros/macro-path-prelude-shadowing.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-shadowing.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,9 +1,10 @@\n-error[E0659]: `std` is ambiguous (glob import vs any other name from outer scope during import/macro resolution)\n+error[E0659]: `std` is ambiguous\n   --> $DIR/macro-path-prelude-shadowing.rs:29:9\n    |\n LL |         std::panic!();\n    |         ^^^ ambiguous name\n    |\n+   = note: ambiguous because of a conflict between a name from a glob import and an outer scope during import or macro resolution\n    = note: `std` could refer to a built-in crate\n note: `std` could also refer to the module imported here\n   --> $DIR/macro-path-prelude-shadowing.rs:27:9"}, {"sha": "a052b43ac10e408ca40ab019064aa744642a61e1", "filename": "src/test/ui/macros/macro-shadowing.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fmacros%2Fmacro-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fmacros%2Fmacro-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-shadowing.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -10,12 +10,13 @@ LL | m1!();\n    = note: macro-expanded `#[macro_use]`s may not shadow existing macros (see RFC 1560)\n    = note: this error originates in the macro `m1` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0659]: `foo` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n+error[E0659]: `foo` is ambiguous\n   --> $DIR/macro-shadowing.rs:17:1\n    |\n LL | foo!();\n    | ^^^ ambiguous name\n    |\n+   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n note: `foo` could refer to the macro defined here\n   --> $DIR/macro-shadowing.rs:10:5\n    |"}, {"sha": "dedefac5c464c9a842d1454b5f9d60dfe2be3f42", "filename": "src/test/ui/macros/out-of-order-shadowing.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fmacros%2Fout-of-order-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fmacros%2Fout-of-order-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fout-of-order-shadowing.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,9 +1,10 @@\n-error[E0659]: `bar` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n+error[E0659]: `bar` is ambiguous\n   --> $DIR/out-of-order-shadowing.rs:5:1\n    |\n LL | bar!();\n    | ^^^ ambiguous name\n    |\n+   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n note: `bar` could refer to the macro defined here\n   --> $DIR/out-of-order-shadowing.rs:4:1\n    |"}, {"sha": "99b27a5cab123088cdd80a6c4f1ead1bb3d02da0", "filename": "src/test/ui/macros/restricted-shadowing-legacy.stderr", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fmacros%2Frestricted-shadowing-legacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fmacros%2Frestricted-shadowing-legacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Frestricted-shadowing-legacy.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,4 +1,4 @@\n-error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n+error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-legacy.rs:101:13\n    |\n LL |             m!();\n@@ -7,6 +7,7 @@ LL |             m!();\n LL | include!();\n    | ---------- in this macro invocation\n    |\n+   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n    |\n@@ -25,7 +26,7 @@ LL | include!();\n    | ---------- in this macro invocation\n    = note: this error originates in the macro `gen_gen_inner_invoc` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n+error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-legacy.rs:139:42\n    |\n LL |         macro_rules! gen_invoc { () => { m!() } }\n@@ -34,6 +35,7 @@ LL |         macro_rules! gen_invoc { () => { m!() } }\n LL | include!();\n    | ---------- in this macro invocation\n    |\n+   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n    |\n@@ -52,7 +54,7 @@ LL | include!();\n    | ---------- in this macro invocation\n    = note: this error originates in the macro `gen_invoc` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n+error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-legacy.rs:148:9\n    |\n LL |         m!();\n@@ -61,6 +63,7 @@ LL |         m!();\n LL | include!();\n    | ---------- in this macro invocation\n    |\n+   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n    |\n@@ -79,7 +82,7 @@ LL | include!();\n    | ---------- in this macro invocation\n    = note: this error originates in the macro `include` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n+error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-legacy.rs:164:9\n    |\n LL |         m!();\n@@ -88,6 +91,7 @@ LL |         m!();\n LL | include!();\n    | ---------- in this macro invocation\n    |\n+   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n    |\n@@ -106,7 +110,7 @@ LL | include!();\n    | ---------- in this macro invocation\n    = note: this error originates in the macro `include` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n+error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-legacy.rs:180:13\n    |\n LL |             m!();\n@@ -115,6 +119,7 @@ LL |             m!();\n LL | include!();\n    | ---------- in this macro invocation\n    |\n+   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n    |\n@@ -133,7 +138,7 @@ LL | include!();\n    | ---------- in this macro invocation\n    = note: this error originates in the macro `gen_gen_inner_invoc` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n+error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-legacy.rs:218:42\n    |\n LL |         macro_rules! gen_invoc { () => { m!() } }\n@@ -142,6 +147,7 @@ LL |         macro_rules! gen_invoc { () => { m!() } }\n LL | include!();\n    | ---------- in this macro invocation\n    |\n+   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n    |\n@@ -160,7 +166,7 @@ LL | include!();\n    | ---------- in this macro invocation\n    = note: this error originates in the macro `gen_invoc` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n+error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-legacy.rs:232:9\n    |\n LL |         m!();\n@@ -169,6 +175,7 @@ LL |         m!();\n LL | include!();\n    | ---------- in this macro invocation\n    |\n+   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n    |\n@@ -187,7 +194,7 @@ LL | include!();\n    | ---------- in this macro invocation\n    = note: this error originates in the macro `include` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n+error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-legacy.rs:262:42\n    |\n LL |         macro_rules! gen_invoc { () => { m!() } }\n@@ -196,6 +203,7 @@ LL |         macro_rules! gen_invoc { () => { m!() } }\n LL | include!();\n    | ---------- in this macro invocation\n    |\n+   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n    |"}, {"sha": "b169e63132e450eafef64bc0ba7e3c60c69a7909", "filename": "src/test/ui/macros/restricted-shadowing-modern.stderr", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fmacros%2Frestricted-shadowing-modern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fmacros%2Frestricted-shadowing-modern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Frestricted-shadowing-modern.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,4 +1,4 @@\n-error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n+error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-modern.rs:104:17\n    |\n LL |                 m!();\n@@ -7,6 +7,7 @@ LL |                 m!();\n LL | include!();\n    | ---------- in this macro invocation\n    |\n+   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-modern.rs:91:9\n    |\n@@ -25,7 +26,7 @@ LL | include!();\n    | ---------- in this macro invocation\n    = note: this error originates in the macro `gen_gen_inner_invoc` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n+error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-modern.rs:147:33\n    |\n LL |             macro gen_invoc() { m!() }\n@@ -34,6 +35,7 @@ LL |             macro gen_invoc() { m!() }\n LL | include!();\n    | ---------- in this macro invocation\n    |\n+   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-modern.rs:91:9\n    |\n@@ -52,7 +54,7 @@ LL | include!();\n    | ---------- in this macro invocation\n    = note: this error originates in the macro `gen_invoc` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n+error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-modern.rs:156:13\n    |\n LL |             m!();\n@@ -61,6 +63,7 @@ LL |             m!();\n LL | include!();\n    | ---------- in this macro invocation\n    |\n+   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-modern.rs:91:9\n    |\n@@ -79,7 +82,7 @@ LL | include!();\n    | ---------- in this macro invocation\n    = note: this error originates in the macro `include` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n+error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-modern.rs:172:13\n    |\n LL |             m!();\n@@ -88,6 +91,7 @@ LL |             m!();\n LL | include!();\n    | ---------- in this macro invocation\n    |\n+   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-modern.rs:91:9\n    |\n@@ -106,7 +110,7 @@ LL | include!();\n    | ---------- in this macro invocation\n    = note: this error originates in the macro `include` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n+error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-modern.rs:190:17\n    |\n LL |                 m!();\n@@ -115,6 +119,7 @@ LL |                 m!();\n LL | include!();\n    | ---------- in this macro invocation\n    |\n+   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-modern.rs:91:9\n    |\n@@ -133,7 +138,7 @@ LL | include!();\n    | ---------- in this macro invocation\n    = note: this error originates in the macro `gen_gen_inner_invoc` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n+error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-modern.rs:233:33\n    |\n LL |             macro gen_invoc() { m!() }\n@@ -142,6 +147,7 @@ LL |             macro gen_invoc() { m!() }\n LL | include!();\n    | ---------- in this macro invocation\n    |\n+   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-modern.rs:91:9\n    |"}, {"sha": "695ea69c8e65284bd80c7e77d9bf2b3382e5eab2", "filename": "src/test/ui/proc-macro/ambiguous-builtin-attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fproc-macro%2Fambiguous-builtin-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fproc-macro%2Fambiguous-builtin-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fambiguous-builtin-attrs.rs?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -35,5 +35,5 @@ fn main() {\n }\n \n use deny as allow;\n-#[allow(unused)] //~ ERROR `allow` is ambiguous (built-in attribute vs any other name)\n+#[allow(unused)] //~ ERROR `allow` is ambiguous\n fn builtin_renamed() {}"}, {"sha": "0f4ddc065a7420cd384a6cbae36611de6e7e0f30", "filename": "src/test/ui/proc-macro/ambiguous-builtin-attrs.stderr", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fproc-macro%2Fambiguous-builtin-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fproc-macro%2Fambiguous-builtin-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fambiguous-builtin-attrs.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -4,12 +4,13 @@ error[E0425]: cannot find value `NonExistent` in this scope\n LL |     NonExistent;\n    |     ^^^^^^^^^^^ not found in this scope\n \n-error[E0659]: `repr` is ambiguous (built-in attribute vs any other name)\n+error[E0659]: `repr` is ambiguous\n   --> $DIR/ambiguous-builtin-attrs.rs:9:3\n    |\n LL | #[repr(C)]\n    |   ^^^^ ambiguous name\n    |\n+   = note: ambiguous because of a name conflict with a builtin attribute\n    = note: `repr` could refer to a built-in attribute\n note: `repr` could also refer to the attribute macro imported here\n   --> $DIR/ambiguous-builtin-attrs.rs:6:5\n@@ -18,12 +19,13 @@ LL | use builtin_attrs::*;\n    |     ^^^^^^^^^^^^^^^^\n    = help: use `crate::repr` to refer to this attribute macro unambiguously\n \n-error[E0659]: `repr` is ambiguous (built-in attribute vs any other name)\n+error[E0659]: `repr` is ambiguous\n   --> $DIR/ambiguous-builtin-attrs.rs:11:19\n    |\n LL | #[cfg_attr(all(), repr(C))]\n    |                   ^^^^ ambiguous name\n    |\n+   = note: ambiguous because of a name conflict with a builtin attribute\n    = note: `repr` could refer to a built-in attribute\n note: `repr` could also refer to the attribute macro imported here\n   --> $DIR/ambiguous-builtin-attrs.rs:6:5\n@@ -32,12 +34,13 @@ LL | use builtin_attrs::*;\n    |     ^^^^^^^^^^^^^^^^\n    = help: use `crate::repr` to refer to this attribute macro unambiguously\n \n-error[E0659]: `repr` is ambiguous (built-in attribute vs any other name)\n+error[E0659]: `repr` is ambiguous\n   --> $DIR/ambiguous-builtin-attrs.rs:20:34\n    |\n LL | fn non_macro_expanded_location<#[repr(C)] T>() {\n    |                                  ^^^^ ambiguous name\n    |\n+   = note: ambiguous because of a name conflict with a builtin attribute\n    = note: `repr` could refer to a built-in attribute\n note: `repr` could also refer to the attribute macro imported here\n   --> $DIR/ambiguous-builtin-attrs.rs:6:5\n@@ -46,12 +49,13 @@ LL | use builtin_attrs::*;\n    |     ^^^^^^^^^^^^^^^^\n    = help: use `crate::repr` to refer to this attribute macro unambiguously\n \n-error[E0659]: `repr` is ambiguous (built-in attribute vs any other name)\n+error[E0659]: `repr` is ambiguous\n   --> $DIR/ambiguous-builtin-attrs.rs:24:11\n    |\n LL |         #[repr(C)]\n    |           ^^^^ ambiguous name\n    |\n+   = note: ambiguous because of a name conflict with a builtin attribute\n    = note: `repr` could refer to a built-in attribute\n note: `repr` could also refer to the attribute macro imported here\n   --> $DIR/ambiguous-builtin-attrs.rs:6:5\n@@ -60,12 +64,13 @@ LL | use builtin_attrs::*;\n    |     ^^^^^^^^^^^^^^^^\n    = help: use `crate::repr` to refer to this attribute macro unambiguously\n \n-error[E0659]: `allow` is ambiguous (built-in attribute vs any other name)\n+error[E0659]: `allow` is ambiguous\n   --> $DIR/ambiguous-builtin-attrs.rs:38:3\n    |\n LL | #[allow(unused)]\n    |   ^^^^^ ambiguous name\n    |\n+   = note: ambiguous because of a name conflict with a builtin attribute\n    = note: `allow` could refer to a built-in attribute\n note: `allow` could also refer to the built-in attribute imported here\n   --> $DIR/ambiguous-builtin-attrs.rs:37:5\n@@ -74,12 +79,13 @@ LL | use deny as allow;\n    |     ^^^^^^^^^^^^^\n    = help: use `crate::allow` to refer to this built-in attribute unambiguously\n \n-error[E0659]: `feature` is ambiguous (built-in attribute vs any other name)\n+error[E0659]: `feature` is ambiguous\n   --> $DIR/ambiguous-builtin-attrs.rs:3:4\n    |\n LL | #![feature(decl_macro)]\n    |    ^^^^^^^ ambiguous name\n    |\n+   = note: ambiguous because of a name conflict with a builtin attribute\n    = note: `feature` could refer to a built-in attribute\n note: `feature` could also refer to the attribute macro imported here\n   --> $DIR/ambiguous-builtin-attrs.rs:6:5"}, {"sha": "d8287eb73db01ae4958f7f94927b6ff016b78b3a", "filename": "src/test/ui/proc-macro/derive-helper-shadowing.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-shadowing.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -33,12 +33,13 @@ LL |             gen_helper_use!();\n            crate::empty_helper\n    = note: this error originates in the macro `gen_helper_use` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0659]: `empty_helper` is ambiguous (name vs any other name during import resolution)\n+error[E0659]: `empty_helper` is ambiguous\n   --> $DIR/derive-helper-shadowing.rs:26:13\n    |\n LL |         use empty_helper;\n    |             ^^^^^^^^^^^^ ambiguous name\n    |\n+   = note: ambiguous because of multiple potential import sources\n note: `empty_helper` could refer to the derive helper attribute defined here\n   --> $DIR/derive-helper-shadowing.rs:22:10\n    |\n@@ -51,12 +52,13 @@ LL | use test_macros::empty_attr as empty_helper;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: use `crate::empty_helper` to refer to this attribute macro unambiguously\n \n-error[E0659]: `empty_helper` is ambiguous (derive helper attribute vs any other name)\n+error[E0659]: `empty_helper` is ambiguous\n   --> $DIR/derive-helper-shadowing.rs:19:3\n    |\n LL | #[empty_helper]\n    |   ^^^^^^^^^^^^ ambiguous name\n    |\n+   = note: ambiguous because of a name conflict with a derive helper attribute\n note: `empty_helper` could refer to the derive helper attribute defined here\n   --> $DIR/derive-helper-shadowing.rs:22:10\n    |"}, {"sha": "45b014c4b69fa161d2e4e4bc645c0a917a3133ee", "filename": "src/test/ui/proc-macro/helper-attr-blocked-by-import-ambig.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fproc-macro%2Fhelper-attr-blocked-by-import-ambig.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fproc-macro%2Fhelper-attr-blocked-by-import-ambig.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fhelper-attr-blocked-by-import-ambig.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,9 +1,10 @@\n-error[E0659]: `empty_helper` is ambiguous (derive helper attribute vs any other name)\n+error[E0659]: `empty_helper` is ambiguous\n   --> $DIR/helper-attr-blocked-by-import-ambig.rs:7:3\n    |\n LL | #[empty_helper]\n    |   ^^^^^^^^^^^^ ambiguous name\n    |\n+   = note: ambiguous because of a name conflict with a derive helper attribute\n note: `empty_helper` could refer to the derive helper attribute defined here\n   --> $DIR/helper-attr-blocked-by-import-ambig.rs:10:10\n    |"}, {"sha": "60cd36a9cceb92d3c4d3ff5617238a8e4eb197a9", "filename": "src/test/ui/proc-macro/issue-41211.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fproc-macro%2Fissue-41211.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fproc-macro%2Fissue-41211.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-41211.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,9 +1,10 @@\n-error[E0659]: `identity_attr` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n+error[E0659]: `identity_attr` is ambiguous\n   --> $DIR/issue-41211.rs:11:4\n    |\n LL | #![identity_attr]\n    |    ^^^^^^^^^^^^^ ambiguous name\n    |\n+   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n note: `identity_attr` could refer to the attribute macro imported here\n   --> $DIR/issue-41211.rs:14:5\n    |"}, {"sha": "b66e4575e11af6720abf96cc9472e2a5895bbddf", "filename": "src/test/ui/proc-macro/proc-macro-attributes.stderr", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-attributes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-attributes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-attributes.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -4,12 +4,13 @@ error: cannot find attribute `C` in this scope\n LL | #[C]\n    |   ^ help: a derive helper attribute with a similar name exists: `B`\n \n-error[E0659]: `B` is ambiguous (derive helper attribute vs any other name)\n+error[E0659]: `B` is ambiguous\n   --> $DIR/proc-macro-attributes.rs:6:3\n    |\n LL | #[B]\n    |   ^ ambiguous name\n    |\n+   = note: ambiguous because of a name conflict with a derive helper attribute\n note: `B` could refer to the derive helper attribute defined here\n   --> $DIR/proc-macro-attributes.rs:19:10\n    |\n@@ -21,12 +22,13 @@ note: `B` could also refer to the derive macro imported here\n LL | #[macro_use]\n    | ^^^^^^^^^^^^\n \n-error[E0659]: `B` is ambiguous (derive helper attribute vs any other name)\n+error[E0659]: `B` is ambiguous\n   --> $DIR/proc-macro-attributes.rs:10:3\n    |\n LL | #[B(D)]\n    |   ^ ambiguous name\n    |\n+   = note: ambiguous because of a name conflict with a derive helper attribute\n note: `B` could refer to the derive helper attribute defined here\n   --> $DIR/proc-macro-attributes.rs:19:10\n    |\n@@ -38,12 +40,13 @@ note: `B` could also refer to the derive macro imported here\n LL | #[macro_use]\n    | ^^^^^^^^^^^^\n \n-error[E0659]: `B` is ambiguous (derive helper attribute vs any other name)\n+error[E0659]: `B` is ambiguous\n   --> $DIR/proc-macro-attributes.rs:13:3\n    |\n LL | #[B(E = \"foo\")]\n    |   ^ ambiguous name\n    |\n+   = note: ambiguous because of a name conflict with a derive helper attribute\n note: `B` could refer to the derive helper attribute defined here\n   --> $DIR/proc-macro-attributes.rs:19:10\n    |\n@@ -55,12 +58,13 @@ note: `B` could also refer to the derive macro imported here\n LL | #[macro_use]\n    | ^^^^^^^^^^^^\n \n-error[E0659]: `B` is ambiguous (derive helper attribute vs any other name)\n+error[E0659]: `B` is ambiguous\n   --> $DIR/proc-macro-attributes.rs:16:3\n    |\n LL | #[B(arbitrary tokens)]\n    |   ^ ambiguous name\n    |\n+   = note: ambiguous because of a name conflict with a derive helper attribute\n note: `B` could refer to the derive helper attribute defined here\n   --> $DIR/proc-macro-attributes.rs:19:10\n    |"}, {"sha": "7e008d46574c644af2de80239f86cfb985d424cd", "filename": "src/test/ui/rust-2018/uniform-paths/ambiguity-macros-nested.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-macros-nested.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-macros-nested.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-macros-nested.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,9 +1,10 @@\n-error[E0659]: `std` is ambiguous (name vs any other name during import resolution)\n+error[E0659]: `std` is ambiguous\n   --> $DIR/ambiguity-macros-nested.rs:8:13\n    |\n LL |     pub use std::io;\n    |             ^^^ ambiguous name\n    |\n+   = note: ambiguous because of multiple potential import sources\n    = note: `std` could refer to a built-in crate\n    = help: use `::std` to refer to this crate unambiguously\n note: `std` could also refer to the module defined here"}, {"sha": "771d2c10c1da2fbe3ddbb63193d22302bce54264", "filename": "src/test/ui/rust-2018/uniform-paths/ambiguity-macros.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-macros.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,9 +1,10 @@\n-error[E0659]: `std` is ambiguous (name vs any other name during import resolution)\n+error[E0659]: `std` is ambiguous\n   --> $DIR/ambiguity-macros.rs:7:5\n    |\n LL | use std::io;\n    |     ^^^ ambiguous name\n    |\n+   = note: ambiguous because of multiple potential import sources\n    = note: `std` could refer to a built-in crate\n    = help: use `::std` to refer to this crate unambiguously\n note: `std` could also refer to the module defined here"}, {"sha": "defb16f79703848400134bada7f2aa1d43f7efe4", "filename": "src/test/ui/rust-2018/uniform-paths/ambiguity-nested.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-nested.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-nested.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-nested.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,9 +1,10 @@\n-error[E0659]: `std` is ambiguous (name vs any other name during import resolution)\n+error[E0659]: `std` is ambiguous\n   --> $DIR/ambiguity-nested.rs:8:13\n    |\n LL |     pub use std::io;\n    |             ^^^ ambiguous name\n    |\n+   = note: ambiguous because of multiple potential import sources\n    = note: `std` could refer to a built-in crate\n    = help: use `::std` to refer to this crate unambiguously\n note: `std` could also refer to the module defined here"}, {"sha": "2d735c7e3fdfe25c0edf6c732d38e238c696aeb4", "filename": "src/test/ui/rust-2018/uniform-paths/ambiguity.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,9 +1,10 @@\n-error[E0659]: `std` is ambiguous (name vs any other name during import resolution)\n+error[E0659]: `std` is ambiguous\n   --> $DIR/ambiguity.rs:5:5\n    |\n LL | use std::io;\n    |     ^^^ ambiguous name\n    |\n+   = note: ambiguous because of multiple potential import sources\n    = note: `std` could refer to a built-in crate\n    = help: use `::std` to refer to this crate unambiguously\n note: `std` could also refer to the module defined here"}, {"sha": "3d45a81402940a2d9a1d7bf76f4802e002e01569", "filename": "src/test/ui/rust-2018/uniform-paths/block-scoped-shadow-nested.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fblock-scoped-shadow-nested.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fblock-scoped-shadow-nested.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fblock-scoped-shadow-nested.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,9 +1,10 @@\n-error[E0659]: `sub` is ambiguous (name vs any other name during import resolution)\n+error[E0659]: `sub` is ambiguous\n   --> $DIR/block-scoped-shadow-nested.rs:16:13\n    |\n LL |         use sub::bar;\n    |             ^^^ ambiguous name\n    |\n+   = note: ambiguous because of multiple potential import sources\n note: `sub` could refer to the module imported here\n   --> $DIR/block-scoped-shadow-nested.rs:14:9\n    |"}, {"sha": "b068312cedd6fc9871b2e3d0a7c7bdd500e072d0", "filename": "src/test/ui/rust-2018/uniform-paths/block-scoped-shadow.stderr", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fblock-scoped-shadow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fblock-scoped-shadow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fblock-scoped-shadow.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,9 +1,10 @@\n-error[E0659]: `Foo` is ambiguous (name vs any other name during import resolution)\n+error[E0659]: `Foo` is ambiguous\n   --> $DIR/block-scoped-shadow.rs:11:9\n    |\n LL |     use Foo::*;\n    |         ^^^ ambiguous name\n    |\n+   = note: ambiguous because of multiple potential import sources\n note: `Foo` could refer to the enum defined here\n   --> $DIR/block-scoped-shadow.rs:10:5\n    |\n@@ -16,12 +17,13 @@ LL | enum Foo {}\n    | ^^^^^^^^^^^\n    = help: use `crate::Foo` to refer to this enum unambiguously\n \n-error[E0659]: `std` is ambiguous (name vs any other name during import resolution)\n+error[E0659]: `std` is ambiguous\n   --> $DIR/block-scoped-shadow.rs:18:9\n    |\n LL |     use std as foo;\n    |         ^^^ ambiguous name\n    |\n+   = note: ambiguous because of multiple potential import sources\n note: `std` could refer to the enum defined here\n   --> $DIR/block-scoped-shadow.rs:17:5\n    |\n@@ -34,12 +36,13 @@ LL | struct std;\n    | ^^^^^^^^^^^\n    = help: use `crate::std` to refer to this struct unambiguously\n \n-error[E0659]: `std` is ambiguous (name vs any other name during import resolution)\n+error[E0659]: `std` is ambiguous\n   --> $DIR/block-scoped-shadow.rs:18:9\n    |\n LL |     use std as foo;\n    |         ^^^ ambiguous name\n    |\n+   = note: ambiguous because of multiple potential import sources\n note: `std` could refer to the function defined here\n   --> $DIR/block-scoped-shadow.rs:16:5\n    |"}, {"sha": "d2297385f33deb8f007027f16460f011a4e6fd8d", "filename": "src/test/ui/rust-2018/uniform-paths/issue-56596.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fissue-56596.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fissue-56596.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fissue-56596.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -1,9 +1,10 @@\n-error[E0659]: `issue_56596` is ambiguous (name vs any other name during import resolution)\n+error[E0659]: `issue_56596` is ambiguous\n   --> $DIR/issue-56596.rs:12:5\n    |\n LL | use issue_56596;\n    |     ^^^^^^^^^^^ ambiguous name\n    |\n+   = note: ambiguous because of multiple potential import sources\n    = note: `issue_56596` could refer to a crate passed with `--extern`\n    = help: use `::issue_56596` to refer to this crate unambiguously\n note: `issue_56596` could also refer to the module imported here"}, {"sha": "622595bfa0328cba4f449f5448db1373bcd6f130", "filename": "src/test/ui/rust-2018/uniform-paths/macro-rules.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fmacro-rules.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7de1ff1ba8a75c70e1a9ddde671abd9780d1addb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fmacro-rules.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fmacro-rules.stderr?ref=7de1ff1ba8a75c70e1a9ddde671abd9780d1addb", "patch": "@@ -10,12 +10,13 @@ note: consider marking `legacy_macro` as `pub` in the imported module\n LL |     pub use legacy_macro as _;\n    |             ^^^^^^^^^^^^^^^^^\n \n-error[E0659]: `legacy_macro` is ambiguous (name vs any other name during import resolution)\n+error[E0659]: `legacy_macro` is ambiguous\n   --> $DIR/macro-rules.rs:31:13\n    |\n LL |         use legacy_macro as _;\n    |             ^^^^^^^^^^^^ ambiguous name\n    |\n+   = note: ambiguous because of multiple potential import sources\n note: `legacy_macro` could refer to the macro defined here\n   --> $DIR/macro-rules.rs:28:9\n    |"}]}