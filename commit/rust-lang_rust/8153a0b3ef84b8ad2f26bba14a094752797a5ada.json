{"sha": "8153a0b3ef84b8ad2f26bba14a094752797a5ada", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxNTNhMGIzZWY4NGI4YWQyZjI2YmJhMTRhMDk0NzUyNzk3YTVhZGE=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-10T13:59:12Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-10T17:06:01Z"}, "message": "Add ExternSourceId and env functions", "tree": {"sha": "d112f9cef0491c013495a0f4caededa04e23b6c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d112f9cef0491c013495a0f4caededa04e23b6c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8153a0b3ef84b8ad2f26bba14a094752797a5ada", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8153a0b3ef84b8ad2f26bba14a094752797a5ada", "html_url": "https://github.com/rust-lang/rust/commit/8153a0b3ef84b8ad2f26bba14a094752797a5ada", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8153a0b3ef84b8ad2f26bba14a094752797a5ada/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1db5d26a0bd491f13b12d85ee43faf6f35fb1a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1db5d26a0bd491f13b12d85ee43faf6f35fb1a6", "html_url": "https://github.com/rust-lang/rust/commit/c1db5d26a0bd491f13b12d85ee43faf6f35fb1a6"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "18d8e2a539263d100eb6e2dc3930c3a4248ecfc1", "filename": "crates/ra_db/src/input.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/8153a0b3ef84b8ad2f26bba14a094752797a5ada/crates%2Fra_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8153a0b3ef84b8ad2f26bba14a094752797a5ada/crates%2Fra_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Finput.rs?ref=8153a0b3ef84b8ad2f26bba14a094752797a5ada", "patch": "@@ -122,9 +122,16 @@ pub enum Edition {\n     Edition2015,\n }\n \n+#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n+pub struct ExternSourceId(pub u32);\n+\n #[derive(Default, Debug, Clone, PartialEq, Eq)]\n pub struct Env {\n     entries: FxHashMap<String, String>,\n+\n+    // Note: Some env variables (e.g. OUT_DIR) are located outside of the\n+    // crate. We store a map to allow remap it to ExternSourceId\n+    extern_paths: FxHashMap<String, ExternSourceId>,\n }\n \n #[derive(Debug, Clone, PartialEq, Eq)]\n@@ -269,6 +276,26 @@ impl Env {\n     pub fn get(&self, env: &str) -> Option<String> {\n         self.entries.get(env).cloned()\n     }\n+\n+    pub fn extern_path(&self, path: &str) -> Option<(ExternSourceId, RelativePathBuf)> {\n+        self.extern_paths.iter().find_map(|(root_path, id)| {\n+            if path.starts_with(root_path) {\n+                let mut rel_path = &path[root_path.len()..];\n+                if rel_path.starts_with(\"/\") {\n+                    rel_path = &rel_path[1..];\n+                }\n+                let rel_path = RelativePathBuf::from_path(rel_path).ok()?;\n+                Some((id.clone(), rel_path))\n+            } else {\n+                None\n+            }\n+        })\n+    }\n+\n+    pub fn set_extern_path(&mut self, env: &str, root_path: &str, root: ExternSourceId) {\n+        self.entries.insert(env.to_owned(), root_path.to_owned());\n+        self.extern_paths.insert(root_path.to_owned(), root);\n+    }\n }\n \n #[derive(Debug)]"}]}