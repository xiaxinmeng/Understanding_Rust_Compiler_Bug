{"sha": "089524c31ac8098965f9ed69d89a5de127b4bbbb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4OTUyNGMzMWFjODA5ODk2NWY5ZWQ2OWQ4OWE1ZGUxMjdiNGJiYmI=", "commit": {"author": {"name": "Paul Dicker", "email": "pitdicker@gmail.com", "date": "2019-02-06T13:20:27Z"}, "committer": {"name": "Paul Dicker", "email": "pitdicker@gmail.com", "date": "2019-02-23T11:17:48Z"}, "message": "Correct OpenOptions::security_qos_flags documentation", "tree": {"sha": "29e91c9582e00df68d57800a8a32a536aa75497b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29e91c9582e00df68d57800a8a32a536aa75497b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/089524c31ac8098965f9ed69d89a5de127b4bbbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/089524c31ac8098965f9ed69d89a5de127b4bbbb", "html_url": "https://github.com/rust-lang/rust/commit/089524c31ac8098965f9ed69d89a5de127b4bbbb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/089524c31ac8098965f9ed69d89a5de127b4bbbb/comments", "author": {"login": "pitdicker", "id": 6255050, "node_id": "MDQ6VXNlcjYyNTUwNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6255050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitdicker", "html_url": "https://github.com/pitdicker", "followers_url": "https://api.github.com/users/pitdicker/followers", "following_url": "https://api.github.com/users/pitdicker/following{/other_user}", "gists_url": "https://api.github.com/users/pitdicker/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitdicker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitdicker/subscriptions", "organizations_url": "https://api.github.com/users/pitdicker/orgs", "repos_url": "https://api.github.com/users/pitdicker/repos", "events_url": "https://api.github.com/users/pitdicker/events{/privacy}", "received_events_url": "https://api.github.com/users/pitdicker/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pitdicker", "id": 6255050, "node_id": "MDQ6VXNlcjYyNTUwNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6255050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitdicker", "html_url": "https://github.com/pitdicker", "followers_url": "https://api.github.com/users/pitdicker/followers", "following_url": "https://api.github.com/users/pitdicker/following{/other_user}", "gists_url": "https://api.github.com/users/pitdicker/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitdicker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitdicker/subscriptions", "organizations_url": "https://api.github.com/users/pitdicker/orgs", "repos_url": "https://api.github.com/users/pitdicker/repos", "events_url": "https://api.github.com/users/pitdicker/events{/privacy}", "received_events_url": "https://api.github.com/users/pitdicker/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "503e74e96958045025448f90c8da4c7bd1484be9", "url": "https://api.github.com/repos/rust-lang/rust/commits/503e74e96958045025448f90c8da4c7bd1484be9", "html_url": "https://github.com/rust-lang/rust/commit/503e74e96958045025448f90c8da4c7bd1484be9"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "85967516933a32d3dcc08138b3bbea7417ce0797", "filename": "src/libstd/sys/windows/ext/fs.rs", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/089524c31ac8098965f9ed69d89a5de127b4bbbb/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/089524c31ac8098965f9ed69d89a5de127b4bbbb/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Ffs.rs?ref=089524c31ac8098965f9ed69d89a5de127b4bbbb", "patch": "@@ -220,13 +220,27 @@ pub trait OpenOptionsExt {\n     /// the specified value (or combines it with `custom_flags` and `attributes`\n     /// to set the `dwFlagsAndAttributes` for [`CreateFile`]).\n     ///\n-    /// By default, `security_qos_flags` is set to `SECURITY_ANONYMOUS`. For\n-    /// information about possible values, see [Impersonation Levels] on the\n-    /// Windows Dev Center site.\n-    ///\n+    /// By default `security_qos_flags` is not set. It should be specified when\n+    /// opening a named pipe, to control to which degree a server process can\n+    /// act on behalf of a client process (security impersonation level).\n+    ///\n+    /// When `security_qos_flags` is not set a malicious program can gain the\n+    /// elevated privileges of a privileged Rust process when it allows opening\n+    /// user-specified paths, by tricking it into opening a named pipe. So\n+    /// arguably `security_qos_flags` should also be set when opening arbitrary\n+    /// paths. However the bits can then conflict with other flags, specifically\n+    /// `FILE_FLAG_OPEN_NO_RECALL`.\n+    ///\n+    /// For information about possible values, see [Impersonation Levels] on the\n+    /// Windows Dev Center site. The `SECURITY_SQOS_PRESENT` flag is set\n+    /// automatically when using this method.\n+\n     /// # Examples\n     ///\n     /// ```no_run\n+    /// # #[cfg(for_demonstration_only)]\n+    /// extern crate winapi;\n+    /// # mod winapi { pub const SECURITY_IDENTIFICATION: u32 = 0; }\n     /// use std::fs::OpenOptions;\n     /// use std::os::windows::prelude::*;\n     ///\n@@ -235,9 +249,9 @@ pub trait OpenOptionsExt {\n     ///     .create(true)\n     ///\n     ///     // Sets the flag value to `SecurityIdentification`.\n-    ///     .security_qos_flags(1)\n+    ///     .security_qos_flags(winapi::SECURITY_IDENTIFICATION)\n     ///\n-    ///     .open(\"foo.txt\");\n+    ///     .open(r\"\\\\.\\pipe\\MyPipe\");\n     /// ```\n     ///\n     /// [`CreateFile`]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858.aspx"}]}