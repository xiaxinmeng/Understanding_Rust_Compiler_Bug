{"sha": "f0dd95c3a8d1334608c4bb9c4576924f55f09afe", "node_id": "C_kwDOAAsO6NoAKGYwZGQ5NWMzYThkMTMzNDYwOGM0YmI5YzQ1NzY5MjRmNTVmMDlhZmU", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-25T16:31:30Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-25T16:31:30Z"}, "message": "Use `ty::TraitRef::new` in rustdoc", "tree": {"sha": "1f795831b8f37224da9f28d405de133c4eb8eb20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f795831b8f37224da9f28d405de133c4eb8eb20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0dd95c3a8d1334608c4bb9c4576924f55f09afe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0dd95c3a8d1334608c4bb9c4576924f55f09afe", "html_url": "https://github.com/rust-lang/rust/commit/f0dd95c3a8d1334608c4bb9c4576924f55f09afe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0dd95c3a8d1334608c4bb9c4576924f55f09afe/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f7fe4a303e8b62ec1906576be2a80248d78d1ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f7fe4a303e8b62ec1906576be2a80248d78d1ce", "html_url": "https://github.com/rust-lang/rust/commit/8f7fe4a303e8b62ec1906576be2a80248d78d1ce"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "35eb76654e35e6de251a40fcb08ca6c97ca98c5b", "filename": "src/librustdoc/clean/auto_trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f0dd95c3a8d1334608c4bb9c4576924f55f09afe/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0dd95c3a8d1334608c4bb9c4576924f55f09afe/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs?ref=f0dd95c3a8d1334608c4bb9c4576924f55f09afe", "patch": "@@ -44,7 +44,7 @@ where\n         discard_positive_impl: bool,\n     ) -> Option<Item> {\n         let tcx = self.cx.tcx;\n-        let trait_ref = ty::Binder::dummy(tcx.mk_trait_ref(trait_def_id, [ty]));\n+        let trait_ref = ty::Binder::dummy(ty::TraitRef::new(tcx, trait_def_id, [ty]));\n         if !self.cx.generated_synthetics.insert((ty, trait_def_id)) {\n             debug!(\"get_auto_trait_impl_for({:?}): already generated, aborting\", trait_ref);\n             return None;"}]}