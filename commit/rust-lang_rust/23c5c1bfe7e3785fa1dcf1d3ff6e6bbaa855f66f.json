{"sha": "23c5c1bfe7e3785fa1dcf1d3ff6e6bbaa855f66f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzYzVjMWJmZTdlMzc4NWZhMWRjZjFkM2ZmNmU2YmJhYTg1NWY2NmY=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-07-13T18:01:04Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-07-15T09:42:07Z"}, "message": "pprust: Use `print_mac_common` for attributes", "tree": {"sha": "5a9132b707ba8bdda8428df4c5cc185db7618934", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a9132b707ba8bdda8428df4c5cc185db7618934"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23c5c1bfe7e3785fa1dcf1d3ff6e6bbaa855f66f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23c5c1bfe7e3785fa1dcf1d3ff6e6bbaa855f66f", "html_url": "https://github.com/rust-lang/rust/commit/23c5c1bfe7e3785fa1dcf1d3ff6e6bbaa855f66f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23c5c1bfe7e3785fa1dcf1d3ff6e6bbaa855f66f/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "500b00127b1b5f0b3891c73327e20a972940a715", "url": "https://api.github.com/repos/rust-lang/rust/commits/500b00127b1b5f0b3891c73327e20a972940a715", "html_url": "https://github.com/rust-lang/rust/commit/500b00127b1b5f0b3891c73327e20a972940a715"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "af9f6bb442dd17ca40b8a757d86c0c0d015bee33", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/23c5c1bfe7e3785fa1dcf1d3ff6e6bbaa855f66f/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23c5c1bfe7e3785fa1dcf1d3ff6e6bbaa855f66f/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=23c5c1bfe7e3785fa1dcf1d3ff6e6bbaa855f66f", "patch": "@@ -4,7 +4,7 @@ use crate::ast::{Attribute, MacDelimiter, GenericArg};\n use crate::util::parser::{self, AssocOp, Fixity};\n use crate::attr;\n use crate::source_map::{self, SourceMap, Spanned};\n-use crate::parse::token::{self, BinOpToken, Nonterminal, Token, TokenKind};\n+use crate::parse::token::{self, BinOpToken, DelimToken, Nonterminal, Token, TokenKind};\n use crate::parse::lexer::comments;\n use crate::parse::{self, ParseSess};\n use crate::print::pp::{self, Breaks};\n@@ -619,9 +619,23 @@ pub trait PrintState<'a>: std::ops::Deref<Target=pp::Printer> + std::ops::DerefM\n             if let Some(mi) = attr.meta() {\n                 self.print_meta_item(&mi);\n             } else {\n-                self.print_path(&attr.path, false, 0);\n-                self.space();\n-                self.print_tts(attr.tokens.clone(), true);\n+                match attr.tokens.trees().next() {\n+                    Some(TokenTree::Delimited(_, delim, tts)) => {\n+                        let delim = match delim {\n+                            DelimToken::Brace => MacDelimiter::Brace,\n+                            DelimToken::Bracket => MacDelimiter::Bracket,\n+                            DelimToken::Paren | DelimToken::NoDelim => MacDelimiter::Parenthesis,\n+                        };\n+                        self.print_mac_common(&attr.path, false, None, tts, delim, attr.span);\n+                    }\n+                    tree => {\n+                        self.print_path(&attr.path, false, 0);\n+                        if tree.is_some() {\n+                            self.space();\n+                            self.print_tts(attr.tokens.clone(), true);\n+                        }\n+                    }\n+                }\n             }\n             self.word(\"]\");\n         }"}, {"sha": "3e6af67a9f4124ea82a8e61fe1d605e294286396", "filename": "src/test/run-pass/proc-macro/auxiliary/derive-b.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23c5c1bfe7e3785fa1dcf1d3ff6e6bbaa855f66f/src%2Ftest%2Frun-pass%2Fproc-macro%2Fauxiliary%2Fderive-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23c5c1bfe7e3785fa1dcf1d3ff6e6bbaa855f66f/src%2Ftest%2Frun-pass%2Fproc-macro%2Fauxiliary%2Fderive-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fproc-macro%2Fauxiliary%2Fderive-b.rs?ref=23c5c1bfe7e3785fa1dcf1d3ff6e6bbaa855f66f", "patch": "@@ -10,7 +10,7 @@ use proc_macro::TokenStream;\n #[proc_macro_derive(B, attributes(B, C))]\n pub fn derive(input: TokenStream) -> TokenStream {\n     let input = input.to_string();\n-    assert!(input.contains(\"#[B [ arbitrary tokens ]]\"));\n+    assert!(input.contains(\"#[B[arbitrary tokens]]\"));\n     assert!(input.contains(\"struct B {\"));\n     assert!(input.contains(\"#[C]\"));\n     \"\".parse().unwrap()"}]}