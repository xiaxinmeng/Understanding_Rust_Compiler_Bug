{"sha": "49cbfa1a6f6469ddbc0e88161e52104cc87aea9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5Y2JmYTFhNmY2NDY5ZGRiYzBlODgxNjFlNTIxMDRjYzg3YWVhOWI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-21T16:58:17Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-23T22:32:03Z"}, "message": "pre-expansion gate const_generics", "tree": {"sha": "af0abae0cbf18a6f7a19ae19e912bd5b7bee0805", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af0abae0cbf18a6f7a19ae19e912bd5b7bee0805"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49cbfa1a6f6469ddbc0e88161e52104cc87aea9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49cbfa1a6f6469ddbc0e88161e52104cc87aea9b", "html_url": "https://github.com/rust-lang/rust/commit/49cbfa1a6f6469ddbc0e88161e52104cc87aea9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49cbfa1a6f6469ddbc0e88161e52104cc87aea9b/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04c661ba021730bc13d33c6d55cb9aad05026f36", "url": "https://api.github.com/repos/rust-lang/rust/commits/04c661ba021730bc13d33c6d55cb9aad05026f36", "html_url": "https://github.com/rust-lang/rust/commit/04c661ba021730bc13d33c6d55cb9aad05026f36"}], "stats": {"total": 63, "additions": 37, "deletions": 26}, "files": [{"sha": "282b5ae219365b231efbb35d0075e59684b2f942", "filename": "src/libsyntax/feature_gate/check.rs", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/49cbfa1a6f6469ddbc0e88161e52104cc87aea9b/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49cbfa1a6f6469ddbc0e88161e52104cc87aea9b/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs?ref=49cbfa1a6f6469ddbc0e88161e52104cc87aea9b", "patch": "@@ -3,7 +3,7 @@ use super::accepted::ACCEPTED_FEATURES;\n use super::removed::{REMOVED_FEATURES, STABLE_REMOVED_FEATURES};\n use super::builtin_attrs::{AttributeGate, BUILTIN_ATTRIBUTE_MAP};\n \n-use crate::ast::{self, NodeId, GenericParam, GenericParamKind, PatKind, RangeEnd, VariantData};\n+use crate::ast::{self, NodeId, PatKind, RangeEnd, VariantData};\n use crate::attr::{self, check_builtin_attribute};\n use crate::source_map::Spanned;\n use crate::edition::{ALL_EDITIONS, Edition};\n@@ -571,16 +571,6 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n         visit::walk_fn(self, fn_kind, fn_decl, span)\n     }\n \n-    fn visit_generic_param(&mut self, param: &'a GenericParam) {\n-        match param.kind {\n-            GenericParamKind::Const { .. } =>\n-                gate_feature_post!(&self, const_generics, param.ident.span,\n-                    \"const generics are unstable\"),\n-            _ => {}\n-        }\n-        visit::walk_generic_param(self, param)\n-    }\n-\n     fn visit_trait_item(&mut self, ti: &'a ast::TraitItem) {\n         match ti.kind {\n             ast::TraitItemKind::Method(ref sig, ref block) => {\n@@ -840,6 +830,7 @@ pub fn check_crate(krate: &ast::Crate,\n     gate_all!(trait_alias, \"trait aliases are experimental\");\n     gate_all!(associated_type_bounds, \"associated type bounds are unstable\");\n     gate_all!(crate_visibility_modifier, \"`crate` visibility modifier is experimental\");\n+    gate_all!(const_generics, \"const generics are unstable\");\n \n     visit::walk_crate(&mut visitor, krate);\n }"}, {"sha": "51caae69c86a4e4b60a7639f3ee9a9a466227742", "filename": "src/libsyntax/parse/parser/generics.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/49cbfa1a6f6469ddbc0e88161e52104cc87aea9b/src%2Flibsyntax%2Fparse%2Fparser%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49cbfa1a6f6469ddbc0e88161e52104cc87aea9b/src%2Flibsyntax%2Fparse%2Fparser%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fgenerics.rs?ref=49cbfa1a6f6469ddbc0e88161e52104cc87aea9b", "patch": "@@ -55,11 +55,15 @@ impl<'a> Parser<'a> {\n     }\n \n     fn parse_const_param(&mut self, preceding_attrs: Vec<Attribute>) -> PResult<'a, GenericParam> {\n+        let lo = self.token.span;\n+\n         self.expect_keyword(kw::Const)?;\n         let ident = self.parse_ident()?;\n         self.expect(&token::Colon)?;\n         let ty = self.parse_ty()?;\n \n+        self.sess.gated_spans.const_generics.borrow_mut().push(lo.to(self.prev_span));\n+\n         Ok(GenericParam {\n             ident,\n             id: ast::DUMMY_NODE_ID,"}, {"sha": "3d2051b4c78eb5b318764a9fbdf3c0950f9ca397", "filename": "src/libsyntax/sess.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49cbfa1a6f6469ddbc0e88161e52104cc87aea9b/src%2Flibsyntax%2Fsess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49cbfa1a6f6469ddbc0e88161e52104cc87aea9b/src%2Flibsyntax%2Fsess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsess.rs?ref=49cbfa1a6f6469ddbc0e88161e52104cc87aea9b", "patch": "@@ -36,6 +36,8 @@ crate struct GatedSpans {\n     pub associated_type_bounds: Lock<Vec<Span>>,\n     /// Spans collected for gating `crate_visibility_modifier`, e.g. `crate fn`.\n     pub crate_visibility_modifier: Lock<Vec<Span>>,\n+    /// Spans collected for gating `const_generics`, e.g. `const N: usize`.\n+    pub const_generics: Lock<Vec<Span>>,\n }\n \n /// Info about a parsing session."}, {"sha": "330c93e83b5e7d1f2230cbd27f001af1a15ff3b0", "filename": "src/test/ui/const-generics/const-param-in-trait-ungated.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/49cbfa1a6f6469ddbc0e88161e52104cc87aea9b/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-in-trait-ungated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/49cbfa1a6f6469ddbc0e88161e52104cc87aea9b/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-in-trait-ungated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-in-trait-ungated.stderr?ref=49cbfa1a6f6469ddbc0e88161e52104cc87aea9b", "patch": "@@ -1,8 +1,8 @@\n error[E0658]: const generics are unstable\n-  --> $DIR/const-param-in-trait-ungated.rs:1:19\n+  --> $DIR/const-param-in-trait-ungated.rs:1:13\n    |\n LL | trait Trait<const T: ()> {}\n-   |                   ^\n+   |             ^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44580\n    = help: add `#![feature(const_generics)]` to the crate attributes to enable"}, {"sha": "969f35bdaa306fcb7f520f351ebc4e09dd3f45c3", "filename": "src/test/ui/const-generics/const-param-type-depends-on-type-param-ungated.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/49cbfa1a6f6469ddbc0e88161e52104cc87aea9b/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param-ungated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/49cbfa1a6f6469ddbc0e88161e52104cc87aea9b/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param-ungated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param-ungated.stderr?ref=49cbfa1a6f6469ddbc0e88161e52104cc87aea9b", "patch": "@@ -5,10 +5,10 @@ LL | struct B<T, const N: T>(PhantomData<[T; N]>);\n    |                      ^ const parameter depends on type parameter\n \n error[E0658]: const generics are unstable\n-  --> $DIR/const-param-type-depends-on-type-param-ungated.rs:3:19\n+  --> $DIR/const-param-type-depends-on-type-param-ungated.rs:3:13\n    |\n LL | struct B<T, const N: T>(PhantomData<[T; N]>);\n-   |                   ^\n+   |             ^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44580\n    = help: add `#![feature(const_generics)]` to the crate attributes to enable"}, {"sha": "5223c8c5137aeae97552db686946db730a7a0b71", "filename": "src/test/ui/const-generics/issues/issue-60263.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/49cbfa1a6f6469ddbc0e88161e52104cc87aea9b/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-60263.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/49cbfa1a6f6469ddbc0e88161e52104cc87aea9b/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-60263.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-60263.stderr?ref=49cbfa1a6f6469ddbc0e88161e52104cc87aea9b", "patch": "@@ -1,8 +1,8 @@\n error[E0658]: const generics are unstable\n-  --> $DIR/issue-60263.rs:1:16\n+  --> $DIR/issue-60263.rs:1:10\n    |\n LL | struct B<const I: u8>;\n-   |                ^\n+   |          ^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44580\n    = help: add `#![feature(const_generics)]` to the crate attributes to enable"}, {"sha": "790bc33e2683e717e7138ba287ea8f8c35f4af1d", "filename": "src/test/ui/feature-gates/feature-gate-const_generics-ptr.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/49cbfa1a6f6469ddbc0e88161e52104cc87aea9b/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics-ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/49cbfa1a6f6469ddbc0e88161e52104cc87aea9b/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics-ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics-ptr.stderr?ref=49cbfa1a6f6469ddbc0e88161e52104cc87aea9b", "patch": "@@ -1,17 +1,17 @@\n error[E0658]: const generics are unstable\n-  --> $DIR/feature-gate-const_generics-ptr.rs:1:22\n+  --> $DIR/feature-gate-const_generics-ptr.rs:1:16\n    |\n LL | struct ConstFn<const F: fn()>;\n-   |                      ^\n+   |                ^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44580\n    = help: add `#![feature(const_generics)]` to the crate attributes to enable\n \n error[E0658]: const generics are unstable\n-  --> $DIR/feature-gate-const_generics-ptr.rs:5:23\n+  --> $DIR/feature-gate-const_generics-ptr.rs:5:17\n    |\n LL | struct ConstPtr<const P: *const u32>;\n-   |                       ^\n+   |                 ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44580\n    = help: add `#![feature(const_generics)]` to the crate attributes to enable"}, {"sha": "0adc9902a6937462f490e2899006484868f81f22", "filename": "src/test/ui/feature-gates/feature-gate-const_generics.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/49cbfa1a6f6469ddbc0e88161e52104cc87aea9b/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49cbfa1a6f6469ddbc0e88161e52104cc87aea9b/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics.rs?ref=49cbfa1a6f6469ddbc0e88161e52104cc87aea9b", "patch": "@@ -2,4 +2,9 @@ fn foo<const X: ()>() {} //~ ERROR const generics are unstable\n \n struct Foo<const X: usize>([(); X]); //~ ERROR const generics are unstable\n \n+macro_rules! accept_item { ($i:item) => {} }\n+accept_item! {\n+    impl<const X: ()> A {} //~ ERROR const generics are unstable\n+}\n+\n fn main() {}"}, {"sha": "f0154ed289f140c73d276444f301a4d5f681fabe", "filename": "src/test/ui/feature-gates/feature-gate-const_generics.stderr", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/49cbfa1a6f6469ddbc0e88161e52104cc87aea9b/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/49cbfa1a6f6469ddbc0e88161e52104cc87aea9b/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics.stderr?ref=49cbfa1a6f6469ddbc0e88161e52104cc87aea9b", "patch": "@@ -1,21 +1,30 @@\n error[E0658]: const generics are unstable\n-  --> $DIR/feature-gate-const_generics.rs:1:14\n+  --> $DIR/feature-gate-const_generics.rs:1:8\n    |\n LL | fn foo<const X: ()>() {}\n-   |              ^\n+   |        ^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44580\n    = help: add `#![feature(const_generics)]` to the crate attributes to enable\n \n error[E0658]: const generics are unstable\n-  --> $DIR/feature-gate-const_generics.rs:3:18\n+  --> $DIR/feature-gate-const_generics.rs:3:12\n    |\n LL | struct Foo<const X: usize>([(); X]);\n-   |                  ^\n+   |            ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44580\n    = help: add `#![feature(const_generics)]` to the crate attributes to enable\n \n-error: aborting due to 2 previous errors\n+error[E0658]: const generics are unstable\n+  --> $DIR/feature-gate-const_generics.rs:7:10\n+   |\n+LL |     impl<const X: ()> A {}\n+   |          ^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/44580\n+   = help: add `#![feature(const_generics)]` to the crate attributes to enable\n+\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}]}