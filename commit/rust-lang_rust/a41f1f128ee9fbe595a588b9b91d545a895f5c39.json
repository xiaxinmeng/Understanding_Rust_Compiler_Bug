{"sha": "a41f1f128ee9fbe595a588b9b91d545a895f5c39", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0MWYxZjEyOGVlOWZiZTU5NWE1ODhiOWI5MWQ1NDVhODk1ZjVjMzk=", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2020-03-04T17:49:55Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2020-03-04T17:49:55Z"}, "message": "Further clarifications and comments on toolstate operation.", "tree": {"sha": "97ca81210fe75d1aa3e5ed42e3012040e255a858", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97ca81210fe75d1aa3e5ed42e3012040e255a858"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a41f1f128ee9fbe595a588b9b91d545a895f5c39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a41f1f128ee9fbe595a588b9b91d545a895f5c39", "html_url": "https://github.com/rust-lang/rust/commit/a41f1f128ee9fbe595a588b9b91d545a895f5c39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a41f1f128ee9fbe595a588b9b91d545a895f5c39/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6d8c9c5ebea585304df74bdf56cff186ad8ef1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6d8c9c5ebea585304df74bdf56cff186ad8ef1a", "html_url": "https://github.com/rust-lang/rust/commit/a6d8c9c5ebea585304df74bdf56cff186ad8ef1a"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "f0e0f92af55fc3e7b2abab1f78cd1eaf3f909c0f", "filename": "src/bootstrap/toolstate.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a41f1f128ee9fbe595a588b9b91d545a895f5c39/src%2Fbootstrap%2Ftoolstate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a41f1f128ee9fbe595a588b9b91d545a895f5c39/src%2Fbootstrap%2Ftoolstate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftoolstate.rs?ref=a41f1f128ee9fbe595a588b9b91d545a895f5c39", "patch": "@@ -225,8 +225,11 @@ impl Step for ToolStateCheck {\n                         );\n                     }\n                 }\n-                // publish_toolstate.py will be responsible for creating\n-                // comments/issues warning people if there is a regression.\n+                // `publish_toolstate.py` is responsible for updating\n+                // `latest.json` and creating comments/issues warning people\n+                // if there is a regression. That all happens in a separate CI\n+                // job on the master branch once the PR has passed all tests\n+                // on the `auto` branch.\n             }\n         }\n \n@@ -385,7 +388,7 @@ fn commit_toolstate_change(current_toolstate: &ToolstateData) {\n         // Upload the test results (the new commit-to-toolstate mapping) to the toolstate repo.\n         // This does *not* change the \"current toolstate\"; that only happens post-landing\n         // via `src/ci/docker/publish_toolstate.sh`.\n-        change_toolstate(&current_toolstate);\n+        publish_test_results(&current_toolstate);\n \n         // `git commit` failing means nothing to commit.\n         let status = t!(Command::new(\"git\")\n@@ -434,7 +437,12 @@ fn commit_toolstate_change(current_toolstate: &ToolstateData) {\n     }\n }\n \n-fn change_toolstate(current_toolstate: &ToolstateData) {\n+/// Updates the \"history\" files with the latest results.\n+///\n+/// These results will later be promoted to `latest.json` by the\n+/// `publish_toolstate.py` script if the PR passes all tests and is merged to\n+/// master.\n+fn publish_test_results(current_toolstate: &ToolstateData) {\n     let commit = t!(std::process::Command::new(\"git\").arg(\"rev-parse\").arg(\"HEAD\").output());\n     let commit = t!(String::from_utf8(commit.stdout));\n "}]}