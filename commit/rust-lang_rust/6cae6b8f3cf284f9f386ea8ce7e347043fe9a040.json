{"sha": "6cae6b8f3cf284f9f386ea8ce7e347043fe9a040", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjYWU2YjhmM2NmMjg0ZjlmMzg2ZWE4Y2U3ZTM0NzA0M2ZlOWEwNDA=", "commit": {"author": {"name": "Zac Pullar-Strecker", "email": "zacmps@gmail.com", "date": "2020-09-05T04:58:04Z"}, "committer": {"name": "Zac Pullar-Strecker", "email": "zacmps@gmail.com", "date": "2020-10-08T02:04:57Z"}, "message": "Fix namespace detection & function test", "tree": {"sha": "175ef2dd4d79327de904c313144ccf978bc2f1e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/175ef2dd4d79327de904c313144ccf978bc2f1e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6cae6b8f3cf284f9f386ea8ce7e347043fe9a040", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6cae6b8f3cf284f9f386ea8ce7e347043fe9a040", "html_url": "https://github.com/rust-lang/rust/commit/6cae6b8f3cf284f9f386ea8ce7e347043fe9a040", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6cae6b8f3cf284f9f386ea8ce7e347043fe9a040/comments", "author": {"login": "zacps", "id": 9827696, "node_id": "MDQ6VXNlcjk4Mjc2OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/9827696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zacps", "html_url": "https://github.com/zacps", "followers_url": "https://api.github.com/users/zacps/followers", "following_url": "https://api.github.com/users/zacps/following{/other_user}", "gists_url": "https://api.github.com/users/zacps/gists{/gist_id}", "starred_url": "https://api.github.com/users/zacps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zacps/subscriptions", "organizations_url": "https://api.github.com/users/zacps/orgs", "repos_url": "https://api.github.com/users/zacps/repos", "events_url": "https://api.github.com/users/zacps/events{/privacy}", "received_events_url": "https://api.github.com/users/zacps/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zacps", "id": 9827696, "node_id": "MDQ6VXNlcjk4Mjc2OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/9827696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zacps", "html_url": "https://github.com/zacps", "followers_url": "https://api.github.com/users/zacps/followers", "following_url": "https://api.github.com/users/zacps/following{/other_user}", "gists_url": "https://api.github.com/users/zacps/gists{/gist_id}", "starred_url": "https://api.github.com/users/zacps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zacps/subscriptions", "organizations_url": "https://api.github.com/users/zacps/orgs", "repos_url": "https://api.github.com/users/zacps/repos", "events_url": "https://api.github.com/users/zacps/events{/privacy}", "received_events_url": "https://api.github.com/users/zacps/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37a4d060a7709da42a67fe1631d5786f7e106884", "url": "https://api.github.com/repos/rust-lang/rust/commits/37a4d060a7709da42a67fe1631d5786f7e106884", "html_url": "https://github.com/rust-lang/rust/commit/37a4d060a7709da42a67fe1631d5786f7e106884"}], "stats": {"total": 8, "additions": 2, "deletions": 6}, "files": [{"sha": "1014660146e70286dc0126c139062b5945647762", "filename": "crates/ide/src/doc_links.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6cae6b8f3cf284f9f386ea8ce7e347043fe9a040/crates%2Fide%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cae6b8f3cf284f9f386ea8ce7e347043fe9a040/crates%2Fide%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links.rs?ref=6cae6b8f3cf284f9f386ea8ce7e347043fe9a040", "patch": "@@ -112,7 +112,6 @@ pub fn get_doc_link<T: Resolvable + Clone>(db: &dyn HirDatabase, definition: &T)\n // version of import map which follows the same process as rustdoc. Otherwise there'll always be some\n // edge cases where we select the wrong import path.\n fn get_doc_link(db: &RootDatabase, definition: Definition) -> Option<String> {\n-    eprintln!(\"enter\");\n     // Get the outermost definition for the moduledef. This is used to resolve the public path to the type,\n     // then we can join the method, field, etc onto it if required.\n     let target_def: ModuleDef = match definition {\n@@ -127,7 +126,7 @@ fn get_doc_link(db: &RootDatabase, definition: Definition) -> Option<String> {\n         _ => return None,\n     };\n \n-    let ns = ItemInNs::Types(target_def.clone().into());\n+    let ns = ItemInNs::from(target_def.clone());\n \n     let module = definition.module(db)?;\n     let krate = module.krate();\n@@ -153,7 +152,6 @@ fn get_doc_link(db: &RootDatabase, definition: Definition) -> Option<String> {\n         Definition::Field(field) => get_symbol_fragment(db, &FieldOrAssocItem::Field(field)),\n         _ => None,\n     };\n-    eprintln!(\"end-ish\");\n \n     get_doc_url(db, &krate)\n         .and_then(|url| url.join(&base).ok())\n@@ -456,14 +454,13 @@ pub struct Fo<|>o;\n         );\n     }\n \n-    // TODO: Fix this test. Fails on `import_map.path_of(ns)`\n     #[test]\n     fn test_doc_url_fn() {\n         check(\n             r#\"\n pub fn fo<|>o() {}\n \"#,\n-            expect![[r#\"\"#]],\n+            expect![[r##\"https://docs.rs/test/*/test/fn.foo.html#method.foo\"##]],\n         );\n     }\n \n@@ -508,7 +505,6 @@ pub trait Foo {\n         );\n     }\n \n-\n     #[test]\n     fn test_doc_url_field() {\n         check("}]}