{"sha": "19ac2e94c6cb12ae4f9fb410f165e2aa5309e124", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5YWMyZTk0YzZjYjEyYWU0ZjlmYjQxMGYxNjVlMmFhNTMwOWUxMjQ=", "commit": {"author": {"name": "Jane Lusby", "email": "jlusby42@gmail.com", "date": "2018-10-26T16:10:20Z"}, "committer": {"name": "Jane Lusby", "email": "jlusby42@gmail.com", "date": "2018-10-26T16:12:01Z"}, "message": "fix: correctly reconstruct raw strings", "tree": {"sha": "53899a17cb4faa57ab6644c0238cb3fd2ca53019", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53899a17cb4faa57ab6644c0238cb3fd2ca53019"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19ac2e94c6cb12ae4f9fb410f165e2aa5309e124", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19ac2e94c6cb12ae4f9fb410f165e2aa5309e124", "html_url": "https://github.com/rust-lang/rust/commit/19ac2e94c6cb12ae4f9fb410f165e2aa5309e124", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19ac2e94c6cb12ae4f9fb410f165e2aa5309e124/comments", "author": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9020bb2dded44e97fd997ab71ab4edf6d88033b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9020bb2dded44e97fd997ab71ab4edf6d88033b", "html_url": "https://github.com/rust-lang/rust/commit/f9020bb2dded44e97fd997ab71ab4edf6d88033b"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "e07b1649a4662897ffa8d08de6d0c3280a6b3e94", "filename": "clippy_lints/src/strings.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/19ac2e94c6cb12ae4f9fb410f165e2aa5309e124/clippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19ac2e94c6cb12ae4f9fb410f165e2aa5309e124/clippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrings.rs?ref=19ac2e94c6cb12ae4f9fb410f165e2aa5309e124", "patch": "@@ -7,7 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n use crate::rustc::hir::*;\n use crate::rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use crate::rustc::{declare_tool_lint, lint_array};\n@@ -164,15 +163,20 @@ impl LintPass for StringLitAsBytes {\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for StringLitAsBytes {\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, e: &'tcx Expr) {\n-        use crate::syntax::ast::LitKind;\n+        use crate::syntax::ast::{LitKind, StrStyle};\n         use crate::utils::{in_macro, snippet};\n \n         if let ExprKind::MethodCall(ref path, _, ref args) = e.node {\n             if path.ident.name == \"as_bytes\" {\n                 if let ExprKind::Lit(ref lit) = args[0].node {\n-                    if let LitKind::Str(ref lit_content, _) = lit.node {\n+                    if let LitKind::Str(ref lit_content, style) = lit.node {\n                         let callsite = snippet(cx, args[0].span.source_callsite(), r#\"\"foo\"\"#);\n-                        let expanded = format!(\"\\\"{}\\\"\", lit_content.as_str());\n+                        let expanded = if let StrStyle::Raw(n) = style {\n+                            let term = (0..n).map(|_| '#').collect::<String>();\n+                            format!(\"r{0}\\\"{1}\\\"{0}\", term, lit_content.as_str())\n+                        } else {\n+                            format!(\"\\\"{}\\\"\", lit_content.as_str())\n+                        };\n                         if callsite.starts_with(\"include_str!\") {\n                             span_lint_and_sugg(\n                                 cx,"}, {"sha": "21115d8e97ecd20eb449916684ff6de2e7b6b960", "filename": "tests/ui/strings.stderr", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/19ac2e94c6cb12ae4f9fb410f165e2aa5309e124/tests%2Fui%2Fstrings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19ac2e94c6cb12ae4f9fb410f165e2aa5309e124/tests%2Fui%2Fstrings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstrings.stderr?ref=19ac2e94c6cb12ae4f9fb410f165e2aa5309e124", "patch": "@@ -60,3 +60,17 @@ error: calling `as_bytes()` on a string literal\n    |\n    = note: `-D clippy::string-lit-as-bytes` implied by `-D warnings`\n \n+error: calling `as_bytes()` on a string literal\n+  --> $DIR/strings.rs:62:14\n+   |\n+62 |     let bs = r###\"raw string with three ### in it and some \" \"\"###.as_bytes();\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead: `br###\"raw string with three ### in it and some \" \"\"###`\n+\n+error: calling `as_bytes()` on `include_str!(..)`\n+  --> $DIR/strings.rs:69:22\n+   |\n+69 |     let includestr = include_str!(\"entry.rs\").as_bytes();\n+   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `include_bytes!(..)` instead: `include_bytes!(\"entry.rs\")`\n+\n+error: aborting due to 11 previous errors\n+"}]}