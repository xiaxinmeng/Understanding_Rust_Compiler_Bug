{"sha": "7ded7f764c2d590d0c3ad71b9ffbbcfaec2174fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkZWQ3Zjc2NGMyZDU5MGQwYzNhZDcxYjlmZmJiY2ZhZWMyMTc0ZmI=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2018-02-24T23:06:01Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2018-02-24T23:06:01Z"}, "message": "corrected grammar errors", "tree": {"sha": "16d4da02233dc64687bf16ff2e9f200f03b15061", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16d4da02233dc64687bf16ff2e9f200f03b15061"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ded7f764c2d590d0c3ad71b9ffbbcfaec2174fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ded7f764c2d590d0c3ad71b9ffbbcfaec2174fb", "html_url": "https://github.com/rust-lang/rust/commit/7ded7f764c2d590d0c3ad71b9ffbbcfaec2174fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ded7f764c2d590d0c3ad71b9ffbbcfaec2174fb/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce3ad263ff085ac15016430de5f4abb154427433", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce3ad263ff085ac15016430de5f4abb154427433", "html_url": "https://github.com/rust-lang/rust/commit/ce3ad263ff085ac15016430de5f4abb154427433"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "858bdcbb72110351093b24b2f0c60eb59c2a3a68", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7ded7f764c2d590d0c3ad71b9ffbbcfaec2174fb/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ded7f764c2d590d0c3ad71b9ffbbcfaec2174fb/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=7ded7f764c2d590d0c3ad71b9ffbbcfaec2174fb", "patch": "@@ -10,17 +10,17 @@\n \n //! Shareable mutable containers.\n //!\n-//! Rust memory safety is based on this rule: Given an object `T`, is only possible to\n+//! Rust memory safety is based on this rule: Given an object `T`, it is only possible to\n //! have one of the following:\n //!\n-//! - Having several inmutable references (`&T`) to the object (also know as Aliasing).\n+//! - Having several immutable references (`&T`) to the object (also know as Aliasing).\n //! - Having one mutable reference (`&mut T`) to the object (also know as Mutability).\n //!\n //! This is enforced by the Rust compiler. However, there are situations where this rule is not\n-//! flexible enough. Sometimes is required to have multiple references to an object and yet\n+//! flexible enough. Sometimes it is required to have multiple references to an object and yet\n //! mutate it.\n //!\n-//! Shareable mutable containers exist to permit mutability in presence of aliasing in a\n+//! Shareable mutable containers exist to permit mutability in the presence of aliasing in a\n //! controlled manner. Both `Cell<T>` and `RefCell<T>` allows to do this in a single threaded\n //! way. However, neither `Cell<T>` nor `RefCell<T>` are thread safe (they do not implement\n //! `Sync`), if you need to do Aliasing and Mutation between multiple threads is possible to use"}]}