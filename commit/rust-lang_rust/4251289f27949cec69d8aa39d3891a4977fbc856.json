{"sha": "4251289f27949cec69d8aa39d3891a4977fbc856", "node_id": "C_kwDOAAsO6NoAKDQyNTEyODlmMjc5NDljZWM2OWQ4YWEzOWQzODkxYTQ5NzdmYmM4NTY", "commit": {"author": {"name": "Jakob Degen", "email": "jakob.e.degen@gmail.com", "date": "2022-12-20T01:38:18Z"}, "committer": {"name": "Jakob Degen", "email": "jakob.e.degen@gmail.com", "date": "2022-12-20T01:38:18Z"}, "message": "Disable `NormalizeArrayLen`", "tree": {"sha": "deb4c70d572f40070e91bc5c9b5f2d323efc284b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/deb4c70d572f40070e91bc5c9b5f2d323efc284b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4251289f27949cec69d8aa39d3891a4977fbc856", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4251289f27949cec69d8aa39d3891a4977fbc856", "html_url": "https://github.com/rust-lang/rust/commit/4251289f27949cec69d8aa39d3891a4977fbc856", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4251289f27949cec69d8aa39d3891a4977fbc856/comments", "author": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01ef4b21dc5251b58bd9c6fd6face2ae95d56da1", "url": "https://api.github.com/repos/rust-lang/rust/commits/01ef4b21dc5251b58bd9c6fd6face2ae95d56da1", "html_url": "https://github.com/rust-lang/rust/commit/01ef4b21dc5251b58bd9c6fd6face2ae95d56da1"}], "stats": {"total": 31, "additions": 12, "deletions": 19}, "files": [{"sha": "1708b287e56f25bca285136fca3a92649a0bafd6", "filename": "compiler/rustc_mir_transform/src/normalize_array_len.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4251289f27949cec69d8aa39d3891a4977fbc856/compiler%2Frustc_mir_transform%2Fsrc%2Fnormalize_array_len.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4251289f27949cec69d8aa39d3891a4977fbc856/compiler%2Frustc_mir_transform%2Fsrc%2Fnormalize_array_len.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fnormalize_array_len.rs?ref=4251289f27949cec69d8aa39d3891a4977fbc856", "patch": "@@ -16,7 +16,8 @@ pub struct NormalizeArrayLen;\n \n impl<'tcx> MirPass<'tcx> for NormalizeArrayLen {\n     fn is_enabled(&self, sess: &rustc_session::Session) -> bool {\n-        sess.mir_opt_level() >= 4\n+        // See #105929\n+        sess.mir_opt_level() >= 4 && sess.opts.unstable_opts.unsound_mir_opts\n     }\n \n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {"}, {"sha": "44445731e72090a365113c15b0fac97251217604", "filename": "src/test/mir-opt/const_prop/slice_len.main.ConstProp.32bit.diff", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4251289f27949cec69d8aa39d3891a4977fbc856/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fslice_len.main.ConstProp.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4251289f27949cec69d8aa39d3891a4977fbc856/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fslice_len.main.ConstProp.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fslice_len.main.ConstProp.32bit.diff?ref=4251289f27949cec69d8aa39d3891a4977fbc856", "patch": "@@ -12,7 +12,6 @@\n       let mut _7: usize;                   // in scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n       let mut _8: bool;                    // in scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n       let mut _9: &[u32; 3];               // in scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n-      let mut _10: &[u32; 3];              // in scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n   \n       bb0: {\n           StorageLive(_1);                 // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n@@ -25,16 +24,14 @@\n                                            // + literal: Const { ty: &[u32; 3], val: Unevaluated(main, [], Some(promoted[0])) }\n           _4 = _9;                         // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n           _3 = _4;                         // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n-          StorageLive(_10);                // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n-          _10 = _3;                        // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n           _2 = move _3 as &[u32] (Pointer(Unsize)); // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n           StorageDead(_3);                 // scope 0 at $DIR/slice_len.rs:+1:18: +1:19\n           StorageLive(_6);                 // scope 0 at $DIR/slice_len.rs:+1:31: +1:32\n           _6 = const 1_usize;              // scope 0 at $DIR/slice_len.rs:+1:31: +1:32\n-          _7 = const 3_usize;              // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n-          StorageDead(_10);                // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n+-         _7 = Len((*_2));                 // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n -         _8 = Lt(_6, _7);                 // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n -         assert(move _8, \"index out of bounds: the length is {} but the index is {}\", move _7, _6) -> bb1; // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n++         _7 = const 3_usize;              // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n +         _8 = const true;                 // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n +         assert(const true, \"index out of bounds: the length is {} but the index is {}\", const 3_usize, const 1_usize) -> bb1; // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n       }"}, {"sha": "44445731e72090a365113c15b0fac97251217604", "filename": "src/test/mir-opt/const_prop/slice_len.main.ConstProp.64bit.diff", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4251289f27949cec69d8aa39d3891a4977fbc856/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fslice_len.main.ConstProp.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4251289f27949cec69d8aa39d3891a4977fbc856/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fslice_len.main.ConstProp.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fslice_len.main.ConstProp.64bit.diff?ref=4251289f27949cec69d8aa39d3891a4977fbc856", "patch": "@@ -12,7 +12,6 @@\n       let mut _7: usize;                   // in scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n       let mut _8: bool;                    // in scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n       let mut _9: &[u32; 3];               // in scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n-      let mut _10: &[u32; 3];              // in scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n   \n       bb0: {\n           StorageLive(_1);                 // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n@@ -25,16 +24,14 @@\n                                            // + literal: Const { ty: &[u32; 3], val: Unevaluated(main, [], Some(promoted[0])) }\n           _4 = _9;                         // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n           _3 = _4;                         // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n-          StorageLive(_10);                // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n-          _10 = _3;                        // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n           _2 = move _3 as &[u32] (Pointer(Unsize)); // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n           StorageDead(_3);                 // scope 0 at $DIR/slice_len.rs:+1:18: +1:19\n           StorageLive(_6);                 // scope 0 at $DIR/slice_len.rs:+1:31: +1:32\n           _6 = const 1_usize;              // scope 0 at $DIR/slice_len.rs:+1:31: +1:32\n-          _7 = const 3_usize;              // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n-          StorageDead(_10);                // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n+-         _7 = Len((*_2));                 // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n -         _8 = Lt(_6, _7);                 // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n -         assert(move _8, \"index out of bounds: the length is {} but the index is {}\", move _7, _6) -> bb1; // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n++         _7 = const 3_usize;              // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n +         _8 = const true;                 // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n +         assert(const true, \"index out of bounds: the length is {} but the index is {}\", const 3_usize, const 1_usize) -> bb1; // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n       }"}, {"sha": "e97b46f6ecc82b19b29ccddcdd162afb07801192", "filename": "src/test/mir-opt/issue_76432.test.SimplifyComparisonIntegral.diff", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4251289f27949cec69d8aa39d3891a4977fbc856/src%2Ftest%2Fmir-opt%2Fissue_76432.test.SimplifyComparisonIntegral.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4251289f27949cec69d8aa39d3891a4977fbc856/src%2Ftest%2Fmir-opt%2Fissue_76432.test.SimplifyComparisonIntegral.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_76432.test.SimplifyComparisonIntegral.diff?ref=4251289f27949cec69d8aa39d3891a4977fbc856", "patch": "@@ -22,7 +22,6 @@\n       let mut _20: *const T;               // in scope 0 at $DIR/issue_76432.rs:+3:70: +3:84\n       let mut _21: *const T;               // in scope 0 at $DIR/issue_76432.rs:+3:70: +3:84\n       let mut _22: !;                      // in scope 0 at $SRC_DIR/core/src/panic.rs:LL:COL\n-      let mut _23: &[T; 3];                // in scope 0 at $DIR/issue_76432.rs:+1:19: +1:29\n       scope 1 {\n           debug v => _2;                   // in scope 1 at $DIR/issue_76432.rs:+1:9: +1:10\n           let _13: &T;                     // in scope 1 at $DIR/issue_76432.rs:+3:10: +3:16\n@@ -52,17 +51,16 @@\n           StorageDead(_6);                 // scope 0 at $DIR/issue_76432.rs:+1:28: +1:29\n           _4 = &_5;                        // scope 0 at $DIR/issue_76432.rs:+1:19: +1:29\n           _3 = _4;                         // scope 0 at $DIR/issue_76432.rs:+1:19: +1:29\n-          StorageLive(_23);                // scope 0 at $DIR/issue_76432.rs:+1:19: +1:29\n-          _23 = _3;                        // scope 0 at $DIR/issue_76432.rs:+1:19: +1:29\n           _2 = move _3 as &[T] (Pointer(Unsize)); // scope 0 at $DIR/issue_76432.rs:+1:19: +1:29\n           StorageDead(_3);                 // scope 0 at $DIR/issue_76432.rs:+1:28: +1:29\n           StorageDead(_4);                 // scope 0 at $DIR/issue_76432.rs:+1:29: +1:30\n           StorageLive(_9);                 // scope 1 at $DIR/issue_76432.rs:+2:5: +5:6\n-          _10 = const 3_usize;             // scope 1 at $DIR/issue_76432.rs:+3:9: +3:33\n-          StorageDead(_23);                // scope 1 at $DIR/issue_76432.rs:+3:9: +3:33\n+          _10 = Len((*_2));                // scope 1 at $DIR/issue_76432.rs:+3:9: +3:33\n           _11 = const 3_usize;             // scope 1 at $DIR/issue_76432.rs:+3:9: +3:33\n-          _12 = const true;                // scope 1 at $DIR/issue_76432.rs:+3:9: +3:33\n-          goto -> bb2;                     // scope 1 at $DIR/issue_76432.rs:+3:9: +3:33\n+-         _12 = Eq(move _10, const 3_usize); // scope 1 at $DIR/issue_76432.rs:+3:9: +3:33\n+-         switchInt(move _12) -> [0: bb1, otherwise: bb2]; // scope 1 at $DIR/issue_76432.rs:+3:9: +3:33\n++         nop;                             // scope 1 at $DIR/issue_76432.rs:+3:9: +3:33\n++         switchInt(move _10) -> [3: bb2, otherwise: bb1]; // scope 1 at $DIR/issue_76432.rs:+3:9: +3:33\n       }\n   \n       bb1: {"}, {"sha": "d8e4e521ee6820b91fb3dc9ee41f8f5310bebb71", "filename": "src/test/mir-opt/lower_array_len_e2e.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4251289f27949cec69d8aa39d3891a4977fbc856/src%2Ftest%2Fmir-opt%2Flower_array_len_e2e.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4251289f27949cec69d8aa39d3891a4977fbc856/src%2Ftest%2Fmir-opt%2Flower_array_len_e2e.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Flower_array_len_e2e.rs?ref=4251289f27949cec69d8aa39d3891a4977fbc856", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z mir-opt-level=4\n+// compile-flags: -Z mir-opt-level=4 -Zunsound-mir-opts\n \n // EMIT_MIR lower_array_len_e2e.array_bound.PreCodegen.after.mir\n pub fn array_bound<const N: usize>(index: usize, slice: &[u8; N]) -> u8 {"}]}