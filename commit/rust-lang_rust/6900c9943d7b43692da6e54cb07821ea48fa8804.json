{"sha": "6900c9943d7b43692da6e54cb07821ea48fa8804", "node_id": "C_kwDOAAsO6NoAKDY5MDBjOTk0M2Q3YjQzNjkyZGE2ZTU0Y2IwNzgyMWVhNDhmYTg4MDQ", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-04-29T11:43:41Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-05-22T16:06:01Z"}, "message": "Update Cranelift to 0.96.0", "tree": {"sha": "c522c1f8bafd2fc5ff0be91ef9b8babbd4cea0be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c522c1f8bafd2fc5ff0be91ef9b8babbd4cea0be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6900c9943d7b43692da6e54cb07821ea48fa8804", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6900c9943d7b43692da6e54cb07821ea48fa8804", "html_url": "https://github.com/rust-lang/rust/commit/6900c9943d7b43692da6e54cb07821ea48fa8804", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6900c9943d7b43692da6e54cb07821ea48fa8804/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b773282309ab910ae1d823015b637d6d15ea40fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/b773282309ab910ae1d823015b637d6d15ea40fa", "html_url": "https://github.com/rust-lang/rust/commit/b773282309ab910ae1d823015b637d6d15ea40fa"}], "stats": {"total": 189, "additions": 100, "deletions": 89}, "files": [{"sha": "ee987207532a535d2a98f279e67cf8b5ab0e7d37", "filename": "Cargo.lock", "status": "modified", "additions": 71, "deletions": 60, "changes": 131, "blob_url": "https://github.com/rust-lang/rust/blob/6900c9943d7b43692da6e54cb07821ea48fa8804/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/6900c9943d7b43692da6e54cb07821ea48fa8804/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=6900c9943d7b43692da6e54cb07821ea48fa8804", "patch": "@@ -19,6 +19,12 @@ version = \"1.0.66\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"216261ddc8289130e551ddcd5ce8a064710c0d064a4d2895c67151c92b5443f6\"\n \n+[[package]]\n+name = \"arbitrary\"\n+version = \"1.3.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"e2d098ff73c1ca148721f37baad5ea6a465a13f9573aba8641fbbbae8164a54e\"\n+\n [[package]]\n name = \"autocfg\"\n version = \"1.1.0\"\n@@ -37,12 +43,6 @@ version = \"3.11.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"572f695136211188308f16ad2ca5c851a712c464060ae6974944458eb83880ba\"\n \n-[[package]]\n-name = \"byteorder\"\n-version = \"1.4.3\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"14c189c53d098945499cdfa7ecc63567cf3886b3332b312a5b4585d8d3a6a610\"\n-\n [[package]]\n name = \"cfg-if\"\n version = \"1.0.0\"\n@@ -51,23 +51,24 @@ checksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n \n [[package]]\n name = \"cranelift-bforest\"\n-version = \"0.95.1\"\n+version = \"0.96.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"1277fbfa94bc82c8ec4af2ded3e639d49ca5f7f3c7eeab2c66accd135ece4e70\"\n+checksum = \"5dfbfa12cfd843d39182f3e466b3b1a2b53ff348b34eb3579fcd4ee818d177a9\"\n dependencies = [\n  \"cranelift-entity\",\n ]\n \n [[package]]\n name = \"cranelift-codegen\"\n-version = \"0.95.1\"\n+version = \"0.96.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"c6e8c31ad3b2270e9aeec38723888fe1b0ace3bea2b06b3f749ccf46661d3220\"\n+checksum = \"a3efdd75f82d338ebce8f6e492fac7205e4b1091bb76da74ad27894b224052c5\"\n dependencies = [\n  \"bumpalo\",\n  \"cranelift-bforest\",\n  \"cranelift-codegen-meta\",\n  \"cranelift-codegen-shared\",\n+ \"cranelift-control\",\n  \"cranelift-entity\",\n  \"cranelift-isle\",\n  \"gimli\",\n@@ -80,30 +81,39 @@ dependencies = [\n \n [[package]]\n name = \"cranelift-codegen-meta\"\n-version = \"0.95.1\"\n+version = \"0.96.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"c8ac5ac30d62b2d66f12651f6b606dbdfd9c2cfd0908de6b387560a277c5c9da\"\n+checksum = \"e03ccd2e7959cb8c1434aeda5a80599a65f71ba75e00bf969d5f8e2dc7ca11d3\"\n dependencies = [\n  \"cranelift-codegen-shared\",\n ]\n \n [[package]]\n name = \"cranelift-codegen-shared\"\n-version = \"0.95.1\"\n+version = \"0.96.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"dd82b8b376247834b59ed9bdc0ddeb50f517452827d4a11bccf5937b213748b8\"\n+checksum = \"e6e64284ccb56442849500cf17a8cc3681a254ec1bb8f0c887f55b2f81beab70\"\n+\n+[[package]]\n+name = \"cranelift-control\"\n+version = \"0.96.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"537278bd7c9389b6d820d0b8f549460445d8e1cb1d21b617ac2e44aaf2f686cf\"\n+dependencies = [\n+ \"arbitrary\",\n+]\n \n [[package]]\n name = \"cranelift-entity\"\n-version = \"0.95.1\"\n+version = \"0.96.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"40099d38061b37e505e63f89bab52199037a72b931ad4868d9089ff7268660b0\"\n+checksum = \"2e234fff84b1941dd25fa3e24c466283256b377997ccbd85f592066389251796\"\n \n [[package]]\n name = \"cranelift-frontend\"\n-version = \"0.95.1\"\n+version = \"0.96.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"64a25d9d0a0ae3079c463c34115ec59507b4707175454f0eee0891e83e30e82d\"\n+checksum = \"59ebfb3cc39ef246aecc9bbd44f6259501cf243da19d45888409cb7f06a34bd0\"\n dependencies = [\n  \"cranelift-codegen\",\n  \"log\",\n@@ -113,18 +123,19 @@ dependencies = [\n \n [[package]]\n name = \"cranelift-isle\"\n-version = \"0.95.1\"\n+version = \"0.96.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"80de6a7d0486e4acbd5f9f87ec49912bf4c8fb6aea00087b989685460d4469ba\"\n+checksum = \"f22fdc6c4ce755b44f92f2e3e1f7f1138f9ee5c3d99e2e2b20418475713a2c6c\"\n \n [[package]]\n name = \"cranelift-jit\"\n-version = \"0.95.1\"\n+version = \"0.96.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"3ca96b05988aa057eda09a817a6e31915fabd7f476b513123aff08053cd193dd\"\n+checksum = \"65b7970f8950043cada68dcb8b1e9ea5f00d9b7aaf8cb139b4954fd4fb365bc2\"\n dependencies = [\n  \"anyhow\",\n  \"cranelift-codegen\",\n+ \"cranelift-control\",\n  \"cranelift-entity\",\n  \"cranelift-module\",\n  \"cranelift-native\",\n@@ -138,19 +149,20 @@ dependencies = [\n \n [[package]]\n name = \"cranelift-module\"\n-version = \"0.95.1\"\n+version = \"0.96.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"e5112c0be9cc5da064e0620570d67852f11ce44f2e572a58ecf7f11df73978b8\"\n+checksum = \"1413dae1da005e5f54b185b0173f13b4184cd4d80ec3cc8c37ee5666c20a9ccb\"\n dependencies = [\n  \"anyhow\",\n  \"cranelift-codegen\",\n+ \"cranelift-control\",\n ]\n \n [[package]]\n name = \"cranelift-native\"\n-version = \"0.95.1\"\n+version = \"0.96.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"bb6b03e0e03801c4b3fd8ce0758a94750c07a44e7944cc0ffbf0d3f2e7c79b00\"\n+checksum = \"e961c2eba1af0ec7422170fc1ba635d06000f466ee4d4811f3d4cd6f4594327f\"\n dependencies = [\n  \"cranelift-codegen\",\n  \"libc\",\n@@ -159,12 +171,13 @@ dependencies = [\n \n [[package]]\n name = \"cranelift-object\"\n-version = \"0.95.1\"\n+version = \"0.96.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"48ed1b37d0972abe804cb5bf2b35f3a76a276ebbe148e3a726d8e31042790978\"\n+checksum = \"b1521f1e47b81d913f032e8ab246c2c8201c6da9fd7dcef6afee07d2afa31811\"\n dependencies = [\n  \"anyhow\",\n  \"cranelift-codegen\",\n+ \"cranelift-control\",\n  \"cranelift-module\",\n  \"log\",\n  \"object\",\n@@ -186,15 +199,6 @@ version = \"0.2.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"4443176a9f2c162692bd3d352d745ef9413eec5782a80d8fd6f8a1ac692a07f7\"\n \n-[[package]]\n-name = \"fxhash\"\n-version = \"0.2.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"c31b6d751ae2c7f11320402d34e41349dd1016f8d5d45e48c4312bc8625af50c\"\n-dependencies = [\n- \"byteorder\",\n-]\n-\n [[package]]\n name = \"gimli\"\n version = \"0.27.2\"\n@@ -291,12 +295,13 @@ checksum = \"86f0b0d4bf799edbc74508c1e8bf170ff5f41238e5f8225603ca7caaae2b7860\"\n \n [[package]]\n name = \"regalloc2\"\n-version = \"0.6.1\"\n+version = \"0.8.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"80535183cae11b149d618fbd3c37e38d7cda589d82d7769e196ca9a9042d7621\"\n+checksum = \"d4a52e724646c6c0800fc456ec43b4165d2f91fba88ceaca06d9e0b400023478\"\n dependencies = [\n- \"fxhash\",\n+ \"hashbrown 0.13.2\",\n  \"log\",\n+ \"rustc-hash\",\n  \"slice-group-by\",\n  \"smallvec\",\n ]\n@@ -313,6 +318,12 @@ dependencies = [\n  \"winapi\",\n ]\n \n+[[package]]\n+name = \"rustc-hash\"\n+version = \"1.1.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2\"\n+\n [[package]]\n name = \"rustc_codegen_cranelift\"\n version = \"0.1.0\"\n@@ -363,9 +374,9 @@ checksum = \"49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f\"\n \n [[package]]\n name = \"wasmtime-jit-icache-coherence\"\n-version = \"8.0.1\"\n+version = \"9.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"aecae978b13f7f67efb23bd827373ace4578f2137ec110bbf6a4a7cde4121bbd\"\n+checksum = \"cc60ec61519028279b9e8b6119a52c23b7ce2f2a8f0ec3cbe12aeb6ee9b2c549\"\n dependencies = [\n  \"cfg-if\",\n  \"libc\",\n@@ -396,18 +407,18 @@ checksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n \n [[package]]\n name = \"windows-sys\"\n-version = \"0.45.0\"\n+version = \"0.48.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"75283be5efb2831d37ea142365f009c02ec203cd29a3ebecbc093d52315b66d0\"\n+checksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\n dependencies = [\n  \"windows-targets\",\n ]\n \n [[package]]\n name = \"windows-targets\"\n-version = \"0.42.1\"\n+version = \"0.48.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"8e2522491fbfcd58cc84d47aeb2958948c4b8982e9a2d8a2a35bbaed431390e7\"\n+checksum = \"7b1eb6f0cd7c80c79759c929114ef071b87354ce476d9d94271031c0497adfd5\"\n dependencies = [\n  \"windows_aarch64_gnullvm\",\n  \"windows_aarch64_msvc\",\n@@ -420,42 +431,42 @@ dependencies = [\n \n [[package]]\n name = \"windows_aarch64_gnullvm\"\n-version = \"0.42.1\"\n+version = \"0.48.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"8c9864e83243fdec7fc9c5444389dcbbfd258f745e7853198f365e3c4968a608\"\n+checksum = \"91ae572e1b79dba883e0d315474df7305d12f569b400fcf90581b06062f7e1bc\"\n \n [[package]]\n name = \"windows_aarch64_msvc\"\n-version = \"0.42.1\"\n+version = \"0.48.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"4c8b1b673ffc16c47a9ff48570a9d85e25d265735c503681332589af6253c6c7\"\n+checksum = \"b2ef27e0d7bdfcfc7b868b317c1d32c641a6fe4629c171b8928c7b08d98d7cf3\"\n \n [[package]]\n name = \"windows_i686_gnu\"\n-version = \"0.42.1\"\n+version = \"0.48.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"de3887528ad530ba7bdbb1faa8275ec7a1155a45ffa57c37993960277145d640\"\n+checksum = \"622a1962a7db830d6fd0a69683c80a18fda201879f0f447f065a3b7467daa241\"\n \n [[package]]\n name = \"windows_i686_msvc\"\n-version = \"0.42.1\"\n+version = \"0.48.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"bf4d1122317eddd6ff351aa852118a2418ad4214e6613a50e0191f7004372605\"\n+checksum = \"4542c6e364ce21bf45d69fdd2a8e455fa38d316158cfd43b3ac1c5b1b19f8e00\"\n \n [[package]]\n name = \"windows_x86_64_gnu\"\n-version = \"0.42.1\"\n+version = \"0.48.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"c1040f221285e17ebccbc2591ffdc2d44ee1f9186324dd3e84e99ac68d699c45\"\n+checksum = \"ca2b8a661f7628cbd23440e50b05d705db3686f894fc9580820623656af974b1\"\n \n [[package]]\n name = \"windows_x86_64_gnullvm\"\n-version = \"0.42.1\"\n+version = \"0.48.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"628bfdf232daa22b0d64fdb62b09fcc36bb01f05a3939e20ab73aaf9470d0463\"\n+checksum = \"7896dbc1f41e08872e9d5e8f8baa8fdd2677f29468c4e156210174edc7f7b953\"\n \n [[package]]\n name = \"windows_x86_64_msvc\"\n-version = \"0.42.1\"\n+version = \"0.48.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"447660ad36a13288b1db4d4248e857b510e8c3a225c822ba4fb748c0aafecffd\"\n+checksum = \"1a515f5799fe4961cb532f983ce2b23082366b898e52ffbce459c86f67c8378a\""}, {"sha": "141d7cb8e1c3ec6de520064e15956fcb890a2b1e", "filename": "Cargo.toml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6900c9943d7b43692da6e54cb07821ea48fa8804/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6900c9943d7b43692da6e54cb07821ea48fa8804/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=6900c9943d7b43692da6e54cb07821ea48fa8804", "patch": "@@ -15,12 +15,12 @@ crate-type = [\"dylib\"]\n \n [dependencies]\n # These have to be in sync with each other\n-cranelift-codegen = { version = \"0.95.1\", features = [\"unwind\", \"all-arch\"] }\n-cranelift-frontend = { version = \"0.95.1\" }\n-cranelift-module = { version = \"0.95.1\" }\n-cranelift-native = { version = \"0.95.1\" }\n-cranelift-jit = { version = \"0.95.1\", optional = true }\n-cranelift-object = { version = \"0.95.1\" }\n+cranelift-codegen = {  version = \"0.96\", features = [\"unwind\", \"all-arch\"] }\n+cranelift-frontend = { version = \"0.96\" }\n+cranelift-module = { version = \"0.96\" }\n+cranelift-native = { version = \"0.96\" }\n+cranelift-jit = { version = \"0.96\", optional = true }\n+cranelift-object = { version = \"0.96\" }\n target-lexicon = \"0.12.0\"\n gimli = { version = \"0.27.2\", default-features = false, features = [\"write\"]}\n object = { version = \"0.30.3\", default-features = false, features = [\"std\", \"read_core\", \"write\", \"archive\", \"coff\", \"elf\", \"macho\", \"pe\"] }"}, {"sha": "40ec4b32ac25d900396c13fa67515e591b6dd06c", "filename": "src/allocator.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6900c9943d7b43692da6e54cb07821ea48fa8804/src%2Fallocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6900c9943d7b43692da6e54cb07821ea48fa8804/src%2Fallocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fallocator.rs?ref=6900c9943d7b43692da6e54cb07821ea48fa8804", "patch": "@@ -85,9 +85,9 @@ fn codegen_inner(\n     );\n \n     let data_id = module.declare_data(OomStrategy::SYMBOL, Linkage::Export, false, false).unwrap();\n-    let mut data_ctx = DataContext::new();\n-    data_ctx.set_align(1);\n+    let mut data = DataDescription::new();\n+    data.set_align(1);\n     let val = oom_strategy.should_panic();\n-    data_ctx.define(Box::new([val]));\n-    module.define_data(data_id, &data_ctx).unwrap();\n+    data.define(Box::new([val]));\n+    module.define_data(data_id, &data).unwrap();\n }"}, {"sha": "0aeb41b8a3ea4123e71bdc308286015f60810687", "filename": "src/common.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6900c9943d7b43692da6e54cb07821ea48fa8804/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6900c9943d7b43692da6e54cb07821ea48fa8804/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=6900c9943d7b43692da6e54cb07821ea48fa8804", "patch": "@@ -458,12 +458,12 @@ impl<'tcx> FunctionCx<'_, '_, 'tcx> {\n     }\n \n     pub(crate) fn anonymous_str(&mut self, msg: &str) -> Value {\n-        let mut data_ctx = DataContext::new();\n-        data_ctx.define(msg.as_bytes().to_vec().into_boxed_slice());\n+        let mut data = DataDescription::new();\n+        data.define(msg.as_bytes().to_vec().into_boxed_slice());\n         let msg_id = self.module.declare_anonymous_data(false, false).unwrap();\n \n         // Ignore DuplicateDefinition error, as the data will be the same\n-        let _ = self.module.define_data(msg_id, &data_ctx);\n+        let _ = self.module.define_data(msg_id, &data);\n \n         let local_msg_id = self.module.declare_data_in_func(msg_id, self.bcx.func);\n         if self.clif_comments.enabled() {"}, {"sha": "427340c333e5ae690dbb9a5bbfcae4d787ae5fe8", "filename": "src/constant.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/6900c9943d7b43692da6e54cb07821ea48fa8804/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6900c9943d7b43692da6e54cb07821ea48fa8804/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=6900c9943d7b43692da6e54cb07821ea48fa8804", "patch": "@@ -324,12 +324,12 @@ fn data_id_for_static(\n \n         let ref_name = format!(\"_rust_extern_with_linkage_{}\", symbol_name);\n         let ref_data_id = module.declare_data(&ref_name, Linkage::Local, false, false).unwrap();\n-        let mut data_ctx = DataContext::new();\n-        data_ctx.set_align(align);\n-        let data = module.declare_data_in_data(data_id, &mut data_ctx);\n-        data_ctx.define(std::iter::repeat(0).take(pointer_ty(tcx).bytes() as usize).collect());\n-        data_ctx.write_data_addr(0, data, 0);\n-        match module.define_data(ref_data_id, &data_ctx) {\n+        let mut data = DataDescription::new();\n+        data.set_align(align);\n+        let data_gv = module.declare_data_in_data(data_id, &mut data);\n+        data.define(std::iter::repeat(0).take(pointer_ty(tcx).bytes() as usize).collect());\n+        data.write_data_addr(0, data_gv, 0);\n+        match module.define_data(ref_data_id, &data) {\n             // Every time the static is referenced there will be another definition of this global,\n             // so duplicate definitions are expected and allowed.\n             Err(ModuleError::DuplicateDefinition(_)) => {}\n@@ -394,9 +394,9 @@ fn define_all_allocs(tcx: TyCtxt<'_>, module: &mut dyn Module, cx: &mut Constant\n             continue;\n         }\n \n-        let mut data_ctx = DataContext::new();\n+        let mut data = DataDescription::new();\n         let alloc = alloc.inner();\n-        data_ctx.set_align(alloc.align.bytes());\n+        data.set_align(alloc.align.bytes());\n \n         if let Some(section_name) = section_name {\n             let (segment_name, section_name) = if tcx.sess.target.is_like_osx {\n@@ -412,11 +412,11 @@ fn define_all_allocs(tcx: TyCtxt<'_>, module: &mut dyn Module, cx: &mut Constant\n             } else {\n                 (\"\", section_name.as_str())\n             };\n-            data_ctx.set_segment_section(segment_name, section_name);\n+            data.set_segment_section(segment_name, section_name);\n         }\n \n         let bytes = alloc.inspect_with_uninit_and_ptr_outside_interpreter(0..alloc.len()).to_vec();\n-        data_ctx.define(bytes.into_boxed_slice());\n+        data.define(bytes.into_boxed_slice());\n \n         for &(offset, alloc_id) in alloc.provenance().ptrs().iter() {\n             let addend = {\n@@ -435,8 +435,8 @@ fn define_all_allocs(tcx: TyCtxt<'_>, module: &mut dyn Module, cx: &mut Constant\n                     assert_eq!(addend, 0);\n                     let func_id =\n                         crate::abi::import_function(tcx, module, instance.polymorphize(tcx));\n-                    let local_func_id = module.declare_func_in_data(func_id, &mut data_ctx);\n-                    data_ctx.write_function_addr(offset.bytes() as u32, local_func_id);\n+                    let local_func_id = module.declare_func_in_data(func_id, &mut data);\n+                    data.write_function_addr(offset.bytes() as u32, local_func_id);\n                     continue;\n                 }\n                 GlobalAlloc::Memory(target_alloc) => {\n@@ -462,11 +462,11 @@ fn define_all_allocs(tcx: TyCtxt<'_>, module: &mut dyn Module, cx: &mut Constant\n                 }\n             };\n \n-            let global_value = module.declare_data_in_data(data_id, &mut data_ctx);\n-            data_ctx.write_data_addr(offset.bytes() as u32, global_value, addend as i64);\n+            let global_value = module.declare_data_in_data(data_id, &mut data);\n+            data.write_data_addr(offset.bytes() as u32, global_value, addend as i64);\n         }\n \n-        module.define_data(data_id, &data_ctx).unwrap();\n+        module.define_data(data_id, &data).unwrap();\n         cx.done.insert(data_id);\n     }\n "}, {"sha": "5ff784f3dd7049281a041f83202da5a47aca2eb8", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6900c9943d7b43692da6e54cb07821ea48fa8804/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6900c9943d7b43692da6e54cb07821ea48fa8804/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=6900c9943d7b43692da6e54cb07821ea48fa8804", "patch": "@@ -102,7 +102,7 @@ mod prelude {\n     pub(crate) use cranelift_codegen::isa::{self, CallConv};\n     pub(crate) use cranelift_codegen::Context;\n     pub(crate) use cranelift_frontend::{FunctionBuilder, FunctionBuilderContext, Variable};\n-    pub(crate) use cranelift_module::{self, DataContext, FuncId, Linkage, Module};\n+    pub(crate) use cranelift_module::{self, DataDescription, FuncId, Linkage, Module};\n \n     pub(crate) use crate::abi::*;\n     pub(crate) use crate::base::{codegen_operand, codegen_place};"}]}