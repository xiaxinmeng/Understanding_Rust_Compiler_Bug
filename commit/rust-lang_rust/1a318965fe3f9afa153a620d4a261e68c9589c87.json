{"sha": "1a318965fe3f9afa153a620d4a261e68c9589c87", "node_id": "C_kwDOAAsO6NoAKDFhMzE4OTY1ZmUzZjlhZmExNTNhNjIwZDRhMjYxZTY4Yzk1ODljODc", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-15T09:32:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-15T09:32:34Z"}, "message": "Auto merge of #14353 - lowr:fix/inline-call-bad-ast, r=Veykril\n\nfix: don't replace `SyntaxToken` with `SyntaxNode`\n\nFixes #14339\n\nWhen we inline method calls, we replace the `self` parameter with a local variable `this`. We have been replacing the `self` **tokens** with `NameRef` **nodes**, which makes the AST malformed. This leads to crash when we apply path transformation after the replacement (which only takes place when the method is generic and such scenario was not tested).", "tree": {"sha": "eb55442e0b20f25538b5925cb8ae3c5215cb3392", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb55442e0b20f25538b5925cb8ae3c5215cb3392"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a318965fe3f9afa153a620d4a261e68c9589c87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a318965fe3f9afa153a620d4a261e68c9589c87", "html_url": "https://github.com/rust-lang/rust/commit/1a318965fe3f9afa153a620d4a261e68c9589c87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a318965fe3f9afa153a620d4a261e68c9589c87/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05f95cbb0cc2c07d3f273838c6023e7dcfd0c0d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/05f95cbb0cc2c07d3f273838c6023e7dcfd0c0d3", "html_url": "https://github.com/rust-lang/rust/commit/05f95cbb0cc2c07d3f273838c6023e7dcfd0c0d3"}, {"sha": "01bf0725b146b0cf71c21ec8452067f9bd3de1d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/01bf0725b146b0cf71c21ec8452067f9bd3de1d8", "html_url": "https://github.com/rust-lang/rust/commit/01bf0725b146b0cf71c21ec8452067f9bd3de1d8"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "28d815e81b49d88d07fa3e19cac12c4f6a88b2dc", "filename": "crates/ide-assists/src/handlers/inline_call.rs", "status": "modified", "additions": 38, "deletions": 2, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/1a318965fe3f9afa153a620d4a261e68c9589c87/crates%2Fide-assists%2Fsrc%2Fhandlers%2Finline_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a318965fe3f9afa153a620d4a261e68c9589c87/crates%2Fide-assists%2Fsrc%2Fhandlers%2Finline_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Finline_call.rs?ref=1a318965fe3f9afa153a620d4a261e68c9589c87", "patch": "@@ -363,10 +363,10 @@ fn inline(\n         .collect();\n \n     if function.self_param(sema.db).is_some() {\n-        let this = || make::name_ref(\"this\").syntax().clone_for_update();\n+        let this = || make::name_ref(\"this\").syntax().clone_for_update().first_token().unwrap();\n         if let Some(self_local) = params[0].2.as_local(sema.db) {\n             usages_for_locals(self_local)\n-                .flat_map(|FileReference { name, range, .. }| match name {\n+                .filter_map(|FileReference { name, range, .. }| match name {\n                     ast::NameLike::NameRef(_) => Some(body.syntax().covering_element(range)),\n                     _ => None,\n                 })\n@@ -680,6 +680,42 @@ impl Foo {\n     }\n }\n \n+fn main() {\n+    let x = {\n+        let ref this = Foo(3);\n+        Foo(this.0 + 2)\n+    };\n+}\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn generic_method_by_ref() {\n+        check_assist(\n+            inline_call,\n+            r#\"\n+struct Foo(u32);\n+\n+impl Foo {\n+    fn add<T>(&self, a: u32) -> Self {\n+        Foo(self.0 + a)\n+    }\n+}\n+\n+fn main() {\n+    let x = Foo(3).add$0::<usize>(2);\n+}\n+\"#,\n+            r#\"\n+struct Foo(u32);\n+\n+impl Foo {\n+    fn add<T>(&self, a: u32) -> Self {\n+        Foo(self.0 + a)\n+    }\n+}\n+\n fn main() {\n     let x = {\n         let ref this = Foo(3);"}]}