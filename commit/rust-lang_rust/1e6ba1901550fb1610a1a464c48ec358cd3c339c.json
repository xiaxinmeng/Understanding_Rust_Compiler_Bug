{"sha": "1e6ba1901550fb1610a1a464c48ec358cd3c339c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlNmJhMTkwMTU1MGZiMTYxMGExYTQ2NGM0OGVjMzU4Y2QzYzMzOWM=", "commit": {"author": {"name": "Pascal Hertleif", "email": "pascal@technocreatives.com", "date": "2019-05-27T09:26:15Z"}, "committer": {"name": "Pascal Hertleif", "email": "pascal@technocreatives.com", "date": "2019-05-27T09:44:46Z"}, "message": "Make rainbows optional", "tree": {"sha": "60ff1f4a42f8ef297c07d5716af67e3057c8e1bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60ff1f4a42f8ef297c07d5716af67e3057c8e1bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e6ba1901550fb1610a1a464c48ec358cd3c339c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e6ba1901550fb1610a1a464c48ec358cd3c339c", "html_url": "https://github.com/rust-lang/rust/commit/1e6ba1901550fb1610a1a464c48ec358cd3c339c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e6ba1901550fb1610a1a464c48ec358cd3c339c/comments", "author": {"login": "killercup", "id": 20063, "node_id": "MDQ6VXNlcjIwMDYz", "avatar_url": "https://avatars.githubusercontent.com/u/20063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killercup", "html_url": "https://github.com/killercup", "followers_url": "https://api.github.com/users/killercup/followers", "following_url": "https://api.github.com/users/killercup/following{/other_user}", "gists_url": "https://api.github.com/users/killercup/gists{/gist_id}", "starred_url": "https://api.github.com/users/killercup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killercup/subscriptions", "organizations_url": "https://api.github.com/users/killercup/orgs", "repos_url": "https://api.github.com/users/killercup/repos", "events_url": "https://api.github.com/users/killercup/events{/privacy}", "received_events_url": "https://api.github.com/users/killercup/received_events", "type": "User", "site_admin": false}, "committer": {"login": "killercup", "id": 20063, "node_id": "MDQ6VXNlcjIwMDYz", "avatar_url": "https://avatars.githubusercontent.com/u/20063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killercup", "html_url": "https://github.com/killercup", "followers_url": "https://api.github.com/users/killercup/followers", "following_url": "https://api.github.com/users/killercup/following{/other_user}", "gists_url": "https://api.github.com/users/killercup/gists{/gist_id}", "starred_url": "https://api.github.com/users/killercup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killercup/subscriptions", "organizations_url": "https://api.github.com/users/killercup/orgs", "repos_url": "https://api.github.com/users/killercup/repos", "events_url": "https://api.github.com/users/killercup/events{/privacy}", "received_events_url": "https://api.github.com/users/killercup/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ac338b608bb40c5126d019db63232e7834914c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ac338b608bb40c5126d019db63232e7834914c2", "html_url": "https://github.com/rust-lang/rust/commit/4ac338b608bb40c5126d019db63232e7834914c2"}], "stats": {"total": 35, "additions": 29, "deletions": 6}, "files": [{"sha": "c9038cd5c06dc5d8fc41e10045301ed17b5b5fdb", "filename": "crates/ra_syntax/src/syntax_text.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1e6ba1901550fb1610a1a464c48ec358cd3c339c/crates%2Fra_syntax%2Fsrc%2Fsyntax_text.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e6ba1901550fb1610a1a464c48ec358cd3c339c/crates%2Fra_syntax%2Fsrc%2Fsyntax_text.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fsyntax_text.rs?ref=1e6ba1901550fb1610a1a464c48ec358cd3c339c", "patch": "@@ -35,7 +35,8 @@ impl<'a> SyntaxText<'a> {\n     }\n \n     pub fn to_smol_string(&self) -> SmolStr {\n-        // TODO: `impl iter::FromIterator<&str> for SmolStr`\n+        // FIXME: use `self.chunks().collect()` here too once\n+        // https://github.com/matklad/smol_str/pull/12 is merged and published\n         self.to_string().into()\n     }\n "}, {"sha": "b6e6008c428502bd80343694ab80b1519524e650", "filename": "docs/user/features.md", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1e6ba1901550fb1610a1a464c48ec358cd3c339c/docs%2Fuser%2Ffeatures.md", "raw_url": "https://github.com/rust-lang/rust/raw/1e6ba1901550fb1610a1a464c48ec358cd3c339c/docs%2Fuser%2Ffeatures.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Ffeatures.md?ref=1e6ba1901550fb1610a1a464c48ec358cd3c339c", "patch": "@@ -470,3 +470,12 @@ There also snippet completions:\n \n - `tfn` -> `#[test] fn f(){}`\n \n+### Code highlighting\n+\n+Experimental feature to let rust-analyzer highlight Rust code instead of using the\n+default highlighter.\n+\n+#### Rainbow highlighting\n+\n+Experimental feature that, given code highlighting using rust-analyzer is\n+active, will pick unique colors for identifiers."}, {"sha": "05c808394963d65efe013a455dd5aeb232a1b38d", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1e6ba1901550fb1610a1a464c48ec358cd3c339c/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/1e6ba1901550fb1610a1a464c48ec358cd3c339c/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=1e6ba1901550fb1610a1a464c48ec358cd3c339c", "patch": "@@ -164,6 +164,11 @@\n                     \"default\": false,\n                     \"description\": \"Highlight Rust code (overrides built-in syntax highlighting)\"\n                 },\n+                \"rust-analyzer.rainbowHighlightingOn\": {\n+                    \"type\": \"boolean\",\n+                    \"default\": false,\n+                    \"description\": \"When highlighting Rust code, use a unique color per identifier\"\n+                },\n                 \"rust-analyzer.showWorkspaceLoadedNotification\": {\n                     \"type\": \"boolean\",\n                     \"default\": true,"}, {"sha": "8d73a6b3404c7d3d3ce55348634815f5ce4410f1", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1e6ba1901550fb1610a1a464c48ec358cd3c339c/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/1e6ba1901550fb1610a1a464c48ec358cd3c339c/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=1e6ba1901550fb1610a1a464c48ec358cd3c339c", "patch": "@@ -15,6 +15,7 @@ export interface CargoWatchOptions {\n \n export class Config {\n     public highlightingOn = true;\n+    public rainbowHighlightingOn = false;\n     public enableEnhancedTyping = true;\n     public raLspServerPath = RA_LSP_DEBUG || 'ra_lsp_server';\n     public showWorkspaceLoadedNotification = true;\n@@ -39,6 +40,12 @@ export class Config {\n             this.highlightingOn = config.get('highlightingOn') as boolean;\n         }\n \n+        if (config.has('rainbowHighlightingOn')) {\n+            this.rainbowHighlightingOn = config.get(\n+                'rainbowHighlightingOn'\n+            ) as boolean;\n+        }\n+\n         if (config.has('showWorkspaceLoadedNotification')) {\n             this.showWorkspaceLoadedNotification = config.get(\n                 'showWorkspaceLoadedNotification'"}, {"sha": "52a0bd4bb16e5b8d171f7c5d39493a5c1f9b1b66", "filename": "editors/code/src/highlighting.ts", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1e6ba1901550fb1610a1a464c48ec358cd3c339c/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "raw_url": "https://github.com/rust-lang/rust/raw/1e6ba1901550fb1610a1a464c48ec358cd3c339c/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fhighlighting.ts?ref=1e6ba1901550fb1610a1a464c48ec358cd3c339c", "patch": "@@ -7,7 +7,7 @@ import { Server } from './server';\n export interface Decoration {\n     range: lc.Range;\n     tag: string;\n-    id?: string;\n+    bindingHash?: string;\n }\n \n // Based on this HSL-based color generator: https://gist.github.com/bendc/76c48ce53299e6078a76\n@@ -92,6 +92,7 @@ export class Highlighter {\n \n         const byTag: Map<string, vscode.Range[]> = new Map();\n         const colorfulIdents: Map<string, vscode.Range[]> = new Map();\n+        const rainbowTime = Server.config.rainbowHighlightingOn;\n \n         for (const tag of this.decorations.keys()) {\n             byTag.set(tag, []);\n@@ -102,12 +103,12 @@ export class Highlighter {\n                 continue;\n             }\n \n-            if (d.id) {\n-                if (!colorfulIdents.has(d.id)) {\n-                    colorfulIdents.set(d.id, []);\n+            if (rainbowTime && d.bindingHash) {\n+                if (!colorfulIdents.has(d.bindingHash)) {\n+                    colorfulIdents.set(d.bindingHash, []);\n                 }\n                 colorfulIdents\n-                    .get(d.id)!\n+                    .get(d.bindingHash)!\n                     .push(\n                         Server.client.protocol2CodeConverter.asRange(d.range)\n                     );"}]}