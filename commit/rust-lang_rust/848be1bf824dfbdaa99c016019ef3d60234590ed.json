{"sha": "848be1bf824dfbdaa99c016019ef3d60234590ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0OGJlMWJmODI0ZGZiZGFhOTljMDE2MDE5ZWYzZDYwMjM0NTkwZWQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-01-23T17:11:01Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-01-23T17:11:01Z"}, "message": "implement aarch64 hint 'intrinsic'", "tree": {"sha": "dde56a638a776269f414095092bd2d0e0c0668c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dde56a638a776269f414095092bd2d0e0c0668c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/848be1bf824dfbdaa99c016019ef3d60234590ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/848be1bf824dfbdaa99c016019ef3d60234590ed", "html_url": "https://github.com/rust-lang/rust/commit/848be1bf824dfbdaa99c016019ef3d60234590ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/848be1bf824dfbdaa99c016019ef3d60234590ed/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36ce77699743802bd4ebb2f783df15f25e412e0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/36ce77699743802bd4ebb2f783df15f25e412e0b", "html_url": "https://github.com/rust-lang/rust/commit/36ce77699743802bd4ebb2f783df15f25e412e0b"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "237fb27d9222b0a04a44d77c9a5332ae296d1abc", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/848be1bf824dfbdaa99c016019ef3d60234590ed/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/848be1bf824dfbdaa99c016019ef3d60234590ed/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=848be1bf824dfbdaa99c016019ef3d60234590ed", "patch": "@@ -484,6 +484,18 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 let &[] = check_arg_count(args)?;\n                 this.yield_active_thread();\n             }\n+            \"llvm.aarch64.hint\" if this.tcx.sess.target.arch == \"aarch64\" => {\n+                let &[hint] = check_arg_count(args)?;\n+                let hint = this.read_scalar(hint)?.to_i32()?;\n+                match hint {\n+                    1 => { // HINT_YIELD\n+                        this.yield_active_thread();\n+                    }\n+                    _ => {\n+                        throw_unsup_format!(\"unsupported llvm.aarch64.hint argument {}\", hint);\n+                    }\n+                }\n+            }\n \n             // Platform-specific shims\n             _ => match this.tcx.sess.target.os.as_str() {"}]}