{"sha": "3aaf20bd6ec75a572b13d020520d4df563a2891c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhYWYyMGJkNmVjNzVhNTcyYjEzZDAyMDUyMGQ0ZGY1NjNhMjg5MWM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-11T11:14:09Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-11T13:06:08Z"}, "message": "return ref ranges from gotodef", "tree": {"sha": "aa2a0b8e64896423b9324a44ef1f36141ff757bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa2a0b8e64896423b9324a44ef1f36141ff757bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3aaf20bd6ec75a572b13d020520d4df563a2891c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3aaf20bd6ec75a572b13d020520d4df563a2891c", "html_url": "https://github.com/rust-lang/rust/commit/3aaf20bd6ec75a572b13d020520d4df563a2891c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3aaf20bd6ec75a572b13d020520d4df563a2891c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9ed8d4d23cd210f24ca303c72b436bfbe84741f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9ed8d4d23cd210f24ca303c72b436bfbe84741f", "html_url": "https://github.com/rust-lang/rust/commit/f9ed8d4d23cd210f24ca303c72b436bfbe84741f"}], "stats": {"total": 34, "additions": 24, "deletions": 10}, "files": [{"sha": "3fb29950b429983ec87947ec49b2629a668f15ef", "filename": "crates/ra_ide_api/src/goto_definition.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3aaf20bd6ec75a572b13d020520d4df563a2891c/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aaf20bd6ec75a572b13d020520d4df563a2891c/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs?ref=3aaf20bd6ec75a572b13d020520d4df563a2891c", "patch": "@@ -4,19 +4,21 @@ use ra_syntax::{\n     algo::find_node_at_offset,\n };\n \n-use crate::{FilePosition, NavigationTarget, db::RootDatabase};\n+use crate::{FilePosition, NavigationTarget, db::RootDatabase, RangeInfo};\n \n pub(crate) fn goto_definition(\n     db: &RootDatabase,\n     position: FilePosition,\n-) -> Cancelable<Option<Vec<NavigationTarget>>> {\n+) -> Cancelable<Option<RangeInfo<Vec<NavigationTarget>>>> {\n     let file = db.source_file(position.file_id);\n     let syntax = file.syntax();\n     if let Some(name_ref) = find_node_at_offset::<ast::NameRef>(syntax, position.offset) {\n-        return Ok(Some(reference_definition(db, position.file_id, name_ref)?));\n+        let navs = reference_definition(db, position.file_id, name_ref)?;\n+        return Ok(Some(RangeInfo::new(name_ref.syntax().range(), navs)));\n     }\n     if let Some(name) = find_node_at_offset::<ast::Name>(syntax, position.offset) {\n-        return name_definition(db, position.file_id, name);\n+        let navs = ctry!(name_definition(db, position.file_id, name)?);\n+        return Ok(Some(RangeInfo::new(name.syntax().range(), navs)));\n     }\n     Ok(None)\n }"}, {"sha": "2b02dab2a9d3cf1b1407ab88c5385f8f00755889", "filename": "crates/ra_ide_api/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3aaf20bd6ec75a572b13d020520d4df563a2891c/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aaf20bd6ec75a572b13d020520d4df563a2891c/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Flib.rs?ref=3aaf20bd6ec75a572b13d020520d4df563a2891c", "patch": "@@ -251,7 +251,7 @@ pub struct RangeInfo<T> {\n }\n \n impl<T> RangeInfo<T> {\n-    fn new(range: TextRange, info: T) -> RangeInfo<T> {\n+    pub fn new(range: TextRange, info: T) -> RangeInfo<T> {\n         RangeInfo { range, info }\n     }\n }\n@@ -391,7 +391,7 @@ impl Analysis {\n     pub fn goto_definition(\n         &self,\n         position: FilePosition,\n-    ) -> Cancelable<Option<Vec<NavigationTarget>>> {\n+    ) -> Cancelable<Option<RangeInfo<Vec<NavigationTarget>>>> {\n         self.db\n             .catch_canceled(|db| goto_definition::goto_definition(db, position))?\n     }"}, {"sha": "0b9b18cbf8de6e3f5360984cea43a799c106ab2d", "filename": "crates/ra_lsp_server/src/conv.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3aaf20bd6ec75a572b13d020520d4df563a2891c/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aaf20bd6ec75a572b13d020520d4df563a2891c/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs?ref=3aaf20bd6ec75a572b13d020520d4df563a2891c", "patch": "@@ -6,7 +6,7 @@ use languageserver_types::{\n };\n use ra_ide_api::{\n     CompletionItem, CompletionItemKind, FileId, FilePosition, FileRange, FileSystemEdit,\n-    InsertText, NavigationTarget, SourceChange, SourceFileEdit,\n+    InsertText, NavigationTarget, SourceChange, SourceFileEdit, RangeInfo,\n     LineCol, LineIndex, translate_offset_with_edit\n };\n use ra_syntax::{SyntaxKind, TextRange, TextUnit};\n@@ -349,6 +349,15 @@ impl TryConvWith for &NavigationTarget {\n     }\n }\n \n+impl TryConvWith for &RangeInfo<NavigationTarget> {\n+    type Ctx = ServerWorld;\n+    type Output = Location;\n+    fn try_conv_with(self, world: &ServerWorld) -> Result<Location> {\n+        let line_index = world.analysis().file_line_index(self.info.file_id());\n+        to_location(self.info.file_id(), self.info.range(), &world, &line_index)\n+    }\n+}\n+\n pub fn to_location(\n     file_id: FileId,\n     range: TextRange,"}, {"sha": "e3bf55ae79679f81332e5bed669596faa597d6b7", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3aaf20bd6ec75a572b13d020520d4df563a2891c/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aaf20bd6ec75a572b13d020520d4df563a2891c/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=3aaf20bd6ec75a572b13d020520d4df563a2891c", "patch": "@@ -9,7 +9,7 @@ use languageserver_types::{\n     SignatureInformation, SymbolInformation, TextDocumentIdentifier, TextEdit, WorkspaceEdit,\n };\n use ra_ide_api::{\n-    FileId, FilePosition, FileRange, FoldKind, Query, RunnableKind, Severity,\n+    FileId, FilePosition, FileRange, FoldKind, Query, RunnableKind, Severity, SourceChange, RangeInfo,\n };\n use ra_syntax::{TextUnit, AstNode};\n use rustc_hash::FxHashMap;\n@@ -208,12 +208,15 @@ pub fn handle_goto_definition(\n     params: req::TextDocumentPositionParams,\n ) -> Result<Option<req::GotoDefinitionResponse>> {\n     let position = params.try_conv_with(&world)?;\n-    let navs = match world.analysis().goto_definition(position)? {\n+    let nav_info = match world.analysis().goto_definition(position)? {\n         None => return Ok(None),\n         Some(it) => it,\n     };\n-    let res = navs\n+    let nav_range = nav_info.range;\n+    let res = nav_info\n+        .info\n         .into_iter()\n+        .map(|nav| RangeInfo::new(nav_range, nav))\n         .map(|nav| nav.try_conv_with(&world))\n         .collect::<Result<Vec<_>>>()?;\n     Ok(Some(req::GotoDefinitionResponse::Array(res)))"}]}