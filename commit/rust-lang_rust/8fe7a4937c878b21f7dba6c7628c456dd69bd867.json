{"sha": "8fe7a4937c878b21f7dba6c7628c456dd69bd867", "node_id": "C_kwDOAAsO6NoAKDhmZTdhNDkzN2M4NzhiMjFmN2RiYTZjNzYyOGM0NTZkZDY5YmQ4Njc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-26T16:51:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-26T16:51:43Z"}, "message": "Rollup merge of #110819 - tamird:flattencompat-trustedlen, r=the8472\n\nsimplify TrustedLen impls\n\nImplement on FlattenCompat and delegate from Flatten and FlatMap.\n\n/cc ``@the8472``", "tree": {"sha": "9e3a5d97aa20c3403199c74a8c1c9518a7dfc339", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e3a5d97aa20c3403199c74a8c1c9518a7dfc339"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8fe7a4937c878b21f7dba6c7628c456dd69bd867", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkSVafCRBK7hj4Ov3rIwAAi9gIADbQG3kmMlTJ4k1Qc/8bbf1V\n7yalF0vakMGHPCcgOHfyxgZDYISOjpJ0anUUPfo7YtG+5VhggaU0Y69w807sjDOK\nuJIOqAzijfmt4Gba22UNeyic5yfJlKRskO4RGmhfT2nGAmrk42LPUCth4V+3KNB/\naM3yluUHU6H6dj4sSZzdaGW39XFuhAwEbZkytBpuSBQwcb3Gzq2YdDST5AocvKug\nkefuMJQwtVou/bYMKRq7x09qH2DIQEtwqIEw7FqAtuG/7dAfH3K9Uk11cWxz7DsN\n4FdI/SfM0YmsaKfX4YIRcbn9zqT1Xu3XuyHVKFC6sYR/ukl+fGpIqyCjo6wsWzw=\n=hTVh\n-----END PGP SIGNATURE-----\n", "payload": "tree 9e3a5d97aa20c3403199c74a8c1c9518a7dfc339\nparent 1d73549982446699a138e0011a9166fcd633bd66\nparent 451e86c36e3b5222cf1138c083b098ca8aed693a\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1682527903 +0200\ncommitter GitHub <noreply@github.com> 1682527903 +0200\n\nRollup merge of #110819 - tamird:flattencompat-trustedlen, r=the8472\n\nsimplify TrustedLen impls\n\nImplement on FlattenCompat and delegate from Flatten and FlatMap.\n\n/cc ``@the8472``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8fe7a4937c878b21f7dba6c7628c456dd69bd867", "html_url": "https://github.com/rust-lang/rust/commit/8fe7a4937c878b21f7dba6c7628c456dd69bd867", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8fe7a4937c878b21f7dba6c7628c456dd69bd867/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d73549982446699a138e0011a9166fcd633bd66", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d73549982446699a138e0011a9166fcd633bd66", "html_url": "https://github.com/rust-lang/rust/commit/1d73549982446699a138e0011a9166fcd633bd66"}, {"sha": "451e86c36e3b5222cf1138c083b098ca8aed693a", "url": "https://api.github.com/repos/rust-lang/rust/commits/451e86c36e3b5222cf1138c083b098ca8aed693a", "html_url": "https://github.com/rust-lang/rust/commit/451e86c36e3b5222cf1138c083b098ca8aed693a"}], "stats": {"total": 62, "additions": 28, "deletions": 34}, "files": [{"sha": "7217e8f2a8ef694d73ef9901836896f66b23a85c", "filename": "library/core/src/iter/adapters/flatten.rs", "status": "modified", "additions": 28, "deletions": 34, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/8fe7a4937c878b21f7dba6c7628c456dd69bd867/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fflatten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fe7a4937c878b21f7dba6c7628c456dd69bd867/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fflatten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fflatten.rs?ref=8fe7a4937c878b21f7dba6c7628c456dd69bd867", "patch": "@@ -136,26 +136,12 @@ where\n }\n \n #[unstable(feature = \"trusted_len\", issue = \"37572\")]\n-unsafe impl<T, I, F, const N: usize> TrustedLen for FlatMap<I, [T; N], F>\n+unsafe impl<I, U, F> TrustedLen for FlatMap<I, U, F>\n where\n-    I: TrustedLen,\n-    F: FnMut(I::Item) -> [T; N],\n-{\n-}\n-\n-#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n-unsafe impl<'a, T, I, F, const N: usize> TrustedLen for FlatMap<I, &'a [T; N], F>\n-where\n-    I: TrustedLen,\n-    F: FnMut(I::Item) -> &'a [T; N],\n-{\n-}\n-\n-#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n-unsafe impl<'a, T, I, F, const N: usize> TrustedLen for FlatMap<I, &'a mut [T; N], F>\n-where\n-    I: TrustedLen,\n-    F: FnMut(I::Item) -> &'a mut [T; N],\n+    I: Iterator,\n+    U: IntoIterator,\n+    F: FnMut(I::Item) -> U,\n+    FlattenCompat<Map<I, F>, <U as IntoIterator>::IntoIter>: TrustedLen,\n {\n }\n \n@@ -298,8 +284,8 @@ where\n #[unstable(feature = \"trusted_len\", issue = \"37572\")]\n unsafe impl<I> TrustedLen for Flatten<I>\n where\n-    I: TrustedLen,\n-    <I as Iterator>::Item: TrustedConstSize,\n+    I: Iterator<Item: IntoIterator>,\n+    FlattenCompat<I, <I::Item as IntoIterator>::IntoIter>: TrustedLen,\n {\n }\n \n@@ -660,6 +646,27 @@ where\n     }\n }\n \n+unsafe impl<const N: usize, I, T> TrustedLen\n+    for FlattenCompat<I, <[T; N] as IntoIterator>::IntoIter>\n+where\n+    I: TrustedLen<Item = [T; N]>,\n+{\n+}\n+\n+unsafe impl<'a, const N: usize, I, T> TrustedLen\n+    for FlattenCompat<I, <&'a [T; N] as IntoIterator>::IntoIter>\n+where\n+    I: TrustedLen<Item = &'a [T; N]>,\n+{\n+}\n+\n+unsafe impl<'a, const N: usize, I, T> TrustedLen\n+    for FlattenCompat<I, <&'a mut [T; N] as IntoIterator>::IntoIter>\n+where\n+    I: TrustedLen<Item = &'a mut [T; N]>,\n+{\n+}\n+\n trait ConstSizeIntoIterator: IntoIterator {\n     // FIXME(#31844): convert to an associated const once specialization supports that\n     fn size() -> Option<usize>;\n@@ -696,19 +703,6 @@ impl<T, const N: usize> ConstSizeIntoIterator for &mut [T; N] {\n     }\n }\n \n-#[doc(hidden)]\n-#[unstable(feature = \"std_internals\", issue = \"none\")]\n-// FIXME(#20400): Instead of this helper trait there should be multiple impl TrustedLen for Flatten<>\n-//   blocks with different bounds on Iterator::Item but the compiler erroneously considers them overlapping\n-pub unsafe trait TrustedConstSize: IntoIterator {}\n-\n-#[unstable(feature = \"std_internals\", issue = \"none\")]\n-unsafe impl<T, const N: usize> TrustedConstSize for [T; N] {}\n-#[unstable(feature = \"std_internals\", issue = \"none\")]\n-unsafe impl<T, const N: usize> TrustedConstSize for &'_ [T; N] {}\n-#[unstable(feature = \"std_internals\", issue = \"none\")]\n-unsafe impl<T, const N: usize> TrustedConstSize for &'_ mut [T; N] {}\n-\n #[inline]\n fn and_then_or_clear<T, U>(opt: &mut Option<T>, f: impl FnOnce(&mut T) -> Option<U>) -> Option<U> {\n     let x = f(opt.as_mut()?);"}]}