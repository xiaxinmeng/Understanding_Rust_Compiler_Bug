{"sha": "23040c4a5fa74f569f9f46f82f070554899db97f", "node_id": "C_kwDOAAsO6NoAKDIzMDQwYzRhNWZhNzRmNTY5ZjlmNDZmODJmMDcwNTU0ODk5ZGI5N2Y", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-27T01:27:01Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-27T01:27:01Z"}, "message": "Auto merge of #111245 - fee1-dead-contrib:temp-fix-tuple-struct-field, r=lcnr\n\nfix for `Self` not respecting tuple Ctor privacy\n\nThis PR fixes #111220 by checking the privacy of tuple constructors using `Self`, so the following code now errors\n```rust\nmod my {\n    pub struct Foo(&'static str);\n}\n\nimpl AsRef<str> for my::Foo {\n    fn as_ref(&self) -> &str {\n        let Self(s) = self; // previously compiled, now errors correctly\n        s\n    }\n}\n```", "tree": {"sha": "8859a8c5f8b5ec7d2645994fc8c28aa09222ca36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8859a8c5f8b5ec7d2645994fc8c28aa09222ca36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23040c4a5fa74f569f9f46f82f070554899db97f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23040c4a5fa74f569f9f46f82f070554899db97f", "html_url": "https://github.com/rust-lang/rust/commit/23040c4a5fa74f569f9f46f82f070554899db97f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23040c4a5fa74f569f9f46f82f070554899db97f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19ed0aade60e1c1038fe40554bcd9d01b717effa", "url": "https://api.github.com/repos/rust-lang/rust/commits/19ed0aade60e1c1038fe40554bcd9d01b717effa", "html_url": "https://github.com/rust-lang/rust/commit/19ed0aade60e1c1038fe40554bcd9d01b717effa"}, {"sha": "be44860ab94f9e469d6f02232d3064a1049c47ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/be44860ab94f9e469d6f02232d3064a1049c47ba", "html_url": "https://github.com/rust-lang/rust/commit/be44860ab94f9e469d6f02232d3064a1049c47ba"}], "stats": {"total": 126, "additions": 126, "deletions": 0}, "files": [{"sha": "aab432eee571b77464c74cd0d52d1bceb95e3df1", "filename": "compiler/rustc_hir_typeck/messages.ftl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23040c4a5fa74f569f9f46f82f070554899db97f/compiler%2Frustc_hir_typeck%2Fmessages.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/23040c4a5fa74f569f9f46f82f070554899db97f/compiler%2Frustc_hir_typeck%2Fmessages.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fmessages.ftl?ref=23040c4a5fa74f569f9f46f82f070554899db97f", "patch": "@@ -25,6 +25,8 @@ hir_typeck_const_select_must_be_fn = this argument must be a function item\n \n hir_typeck_convert_to_str = try converting the passed type into a `&str`\n \n+hir_typeck_ctor_is_private = tuple struct constructor `{$def}` is private\n+\n hir_typeck_expected_default_return_type = expected `()` because of default return type\n \n hir_typeck_expected_return_type = expected `{$expected}` because of return type"}, {"sha": "4222205c84106742d78ceb029a268cb318789d92", "filename": "compiler/rustc_hir_typeck/src/errors.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/23040c4a5fa74f569f9f46f82f070554899db97f/compiler%2Frustc_hir_typeck%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23040c4a5fa74f569f9f46f82f070554899db97f/compiler%2Frustc_hir_typeck%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ferrors.rs?ref=23040c4a5fa74f569f9f46f82f070554899db97f", "patch": "@@ -319,3 +319,11 @@ pub struct CandidateTraitNote {\n     pub item_name: Ident,\n     pub action_or_ty: String,\n }\n+\n+#[derive(Diagnostic)]\n+#[diag(hir_typeck_ctor_is_private, code = \"E0603\")]\n+pub struct CtorIsPrivate {\n+    #[primary_span]\n+    pub span: Span,\n+    pub def: String,\n+}"}, {"sha": "557950338a73b82a1bf9330a6dfef04faab4a039", "filename": "compiler/rustc_hir_typeck/src/fn_ctxt/_impl.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/23040c4a5fa74f569f9f46f82f070554899db97f/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2F_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23040c4a5fa74f569f9f46f82f070554899db97f/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2F_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2F_impl.rs?ref=23040c4a5fa74f569f9f46f82f070554899db97f", "patch": "@@ -1,4 +1,5 @@\n use crate::callee::{self, DeferredCallResolution};\n+use crate::errors::CtorIsPrivate;\n use crate::method::{self, MethodCallee, SelfSource};\n use crate::rvalue_scopes;\n use crate::{BreakableCtxt, Diverges, Expectation, FnCtxt, LocalTy, RawTy};\n@@ -1207,6 +1208,12 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             match ty.normalized.ty_adt_def() {\n                 Some(adt_def) if adt_def.has_ctor() => {\n                     let (ctor_kind, ctor_def_id) = adt_def.non_enum_variant().ctor.unwrap();\n+                    // Check the visibility of the ctor.\n+                    let vis = tcx.visibility(ctor_def_id);\n+                    if !vis.is_accessible_from(tcx.parent_module(hir_id).to_def_id(), tcx) {\n+                        tcx.sess\n+                            .emit_err(CtorIsPrivate { span, def: tcx.def_path_str(adt_def.did()) });\n+                    }\n                     let new_res = Res::Def(DefKind::Ctor(CtorOf::Struct, ctor_kind), ctor_def_id);\n                     let user_substs = Self::user_substs_for_adt(ty);\n                     user_self_ty = user_substs.user_self_ty;"}, {"sha": "f413b50277861bae8afdf297d84d56cdea139038", "filename": "tests/ui/privacy/issue-111220-2-tuple-struct-fields-projection.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/23040c4a5fa74f569f9f46f82f070554899db97f/tests%2Fui%2Fprivacy%2Fissue-111220-2-tuple-struct-fields-projection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23040c4a5fa74f569f9f46f82f070554899db97f/tests%2Fui%2Fprivacy%2Fissue-111220-2-tuple-struct-fields-projection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprivacy%2Fissue-111220-2-tuple-struct-fields-projection.rs?ref=23040c4a5fa74f569f9f46f82f070554899db97f", "patch": "@@ -0,0 +1,33 @@\n+mod b {\n+    pub struct A(u32);\n+}\n+\n+trait Id {\n+    type Assoc;\n+}\n+impl Id for b::A {\n+    type Assoc = b::A;\n+}\n+impl Id for u32 {\n+    type Assoc = u32;\n+}\n+\n+\n+trait Trait<T> {\n+    fn method(&self)\n+    where\n+        T: Id<Assoc = b::A>;\n+}\n+\n+impl<T: Id> Trait<T> for <T as Id>::Assoc {\n+    fn method(&self)\n+    where\n+        T: Id<Assoc = b::A>,\n+    {\n+        let Self(a) = self;\n+        //~^ ERROR: tuple struct constructor `A` is private\n+        println!(\"{a}\");\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "231a4da8b5f7f480beaf12286b9a7bccb0a2074a", "filename": "tests/ui/privacy/issue-111220-2-tuple-struct-fields-projection.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23040c4a5fa74f569f9f46f82f070554899db97f/tests%2Fui%2Fprivacy%2Fissue-111220-2-tuple-struct-fields-projection.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23040c4a5fa74f569f9f46f82f070554899db97f/tests%2Fui%2Fprivacy%2Fissue-111220-2-tuple-struct-fields-projection.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprivacy%2Fissue-111220-2-tuple-struct-fields-projection.stderr?ref=23040c4a5fa74f569f9f46f82f070554899db97f", "patch": "@@ -0,0 +1,9 @@\n+error[E0603]: tuple struct constructor `A` is private\n+  --> $DIR/issue-111220-2-tuple-struct-fields-projection.rs:27:13\n+   |\n+LL |         let Self(a) = self;\n+   |             ^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0603`."}, {"sha": "78d35fd96da3d5c93fabe8b35690ee865317e48a", "filename": "tests/ui/privacy/issue-111220-tuple-struct-fields.rs", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/23040c4a5fa74f569f9f46f82f070554899db97f/tests%2Fui%2Fprivacy%2Fissue-111220-tuple-struct-fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23040c4a5fa74f569f9f46f82f070554899db97f/tests%2Fui%2Fprivacy%2Fissue-111220-tuple-struct-fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprivacy%2Fissue-111220-tuple-struct-fields.rs?ref=23040c4a5fa74f569f9f46f82f070554899db97f", "patch": "@@ -0,0 +1,46 @@\n+mod b {\n+    #[derive(Default)]\n+    pub struct A(u32);\n+}\n+\n+impl b::A {\n+    fn inherent_bypass(&self) {\n+        let Self(x) = self;\n+        //~^ ERROR: tuple struct constructor `A` is private\n+        println!(\"{x}\");\n+    }\n+}\n+\n+pub trait B {\n+    fn f(&self);\n+}\n+\n+impl B for b::A {\n+    fn f(&self) {\n+        let Self(a) = self;\n+        //~^ ERROR: tuple struct constructor `A` is private\n+        println!(\"{}\", a);\n+    }\n+}\n+\n+pub trait Projector {\n+    type P;\n+}\n+\n+impl Projector for () {\n+    type P = b::A;\n+}\n+\n+pub trait Bypass2 {\n+    fn f2(&self);\n+}\n+\n+impl Bypass2 for <() as Projector>::P {\n+    fn f2(&self) {\n+        let Self(a) = self;\n+        //~^ ERROR: tuple struct constructor `A` is private\n+        println!(\"{}\", a);\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "17a32379cc0a82a2b778c7dce20892eb55069362", "filename": "tests/ui/privacy/issue-111220-tuple-struct-fields.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/23040c4a5fa74f569f9f46f82f070554899db97f/tests%2Fui%2Fprivacy%2Fissue-111220-tuple-struct-fields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23040c4a5fa74f569f9f46f82f070554899db97f/tests%2Fui%2Fprivacy%2Fissue-111220-tuple-struct-fields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprivacy%2Fissue-111220-tuple-struct-fields.stderr?ref=23040c4a5fa74f569f9f46f82f070554899db97f", "patch": "@@ -0,0 +1,21 @@\n+error[E0603]: tuple struct constructor `A` is private\n+  --> $DIR/issue-111220-tuple-struct-fields.rs:8:13\n+   |\n+LL |         let Self(x) = self;\n+   |             ^^^^^^^\n+\n+error[E0603]: tuple struct constructor `A` is private\n+  --> $DIR/issue-111220-tuple-struct-fields.rs:20:13\n+   |\n+LL |         let Self(a) = self;\n+   |             ^^^^^^^\n+\n+error[E0603]: tuple struct constructor `A` is private\n+  --> $DIR/issue-111220-tuple-struct-fields.rs:40:13\n+   |\n+LL |         let Self(a) = self;\n+   |             ^^^^^^^\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0603`."}]}