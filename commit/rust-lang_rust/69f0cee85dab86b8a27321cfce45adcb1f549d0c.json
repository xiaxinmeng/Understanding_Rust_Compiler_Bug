{"sha": "69f0cee85dab86b8a27321cfce45adcb1f549d0c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5ZjBjZWU4NWRhYjg2YjhhMjczMjFjZmNlNDVhZGNiMWY1NDlkMGM=", "commit": {"author": {"name": "William Lee", "email": "wlee@mochify.com", "date": "2016-08-30T21:30:08Z"}, "committer": {"name": "William Lee", "email": "wlee@mochify.com", "date": "2016-08-31T13:18:20Z"}, "message": "Bonus fix for #35280. Part of #35233. Fixes #36057. Adding expanded notes/context for what trait a parameter shadows as part of E0194 error messages.", "tree": {"sha": "f15b66e8df0245d76fcc4cfdf71129d61de9bfa9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f15b66e8df0245d76fcc4cfdf71129d61de9bfa9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69f0cee85dab86b8a27321cfce45adcb1f549d0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69f0cee85dab86b8a27321cfce45adcb1f549d0c", "html_url": "https://github.com/rust-lang/rust/commit/69f0cee85dab86b8a27321cfce45adcb1f549d0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69f0cee85dab86b8a27321cfce45adcb1f549d0c/comments", "author": {"login": "leikahing", "id": 809026, "node_id": "MDQ6VXNlcjgwOTAyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/809026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leikahing", "html_url": "https://github.com/leikahing", "followers_url": "https://api.github.com/users/leikahing/followers", "following_url": "https://api.github.com/users/leikahing/following{/other_user}", "gists_url": "https://api.github.com/users/leikahing/gists{/gist_id}", "starred_url": "https://api.github.com/users/leikahing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leikahing/subscriptions", "organizations_url": "https://api.github.com/users/leikahing/orgs", "repos_url": "https://api.github.com/users/leikahing/repos", "events_url": "https://api.github.com/users/leikahing/events{/privacy}", "received_events_url": "https://api.github.com/users/leikahing/received_events", "type": "User", "site_admin": false}, "committer": {"login": "leikahing", "id": 809026, "node_id": "MDQ6VXNlcjgwOTAyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/809026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leikahing", "html_url": "https://github.com/leikahing", "followers_url": "https://api.github.com/users/leikahing/followers", "following_url": "https://api.github.com/users/leikahing/following{/other_user}", "gists_url": "https://api.github.com/users/leikahing/gists{/gist_id}", "starred_url": "https://api.github.com/users/leikahing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leikahing/subscriptions", "organizations_url": "https://api.github.com/users/leikahing/orgs", "repos_url": "https://api.github.com/users/leikahing/repos", "events_url": "https://api.github.com/users/leikahing/events{/privacy}", "received_events_url": "https://api.github.com/users/leikahing/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4473130f4e0a20278225251ea6a0400258b03180", "url": "https://api.github.com/repos/rust-lang/rust/commits/4473130f4e0a20278225251ea6a0400258b03180", "html_url": "https://github.com/rust-lang/rust/commit/4473130f4e0a20278225251ea6a0400258b03180"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "435442bd30a651f1fac36df30e2f18e08da62ad9", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/69f0cee85dab86b8a27321cfce45adcb1f549d0c/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69f0cee85dab86b8a27321cfce45adcb1f549d0c/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=69f0cee85dab86b8a27321cfce45adcb1f549d0c", "patch": "@@ -16,7 +16,7 @@ use middle::region::{CodeExtent};\n use rustc::infer::TypeOrigin;\n use rustc::traits;\n use rustc::ty::{self, Ty, TyCtxt};\n-use rustc::util::nodemap::FnvHashSet;\n+use rustc::util::nodemap::{FnvHashSet, FnvHashMap};\n \n use syntax::ast;\n use syntax_pos::Span;\n@@ -519,11 +519,26 @@ impl<'ccx, 'gcx> CheckTypeWellFormedVisitor<'ccx, 'gcx> {\n \n fn reject_shadowing_type_parameters(tcx: TyCtxt, span: Span, generics: &ty::Generics) {\n     let parent = tcx.lookup_generics(generics.parent.unwrap());\n-    let impl_params: FnvHashSet<_> = parent.types.iter().map(|tp| tp.name).collect();\n+    let impl_params: FnvHashMap<_, _> = parent.types\n+                                        .iter()\n+                                        .map(|tp| (tp.name, tp.def_id))\n+                                        .collect();\n \n     for method_param in &generics.types {\n-        if impl_params.contains(&method_param.name) {\n-            error_194(tcx, span, method_param.name);\n+        if impl_params.contains_key(&method_param.name) {\n+            // Tighten up the span to focus on only the shadowing type\n+            let shadow_node_id = tcx.map.as_local_node_id(method_param.def_id).unwrap();\n+            let type_span = match tcx.map.opt_span(shadow_node_id) {\n+                Some(osp) => osp,\n+                None => span\n+            };\n+\n+            // The expectation here is that the original trait declaration is\n+            // local so it should be okay to just unwrap everything.\n+            let trait_def_id = impl_params.get(&method_param.name).unwrap();\n+            let trait_node_id = tcx.map.as_local_node_id(*trait_def_id).unwrap();\n+            let trait_decl_span = tcx.map.opt_span(trait_node_id).unwrap();\n+            error_194(tcx, type_span, trait_decl_span, method_param.name);\n         }\n     }\n }\n@@ -630,10 +645,11 @@ fn error_392<'a, 'tcx>(ccx: &CrateCtxt<'a, 'tcx>, span: Span, param_name: ast::N\n     err\n }\n \n-fn error_194(tcx: TyCtxt, span: Span, name: ast::Name) {\n+fn error_194(tcx: TyCtxt, span: Span, trait_decl_span: Span, name: ast::Name) {\n     struct_span_err!(tcx.sess, span, E0194,\n               \"type parameter `{}` shadows another type parameter of the same name\",\n               name)\n-        .span_label(span, &format!(\"`{}` shadows another type parameter\", name))\n+        .span_label(span, &format!(\"shadows another type parameter\"))\n+        .span_label(trait_decl_span, &format!(\"first `{}` declared here\", name))\n         .emit();\n }"}, {"sha": "6b1f718dd76c5542e4cf5bf58edc078c32e75308", "filename": "src/test/compile-fail/E0194.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/69f0cee85dab86b8a27321cfce45adcb1f549d0c/src%2Ftest%2Fcompile-fail%2FE0194.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69f0cee85dab86b8a27321cfce45adcb1f549d0c/src%2Ftest%2Fcompile-fail%2FE0194.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0194.rs?ref=69f0cee85dab86b8a27321cfce45adcb1f549d0c", "patch": "@@ -8,11 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-trait Foo<T> {\n+trait Foo<T> { //~ NOTE first `T` declared here\n     fn do_something(&self) -> T;\n     fn do_something_else<T: Clone>(&self, bar: T);\n     //~^ ERROR E0194\n-    //~| NOTE `T` shadows another type parameter\n+    //~| NOTE shadows another type parameter\n }\n \n fn main() {"}]}