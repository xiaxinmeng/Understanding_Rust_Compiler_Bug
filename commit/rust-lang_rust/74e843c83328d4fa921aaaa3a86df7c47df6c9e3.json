{"sha": "74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "node_id": "C_kwDOAAsO6NoAKDc0ZTg0M2M4MzMyOGQ0ZmE5MjFhYWFhM2E4NmRmN2M0N2RmNmM5ZTM", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-01-28T23:35:02Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-01-29T00:18:56Z"}, "message": "rustdoc: remove unused class `has-srclink`\n\nStopped being used in CSS with\n73d0f7c7b68784f1db0a1f53855c20d118a7e8b0", "tree": {"sha": "bee404625d6c400783b9f25aef29c39ffe1b7460", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bee404625d6c400783b9f25aef29c39ffe1b7460"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "html_url": "https://github.com/rust-lang/rust/commit/74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e225413a21fa69570bd3fefea9eb05e33f8b917", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e225413a21fa69570bd3fefea9eb05e33f8b917", "html_url": "https://github.com/rust-lang/rust/commit/1e225413a21fa69570bd3fefea9eb05e33f8b917"}], "stats": {"total": 204, "additions": 96, "deletions": 108}, "files": [{"sha": "be6de231854ba1198b32710da0bc41467dbeb6e7", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -1528,11 +1528,7 @@ fn render_impl(\n                             })\n                         })\n                         .map(|item| format!(\"{}.{}\", item.type_(), name));\n-                    write!(\n-                        w,\n-                        \"<section id=\\\"{}\\\" class=\\\"{}{} has-srclink\\\">\",\n-                        id, item_type, in_trait_class,\n-                    );\n+                    write!(w, \"<section id=\\\"{}\\\" class=\\\"{}{}\\\">\", id, item_type, in_trait_class,);\n                     render_rightside(w, cx, item, containing_item, render_mode);\n                     if trait_.is_some() {\n                         // Anchors are only used on trait impls.\n@@ -1554,11 +1550,7 @@ fn render_impl(\n             kind @ (clean::TyAssocConstItem(ty) | clean::AssocConstItem(ty, _)) => {\n                 let source_id = format!(\"{}.{}\", item_type, name);\n                 let id = cx.derive_id(source_id.clone());\n-                write!(\n-                    w,\n-                    \"<section id=\\\"{}\\\" class=\\\"{}{} has-srclink\\\">\",\n-                    id, item_type, in_trait_class\n-                );\n+                write!(w, \"<section id=\\\"{}\\\" class=\\\"{}{}\\\">\", id, item_type, in_trait_class);\n                 render_rightside(w, cx, item, containing_item, render_mode);\n                 if trait_.is_some() {\n                     // Anchors are only used on trait impls.\n@@ -1606,11 +1598,7 @@ fn render_impl(\n             clean::AssocTypeItem(tydef, _bounds) => {\n                 let source_id = format!(\"{}.{}\", item_type, name);\n                 let id = cx.derive_id(source_id.clone());\n-                write!(\n-                    w,\n-                    \"<section id=\\\"{}\\\" class=\\\"{}{} has-srclink\\\">\",\n-                    id, item_type, in_trait_class\n-                );\n+                write!(w, \"<section id=\\\"{}\\\" class=\\\"{}{}\\\">\", id, item_type, in_trait_class);\n                 if trait_.is_some() {\n                     // Anchors are only used on trait impls.\n                     write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\">\u00a7</a>\", id);\n@@ -1844,7 +1832,7 @@ pub(crate) fn render_impl_summary(\n     } else {\n         format!(\" data-aliases=\\\"{}\\\"\", aliases.join(\",\"))\n     };\n-    write!(w, \"<section id=\\\"{}\\\" class=\\\"impl has-srclink\\\"{}>\", id, aliases);\n+    write!(w, \"<section id=\\\"{}\\\" class=\\\"impl\\\"{}>\", id, aliases);\n     render_rightside(w, cx, &i.impl_item, containing_item, RenderMode::Normal);\n     write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\">\u00a7</a>\", id);\n     write!(w, \"<h3 class=\\\"code-header\\\">\");"}, {"sha": "b0288d55c256ad84e90c04ab8bc3eb9ff992092b", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -735,7 +735,7 @@ fn item_trait(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean:\n             let method_toggle_class = if item_type.is_method() { \" method-toggle\" } else { \"\" };\n             write!(w, \"<details class=\\\"toggle{method_toggle_class}\\\" open><summary>\");\n         }\n-        write!(w, \"<section id=\\\"{}\\\" class=\\\"method has-srclink\\\">\", id);\n+        write!(w, \"<section id=\\\"{}\\\" class=\\\"method\\\">\", id);\n         render_rightside(w, cx, m, t, RenderMode::Normal);\n         write!(w, \"<h4 class=\\\"code-header\\\">\");\n         render_assoc_item("}, {"sha": "bab66dae70c4f02db9182a6656fdfd7f25881634", "filename": "tests/rustdoc-gui/src-font-size.goml", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc-gui%2Fsrc-font-size.goml", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc-gui%2Fsrc-font-size.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsrc-font-size.goml?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -4,13 +4,13 @@\n goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n show-text: true\n // Check the impl headers.\n-assert-css: (\".impl.has-srclink .srclink\", {\"font-size\": \"16px\", \"font-weight\": 400}, ALL)\n-assert-css: (\".impl.has-srclink .code-header\", {\"font-size\": \"18px\", \"font-weight\": 600}, ALL)\n+assert-css: (\".impl .srclink\", {\"font-size\": \"16px\", \"font-weight\": 400}, ALL)\n+assert-css: (\".impl .code-header\", {\"font-size\": \"18px\", \"font-weight\": 600}, ALL)\n // Check the impl items.\n-assert-css: (\".impl-items .has-srclink .srclink\", {\"font-size\": \"16px\", \"font-weight\": 400}, ALL)\n-assert-css: (\".impl-items .has-srclink .code-header\", {\"font-size\": \"16px\", \"font-weight\": 600}, ALL)\n+assert-css: (\".impl-items .srclink\", {\"font-size\": \"16px\", \"font-weight\": 400}, ALL)\n+assert-css: (\".impl-items .code-header\", {\"font-size\": \"16px\", \"font-weight\": 600}, ALL)\n \n // Check that we can click on source link\n store-document-property: (url, \"URL\")\n-click: \".impl-items .has-srclink .srclink\"\n+click: \".impl-items .srclink\"\n assert-document-property-false: {\"URL\": |url|}"}, {"sha": "a8587829d3ee7df8877c13ea57f157fbc12e7aff", "filename": "tests/rustdoc/anchors.no_const_anchor.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fanchors.no_const_anchor.html", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fanchors.no_const_anchor.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fanchors.no_const_anchor.html?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -1 +1 @@\n-<section id=\"associatedconstant.YOLO\" class=\"method has-srclink\"><a class=\"srclink rightside\" href=\"../src/foo/anchors.rs.html#16\">source</a><h4 class=\"code-header\">const <a href=\"#associatedconstant.YOLO\" class=\"constant\">YOLO</a>: <a class=\"primitive\" href=\"{{channel}}/std/primitive.u32.html\">u32</a></h4></section>\n\\ No newline at end of file\n+<section id=\"associatedconstant.YOLO\" class=\"method\"><a class=\"srclink rightside\" href=\"../src/foo/anchors.rs.html#16\">source</a><h4 class=\"code-header\">const <a href=\"#associatedconstant.YOLO\" class=\"constant\">YOLO</a>: <a class=\"primitive\" href=\"{{channel}}/std/primitive.u32.html\">u32</a></h4></section>\n\\ No newline at end of file"}, {"sha": "4c5e45fea2de599539014cb386bab21b9d4f02a2", "filename": "tests/rustdoc/anchors.no_const_anchor2.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fanchors.no_const_anchor2.html", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fanchors.no_const_anchor2.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fanchors.no_const_anchor2.html?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -1 +1 @@\n-<section id=\"associatedconstant.X\" class=\"associatedconstant has-srclink\"><a class=\"srclink rightside\" href=\"../src/foo/anchors.rs.html#42\">source</a><h4 class=\"code-header\">pub const <a href=\"#associatedconstant.X\" class=\"constant\">X</a>: <a class=\"primitive\" href=\"{{channel}}/std/primitive.i32.html\">i32</a> = 0i32</h4></section>\n\\ No newline at end of file\n+<section id=\"associatedconstant.X\" class=\"associatedconstant\"><a class=\"srclink rightside\" href=\"../src/foo/anchors.rs.html#42\">source</a><h4 class=\"code-header\">pub const <a href=\"#associatedconstant.X\" class=\"constant\">X</a>: <a class=\"primitive\" href=\"{{channel}}/std/primitive.i32.html\">i32</a> = 0i32</h4></section>\n\\ No newline at end of file"}, {"sha": "44957a5b71a54c333e091d349269feda1099577e", "filename": "tests/rustdoc/anchors.no_method_anchor.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fanchors.no_method_anchor.html", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fanchors.no_method_anchor.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fanchors.no_method_anchor.html?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -1 +1 @@\n-<section id=\"method.new\" class=\"method has-srclink\"><a class=\"srclink rightside\" href=\"../src/foo/anchors.rs.html#48\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.new\" class=\"fn\">new</a>() -&gt; Self</h4></section>\n\\ No newline at end of file\n+<section id=\"method.new\" class=\"method\"><a class=\"srclink rightside\" href=\"../src/foo/anchors.rs.html#48\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.new\" class=\"fn\">new</a>() -&gt; Self</h4></section>\n\\ No newline at end of file"}, {"sha": "75c2caf87a89fbf4540b6accb5b7e9a5adec2716", "filename": "tests/rustdoc/anchors.no_trait_method_anchor.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fanchors.no_trait_method_anchor.html", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fanchors.no_trait_method_anchor.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fanchors.no_trait_method_anchor.html?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -1 +1 @@\n-<section id=\"method.bar\" class=\"method has-srclink\"><a class=\"srclink rightside\" href=\"../src/foo/anchors.rs.html#23\">source</a><h4 class=\"code-header\">fn <a href=\"#method.bar\" class=\"fn\">bar</a>()</h4></section>\n\\ No newline at end of file\n+<section id=\"method.bar\" class=\"method\"><a class=\"srclink rightside\" href=\"../src/foo/anchors.rs.html#23\">source</a><h4 class=\"code-header\">fn <a href=\"#method.bar\" class=\"fn\">bar</a>()</h4></section>\n\\ No newline at end of file"}, {"sha": "38575eadfa9698802e3bd842f56cb163d67b3e01", "filename": "tests/rustdoc/anchors.no_tymethod_anchor.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fanchors.no_tymethod_anchor.html", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fanchors.no_tymethod_anchor.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fanchors.no_tymethod_anchor.html?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -1 +1 @@\n-<section id=\"tymethod.foo\" class=\"method has-srclink\"><a class=\"srclink rightside\" href=\"../src/foo/anchors.rs.html#20\">source</a><h4 class=\"code-header\">fn <a href=\"#tymethod.foo\" class=\"fn\">foo</a>()</h4></section>\n\\ No newline at end of file\n+<section id=\"tymethod.foo\" class=\"method\"><a class=\"srclink rightside\" href=\"../src/foo/anchors.rs.html#20\">source</a><h4 class=\"code-header\">fn <a href=\"#tymethod.foo\" class=\"fn\">foo</a>()</h4></section>\n\\ No newline at end of file"}, {"sha": "dd65d98fee69e96102cbd824c8329c232bc57de6", "filename": "tests/rustdoc/anchors.no_type_anchor.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fanchors.no_type_anchor.html", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fanchors.no_type_anchor.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fanchors.no_type_anchor.html?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -1 +1 @@\n-<section id=\"associatedtype.T\" class=\"method has-srclink\"><a class=\"srclink rightside\" href=\"../src/foo/anchors.rs.html#13\">source</a><h4 class=\"code-header\">type <a href=\"#associatedtype.T\" class=\"associatedtype\">T</a></h4></section>\n\\ No newline at end of file\n+<section id=\"associatedtype.T\" class=\"method\"><a class=\"srclink rightside\" href=\"../src/foo/anchors.rs.html#13\">source</a><h4 class=\"code-header\">type <a href=\"#associatedtype.T\" class=\"associatedtype\">T</a></h4></section>\n\\ No newline at end of file"}, {"sha": "f8b59160f15ee07d3a3373a28f7616ccf1ee8dd9", "filename": "tests/rustdoc/anchors.no_type_anchor2.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fanchors.no_type_anchor2.html", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fanchors.no_type_anchor2.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fanchors.no_type_anchor2.html?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -1 +1 @@\n-<section id=\"associatedtype.Y\" class=\"associatedtype has-srclink\"><h4 class=\"code-header\">type <a href=\"#associatedtype.Y\" class=\"associatedtype\">Y</a> = <a class=\"primitive\" href=\"{{channel}}/std/primitive.u32.html\">u32</a></h4></section>\n+<section id=\"associatedtype.Y\" class=\"associatedtype\"><h4 class=\"code-header\">type <a href=\"#associatedtype.Y\" class=\"associatedtype\">Y</a> = <a class=\"primitive\" href=\"{{channel}}/std/primitive.u32.html\">u32</a></h4></section>\n\\ No newline at end of file"}, {"sha": "8cafb5a2497a385acfaa94d5e757bc970b28d443", "filename": "tests/rustdoc/async-fn.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fasync-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fasync-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fasync-fn.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -77,12 +77,12 @@ struct AsyncFdReadyGuard<'a, T> { x: &'a T }\n \n impl Foo {\n     // @has async_fn/struct.Foo.html\n-    // @has - '//*[@class=\"method has-srclink\"]' 'pub async fn complicated_lifetimes( &self, context: &impl Bar) -> impl Iterator<Item = &usize>'\n+    // @has - '//*[@class=\"method\"]' 'pub async fn complicated_lifetimes( &self, context: &impl Bar) -> impl Iterator<Item = &usize>'\n     pub async fn complicated_lifetimes(&self, context: &impl Bar) -> impl Iterator<Item = &usize> {}\n     // taken from `tokio` as an example of a method that was particularly bad before\n-    // @has - '//*[@class=\"method has-srclink\"]' \"pub async fn readable<T>(&self) -> Result<AsyncFdReadyGuard<'_, T>, ()>\"\n+    // @has - '//*[@class=\"method\"]' \"pub async fn readable<T>(&self) -> Result<AsyncFdReadyGuard<'_, T>, ()>\"\n     pub async fn readable<T>(&self) -> Result<AsyncFdReadyGuard<'_, T>, ()> {}\n-    // @has - '//*[@class=\"method has-srclink\"]' \"pub async fn mut_self(&mut self)\"\n+    // @has - '//*[@class=\"method\"]' \"pub async fn mut_self(&mut self)\"\n     pub async fn mut_self(&mut self) {}\n }\n "}, {"sha": "18863abaeaccd3dd70c10c493639126b677f5848", "filename": "tests/rustdoc/const-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fconst-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fconst-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fconst-fn.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -8,7 +8,7 @@ pub const fn bar() -> usize {\n }\n \n // @has foo/struct.Foo.html\n-// @has - '//*[@class=\"method has-srclink\"]' 'const fn new()'\n+// @has - '//*[@class=\"method\"]' 'const fn new()'\n pub struct Foo(usize);\n \n impl Foo {"}, {"sha": "80a9ab3f12e881e708cdb480f5fe6f8ed8c4a0e3", "filename": "tests/rustdoc/const-generics/const-generic-slice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fconst-generics%2Fconst-generic-slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fconst-generics%2Fconst-generic-slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fconst-generics%2Fconst-generic-slice.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -5,7 +5,7 @@ pub trait Array {\n }\n \n // @has foo/trait.Array.html\n-// @has - '//*[@class=\"impl has-srclink\"]' 'impl<T, const N: usize> Array for [T; N]'\n+// @has - '//*[@class=\"impl\"]' 'impl<T, const N: usize> Array for [T; N]'\n impl<T, const N: usize> Array for [T; N] {\n     type Item = T;\n }"}, {"sha": "4d5c9f83e1ee0620009f95150bc47b28ccf84538", "filename": "tests/rustdoc/doc-assoc-item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fdoc-assoc-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fdoc-assoc-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fdoc-assoc-item.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -8,7 +8,7 @@ pub trait Bar {\n     fn foo(foo: Self::Fuu);\n }\n \n-// @has doc_assoc_item/struct.Foo.html '//*[@class=\"impl has-srclink\"]' 'impl<T: Bar<Fuu = u32>> Foo<T>'\n+// @has doc_assoc_item/struct.Foo.html '//*[@class=\"impl\"]' 'impl<T: Bar<Fuu = u32>> Foo<T>'\n impl<T: Bar<Fuu = u32>> Foo<T> {\n     pub fn new(t: T) -> Foo<T> {\n         Foo {"}, {"sha": "4c2071b832266c6fa072bb743d8b8e642778789a", "filename": "tests/rustdoc/duplicate_impls/issue-33054.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fduplicate_impls%2Fissue-33054.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fduplicate_impls%2Fissue-33054.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fduplicate_impls%2Fissue-33054.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -3,8 +3,8 @@\n // @has issue_33054/impls/struct.Foo.html\n // @has - '//h3[@class=\"code-header\"]' 'impl Foo'\n // @has - '//h3[@class=\"code-header\"]' 'impl Bar for Foo'\n-// @count - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl has-srclink\"]' 1\n-// @count - '//*[@id=\"main-content\"]/div[@id=\"implementations-list\"]/details/summary/*[@class=\"impl has-srclink\"]' 1\n+// @count - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl\"]' 1\n+// @count - '//*[@id=\"main-content\"]/div[@id=\"implementations-list\"]/details/summary/*[@class=\"impl\"]' 1\n // @has issue_33054/impls/bar/trait.Bar.html\n // @has - '//h3[@class=\"code-header\"]' 'impl Bar for Foo'\n // @count - '//*[@class=\"struct\"]' 1"}, {"sha": "f32cf310055e0c1da17a3d4ab36fc0c21f08aecb", "filename": "tests/rustdoc/duplicated_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fduplicated_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fduplicated_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fduplicated_impl.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -7,7 +7,7 @@\n // blanket implementations.\n \n // @has 'foo/struct.Whatever.html'\n-// @count - '//*[@id=\"blanket-implementations-list\"]/section[@class=\"impl has-srclink\"]' 1\n+// @count - '//*[@id=\"blanket-implementations-list\"]/section[@class=\"impl\"]' 1\n \n pub trait Something<T> { }\n pub struct Whatever;"}, {"sha": "e6cff97b184299cfe11db00b9db8f98cd2ba76f9", "filename": "tests/rustdoc/empty-impl-block-private-with-doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fempty-impl-block-private-with-doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fempty-impl-block-private-with-doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fempty-impl-block-private-with-doc.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -10,7 +10,7 @@ pub struct Foo;\n // There are 3 impl blocks with public item and one that should not be displayed\n // by default because it only contains private items (but not in this case because\n // we used `--document-private-items`).\n-// @count - '//*[@class=\"impl has-srclink\"]' 'impl Foo' 4\n+// @count - '//*[@class=\"impl\"]' 'impl Foo' 4\n \n // Impl block only containing private items should not be displayed unless the\n // `--document-private-items` flag is used."}, {"sha": "d44b4a47cee1820590c5b0f3b42d47a82f708392", "filename": "tests/rustdoc/empty-impl-block-private.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fempty-impl-block-private.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fempty-impl-block-private.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fempty-impl-block-private.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -7,7 +7,7 @@ pub struct Foo;\n \n // There are 3 impl blocks with public item and one that should not be displayed\n // because it only contains private items.\n-// @count - '//*[@class=\"impl has-srclink\"]' 'impl Foo' 3\n+// @count - '//*[@class=\"impl\"]' 'impl Foo' 3\n \n // Impl block only containing private items should not be displayed.\n /// Private"}, {"sha": "da780580bd087775c41b4caa842bee210aa73656", "filename": "tests/rustdoc/empty-impl-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fempty-impl-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fempty-impl-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fempty-impl-block.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -8,7 +8,7 @@ pub struct Foo;\n /// Hello empty impl block!\n impl Foo {}\n // We ensure that this empty impl block without doc isn't rendered.\n-// @count - '//*[@class=\"impl has-srclink\"]' 'impl Foo' 1\n+// @count - '//*[@class=\"impl\"]' 'impl Foo' 1\n impl Foo {}\n \n // Just to ensure that empty trait impl blocks are rendered."}, {"sha": "f7738060e993cced229ee623d27680380959b690", "filename": "tests/rustdoc/impl-parts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fimpl-parts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fimpl-parts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fimpl-parts.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -5,7 +5,7 @@ pub auto trait AnAutoTrait {}\n \n pub struct Foo<T> { field: T }\n \n-// @has impl_parts/struct.Foo.html '//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has impl_parts/struct.Foo.html '//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n //     \"impl<T> !AnAutoTrait for Foo<T>where T: Sync + Clone,\"\n // @has impl_parts/trait.AnAutoTrait.html '//*[@id=\"implementors-list\"]//h3[@class=\"code-header\"]' \\\n //     \"impl<T> !AnAutoTrait for Foo<T>where T: Sync + Clone,\""}, {"sha": "571eaf6be967a45771f682f56d4345148da969f3", "filename": "tests/rustdoc/inline_cross/issue-31948-1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Finline_cross%2Fissue-31948-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Finline_cross%2Fissue-31948-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Finline_cross%2Fissue-31948-1.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -5,8 +5,8 @@\n extern crate rustdoc_nonreachable_impls;\n \n // @has issue_31948_1/struct.Wobble.html\n-// @has - '//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' 'Bark for'\n-// @has - '//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' 'Woof for'\n+// @has - '//*[@class=\"impl\"]//h3[@class=\"code-header\"]' 'Bark for'\n+// @has - '//*[@class=\"impl\"]//h3[@class=\"code-header\"]' 'Woof for'\n // @!has - '//*[@class=\"impl\"]//h3[@class=\"code-header\"]' 'Bar for'\n // @!has - '//*[@class=\"impl\"]//h3[@class=\"code-header\"]' 'Qux for'\n pub use rustdoc_nonreachable_impls::hidden::Wobble;"}, {"sha": "7eae21046ccbc834bb10a16675038dc19d8b4e7e", "filename": "tests/rustdoc/inline_cross/issue-31948-2.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Finline_cross%2Fissue-31948-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Finline_cross%2Fissue-31948-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Finline_cross%2Fissue-31948-2.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -5,9 +5,9 @@\n extern crate rustdoc_nonreachable_impls;\n \n // @has issue_31948_2/struct.Wobble.html\n-// @has - '//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' 'Qux for'\n-// @has - '//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' 'Bark for'\n-// @has - '//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' 'Woof for'\n+// @has - '//*[@class=\"impl\"]//h3[@class=\"code-header\"]' 'Qux for'\n+// @has - '//*[@class=\"impl\"]//h3[@class=\"code-header\"]' 'Bark for'\n+// @has - '//*[@class=\"impl\"]//h3[@class=\"code-header\"]' 'Woof for'\n // @!has - '//*[@class=\"impl\"]//h3[@class=\"code-header\"]' 'Bar for'\n pub use rustdoc_nonreachable_impls::hidden::Wobble;\n "}, {"sha": "9c271bf4ad43fcbe17689de3ddb0dee9d50dcc6e", "filename": "tests/rustdoc/inline_cross/issue-31948.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Finline_cross%2Fissue-31948.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Finline_cross%2Fissue-31948.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Finline_cross%2Fissue-31948.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -5,9 +5,9 @@\n extern crate rustdoc_nonreachable_impls;\n \n // @has issue_31948/struct.Foo.html\n-// @has - '//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' 'Bark for'\n-// @has - '//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' 'Woof for'\n-// @!has - '//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' 'Bar for'\n+// @has - '//*[@class=\"impl\"]//h3[@class=\"code-header\"]' 'Bark for'\n+// @has - '//*[@class=\"impl\"]//h3[@class=\"code-header\"]' 'Woof for'\n+// @!has - '//*[@class=\"impl\"]//h3[@class=\"code-header\"]' 'Bar for'\n // @!has - '//*[@class=\"impl\"]//h3[@class=\"code-header\"]' 'Qux for'\n pub use rustdoc_nonreachable_impls::Foo;\n "}, {"sha": "5de26abace6fab01d1b20f6570358578468f4c88", "filename": "tests/rustdoc/issue-21474.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fissue-21474.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fissue-21474.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fissue-21474.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -7,5 +7,5 @@ mod inner {\n pub trait Blah { }\n \n // @count issue_21474/struct.What.html \\\n-//        '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl has-srclink\"]' 1\n+//        '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl\"]' 1\n pub struct What;"}, {"sha": "7af00c778361d3042300ba9b8a2ae059aa6fcf07", "filename": "tests/rustdoc/issue-33302.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fissue-33302.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fissue-33302.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fissue-33302.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -22,23 +22,23 @@ macro_rules! make {\n         }\n \n         // @has issue_33302/struct.S.html \\\n-        //        '//*[@class=\"impl has-srclink\"]' 'impl T<[i32; 16]> for S'\n+        //        '//*[@class=\"impl\"]' 'impl T<[i32; 16]> for S'\n         // @has - '//*[@id=\"associatedconstant.C\"]' 'const C: [i32; 16]'\n         // @has - '//*[@id=\"associatedconstant.D\"]' 'const D: i32'\n         impl T<[i32; ($n * $n)]> for S {\n             const C: [i32; ($n * $n)] = [0; ($n * $n)];\n         }\n \n         // @has issue_33302/struct.S.html \\\n-        //        '//*[@class=\"impl has-srclink\"]' 'impl T<[i32; 16]> for S'\n+        //        '//*[@class=\"impl\"]' 'impl T<[i32; 16]> for S'\n         // @has - '//*[@id=\"associatedconstant.C-1\"]' 'const C: (i32,)'\n         // @has - '//*[@id=\"associatedconstant.D-1\"]' 'const D: i32'\n         impl T<(i32,)> for S {\n             const C: (i32,) = ($n,);\n         }\n \n         // @has issue_33302/struct.S.html \\\n-        //        '//*[@class=\"impl has-srclink\"]' 'impl T<(i32, i32)> for S'\n+        //        '//*[@class=\"impl\"]' 'impl T<(i32, i32)> for S'\n         // @has - '//*[@id=\"associatedconstant.C-2\"]' 'const C: (i32, i32)'\n         // @has - '//*[@id=\"associatedconstant.D-2\"]' 'const D: i32'\n         impl T<(i32, i32)> for S {"}, {"sha": "8a5f0413826a910ff7f7ceaa72db9c2438a4ecd7", "filename": "tests/rustdoc/issue-45584.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fissue-45584.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fissue-45584.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fissue-45584.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -4,12 +4,12 @@ pub trait Bar<T, U> {}\n \n // @has 'foo/struct.Foo1.html'\n pub struct Foo1;\n-// @count - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl has-srclink\"]' 1\n-// @has - '//*[@class=\"impl has-srclink\"]' \"impl Bar<Foo1, &'static Foo1> for Foo1\"\n+// @count - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl\"]' 1\n+// @has - '//*[@class=\"impl\"]' \"impl Bar<Foo1, &'static Foo1> for Foo1\"\n impl Bar<Foo1, &'static Foo1> for Foo1 {}\n \n // @has 'foo/struct.Foo2.html'\n pub struct Foo2;\n-// @count - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl has-srclink\"]' 1\n-// @has - '//*[@class=\"impl has-srclink\"]' \"impl Bar<&'static Foo2, Foo2> for u8\"\n+// @count - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl\"]' 1\n+// @has - '//*[@class=\"impl\"]' \"impl Bar<&'static Foo2, Foo2> for u8\"\n impl Bar<&'static Foo2, Foo2> for u8 {}"}, {"sha": "13bedd5dbb023220adaa5721fd43ac78574c9c4a", "filename": "tests/rustdoc/issue-50159.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fissue-50159.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fissue-50159.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fissue-50159.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -14,7 +14,7 @@ impl<B, C> Signal2 for B where B: Signal<Item = C> {\n // @has - '//h3[@class=\"code-header\"]' 'impl<B> Send for Switch<B>where <B as Signal>::Item: Send'\n // @has - '//h3[@class=\"code-header\"]' 'impl<B> Sync for Switch<B>where <B as Signal>::Item: Sync'\n // @count - '//*[@id=\"implementations-list\"]//*[@class=\"impl\"]' 0\n-// @count - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]' 5\n+// @count - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]' 5\n pub struct Switch<B: Signal> {\n     pub inner: <B as Signal2>::Item2,\n }"}, {"sha": "04664805a886f3926abd2e7089eac46958193548", "filename": "tests/rustdoc/issue-51236.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fissue-51236.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fissue-51236.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fissue-51236.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -7,7 +7,7 @@ pub mod traits {\n }\n \n // @has issue_51236/struct.Owned.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // \"impl<T> Send for Owned<T>where <T as Owned<'static>>::Reader: Send\"\n pub struct Owned<T> where T: for<'a> ::traits::Owned<'a> {\n     marker: PhantomData<<T as ::traits::Owned<'static>>::Reader>,"}, {"sha": "dc1eb304c3d1da377678f20917c56892bbcd4edb", "filename": "tests/rustdoc/issue-53812.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fissue-53812.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fissue-53812.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fissue-53812.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -12,9 +12,9 @@ macro_rules! array_impls {\n }\n \n // @has issue_53812/trait.MyIterator.html\n-// @has - '//*[@id=\"implementors-list\"]/*[@class=\"impl has-srclink\"][1]' 'MyStruct<[T; 0]>'\n-// @has - '//*[@id=\"implementors-list\"]/*[@class=\"impl has-srclink\"][2]' 'MyStruct<[T; 1]>'\n-// @has - '//*[@id=\"implementors-list\"]/*[@class=\"impl has-srclink\"][3]' 'MyStruct<[T; 2]>'\n-// @has - '//*[@id=\"implementors-list\"]/*[@class=\"impl has-srclink\"][4]' 'MyStruct<[T; 3]>'\n-// @has - '//*[@id=\"implementors-list\"]/*[@class=\"impl has-srclink\"][5]' 'MyStruct<[T; 10]>'\n+// @has - '//*[@id=\"implementors-list\"]/*[@class=\"impl\"][1]' 'MyStruct<[T; 0]>'\n+// @has - '//*[@id=\"implementors-list\"]/*[@class=\"impl\"][2]' 'MyStruct<[T; 1]>'\n+// @has - '//*[@id=\"implementors-list\"]/*[@class=\"impl\"][3]' 'MyStruct<[T; 2]>'\n+// @has - '//*[@id=\"implementors-list\"]/*[@class=\"impl\"][4]' 'MyStruct<[T; 3]>'\n+// @has - '//*[@id=\"implementors-list\"]/*[@class=\"impl\"][5]' 'MyStruct<[T; 10]>'\n array_impls! { 10 3 2 1 0 }"}, {"sha": "a886eb0de242c19d57921aaa26747433ad16f65a", "filename": "tests/rustdoc/issue-54705.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fissue-54705.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fissue-54705.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fissue-54705.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -1,10 +1,10 @@\n pub trait ScopeHandle<'scope> {}\n \n // @has issue_54705/struct.ScopeFutureContents.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // \"impl<'scope, S> Send for ScopeFutureContents<'scope, S>where S: Sync\"\n //\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // \"impl<'scope, S> Sync for ScopeFutureContents<'scope, S>where S: Sync\"\n pub struct ScopeFutureContents<'scope, S>\n     where S: ScopeHandle<'scope>,"}, {"sha": "d3c2070d915d67b114961acd04d0e8a0d2fe76b6", "filename": "tests/rustdoc/issue-55321.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fissue-55321.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fissue-55321.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fissue-55321.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -1,18 +1,18 @@\n #![feature(negative_impls)]\n \n // @has issue_55321/struct.A.html\n-// @has - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // \"impl !Send for A\"\n-// @has - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // \"impl !Sync for A\"\n pub struct A();\n \n impl !Send for A {}\n impl !Sync for A {}\n \n // @has issue_55321/struct.B.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // \"impl<T> !Send for B<T>\"\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // \"impl<T> !Sync for B<T>\"\n pub struct B<T: ?Sized>(A, Box<T>);"}, {"sha": "c9a74335702d585a3e02bd0d8c0440dcf8574aeb", "filename": "tests/rustdoc/issue-56822.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fissue-56822.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fissue-56822.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fissue-56822.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -17,7 +17,7 @@ impl<'a, T> MyTrait for Inner<'a, T> {\n }\n \n // @has issue_56822/struct.Parser.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // \"impl<'a> Send for Parser<'a>\"\n pub struct Parser<'a> {\n     field: <Wrapper<Inner<'a, u8>> as MyTrait>::Output"}, {"sha": "e337e4a4f7ad164774044881098725991a45ca57", "filename": "tests/rustdoc/issue-60726.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fissue-60726.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fissue-60726.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fissue-60726.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -26,9 +26,9 @@ where\n {}\n \n // @has issue_60726/struct.IntoIter.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // \"impl<T> !Send for IntoIter<T>\"\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // \"impl<T> !Sync for IntoIter<T>\"\n pub struct IntoIter<T>{\n     hello:DynTrait<FooInterface<T>>,"}, {"sha": "5caea0ec992443b3fdbb469acbbd70ff084b2f11", "filename": "tests/rustdoc/issue-76501.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fissue-76501.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fissue-76501.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fissue-76501.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -8,7 +8,7 @@ pub const fn bloop() -> i32 {\n pub struct Struct {}\n \n impl Struct {\n-    // @has 'issue_76501/struct.Struct.html' '//*[@class=\"method has-srclink\"]' \\\n+    // @has 'issue_76501/struct.Struct.html' '//*[@class=\"method\"]' \\\n     // 'pub const fn blurp() -> i32'\n     /// A useless function that always returns 1.\n     pub const fn blurp() -> i32 {"}, {"sha": "d09141c320473933bef1d05874ca5faff4b0901e", "filename": "tests/rustdoc/issue-78673.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fissue-78673.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fissue-78673.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fissue-78673.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -7,17 +7,17 @@ pub trait AnAmazingTrait {}\n impl<T: Something> AnAmazingTrait for T {}\n \n // @has 'issue_78673/struct.MyStruct.html'\n-// @has  - '//*[@class=\"impl has-srclink\"]' 'AnAmazingTrait for MyStruct'\n-// @!has - '//*[@class=\"impl has-srclink\"]' 'AnAmazingTrait for T'\n+// @has  - '//*[@class=\"impl\"]' 'AnAmazingTrait for MyStruct'\n+// @!has - '//*[@class=\"impl\"]' 'AnAmazingTrait for T'\n pub struct MyStruct;\n \n impl AnAmazingTrait for MyStruct {}\n \n // generic structs may have _both_ specific and blanket impls that apply\n \n // @has 'issue_78673/struct.AnotherStruct.html'\n-// @has - '//*[@class=\"impl has-srclink\"]' 'AnAmazingTrait for AnotherStruct<()>'\n-// @has - '//*[@class=\"impl has-srclink\"]' 'AnAmazingTrait for T'\n+// @has - '//*[@class=\"impl\"]' 'AnAmazingTrait for AnotherStruct<()>'\n+// @has - '//*[@class=\"impl\"]' 'AnAmazingTrait for T'\n pub struct AnotherStruct<T>(T);\n \n impl<T: Something> Something for AnotherStruct<T> {}"}, {"sha": "431db51d95f7c3a1fb84db3381df8dee6e5e429b", "filename": "tests/rustdoc/mut-params.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fmut-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fmut-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fmut-params.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -5,7 +5,7 @@\n \n pub struct Foo;\n \n-// @count foo/struct.Foo.html '//*[@class=\"impl-items\"]//*[@class=\"method has-srclink\"]' 2\n+// @count foo/struct.Foo.html '//*[@class=\"impl-items\"]//*[@class=\"method\"]' 2\n // @!has - '//*[@class=\"impl-items\"]//*[@class=\"method\"]' 'mut'\n impl Foo {\n     pub fn foo(mut self) {}"}, {"sha": "51223af673732931e7557c79f98084a35b13803b", "filename": "tests/rustdoc/negative-impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fnegative-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fnegative-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fnegative-impl.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -5,10 +5,10 @@ pub struct Alpha;\n // @matches negative_impl/struct.Bravo.html '//pre' \"pub struct Bravo<B>\"\n pub struct Bravo<B>(B);\n \n-// @matches negative_impl/struct.Alpha.html '//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @matches negative_impl/struct.Alpha.html '//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // \"impl !Send for Alpha\"\n impl !Send for Alpha {}\n \n-// @matches negative_impl/struct.Bravo.html '//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \"\\\n+// @matches negative_impl/struct.Bravo.html '//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \"\\\n // impl<B> !Send for Bravo<B>\"\n impl<B> !Send for Bravo<B> {}"}, {"sha": "10efbefd2b168a6f9df2ad6ce74626a4e074ca47", "filename": "tests/rustdoc/primitive-reference.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fprimitive-reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fprimitive-reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fprimitive-reference.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -13,7 +13,7 @@\n // @has - '//section[@id=\"main-content\"]//div[@class=\"docblock\"]//p' 'this is a test!'\n \n // There should be only one implementation listed.\n-// @count - '//*[@class=\"impl has-srclink\"]' 1\n+// @count - '//*[@class=\"impl\"]' 1\n // @has - '//*[@id=\"impl-Foo%3C%26A%3E-for-%26B\"]/*[@class=\"code-header\"]' \\\n //        'impl<A, B> Foo<&A> for &B'\n #[doc(primitive = \"reference\")]"}, {"sha": "7115a01d079ff15b99d7befd2badf45028ffb970", "filename": "tests/rustdoc/pub-method.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fpub-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fpub-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fpub-method.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -10,8 +10,8 @@ pub fn bar() -> usize {\n }\n \n // @has foo/struct.Foo.html\n-// @has - '//*[@class=\"method has-srclink\"]' 'pub fn new()'\n-// @has - '//*[@class=\"method has-srclink\"]' 'fn not_pub()'\n+// @has - '//*[@class=\"method\"]' 'pub fn new()'\n+// @has - '//*[@class=\"method\"]' 'fn not_pub()'\n pub struct Foo(usize);\n \n impl Foo {"}, {"sha": "043ac2414883877a8690a1879f0f74151ae20ff6", "filename": "tests/rustdoc/synthetic_auto/basic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fsynthetic_auto%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fsynthetic_auto%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fsynthetic_auto%2Fbasic.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -1,8 +1,8 @@\n // @has basic/struct.Foo.html\n // @has - '//h3[@class=\"code-header\"]' 'impl<T> Send for Foo<T>where T: Send'\n // @has - '//h3[@class=\"code-header\"]' 'impl<T> Sync for Foo<T>where T: Sync'\n-// @count - '//*[@id=\"implementations-list\"]//*[@class=\"impl has-srclink\"]' 0\n-// @count - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]' 5\n+// @count - '//*[@id=\"implementations-list\"]//*[@class=\"impl\"]' 0\n+// @count - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]' 5\n pub struct Foo<T> {\n     field: T,\n }"}, {"sha": "4c39f0bf1e07f20b7a95401496eaed7df7ccf083", "filename": "tests/rustdoc/synthetic_auto/complex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fsynthetic_auto%2Fcomplex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fsynthetic_auto%2Fcomplex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fsynthetic_auto%2Fcomplex.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -20,7 +20,7 @@ mod foo {\n }\n \n // @has complex/struct.NotOuter.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // \"impl<'a, T, K: ?Sized> Send for Outer<'a, T, K>where K: for<'b> Fn((&'b bool, &'a u8)) \\\n // -> &'b i8, T: MyTrait<'a>, <T as MyTrait<'a>>::MyItem: Copy, 'a: 'static\"\n "}, {"sha": "71265b3078a06ba91fd3fd4220d6d58ecfa1c1a5", "filename": "tests/rustdoc/synthetic_auto/lifetimes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fsynthetic_auto%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fsynthetic_auto%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fsynthetic_auto%2Flifetimes.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -9,10 +9,10 @@ where\n {}\n \n // @has lifetimes/struct.Foo.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // \"impl<'c, K> Send for Foo<'c, K>where K: for<'b> Fn(&'b bool) -> &'c u8, 'c: 'static\"\n //\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // \"impl<'c, K> Sync for Foo<'c, K>where K: Sync\"\n pub struct Foo<'c, K: 'c> {\n     inner_field: Inner<'c, K>,"}, {"sha": "7fc8447df3efc7963a4e88ec38d17609913ad8e0", "filename": "tests/rustdoc/synthetic_auto/manual.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fsynthetic_auto%2Fmanual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fsynthetic_auto%2Fmanual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fsynthetic_auto%2Fmanual.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -1,12 +1,12 @@\n // @has manual/struct.Foo.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // 'impl<T> Sync for Foo<T>where T: Sync'\n //\n-// @has - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // 'impl<T> Send for Foo<T>'\n //\n-// @count - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl has-srclink\"]' 1\n-// @count - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]' 4\n+// @count - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl\"]' 1\n+// @count - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]' 4\n pub struct Foo<T> {\n     field: T,\n }"}, {"sha": "97da2d57424cebc94aba9b0b76e6ba42b6e523cf", "filename": "tests/rustdoc/synthetic_auto/negative.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fsynthetic_auto%2Fnegative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fsynthetic_auto%2Fnegative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fsynthetic_auto%2Fnegative.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -3,10 +3,10 @@ pub struct Inner<T: Copy> {\n }\n \n // @has negative/struct.Outer.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // \"impl<T> !Send for Outer<T>\"\n //\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // \"impl<T> !Sync for Outer<T>\"\n pub struct Outer<T: Copy> {\n     inner_field: Inner<T>,"}, {"sha": "e4aead71bf2e5a3905689d18c960abd3220bb11a", "filename": "tests/rustdoc/synthetic_auto/nested.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fsynthetic_auto%2Fnested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fsynthetic_auto%2Fnested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fsynthetic_auto%2Fnested.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -9,10 +9,10 @@ where\n }\n \n // @has nested/struct.Foo.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // 'impl<T> Send for Foo<T>where T: Copy'\n //\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // 'impl<T> Sync for Foo<T>where T: Sync'\n pub struct Foo<T> {\n     inner_field: Inner<T>,"}, {"sha": "ea57d7388b85f174c5dc54f5954ea5f40d9b4819", "filename": "tests/rustdoc/synthetic_auto/no-redundancy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fsynthetic_auto%2Fno-redundancy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fsynthetic_auto%2Fno-redundancy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fsynthetic_auto%2Fno-redundancy.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -9,7 +9,7 @@ where\n }\n \n // @has no_redundancy/struct.Outer.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // \"impl<T> Send for Outer<T>where T: Send + Copy\"\n pub struct Outer<T> {\n     inner_field: Inner<T>,"}, {"sha": "7c9412ae9624364a8573dfda8d2b9da52036e53e", "filename": "tests/rustdoc/synthetic_auto/project.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fsynthetic_auto%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fsynthetic_auto%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fsynthetic_auto%2Fproject.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -23,10 +23,10 @@ where\n }\n \n // @has project/struct.Foo.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // \"impl<'c, K> Send for Foo<'c, K>where K: MyTrait<MyItem = bool>, 'c: 'static\"\n //\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // \"impl<'c, K> Sync for Foo<'c, K>where K: MyTrait, <K as MyTrait>::MyItem: OtherTrait, \\\n // 'c: 'static,\"\n pub struct Foo<'c, K: 'c> {"}, {"sha": "145a2b7e00c0a9d64f60d136c14d3844c74c1722", "filename": "tests/rustdoc/synthetic_auto/self-referential.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fsynthetic_auto%2Fself-referential.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fsynthetic_auto%2Fself-referential.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fsynthetic_auto%2Fself-referential.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -23,7 +23,7 @@ impl<T> Pattern for Wrapper<T> {\n \n \n // @has self_referential/struct.WriteAndThen.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // \"impl<P1> Send for WriteAndThen<P1>where    <P1 as Pattern>::Value: Send\"\n pub struct WriteAndThen<P1>(pub P1::Value,pub <Constrain<P1, Wrapper<P1::Value>> as Pattern>::Value)\n     where P1: Pattern;"}, {"sha": "9dc6211ec20b60825c2e8c5ff895c448f5838c55", "filename": "tests/rustdoc/synthetic_auto/static-region.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fsynthetic_auto%2Fstatic-region.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fsynthetic_auto%2Fstatic-region.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fsynthetic_auto%2Fstatic-region.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -3,7 +3,7 @@ pub trait OwnedTrait<'a> {\n }\n \n // @has static_region/struct.Owned.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n // \"impl<T> Send for Owned<T>where <T as OwnedTrait<'static>>::Reader: Send\"\n pub struct Owned<T> where T: OwnedTrait<'static> {\n     marker: <T as OwnedTrait<'static>>::Reader,"}, {"sha": "63e2973c759b6b2b746c81363e16e9858e654f37", "filename": "tests/rustdoc/typedef.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Ftypedef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Ftypedef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Ftypedef.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -9,8 +9,8 @@ impl MyStruct {\n }\n \n // @has typedef/type.MyAlias.html\n-// @has - '//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' 'impl MyAlias'\n-// @has - '//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' 'impl MyTrait for MyAlias'\n+// @has - '//*[@class=\"impl\"]//h3[@class=\"code-header\"]' 'impl MyAlias'\n+// @has - '//*[@class=\"impl\"]//h3[@class=\"code-header\"]' 'impl MyTrait for MyAlias'\n // @hasraw - 'Alias docstring'\n // @has - '//*[@class=\"sidebar\"]//*[@class=\"location\"]' 'MyAlias'\n // @has - '//*[@class=\"sidebar\"]//a[@href=\"#implementations\"]' 'Methods'"}, {"sha": "644a0058244522a55be5bb50683b51130497927e", "filename": "tests/rustdoc/where.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fwhere.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e843c83328d4fa921aaaa3a86df7c47df6c9e3/tests%2Frustdoc%2Fwhere.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fwhere.rs?ref=74e843c83328d4fa921aaaa3a86df7c47df6c9e3", "patch": "@@ -13,7 +13,7 @@ pub fn charlie<C>() where C: MyTrait {}\n \n pub struct Delta<D>(D);\n \n-// @has foo/struct.Delta.html '//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has foo/struct.Delta.html '//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n //          \"impl<D> Delta<D>where D: MyTrait\"\n impl<D> Delta<D> where D: MyTrait {\n     pub fn delta() {}\n@@ -43,15 +43,15 @@ pub trait TraitWhere {\n     { todo!() }\n }\n \n-// @has foo/struct.Echo.html '//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has foo/struct.Echo.html '//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n //          \"impl<E> MyTrait for Echo<E>where E: MyTrait\"\n // @has foo/trait.MyTrait.html '//*[@id=\"implementors-list\"]//h3[@class=\"code-header\"]' \\\n //          \"impl<E> MyTrait for Echo<E>where E: MyTrait\"\n impl<E> MyTrait for Echo<E>where E: MyTrait {}\n \n pub enum Foxtrot<F> { Foxtrot1(F) }\n \n-// @has foo/enum.Foxtrot.html '//*[@class=\"impl has-srclink\"]//h3[@class=\"code-header\"]' \\\n+// @has foo/enum.Foxtrot.html '//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\\n //          \"impl<F> MyTrait for Foxtrot<F>where F: MyTrait\"\n // @has foo/trait.MyTrait.html '//*[@id=\"implementors-list\"]//h3[@class=\"code-header\"]' \\\n //          \"impl<F> MyTrait for Foxtrot<F>where F: MyTrait\""}]}