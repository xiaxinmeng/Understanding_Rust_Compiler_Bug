{"sha": "cd2effe0225c6174880716d949c6afe7cb251577", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkMmVmZmUwMjI1YzYxNzQ4ODA3MTZkOTQ5YzZhZmU3Y2IyNTE1Nzc=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-04-19T22:20:11Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-04-19T22:30:59Z"}, "message": "Annotate FIXMEs (comments only)", "tree": {"sha": "af19fa36a6da87039c7311be42fada2c7dbc9350", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af19fa36a6da87039c7311be42fada2c7dbc9350"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd2effe0225c6174880716d949c6afe7cb251577", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd2effe0225c6174880716d949c6afe7cb251577", "html_url": "https://github.com/rust-lang/rust/commit/cd2effe0225c6174880716d949c6afe7cb251577", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd2effe0225c6174880716d949c6afe7cb251577/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37ea010b0d9e8cbccbe040134708028e6bb05c48", "url": "https://api.github.com/repos/rust-lang/rust/commits/37ea010b0d9e8cbccbe040134708028e6bb05c48", "html_url": "https://github.com/rust-lang/rust/commit/37ea010b0d9e8cbccbe040134708028e6bb05c48"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "77423a993d45323deee988b08254872f457665be", "filename": "src/librustsyntax/attr.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd2effe0225c6174880716d949c6afe7cb251577/src%2Flibrustsyntax%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd2effe0225c6174880716d949c6afe7cb251577/src%2Flibrustsyntax%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Fattr.rs?ref=cd2effe0225c6174880716d949c6afe7cb251577", "patch": "@@ -192,6 +192,7 @@ fn eq(a: @ast::meta_item, b: @ast::meta_item) -> bool {\n           }\n           ast::meta_list(na, la) {\n \n+            // [Fixme-sorting]\n             // FIXME (#607): Needs implementing\n             // This involves probably sorting the list by name and\n             // meta_item variant\n@@ -257,6 +258,7 @@ fn last_meta_item_list_by_name(\n /* Higher-level applications */\n \n // FIXME: This needs to sort by meta_item variant in addition to the item name\n+// (See [Fixme-sorting])\n fn sort_meta_items(items: [@ast::meta_item]) -> [@ast::meta_item] {\n     fn lteq(&&ma: @ast::meta_item, &&mb: @ast::meta_item) -> bool {\n         fn key(m: @ast::meta_item) -> ast::ident {"}, {"sha": "616c816a66dca4c4aa398e96aa50fc7953bbaae4", "filename": "src/librustsyntax/ext/env.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd2effe0225c6174880716d949c6afe7cb251577/src%2Flibrustsyntax%2Fext%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd2effe0225c6174880716d949c6afe7cb251577/src%2Flibrustsyntax%2Fext%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Fext%2Fenv.rs?ref=cd2effe0225c6174880716d949c6afe7cb251577", "patch": "@@ -21,7 +21,7 @@ fn expand_syntax_ext(cx: ext_ctxt, sp: codemap::span, arg: ast::mac_arg,\n         cx.span_fatal(sp, \"malformed #env call\");\n     }\n     // FIXME: if this was more thorough it would manufacture an\n-    // option<str> rather than just an maybe-empty string.\n+    // option<str> rather than just an maybe-empty string. (Issue #2248)\n \n     let var = expr_to_str(cx, args[0], \"#env requires a string\");\n     alt os::getenv(var) {"}, {"sha": "68753f9e4b4a26e85d090e5b6445a5db36a879d1", "filename": "src/librustsyntax/ext/expand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd2effe0225c6174880716d949c6afe7cb251577/src%2Flibrustsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd2effe0225c6174880716d949c6afe7cb251577/src%2Flibrustsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Fext%2Fexpand.rs?ref=cd2effe0225c6174880716d949c6afe7cb251577", "patch": "@@ -98,7 +98,7 @@ fn new_span(cx: ext_ctxt, sp: span) -> span {\n // FIXME: this is a terrible kludge to inject some macros into the default\n // compilation environment. When the macro-definition system is substantially\n // more mature, these should move from here, into a compiled part of libcore\n-// at very least.\n+// at very least. (Issue #2247)\n \n fn core_macros() -> str {\n     ret"}, {"sha": "2404a6de33820c5ebbebec19dace97915058c942", "filename": "src/librustsyntax/ext/fmt.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cd2effe0225c6174880716d949c6afe7cb251577/src%2Flibrustsyntax%2Fext%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd2effe0225c6174880716d949c6afe7cb251577/src%2Flibrustsyntax%2Fext%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Fext%2Ffmt.rs?ref=cd2effe0225c6174880716d949c6afe7cb251577", "patch": "@@ -42,6 +42,7 @@ fn expand_syntax_ext(cx: ext_ctxt, sp: span, arg: ast::mac_arg,\n // be factored out in common with other code that builds expressions.\n // FIXME: Cleanup the naming of these functions\n // NOTE: Moved many of the common ones to build.rs --kevina\n+// See Issue #2249\n fn pieces_to_expr(cx: ext_ctxt, sp: span, pieces: [piece], args: [@ast::expr])\n    -> @ast::expr {\n     fn make_path_vec(_cx: ext_ctxt, ident: ast::ident) -> [ast::ident] {\n@@ -125,7 +126,7 @@ fn pieces_to_expr(cx: ext_ctxt, sp: span, pieces: [piece], args: [@ast::expr])\n     }\n     fn make_new_conv(cx: ext_ctxt, sp: span, cnv: conv, arg: @ast::expr) ->\n        @ast::expr {\n-        // FIXME: Extract all this validation into extfmt::ct\n+        // FIXME: Move validation code into core::extfmt (Issue #2249)\n \n         fn is_signed_type(cnv: conv) -> bool {\n             alt cnv.ty {"}, {"sha": "940270148973a93126293cdf29e704c7cae2333a", "filename": "src/librustsyntax/ext/simplext.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cd2effe0225c6174880716d949c6afe7cb251577/src%2Flibrustsyntax%2Fext%2Fsimplext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd2effe0225c6174880716d949c6afe7cb251577/src%2Flibrustsyntax%2Fext%2Fsimplext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Fext%2Fsimplext.rs?ref=cd2effe0225c6174880716d949c6afe7cb251577", "patch": "@@ -456,7 +456,8 @@ fn p_t_s_rec(cx: ext_ctxt, m: matchable, s: selector, b: binders) {\n               }\n             }\n           }\n-          /* FIXME: handle embedded types and blocks, at least */\n+          /* FIXME: handle embedded types and blocks, at least\n+             (Issue #2251) */\n           expr_mac(mac) {\n             p_t_s_r_mac(cx, mac, s, b);\n           }\n@@ -715,7 +716,7 @@ fn add_new_extension(cx: ext_ctxt, sp: span, arg: ast::mac_arg,\n                            body: elts[1u]}];\n \n                     // FIXME: check duplicates (or just simplify\n-                    // the macro arg situation)\n+                    // the macro arg situation) (Issue #2251)\n                   }\n                   _ {\n                       cx.span_bug(mac.span, \"undocumented invariant in \\"}]}