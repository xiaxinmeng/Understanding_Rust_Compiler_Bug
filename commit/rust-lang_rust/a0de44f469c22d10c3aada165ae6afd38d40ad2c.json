{"sha": "a0de44f469c22d10c3aada165ae6afd38d40ad2c", "node_id": "C_kwDOAAsO6NoAKGEwZGU0NGY0NjljMjJkMTBjM2FhZGExNjVhZTZhZmQzOGQ0MGFkMmM", "commit": {"author": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-03-23T23:23:26Z"}, "committer": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-04-09T16:40:35Z"}, "message": "Make it possible to run `cargo test` for bootstrap\n\nNote that this only runs bootstrap's self-tests, not compiler or library tests.", "tree": {"sha": "8b2f59ec27c1a9da5d885fec51d28208da0b230b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b2f59ec27c1a9da5d885fec51d28208da0b230b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0de44f469c22d10c3aada165ae6afd38d40ad2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0de44f469c22d10c3aada165ae6afd38d40ad2c", "html_url": "https://github.com/rust-lang/rust/commit/a0de44f469c22d10c3aada165ae6afd38d40ad2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0de44f469c22d10c3aada165ae6afd38d40ad2c/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f4e0677190b82e61dc507e3e72caf89da8e5e28", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f4e0677190b82e61dc507e3e72caf89da8e5e28", "html_url": "https://github.com/rust-lang/rust/commit/5f4e0677190b82e61dc507e3e72caf89da8e5e28"}], "stats": {"total": 13, "additions": 3, "deletions": 10}, "files": [{"sha": "a59f72ed968b4bac5f5f486efb0b378cc40c934f", "filename": "src/bootstrap/builder/tests.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a0de44f469c22d10c3aada165ae6afd38d40ad2c/src%2Fbootstrap%2Fbuilder%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0de44f469c22d10c3aada165ae6afd38d40ad2c/src%2Fbootstrap%2Fbuilder%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder%2Ftests.rs?ref=a0de44f469c22d10c3aada165ae6afd38d40ad2c", "patch": "@@ -8,12 +8,9 @@ fn configure(cmd: &str, host: &[&str], target: &[&str]) -> Config {\n     config.save_toolstates = None;\n     config.dry_run = true;\n     config.ninja_in_file = false;\n-    config.out = PathBuf::from(env::var_os(\"BOOTSTRAP_OUTPUT_DIRECTORY\").unwrap());\n-    config.initial_rustc = PathBuf::from(env::var_os(\"RUSTC\").unwrap());\n-    config.initial_cargo = PathBuf::from(env::var_os(\"BOOTSTRAP_INITIAL_CARGO\").unwrap());\n     // try to avoid spurious failures in dist where we create/delete each others file\n-    let dir = config\n-        .out\n+    // HACK: rather than pull in `tempdir`, use the one that cargo has conveniently created for us\n+    let dir = Path::new(env!(\"OUT_DIR\"))\n         .join(\"tmp-rustbuild-tests\")\n         .join(&thread::current().name().unwrap_or(\"unknown\").replace(\":\", \"-\"));\n     t!(fs::create_dir_all(&dir));"}, {"sha": "d3df5f7710975f740b9b98683813c0385b741ba9", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a0de44f469c22d10c3aada165ae6afd38d40ad2c/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0de44f469c22d10c3aada165ae6afd38d40ad2c/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=a0de44f469c22d10c3aada165ae6afd38d40ad2c", "patch": "@@ -442,7 +442,7 @@ impl Build {\n                 .map(PathBuf::from)\n                 .unwrap_or_else(|_| src.join(\"target\"));\n             let bootstrap_out = workspace_target_dir.join(\"debug\");\n-            if !bootstrap_out.join(\"rustc\").exists() {\n+            if !bootstrap_out.join(\"rustc\").exists() && !cfg!(test) {\n                 // this restriction can be lifted whenever https://github.com/rust-lang/rfcs/pull/3028 is implemented\n                 panic!(\"run `cargo build --bins` before `cargo run`\")\n             }"}, {"sha": "10f4c4b03c07af2acf790ccbfd77d060063bb2f2", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a0de44f469c22d10c3aada165ae6afd38d40ad2c/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0de44f469c22d10c3aada165ae6afd38d40ad2c/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=a0de44f469c22d10c3aada165ae6afd38d40ad2c", "patch": "@@ -2346,10 +2346,6 @@ impl Step for Bootstrap {\n             .current_dir(builder.src.join(\"src/bootstrap\"))\n             .env(\"RUSTFLAGS\", \"-Cdebuginfo=2\")\n             .env(\"CARGO_TARGET_DIR\", builder.out.join(\"bootstrap\"))\n-            // HACK: bootstrap's tests want to know the output directory, but there's no way to set\n-            // it except through config.toml. Set it through an env variable instead.\n-            .env(\"BOOTSTRAP_OUTPUT_DIRECTORY\", &builder.config.out)\n-            .env(\"BOOTSTRAP_INITIAL_CARGO\", &builder.config.initial_cargo)\n             .env(\"RUSTC_BOOTSTRAP\", \"1\")\n             .env(\"RUSTC\", &builder.initial_rustc);\n         if let Some(flags) = option_env!(\"RUSTFLAGS\") {"}]}