{"sha": "2ab6cefccfe3c5f2c97bf8bcab080a26089257e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhYjZjZWZjY2ZlM2M1ZjJjOTdiZjhiY2FiMDgwYTI2MDg5MjU3ZTI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-01-20T10:45:38Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-01-20T10:47:51Z"}, "message": "Do not suggest angle brackets when there are no type arguments", "tree": {"sha": "cf4eaabae1ba2aabc31cd66bed822dbde7de9458", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf4eaabae1ba2aabc31cd66bed822dbde7de9458"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2", "html_url": "https://github.com/rust-lang/rust/commit/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d37a6d83e1626db51041b6337328cde603f1bc19", "url": "https://api.github.com/repos/rust-lang/rust/commits/d37a6d83e1626db51041b6337328cde603f1bc19", "html_url": "https://github.com/rust-lang/rust/commit/d37a6d83e1626db51041b6337328cde603f1bc19"}], "stats": {"total": 93, "additions": 45, "deletions": 48}, "files": [{"sha": "f7af135bc76052edd657418ec8ad44d9f23370f8", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=2ab6cefccfe3c5f2c97bf8bcab080a26089257e2", "patch": "@@ -1807,7 +1807,7 @@ impl<'a> LoweringContext<'a> {\n         explicit_owner: Option<NodeId>,\n     ) -> hir::PathSegment {\n         let (mut generic_args, infer_types) = if let Some(ref generic_args) = segment.args {\n-            let msg = \"parenthesized parameters may only be used with a trait\";\n+            let msg = \"parenthesized type parameters may only be used with a `Fn` trait\";\n             match **generic_args {\n                 GenericArgs::AngleBracketed(ref data) => {\n                     self.lower_angle_bracketed_parameter_data(data, param_mode, itctx)\n@@ -1825,14 +1825,17 @@ impl<'a> LoweringContext<'a> {\n                     }\n                     ParenthesizedGenericArgs::Err => {\n                         let mut err = struct_span_err!(self.sess, data.span, E0214, \"{}\", msg);\n-                        err.span_label(data.span, \"only traits may use parentheses\");\n+                        err.span_label(data.span, \"only `Fn` traits may use parentheses\");\n                         if let Ok(snippet) = self.sess.source_map().span_to_snippet(data.span) {\n-                            err.span_suggestion_with_applicability(\n-                                data.span,\n-                                \"use angle brackets instead\",\n-                                format!(\"<{}>\", &snippet[1..snippet.len() - 1]),\n-                                Applicability::MaybeIncorrect,\n-                            );\n+                            // Do not suggest going from `Trait()` to `Trait<>`\n+                            if data.inputs.len() > 0 {\n+                                err.span_suggestion_with_applicability(\n+                                    data.span,\n+                                    \"use angle brackets instead\",\n+                                    format!(\"<{}>\", &snippet[1..snippet.len() - 1]),\n+                                    Applicability::MaybeIncorrect,\n+                                );\n+                            }\n                         };\n                         err.emit();\n                         (self.lower_angle_bracketed_parameter_data("}, {"sha": "a10f2c00578c63d41af185fa0f96868b8f3d104f", "filename": "src/test/ui/error-codes/E0214.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Ferror-codes%2FE0214.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Ferror-codes%2FE0214.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0214.stderr?ref=2ab6cefccfe3c5f2c97bf8bcab080a26089257e2", "patch": "@@ -1,10 +1,10 @@\n-error[E0214]: parenthesized parameters may only be used with a trait\n+error[E0214]: parenthesized type parameters may only be used with a `Fn` trait\n   --> $DIR/E0214.rs:2:15\n    |\n LL |     let v: Vec(&str) = vec![\"foo\"];\n    |               ^^^^^^\n    |               |\n-   |               only traits may use parentheses\n+   |               only `Fn` traits may use parentheses\n    |               help: use angle brackets instead: `<&str>`\n \n error: aborting due to previous error"}, {"sha": "1c640af8d02b9311b8dae6a75025853a8fda3194", "filename": "src/test/ui/issues/issue-23589.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Fissues%2Fissue-23589.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Fissues%2Fissue-23589.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-23589.rs?ref=2ab6cefccfe3c5f2c97bf8bcab080a26089257e2", "patch": "@@ -1,5 +1,5 @@\n fn main() {\n     let v: Vec(&str) = vec!['1', '2'];\n-    //~^ ERROR parenthesized parameters may only be used with a trait\n+    //~^ ERROR parenthesized type parameters may only be used with a `Fn` trait\n     //~| ERROR mismatched types\n }"}, {"sha": "bc2007ba39cc632965b4128485a5f194ecbac66f", "filename": "src/test/ui/issues/issue-23589.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Fissues%2Fissue-23589.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Fissues%2Fissue-23589.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-23589.stderr?ref=2ab6cefccfe3c5f2c97bf8bcab080a26089257e2", "patch": "@@ -1,10 +1,10 @@\n-error[E0214]: parenthesized parameters may only be used with a trait\n+error[E0214]: parenthesized type parameters may only be used with a `Fn` trait\n   --> $DIR/issue-23589.rs:2:15\n    |\n LL |     let v: Vec(&str) = vec!['1', '2'];\n    |               ^^^^^^\n    |               |\n-   |               only traits may use parentheses\n+   |               only `Fn` traits may use parentheses\n    |               help: use angle brackets instead: `<&str>`\n \n error[E0308]: mismatched types"}, {"sha": "2234f68f246292a00449eb0ec2f11f6c5d7a389e", "filename": "src/test/ui/issues/issue-32995-2.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Fissues%2Fissue-32995-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Fissues%2Fissue-32995-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32995-2.rs?ref=2ab6cefccfe3c5f2c97bf8bcab080a26089257e2", "patch": "@@ -2,17 +2,17 @@\n \n fn main() {\n     { fn f<X: ::std::marker()::Send>() {} }\n-    //~^ ERROR parenthesized parameters may only be used with a trait\n+    //~^ ERROR parenthesized type parameters may only be used with a `Fn` trait\n     //~| WARN previously accepted\n \n     { fn f() -> impl ::std::marker()::Send { } }\n-    //~^ ERROR parenthesized parameters may only be used with a trait\n+    //~^ ERROR parenthesized type parameters may only be used with a `Fn` trait\n     //~| WARN previously accepted\n }\n \n #[derive(Clone)]\n struct X;\n \n impl ::std::marker()::Copy for X {}\n-//~^ ERROR parenthesized parameters may only be used with a trait\n+//~^ ERROR parenthesized type parameters may only be used with a `Fn` trait\n //~| WARN previously accepted"}, {"sha": "104b76cba2df933b107a96454adea65036331dd0", "filename": "src/test/ui/issues/issue-32995-2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Fissues%2Fissue-32995-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Fissues%2Fissue-32995-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32995-2.stderr?ref=2ab6cefccfe3c5f2c97bf8bcab080a26089257e2", "patch": "@@ -1,4 +1,4 @@\n-error: parenthesized parameters may only be used with a trait\n+error: parenthesized type parameters may only be used with a `Fn` trait\n   --> $DIR/issue-32995-2.rs:4:28\n    |\n LL |     { fn f<X: ::std::marker()::Send>() {} }\n@@ -8,7 +8,7 @@ LL |     { fn f<X: ::std::marker()::Send>() {} }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #42238 <https://github.com/rust-lang/rust/issues/42238>\n \n-error: parenthesized parameters may only be used with a trait\n+error: parenthesized type parameters may only be used with a `Fn` trait\n   --> $DIR/issue-32995-2.rs:8:35\n    |\n LL |     { fn f() -> impl ::std::marker()::Send { } }\n@@ -17,7 +17,7 @@ LL |     { fn f() -> impl ::std::marker()::Send { } }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #42238 <https://github.com/rust-lang/rust/issues/42238>\n \n-error: parenthesized parameters may only be used with a trait\n+error: parenthesized type parameters may only be used with a `Fn` trait\n   --> $DIR/issue-32995-2.rs:16:19\n    |\n LL | impl ::std::marker()::Copy for X {}"}, {"sha": "c32fb63f1e5845a9c0ca18815f3516668ca58fe1", "filename": "src/test/ui/issues/issue-32995.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Fissues%2Fissue-32995.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Fissues%2Fissue-32995.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32995.rs?ref=2ab6cefccfe3c5f2c97bf8bcab080a26089257e2", "patch": "@@ -2,32 +2,32 @@\n \n fn main() {\n     let x: usize() = 1;\n-    //~^ ERROR parenthesized parameters may only be used with a trait\n+    //~^ ERROR parenthesized type parameters may only be used with a `Fn` trait\n     //~| WARN previously accepted\n \n     let b: ::std::boxed()::Box<_> = Box::new(1);\n-    //~^ ERROR parenthesized parameters may only be used with a trait\n+    //~^ ERROR parenthesized type parameters may only be used with a `Fn` trait\n     //~| WARN previously accepted\n \n     let p = ::std::str::()::from_utf8(b\"foo\").unwrap();\n-    //~^ ERROR parenthesized parameters may only be used with a trait\n+    //~^ ERROR parenthesized type parameters may only be used with a `Fn` trait\n     //~| WARN previously accepted\n \n     let p = ::std::str::from_utf8::()(b\"foo\").unwrap();\n-    //~^ ERROR parenthesized parameters may only be used with a trait\n+    //~^ ERROR parenthesized type parameters may only be used with a `Fn` trait\n     //~| WARN previously accepted\n \n     let o : Box<::std::marker()::Send> = Box::new(1);\n-    //~^ ERROR parenthesized parameters may only be used with a trait\n+    //~^ ERROR parenthesized type parameters may only be used with a `Fn` trait\n     //~| WARN previously accepted\n \n     let o : Box<Send + ::std::marker()::Sync> = Box::new(1);\n-    //~^ ERROR parenthesized parameters may only be used with a trait\n+    //~^ ERROR parenthesized type parameters may only be used with a `Fn` trait\n     //~| WARN previously accepted\n }\n \n fn foo<X:Default>() {\n     let d : X() = Default::default();\n-    //~^ ERROR parenthesized parameters may only be used with a trait\n+    //~^ ERROR parenthesized type parameters may only be used with a `Fn` trait\n     //~| WARN previously accepted\n }"}, {"sha": "97b4b7fa76ca81354b7e6c6b89ce02923501a68a", "filename": "src/test/ui/issues/issue-32995.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Fissues%2Fissue-32995.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Fissues%2Fissue-32995.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32995.stderr?ref=2ab6cefccfe3c5f2c97bf8bcab080a26089257e2", "patch": "@@ -1,4 +1,4 @@\n-error: parenthesized parameters may only be used with a trait\n+error: parenthesized type parameters may only be used with a `Fn` trait\n   --> $DIR/issue-32995.rs:4:17\n    |\n LL |     let x: usize() = 1;\n@@ -8,7 +8,7 @@ LL |     let x: usize() = 1;\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #42238 <https://github.com/rust-lang/rust/issues/42238>\n \n-error: parenthesized parameters may only be used with a trait\n+error: parenthesized type parameters may only be used with a `Fn` trait\n   --> $DIR/issue-32995.rs:8:24\n    |\n LL |     let b: ::std::boxed()::Box<_> = Box::new(1);\n@@ -17,7 +17,7 @@ LL |     let b: ::std::boxed()::Box<_> = Box::new(1);\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #42238 <https://github.com/rust-lang/rust/issues/42238>\n \n-error: parenthesized parameters may only be used with a trait\n+error: parenthesized type parameters may only be used with a `Fn` trait\n   --> $DIR/issue-32995.rs:12:25\n    |\n LL |     let p = ::std::str::()::from_utf8(b\"foo\").unwrap();\n@@ -26,7 +26,7 @@ LL |     let p = ::std::str::()::from_utf8(b\"foo\").unwrap();\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #42238 <https://github.com/rust-lang/rust/issues/42238>\n \n-error: parenthesized parameters may only be used with a trait\n+error: parenthesized type parameters may only be used with a `Fn` trait\n   --> $DIR/issue-32995.rs:16:36\n    |\n LL |     let p = ::std::str::from_utf8::()(b\"foo\").unwrap();\n@@ -35,7 +35,7 @@ LL |     let p = ::std::str::from_utf8::()(b\"foo\").unwrap();\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #42238 <https://github.com/rust-lang/rust/issues/42238>\n \n-error: parenthesized parameters may only be used with a trait\n+error: parenthesized type parameters may only be used with a `Fn` trait\n   --> $DIR/issue-32995.rs:20:30\n    |\n LL |     let o : Box<::std::marker()::Send> = Box::new(1);\n@@ -44,7 +44,7 @@ LL |     let o : Box<::std::marker()::Send> = Box::new(1);\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #42238 <https://github.com/rust-lang/rust/issues/42238>\n \n-error: parenthesized parameters may only be used with a trait\n+error: parenthesized type parameters may only be used with a `Fn` trait\n   --> $DIR/issue-32995.rs:24:37\n    |\n LL |     let o : Box<Send + ::std::marker()::Sync> = Box::new(1);\n@@ -53,7 +53,7 @@ LL |     let o : Box<Send + ::std::marker()::Sync> = Box::new(1);\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #42238 <https://github.com/rust-lang/rust/issues/42238>\n \n-error: parenthesized parameters may only be used with a trait\n+error: parenthesized type parameters may only be used with a `Fn` trait\n   --> $DIR/issue-32995.rs:30:14\n    |\n LL |     let d : X() = Default::default();"}, {"sha": "c96a6fa8b6c91b2942840cc765e3d0e3635c6132", "filename": "src/test/ui/unboxed-closures/unboxed-closure-sugar-used-on-struct-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct-1.rs?ref=2ab6cefccfe3c5f2c97bf8bcab080a26089257e2", "patch": "@@ -6,7 +6,7 @@ struct Bar<A> {\n \n fn bar() {\n     let x: Box<Bar()> = panic!();\n-    //~^ ERROR parenthesized parameters may only be used with a trait\n+    //~^ ERROR parenthesized type parameters may only be used with a `Fn` trait\n     //~| ERROR wrong number of type arguments: expected 1, found 0\n }\n "}, {"sha": "fa52e66fb03495495e075d746e03fbf6f9c6ea4f", "filename": "src/test/ui/unboxed-closures/unboxed-closure-sugar-used-on-struct-1.stderr", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct-1.stderr?ref=2ab6cefccfe3c5f2c97bf8bcab080a26089257e2", "patch": "@@ -1,11 +1,8 @@\n-error[E0214]: parenthesized parameters may only be used with a trait\n+error[E0214]: parenthesized type parameters may only be used with a `Fn` trait\n   --> $DIR/unboxed-closure-sugar-used-on-struct-1.rs:8:19\n    |\n LL |     let x: Box<Bar()> = panic!();\n-   |                   ^^\n-   |                   |\n-   |                   only traits may use parentheses\n-   |                   help: use angle brackets instead: `<>`\n+   |                   ^^ only `Fn` traits may use parentheses\n \n error[E0107]: wrong number of type arguments: expected 1, found 0\n   --> $DIR/unboxed-closure-sugar-used-on-struct-1.rs:8:16"}, {"sha": "79ced1ecfb1a04734b4825a2afa6f79356cf76d5", "filename": "src/test/ui/unboxed-closures/unboxed-closure-sugar-used-on-struct-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct-3.rs?ref=2ab6cefccfe3c5f2c97bf8bcab080a26089257e2", "patch": "@@ -12,7 +12,7 @@ fn bar() {\n     let b = Bar::<isize, usize>::new(); // OK\n \n     let b = Bar::(isize, usize)::new(); // OK too (for the parser)\n-    //~^ ERROR parenthesized parameters may only be used with a trait\n+    //~^ ERROR parenthesized type parameters may only be used with a `Fn` trait\n }\n \n fn main() {}"}, {"sha": "7d05ca55ffdb0bec1d39d2a0a88ead18b691dc2a", "filename": "src/test/ui/unboxed-closures/unboxed-closure-sugar-used-on-struct-3.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct-3.stderr?ref=2ab6cefccfe3c5f2c97bf8bcab080a26089257e2", "patch": "@@ -1,10 +1,10 @@\n-error[E0214]: parenthesized parameters may only be used with a trait\n+error[E0214]: parenthesized type parameters may only be used with a `Fn` trait\n   --> $DIR/unboxed-closure-sugar-used-on-struct-3.rs:14:18\n    |\n LL |     let b = Bar::(isize, usize)::new(); // OK too (for the parser)\n    |                  ^^^^^^^^^^^^^^\n    |                  |\n-   |                  only traits may use parentheses\n+   |                  only `Fn` traits may use parentheses\n    |                  help: use angle brackets instead: `<isize, usize>`\n \n error: aborting due to previous error"}, {"sha": "1af7f55674c6aa9c388533563b60ddac19084443", "filename": "src/test/ui/unboxed-closures/unboxed-closure-sugar-used-on-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct.rs?ref=2ab6cefccfe3c5f2c97bf8bcab080a26089257e2", "patch": "@@ -5,7 +5,7 @@ struct Bar<A> {\n }\n \n fn foo(b: Box<Bar()>) {\n-    //~^ ERROR parenthesized parameters may only be used with a trait\n+    //~^ ERROR parenthesized type parameters may only be used with a `Fn` trait\n     //~| ERROR wrong number of type arguments: expected 1, found 0\n }\n "}, {"sha": "b34237937ee1cb0f28dbacebac9274770aa585d4", "filename": "src/test/ui/unboxed-closures/unboxed-closure-sugar-used-on-struct.stderr", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ab6cefccfe3c5f2c97bf8bcab080a26089257e2/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct.stderr?ref=2ab6cefccfe3c5f2c97bf8bcab080a26089257e2", "patch": "@@ -1,11 +1,8 @@\n-error[E0214]: parenthesized parameters may only be used with a trait\n+error[E0214]: parenthesized type parameters may only be used with a `Fn` trait\n   --> $DIR/unboxed-closure-sugar-used-on-struct.rs:7:18\n    |\n LL | fn foo(b: Box<Bar()>) {\n-   |                  ^^\n-   |                  |\n-   |                  only traits may use parentheses\n-   |                  help: use angle brackets instead: `<>`\n+   |                  ^^ only `Fn` traits may use parentheses\n \n error[E0107]: wrong number of type arguments: expected 1, found 0\n   --> $DIR/unboxed-closure-sugar-used-on-struct.rs:7:15"}]}