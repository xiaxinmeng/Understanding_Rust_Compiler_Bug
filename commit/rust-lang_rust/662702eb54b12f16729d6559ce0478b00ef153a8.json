{"sha": "662702eb54b12f16729d6559ce0478b00ef153a8", "node_id": "C_kwDOAAsO6NoAKDY2MjcwMmViNTRiMTJmMTY3MjlkNjU1OWNlMDQ3OGIwMGVmMTUzYTg", "commit": {"author": {"name": "alexey semenyuk", "email": "alexsemenyuk88@gmail.com", "date": "2022-08-06T23:53:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-06T23:53:03Z"}, "message": "Fix typos (#5486)\n\n* Fix typos\r\n\r\n* Fix typos", "tree": {"sha": "b135dcbae0a1b0d5d460d5eea0f15e3cef3e3df6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b135dcbae0a1b0d5d460d5eea0f15e3cef3e3df6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/662702eb54b12f16729d6559ce0478b00ef153a8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi7v7fCRBK7hj4Ov3rIwAAZvgIAJxhSIR3b26VtdpgPs9yJX5W\nBOzrkNAe8uOWX4lMwGq+nh8YRyeWL4i39K90PMUwiSXF75EIh3uAsI+skqE584oH\nmSSjHsNoEgZ6GAme/oFFMmBOzVeWCwsdUAlAnhcd66cIGO6WR6mDBombYizqNEnu\nNVhYewa/yanwD8oTP0d74J5ON2UZDbUF1n2kzWsOCh/qVv8xm7KtNWleB7pAfvHW\nWmZ+dzkPkom1G8DD2bTj3dHd/bgeE+pc62zbX6fbtqhidNOISORadkG/zDlE3NWq\nl0OTGGYoEsFbJswS/fg9K6Z47QCe9uYz5qs6ghpkzS36Z7yrusPm55NDsF48duQ=\n=ULzW\n-----END PGP SIGNATURE-----\n", "payload": "tree b135dcbae0a1b0d5d460d5eea0f15e3cef3e3df6\nparent 23ef4b7ac476714886582865b39d396d615a3901\nauthor alexey semenyuk <alexsemenyuk88@gmail.com> 1659829983 +0300\ncommitter GitHub <noreply@github.com> 1659829983 -0500\n\nFix typos (#5486)\n\n* Fix typos\r\n\r\n* Fix typos"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/662702eb54b12f16729d6559ce0478b00ef153a8", "html_url": "https://github.com/rust-lang/rust/commit/662702eb54b12f16729d6559ce0478b00ef153a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/662702eb54b12f16729d6559ce0478b00ef153a8/comments", "author": {"login": "alex-semenyuk", "id": 5480441, "node_id": "MDQ6VXNlcjU0ODA0NDE=", "avatar_url": "https://avatars.githubusercontent.com/u/5480441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex-semenyuk", "html_url": "https://github.com/alex-semenyuk", "followers_url": "https://api.github.com/users/alex-semenyuk/followers", "following_url": "https://api.github.com/users/alex-semenyuk/following{/other_user}", "gists_url": "https://api.github.com/users/alex-semenyuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex-semenyuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex-semenyuk/subscriptions", "organizations_url": "https://api.github.com/users/alex-semenyuk/orgs", "repos_url": "https://api.github.com/users/alex-semenyuk/repos", "events_url": "https://api.github.com/users/alex-semenyuk/events{/privacy}", "received_events_url": "https://api.github.com/users/alex-semenyuk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23ef4b7ac476714886582865b39d396d615a3901", "url": "https://api.github.com/repos/rust-lang/rust/commits/23ef4b7ac476714886582865b39d396d615a3901", "html_url": "https://github.com/rust-lang/rust/commit/23ef4b7ac476714886582865b39d396d615a3901"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "e9ce930dabc680f9874bcf11f2784b42f64f55d3", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/662702eb54b12f16729d6559ce0478b00ef153a8/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/662702eb54b12f16729d6559ce0478b00ef153a8/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=662702eb54b12f16729d6559ce0478b00ef153a8", "patch": "@@ -840,7 +840,7 @@ from formatting an attribute #3665\n - Fix formatting of raw string literals #2983\n - Handle chain with try operators with spaces #2986\n - Use correct shape in Visual tuple rewriting #2987\n-- Impove formatting of arguments with `visual_style = \"Visual\"` option #2988\n+- Improve formatting of arguments with `visual_style = \"Visual\"` option #2988\n - Change `print_diff` to output the correct line number 992b179\n - Propagate errors about failing to rewrite a macro 6f318e3\n - Handle formatting of long function signature #3010"}, {"sha": "334414702b15945fd5c2840ceb533023295443ca", "filename": "Processes.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/662702eb54b12f16729d6559ce0478b00ef153a8/Processes.md", "raw_url": "https://github.com/rust-lang/rust/raw/662702eb54b12f16729d6559ce0478b00ef153a8/Processes.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Processes.md?ref=662702eb54b12f16729d6559ce0478b00ef153a8", "patch": "@@ -2,7 +2,7 @@ This document outlines processes regarding management of rustfmt.\n \n # Stabilising an Option\n \n-In this Section, we describe how to stabilise an option of the rustfmt's configration.\n+In this Section, we describe how to stabilise an option of the rustfmt's configuration.\n \n ## Conditions\n "}, {"sha": "be64559e8774593abd5ab9c93a6b8f5c68a39f13", "filename": "src/bin/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/662702eb54b12f16729d6559ce0478b00ef153a8/src%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/662702eb54b12f16729d6559ce0478b00ef153a8/src%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmain.rs?ref=662702eb54b12f16729d6559ce0478b00ef153a8", "patch": "@@ -136,7 +136,7 @@ fn make_opts() -> Options {\n         \"l\",\n         \"files-with-diff\",\n         \"Prints the names of mismatched files that were formatted. Prints the names of \\\n-         files that would be formated when used with `--check` mode. \",\n+         files that would be formatted when used with `--check` mode. \",\n     );\n     opts.optmulti(\n         \"\","}, {"sha": "4ec7e924bf621ee86338f9d34303d4c5bf1f695b", "filename": "src/config/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/662702eb54b12f16729d6559ce0478b00ef153a8/src%2Fconfig%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/662702eb54b12f16729d6559ce0478b00ef153a8/src%2Fconfig%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Fmod.rs?ref=662702eb54b12f16729d6559ce0478b00ef153a8", "patch": "@@ -182,7 +182,7 @@ create_config! {\n     make_backup: bool, false, false, \"Backup changed files\";\n     print_misformatted_file_names: bool, false, true,\n         \"Prints the names of mismatched files that were formatted. Prints the names of \\\n-         files that would be formated when used with `--check` mode. \";\n+         files that would be formatted when used with `--check` mode. \";\n }\n \n #[derive(Error, Debug)]"}, {"sha": "140d8953abc902717f12bb3c3fa392c465277d82", "filename": "src/imports.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/662702eb54b12f16729d6559ce0478b00ef153a8/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/662702eb54b12f16729d6559ce0478b00ef153a8/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=662702eb54b12f16729d6559ce0478b00ef153a8", "patch": "@@ -251,8 +251,8 @@ fn flatten_use_trees(\n     use_trees: Vec<UseTree>,\n     import_granularity: ImportGranularity,\n ) -> Vec<UseTree> {\n-    // Return non-sorted single occurance of the use-trees text string;\n-    // order is by first occurance of the use-tree.\n+    // Return non-sorted single occurrence of the use-trees text string;\n+    // order is by first occurrence of the use-tree.\n     use_trees\n         .into_iter()\n         .flat_map(|tree| tree.flatten(import_granularity))"}, {"sha": "254102ebabdc25cdceca176107ed3cbc2ae1b4bb", "filename": "tests/mod-resolver/issue-5198/lib/c/d/explanation.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/662702eb54b12f16729d6559ce0478b00ef153a8/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fc%2Fd%2Fexplanation.txt", "raw_url": "https://github.com/rust-lang/rust/raw/662702eb54b12f16729d6559ce0478b00ef153a8/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fc%2Fd%2Fexplanation.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fc%2Fd%2Fexplanation.txt?ref=662702eb54b12f16729d6559ce0478b00ef153a8", "patch": "@@ -9,7 +9,7 @@ The directory name './lib/c/d/' conflicts with the './lib/c/d.rs' file name.\n     * mod g;\n \n Module resolution will fail if we look for './lib/c/d/e.rs' or './lib/c/d/e/mod.rs',\n-so we should fall back to looking for './lib/c/e.rs', which correctly finds the modlue, that\n+so we should fall back to looking for './lib/c/e.rs', which correctly finds the module, that\n rustfmt should format.\n \n './lib/c/d/f.rs' and './lib/c/d/g/mod.rs' exist at the default submodule paths so we should be able"}, {"sha": "90464def8ebcc29a5a4be21bc44f4bc3e43245b8", "filename": "tests/mod-resolver/issue-5198/lib/explanation.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/662702eb54b12f16729d6559ce0478b00ef153a8/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fexplanation.txt", "raw_url": "https://github.com/rust-lang/rust/raw/662702eb54b12f16729d6559ce0478b00ef153a8/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fexplanation.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fexplanation.txt?ref=662702eb54b12f16729d6559ce0478b00ef153a8", "patch": "@@ -9,7 +9,7 @@ The directory name './lib' conflicts with the './lib.rs' file name.\n     * mod c;\n \n Module resolution will fail if we look for './lib/a.rs' or './lib/a/mod.rs',\n-so we should fall back to looking for './a.rs', which correctly finds the modlue that\n+so we should fall back to looking for './a.rs', which correctly finds the module that\n rustfmt should format.\n \n './lib/b.rs' and './lib/c/mod.rs' exist at the default submodule paths so we should be able"}, {"sha": "131cbb855f163115b08a73dacb41fb7a05f2675c", "filename": "tests/source/cfg_if/detect/arch/x86.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/662702eb54b12f16729d6559ce0478b00ef153a8/tests%2Fsource%2Fcfg_if%2Fdetect%2Farch%2Fx86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/662702eb54b12f16729d6559ce0478b00ef153a8/tests%2Fsource%2Fcfg_if%2Fdetect%2Farch%2Fx86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fcfg_if%2Fdetect%2Farch%2Fx86.rs?ref=662702eb54b12f16729d6559ce0478b00ef153a8", "patch": "@@ -329,7 +329,7 @@ pub enum Feature {\n     tbm,\n     /// POPCNT (Population Count)\n     popcnt,\n-    /// FXSR (Floating-point context fast save and restor)\n+    /// FXSR (Floating-point context fast save and restore)\n     fxsr,\n     /// XSAVE (Save Processor Extended States)\n     xsave,"}, {"sha": "a7b9616929cb00137c0ae462ef9cc26916aa1d55", "filename": "tests/source/enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/662702eb54b12f16729d6559ce0478b00ef153a8/tests%2Fsource%2Fenum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/662702eb54b12f16729d6559ce0478b00ef153a8/tests%2Fsource%2Fenum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fenum.rs?ref=662702eb54b12f16729d6559ce0478b00ef153a8", "patch": "@@ -36,7 +36,7 @@ enum StructLikeVariants {\n     Normal(u32, String, ),\n     StructLike { x: i32, // Test comment\n         // Pre-comment\n-        #[Attr50] y: SomeType, // Aanother Comment\n+        #[Attr50] y: SomeType, // Another Comment\n     }, SL { a: A }\n }\n "}, {"sha": "5189a7454f3a7dfb383ba143412a2669207c7835", "filename": "tests/source/tuple.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/662702eb54b12f16729d6559ce0478b00ef153a8/tests%2Fsource%2Ftuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/662702eb54b12f16729d6559ce0478b00ef153a8/tests%2Fsource%2Ftuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ftuple.rs?ref=662702eb54b12f16729d6559ce0478b00ef153a8", "patch": "@@ -1,4 +1,4 @@\n-// Test tuple litterals\n+// Test tuple literals\n \n fn foo() {\n     let a = (a, a, a, a, a);"}, {"sha": "56064e4a4cccf9bbe97dbc55054f50fdb5c6e807", "filename": "tests/source/wrap_comments_should_not_imply_format_doc_comments.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/662702eb54b12f16729d6559ce0478b00ef153a8/tests%2Fsource%2Fwrap_comments_should_not_imply_format_doc_comments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/662702eb54b12f16729d6559ce0478b00ef153a8/tests%2Fsource%2Fwrap_comments_should_not_imply_format_doc_comments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fwrap_comments_should_not_imply_format_doc_comments.rs?ref=662702eb54b12f16729d6559ce0478b00ef153a8", "patch": "@@ -11,6 +11,6 @@\n ///\n fn foo() {}\n \n-/// A long commment for wrapping\n+/// A long comment for wrapping\n /// This is a long long long long long long long long long long long long long long long long long long long long sentence.\n fn bar() {}"}, {"sha": "47210cae2aaa0bace3d8e1bd3c31149d148708ad", "filename": "tests/target/cfg_if/detect/arch/x86.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/662702eb54b12f16729d6559ce0478b00ef153a8/tests%2Ftarget%2Fcfg_if%2Fdetect%2Farch%2Fx86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/662702eb54b12f16729d6559ce0478b00ef153a8/tests%2Ftarget%2Fcfg_if%2Fdetect%2Farch%2Fx86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fcfg_if%2Fdetect%2Farch%2Fx86.rs?ref=662702eb54b12f16729d6559ce0478b00ef153a8", "patch": "@@ -314,7 +314,7 @@ pub enum Feature {\n     tbm,\n     /// POPCNT (Population Count)\n     popcnt,\n-    /// FXSR (Floating-point context fast save and restor)\n+    /// FXSR (Floating-point context fast save and restore)\n     fxsr,\n     /// XSAVE (Save Processor Extended States)\n     xsave,"}, {"sha": "70fc8ab376ccd9dcdd01d2de55fbd0a7c146bd7a", "filename": "tests/target/enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/662702eb54b12f16729d6559ce0478b00ef153a8/tests%2Ftarget%2Fenum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/662702eb54b12f16729d6559ce0478b00ef153a8/tests%2Ftarget%2Fenum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fenum.rs?ref=662702eb54b12f16729d6559ce0478b00ef153a8", "patch": "@@ -43,7 +43,7 @@ enum StructLikeVariants {\n         x: i32, // Test comment\n         // Pre-comment\n         #[Attr50]\n-        y: SomeType, // Aanother Comment\n+        y: SomeType, // Another Comment\n     },\n     SL {\n         a: A,"}, {"sha": "24fcf8cfd7cf358d25480d6d4d5367816cde9d75", "filename": "tests/target/tuple.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/662702eb54b12f16729d6559ce0478b00ef153a8/tests%2Ftarget%2Ftuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/662702eb54b12f16729d6559ce0478b00ef153a8/tests%2Ftarget%2Ftuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ftuple.rs?ref=662702eb54b12f16729d6559ce0478b00ef153a8", "patch": "@@ -1,4 +1,4 @@\n-// Test tuple litterals\n+// Test tuple literals\n \n fn foo() {\n     let a = (a, a, a, a, a);"}, {"sha": "6ccecc7e0bbe660a5bb34f527c5a15c4bed86410", "filename": "tests/target/wrap_comments_should_not_imply_format_doc_comments.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/662702eb54b12f16729d6559ce0478b00ef153a8/tests%2Ftarget%2Fwrap_comments_should_not_imply_format_doc_comments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/662702eb54b12f16729d6559ce0478b00ef153a8/tests%2Ftarget%2Fwrap_comments_should_not_imply_format_doc_comments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fwrap_comments_should_not_imply_format_doc_comments.rs?ref=662702eb54b12f16729d6559ce0478b00ef153a8", "patch": "@@ -10,7 +10,7 @@\n /// ```\n fn foo() {}\n \n-/// A long commment for wrapping\n+/// A long comment for wrapping\n /// This is a long long long long long long long long long long long long long\n /// long long long long long long long sentence.\n fn bar() {}"}]}