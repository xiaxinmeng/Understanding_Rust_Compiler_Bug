{"sha": "91847c43cc70d8d113185d46019ae93c3f92fb36", "node_id": "C_kwDOAAsO6NoAKDkxODQ3YzQzY2M3MGQ4ZDExMzE4NWQ0NjAxOWFlOTNjM2Y5MmZiMzY", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-16T12:25:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-16T12:25:56Z"}, "message": "Rollup merge of #96023 - matthiaskrgr:clippyper1304, r=lcnr\n\ncouple of clippy::perf fixes", "tree": {"sha": "f470aab06321102834b9287cae923ee5a4931df9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f470aab06321102834b9287cae923ee5a4931df9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91847c43cc70d8d113185d46019ae93c3f92fb36", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiWrXUCRBK7hj4Ov3rIwAAaJQIAJebpnw3fyZDsOFWE2HsN0o5\npj162pWDK8yo9uxUf2YnckuGMkT/jVPFQ+qQzOA4M2kyEJOoLA3/eVZrX1s2u/IY\nhUkiN1ccnSnArZg9V9EurRHLHh5Og2xlO/iPFGrG3RUo1ApHZJxsTXpq1vKYmag1\nuzlfdsqlBI5R9SsgP75OviMAcIH/2MiQsexfSYo4kZIJu6DYzO9F6q5+lAdGrmc+\nv7kOXwL3gyiqiUx+UXxs2Vi1DRnDOy6PKcta3G05IIFL69nMdICkIUL9mh7ANXuO\nOFSRw4+jdZG7P0woWtN1szEwzVi0mJ1jQwbj5941zx7g5Vypz4E8ql3Cnwwl3dw=\n=0uAH\n-----END PGP SIGNATURE-----\n", "payload": "tree f470aab06321102834b9287cae923ee5a4931df9\nparent 0a8acac7a316d89167045bb9cf9e279fe12d3a9c\nparent bbd7ce690452f28d459643d97fbae89109cf5808\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1650111956 +0200\ncommitter GitHub <noreply@github.com> 1650111956 +0200\n\nRollup merge of #96023 - matthiaskrgr:clippyper1304, r=lcnr\n\ncouple of clippy::perf fixes\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91847c43cc70d8d113185d46019ae93c3f92fb36", "html_url": "https://github.com/rust-lang/rust/commit/91847c43cc70d8d113185d46019ae93c3f92fb36", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91847c43cc70d8d113185d46019ae93c3f92fb36/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a8acac7a316d89167045bb9cf9e279fe12d3a9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a8acac7a316d89167045bb9cf9e279fe12d3a9c", "html_url": "https://github.com/rust-lang/rust/commit/0a8acac7a316d89167045bb9cf9e279fe12d3a9c"}, {"sha": "bbd7ce690452f28d459643d97fbae89109cf5808", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbd7ce690452f28d459643d97fbae89109cf5808", "html_url": "https://github.com/rust-lang/rust/commit/bbd7ce690452f28d459643d97fbae89109cf5808"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "d6e2c8ccdf44a2344cbf74004c0dec9f0f0b85db", "filename": "compiler/rustc_codegen_llvm/src/debuginfo/metadata/enums/cpp_like.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/91847c43cc70d8d113185d46019ae93c3f92fb36/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata%2Fenums%2Fcpp_like.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91847c43cc70d8d113185d46019ae93c3f92fb36/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata%2Fenums%2Fcpp_like.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata%2Fenums%2Fcpp_like.rs?ref=91847c43cc70d8d113185d46019ae93c3f92fb36", "patch": "@@ -372,7 +372,6 @@ fn build_union_fields_for_direct_tag_generator<'ll, 'tcx>(\n \n     // Build the type node for each field.\n     let variant_field_infos: SmallVec<VariantFieldInfo<'ll>> = variant_range\n-        .clone()\n         .map(|variant_index| {\n             let variant_struct_type_di_node = super::build_generator_variant_struct_type_di_node(\n                 cx,"}, {"sha": "416bc4e2e3bf2a518079585d9ce19236c670ea88", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91847c43cc70d8d113185d46019ae93c3f92fb36/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91847c43cc70d8d113185d46019ae93c3f92fb36/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=91847c43cc70d8d113185d46019ae93c3f92fb36", "patch": "@@ -1208,7 +1208,7 @@ impl HandlerInner {\n             (0, 0) => return,\n             (0, _) => self.emitter.emit_diagnostic(&Diagnostic::new(\n                 Level::Warning,\n-                DiagnosticMessage::Str(warnings.to_owned()),\n+                DiagnosticMessage::Str(warnings),\n             )),\n             (_, 0) => {\n                 let _ = self.fatal(&errors);"}, {"sha": "8f260e1cdb5c8c04296792a237238a0b980fd6cf", "filename": "compiler/rustc_expand/src/mbe/macro_parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91847c43cc70d8d113185d46019ae93c3f92fb36/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91847c43cc70d8d113185d46019ae93c3f92fb36/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs?ref=91847c43cc70d8d113185d46019ae93c3f92fb36", "patch": "@@ -590,7 +590,7 @@ impl TtParser {\n                 (_, 0) => {\n                     // Dump all possible `next_mps` into `cur_mps` for the next iteration. Then\n                     // process the next token.\n-                    self.cur_mps.extend(self.next_mps.drain(..));\n+                    self.cur_mps.append(&mut self.next_mps);\n                     parser.to_mut().bump();\n                 }\n "}, {"sha": "58e484e413dab4d5a1a4d4ca14f40479ec059328", "filename": "compiler/rustc_mir_build/src/thir/pattern/check_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91847c43cc70d8d113185d46019ae93c3f92fb36/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91847c43cc70d8d113185d46019ae93c3f92fb36/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fcheck_match.rs?ref=91847c43cc70d8d113185d46019ae93c3f92fb36", "patch": "@@ -844,7 +844,7 @@ fn non_exhaustive_match<'p, 'tcx>(\n                     format!(\n                         \"{}{}{} => todo!()\",\n                         comma,\n-                        snippet.strip_prefix(\",\").unwrap_or(&snippet),\n+                        snippet.strip_prefix(',').unwrap_or(&snippet),\n                         pattern\n                     ),\n                 ));"}, {"sha": "7485c082f4eaf5af2b542719f7a204dccb038ebe", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/91847c43cc70d8d113185d46019ae93c3f92fb36/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91847c43cc70d8d113185d46019ae93c3f92fb36/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=91847c43cc70d8d113185d46019ae93c3f92fb36", "patch": "@@ -2724,9 +2724,9 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                 &format!(\n                     \"consider annotating `{}` with `#[derive({})]`\",\n                     trait_pred.skip_binder().self_ty(),\n-                    diagnostic_name.to_string(),\n+                    diagnostic_name,\n                 ),\n-                format!(\"#[derive({})]\\n\", diagnostic_name.to_string()),\n+                format!(\"#[derive({})]\\n\", diagnostic_name),\n                 Applicability::MaybeIncorrect,\n             );\n         }"}, {"sha": "a620ffa98786021454abebda501b0509d7ce2845", "filename": "src/librustdoc/passes/html_tags.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91847c43cc70d8d113185d46019ae93c3f92fb36/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91847c43cc70d8d113185d46019ae93c3f92fb36/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs?ref=91847c43cc70d8d113185d46019ae93c3f92fb36", "patch": "@@ -215,7 +215,7 @@ impl<'a, 'tcx> DocVisitor for InvalidHtmlTagsLinter<'a, 'tcx> {\n                     // We don't try to detect stuff `<like, this>` because that's not valid HTML,\n                     // and we don't try to detect stuff `<like this>` because that's not valid Rust.\n                     if let Some(Some(generics_start)) = (is_open_tag\n-                        && dox[..range.end].ends_with(\">\"))\n+                        && dox[..range.end].ends_with('>'))\n                     .then(|| extract_path_backwards(&dox, range.start))\n                     {\n                         let generics_sp = match super::source_span_for_markdown_range("}]}