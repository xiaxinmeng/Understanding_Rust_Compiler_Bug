{"sha": "38f6c07b112ce2c17cc60bc497d84d0268da3580", "node_id": "C_kwDOAAsO6NoAKDM4ZjZjMDdiMTEyY2UyYzE3Y2M2MGJjNDk3ZDg0ZDAyNjhkYTM1ODA", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-10-13T15:09:48Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-10-13T19:58:55Z"}, "message": "Improve code readability for sidebar links", "tree": {"sha": "2feb3b9afabd128b0515c17df7225a353dc32e07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2feb3b9afabd128b0515c17df7225a353dc32e07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38f6c07b112ce2c17cc60bc497d84d0268da3580", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38f6c07b112ce2c17cc60bc497d84d0268da3580", "html_url": "https://github.com/rust-lang/rust/commit/38f6c07b112ce2c17cc60bc497d84d0268da3580", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38f6c07b112ce2c17cc60bc497d84d0268da3580/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51a993f4a6f70765b2def104e9f1ba9549b37eb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/51a993f4a6f70765b2def104e9f1ba9549b37eb5", "html_url": "https://github.com/rust-lang/rust/commit/51a993f4a6f70765b2def104e9f1ba9549b37eb5"}], "stats": {"total": 64, "additions": 48, "deletions": 16}, "files": [{"sha": "69c5c2c4abc2a4bcfd085fa68dd07c15c3a9419f", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 48, "deletions": 16, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/38f6c07b112ce2c17cc60bc497d84d0268da3580/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38f6c07b112ce2c17cc60bc497d84d0268da3580/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=38f6c07b112ce2c17cc60bc497d84d0268da3580", "patch": "@@ -1811,23 +1811,53 @@ fn get_next_url(used_links: &mut FxHashSet<String>, url: String) -> String {\n     format!(\"{}-{}\", url, add)\n }\n \n+struct SidebarLink {\n+    name: Symbol,\n+    url: String,\n+}\n+\n+impl fmt::Display for SidebarLink {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        write!(f, \"<a href=\\\"#{}\\\">{}</a>\", self.url, self.name)\n+    }\n+}\n+\n+impl PartialEq for SidebarLink {\n+    fn eq(&self, other: &Self) -> bool {\n+        self.url == other.url\n+    }\n+}\n+\n+impl Eq for SidebarLink {}\n+\n+impl PartialOrd for SidebarLink {\n+    fn partial_cmp(&self, other: &Self) -> Option<std::cmp::Ordering> {\n+        Some(self.cmp(other))\n+    }\n+}\n+\n+impl Ord for SidebarLink {\n+    fn cmp(&self, other: &Self) -> std::cmp::Ordering {\n+        self.url.cmp(&other.url)\n+    }\n+}\n+\n fn get_methods(\n     i: &clean::Impl,\n     for_deref: bool,\n     used_links: &mut FxHashSet<String>,\n     deref_mut: bool,\n     tcx: TyCtxt<'_>,\n-) -> Vec<String> {\n+) -> Vec<SidebarLink> {\n     i.items\n         .iter()\n         .filter_map(|item| match item.name {\n-            Some(ref name) if !name.is_empty() && item.is_method() => {\n+            Some(name) if !name.is_empty() && item.is_method() => {\n                 if !for_deref || should_render_item(item, deref_mut, tcx) {\n-                    Some(format!(\n-                        \"<a href=\\\"#{}\\\">{}</a>\",\n-                        get_next_url(used_links, format!(\"method.{}\", name)),\n-                        name\n-                    ))\n+                    Some(SidebarLink {\n+                        name,\n+                        url: get_next_url(used_links, format!(\"method.{}\", name)),\n+                    })\n                 } else {\n                     None\n                 }\n@@ -1837,15 +1867,17 @@ fn get_methods(\n         .collect::<Vec<_>>()\n }\n \n-fn get_associated_constants(i: &clean::Impl, used_links: &mut FxHashSet<String>) -> Vec<String> {\n+fn get_associated_constants(\n+    i: &clean::Impl,\n+    used_links: &mut FxHashSet<String>,\n+) -> Vec<SidebarLink> {\n     i.items\n         .iter()\n         .filter_map(|item| match item.name {\n-            Some(ref name) if !name.is_empty() && item.is_associated_const() => Some(format!(\n-                \"<a href=\\\"#{}\\\">{}</a>\",\n-                get_next_url(used_links, format!(\"associatedconstant.{}\", name)),\n-                name\n-            )),\n+            Some(name) if !name.is_empty() && item.is_associated_const() => Some(SidebarLink {\n+                name,\n+                url: get_next_url(used_links, format!(\"associatedconstant.{}\", name)),\n+            }),\n             _ => None,\n         })\n         .collect::<Vec<_>>()\n@@ -1910,7 +1942,7 @@ fn sidebar_assoc_items(cx: &Context<'_>, out: &mut Buffer, it: &clean::Item) {\n                      <div class=\\\"sidebar-links\\\">\",\n                 );\n                 for line in assoc_consts {\n-                    out.push_str(&line);\n+                    write!(out, \"{}\", line);\n                 }\n                 out.push_str(\"</div>\");\n             }\n@@ -1928,7 +1960,7 @@ fn sidebar_assoc_items(cx: &Context<'_>, out: &mut Buffer, it: &clean::Item) {\n                      <div class=\\\"sidebar-links\\\">\",\n                 );\n                 for line in methods {\n-                    out.push_str(&line);\n+                    write!(out, \"{}\", line);\n                 }\n                 out.push_str(\"</div>\");\n             }\n@@ -2063,7 +2095,7 @@ fn sidebar_deref_methods(cx: &Context<'_>, out: &mut Buffer, impl_: &Impl, v: &V\n                 ret.sort();\n                 out.push_str(\"<div class=\\\"sidebar-links\\\">\");\n                 for link in ret {\n-                    out.push_str(&link);\n+                    write!(out, \"{}\", link);\n                 }\n                 out.push_str(\"</div>\");\n             }"}]}