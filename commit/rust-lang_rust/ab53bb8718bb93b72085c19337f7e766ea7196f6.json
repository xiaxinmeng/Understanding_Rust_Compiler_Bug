{"sha": "ab53bb8718bb93b72085c19337f7e766ea7196f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiNTNiYjg3MThiYjkzYjcyMDg1YzE5MzM3ZjdlNzY2ZWE3MTk2ZjY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-10-22T12:04:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-22T12:04:50Z"}, "message": "Merge #6320 #6321\n\n6320: Textmate grammar: prevent line comments from breaking block comments (closes #6281) r=matklad a=dustypomerleau\n\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/6281.\r\n\r\nPreviously, line comments were able to break block comments by essentially commenting out the closing `*/`, resulting in a never-ending comment. This PR splits block comments into a separate repository group to fix this problem.\r\n\r\nSince the comment scopes also include ignored parameters and inferred types, I've added the change proposed by @bnjjj in https://github.com/rust-analyzer/rust-analyzer/pull/6317, in order to close https://github.com/rust-analyzer/rust-analyzer/issues/6311 as well.\n\n6321: Fix opening module documentation opening parent documentation instead r=matklad a=zacps\n\nThe whole path/URL joining code is kind of ugly which is what led to\r\nthis, but at the same time I don't really want to rewrite it right\r\nnow...\r\n\r\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/6286\n\nCo-authored-by: Dusty Pomerleau <dustypomerleau@users.noreply.github.com>\nCo-authored-by: Zac Pullar-Strecker <zacmps@gmail.com>", "tree": {"sha": "08960deae32826de2add8fa1746f21a9f735f3fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08960deae32826de2add8fa1746f21a9f735f3fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab53bb8718bb93b72085c19337f7e766ea7196f6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfkXViCRBK7hj4Ov3rIwAAdHIIACh51M/cD+NKKg599ujAmLcU\nflqCaY2JZWAy5PUvtdbSc8j4wP3fwVNmCBrhVeJliiIB3UBn+Lq2zuoxVRr8J9Fi\nttJYxBb7xCxlRr/6P5EBKcFnDyL8krt4hskUOmxsh+eUs4NTuePhLYSMxih5mZZR\nGtNyIN6jEmvJCXwpASVfXp6oh5tfR0pQyemQhCAMq494cxine7SWLRxeAZ3xV2DU\nje6Lg4Rt/omNvFM8ciDF0FGB8HTgZaGgx083aDTON2ldYyBD/ZeZylj2xm9vFRv1\nDRVDKXQHHqKTXmE3UG/kyuj3wwcdDTGPvR7ACDShDZfeEIDR5zMfsJAVo21zM70=\n=usfr\n-----END PGP SIGNATURE-----\n", "payload": "tree 08960deae32826de2add8fa1746f21a9f735f3fe\nparent af75a081169afbd63b3349611e95418f980be32f\nparent 26b4b1e2fb06f54e2974835077c2e970b2e0f2b8\nparent 68c67efa683bd676096c3a28960f806d4d3dc5d7\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1603368290 +0000\ncommitter GitHub <noreply@github.com> 1603368290 +0000\n\nMerge #6320 #6321\n\n6320: Textmate grammar: prevent line comments from breaking block comments (closes #6281) r=matklad a=dustypomerleau\n\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/6281.\r\n\r\nPreviously, line comments were able to break block comments by essentially commenting out the closing `*/`, resulting in a never-ending comment. This PR splits block comments into a separate repository group to fix this problem.\r\n\r\nSince the comment scopes also include ignored parameters and inferred types, I've added the change proposed by @bnjjj in https://github.com/rust-analyzer/rust-analyzer/pull/6317, in order to close https://github.com/rust-analyzer/rust-analyzer/issues/6311 as well.\n\n6321: Fix opening module documentation opening parent documentation instead r=matklad a=zacps\n\nThe whole path/URL joining code is kind of ugly which is what led to\r\nthis, but at the same time I don't really want to rewrite it right\r\nnow...\r\n\r\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/6286\n\nCo-authored-by: Dusty Pomerleau <dustypomerleau@users.noreply.github.com>\nCo-authored-by: Zac Pullar-Strecker <zacmps@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab53bb8718bb93b72085c19337f7e766ea7196f6", "html_url": "https://github.com/rust-lang/rust/commit/ab53bb8718bb93b72085c19337f7e766ea7196f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab53bb8718bb93b72085c19337f7e766ea7196f6/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af75a081169afbd63b3349611e95418f980be32f", "url": "https://api.github.com/repos/rust-lang/rust/commits/af75a081169afbd63b3349611e95418f980be32f", "html_url": "https://github.com/rust-lang/rust/commit/af75a081169afbd63b3349611e95418f980be32f"}, {"sha": "26b4b1e2fb06f54e2974835077c2e970b2e0f2b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/26b4b1e2fb06f54e2974835077c2e970b2e0f2b8", "html_url": "https://github.com/rust-lang/rust/commit/26b4b1e2fb06f54e2974835077c2e970b2e0f2b8"}, {"sha": "68c67efa683bd676096c3a28960f806d4d3dc5d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/68c67efa683bd676096c3a28960f806d4d3dc5d7", "html_url": "https://github.com/rust-lang/rust/commit/68c67efa683bd676096c3a28960f806d4d3dc5d7"}], "stats": {"total": 81, "additions": 58, "deletions": 23}, "files": [{"sha": "250f10f9fd6611a6983c5a52980c986e931f82e4", "filename": "crates/ide/src/doc_links.rs", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ab53bb8718bb93b72085c19337f7e766ea7196f6/crates%2Fide%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab53bb8718bb93b72085c19337f7e766ea7196f6/crates%2Fide%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links.rs?ref=ab53bb8718bb93b72085c19337f7e766ea7196f6", "patch": "@@ -132,7 +132,8 @@ fn get_doc_link(db: &RootDatabase, definition: Definition) -> Option<String> {\n     let import_map = db.import_map(krate.into());\n     let base = once(krate.display_name(db)?.to_string())\n         .chain(import_map.path_of(ns)?.segments.iter().map(|name| name.to_string()))\n-        .join(\"/\");\n+        .join(\"/\")\n+        + \"/\";\n \n     let filename = get_symbol_filename(db, &target_def);\n     let fragment = match definition {\n@@ -152,9 +153,16 @@ fn get_doc_link(db: &RootDatabase, definition: Definition) -> Option<String> {\n         _ => None,\n     };\n \n-    get_doc_url(db, &krate)\n-        .and_then(|url| url.join(&base).ok())\n-        .and_then(|url| filename.as_deref().and_then(|f| url.join(f).ok()))\n+    get_doc_url(db, &krate)?\n+        .join(&base)\n+        .ok()\n+        .and_then(|mut url| {\n+            if !matches!(definition, Definition::ModuleDef(ModuleDef::Module(..))) {\n+                url.path_segments_mut().ok()?.pop();\n+            };\n+            Some(url)\n+        })\n+        .and_then(|url| url.join(filename.as_deref()?).ok())\n         .and_then(\n             |url| if let Some(fragment) = fragment { url.join(&fragment).ok() } else { Some(url) },\n         )\n@@ -522,6 +530,18 @@ pub struct Foo {\n         );\n     }\n \n+    #[test]\n+    fn test_module() {\n+        check(\n+            r#\"\n+pub mod foo {\n+    pub mod ba<|>r {}\n+}\n+        \"#,\n+            expect![[r#\"https://docs.rs/test/*/test/foo/bar/index.html\"#]],\n+        )\n+    }\n+\n     // FIXME: ImportMap will return re-export paths instead of public module\n     // paths. The correct path to documentation will never be a re-export.\n     // This problem stops us from resolving stdlib items included in the prelude"}, {"sha": "f0c5c3cf3145123391141391c69a709f0ab1b1ea", "filename": "editors/code/rust.tmGrammar.json", "status": "modified", "additions": 34, "deletions": 19, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/ab53bb8718bb93b72085c19337f7e766ea7196f6/editors%2Fcode%2Frust.tmGrammar.json", "raw_url": "https://github.com/rust-lang/rust/raw/ab53bb8718bb93b72085c19337f7e766ea7196f6/editors%2Fcode%2Frust.tmGrammar.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Frust.tmGrammar.json?ref=ab53bb8718bb93b72085c19337f7e766ea7196f6", "patch": "@@ -24,6 +24,9 @@\n                 }\n             },\n             \"patterns\": [\n+                {\n+                    \"include\": \"#block-comments\"\n+                },\n                 {\n                     \"include\": \"#comments\"\n                 },\n@@ -184,6 +187,9 @@\n                 }\n             },\n             \"patterns\": [\n+                {\n+                    \"include\": \"#block-comments\"\n+                },\n                 {\n                     \"include\": \"#comments\"\n                 },\n@@ -211,6 +217,9 @@\n                 }\n             },\n             \"patterns\": [\n+                {\n+                    \"include\": \"#block-comments\"\n+                },\n                 {\n                     \"include\": \"#comments\"\n                 },\n@@ -231,6 +240,9 @@\n                 }\n             ]\n         },\n+        {\n+            \"include\": \"#block-comments\"\n+        },\n         {\n             \"include\": \"#comments\"\n         },\n@@ -277,31 +289,30 @@\n                 {\n                     \"comment\": \"documentation comments\",\n                     \"name\": \"comment.line.documentation.rust\",\n-                    \"match\": \"^\\\\s*///.*\",\n-                    \"patterns\": [\n-                        {\n-                            \"include\": \"#comments\"\n-                        }\n-                    ]\n+                    \"match\": \"^\\\\s*///.*\"\n                 },\n                 {\n                     \"comment\": \"line comments\",\n                     \"name\": \"comment.line.double-slash.rust\",\n-                    \"match\": \"\\\\s*//.*\",\n-                    \"patterns\": [\n-                        {\n-                            \"include\": \"#comments\"\n-                        }\n-                    ]\n+                    \"match\": \"\\\\s*//.*\"\n                 },\n+                {\n+                    \"comment\": \"inferred types, wildcard patterns, ignored params\",\n+                    \"name\": \"comment.char.underscore.rust\",\n+                    \"match\": \"\\\\b_\\\\w*\\\\b[^!(]\"\n+                }\n+            ]\n+        },\n+        \"block-comments\": {\n+            \"patterns\": [\n                 {\n                     \"comment\": \"block comments\",\n                     \"name\": \"comment.block.rust\",\n                     \"begin\": \"/\\\\*(?!\\\\*)\",\n                     \"end\": \"\\\\*/\",\n                     \"patterns\": [\n                         {\n-                            \"include\": \"#comments\"\n+                            \"include\": \"#block-comments\"\n                         }\n                     ]\n                 },\n@@ -312,14 +323,9 @@\n                     \"end\": \"\\\\*/\",\n                     \"patterns\": [\n                         {\n-                            \"include\": \"#comments\"\n+                            \"include\": \"#block-comments\"\n                         }\n                     ]\n-                },\n-                {\n-                    \"comment\": \"inferred types, wildcard patterns, ignored params\",\n-                    \"name\": \"comment.char.underscore.rust\",\n-                    \"match\": \"\\\\b_\\\\w*\\\\b\"\n                 }\n             ]\n         },\n@@ -450,6 +456,9 @@\n                         }\n                     },\n                     \"patterns\": [\n+                        {\n+                            \"include\": \"#block-comments\"\n+                        },\n                         {\n                             \"include\": \"#comments\"\n                         },\n@@ -516,6 +525,9 @@\n                         }\n                     },\n                     \"patterns\": [\n+                        {\n+                            \"include\": \"#block-comments\"\n+                        },\n                         {\n                             \"include\": \"#comments\"\n                         },\n@@ -797,6 +809,9 @@\n                         }\n                     },\n                     \"patterns\": [\n+                        {\n+                            \"include\": \"#block-comments\"\n+                        },\n                         {\n                             \"include\": \"#comments\"\n                         },"}]}