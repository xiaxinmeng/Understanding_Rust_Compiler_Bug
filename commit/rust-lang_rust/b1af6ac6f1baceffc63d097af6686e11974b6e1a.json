{"sha": "b1af6ac6f1baceffc63d097af6686e11974b6e1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxYWY2YWM2ZjFiYWNlZmZjNjNkMDk3YWY2Njg2ZTExOTc0YjZlMWE=", "commit": {"author": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-07-10T00:04:06Z"}, "committer": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-07-10T00:44:46Z"}, "message": "Make the matcher parser treat `()` in a matchy way, like one would expect.", "tree": {"sha": "4e385c7f2a0a23d69c0c1404adb8679687e37b9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e385c7f2a0a23d69c0c1404adb8679687e37b9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1af6ac6f1baceffc63d097af6686e11974b6e1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1af6ac6f1baceffc63d097af6686e11974b6e1a", "html_url": "https://github.com/rust-lang/rust/commit/b1af6ac6f1baceffc63d097af6686e11974b6e1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1af6ac6f1baceffc63d097af6686e11974b6e1a/comments", "author": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55e28f6689249d794c6941f64485a255d63663c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/55e28f6689249d794c6941f64485a255d63663c5", "html_url": "https://github.com/rust-lang/rust/commit/55e28f6689249d794c6941f64485a255d63663c5"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "67cc265f7a0f94c31a91ed2a9a0702ba292ed635", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/b1af6ac6f1baceffc63d097af6686e11974b6e1a/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1af6ac6f1baceffc63d097af6686e11974b6e1a/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=b1af6ac6f1baceffc63d097af6686e11974b6e1a", "patch": "@@ -1246,9 +1246,29 @@ class parser {\n \n     fn parse_matchers() -> ~[matcher] {\n         let name_idx = @mut 0u;\n-        ret self.parse_seq(token::LBRACE, token::RBRACE,\n-                           common::seq_sep_none(),\n-                           |p| p.parse_matcher(name_idx)).node;\n+        ret self.parse_matcher_subseq(name_idx, token::LBRACE, token::RBRACE);\n+    }\n+\n+\n+    // This goofy function is necessary to correctly match parens in matchers.\n+    // Otherwise, `$( ( )` would be a valid matcher, and `$( () )` would be\n+    // invalid. It's similar to common::parse_seq.\n+    fn parse_matcher_subseq(name_idx: @mut uint, bra: token::token,\n+                            ket: token::token) -> ~[matcher] {\n+        let mut ret_val = ~[];\n+        let mut lparens = 0u;\n+\n+        self.expect(bra);\n+\n+        while self.token != ket || lparens > 0u {\n+            if self.token == token::LPAREN { lparens += 1u; }\n+            if self.token == token::RPAREN { lparens -= 1u; }\n+            vec::push(ret_val, self.parse_matcher(name_idx));\n+        }\n+\n+        self.bump();\n+\n+        ret ret_val;\n     }\n \n     fn parse_matcher(name_idx: @mut uint) -> matcher {\n@@ -1257,9 +1277,8 @@ class parser {\n         let m = if self.token == token::DOLLAR {\n             self.bump();\n             if self.token == token::LPAREN {\n-                let ms = (self.parse_seq(token::LPAREN, token::RPAREN,\n-                                         common::seq_sep_none(),\n-                                         |p| p.parse_matcher(name_idx)).node);\n+                let ms = self.parse_matcher_subseq(name_idx, token::LPAREN,\n+                                                   token::RPAREN);\n                 if ms.len() == 0u {\n                     self.fatal(\"repetition body must be nonempty\");\n                 }"}]}