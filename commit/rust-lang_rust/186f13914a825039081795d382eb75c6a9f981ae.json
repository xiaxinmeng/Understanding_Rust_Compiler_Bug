{"sha": "186f13914a825039081795d382eb75c6a9f981ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4NmYxMzkxNGE4MjUwMzkwODE3OTVkMzgyZWI3NWM2YTlmOTgxYWU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-02-15T13:17:43Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-03-04T20:22:43Z"}, "message": "Move visibility check inside the should_have_doc_example function", "tree": {"sha": "cc2392f8a64b4613d9410f97291fe9a3926069a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc2392f8a64b4613d9410f97291fe9a3926069a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/186f13914a825039081795d382eb75c6a9f981ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/186f13914a825039081795d382eb75c6a9f981ae", "html_url": "https://github.com/rust-lang/rust/commit/186f13914a825039081795d382eb75c6a9f981ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/186f13914a825039081795d382eb75c6a9f981ae/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91095b1be5b1befb545dc3a303e029f408aba4ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/91095b1be5b1befb545dc3a303e029f408aba4ee", "html_url": "https://github.com/rust-lang/rust/commit/91095b1be5b1befb545dc3a303e029f408aba4ee"}], "stats": {"total": 37, "additions": 17, "deletions": 20}, "files": [{"sha": "cf8966fadf60b5f1a03940b212dd518b6f6dc156", "filename": "src/librustdoc/passes/doc_test_lints.rs", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/186f13914a825039081795d382eb75c6a9f981ae/src%2Flibrustdoc%2Fpasses%2Fdoc_test_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/186f13914a825039081795d382eb75c6a9f981ae/src%2Flibrustdoc%2Fpasses%2Fdoc_test_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fdoc_test_lints.rs?ref=186f13914a825039081795d382eb75c6a9f981ae", "patch": "@@ -53,20 +53,22 @@ impl crate::doctest::Tester for Tests {\n }\n \n crate fn should_have_doc_example(cx: &DocContext<'_>, item: &clean::Item) -> bool {\n-    if matches!(\n-        *item.kind,\n-        clean::StructFieldItem(_)\n-            | clean::VariantItem(_)\n-            | clean::AssocConstItem(_, _)\n-            | clean::AssocTypeItem(_, _)\n-            | clean::TypedefItem(_, _)\n-            | clean::StaticItem(_)\n-            | clean::ConstantItem(_)\n-            | clean::ExternCrateItem(_, _)\n-            | clean::ImportItem(_)\n-            | clean::PrimitiveItem(_)\n-            | clean::KeywordItem(_)\n-    ) {\n+    if !cx.renderinfo.borrow().access_levels.is_public(item.def_id)\n+        || matches!(\n+            *item.kind,\n+            clean::StructFieldItem(_)\n+                | clean::VariantItem(_)\n+                | clean::AssocConstItem(_, _)\n+                | clean::AssocTypeItem(_, _)\n+                | clean::TypedefItem(_, _)\n+                | clean::StaticItem(_)\n+                | clean::ConstantItem(_)\n+                | clean::ExternCrateItem(_, _)\n+                | clean::ImportItem(_)\n+                | clean::PrimitiveItem(_)\n+                | clean::KeywordItem(_)\n+        )\n+    {\n         return false;\n     }\n     let hir_id = cx.tcx.hir().local_def_id_to_hir_id(item.def_id.expect_local());\n@@ -93,9 +95,7 @@ crate fn look_for_tests<'tcx>(cx: &DocContext<'tcx>, dox: &str, item: &Item) {\n     find_testable_code(&dox, &mut tests, ErrorCodes::No, false, None);\n \n     if tests.found_tests == 0 && cx.tcx.sess.is_nightly_build() {\n-        if cx.renderinfo.borrow().access_levels.is_public(item.def_id)\n-            && should_have_doc_example(cx, &item)\n-        {\n+        if should_have_doc_example(cx, &item) {\n             debug!(\"reporting error for {:?} (hir_id={:?})\", item, hir_id);\n             let sp = span_of_attrs(&item.attrs).unwrap_or(item.source.span());\n             cx.tcx.struct_span_lint_hir("}, {"sha": "875be028e848d2cee3b9dd86bb918bc4ec56412d", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/186f13914a825039081795d382eb75c6a9f981ae/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/186f13914a825039081795d382eb75c6a9f981ae/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=186f13914a825039081795d382eb75c6a9f981ae", "patch": "@@ -35,9 +35,6 @@ crate fn inherits_doc_hidden(cx: &core::DocContext<'_>, mut node: hir::HirId) ->\n         if cx.tcx.hir().attrs(node).lists(sym::doc).has_word(sym::hidden) {\n             return true;\n         }\n-        if node == hir::CRATE_HIR_ID {\n-            break;\n-        }\n     }\n     false\n }"}]}