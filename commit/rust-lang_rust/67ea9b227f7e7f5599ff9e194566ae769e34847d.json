{"sha": "67ea9b227f7e7f5599ff9e194566ae769e34847d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3ZWE5YjIyN2Y3ZTdmNTU5OWZmOWUxOTQ1NjZhZTc2OWUzNDg0N2Q=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-11-24T20:36:36Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-11-27T14:23:52Z"}, "message": "Make super_traits_of return Lrc for cheaper clone", "tree": {"sha": "de7d139eb35013271bd9642d718e1024b6bc2988", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de7d139eb35013271bd9642d718e1024b6bc2988"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67ea9b227f7e7f5599ff9e194566ae769e34847d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAl/BC/gACgkQgTGiTgx5\n769ddBAAsPqJ9ko2DlXABWyLIhWKTp6+bz0vWjtm5hypnrCGDsIErlQ4MG3xFLVD\n2linilmsofwCzESAOpdA4Q1PXUAHK037riFZ5J8UbYkvu1kl6gChXXb2nkiGQYMs\nU4LamqVQFvU4Ns7zpmbedmUzQKFSZTZlAYtBjUbv4MB5+Y7r6HmBZ3jEueGhMH7s\njKTNCMvzGioq4r9xD9d/DuiloXuyNmHXQFpmH0OVOVNGAcDRkQZjhJbA7IvqQVXL\nm/pFWeErbI744o+aA/bhZ/KyW32/54RzI8mNzfi3D6dPI1O2xBbSAqKMB7NP91Hi\nk4nD9m51BpcL4d3z7j6e/1n4cUaKhzfuqh2cRiOMdQOPX+bb70tDipsvT7T/vbqS\nGPCUqJBwYhdSYWMvU1PwkBOxSWnsBJqNuvuWqbHxrExt3Znlo38PHmhUaW9L3RDs\n7YhsKAzO5f3WBNGqDqDypC39ZRJ0HhE2fTFyOXbOUmRkk8ZGmH6IA8jUzX3Hql7z\nG+6yecPNgQDjInDhUsPGLiwkYXQYZXXEvWmhwSzMwStK2pLsGJRDoycseSFnh0xd\nBAUXZ0OJfbTm8kEKy4qC1XFoC5QSy6EMZ3jLhOZNrPQIH3zkKBMkfLUdp2Mmoj1U\n1ytzP/UlDngixzW2qwDpvFGAshPesfvCuNB9jX3W3FdCJX//Avk=\n=ORI/\n-----END PGP SIGNATURE-----", "payload": "tree de7d139eb35013271bd9642d718e1024b6bc2988\nparent 1895e52505b59f49e6675376c44ad8e251c4501c\nauthor Santiago Pastorino <spastorino@gmail.com> 1606250196 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1606487032 -0300\n\nMake super_traits_of return Lrc for cheaper clone\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67ea9b227f7e7f5599ff9e194566ae769e34847d", "html_url": "https://github.com/rust-lang/rust/commit/67ea9b227f7e7f5599ff9e194566ae769e34847d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67ea9b227f7e7f5599ff9e194566ae769e34847d/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1895e52505b59f49e6675376c44ad8e251c4501c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1895e52505b59f49e6675376c44ad8e251c4501c", "html_url": "https://github.com/rust-lang/rust/commit/1895e52505b59f49e6675376c44ad8e251c4501c"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "aba534ac19f9423bac8aef0586a39074884e8887", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/67ea9b227f7e7f5599ff9e194566ae769e34847d/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67ea9b227f7e7f5599ff9e194566ae769e34847d/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=67ea9b227f7e7f5599ff9e194566ae769e34847d", "patch": "@@ -438,7 +438,7 @@ rustc_queries! {\n \n         /// Maps from the `DefId` of a trait to the list of\n         /// all the ancestors super traits.\n-        query super_traits_of(key: DefId) -> FxHashSet<DefId> {\n+        query super_traits_of(key: DefId) -> Lrc<FxHashSet<DefId>> {\n             desc { |tcx| \"computing the super traits of `{}`\", tcx.def_path_str(key) }\n         }\n "}, {"sha": "21d450eaf6e6c2f185cb495885efaebde9c5539d", "filename": "compiler/rustc_typeck/src/collect.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/67ea9b227f7e7f5599ff9e194566ae769e34847d/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67ea9b227f7e7f5599ff9e194566ae769e34847d/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs?ref=67ea9b227f7e7f5599ff9e194566ae769e34847d", "patch": "@@ -26,6 +26,7 @@ use rustc_ast::{MetaItemKind, NestedMetaItem};\n use rustc_attr::{list_contains_name, InlineAttr, InstructionSetAttr, OptimizeAttr};\n use rustc_data_structures::captures::Captures;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet, FxIndexSet};\n+use rustc_data_structures::sync::Lrc;\n use rustc_errors::{struct_span_err, Applicability};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, DefKind, Res};\n@@ -1118,7 +1119,8 @@ fn super_predicates_that_define_assoc_type(\n /// Computes the def-ids of the transitive super-traits of `trait_def_id`. This (intentionally)\n /// does not compute the full elaborated super-predicates but just the set of def-ids. It is used\n /// to identify which traits may define a given associated type to help avoid cycle errors.\n-fn super_traits_of(tcx: TyCtxt<'_>, trait_def_id: DefId) -> FxHashSet<DefId> {\n+/// Returns `Lrc<FxHashSet<DefId>>` so that cloning is cheaper.\n+fn super_traits_of(tcx: TyCtxt<'_>, trait_def_id: DefId) -> Lrc<FxHashSet<DefId>> {\n     let mut set = FxHashSet::default();\n     let mut stack = vec![trait_def_id];\n     while let Some(trait_did) = stack.pop() {\n@@ -1178,7 +1180,7 @@ fn super_traits_of(tcx: TyCtxt<'_>, trait_def_id: DefId) -> FxHashSet<DefId> {\n         }\n     }\n \n-    set\n+    Lrc::new(set)\n }\n \n fn trait_def(tcx: TyCtxt<'_>, def_id: DefId) -> ty::TraitDef {"}]}