{"sha": "d95f749f14a84006273930e155a76259c22660c5", "node_id": "C_kwDOAAsO6NoAKGQ5NWY3NDlmMTRhODQwMDYyNzM5MzBlMTU1YTc2MjU5YzIyNjYwYzU", "commit": {"author": {"name": "Jacob Pratt", "email": "jacob@jhpratt.dev", "date": "2021-11-03T06:50:57Z"}, "committer": {"name": "Jacob Pratt", "email": "jacob@jhpratt.dev", "date": "2021-12-15T03:38:51Z"}, "message": "Stabilize `destructuring_assignment`", "tree": {"sha": "da9eec8ef1c43d100b41c5d86c25b616af342dda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da9eec8ef1c43d100b41c5d86c25b616af342dda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d95f749f14a84006273930e155a76259c22660c5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQTgxeqBxcDGar1sVhy4DhnkZitapAUCYbljSwAKCRC4DhnkZita\npO9mAQCE4Cg2f/hcCvsDkEwAQFXDVXEpMSwiCWHEB252wzU4PQEA+Y/PIph8aP9d\n8otUJIN2FzAui2h9dEjCLMRNQeazqgY=\n=xh95\n-----END PGP SIGNATURE-----", "payload": "tree da9eec8ef1c43d100b41c5d86c25b616af342dda\nparent d594910a2da12f158477b4c7281716f535cfa3de\nauthor Jacob Pratt <jacob@jhpratt.dev> 1635922257 -0400\ncommitter Jacob Pratt <jacob@jhpratt.dev> 1639539531 -0500\n\nStabilize `destructuring_assignment`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d95f749f14a84006273930e155a76259c22660c5", "html_url": "https://github.com/rust-lang/rust/commit/d95f749f14a84006273930e155a76259c22660c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d95f749f14a84006273930e155a76259c22660c5/comments", "author": {"login": "jhpratt", "id": 3161395, "node_id": "MDQ6VXNlcjMxNjEzOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3161395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhpratt", "html_url": "https://github.com/jhpratt", "followers_url": "https://api.github.com/users/jhpratt/followers", "following_url": "https://api.github.com/users/jhpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jhpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhpratt/subscriptions", "organizations_url": "https://api.github.com/users/jhpratt/orgs", "repos_url": "https://api.github.com/users/jhpratt/repos", "events_url": "https://api.github.com/users/jhpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jhpratt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhpratt", "id": 3161395, "node_id": "MDQ6VXNlcjMxNjEzOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3161395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhpratt", "html_url": "https://github.com/jhpratt", "followers_url": "https://api.github.com/users/jhpratt/followers", "following_url": "https://api.github.com/users/jhpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jhpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhpratt/subscriptions", "organizations_url": "https://api.github.com/users/jhpratt/orgs", "repos_url": "https://api.github.com/users/jhpratt/repos", "events_url": "https://api.github.com/users/jhpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jhpratt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d594910a2da12f158477b4c7281716f535cfa3de", "url": "https://api.github.com/repos/rust-lang/rust/commits/d594910a2da12f158477b4c7281716f535cfa3de", "html_url": "https://github.com/rust-lang/rust/commit/d594910a2da12f158477b4c7281716f535cfa3de"}], "stats": {"total": 447, "additions": 64, "deletions": 383}, "files": [{"sha": "40a0b476228f1dfa1281d8d6ecab9c8ca92f8ace", "filename": "compiler/rustc_ast_lowering/src/expr.rs", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -9,7 +9,6 @@ use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def::Res;\n use rustc_hir::definitions::DefPathData;\n-use rustc_session::parse::feature_err;\n use rustc_span::hygiene::ExpnId;\n use rustc_span::source_map::{respan, DesugaringKind, Span, Spanned};\n use rustc_span::symbol::{sym, Ident, Symbol};\n@@ -930,24 +929,6 @@ impl<'hir> LoweringContext<'_, 'hir> {\n                 self.lower_span(eq_sign_span),\n             );\n         }\n-        if !self.sess.features_untracked().destructuring_assignment {\n-            let mut err = feature_err(\n-                &self.sess.parse_sess,\n-                sym::destructuring_assignment,\n-                eq_sign_span,\n-                \"destructuring assignments are unstable\",\n-            );\n-            err.span_label(lhs.span, \"cannot assign to this expression\");\n-            if self.is_in_loop_condition {\n-                err.span_suggestion_verbose(\n-                    lhs.span.shrink_to_lo(),\n-                    \"you might have meant to use pattern destructuring\",\n-                    \"let \".to_string(),\n-                    rustc_errors::Applicability::MachineApplicable,\n-                );\n-            }\n-            err.emit();\n-        }\n \n         let mut assignments = vec![];\n "}, {"sha": "975874b6b2c41f04ba68ee7142ead6059fa36833", "filename": "compiler/rustc_ast_passes/src/feature_gate.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -724,11 +724,6 @@ pub fn check_crate(krate: &ast::Crate, sess: &Session) {\n     gate_all!(half_open_range_patterns, \"half-open range patterns are unstable\");\n     gate_all!(inline_const, \"inline-const is experimental\");\n     gate_all!(inline_const_pat, \"inline-const in pattern position is experimental\");\n-    if sess.parse_sess.span_diagnostic.err_count() == 0 {\n-        // Errors for `destructuring_assignment` can get quite noisy, especially where `_` is\n-        // involved, so we only emit errors where there are no other parsing errors.\n-        gate_all!(destructuring_assignment, \"destructuring assignments are unstable\");\n-    }\n \n     // All uses of `gate_all!` below this point were added in #65742,\n     // and subsequently disabled (with the non-early gating readded)."}, {"sha": "2098bc86328b50a38b7c03f88580f5c7779923fb", "filename": "compiler/rustc_expand/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/compiler%2Frustc_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/compiler%2Frustc_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Flib.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,6 +1,6 @@\n #![feature(crate_visibility_modifier)]\n #![feature(decl_macro)]\n-#![feature(destructuring_assignment)]\n+#![cfg_attr(bootstrap, feature(destructuring_assignment))]\n #![feature(if_let_guard)]\n #![feature(iter_zip)]\n #![feature(let_else)]"}, {"sha": "32a9d081ed8c592a610d5eba448cf02915a15d86", "filename": "compiler/rustc_feature/src/accepted.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -114,6 +114,8 @@ declare_features! (\n     (accepted, default_type_params, \"1.0.0\", None, None),\n     /// Allows `#[deprecated]` attribute.\n     (accepted, deprecated, \"1.9.0\", Some(29935), None),\n+    /// Allows the use of destructuring assignments.\n+    (accepted, destructuring_assignment, \"1.59.0\", Some(71126), None),\n     /// Allows `#[doc(alias = \"...\")]`.\n     (accepted, doc_alias, \"1.48.0\", Some(50146), None),\n     /// Allows `..` in tuple (struct) patterns."}, {"sha": "ebd12d6ab4e2d1ed9e6076c96cbbf02a7ae61c6b", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -356,8 +356,6 @@ declare_features! (\n     (active, default_type_parameter_fallback, \"1.3.0\", Some(27336), None),\n     /// Allows `#[derive(Default)]` and `#[default]` on enums.\n     (active, derive_default_enum, \"1.56.0\", Some(86985), None),\n-    /// Allows the use of destructuring assignments.\n-    (active, destructuring_assignment, \"1.49.0\", Some(71126), None),\n     /// Tells rustdoc to automatically generate `#[doc(cfg(...))]`.\n     (active, doc_auto_cfg, \"1.58.0\", Some(43781), None),\n     /// Allows `#[doc(cfg(...))]`."}, {"sha": "ddb4f2dc25d6763a848d87773ebb6e44e7883ef3", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1297,7 +1297,6 @@ impl<'a> Parser<'a> {\n         } else if self.eat_keyword(kw::Let) {\n             self.parse_let_expr(attrs)\n         } else if self.eat_keyword(kw::Underscore) {\n-            self.sess.gated_spans.gate(sym::destructuring_assignment, self.prev_token.span);\n             Ok(self.mk_expr(self.prev_token.span, ExprKind::Underscore, attrs))\n         } else if !self.unclosed_delims.is_empty() && self.check(&token::Semi) {\n             // Don't complain about bare semicolons after unclosed braces\n@@ -2620,7 +2619,6 @@ impl<'a> Parser<'a> {\n                 let exp_span = self.prev_token.span;\n                 // We permit `.. }` on the left-hand side of a destructuring assignment.\n                 if self.check(&token::CloseDelim(close_delim)) {\n-                    self.sess.gated_spans.gate(sym::destructuring_assignment, self.prev_token.span);\n                     base = ast::StructRest::Rest(self.prev_token.span.shrink_to_hi());\n                     break;\n                 }"}, {"sha": "7e3107cb3c64cb78ff2baf67bf1189aa36749156", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -877,11 +877,6 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         \"let \".to_string(),\n                         Applicability::MachineApplicable,\n                     );\n-                    if !self.sess().features_untracked().destructuring_assignment {\n-                        // We already emit an E0658 with a suggestion for `while let`, this is\n-                        // redundant output.\n-                        err.delay_as_bug();\n-                    }\n                     break;\n                 }\n                 hir::Node::Item(_)"}, {"sha": "9215b37b4f6f3f3f84558ea837946e62d118718f", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -137,7 +137,7 @@\n #![feature(cfg_target_has_atomic)]\n #![feature(const_fn_trait_bound)]\n #![feature(const_trait_impl)]\n-#![feature(destructuring_assignment)]\n+#![cfg_attr(bootstrap, feature(destructuring_assignment))]\n #![feature(dropck_eyepatch)]\n #![feature(exclusive_range_pattern)]\n #![feature(fundamental)]"}, {"sha": "f038c9ce7ba2b541da2b430a939e48a84a98f6ee", "filename": "src/test/ui/associated-types/associated-type-destructuring-assignment.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-type-destructuring-assignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-type-destructuring-assignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-type-destructuring-assignment.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,6 +1,5 @@\n // check-pass\n \n-#![feature(destructuring_assignment)]\n #![feature(more_qualified_paths)]\n \n enum E { V() }"}, {"sha": "4219f892debbcae188a6ca05906c7c7fe670243f", "filename": "src/test/ui/cross/cross-file-errors/main.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fcross%2Fcross-file-errors%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fcross%2Fcross-file-errors%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcross%2Fcross-file-errors%2Fmain.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -4,5 +4,4 @@ mod underscore;\n fn main() {\n     underscore!();\n     //~^ ERROR `_` can only be used on the left-hand side of an assignment\n-    //~| ERROR destructuring assignments are unstable\n }"}, {"sha": "293a300ed610355fd25c224e05f4630d9426262f", "filename": "src/test/ui/cross/cross-file-errors/main.stderr", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fcross%2Fcross-file-errors%2Fmain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fcross%2Fcross-file-errors%2Fmain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcross%2Fcross-file-errors%2Fmain.stderr?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,18 +1,3 @@\n-error[E0658]: destructuring assignments are unstable\n-  --> $DIR/underscore.rs:8:9\n-   |\n-LL |         _\n-   |         ^\n-   |\n-  ::: $DIR/main.rs:5:5\n-   |\n-LL |     underscore!();\n-   |     ------------- in this macro invocation\n-   |\n-   = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n-   = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n-   = note: this error originates in the macro `underscore` (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n error: in expressions, `_` can only be used on the left-hand side of an assignment\n   --> $DIR/underscore.rs:8:9\n    |\n@@ -26,6 +11,5 @@ LL |     underscore!();\n    |\n    = note: this error originates in the macro `underscore` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "53794783a3c87ed46e8ee1df21d71380d1bb903a", "filename": "src/test/ui/destructuring-assignment/bad-expr-lhs.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fbad-expr-lhs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fbad-expr-lhs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fbad-expr-lhs.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,12 +1,9 @@\n fn main() {\n     1 = 2; //~ ERROR invalid left-hand side of assignment\n     1 += 2; //~ ERROR invalid left-hand side of assignment\n-    (1, 2) = (3, 4); //~ ERROR destructuring assignments are unstable\n+    (1, 2) = (3, 4);\n+    //~^ ERROR invalid left-hand side of assignment\n     //~| ERROR invalid left-hand side of assignment\n-    //~| ERROR invalid left-hand side of assignment\n-\n-    let (a, b) = (1, 2);\n-    (a, b) = (3, 4); //~ ERROR destructuring assignments are unstable\n \n     None = Some(3); //~ ERROR invalid left-hand side of assignment\n }"}, {"sha": "d29867474805396cad6859f4c9dbc5cf1c8b40da", "filename": "src/test/ui/destructuring-assignment/bad-expr-lhs.stderr", "status": "modified", "additions": 3, "deletions": 25, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fbad-expr-lhs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fbad-expr-lhs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fbad-expr-lhs.stderr?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,25 +1,3 @@\n-error[E0658]: destructuring assignments are unstable\n-  --> $DIR/bad-expr-lhs.rs:4:12\n-   |\n-LL |     (1, 2) = (3, 4);\n-   |     ------ ^\n-   |     |\n-   |     cannot assign to this expression\n-   |\n-   = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n-   = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n-\n-error[E0658]: destructuring assignments are unstable\n-  --> $DIR/bad-expr-lhs.rs:9:12\n-   |\n-LL |     (a, b) = (3, 4);\n-   |     ------ ^\n-   |     |\n-   |     cannot assign to this expression\n-   |\n-   = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n-   = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n-\n error[E0070]: invalid left-hand side of assignment\n   --> $DIR/bad-expr-lhs.rs:2:7\n    |\n@@ -53,14 +31,14 @@ LL |     (1, 2) = (3, 4);\n    |         cannot assign to this expression\n \n error[E0070]: invalid left-hand side of assignment\n-  --> $DIR/bad-expr-lhs.rs:11:10\n+  --> $DIR/bad-expr-lhs.rs:8:10\n    |\n LL |     None = Some(3);\n    |     ---- ^\n    |     |\n    |     cannot assign to this expression\n \n-error: aborting due to 7 previous errors\n+error: aborting due to 5 previous errors\n \n-Some errors have detailed explanations: E0067, E0070, E0658.\n+Some errors have detailed explanations: E0067, E0070.\n For more information about an error, try `rustc --explain E0067`."}, {"sha": "ff867c000716e358d49ad2208ada44c8f13aa905", "filename": "src/test/ui/destructuring-assignment/default-match-bindings-forbidden.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fdefault-match-bindings-forbidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fdefault-match-bindings-forbidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fdefault-match-bindings-forbidden.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,5 +1,3 @@\n-#![feature(destructuring_assignment)]\n-\n fn main() {\n     let mut x = &0;\n     let mut y = &0;"}, {"sha": "3d472bf63094d90db1d3c17e423876b8b0406690", "filename": "src/test/ui/destructuring-assignment/default-match-bindings-forbidden.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fdefault-match-bindings-forbidden.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fdefault-match-bindings-forbidden.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fdefault-match-bindings-forbidden.stderr?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,5 +1,5 @@\n error[E0308]: mismatched types\n-  --> $DIR/default-match-bindings-forbidden.rs:6:5\n+  --> $DIR/default-match-bindings-forbidden.rs:4:5\n    |\n LL |     (x, y) = &(1, 2);\n    |     ^^^^^^   ------- this expression has type `&({integer}, {integer})`"}, {"sha": "79671054ca76cafbc33583dc154d44c9a1f22e74", "filename": "src/test/ui/destructuring-assignment/drop-order.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fdrop-order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fdrop-order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fdrop-order.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -2,7 +2,6 @@\n \n //! Test that let bindings and destructuring assignments have consistent drop orders\n \n-#![feature(destructuring_assignment)]\n #![allow(unused_variables, unused_assignments)]\n \n use std::cell::RefCell;"}, {"sha": "94b3a5ff9a7ed42e01c585aa1ba7473ec6f68786", "filename": "src/test/ui/destructuring-assignment/nested_destructure.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fnested_destructure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fnested_destructure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fnested_destructure.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,7 +1,5 @@\n // run-pass\n \n-#![feature(destructuring_assignment)]\n-\n struct Struct<S, T> {\n     a: S,\n     b: T,"}, {"sha": "c69edd42170e13f7c4cb7988d8f24eb2f2bb82de", "filename": "src/test/ui/destructuring-assignment/note-unsupported.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fnote-unsupported.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fnote-unsupported.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fnote-unsupported.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -3,25 +3,20 @@ struct S { x: u8, y: u8 }\n fn main() {\n     let (a, b) = (1, 2);\n \n-    (a, b) = (3, 4); //~ ERROR destructuring assignments are unstable\n+    (a, b) = (3, 4);\n     (a, b) += (3, 4); //~ ERROR invalid left-hand side of assignment\n     //~| ERROR binary assignment operation `+=` cannot be applied\n \n-    [a, b] = [3, 4]; //~ ERROR destructuring assignments are unstable\n+    [a, b] = [3, 4];\n     [a, b] += [3, 4]; //~ ERROR invalid left-hand side of assignment\n     //~| ERROR binary assignment operation `+=` cannot be applied\n \n     let s = S { x: 3, y: 4 };\n \n-    S { x: a, y: b } = s; //~ ERROR destructuring assignments are unstable\n+    S { x: a, y: b } = s;\n     S { x: a, y: b } += s; //~ ERROR invalid left-hand side of assignment\n     //~| ERROR binary assignment operation `+=` cannot be applied\n \n     S { x: a, ..s } = S { x: 3, y: 4 };\n     //~^ ERROR functional record updates are not allowed in destructuring assignments\n-    //~| ERROR destructuring assignments are unstable\n-\n-    let c = 3;\n-\n-    ((a, b), c) = ((3, 4), 5); //~ ERROR destructuring assignments are unstable\n }"}, {"sha": "3e2282743bfce636b0f45eac01402118f42d8a83", "filename": "src/test/ui/destructuring-assignment/note-unsupported.stderr", "status": "modified", "additions": 2, "deletions": 57, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fnote-unsupported.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fnote-unsupported.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fnote-unsupported.stderr?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,64 +1,9 @@\n-error[E0658]: destructuring assignments are unstable\n-  --> $DIR/note-unsupported.rs:6:12\n-   |\n-LL |     (a, b) = (3, 4);\n-   |     ------ ^\n-   |     |\n-   |     cannot assign to this expression\n-   |\n-   = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n-   = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n-\n-error[E0658]: destructuring assignments are unstable\n-  --> $DIR/note-unsupported.rs:10:12\n-   |\n-LL |     [a, b] = [3, 4];\n-   |     ------ ^\n-   |     |\n-   |     cannot assign to this expression\n-   |\n-   = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n-   = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n-\n-error[E0658]: destructuring assignments are unstable\n-  --> $DIR/note-unsupported.rs:16:22\n-   |\n-LL |     S { x: a, y: b } = s;\n-   |     ---------------- ^\n-   |     |\n-   |     cannot assign to this expression\n-   |\n-   = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n-   = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n-\n-error[E0658]: destructuring assignments are unstable\n-  --> $DIR/note-unsupported.rs:20:21\n-   |\n-LL |     S { x: a, ..s } = S { x: 3, y: 4 };\n-   |     --------------- ^\n-   |     |\n-   |     cannot assign to this expression\n-   |\n-   = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n-   = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n-\n error: functional record updates are not allowed in destructuring assignments\n   --> $DIR/note-unsupported.rs:20:17\n    |\n LL |     S { x: a, ..s } = S { x: 3, y: 4 };\n    |                 ^ help: consider removing the trailing pattern\n \n-error[E0658]: destructuring assignments are unstable\n-  --> $DIR/note-unsupported.rs:26:17\n-   |\n-LL |     ((a, b), c) = ((3, 4), 5);\n-   |     ----------- ^\n-   |     |\n-   |     cannot assign to this expression\n-   |\n-   = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n-   = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n-\n error[E0368]: binary assignment operation `+=` cannot be applied to type `({integer}, {integer})`\n   --> $DIR/note-unsupported.rs:7:5\n    |\n@@ -124,7 +69,7 @@ LL |     S { x: a, y: b } += s;\n    |     |\n    |     cannot assign to this expression\n \n-error: aborting due to 12 previous errors\n+error: aborting due to 7 previous errors\n \n-Some errors have detailed explanations: E0067, E0368, E0658.\n+Some errors have detailed explanations: E0067, E0368.\n For more information about an error, try `rustc --explain E0067`."}, {"sha": "762c4b5e8ea4a676be36bf96423a75ccc520931c", "filename": "src/test/ui/destructuring-assignment/slice_destructure.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fslice_destructure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fslice_destructure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fslice_destructure.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,7 +1,5 @@\n // run-pass\n \n-#![feature(destructuring_assignment)]\n-\n fn main() {\n   let (mut a, mut b);\n   [a, b] = [0, 1];"}, {"sha": "33b09eb349da08944fa443c92b174a044cc75d31", "filename": "src/test/ui/destructuring-assignment/slice_destructure_fail.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fslice_destructure_fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fslice_destructure_fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fslice_destructure_fail.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,5 +1,3 @@\n-#![feature(destructuring_assignment)]\n-\n fn main() {\n   let (mut a, mut b);\n   [a, .., b, ..] = [0, 1]; //~ ERROR `..` can only be used once per slice pattern"}, {"sha": "92c86febac440fcdb3b44e3db9efd9f828284e7d", "filename": "src/test/ui/destructuring-assignment/slice_destructure_fail.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fslice_destructure_fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fslice_destructure_fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fslice_destructure_fail.stderr?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,19 +1,19 @@\n error: `..` can only be used once per slice pattern\n-  --> $DIR/slice_destructure_fail.rs:5:14\n+  --> $DIR/slice_destructure_fail.rs:3:14\n    |\n LL |   [a, .., b, ..] = [0, 1];\n    |       --     ^^ can only be used once per slice pattern\n    |       |\n    |       previously used here\n \n error[E0527]: pattern requires 3 elements but array has 2\n-  --> $DIR/slice_destructure_fail.rs:6:3\n+  --> $DIR/slice_destructure_fail.rs:4:3\n    |\n LL |   [a, a, b] = [1, 2];\n    |   ^^^^^^^^^ expected 2 elements\n \n error[E0527]: pattern requires 1 element but array has 2\n-  --> $DIR/slice_destructure_fail.rs:7:3\n+  --> $DIR/slice_destructure_fail.rs:5:3\n    |\n LL |   [_] = [1, 2];\n    |   ^^^ expected 2 elements"}, {"sha": "8cceaadd7b929e8ee55c00343212327a1f0d8a7e", "filename": "src/test/ui/destructuring-assignment/struct_destructure.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fstruct_destructure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fstruct_destructure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fstruct_destructure.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,6 +1,5 @@\n // run-pass\n \n-#![feature(destructuring_assignment)]\n struct Struct<S, T> {\n     a: S,\n     b: T,"}, {"sha": "c001fccd4cbfb1d3af76378211d4eedd7564b4e1", "filename": "src/test/ui/destructuring-assignment/struct_destructure_fail.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fstruct_destructure_fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fstruct_destructure_fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fstruct_destructure_fail.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,4 +1,3 @@\n-#![feature(destructuring_assignment)]\n struct Struct<S, T> {\n     a: S,\n     b: T,"}, {"sha": "ae7b3d1e5a928473104b45b4ada6563a4d25ceb7", "filename": "src/test/ui/destructuring-assignment/struct_destructure_fail.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fstruct_destructure_fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fstruct_destructure_fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fstruct_destructure_fail.stderr?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,31 +1,31 @@\n error: expected identifier, found reserved identifier `_`\n-  --> $DIR/struct_destructure_fail.rs:12:17\n+  --> $DIR/struct_destructure_fail.rs:11:17\n    |\n LL |     Struct { a, _ } = Struct { a: 1, b: 2 };\n    |     ------      ^ expected identifier, found reserved identifier\n    |     |\n    |     while parsing this struct\n \n error: functional record updates are not allowed in destructuring assignments\n-  --> $DIR/struct_destructure_fail.rs:14:19\n+  --> $DIR/struct_destructure_fail.rs:13:19\n    |\n LL |     Struct { a, ..d } = Struct { a: 1, b: 2 };\n    |                   ^ help: consider removing the trailing pattern\n \n error: base expression required after `..`\n-  --> $DIR/struct_destructure_fail.rs:16:19\n+  --> $DIR/struct_destructure_fail.rs:15:19\n    |\n LL |     Struct { a, .. };\n    |                   ^ add a base expression here\n \n error[E0026]: struct `Struct` does not have a field named `c`\n-  --> $DIR/struct_destructure_fail.rs:11:20\n+  --> $DIR/struct_destructure_fail.rs:10:20\n    |\n LL |     Struct { a, b, c } = Struct { a: 0, b: 1 };\n    |                    ^ struct `Struct` does not have this field\n \n error[E0027]: pattern does not mention field `b`\n-  --> $DIR/struct_destructure_fail.rs:12:5\n+  --> $DIR/struct_destructure_fail.rs:11:5\n    |\n LL |     Struct { a, _ } = Struct { a: 1, b: 2 };\n    |     ^^^^^^^^^^^^^^^ missing field `b`"}, {"sha": "2a8584029d0e260b2213c0ff0305bbf2a5c34469", "filename": "src/test/ui/destructuring-assignment/tuple_destructure.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_destructure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_destructure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_destructure.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,7 +1,5 @@\n // run-pass\n \n-#![feature(destructuring_assignment)]\n-\n fn main() {\n     let (mut a, mut b);\n     (a, b) = (0, 1);"}, {"sha": "4e3172d1973b2d04fef09e8862408cedfd48d4d5", "filename": "src/test/ui/destructuring-assignment/tuple_destructure_fail.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_destructure_fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_destructure_fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_destructure_fail.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,5 +1,3 @@\n-#![feature(destructuring_assignment)]\n-\n const C: i32 = 1;\n \n fn main() {"}, {"sha": "55b08b74af0620a0edd598c7aded9e46d23825f1", "filename": "src/test/ui/destructuring-assignment/tuple_destructure_fail.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_destructure_fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_destructure_fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_destructure_fail.stderr?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,13 +1,13 @@\n error: `..` can only be used once per tuple pattern\n-  --> $DIR/tuple_destructure_fail.rs:7:16\n+  --> $DIR/tuple_destructure_fail.rs:5:16\n    |\n LL |     (a, .., b, ..) = (0, 1);\n    |         --     ^^ can only be used once per tuple pattern\n    |         |\n    |         previously used here\n \n error[E0308]: mismatched types\n-  --> $DIR/tuple_destructure_fail.rs:8:5\n+  --> $DIR/tuple_destructure_fail.rs:6:5\n    |\n LL |     (a, a, b) = (1, 2);\n    |     ^^^^^^^^^   ------ this expression has type `({integer}, {integer})`\n@@ -18,15 +18,15 @@ LL |     (a, a, b) = (1, 2);\n              found tuple `(_, _, _)`\n \n error[E0070]: invalid left-hand side of assignment\n-  --> $DIR/tuple_destructure_fail.rs:9:13\n+  --> $DIR/tuple_destructure_fail.rs:7:13\n    |\n LL |     (C, ..) = (0,1);\n    |      -      ^\n    |      |\n    |      cannot assign to this expression\n \n error[E0308]: mismatched types\n-  --> $DIR/tuple_destructure_fail.rs:10:5\n+  --> $DIR/tuple_destructure_fail.rs:8:5\n    |\n LL |     (_,) = (1, 2);\n    |     ^^^^   ------ this expression has type `({integer}, {integer})`"}, {"sha": "07b5f7a314e30186bd12807793f5a7f00b03d5dd", "filename": "src/test/ui/destructuring-assignment/tuple_struct_destructure.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,7 +1,5 @@\n // run-pass\n \n-#![feature(destructuring_assignment)]\n-\n struct TupleStruct<S, T>(S, T);\n \n impl<S, T> TupleStruct<S, T> {"}, {"sha": "845f867d7b81ff797a7423e3049eae7d0218d39c", "filename": "src/test/ui/destructuring-assignment/tuple_struct_destructure_fail.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure_fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure_fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure_fail.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,5 +1,3 @@\n-#![feature(destructuring_assignment)]\n-\n struct TupleStruct<S, T>(S, T);\n \n enum Enum<S, T> {"}, {"sha": "5cc7acba3f334a817cc8d164bc3373d24a722a91", "filename": "src/test/ui/destructuring-assignment/tuple_struct_destructure_fail.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure_fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure_fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure_fail.stderr?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,21 +1,21 @@\n error: `..` can only be used once per tuple struct or variant pattern\n-  --> $DIR/tuple_struct_destructure_fail.rs:25:27\n+  --> $DIR/tuple_struct_destructure_fail.rs:23:27\n    |\n LL |     TupleStruct(a, .., b, ..) = TupleStruct(0, 1);\n    |                    --     ^^ can only be used once per tuple struct or variant pattern\n    |                    |\n    |                    previously used here\n \n error: `..` can only be used once per tuple struct or variant pattern\n-  --> $DIR/tuple_struct_destructure_fail.rs:27:35\n+  --> $DIR/tuple_struct_destructure_fail.rs:25:35\n    |\n LL |     Enum::SingleVariant(a, .., b, ..) = Enum::SingleVariant(0, 1);\n    |                            --     ^^ can only be used once per tuple struct or variant pattern\n    |                            |\n    |                            previously used here\n \n error[E0023]: this pattern has 3 fields, but the corresponding tuple struct has 2 fields\n-  --> $DIR/tuple_struct_destructure_fail.rs:30:17\n+  --> $DIR/tuple_struct_destructure_fail.rs:28:17\n    |\n LL | struct TupleStruct<S, T>(S, T);\n    |                          -  - tuple struct has 2 fields\n@@ -24,7 +24,7 @@ LL |     TupleStruct(a, a, b) = TupleStruct(1, 2);\n    |                 ^  ^  ^ expected 2 fields, found 3\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple struct has 2 fields\n-  --> $DIR/tuple_struct_destructure_fail.rs:32:17\n+  --> $DIR/tuple_struct_destructure_fail.rs:30:17\n    |\n LL | struct TupleStruct<S, T>(S, T);\n    |                          -  - tuple struct has 2 fields\n@@ -42,7 +42,7 @@ LL |     TupleStruct(..) = TupleStruct(1, 2);\n    |                 ~~\n \n error[E0023]: this pattern has 3 fields, but the corresponding tuple variant has 2 fields\n-  --> $DIR/tuple_struct_destructure_fail.rs:34:25\n+  --> $DIR/tuple_struct_destructure_fail.rs:32:25\n    |\n LL |     SingleVariant(S, T)\n    |                   -  - tuple variant has 2 fields\n@@ -51,7 +51,7 @@ LL |     Enum::SingleVariant(a, a, b) = Enum::SingleVariant(1, 2);\n    |                         ^  ^  ^ expected 2 fields, found 3\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n-  --> $DIR/tuple_struct_destructure_fail.rs:36:25\n+  --> $DIR/tuple_struct_destructure_fail.rs:34:25\n    |\n LL |     SingleVariant(S, T)\n    |                   -  - tuple variant has 2 fields\n@@ -69,23 +69,23 @@ LL |     Enum::SingleVariant(..) = Enum::SingleVariant(1, 2);\n    |                         ~~\n \n error[E0070]: invalid left-hand side of assignment\n-  --> $DIR/tuple_struct_destructure_fail.rs:40:12\n+  --> $DIR/tuple_struct_destructure_fail.rs:38:12\n    |\n LL |     test() = TupleStruct(0, 0);\n    |     ------ ^\n    |     |\n    |     cannot assign to this expression\n \n error[E0070]: invalid left-hand side of assignment\n-  --> $DIR/tuple_struct_destructure_fail.rs:42:14\n+  --> $DIR/tuple_struct_destructure_fail.rs:40:14\n    |\n LL |     (test)() = TupleStruct(0, 0);\n    |     -------- ^\n    |     |\n    |     cannot assign to this expression\n \n error[E0070]: invalid left-hand side of assignment\n-  --> $DIR/tuple_struct_destructure_fail.rs:44:38\n+  --> $DIR/tuple_struct_destructure_fail.rs:42:38\n    |\n LL |     <Alias::<isize> as Test>::test() = TupleStruct(0, 0);\n    |     -------------------------------- ^"}, {"sha": "4ed4f56702c3208df595eef2c12b541743852698", "filename": "src/test/ui/destructuring-assignment/underscore-range-expr-gating.rs", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d594910a2da12f158477b4c7281716f535cfa3de/src%2Ftest%2Fui%2Fdestructuring-assignment%2Funderscore-range-expr-gating.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d594910a2da12f158477b4c7281716f535cfa3de/src%2Ftest%2Fui%2Fdestructuring-assignment%2Funderscore-range-expr-gating.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Funderscore-range-expr-gating.rs?ref=d594910a2da12f158477b4c7281716f535cfa3de", "patch": "@@ -1,10 +0,0 @@\n-fn main() {}\n-\n-struct S { x : u32 }\n-\n-#[cfg(FALSE)]\n-fn foo() {\n-    _; //~ ERROR destructuring assignments are unstable\n-\n-    S { x: 5, .. }; //~ ERROR destructuring assignments are unstable\n-}"}, {"sha": "a5ed761a01c33f31df6fa9deae7e4f8654ebb1cc", "filename": "src/test/ui/destructuring-assignment/underscore-range-expr-gating.stderr", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d594910a2da12f158477b4c7281716f535cfa3de/src%2Ftest%2Fui%2Fdestructuring-assignment%2Funderscore-range-expr-gating.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d594910a2da12f158477b4c7281716f535cfa3de/src%2Ftest%2Fui%2Fdestructuring-assignment%2Funderscore-range-expr-gating.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Funderscore-range-expr-gating.stderr?ref=d594910a2da12f158477b4c7281716f535cfa3de", "patch": "@@ -1,21 +0,0 @@\n-error[E0658]: destructuring assignments are unstable\n-  --> $DIR/underscore-range-expr-gating.rs:7:5\n-   |\n-LL |     _;\n-   |     ^\n-   |\n-   = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n-   = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n-\n-error[E0658]: destructuring assignments are unstable\n-  --> $DIR/underscore-range-expr-gating.rs:9:15\n-   |\n-LL |     S { x: 5, .. };\n-   |               ^^\n-   |\n-   = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n-   = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n-\n-error: aborting due to 2 previous errors\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "390f44b8aa5145fec71de3e0682d6245b9195852", "filename": "src/test/ui/destructuring-assignment/warn-unused-duplication.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fwarn-unused-duplication.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fwarn-unused-duplication.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fwarn-unused-duplication.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,7 +1,5 @@\n // run-pass\n \n-#![feature(destructuring_assignment)]\n-\n #![warn(unused_assignments)]\n \n fn main() {"}, {"sha": "1df7a5f224f4f6324e51a921a02262f53f1fd1cf", "filename": "src/test/ui/destructuring-assignment/warn-unused-duplication.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fwarn-unused-duplication.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fwarn-unused-duplication.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fwarn-unused-duplication.stderr?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,11 +1,11 @@\n warning: value assigned to `a` is never read\n-  --> $DIR/warn-unused-duplication.rs:11:6\n+  --> $DIR/warn-unused-duplication.rs:9:6\n    |\n LL |     (a, a) = (0, 1);\n    |      ^\n    |\n note: the lint level is defined here\n-  --> $DIR/warn-unused-duplication.rs:5:9\n+  --> $DIR/warn-unused-duplication.rs:3:9\n    |\n LL | #![warn(unused_assignments)]\n    |         ^^^^^^^^^^^^^^^^^^"}, {"sha": "e7801f0e8ec2b760116bb95daca1eb08e0f2ccb3", "filename": "src/test/ui/feature-gates/feature-gate-destructuring_assignment.rs", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d594910a2da12f158477b4c7281716f535cfa3de/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-destructuring_assignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d594910a2da12f158477b4c7281716f535cfa3de/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-destructuring_assignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-destructuring_assignment.rs?ref=d594910a2da12f158477b4c7281716f535cfa3de", "patch": "@@ -1,4 +0,0 @@\n-fn main() {\n-    let (a, b) = (0, 1);\n-    (a, b) = (2, 3); //~ ERROR destructuring assignments are unstable\n-}"}, {"sha": "62e71decb32a0bab1e229e52dc196819d6a4d4e3", "filename": "src/test/ui/feature-gates/feature-gate-destructuring_assignment.stderr", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d594910a2da12f158477b4c7281716f535cfa3de/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-destructuring_assignment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d594910a2da12f158477b4c7281716f535cfa3de/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-destructuring_assignment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-destructuring_assignment.stderr?ref=d594910a2da12f158477b4c7281716f535cfa3de", "patch": "@@ -1,14 +0,0 @@\n-error[E0658]: destructuring assignments are unstable\n-  --> $DIR/feature-gate-destructuring_assignment.rs:3:12\n-   |\n-LL |     (a, b) = (2, 3);\n-   |     ------ ^\n-   |     |\n-   |     cannot assign to this expression\n-   |\n-   = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n-   = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "0e835d49c6d584b3509568de092b70eb21192733", "filename": "src/test/ui/issues/issue-77218/issue-77218-2.fixed", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fissues%2Fissue-77218%2Fissue-77218-2.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fissues%2Fissue-77218%2Fissue-77218-2.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-77218%2Fissue-77218-2.fixed?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,5 +1,4 @@\n // run-rustfix\n-#![feature(destructuring_assignment)]\n fn main() {\n     let value = [7u8];\n     while let Some(0) = value.get(0) { //~ ERROR invalid left-hand side of assignment"}, {"sha": "01dca1ae16c781b71229deb4a2132994c207473a", "filename": "src/test/ui/issues/issue-77218/issue-77218-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fissues%2Fissue-77218%2Fissue-77218-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fissues%2Fissue-77218%2Fissue-77218-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-77218%2Fissue-77218-2.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,5 +1,4 @@\n // run-rustfix\n-#![feature(destructuring_assignment)]\n fn main() {\n     let value = [7u8];\n     while Some(0) = value.get(0) { //~ ERROR invalid left-hand side of assignment"}, {"sha": "58c1c18f9a9b0422d24584a1f6da483c6330f2fc", "filename": "src/test/ui/issues/issue-77218/issue-77218-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fissues%2Fissue-77218%2Fissue-77218-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fissues%2Fissue-77218%2Fissue-77218-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-77218%2Fissue-77218-2.stderr?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,5 +1,5 @@\n error[E0070]: invalid left-hand side of assignment\n-  --> $DIR/issue-77218-2.rs:5:19\n+  --> $DIR/issue-77218-2.rs:4:19\n    |\n LL |     while Some(0) = value.get(0) {\n    |                -  ^"}, {"sha": "4907b43b9a9855a0835890767ffbeab6a8c2f44f", "filename": "src/test/ui/issues/issue-77218/issue-77218.fixed", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fissues%2Fissue-77218%2Fissue-77218.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fissues%2Fissue-77218%2Fissue-77218.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-77218%2Fissue-77218.fixed?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n fn main() {\n     let value = [7u8];\n-    while let Some(0) = value.get(0) { //~ ERROR destructuring assignments are unstable\n-    }\n+    while let Some(0) = value.get(0) {} //~ ERROR invalid left-hand side of assignment\n }"}, {"sha": "0ed154bf4d80849dd78aefa9a72c05ebbb4be49f", "filename": "src/test/ui/issues/issue-77218/issue-77218.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fissues%2Fissue-77218%2Fissue-77218.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fissues%2Fissue-77218%2Fissue-77218.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-77218%2Fissue-77218.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n fn main() {\n     let value = [7u8];\n-    while Some(0) = value.get(0) { //~ ERROR destructuring assignments are unstable\n-    }\n+    while Some(0) = value.get(0) {} //~ ERROR invalid left-hand side of assignment\n }"}, {"sha": "eda635646dfa420e98f4f985b90d4df73dbfb237", "filename": "src/test/ui/issues/issue-77218/issue-77218.stderr", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fissues%2Fissue-77218%2Fissue-77218.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fissues%2Fissue-77218%2Fissue-77218.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-77218%2Fissue-77218.stderr?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,18 +1,16 @@\n-error[E0658]: destructuring assignments are unstable\n+error[E0070]: invalid left-hand side of assignment\n   --> $DIR/issue-77218.rs:4:19\n    |\n-LL |     while Some(0) = value.get(0) {\n-   |           ------- ^\n-   |           |\n-   |           cannot assign to this expression\n+LL |     while Some(0) = value.get(0) {}\n+   |                -  ^\n+   |                |\n+   |                cannot assign to this expression\n    |\n-   = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n-   = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n help: you might have meant to use pattern destructuring\n    |\n-LL |     while let Some(0) = value.get(0) {\n+LL |     while let Some(0) = value.get(0) {}\n    |           +++\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0658`.\n+For more information about this error, try `rustc --explain E0070`."}, {"sha": "ae1dbfeea9340142b6f066bd32d7cecbe7a2a37c", "filename": "src/test/ui/suggestions/fn-or-tuple-struct-with-underscore-args.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fsuggestions%2Ffn-or-tuple-struct-with-underscore-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fsuggestions%2Ffn-or-tuple-struct-with-underscore-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ffn-or-tuple-struct-with-underscore-args.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -10,16 +10,10 @@ fn main() {\n     let _: usize = foo(_, _);\n     //~^ ERROR `_` can only be used on the left-hand side of an assignment\n     //~| ERROR `_` can only be used on the left-hand side of an assignment\n-    //~| ERROR destructuring assignments are unstable\n-    //~| ERROR destructuring assignments are unstable\n     let _: S = S(_, _);\n     //~^ ERROR `_` can only be used on the left-hand side of an assignment\n     //~| ERROR `_` can only be used on the left-hand side of an assignment\n-    //~| ERROR destructuring assignments are unstable\n-    //~| ERROR destructuring assignments are unstable\n     let _: usize = T::baz(_, _);\n     //~^ ERROR `_` can only be used on the left-hand side of an assignment\n     //~| ERROR `_` can only be used on the left-hand side of an assignment\n-    //~| ERROR destructuring assignments are unstable\n-    //~| ERROR destructuring assignments are unstable\n }"}, {"sha": "aa562030619896512126044dc393cb2c9ce53254", "filename": "src/test/ui/suggestions/fn-or-tuple-struct-with-underscore-args.stderr", "status": "modified", "additions": 5, "deletions": 60, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fsuggestions%2Ffn-or-tuple-struct-with-underscore-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fsuggestions%2Ffn-or-tuple-struct-with-underscore-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ffn-or-tuple-struct-with-underscore-args.stderr?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,57 +1,3 @@\n-error[E0658]: destructuring assignments are unstable\n-  --> $DIR/fn-or-tuple-struct-with-underscore-args.rs:10:24\n-   |\n-LL |     let _: usize = foo(_, _);\n-   |                        ^\n-   |\n-   = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n-   = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n-\n-error[E0658]: destructuring assignments are unstable\n-  --> $DIR/fn-or-tuple-struct-with-underscore-args.rs:10:27\n-   |\n-LL |     let _: usize = foo(_, _);\n-   |                           ^\n-   |\n-   = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n-   = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n-\n-error[E0658]: destructuring assignments are unstable\n-  --> $DIR/fn-or-tuple-struct-with-underscore-args.rs:15:18\n-   |\n-LL |     let _: S = S(_, _);\n-   |                  ^\n-   |\n-   = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n-   = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n-\n-error[E0658]: destructuring assignments are unstable\n-  --> $DIR/fn-or-tuple-struct-with-underscore-args.rs:15:21\n-   |\n-LL |     let _: S = S(_, _);\n-   |                     ^\n-   |\n-   = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n-   = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n-\n-error[E0658]: destructuring assignments are unstable\n-  --> $DIR/fn-or-tuple-struct-with-underscore-args.rs:20:27\n-   |\n-LL |     let _: usize = T::baz(_, _);\n-   |                           ^\n-   |\n-   = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n-   = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n-\n-error[E0658]: destructuring assignments are unstable\n-  --> $DIR/fn-or-tuple-struct-with-underscore-args.rs:20:30\n-   |\n-LL |     let _: usize = T::baz(_, _);\n-   |                              ^\n-   |\n-   = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n-   = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n-\n error: in expressions, `_` can only be used on the left-hand side of an assignment\n   --> $DIR/fn-or-tuple-struct-with-underscore-args.rs:10:24\n    |\n@@ -65,29 +11,28 @@ LL |     let _: usize = foo(_, _);\n    |                           ^ `_` not allowed here\n \n error: in expressions, `_` can only be used on the left-hand side of an assignment\n-  --> $DIR/fn-or-tuple-struct-with-underscore-args.rs:15:18\n+  --> $DIR/fn-or-tuple-struct-with-underscore-args.rs:13:18\n    |\n LL |     let _: S = S(_, _);\n    |                  ^ `_` not allowed here\n \n error: in expressions, `_` can only be used on the left-hand side of an assignment\n-  --> $DIR/fn-or-tuple-struct-with-underscore-args.rs:15:21\n+  --> $DIR/fn-or-tuple-struct-with-underscore-args.rs:13:21\n    |\n LL |     let _: S = S(_, _);\n    |                     ^ `_` not allowed here\n \n error: in expressions, `_` can only be used on the left-hand side of an assignment\n-  --> $DIR/fn-or-tuple-struct-with-underscore-args.rs:20:27\n+  --> $DIR/fn-or-tuple-struct-with-underscore-args.rs:16:27\n    |\n LL |     let _: usize = T::baz(_, _);\n    |                           ^ `_` not allowed here\n \n error: in expressions, `_` can only be used on the left-hand side of an assignment\n-  --> $DIR/fn-or-tuple-struct-with-underscore-args.rs:20:30\n+  --> $DIR/fn-or-tuple-struct-with-underscore-args.rs:16:30\n    |\n LL |     let _: usize = T::baz(_, _);\n    |                              ^ `_` not allowed here\n \n-error: aborting due to 12 previous errors\n+error: aborting due to 6 previous errors\n \n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "375bd3f03c920939c2dee1cf9cdca437bdd1c3c8", "filename": "src/test/ui/suggestions/if-let-typo.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fsuggestions%2Fif-let-typo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fsuggestions%2Fif-let-typo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fif-let-typo.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -3,12 +3,9 @@ fn main() {\n     let bar = None;\n     if Some(x) = foo {} //~ ERROR cannot find value `x` in this scope\n     //~^ ERROR mismatched types\n-    //~^^ ERROR destructuring assignments are unstable\n     if Some(foo) = bar {} //~ ERROR mismatched types\n-    //~^ ERROR destructuring assignments are unstable\n     if 3 = foo {} //~ ERROR mismatched types\n     if Some(3) = foo {} //~ ERROR mismatched types\n-    //~^ ERROR destructuring assignments are unstable\n-    //~^^ ERROR invalid left-hand side of assignment\n+    //~^ ERROR invalid left-hand side of assignment\n     if x = 5 {}  //~ ERROR cannot find value `x` in this scope\n }"}, {"sha": "3d9ac40ec367bf15ff54bb4fa6f075878abdf44b", "filename": "src/test/ui/suggestions/if-let-typo.stderr", "status": "modified", "additions": 7, "deletions": 40, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fsuggestions%2Fif-let-typo.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fsuggestions%2Fif-let-typo.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fif-let-typo.stderr?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -10,7 +10,7 @@ LL |     if let Some(x) = foo {}\n    |        +++\n \n error[E0425]: cannot find value `x` in this scope\n-  --> $DIR/if-let-typo.rs:13:8\n+  --> $DIR/if-let-typo.rs:10:8\n    |\n LL |     if x = 5 {}\n    |        ^ not found in this scope\n@@ -20,72 +20,39 @@ help: you might have meant to use pattern matching\n LL |     if let x = 5 {}\n    |        +++\n \n-error[E0658]: destructuring assignments are unstable\n-  --> $DIR/if-let-typo.rs:4:16\n-   |\n-LL |     if Some(x) = foo {}\n-   |        ------- ^\n-   |        |\n-   |        cannot assign to this expression\n-   |\n-   = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n-   = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n-\n-error[E0658]: destructuring assignments are unstable\n-  --> $DIR/if-let-typo.rs:7:18\n-   |\n-LL |     if Some(foo) = bar {}\n-   |        --------- ^\n-   |        |\n-   |        cannot assign to this expression\n-   |\n-   = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n-   = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n-\n-error[E0658]: destructuring assignments are unstable\n-  --> $DIR/if-let-typo.rs:10:16\n-   |\n-LL |     if Some(3) = foo {}\n-   |        ------- ^\n-   |        |\n-   |        cannot assign to this expression\n-   |\n-   = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n-   = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n-\n error[E0308]: mismatched types\n   --> $DIR/if-let-typo.rs:4:8\n    |\n LL |     if Some(x) = foo {}\n    |        ^^^^^^^^^^^^^ expected `bool`, found `()`\n \n error[E0308]: mismatched types\n-  --> $DIR/if-let-typo.rs:7:8\n+  --> $DIR/if-let-typo.rs:6:8\n    |\n LL |     if Some(foo) = bar {}\n    |        ^^^^^^^^^^^^^^^ expected `bool`, found `()`\n \n error[E0308]: mismatched types\n-  --> $DIR/if-let-typo.rs:9:8\n+  --> $DIR/if-let-typo.rs:7:8\n    |\n LL |     if 3 = foo {}\n    |        ^^^^^^^ expected `bool`, found `()`\n \n error[E0070]: invalid left-hand side of assignment\n-  --> $DIR/if-let-typo.rs:10:16\n+  --> $DIR/if-let-typo.rs:8:16\n    |\n LL |     if Some(3) = foo {}\n    |             -  ^\n    |             |\n    |             cannot assign to this expression\n \n error[E0308]: mismatched types\n-  --> $DIR/if-let-typo.rs:10:8\n+  --> $DIR/if-let-typo.rs:8:8\n    |\n LL |     if Some(3) = foo {}\n    |        ^^^^^^^^^^^^^ expected `bool`, found `()`\n \n-error: aborting due to 10 previous errors\n+error: aborting due to 7 previous errors\n \n-Some errors have detailed explanations: E0070, E0308, E0425, E0658.\n+Some errors have detailed explanations: E0070, E0308, E0425.\n For more information about an error, try `rustc --explain E0070`."}, {"sha": "a02b3230689e8d2f25460b932e941f4a258bed82", "filename": "src/test/ui/weird-exprs.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fweird-exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftest%2Fui%2Fweird-exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fweird-exprs.rs?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,7 +1,6 @@\n // run-pass\n \n #![feature(generators)]\n-#![feature(destructuring_assignment)]\n \n #![allow(non_camel_case_types)]\n #![allow(dead_code)]"}, {"sha": "7ffbd7a64b341fdb9cf27bddd90b50a49edec5d9", "filename": "src/tools/clippy/tests/ui/crashes/ice-6250.stderr", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d95f749f14a84006273930e155a76259c22660c5/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-6250.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d95f749f14a84006273930e155a76259c22660c5/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-6250.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-6250.stderr?ref=d95f749f14a84006273930e155a76259c22660c5", "patch": "@@ -1,14 +1,3 @@\n-error[E0658]: destructuring assignments are unstable\n-  --> $DIR/ice-6250.rs:12:25\n-   |\n-LL |         Some(reference) = cache.data.get(key) {\n-   |         --------------- ^\n-   |         |\n-   |         cannot assign to this expression\n-   |\n-   = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n-   = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n-\n error[E0601]: `main` function not found in crate `ice_6250`\n   --> $DIR/ice-6250.rs:4:1\n    |\n@@ -41,7 +30,7 @@ error[E0308]: mismatched types\n LL |         Some(reference) = cache.data.get(key) {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `bool`, found `()`\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 3 previous errors\n \n-Some errors have detailed explanations: E0308, E0601, E0658.\n+Some errors have detailed explanations: E0308, E0601.\n For more information about an error, try `rustc --explain E0308`."}]}