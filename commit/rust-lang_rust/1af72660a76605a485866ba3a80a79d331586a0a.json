{"sha": "1af72660a76605a485866ba3a80a79d331586a0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhZjcyNjYwYTc2NjA1YTQ4NTg2NmJhM2E4MGE3OWQzMzE1ODZhMGE=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2015-06-13T20:34:03Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2015-06-15T15:27:35Z"}, "message": "Don't call instantiate_type_scheme during method probing\n\nIt can introduce obligations to the fulfillment context, which would\nincorrectly still remain after the probe finished.\n\nFixes #25679.", "tree": {"sha": "8f31bacff0b661338f7c5ea9124d3e06b23d2dd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f31bacff0b661338f7c5ea9124d3e06b23d2dd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1af72660a76605a485866ba3a80a79d331586a0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1af72660a76605a485866ba3a80a79d331586a0a", "html_url": "https://github.com/rust-lang/rust/commit/1af72660a76605a485866ba3a80a79d331586a0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1af72660a76605a485866ba3a80a79d331586a0a/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d82fb55dbb9b28798ea7c2004fa91fe3ae23b86", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d82fb55dbb9b28798ea7c2004fa91fe3ae23b86", "html_url": "https://github.com/rust-lang/rust/commit/0d82fb55dbb9b28798ea7c2004fa91fe3ae23b86"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "88c77e88b9bf2e1ecec7a5e377ae33e41af3faf9", "filename": "src/librustc_typeck/check/method/probe.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1af72660a76605a485866ba3a80a79d331586a0a/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af72660a76605a485866ba3a80a79d331586a0a/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs?ref=1af72660a76605a485866ba3a80a79d331586a0a", "patch": "@@ -398,11 +398,19 @@ impl<'a,'tcx> ProbeContext<'a,'tcx> {\n         }\n \n         let (impl_ty, impl_substs) = self.impl_ty_and_substs(impl_def_id);\n-        let impl_ty = self.fcx.instantiate_type_scheme(self.span, &impl_substs, &impl_ty);\n+\n+        // We can't use instantiate_type_scheme here as it will pollute\n+        // the fcx's fulfillment context if this probe is rolled back.\n+        let cause = traits::ObligationCause::misc(self.span, self.fcx.body_id);\n+        let mut selcx = &mut traits::SelectionContext::new(self.fcx.infcx(), self.fcx);\n+        let traits::Normalized { value: impl_ty, .. } =\n+            traits::normalize(selcx, cause, &impl_ty.subst(self.tcx(), &impl_substs));\n \n         // Determine the receiver type that the method itself expects.\n         let xform_self_ty =\n             self.xform_self_ty(&item, impl_ty, &impl_substs);\n+        debug!(\"assemble_inherent_impl_probe: self ty = {:?}\",\n+               xform_self_ty.repr(self.tcx()));\n \n         self.inherent_candidates.push(Candidate {\n             xform_self_ty: xform_self_ty,"}, {"sha": "28e07158feebbf1a5ee00c495b29c9103c5d1f83", "filename": "src/test/run-pass/issue-25679.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1af72660a76605a485866ba3a80a79d331586a0a/src%2Ftest%2Frun-pass%2Fissue-25679.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af72660a76605a485866ba3a80a79d331586a0a/src%2Ftest%2Frun-pass%2Fissue-25679.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-25679.rs?ref=1af72660a76605a485866ba3a80a79d331586a0a", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Device {\n+    type Resources;\n+}\n+struct Foo<D, R>(D, R);\n+\n+impl<D: Device, S> Foo<D, S> {\n+    fn present(&self) {}\n+}\n+\n+struct Res;\n+struct Dev;\n+\n+impl Device for Dev { type Resources = Res; }\n+\n+fn main() {\n+    let foo = Foo(Dev, Res);\n+    foo.present();\n+}"}]}