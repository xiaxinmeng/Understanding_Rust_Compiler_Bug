{"sha": "7e9f98a8c95588b7c88e5d4b4db1890e086257ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlOWY5OGE4Yzk1NTg4YjdjODhlNWQ0YjRkYjE4OTBlMDg2MjU3ZWU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-10T22:26:15Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-10T22:27:12Z"}, "message": "rustc: Make range literals use compare_scalar_types instead of trans_compare", "tree": {"sha": "330532748f2847c6b65077ebe55a0e8ff156f3ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/330532748f2847c6b65077ebe55a0e8ff156f3ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e9f98a8c95588b7c88e5d4b4db1890e086257ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e9f98a8c95588b7c88e5d4b4db1890e086257ee", "html_url": "https://github.com/rust-lang/rust/commit/7e9f98a8c95588b7c88e5d4b4db1890e086257ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e9f98a8c95588b7c88e5d4b4db1890e086257ee/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5eccf849193f3de8da050eac960bc7f5df104c2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5eccf849193f3de8da050eac960bc7f5df104c2f", "html_url": "https://github.com/rust-lang/rust/commit/5eccf849193f3de8da050eac960bc7f5df104c2f"}], "stats": {"total": 38, "additions": 6, "deletions": 32}, "files": [{"sha": "050dcafbfa8fce2a23973318be39bf077a331b37", "filename": "src/rustc/middle/trans/alt.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7e9f98a8c95588b7c88e5d4b4db1890e086257ee/src%2Frustc%2Fmiddle%2Ftrans%2Falt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e9f98a8c95588b7c88e5d4b4db1890e086257ee/src%2Frustc%2Fmiddle%2Ftrans%2Falt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Falt.rs?ref=7e9f98a8c95588b7c88e5d4b4db1890e086257ee", "patch": "@@ -672,10 +672,12 @@ fn compile_submatch(bcx: block, m: match_, vals: ~[ValueRef],\n                                 Result {val: vbegin, _},\n                                 Result {bcx, val: vend}) =>\n                             {\n-                                let Result {bcx, val: llge} = trans_compare(\n-                                    bcx, ast::ge, test_val, t, vbegin, t);\n-                                let Result {bcx, val: llle} = trans_compare(\n-                                    bcx, ast::le, test_val, t, vend, t);\n+                                let Result {bcx, val: llge} =\n+                                    compare_scalar_types(bcx, test_val,\n+                                                         vbegin, t, ast::ge);\n+                                let Result {bcx, val: llle} =\n+                                    compare_scalar_types(bcx, test_val, vend,\n+                                                         t, ast::le);\n                                 rslt(bcx, And(bcx, llge, llle))\n                             }\n                         }"}, {"sha": "ab91fc8278d4d96cb92c026e34d612ff93ed1039", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/7e9f98a8c95588b7c88e5d4b4db1890e086257ee/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e9f98a8c95588b7c88e5d4b4db1890e086257ee/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=7e9f98a8c95588b7c88e5d4b4db1890e086257ee", "patch": "@@ -610,34 +610,6 @@ fn iter_structural_ty(cx: block, av: ValueRef, t: ty::t,\n     return cx;\n }\n \n-fn trans_compare(cx: block, op: ast::binop, lhs: ValueRef,\n-                 _lhs_t: ty::t, rhs: ValueRef, rhs_t: ty::t) -> Result {\n-    let _icx = cx.insn_ctxt(\"trans_compare\");\n-    if ty::type_is_scalar(rhs_t) {\n-      let rs = compare_scalar_types(cx, lhs, rhs, rhs_t, op);\n-      return rslt(rs.bcx, rs.val);\n-    }\n-\n-    // Determine the operation we need.\n-    let llop = {\n-        match op {\n-          ast::eq | ast::ne => C_u8(abi::cmp_glue_op_eq),\n-          ast::lt | ast::ge => C_u8(abi::cmp_glue_op_lt),\n-          ast::le | ast::gt => C_u8(abi::cmp_glue_op_le),\n-          _ => cx.tcx().sess.bug(~\"trans_compare got non-comparison-op\")\n-        }\n-    };\n-\n-    let cmpval = glue::call_cmp_glue(cx, lhs, rhs, rhs_t, llop);\n-\n-    // Invert the result if necessary.\n-    match op {\n-      ast::eq | ast::lt | ast::le => rslt(cx, cmpval),\n-      ast::ne | ast::ge | ast::gt => rslt(cx, Not(cx, cmpval)),\n-      _ => cx.tcx().sess.bug(~\"trans_compare got non-comparison-op\")\n-    }\n-}\n-\n fn cast_shift_expr_rhs(cx: block, op: ast::binop,\n                        lhs: ValueRef, rhs: ValueRef) -> ValueRef {\n     cast_shift_rhs(op, lhs, rhs,"}]}