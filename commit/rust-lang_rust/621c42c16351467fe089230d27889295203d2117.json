{"sha": "621c42c16351467fe089230d27889295203d2117", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyMWM0MmMxNjM1MTQ2N2ZlMDg5MjMwZDI3ODg5Mjk1MjAzZDIxMTc=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2020-03-03T23:41:32Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2020-03-15T15:11:29Z"}, "message": "Render full attributes in rustdoc", "tree": {"sha": "b459f5f48c25b83678fe586ba59d606b3258184f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b459f5f48c25b83678fe586ba59d606b3258184f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/621c42c16351467fe089230d27889295203d2117", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/621c42c16351467fe089230d27889295203d2117", "html_url": "https://github.com/rust-lang/rust/commit/621c42c16351467fe089230d27889295203d2117", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/621c42c16351467fe089230d27889295203d2117/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a72ecf2c5c97933cecce91cb58d104da8120624", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a72ecf2c5c97933cecce91cb58d104da8120624", "html_url": "https://github.com/rust-lang/rust/commit/5a72ecf2c5c97933cecce91cb58d104da8120624"}], "stats": {"total": 28, "additions": 6, "deletions": 22}, "files": [{"sha": "e791ae419274d832962dad021164979c1e8e673e", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 2, "deletions": 22, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/621c42c16351467fe089230d27889295203d2117/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/621c42c16351467fe089230d27889295203d2117/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=621c42c16351467fe089230d27889295203d2117", "patch": "@@ -3126,25 +3126,6 @@ fn item_enum(w: &mut Buffer, cx: &Context, it: &clean::Item, e: &clean::Enum) {\n     render_assoc_items(w, cx, it, it.def_id, AssocItemRender::All)\n }\n \n-fn render_attribute(attr: &ast::MetaItem) -> Option<String> {\n-    let path = pprust::path_to_string(&attr.path);\n-\n-    if attr.is_word() {\n-        Some(path)\n-    } else if let Some(v) = attr.value_str() {\n-        Some(format!(\"{} = {:?}\", path, v))\n-    } else if let Some(values) = attr.meta_item_list() {\n-        let display: Vec<_> = values\n-            .iter()\n-            .filter_map(|attr| attr.meta_item().and_then(|mi| render_attribute(mi)))\n-            .collect();\n-\n-        if !display.is_empty() { Some(format!(\"{}({})\", path, display.join(\", \"))) } else { None }\n-    } else {\n-        None\n-    }\n-}\n-\n const ATTRIBUTE_WHITELIST: &[Symbol] = &[\n     sym::export_name,\n     sym::lang,\n@@ -3170,9 +3151,8 @@ fn render_attributes(w: &mut Buffer, it: &clean::Item, top: bool) {\n         if !ATTRIBUTE_WHITELIST.contains(&attr.name_or_empty()) {\n             continue;\n         }\n-        if let Some(s) = render_attribute(&attr.meta().unwrap()) {\n-            attrs.push_str(&format!(\"#[{}]\\n\", s));\n-        }\n+\n+        attrs.push_str(&pprust::attribute_to_string(&attr));\n     }\n     if !attrs.is_empty() {\n         write!("}, {"sha": "d5772e183bcb2f387a2dae04b935ef51d6819896", "filename": "src/test/rustdoc/attributes.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/621c42c16351467fe089230d27889295203d2117/src%2Ftest%2Frustdoc%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/621c42c16351467fe089230d27889295203d2117/src%2Ftest%2Frustdoc%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fattributes.rs?ref=621c42c16351467fe089230d27889295203d2117", "patch": "@@ -15,3 +15,7 @@ pub extern \"C\" fn g() {}\n pub enum Foo {\n     Bar,\n }\n+\n+// @has foo/struct.Repr.html '//*[@class=\"docblock attributes top-attr\"]' '#[repr(C, align (8))]'\n+#[repr(C, align(8))]\n+pub struct Repr;"}]}