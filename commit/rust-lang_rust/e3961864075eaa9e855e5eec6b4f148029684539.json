{"sha": "e3961864075eaa9e855e5eec6b4f148029684539", "node_id": "C_kwDOAAsO6NoAKGUzOTYxODY0MDc1ZWFhOWU4NTVlNWVlYzZiNGYxNDgwMjk2ODQ1Mzk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-27T04:44:42Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-27T04:44:42Z"}, "message": "Auto merge of #106166 - jyn514:print-paths, r=Mark-Simulacrum\n\nFix panic on `x build --help --verbose`\n\nSee https://github.com/rust-lang/rust/issues/106165 for a detailed description of what went wrong here.\n\nThis also makes the panic message a little more informative in case it happens again.", "tree": {"sha": "6485353169f1faa148975a3fd4ee7b68e4cc79c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6485353169f1faa148975a3fd4ee7b68e4cc79c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3961864075eaa9e855e5eec6b4f148029684539", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3961864075eaa9e855e5eec6b4f148029684539", "html_url": "https://github.com/rust-lang/rust/commit/e3961864075eaa9e855e5eec6b4f148029684539", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3961864075eaa9e855e5eec6b4f148029684539/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58f5a0180ccd4ab87363c4b35a23fbe15a9a310c", "url": "https://api.github.com/repos/rust-lang/rust/commits/58f5a0180ccd4ab87363c4b35a23fbe15a9a310c", "html_url": "https://github.com/rust-lang/rust/commit/58f5a0180ccd4ab87363c4b35a23fbe15a9a310c"}, {"sha": "3890992d0a9509bfab77659bc23f065ebcd3c2ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/3890992d0a9509bfab77659bc23f065ebcd3c2ba", "html_url": "https://github.com/rust-lang/rust/commit/3890992d0a9509bfab77659bc23f065ebcd3c2ba"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "de39868d692d47a3498f5dc28190fdf961f3a6b0", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e3961864075eaa9e855e5eec6b4f148029684539/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3961864075eaa9e855e5eec6b4f148029684539/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=e3961864075eaa9e855e5eec6b4f148029684539", "patch": "@@ -351,7 +351,17 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\",\n \n         // fn usage()\n         let usage = |exit_code: i32, opts: &Options, verbose: bool, subcommand_help: &str| -> ! {\n-            let config = Config::parse(&[\"setup\".to_string()]);\n+            // We have an unfortunate situation here: some Steps use `builder.in_tree_crates` to determine their paths.\n+            // To determine those crates, we need to run `cargo metadata`, which means we need all submodules to be checked out.\n+            // That takes a while to run, so only do it when paths were explicitly requested, not on all CLI errors.\n+            // `Build::new` won't load submodules for the `setup` command.\n+            let cmd = if verbose {\n+                println!(\"note: updating submodules before printing available paths\");\n+                \"build\"\n+            } else {\n+                \"setup\"\n+            };\n+            let config = Config::parse(&[cmd.to_string()]);\n             let build = Build::new(config);\n             let paths = Builder::get_help(&build, subcommand);\n "}, {"sha": "ced1e397807e42f77e2b24d18195e046c3375b16", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e3961864075eaa9e855e5eec6b4f148029684539/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3961864075eaa9e855e5eec6b4f148029684539/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=e3961864075eaa9e855e5eec6b4f148029684539", "patch": "@@ -1400,7 +1400,10 @@ impl Build {\n         let mut list = vec![INTERNER.intern_str(root)];\n         let mut visited = HashSet::new();\n         while let Some(krate) = list.pop() {\n-            let krate = &self.crates[&krate];\n+            let krate = self\n+                .crates\n+                .get(&krate)\n+                .unwrap_or_else(|| panic!(\"metadata missing for {krate}: {:?}\", self.crates));\n             ret.push(krate);\n             for dep in &krate.deps {\n                 if !self.crates.contains_key(dep) {"}]}