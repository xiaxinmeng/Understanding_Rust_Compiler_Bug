{"sha": "d11973ae2a41bb84cd933e6646f3d8e6f28201e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxMTk3M2FlMmE0MWJiODRjZDkzM2U2NjQ2ZjNkOGU2ZjI4MjAxZTg=", "commit": {"author": {"name": "Inokentiy Babushkin", "email": "twk@twki.de", "date": "2017-06-12T19:47:39Z"}, "committer": {"name": "Inokentiy Babushkin", "email": "twk@twki.de", "date": "2017-06-12T19:47:39Z"}, "message": "External spans: added lazy source loading elsewhere\n\n* In other places where the `src` member of a file map is accessed, we\n  now load and possibly work with external source as well.", "tree": {"sha": "1442e011211e47776aa3808bd1409172be59c3bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1442e011211e47776aa3808bd1409172be59c3bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d11973ae2a41bb84cd933e6646f3d8e6f28201e8", "comment_count": 0, "verification": {"verified": false, "reason": "unverified_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEXezFNCHL3+3lgSPSfvyOxSJN6OwFAlk+8IkACgkQfvyOxSJN\n6OwCTA/+N3/Kkrm5k+FdfK/+JWd2+UjNXLA06is0DaU2aRHhD5SBUkihdHAdP3Zb\n1i1KiwtZtFNYJNDXrk5wT2J7H7RTKMl1GcsEalNWPA3bDCr+SDSR7yub6uWCz41i\nqOcYu/gio/if2W5rEkA5eBXL7asIPDmmORonFx867HPicK0kkb9kJY7iKRb74jo9\nXsiXrQv+cCu3Zj8USsnU8lTP5wnw4VXfsPMcTttipkXmAkGYGQvapwMpsK8Fvp3v\n7pEwTyBHku7S7tE6ZqxVYlm1rpkJ/ik0qwfIp9whh73ELf7PRgMa3ZDWcWRucXTG\nqWP3vug1xSDcPXw7/VRSQnI0qy5FordgmGpko2iVPkx7rmjOTKP9SDGjy1WzLPId\nxg3NCWcvqtSJ7p6JvN6j+7k/AESII7DIDdeW+oIa0bx2C/9B/lF2GoNTlZtNfK3T\nD/Nw8/hG5N7A67F5GvWoe/R/w0XTOO2WnZZJjxjOqfNcrTBP6z+iD6O1E4IB/c5O\nD2scKqppwIxMUcTVT72sjTygDnXI973oINFXZcEiAGD56Hbo/tqQM0OqLpEeZatf\nZrkc9bHW4FFTzNHB+O/ycXOLqgNrL3VjKV3sGxV470Md8sdh1GfoKLydulR1nFUM\n3Fcv76pjszHWQMQJbwWu5GczQGhZeEf65F49vv1SLgKU+ICk8hs=\n=8mBr\n-----END PGP SIGNATURE-----", "payload": "tree 1442e011211e47776aa3808bd1409172be59c3bd\nparent 271133b03ee5da57334670f50cd8a6ebbc35d140\nauthor Inokentiy Babushkin <twk@twki.de> 1497296859 +0200\ncommitter Inokentiy Babushkin <twk@twki.de> 1497296859 +0200\n\nExternal spans: added lazy source loading elsewhere\n\n* In other places where the `src` member of a file map is accessed, we\n  now load and possibly work with external source as well.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d11973ae2a41bb84cd933e6646f3d8e6f28201e8", "html_url": "https://github.com/rust-lang/rust/commit/d11973ae2a41bb84cd933e6646f3d8e6f28201e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d11973ae2a41bb84cd933e6646f3d8e6f28201e8/comments", "author": {"login": "ibabushkin", "id": 10811417, "node_id": "MDQ6VXNlcjEwODExNDE3", "avatar_url": "https://avatars.githubusercontent.com/u/10811417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibabushkin", "html_url": "https://github.com/ibabushkin", "followers_url": "https://api.github.com/users/ibabushkin/followers", "following_url": "https://api.github.com/users/ibabushkin/following{/other_user}", "gists_url": "https://api.github.com/users/ibabushkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibabushkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibabushkin/subscriptions", "organizations_url": "https://api.github.com/users/ibabushkin/orgs", "repos_url": "https://api.github.com/users/ibabushkin/repos", "events_url": "https://api.github.com/users/ibabushkin/events{/privacy}", "received_events_url": "https://api.github.com/users/ibabushkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibabushkin", "id": 10811417, "node_id": "MDQ6VXNlcjEwODExNDE3", "avatar_url": "https://avatars.githubusercontent.com/u/10811417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibabushkin", "html_url": "https://github.com/ibabushkin", "followers_url": "https://api.github.com/users/ibabushkin/followers", "following_url": "https://api.github.com/users/ibabushkin/following{/other_user}", "gists_url": "https://api.github.com/users/ibabushkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibabushkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibabushkin/subscriptions", "organizations_url": "https://api.github.com/users/ibabushkin/orgs", "repos_url": "https://api.github.com/users/ibabushkin/repos", "events_url": "https://api.github.com/users/ibabushkin/events{/privacy}", "received_events_url": "https://api.github.com/users/ibabushkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "271133b03ee5da57334670f50cd8a6ebbc35d140", "url": "https://api.github.com/repos/rust-lang/rust/commits/271133b03ee5da57334670f50cd8a6ebbc35d140", "html_url": "https://github.com/rust-lang/rust/commit/271133b03ee5da57334670f50cd8a6ebbc35d140"}], "stats": {"total": 49, "additions": 25, "deletions": 24}, "files": [{"sha": "b3d9cf9da36c7669320cb43b956040b5fab6c36d", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 25, "deletions": 24, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/d11973ae2a41bb84cd933e6646f3d8e6f28201e8/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d11973ae2a41bb84cd933e6646f3d8e6f28201e8/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=d11973ae2a41bb84cd933e6646f3d8e6f28201e8", "patch": "@@ -415,30 +415,31 @@ impl CodeMap {\n                       local_end.fm.start_pos)\n             }));\n         } else {\n-            match local_begin.fm.src {\n-                Some(ref src) => {\n-                    let start_index = local_begin.pos.to_usize();\n-                    let end_index = local_end.pos.to_usize();\n-                    let source_len = (local_begin.fm.end_pos -\n-                                      local_begin.fm.start_pos).to_usize();\n-\n-                    if start_index > end_index || end_index > source_len {\n-                        return Err(SpanSnippetError::MalformedForCodemap(\n-                            MalformedCodemapPositions {\n-                                name: local_begin.fm.name.clone(),\n-                                source_len: source_len,\n-                                begin_pos: local_begin.pos,\n-                                end_pos: local_end.pos,\n-                            }));\n-                    }\n-\n-                    return Ok((&src[start_index..end_index]).to_string())\n-                }\n-                None => {\n-                    return Err(SpanSnippetError::SourceNotAvailable {\n-                        filename: local_begin.fm.name.clone()\n-                    });\n-                }\n+            self.ensure_filemap_source_present(local_begin.fm.clone());\n+\n+            let start_index = local_begin.pos.to_usize();\n+            let end_index = local_end.pos.to_usize();\n+            let source_len = (local_begin.fm.end_pos -\n+                              local_begin.fm.start_pos).to_usize();\n+\n+            if start_index > end_index || end_index > source_len {\n+                return Err(SpanSnippetError::MalformedForCodemap(\n+                    MalformedCodemapPositions {\n+                        name: local_begin.fm.name.clone(),\n+                        source_len: source_len,\n+                        begin_pos: local_begin.pos,\n+                        end_pos: local_end.pos,\n+                    }));\n+            }\n+\n+            if let Some(ref src) = local_begin.fm.src {\n+                return Ok((&src[start_index..end_index]).to_string());\n+            } else if let Some(src) = local_begin.fm.external_src.borrow().get_source() {\n+                return Ok((&src[start_index..end_index]).to_string());\n+            } else {\n+                return Err(SpanSnippetError::SourceNotAvailable {\n+                    filename: local_begin.fm.name.clone()\n+                });\n             }\n         }\n     }"}]}