{"sha": "450a8a6f354ac9b19d5980837ea0f34cd6c7ece6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1MGE4YTZmMzU0YWM5YjE5ZDU5ODA4MzdlYTBmMzRjZDZjN2VjZTY=", "commit": {"author": {"name": "Bastian Gruber", "email": "gruberbastian@me.com", "date": "2018-12-04T09:10:07Z"}, "committer": {"name": "Bastian Gruber", "email": "gruberbastian@me.com", "date": "2018-12-04T09:10:07Z"}, "message": "Add extra comment slash", "tree": {"sha": "161796bb957d663c6dfab62084ed9e3f70aca5a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/161796bb957d663c6dfab62084ed9e3f70aca5a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/450a8a6f354ac9b19d5980837ea0f34cd6c7ece6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/450a8a6f354ac9b19d5980837ea0f34cd6c7ece6", "html_url": "https://github.com/rust-lang/rust/commit/450a8a6f354ac9b19d5980837ea0f34cd6c7ece6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/450a8a6f354ac9b19d5980837ea0f34cd6c7ece6/comments", "author": null, "committer": null, "parents": [{"sha": "7933628de58851281544fe2a7b4e0d0673652e47", "url": "https://api.github.com/repos/rust-lang/rust/commits/7933628de58851281544fe2a7b4e0d0673652e47", "html_url": "https://github.com/rust-lang/rust/commit/7933628de58851281544fe2a7b4e0d0673652e47"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "9fad40c564944ee378f247d8db26750a532f74fb", "filename": "src/libstd/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/450a8a6f354ac9b19d5980837ea0f34cd6c7ece6/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/450a8a6f354ac9b19d5980837ea0f34cd6c7ece6/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=450a8a6f354ac9b19d5980837ea0f34cd6c7ece6", "patch": "@@ -1410,7 +1410,7 @@ impl From<PathBuf> for Box<Path> {\n     /// Converts a `PathBuf` into a `Box<Path>`\n     ///\n     /// This conversion currently should not allocate memory,\n-    // but this behavior is not guaranteed on all platforms or in all future versions.\n+    /// but this behavior is not guaranteed on all platforms or in all future versions.\n     fn from(p: PathBuf) -> Box<Path> {\n         p.into_boxed_path()\n     }"}]}