{"sha": "ced8393f203fc661df7a5a0159a5edfd826eef12", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlZDgzOTNmMjAzZmM2NjFkZjdhNWEwMTU5YTVlZGZkODI2ZWVmMTI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-15T02:39:53Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-15T17:07:29Z"}, "message": "Modify task::join to indicate how the task terminated\n\nThis involves sticking yet another field into the task structure", "tree": {"sha": "efc98dacc8ec300c63b2e3af1c7dd78f7f4bac5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efc98dacc8ec300c63b2e3af1c7dd78f7f4bac5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ced8393f203fc661df7a5a0159a5edfd826eef12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ced8393f203fc661df7a5a0159a5edfd826eef12", "html_url": "https://github.com/rust-lang/rust/commit/ced8393f203fc661df7a5a0159a5edfd826eef12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ced8393f203fc661df7a5a0159a5edfd826eef12/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9cc4cb81b91e5d1735ef6c14e181e41247c9314", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9cc4cb81b91e5d1735ef6c14e181e41247c9314", "html_url": "https://github.com/rust-lang/rust/commit/d9cc4cb81b91e5d1735ef6c14e181e41247c9314"}], "stats": {"total": 49, "additions": 43, "deletions": 6}, "files": [{"sha": "64ab745e4b9c4dbcc6a2d82609917351e07e35eb", "filename": "src/lib/task.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ced8393f203fc661df7a5a0159a5edfd826eef12/src%2Flib%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ced8393f203fc661df7a5a0159a5edfd826eef12/src%2Flib%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Ftask.rs?ref=ced8393f203fc661df7a5a0159a5edfd826eef12", "patch": "@@ -1,7 +1,7 @@\n native \"rust\" mod rustrt {\n     fn task_sleep(uint time_in_us);\n     fn task_yield();\n-    fn task_join(task t);\n+    fn task_join(task t) -> int;\n     fn task_unsupervise();\n     fn pin_task();\n     fn unpin_task();\n@@ -20,8 +20,16 @@ fn yield() {\n     ret rustrt::task_yield();\n }\n \n-fn join(task t) {\n-    ret rustrt::task_join(t);\n+tag task_result {\n+    tr_success;\n+    tr_failure;\n+}\n+\n+fn join(task t) -> task_result {\n+    alt (rustrt::task_join(t)) {\n+        0 { tr_success }\n+        _ { tr_failure }\n+    }\n }\n \n fn unsupervise() {"}, {"sha": "bdabbb1ed379797bc5a5dcf81ba5f0cef87b2d4c", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ced8393f203fc661df7a5a0159a5edfd826eef12/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/ced8393f203fc661df7a5a0159a5edfd826eef12/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=ced8393f203fc661df7a5a0159a5edfd826eef12", "patch": "@@ -410,7 +410,7 @@ task_yield(rust_task *task) {\n     task->yield(1);\n }\n \n-extern \"C\" CDECL void\n+extern \"C\" CDECL intptr_t\n task_join(rust_task *task, rust_task *join_task) {\n     // If the other task is already dying, we don't have to wait for it.\n     join_task->lock.lock();\n@@ -423,6 +423,11 @@ task_join(rust_task *task, rust_task *join_task) {\n     else {\n         join_task->lock.unlock();\n     }\n+    if (!join_task->failed) {\n+        return 0;\n+    } else {\n+        return -1;\n+    }\n }\n \n extern \"C\" CDECL void"}, {"sha": "d56cb8b6276bece56185d7073f369a124555f254", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ced8393f203fc661df7a5a0159a5edfd826eef12/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/ced8393f203fc661df7a5a0159a5edfd826eef12/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=ced8393f203fc661df7a5a0159a5edfd826eef12", "patch": "@@ -82,7 +82,8 @@ rust_task::rust_task(rust_scheduler *sched, rust_task_list *state,\n     running_on(-1),\n     pinned_on(-1),\n     local_region(&sched->srv->local_region),\n-    _on_wakeup(NULL)\n+    _on_wakeup(NULL),\n+    failed(false)\n {\n     LOGPTR(sched, \"new task\", (uintptr_t)this);\n     DLOG(sched, task, \"sizeof(task) = %d (0x%x)\", sizeof *this, sizeof *this);\n@@ -230,6 +231,7 @@ rust_task::fail() {\n     // FIXME: implement unwinding again.\n     if (this == sched->root_task)\n         sched->fail();\n+    failed = true;\n }\n \n void"}, {"sha": "17d1a9838a74d597e5fd29bde689321eb311f191", "filename": "src/rt/rust_task.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ced8393f203fc661df7a5a0159a5edfd826eef12/src%2Frt%2Frust_task.h", "raw_url": "https://github.com/rust-lang/rust/raw/ced8393f203fc661df7a5a0159a5edfd826eef12/src%2Frt%2Frust_task.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.h?ref=ced8393f203fc661df7a5a0159a5edfd826eef12", "patch": "@@ -89,6 +89,9 @@ rust_task : public maybe_proxy<rust_task>,\n \n     wakeup_callback *_on_wakeup;\n \n+    // Indicates that the task ended in failure\n+    bool failed;\n+\n     lock_and_signal lock;\n \n     // Only a pointer to 'name' is kept, so it must live as long as this task."}, {"sha": "52ea933a0ce7254104b2ba460cf60588675ab47b", "filename": "src/test/run-pass/lib-task.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ced8393f203fc661df7a5a0159a5edfd826eef12/src%2Ftest%2Frun-pass%2Flib-task.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ced8393f203fc661df7a5a0159a5edfd826eef12/src%2Ftest%2Frun-pass%2Flib-task.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-task.rs?ref=ced8393f203fc661df7a5a0159a5edfd826eef12", "patch": "@@ -15,8 +15,27 @@ fn test_unsupervise() {\n   spawn f();\n }\n \n+fn test_join() {\n+  fn winner() {\n+  }\n+\n+  auto wintask = spawn winner();\n+\n+  assert task::join(wintask) == task::tr_success;\n+\n+  fn failer() {\n+    task::unsupervise();\n+    fail;\n+  }\n+\n+  auto failtask = spawn failer();\n+\n+  assert task::join(failtask) == task::tr_failure;\n+}\n+\n fn main() {\n   // FIXME: Why aren't we running this?\n   //test_sleep();\n   test_unsupervise();\n+  test_join();\n }\n\\ No newline at end of file"}, {"sha": "e6279498a2f4169641e0559a8111e86d24a85479", "filename": "src/test/run-pass/spawn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ced8393f203fc661df7a5a0159a5edfd826eef12/src%2Ftest%2Frun-pass%2Fspawn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ced8393f203fc661df7a5a0159a5edfd826eef12/src%2Ftest%2Frun-pass%2Fspawn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawn.rs?ref=ced8393f203fc661df7a5a0159a5edfd826eef12", "patch": "@@ -5,7 +5,7 @@ use std;\n \n fn main() {\n     auto t = spawn child(10);\n-    std::task::join(t)\n+    std::task::join(t);\n }\n \n fn child(int i) {"}]}