{"sha": "cbd9f46bc776cc6e7a0383af5e0053542400af55", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiZDlmNDZiYzc3NmNjNmU3YTAzODNhZjVlMDA1MzU0MjQwMGFmNTU=", "commit": {"author": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-03-15T16:25:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-15T16:25:55Z"}, "message": "ra_hir_expand: migrate to impl_intern_key!()", "tree": {"sha": "95c96547340669d8f33959a7f71ccf9dc8897532", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95c96547340669d8f33959a7f71ccf9dc8897532"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbd9f46bc776cc6e7a0383af5e0053542400af55", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeblcTCRBK7hj4Ov3rIwAAdHIIADOzPtaQ0PPr2Wf3B0JiIVW+\nhxnzLEUknBtPftj0FGP669rhgC9rukMGAvO8pyrlCJT0JTZz9aqZqwv85j2ZkKOz\nMR/Pn7vPauTFeKNNoqYNvQdEfGAoq5dtZGDGTzWuH40RaRbXmEdSMpOTERNTpYlC\nPXR/IIeGt/LM0qHvf3z54+tYevyIB7G/LTQfKFZIfKJUcK59eqmQNudwHV8eY6t/\n6Al6MVuJQg8VtGI9vq66y7/HVCCn6WZISOLyV2N0WxWf0bNmjExdhBHzfgmVeklf\n0+e1wAS3r4/uAIUP0HZJYWc363cELXDNQ1H0wNo4X+YXInZmj1ApwXSfgtzjQm8=\n=eyYi\n-----END PGP SIGNATURE-----\n", "payload": "tree 95c96547340669d8f33959a7f71ccf9dc8897532\nparent af8097f7775e59fd2d61298b6d682788e870c2f9\nauthor Veetaha <gerzoh1@gmail.com> 1584289555 +0200\ncommitter GitHub <noreply@github.com> 1584289555 +0200\n\nra_hir_expand: migrate to impl_intern_key!()"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbd9f46bc776cc6e7a0383af5e0053542400af55", "html_url": "https://github.com/rust-lang/rust/commit/cbd9f46bc776cc6e7a0383af5e0053542400af55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbd9f46bc776cc6e7a0383af5e0053542400af55/comments", "author": null, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af8097f7775e59fd2d61298b6d682788e870c2f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/af8097f7775e59fd2d61298b6d682788e870c2f9", "html_url": "https://github.com/rust-lang/rust/commit/af8097f7775e59fd2d61298b6d682788e870c2f9"}], "stats": {"total": 20, "additions": 3, "deletions": 17}, "files": [{"sha": "b3f2b09a637d4db027e4141c412e4f62c9f607c2", "filename": "crates/ra_hir_expand/src/lib.rs", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/cbd9f46bc776cc6e7a0383af5e0053542400af55/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbd9f46bc776cc6e7a0383af5e0053542400af55/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Flib.rs?ref=cbd9f46bc776cc6e7a0383af5e0053542400af55", "patch": "@@ -17,7 +17,7 @@ pub mod eager;\n use std::hash::Hash;\n use std::sync::Arc;\n \n-use ra_db::{salsa, CrateId, FileId};\n+use ra_db::{salsa, CrateId, FileId, impl_intern_key};\n use ra_syntax::{\n     algo,\n     ast::{self, AstNode},\n@@ -174,25 +174,11 @@ pub enum MacroCallId {\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub struct LazyMacroId(salsa::InternId);\n-impl salsa::InternKey for LazyMacroId {\n-    fn from_intern_id(v: salsa::InternId) -> Self {\n-        LazyMacroId(v)\n-    }\n-    fn as_intern_id(&self) -> salsa::InternId {\n-        self.0\n-    }\n-}\n+impl_intern_key!(LazyMacroId);\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub struct EagerMacroId(salsa::InternId);\n-impl salsa::InternKey for EagerMacroId {\n-    fn from_intern_id(v: salsa::InternId) -> Self {\n-        EagerMacroId(v)\n-    }\n-    fn as_intern_id(&self) -> salsa::InternId {\n-        self.0\n-    }\n-}\n+impl_intern_key!(EagerMacroId);\n \n impl From<LazyMacroId> for MacroCallId {\n     fn from(it: LazyMacroId) -> Self {"}]}