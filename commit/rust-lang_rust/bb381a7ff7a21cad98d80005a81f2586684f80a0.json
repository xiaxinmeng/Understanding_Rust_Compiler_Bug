{"sha": "bb381a7ff7a21cad98d80005a81f2586684f80a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiMzgxYTdmZjdhMjFjYWQ5OGQ4MDAwNWE4MWYyNTg2Njg0ZjgwYTA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-02-03T09:51:06Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-02-03T09:51:06Z"}, "message": "Move tools to a separate package", "tree": {"sha": "5163533d7f4814b8c716e3549660494ce5291853", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5163533d7f4814b8c716e3549660494ce5291853"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb381a7ff7a21cad98d80005a81f2586684f80a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb381a7ff7a21cad98d80005a81f2586684f80a0", "html_url": "https://github.com/rust-lang/rust/commit/bb381a7ff7a21cad98d80005a81f2586684f80a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb381a7ff7a21cad98d80005a81f2586684f80a0/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d9753bf548b22ab1a54462f72c9c0bf4ff69382", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d9753bf548b22ab1a54462f72c9c0bf4ff69382", "html_url": "https://github.com/rust-lang/rust/commit/6d9753bf548b22ab1a54462f72c9c0bf4ff69382"}], "stats": {"total": 103, "additions": 75, "deletions": 28}, "files": [{"sha": "1ebc0f748cb47933cff12ee15d75847acac86b9e", "filename": ".cargo/config", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bb381a7ff7a21cad98d80005a81f2586684f80a0/.cargo%2Fconfig", "raw_url": "https://github.com/rust-lang/rust/raw/bb381a7ff7a21cad98d80005a81f2586684f80a0/.cargo%2Fconfig", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.cargo%2Fconfig?ref=bb381a7ff7a21cad98d80005a81f2586684f80a0", "patch": "@@ -0,0 +1,3 @@\n+[alias]\n+parse = \"run --package tools --bin parse\"\n+gen = \"run --package tools --bin gen\""}, {"sha": "622abcc42a15a7a3d5e17d10812c664f118e5d0b", "filename": "Cargo.toml", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bb381a7ff7a21cad98d80005a81f2586684f80a0/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/bb381a7ff7a21cad98d80005a81f2586684f80a0/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=bb381a7ff7a21cad98d80005a81f2586684f80a0", "patch": "@@ -4,13 +4,11 @@ version = \"0.1.0\"\n authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]\n license = \"MIT OR Apache-2.0\"\n \n+[workspace]\n+members = [ \"tools\" ]\n+\n [dependencies]\n unicode-xid = \"0.1.0\"\n \n-serde = \"1.0.26\"\n-serde_derive = \"1.0.26\"\n-file = \"1.1.1\"\n-ron = \"0.1.5\"\n-\n [dev-dependencies]\n testutils = { path = \"./tests/testutils\" }"}, {"sha": "1fcfa2dec89e11fcb00ee42e14371918b0725abc", "filename": "docs/TOOLS.md", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/bb381a7ff7a21cad98d80005a81f2586684f80a0/docs%2FTOOLS.md", "raw_url": "https://github.com/rust-lang/rust/raw/bb381a7ff7a21cad98d80005a81f2586684f80a0/docs%2FTOOLS.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2FTOOLS.md?ref=bb381a7ff7a21cad98d80005a81f2586684f80a0", "patch": "@@ -0,0 +1,30 @@\n+# Tools used to implement libsyntax\n+\n+libsyntax uses several tools to help with development. \n+\n+Each tool is a binary in the [tools/](../tools) package. \n+You can run them via `cargo run` command. \n+\n+```\n+cargo run --package tools --bin tool\n+```\n+\n+There are also aliases in [./cargo/config](../.cargo/config), \n+so the following also works:\n+\n+```\n+cargo tool\n+```\n+\n+\n+# Tool: `gen`\n+\n+This tool reads a \"grammar\" from [grammar.ron](../grammar.ron) and\n+generates the `syntax_kinds.rs` file. You should run this tool if you \n+add new keywords or syntax elements.\n+\n+\n+# Tool: 'parse'\n+\n+This tool reads rust source code from the standard input, parses it,\n+and prints the result to stdout."}, {"sha": "f829b243b4a82ae86b6ac7d37b4bf98fb08bc7fb", "filename": "tests/testutils/src/lib.rs", "status": "modified", "additions": 16, "deletions": 18, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/bb381a7ff7a21cad98d80005a81f2586684f80a0/tests%2Ftestutils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb381a7ff7a21cad98d80005a81f2586684f80a0/tests%2Ftestutils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftestutils%2Fsrc%2Flib.rs?ref=bb381a7ff7a21cad98d80005a81f2586684f80a0", "patch": "@@ -1,7 +1,7 @@\n extern crate difference;\n extern crate file;\n \n-use std::path::{PathBuf, Path};\n+use std::path::{Path, PathBuf};\n use std::fs::read_dir;\n \n use difference::Changeset;\n@@ -21,12 +21,9 @@ fn read_text(path: &Path) -> String {\n     file::get_text(path).unwrap().replace(\"\\r\\n\", \"\\n\")\n }\n \n-pub fn dir_tests<F>(\n-    paths: &[&str],\n-    f: F\n-)\n+pub fn dir_tests<F>(paths: &[&str], f: F)\n where\n-    F: Fn(&str) -> String\n+    F: Fn(&str) -> String,\n {\n     for path in collect_tests(paths) {\n         let actual = {\n@@ -47,21 +44,20 @@ where\n     }\n }\n \n-fn assert_equal_text(\n-    expected: &str,\n-    actual: &str,\n-    path: &Path\n-) {\n+fn assert_equal_text(expected: &str, actual: &str, path: &Path) {\n     if expected != actual {\n         print_difference(expected, actual, path)\n     }\n }\n \n fn collect_tests(paths: &[&str]) -> Vec<PathBuf> {\n-    paths.iter().flat_map(|path|  {\n-        let path = test_data_dir().join(path);\n-        test_from_dir(&path).into_iter()\n-    }).collect()\n+    paths\n+        .iter()\n+        .flat_map(|path| {\n+            let path = test_data_dir().join(path);\n+            test_from_dir(&path).into_iter()\n+        })\n+        .collect()\n }\n \n fn test_from_dir(dir: &Path) -> Vec<PathBuf> {\n@@ -95,11 +91,13 @@ fn print_difference(expected: &str, actual: &str, path: &Path) {\n fn project_dir() -> PathBuf {\n     let dir = env!(\"CARGO_MANIFEST_DIR\");\n     PathBuf::from(dir)\n-        .parent().unwrap()\n-        .parent().unwrap()\n+        .parent()\n+        .unwrap()\n+        .parent()\n+        .unwrap()\n         .to_owned()\n }\n \n fn test_data_dir() -> PathBuf {\n     project_dir().join(\"tests/data\")\n-}\n\\ No newline at end of file\n+}"}, {"sha": "e468749291689ee54b24b8f7f485546173dd5d06", "filename": "tools/Cargo.toml", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bb381a7ff7a21cad98d80005a81f2586684f80a0/tools%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/bb381a7ff7a21cad98d80005a81f2586684f80a0/tools%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tools%2FCargo.toml?ref=bb381a7ff7a21cad98d80005a81f2586684f80a0", "patch": "@@ -0,0 +1,12 @@\n+[package]\n+name = \"tools\"\n+version = \"0.1.0\"\n+authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]\n+publish = false\n+\n+[dependencies]\n+serde = \"1.0.26\"\n+serde_derive = \"1.0.26\"\n+file = \"1.1.1\"\n+ron = \"0.1.5\"\n+libsyntax2 = { path = \"../\" }"}, {"sha": "17cdea7a10cca4ad39aec55a1235536f02a4d948", "filename": "tools/src/bin/gen.rs", "status": "renamed", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/bb381a7ff7a21cad98d80005a81f2586684f80a0/tools%2Fsrc%2Fbin%2Fgen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb381a7ff7a21cad98d80005a81f2586684f80a0/tools%2Fsrc%2Fbin%2Fgen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tools%2Fsrc%2Fbin%2Fgen.rs?ref=bb381a7ff7a21cad98d80005a81f2586684f80a0", "patch": "@@ -11,7 +11,10 @@ use std::fmt::Write;\n fn main() {\n     let grammar = Grammar::read();\n     let text = grammar.to_syntax_kinds();\n-    file::put_text(&generated_file(), &text).unwrap();\n+    let target = generated_file();\n+    if text != file::get_text(&target).unwrap_or_default() {\n+        file::put_text(&target, &text).unwrap();\n+    }\n }\n \n #[derive(Deserialize)]\n@@ -94,13 +97,11 @@ impl Grammar {\n }\n \n fn grammar_file() -> PathBuf {\n-    let dir = env!(\"CARGO_MANIFEST_DIR\");\n-    PathBuf::from(dir).join(\"grammar.ron\")\n+    base_dir().join(\"grammar.ron\")\n }\n \n fn generated_file() -> PathBuf {\n-    let dir = env!(\"CARGO_MANIFEST_DIR\");\n-    PathBuf::from(dir).join(\"src/syntax_kinds.rs\")\n+    base_dir().join(\"src/syntax_kinds.rs\")\n }\n \n fn scream(word: &str) -> String {\n@@ -110,3 +111,8 @@ fn scream(word: &str) -> String {\n fn kw_token(keyword: &str) -> String {\n     format!(\"{}_KW\", scream(keyword))\n }\n+\n+fn base_dir() -> PathBuf {\n+    let dir = env!(\"CARGO_MANIFEST_DIR\");\n+    PathBuf::from(dir).parent().unwrap().to_owned()\n+}", "previous_filename": "src/bin/gen.rs"}, {"sha": "af1325bfcae3d5bbf7314f13c221586f0243cd87", "filename": "tools/src/bin/parse.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bb381a7ff7a21cad98d80005a81f2586684f80a0/tools%2Fsrc%2Fbin%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb381a7ff7a21cad98d80005a81f2586684f80a0/tools%2Fsrc%2Fbin%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tools%2Fsrc%2Fbin%2Fparse.rs?ref=bb381a7ff7a21cad98d80005a81f2586684f80a0", "previous_filename": "src/bin/parse-rust.rs"}]}