{"sha": "9acce10fe7f3103dc1e65168e956fe0e53bca117", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhY2NlMTBmZTdmMzEwM2RjMWU2NTE2OGU5NTZmZTBlNTNiY2ExMTc=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-10-25T23:43:14Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-10-25T23:43:14Z"}, "message": "Finish cfg syntax transition", "tree": {"sha": "e678cafc4a63be133666cef580341189394d9429", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e678cafc4a63be133666cef580341189394d9429"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9acce10fe7f3103dc1e65168e956fe0e53bca117", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9acce10fe7f3103dc1e65168e956fe0e53bca117", "html_url": "https://github.com/rust-lang/rust/commit/9acce10fe7f3103dc1e65168e956fe0e53bca117", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9acce10fe7f3103dc1e65168e956fe0e53bca117/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80e5fe1a56bb95e8e89d5f8f0ff5122583bb5336", "url": "https://api.github.com/repos/rust-lang/rust/commits/80e5fe1a56bb95e8e89d5f8f0ff5122583bb5336", "html_url": "https://github.com/rust-lang/rust/commit/80e5fe1a56bb95e8e89d5f8f0ff5122583bb5336"}], "stats": {"total": 22, "additions": 5, "deletions": 17}, "files": [{"sha": "72c62a173fc30b88bf18992e5f86448cc7bd397d", "filename": "src/libsyntax/config.rs", "status": "modified", "additions": 5, "deletions": 17, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9acce10fe7f3103dc1e65168e956fe0e53bca117/src%2Flibsyntax%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9acce10fe7f3103dc1e65168e956fe0e53bca117/src%2Flibsyntax%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fconfig.rs?ref=9acce10fe7f3103dc1e65168e956fe0e53bca117", "patch": "@@ -250,30 +250,18 @@ fn impl_item_in_cfg(cx: &mut Context, impl_item: &ast::ImplItem) -> bool {\n // Determine if an item should be translated in the current crate\n // configuration based on the item's attributes\n fn in_cfg(diagnostic: &SpanHandler, cfg: &[P<ast::MetaItem>], attrs: &[ast::Attribute]) -> bool {\n-    let mut in_cfg = false;\n-    let mut seen_cfg = false;\n-    for attr in attrs.iter() {\n+    attrs.iter().all(|attr| {\n         let mis = match attr.node.value.node {\n             ast::MetaList(_, ref mis) if attr.check_name(\"cfg\") => mis,\n-            _ => continue\n+            _ => return true\n         };\n \n         if mis.len() != 1 {\n             diagnostic.span_err(attr.span, \"expected 1 cfg-pattern\");\n-            return false;\n+            return true;\n         }\n \n-        if seen_cfg {\n-            diagnostic.span_err(attr.span, \"The semantics of multiple `#[cfg(..)]` attributes on \\\n-                                            same item are changing from the union of the cfgs to \\\n-                                            the intersection of the cfgs. Change `#[cfg(a)] \\\n-                                            #[cfg(b)]` to `#[cfg(any(a, b))]`.\");\n-            return false;\n-        }\n-\n-        seen_cfg = true;\n-        in_cfg |= attr::cfg_matches(diagnostic, cfg, &*mis[0]);\n-    }\n-    in_cfg | !seen_cfg\n+        attr::cfg_matches(diagnostic, cfg, &*mis[0])\n+    })\n }\n "}]}