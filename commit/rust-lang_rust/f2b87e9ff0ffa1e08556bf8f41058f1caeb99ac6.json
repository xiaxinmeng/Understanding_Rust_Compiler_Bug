{"sha": "f2b87e9ff0ffa1e08556bf8f41058f1caeb99ac6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyYjg3ZTlmZjBmZmExZTA4NTU2YmY4ZjQxMDU4ZjFjYWViOTlhYzY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-27T19:46:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-27T19:46:14Z"}, "message": "auto merge of #16797 : nikomatsakis/rust/remove-invalid-spsc_queue-test, r=alexcrichton\n\nThis test seems to read freed memory -- the peeked variable points into the queue, but then the pop operation removes the node from the queue and moves the enclosing `T` elsewhere, invalidating the `peeked` pointer.\r\n\r\nr? @alexcrichton", "tree": {"sha": "8448accce1061fcbb83aa5b9fbdb3d439ad04b48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8448accce1061fcbb83aa5b9fbdb3d439ad04b48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2b87e9ff0ffa1e08556bf8f41058f1caeb99ac6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2b87e9ff0ffa1e08556bf8f41058f1caeb99ac6", "html_url": "https://github.com/rust-lang/rust/commit/f2b87e9ff0ffa1e08556bf8f41058f1caeb99ac6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2b87e9ff0ffa1e08556bf8f41058f1caeb99ac6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ee047ae1ffab454270bc1859b3beef3556ef8f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ee047ae1ffab454270bc1859b3beef3556ef8f9", "html_url": "https://github.com/rust-lang/rust/commit/3ee047ae1ffab454270bc1859b3beef3556ef8f9"}, {"sha": "5c82f484db29e37e26064e853d8a303cc13bc78c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c82f484db29e37e26064e853d8a303cc13bc78c", "html_url": "https://github.com/rust-lang/rust/commit/5c82f484db29e37e26064e853d8a303cc13bc78c"}], "stats": {"total": 21, "additions": 0, "deletions": 21}, "files": [{"sha": "32b77be78a43806487c8d777556aec1de5525b45", "filename": "src/libsync/spsc_queue.rs", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f2b87e9ff0ffa1e08556bf8f41058f1caeb99ac6/src%2Flibsync%2Fspsc_queue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2b87e9ff0ffa1e08556bf8f41058f1caeb99ac6/src%2Flibsync%2Fspsc_queue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsync%2Fspsc_queue.rs?ref=f2b87e9ff0ffa1e08556bf8f41058f1caeb99ac6", "patch": "@@ -315,27 +315,6 @@ mod test {\n         assert_eq!(consumer.pop(), None);\n     }\n \n-    // This behaviour is blocked by the type system if using the safe constructor\n-    #[test]\n-    fn pop_peeked_unchecked() {\n-        let q = unsafe { Queue::new(0) };\n-        q.push(vec![1i]);\n-        q.push(vec![2]);\n-        let peeked = q.peek().unwrap();\n-\n-        assert_eq!(*peeked, vec![1]);\n-        assert_eq!(q.pop(), Some(vec![1]));\n-\n-        assert_eq!(*peeked, vec![1]);\n-        q.push(vec![7]);\n-\n-        // Note: This should actually expect 1, but this test is to highlight\n-        // the unsafety allowed by the unchecked usage. A Rust user would not\n-        // expect their peeked value to mutate like this without the type system\n-        // complaining.\n-        assert_eq!(*peeked, vec![7]);\n-    }\n-\n     #[test]\n     fn peek() {\n         let (mut consumer, mut producer) = queue(0);"}]}