{"sha": "7304326ff91b6ad2d43e9a6fc4cc4a2c5ecf94c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczMDQzMjZmZjkxYjZhZDJkNDNlOWE2ZmM0Y2M0YTJjNWVjZjk0YzA=", "commit": {"author": {"name": "Diego Ongaro", "email": "ongaro@cs.stanford.edu", "date": "2013-11-16T00:34:28Z"}, "committer": {"name": "Diego Ongaro", "email": "ongaro@cs.stanford.edu", "date": "2013-11-19T01:29:42Z"}, "message": "Disable priv in std::comm::Port, etc\n\nIt's useful to allow users to get at the internal std::rc::comm::Port,\nand other such fields, since they implement important traits like\nSelect.", "tree": {"sha": "1bd81123668d57b995c165d91557d8f90423831b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bd81123668d57b995c165d91557d8f90423831b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7304326ff91b6ad2d43e9a6fc4cc4a2c5ecf94c0", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7304326ff91b6ad2d43e9a6fc4cc4a2c5ecf94c0", "html_url": "https://github.com/rust-lang/rust/commit/7304326ff91b6ad2d43e9a6fc4cc4a2c5ecf94c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7304326ff91b6ad2d43e9a6fc4cc4a2c5ecf94c0/comments", "author": {"login": "ongardie", "id": 463856, "node_id": "MDQ6VXNlcjQ2Mzg1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/463856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ongardie", "html_url": "https://github.com/ongardie", "followers_url": "https://api.github.com/users/ongardie/followers", "following_url": "https://api.github.com/users/ongardie/following{/other_user}", "gists_url": "https://api.github.com/users/ongardie/gists{/gist_id}", "starred_url": "https://api.github.com/users/ongardie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ongardie/subscriptions", "organizations_url": "https://api.github.com/users/ongardie/orgs", "repos_url": "https://api.github.com/users/ongardie/repos", "events_url": "https://api.github.com/users/ongardie/events{/privacy}", "received_events_url": "https://api.github.com/users/ongardie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ongardie", "id": 463856, "node_id": "MDQ6VXNlcjQ2Mzg1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/463856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ongardie", "html_url": "https://github.com/ongardie", "followers_url": "https://api.github.com/users/ongardie/followers", "following_url": "https://api.github.com/users/ongardie/following{/other_user}", "gists_url": "https://api.github.com/users/ongardie/gists{/gist_id}", "starred_url": "https://api.github.com/users/ongardie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ongardie/subscriptions", "organizations_url": "https://api.github.com/users/ongardie/orgs", "repos_url": "https://api.github.com/users/ongardie/repos", "events_url": "https://api.github.com/users/ongardie/events{/privacy}", "received_events_url": "https://api.github.com/users/ongardie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9062988610dc28201c552854a2363157fc297fa5", "url": "https://api.github.com/repos/rust-lang/rust/commits/9062988610dc28201c552854a2363157fc297fa5", "html_url": "https://github.com/rust-lang/rust/commit/9062988610dc28201c552854a2363157fc297fa5"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "3a7b640aabe060d15f0e7265bf73fc57db4b5632", "filename": "src/libstd/comm.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7304326ff91b6ad2d43e9a6fc4cc4a2c5ecf94c0/src%2Flibstd%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7304326ff91b6ad2d43e9a6fc4cc4a2c5ecf94c0/src%2Flibstd%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcomm.rs?ref=7304326ff91b6ad2d43e9a6fc4cc4a2c5ecf94c0", "patch": "@@ -55,16 +55,17 @@ pub trait Peekable<T> {\n     fn peek(&self) -> bool;\n }\n \n-pub struct PortOne<T> { priv x: rtcomm::PortOne<T> }\n-pub struct ChanOne<T> { priv x: rtcomm::ChanOne<T> }\n+/* priv is disabled to allow users to get at traits like Select. */\n+pub struct PortOne<T> { /* priv */ x: rtcomm::PortOne<T> }\n+pub struct ChanOne<T> { /* priv */ x: rtcomm::ChanOne<T> }\n \n pub fn oneshot<T: Send>() -> (PortOne<T>, ChanOne<T>) {\n     let (p, c) = rtcomm::oneshot();\n     (PortOne { x: p }, ChanOne { x: c })\n }\n \n-pub struct Port<T> { priv x: rtcomm::Port<T> }\n-pub struct Chan<T> { priv x: rtcomm::Chan<T> }\n+pub struct Port<T> { /* priv */ x: rtcomm::Port<T> }\n+pub struct Chan<T> { /* priv */ x: rtcomm::Chan<T> }\n \n pub fn stream<T: Send>() -> (Port<T>, Chan<T>) {\n     let (p, c) = rtcomm::stream();\n@@ -158,7 +159,7 @@ impl<T: Send> Peekable<T> for Port<T> {\n }\n \n \n-pub struct SharedChan<T> { priv x: rtcomm::SharedChan<T> }\n+pub struct SharedChan<T> { /* priv */ x: rtcomm::SharedChan<T> }\n \n impl<T: Send> SharedChan<T> {\n     pub fn new(c: Chan<T>) -> SharedChan<T> {\n@@ -200,7 +201,7 @@ impl<T: Send> Clone for SharedChan<T> {\n     }\n }\n \n-pub struct SharedPort<T> { priv x: rtcomm::SharedPort<T> }\n+pub struct SharedPort<T> { /* priv */ x: rtcomm::SharedPort<T> }\n \n impl<T: Send> SharedPort<T> {\n     pub fn new(p: Port<T>) -> SharedPort<T> {"}]}