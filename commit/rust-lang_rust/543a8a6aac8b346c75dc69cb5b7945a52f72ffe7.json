{"sha": "543a8a6aac8b346c75dc69cb5b7945a52f72ffe7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0M2E4YTZhYWM4YjM0NmM3NWRjNjljYjViNzk0NWE1MmY3MmZmZTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-27T17:19:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-27T17:19:39Z"}, "message": "Auto merge of #7285 - camsteffen:mini-macro-move, r=flip1995\n\nMove mini-macro to tests/ui/auxilary\n\nchangelog: none\n\nMerges `/mini-macro` into `/tests/ui/auxilary/proc_macro_derive.rs`.\n\nThe mini-macro crate is an artifact of the distant past. A lot has changed (#2284) and it doesn't make sense as a top-level crate anymore. Especially since we can use the auxilary folder to accompolish the same thing.", "tree": {"sha": "5442262eba748c73dda69d879cf5dcc0c5d98722", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5442262eba748c73dda69d879cf5dcc0c5d98722"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/543a8a6aac8b346c75dc69cb5b7945a52f72ffe7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/543a8a6aac8b346c75dc69cb5b7945a52f72ffe7", "html_url": "https://github.com/rust-lang/rust/commit/543a8a6aac8b346c75dc69cb5b7945a52f72ffe7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/543a8a6aac8b346c75dc69cb5b7945a52f72ffe7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16e347f7b3f647b6cf12885352e5e31d6de9bd92", "url": "https://api.github.com/repos/rust-lang/rust/commits/16e347f7b3f647b6cf12885352e5e31d6de9bd92", "html_url": "https://github.com/rust-lang/rust/commit/16e347f7b3f647b6cf12885352e5e31d6de9bd92"}, {"sha": "6c54f61bebc5f3ee90e3904a19d9c166623972d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c54f61bebc5f3ee90e3904a19d9c166623972d1", "html_url": "https://github.com/rust-lang/rust/commit/6c54f61bebc5f3ee90e3904a19d9c166623972d1"}], "stats": {"total": 118, "additions": 43, "deletions": 75}, "files": [{"sha": "b003b15a11d750553db593179b658ae375bf6464", "filename": "Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/543a8a6aac8b346c75dc69cb5b7945a52f72ffe7/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/543a8a6aac8b346c75dc69cb5b7945a52f72ffe7/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=543a8a6aac8b346c75dc69cb5b7945a52f72ffe7", "patch": "@@ -33,7 +33,6 @@ tempfile = { version = \"3.1.0\", optional = true }\n cargo_metadata = \"0.12\"\n compiletest_rs = { version = \"0.6.0\", features = [\"tmp\"] }\n tester = \"0.9\"\n-clippy-mini-macro-test = { version = \"0.2\", path = \"mini-macro\" }\n serde = { version = \"1.0\", features = [\"derive\"] }\n derive-new = \"0.5\"\n regex = \"1.4\""}, {"sha": "0d95c86aef0308ac39fd81f24cfdfe5cea4ac0d2", "filename": "mini-macro/Cargo.toml", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/16e347f7b3f647b6cf12885352e5e31d6de9bd92/mini-macro%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/16e347f7b3f647b6cf12885352e5e31d6de9bd92/mini-macro%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mini-macro%2FCargo.toml?ref=16e347f7b3f647b6cf12885352e5e31d6de9bd92", "patch": "@@ -1,14 +0,0 @@\n-[package]\n-name = \"clippy-mini-macro-test\"\n-version = \"0.2.0\"\n-authors = [\"The Rust Clippy Developers\"]\n-license = \"MIT OR Apache-2.0\"\n-description = \"A macro to test clippy's procedural macro checks\"\n-repository = \"https://github.com/rust-lang/rust-clippy\"\n-edition = \"2018\"\n-\n-[lib]\n-name = \"clippy_mini_macro_test\"\n-proc-macro = true\n-\n-[dependencies]"}, {"sha": "2b793589049ba7b7d16dffb9156115d2cdd52ced", "filename": "mini-macro/src/lib.rs", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/16e347f7b3f647b6cf12885352e5e31d6de9bd92/mini-macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16e347f7b3f647b6cf12885352e5e31d6de9bd92/mini-macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mini-macro%2Fsrc%2Flib.rs?ref=16e347f7b3f647b6cf12885352e5e31d6de9bd92", "patch": "@@ -1,29 +0,0 @@\n-#![feature(proc_macro_quote)]\n-#![deny(rust_2018_idioms)]\n-// FIXME: Remove this attribute once the weird failure is gone.\n-#![allow(unused_extern_crates)]\n-extern crate proc_macro;\n-\n-use proc_macro::{quote, TokenStream};\n-\n-#[proc_macro_derive(ClippyMiniMacroTest)]\n-/// # Panics\n-///\n-/// Panics if the macro derivation fails\n-pub fn mini_macro(_: TokenStream) -> TokenStream {\n-    quote!(\n-        #[allow(unused)]\n-        fn needless_take_by_value(s: String) {\n-            println!(\"{}\", s.len());\n-        }\n-        #[allow(unused)]\n-        fn needless_loop(items: &[u8]) {\n-            for i in 0..items.len() {\n-                println!(\"{}\", items[i]);\n-            }\n-        }\n-        fn line_wrapper() {\n-            println!(\"{}\", line!());\n-        }\n-    )\n-}"}, {"sha": "4b7b7fec78fe8dd7dc9e1941c3871976c60de176", "filename": "tests/ui/auxiliary/proc_macro_derive.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/543a8a6aac8b346c75dc69cb5b7945a52f72ffe7/tests%2Fui%2Fauxiliary%2Fproc_macro_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/543a8a6aac8b346c75dc69cb5b7945a52f72ffe7/tests%2Fui%2Fauxiliary%2Fproc_macro_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauxiliary%2Fproc_macro_derive.rs?ref=543a8a6aac8b346c75dc69cb5b7945a52f72ffe7", "patch": "@@ -53,3 +53,22 @@ pub fn derive_use_self(_input: TokenStream) -> proc_macro::TokenStream {\n         }\n     }\n }\n+\n+#[proc_macro_derive(ClippyMiniMacroTest)]\n+pub fn mini_macro(_: TokenStream) -> TokenStream {\n+    quote!(\n+        #[allow(unused)]\n+        fn needless_take_by_value(s: String) {\n+            println!(\"{}\", s.len());\n+        }\n+        #[allow(unused)]\n+        fn needless_loop(items: &[u8]) {\n+            for i in 0..items.len() {\n+                println!(\"{}\", items[i]);\n+            }\n+        }\n+        fn line_wrapper() {\n+            println!(\"{}\", line!());\n+        }\n+    )\n+}"}, {"sha": "c7468493380c8eb3f994279c32102242fd477fc3", "filename": "tests/ui/crashes/procedural_macro.rs", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/16e347f7b3f647b6cf12885352e5e31d6de9bd92/tests%2Fui%2Fcrashes%2Fprocedural_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16e347f7b3f647b6cf12885352e5e31d6de9bd92/tests%2Fui%2Fcrashes%2Fprocedural_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fprocedural_macro.rs?ref=16e347f7b3f647b6cf12885352e5e31d6de9bd92", "patch": "@@ -1,11 +0,0 @@\n-#[macro_use]\n-extern crate clippy_mini_macro_test;\n-\n-#[deny(warnings)]\n-fn main() {\n-    let x = Foo;\n-    println!(\"{:?}\", x);\n-}\n-\n-#[derive(ClippyMiniMacroTest, Debug)]\n-struct Foo;"}, {"sha": "70d49d9f2c4ae1edd8497e9133f3598369431148", "filename": "tests/ui/macro_use_imports.fixed", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/543a8a6aac8b346c75dc69cb5b7945a52f72ffe7/tests%2Fui%2Fmacro_use_imports.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/543a8a6aac8b346c75dc69cb5b7945a52f72ffe7/tests%2Fui%2Fmacro_use_imports.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacro_use_imports.fixed?ref=543a8a6aac8b346c75dc69cb5b7945a52f72ffe7", "patch": "@@ -1,6 +1,7 @@\n // compile-flags: --edition 2018\n // aux-build:macro_rules.rs\n // aux-build:macro_use_helper.rs\n+// aux-build:proc_macro_derive.rs\n // run-rustfix\n // ignore-32bit\n \n@@ -12,7 +13,7 @@\n extern crate macro_use_helper as mac;\n \n #[macro_use]\n-extern crate clippy_mini_macro_test as mini_mac;\n+extern crate proc_macro_derive as mini_mac;\n \n mod a {\n     use mac::{pub_macro, inner_mod_macro, function_macro, ty_macro, pub_in_private_macro};"}, {"sha": "68370023861145dc15a29d4a6696138e06910d05", "filename": "tests/ui/macro_use_imports.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/543a8a6aac8b346c75dc69cb5b7945a52f72ffe7/tests%2Fui%2Fmacro_use_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/543a8a6aac8b346c75dc69cb5b7945a52f72ffe7/tests%2Fui%2Fmacro_use_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacro_use_imports.rs?ref=543a8a6aac8b346c75dc69cb5b7945a52f72ffe7", "patch": "@@ -1,6 +1,7 @@\n // compile-flags: --edition 2018\n // aux-build:macro_rules.rs\n // aux-build:macro_use_helper.rs\n+// aux-build:proc_macro_derive.rs\n // run-rustfix\n // ignore-32bit\n \n@@ -12,7 +13,7 @@\n extern crate macro_use_helper as mac;\n \n #[macro_use]\n-extern crate clippy_mini_macro_test as mini_mac;\n+extern crate proc_macro_derive as mini_mac;\n \n mod a {\n     #[macro_use]"}, {"sha": "49314b7506d336187642b16deee4aad13d34f342", "filename": "tests/ui/macro_use_imports.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/543a8a6aac8b346c75dc69cb5b7945a52f72ffe7/tests%2Fui%2Fmacro_use_imports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/543a8a6aac8b346c75dc69cb5b7945a52f72ffe7/tests%2Fui%2Fmacro_use_imports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacro_use_imports.stderr?ref=543a8a6aac8b346c75dc69cb5b7945a52f72ffe7", "patch": "@@ -1,28 +1,28 @@\n error: `macro_use` attributes are no longer needed in the Rust 2018 edition\n-  --> $DIR/macro_use_imports.rs:18:5\n+  --> $DIR/macro_use_imports.rs:19:5\n    |\n LL |     #[macro_use]\n    |     ^^^^^^^^^^^^ help: remove the attribute and import the macro directly, try: `use mac::{pub_macro, inner_mod_macro, function_macro, ty_macro, pub_in_private_macro};`\n    |\n    = note: `-D clippy::macro-use-imports` implied by `-D warnings`\n \n error: `macro_use` attributes are no longer needed in the Rust 2018 edition\n-  --> $DIR/macro_use_imports.rs:20:5\n+  --> $DIR/macro_use_imports.rs:25:5\n    |\n LL |     #[macro_use]\n-   |     ^^^^^^^^^^^^ help: remove the attribute and import the macro directly, try: `use mini_mac::ClippyMiniMacroTest;`\n+   |     ^^^^^^^^^^^^ help: remove the attribute and import the macro directly, try: `use mac::inner::nested::string_add;`\n \n error: `macro_use` attributes are no longer needed in the Rust 2018 edition\n-  --> $DIR/macro_use_imports.rs:22:5\n+  --> $DIR/macro_use_imports.rs:21:5\n    |\n LL |     #[macro_use]\n-   |     ^^^^^^^^^^^^ help: remove the attribute and import the macro directly, try: `use mac::{inner::foofoo, inner::try_err};`\n+   |     ^^^^^^^^^^^^ help: remove the attribute and import the macro directly, try: `use mini_mac::ClippyMiniMacroTest;`\n \n error: `macro_use` attributes are no longer needed in the Rust 2018 edition\n-  --> $DIR/macro_use_imports.rs:24:5\n+  --> $DIR/macro_use_imports.rs:23:5\n    |\n LL |     #[macro_use]\n-   |     ^^^^^^^^^^^^ help: remove the attribute and import the macro directly, try: `use mac::inner::nested::string_add;`\n+   |     ^^^^^^^^^^^^ help: remove the attribute and import the macro directly, try: `use mac::{inner::foofoo, inner::try_err};`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "f0c2ba7ccdfa0d1a7de8e7cb0cd243015e428159", "filename": "tests/ui/unseparated_prefix_literals.fixed", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/543a8a6aac8b346c75dc69cb5b7945a52f72ffe7/tests%2Fui%2Funseparated_prefix_literals.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/543a8a6aac8b346c75dc69cb5b7945a52f72ffe7/tests%2Fui%2Funseparated_prefix_literals.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funseparated_prefix_literals.fixed?ref=543a8a6aac8b346c75dc69cb5b7945a52f72ffe7", "patch": "@@ -1,10 +1,11 @@\n // run-rustfix\n+// aux-build:proc_macro_derive.rs\n \n #![warn(clippy::unseparated_literal_suffix)]\n #![allow(dead_code)]\n \n #[macro_use]\n-extern crate clippy_mini_macro_test;\n+extern crate proc_macro_derive;\n \n // Test for proc-macro attribute\n #[derive(ClippyMiniMacroTest)]"}, {"sha": "f44880b414756d2deb1d480ab19b168504192408", "filename": "tests/ui/unseparated_prefix_literals.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/543a8a6aac8b346c75dc69cb5b7945a52f72ffe7/tests%2Fui%2Funseparated_prefix_literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/543a8a6aac8b346c75dc69cb5b7945a52f72ffe7/tests%2Fui%2Funseparated_prefix_literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funseparated_prefix_literals.rs?ref=543a8a6aac8b346c75dc69cb5b7945a52f72ffe7", "patch": "@@ -1,10 +1,11 @@\n // run-rustfix\n+// aux-build:proc_macro_derive.rs\n \n #![warn(clippy::unseparated_literal_suffix)]\n #![allow(dead_code)]\n \n #[macro_use]\n-extern crate clippy_mini_macro_test;\n+extern crate proc_macro_derive;\n \n // Test for proc-macro attribute\n #[derive(ClippyMiniMacroTest)]"}, {"sha": "ab2f75e0c56deca65bfc00e8762e536827bcb7d0", "filename": "tests/ui/unseparated_prefix_literals.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/543a8a6aac8b346c75dc69cb5b7945a52f72ffe7/tests%2Fui%2Funseparated_prefix_literals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/543a8a6aac8b346c75dc69cb5b7945a52f72ffe7/tests%2Fui%2Funseparated_prefix_literals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funseparated_prefix_literals.stderr?ref=543a8a6aac8b346c75dc69cb5b7945a52f72ffe7", "patch": "@@ -1,49 +1,49 @@\n error: integer type suffix should be separated by an underscore\n-  --> $DIR/unseparated_prefix_literals.rs:23:18\n+  --> $DIR/unseparated_prefix_literals.rs:24:18\n    |\n LL |     let _fail1 = 1234i32;\n    |                  ^^^^^^^ help: add an underscore: `1234_i32`\n    |\n    = note: `-D clippy::unseparated-literal-suffix` implied by `-D warnings`\n \n error: integer type suffix should be separated by an underscore\n-  --> $DIR/unseparated_prefix_literals.rs:24:18\n+  --> $DIR/unseparated_prefix_literals.rs:25:18\n    |\n LL |     let _fail2 = 1234u32;\n    |                  ^^^^^^^ help: add an underscore: `1234_u32`\n \n error: integer type suffix should be separated by an underscore\n-  --> $DIR/unseparated_prefix_literals.rs:25:18\n+  --> $DIR/unseparated_prefix_literals.rs:26:18\n    |\n LL |     let _fail3 = 1234isize;\n    |                  ^^^^^^^^^ help: add an underscore: `1234_isize`\n \n error: integer type suffix should be separated by an underscore\n-  --> $DIR/unseparated_prefix_literals.rs:26:18\n+  --> $DIR/unseparated_prefix_literals.rs:27:18\n    |\n LL |     let _fail4 = 1234usize;\n    |                  ^^^^^^^^^ help: add an underscore: `1234_usize`\n \n error: integer type suffix should be separated by an underscore\n-  --> $DIR/unseparated_prefix_literals.rs:27:18\n+  --> $DIR/unseparated_prefix_literals.rs:28:18\n    |\n LL |     let _fail5 = 0x123isize;\n    |                  ^^^^^^^^^^ help: add an underscore: `0x123_isize`\n \n error: float type suffix should be separated by an underscore\n-  --> $DIR/unseparated_prefix_literals.rs:31:19\n+  --> $DIR/unseparated_prefix_literals.rs:32:19\n    |\n LL |     let _failf1 = 1.5f32;\n    |                   ^^^^^^ help: add an underscore: `1.5_f32`\n \n error: float type suffix should be separated by an underscore\n-  --> $DIR/unseparated_prefix_literals.rs:32:19\n+  --> $DIR/unseparated_prefix_literals.rs:33:19\n    |\n LL |     let _failf2 = 1f32;\n    |                   ^^^^ help: add an underscore: `1_f32`\n \n error: integer type suffix should be separated by an underscore\n-  --> $DIR/unseparated_prefix_literals.rs:15:9\n+  --> $DIR/unseparated_prefix_literals.rs:16:9\n    |\n LL |         42usize\n    |         ^^^^^^^ help: add an underscore: `42_usize`\n@@ -54,7 +54,7 @@ LL |     let _ = lit_from_macro!();\n    = note: this error originates in the macro `lit_from_macro` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: integer type suffix should be separated by an underscore\n-  --> $DIR/unseparated_prefix_literals.rs:40:16\n+  --> $DIR/unseparated_prefix_literals.rs:41:16\n    |\n LL |     assert_eq!(4897u32, 32223);\n    |                ^^^^^^^ help: add an underscore: `4897_u32`"}]}