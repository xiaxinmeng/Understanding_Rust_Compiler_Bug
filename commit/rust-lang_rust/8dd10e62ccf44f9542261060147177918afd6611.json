{"sha": "8dd10e62ccf44f9542261060147177918afd6611", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkZDEwZTYyY2NmNDRmOTU0MjI2MTA2MDE0NzE3NzkxOGFmZDY2MTE=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-11-27T19:16:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-11-27T19:16:49Z"}, "message": "Rollup merge of #46282 - estebank:impl-trait-cicle-span, r=arielb1\n\nShorten output of E0391\n\nUse the shorter `def_span` on the impl-Trait cyclic reference errors.", "tree": {"sha": "27e08e51630bdfc590b19b4b7809f779275ff736", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27e08e51630bdfc590b19b4b7809f779275ff736"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8dd10e62ccf44f9542261060147177918afd6611", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8dd10e62ccf44f9542261060147177918afd6611", "html_url": "https://github.com/rust-lang/rust/commit/8dd10e62ccf44f9542261060147177918afd6611", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8dd10e62ccf44f9542261060147177918afd6611/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81ba35228c82426725670fb2fb7cbbaa194b0f5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/81ba35228c82426725670fb2fb7cbbaa194b0f5c", "html_url": "https://github.com/rust-lang/rust/commit/81ba35228c82426725670fb2fb7cbbaa194b0f5c"}, {"sha": "487daabb529b437e99342c0d49db2401376e1a71", "url": "https://api.github.com/repos/rust-lang/rust/commits/487daabb529b437e99342c0d49db2401376e1a71", "html_url": "https://github.com/rust-lang/rust/commit/487daabb529b437e99342c0d49db2401376e1a71"}], "stats": {"total": 63, "additions": 58, "deletions": 5}, "files": [{"sha": "75df4dc524afa73416cad70b669bf67eb1911b40", "filename": "src/librustc/ty/maps/plumbing.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8dd10e62ccf44f9542261060147177918afd6611/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd10e62ccf44f9542261060147177918afd6611/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs?ref=8dd10e62ccf44f9542261060147177918afd6611", "patch": "@@ -81,17 +81,18 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n         // (And cycle errors around impls tend to occur during the\n         // collect/coherence phases anyhow.)\n         item_path::with_forced_impl_filename_line(|| {\n+            let span = self.sess.codemap().def_span(span);\n             let mut err =\n                 struct_span_err!(self.sess, span, E0391,\n                                  \"unsupported cyclic reference between types/traits detected\");\n             err.span_label(span, \"cyclic reference\");\n \n-            err.span_note(stack[0].0, &format!(\"the cycle begins when {}...\",\n-                                               stack[0].1.describe(self)));\n+            err.span_note(self.sess.codemap().def_span(stack[0].0),\n+                          &format!(\"the cycle begins when {}...\", stack[0].1.describe(self)));\n \n             for &(span, ref query) in &stack[1..] {\n-                err.span_note(span, &format!(\"...which then requires {}...\",\n-                                             query.describe(self)));\n+                err.span_note(self.sess.codemap().def_span(span),\n+                              &format!(\"...which then requires {}...\", query.describe(self)));\n             }\n \n             err.note(&format!(\"...which then again requires {}, completing the cycle.\","}, {"sha": "8a5033e76478ba90e0347ff01578f9d25889a381", "filename": "src/test/ui/impl-trait/auto-trait-leak.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8dd10e62ccf44f9542261060147177918afd6611/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd10e62ccf44f9542261060147177918afd6611/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.rs?ref=8dd10e62ccf44f9542261060147177918afd6611", "previous_filename": "src/test/compile-fail/impl-trait/auto-trait-leak.rs"}, {"sha": "1c03e9d8526450e46a79d94816a8fd1b0a2a5d28", "filename": "src/test/ui/impl-trait/auto-trait-leak.stderr", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/8dd10e62ccf44f9542261060147177918afd6611/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8dd10e62ccf44f9542261060147177918afd6611/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.stderr?ref=8dd10e62ccf44f9542261060147177918afd6611", "patch": "@@ -0,0 +1,52 @@\n+error[E0277]: the trait bound `std::rc::Rc<std::cell::Cell<i32>>: std::marker::Send` is not satisfied in `impl std::ops::Fn<(i32,)>`\n+  --> $DIR/auto-trait-leak.rs:27:5\n+   |\n+27 |     send(before());\n+   |     ^^^^ `std::rc::Rc<std::cell::Cell<i32>>` cannot be sent between threads safely\n+   |\n+   = help: within `impl std::ops::Fn<(i32,)>`, the trait `std::marker::Send` is not implemented for `std::rc::Rc<std::cell::Cell<i32>>`\n+   = note: required because it appears within the type `[closure@$DIR/auto-trait-leak.rs:21:5: 21:22 p:std::rc::Rc<std::cell::Cell<i32>>]`\n+   = note: required because it appears within the type `impl std::ops::Fn<(i32,)>`\n+   = note: required by `send`\n+\n+error[E0277]: the trait bound `std::rc::Rc<std::cell::Cell<i32>>: std::marker::Send` is not satisfied in `impl std::ops::Fn<(i32,)>`\n+  --> $DIR/auto-trait-leak.rs:34:5\n+   |\n+34 |     send(after());\n+   |     ^^^^ `std::rc::Rc<std::cell::Cell<i32>>` cannot be sent between threads safely\n+   |\n+   = help: within `impl std::ops::Fn<(i32,)>`, the trait `std::marker::Send` is not implemented for `std::rc::Rc<std::cell::Cell<i32>>`\n+   = note: required because it appears within the type `[closure@$DIR/auto-trait-leak.rs:46:5: 46:22 p:std::rc::Rc<std::cell::Cell<i32>>]`\n+   = note: required because it appears within the type `impl std::ops::Fn<(i32,)>`\n+   = note: required by `send`\n+\n+error[E0391]: unsupported cyclic reference between types/traits detected\n+  --> $DIR/auto-trait-leak.rs:52:1\n+   |\n+52 | fn cycle1() -> impl Clone {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^ cyclic reference\n+   |\n+note: the cycle begins when processing `cycle1`...\n+  --> $DIR/auto-trait-leak.rs:52:1\n+   |\n+52 | fn cycle1() -> impl Clone {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: ...which then requires processing `cycle2::{{impl-Trait}}`...\n+  --> $DIR/auto-trait-leak.rs:63:16\n+   |\n+63 | fn cycle2() -> impl Clone {\n+   |                ^^^^^^^^^^\n+note: ...which then requires processing `cycle2`...\n+  --> $DIR/auto-trait-leak.rs:63:1\n+   |\n+63 | fn cycle2() -> impl Clone {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: ...which then requires processing `cycle1::{{impl-Trait}}`...\n+  --> $DIR/auto-trait-leak.rs:52:16\n+   |\n+52 | fn cycle1() -> impl Clone {\n+   |                ^^^^^^^^^^\n+   = note: ...which then again requires processing `cycle1`, completing the cycle.\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "5bba9fc41e276f359a9ba2e7316c85739d10c1ce", "filename": "src/test/ui/resolve/issue-23305.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8dd10e62ccf44f9542261060147177918afd6611/src%2Ftest%2Fui%2Fresolve%2Fissue-23305.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8dd10e62ccf44f9542261060147177918afd6611/src%2Ftest%2Fui%2Fresolve%2Fissue-23305.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-23305.stderr?ref=8dd10e62ccf44f9542261060147177918afd6611", "patch": "@@ -8,7 +8,7 @@ note: the cycle begins when processing `<impl at $DIR/issue-23305.rs:15:1: 15:20\n   --> $DIR/issue-23305.rs:15:1\n    |\n 15 | impl ToNbt<Self> {}\n-   | ^^^^^^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^^^^\n    = note: ...which then again requires processing `<impl at $DIR/issue-23305.rs:15:1: 15:20>`, completing the cycle.\n \n error: aborting due to previous error"}]}