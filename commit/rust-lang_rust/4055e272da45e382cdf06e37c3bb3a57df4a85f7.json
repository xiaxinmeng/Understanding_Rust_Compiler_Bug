{"sha": "4055e272da45e382cdf06e37c3bb3a57df4a85f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwNTVlMjcyZGE0NWUzODJjZGYwNmUzN2MzYmIzYTU3ZGY0YTg1Zjc=", "commit": {"author": {"name": "Stuart Dootson", "email": "stuart.dootson@gmail.com", "date": "2016-08-09T20:10:48Z"}, "committer": {"name": "Stuart Dootson", "email": "stuart.dootson@gmail.com", "date": "2016-08-09T20:10:48Z"}, "message": "Reformat the source to actually pass the tests!", "tree": {"sha": "604ae253f91e511e03e31868012969b96d35d7fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/604ae253f91e511e03e31868012969b96d35d7fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4055e272da45e382cdf06e37c3bb3a57df4a85f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4055e272da45e382cdf06e37c3bb3a57df4a85f7", "html_url": "https://github.com/rust-lang/rust/commit/4055e272da45e382cdf06e37c3bb3a57df4a85f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4055e272da45e382cdf06e37c3bb3a57df4a85f7/comments", "author": {"login": "studoot", "id": 799344, "node_id": "MDQ6VXNlcjc5OTM0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/799344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/studoot", "html_url": "https://github.com/studoot", "followers_url": "https://api.github.com/users/studoot/followers", "following_url": "https://api.github.com/users/studoot/following{/other_user}", "gists_url": "https://api.github.com/users/studoot/gists{/gist_id}", "starred_url": "https://api.github.com/users/studoot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/studoot/subscriptions", "organizations_url": "https://api.github.com/users/studoot/orgs", "repos_url": "https://api.github.com/users/studoot/repos", "events_url": "https://api.github.com/users/studoot/events{/privacy}", "received_events_url": "https://api.github.com/users/studoot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "studoot", "id": 799344, "node_id": "MDQ6VXNlcjc5OTM0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/799344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/studoot", "html_url": "https://github.com/studoot", "followers_url": "https://api.github.com/users/studoot/followers", "following_url": "https://api.github.com/users/studoot/following{/other_user}", "gists_url": "https://api.github.com/users/studoot/gists{/gist_id}", "starred_url": "https://api.github.com/users/studoot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/studoot/subscriptions", "organizations_url": "https://api.github.com/users/studoot/orgs", "repos_url": "https://api.github.com/users/studoot/repos", "events_url": "https://api.github.com/users/studoot/events{/privacy}", "received_events_url": "https://api.github.com/users/studoot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb0b7108ca32caacb4c7d7c8beff24966d2485e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb0b7108ca32caacb4c7d7c8beff24966d2485e1", "html_url": "https://github.com/rust-lang/rust/commit/cb0b7108ca32caacb4c7d7c8beff24966d2485e1"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "1e690c647a1dd9c182543d11a4abd29370863128", "filename": "tests/system.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4055e272da45e382cdf06e37c3bb3a57df4a85f7/tests%2Fsystem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4055e272da45e382cdf06e37c3bb3a57df4a85f7/tests%2Fsystem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsystem.rs?ref=4055e272da45e382cdf06e37c3bb3a57df4a85f7", "patch": "@@ -208,8 +208,11 @@ fn read_config(filename: &str) -> Config {\n     let mut config = if !sig_comments.is_empty() {\n         get_config(sig_comments.get(\"config\").map(|x| &(*x)[..]))\n     } else {\n-        get_config(Path::new(filename).with_extension(\"toml\").file_name().and_then(std::ffi::OsStr::to_str))\n-    }; \n+        get_config(Path::new(filename)\n+            .with_extension(\"toml\")\n+            .file_name()\n+            .and_then(std::ffi::OsStr::to_str))\n+    };\n \n     for (key, val) in &sig_comments {\n         if key != \"target\" && key != \"config\" {"}]}