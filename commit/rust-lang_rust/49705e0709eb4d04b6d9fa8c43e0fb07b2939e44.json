{"sha": "49705e0709eb4d04b6d9fa8c43e0fb07b2939e44", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5NzA1ZTA3MDllYjRkMDRiNmQ5ZmE4YzQzZTBmYjA3YjI5MzllNDQ=", "commit": {"author": {"name": "Hameer Abbasi", "email": "einstein.edison@gmail.com", "date": "2021-04-01T09:24:01Z"}, "committer": {"name": "Hameer Abbasi", "email": "einstein.edison@gmail.com", "date": "2021-04-01T09:24:01Z"}, "message": "Limit the problematic tests to x86_64.", "tree": {"sha": "854522ef20ade27f908e4e9ff178b69ebdb823ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/854522ef20ade27f908e4e9ff178b69ebdb823ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49705e0709eb4d04b6d9fa8c43e0fb07b2939e44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49705e0709eb4d04b6d9fa8c43e0fb07b2939e44", "html_url": "https://github.com/rust-lang/rust/commit/49705e0709eb4d04b6d9fa8c43e0fb07b2939e44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49705e0709eb4d04b6d9fa8c43e0fb07b2939e44/comments", "author": {"login": "hameerabbasi", "id": 2190658, "node_id": "MDQ6VXNlcjIxOTA2NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/2190658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hameerabbasi", "html_url": "https://github.com/hameerabbasi", "followers_url": "https://api.github.com/users/hameerabbasi/followers", "following_url": "https://api.github.com/users/hameerabbasi/following{/other_user}", "gists_url": "https://api.github.com/users/hameerabbasi/gists{/gist_id}", "starred_url": "https://api.github.com/users/hameerabbasi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hameerabbasi/subscriptions", "organizations_url": "https://api.github.com/users/hameerabbasi/orgs", "repos_url": "https://api.github.com/users/hameerabbasi/repos", "events_url": "https://api.github.com/users/hameerabbasi/events{/privacy}", "received_events_url": "https://api.github.com/users/hameerabbasi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hameerabbasi", "id": 2190658, "node_id": "MDQ6VXNlcjIxOTA2NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/2190658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hameerabbasi", "html_url": "https://github.com/hameerabbasi", "followers_url": "https://api.github.com/users/hameerabbasi/followers", "following_url": "https://api.github.com/users/hameerabbasi/following{/other_user}", "gists_url": "https://api.github.com/users/hameerabbasi/gists{/gist_id}", "starred_url": "https://api.github.com/users/hameerabbasi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hameerabbasi/subscriptions", "organizations_url": "https://api.github.com/users/hameerabbasi/orgs", "repos_url": "https://api.github.com/users/hameerabbasi/repos", "events_url": "https://api.github.com/users/hameerabbasi/events{/privacy}", "received_events_url": "https://api.github.com/users/hameerabbasi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38b31691a7c6124ae4e48809ee9e083c1ca1f635", "url": "https://api.github.com/repos/rust-lang/rust/commits/38b31691a7c6124ae4e48809ee9e083c1ca1f635", "html_url": "https://github.com/rust-lang/rust/commit/38b31691a7c6124ae4e48809ee9e083c1ca1f635"}], "stats": {"total": 65, "additions": 2, "deletions": 63}, "files": [{"sha": "472bd214de769cca7a0aa49bb0dc2fefc89a8c75", "filename": "src/test/ui/consts/const-eval/union-const-eval-field.32bit.stderr", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/38b31691a7c6124ae4e48809ee9e083c1ca1f635/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funion-const-eval-field.32bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/38b31691a7c6124ae4e48809ee9e083c1ca1f635/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funion-const-eval-field.32bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funion-const-eval-field.32bit.stderr?ref=38b31691a7c6124ae4e48809ee9e083c1ca1f635", "patch": "@@ -1,14 +0,0 @@\n-error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/union-const-eval-field.rs:29:5\n-   |\n-LL |     const FIELD3: Field3 = unsafe { UNION.field3 };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered uninitialized bytes, but expected initialized plain (non-pointer) bytes\n-   |\n-   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n-   = note: the raw bytes of the constant (size: 8, align: 4) {\n-               __ __ __ __ __ __ __ __                         \u2502 \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n-           }\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0080`."}, {"sha": "f8e1d6d569dd9222b67a564f6d3f3fbb2cfef02a", "filename": "src/test/ui/consts/const-eval/union-const-eval-field.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49705e0709eb4d04b6d9fa8c43e0fb07b2939e44/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funion-const-eval-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49705e0709eb4d04b6d9fa8c43e0fb07b2939e44/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funion-const-eval-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funion-const-eval-field.rs?ref=49705e0709eb4d04b6d9fa8c43e0fb07b2939e44", "patch": "@@ -1,4 +1,4 @@\n-// stderr-per-bitwidth\n+// only-x86_64\n #![feature(const_fn)]\n \n type Field1 = i32;"}, {"sha": "c1c2dcb22695ded378bc0335671cd5143c58701f", "filename": "src/test/ui/consts/const-eval/union-const-eval-field.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/49705e0709eb4d04b6d9fa8c43e0fb07b2939e44/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funion-const-eval-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/49705e0709eb4d04b6d9fa8c43e0fb07b2939e44/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funion-const-eval-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funion-const-eval-field.stderr?ref=49705e0709eb4d04b6d9fa8c43e0fb07b2939e44", "previous_filename": "src/test/ui/consts/const-eval/union-const-eval-field.64bit.stderr"}, {"sha": "f8502ad66c5e03f4ea8428e41f14f8ecf58f34f3", "filename": "src/test/ui/consts/const-eval/union-ice.32bit.stderr", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/38b31691a7c6124ae4e48809ee9e083c1ca1f635/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funion-ice.32bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/38b31691a7c6124ae4e48809ee9e083c1ca1f635/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funion-ice.32bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funion-ice.32bit.stderr?ref=38b31691a7c6124ae4e48809ee9e083c1ca1f635", "patch": "@@ -1,47 +0,0 @@\n-error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/union-ice.rs:15:1\n-   |\n-LL | const FIELD3: Field3 = unsafe { UNION.field3 };\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered uninitialized bytes, but expected initialized plain (non-pointer) bytes\n-   |\n-   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n-   = note: the raw bytes of the constant (size: 8, align: 4) {\n-               __ __ __ __ __ __ __ __                         \u2502 \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n-           }\n-\n-error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/union-ice.rs:17:1\n-   |\n-LL | / const FIELD_PATH: Struct = Struct {\n-LL | |     a: 42,\n-LL | |     b: unsafe { UNION.field3 },\n-LL | | };\n-   | |__^ type validation failed: encountered uninitialized bytes at .b, but expected initialized plain (non-pointer) bytes\n-   |\n-   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n-   = note: the raw bytes of the constant (size: 12, align: 4) {\n-               __ __ __ __ __ __ __ __ 2a __ __ __             \u2502 \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591*\u2591\u2591\u2591\n-           }\n-\n-error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/union-ice.rs:27:1\n-   |\n-LL | / const FIELD_PATH2: Struct2 = Struct2 {\n-LL | |     b: [\n-LL | |         21,\n-LL | |         unsafe { UNION.field3 },\n-...  |\n-LL | |     a: 42,\n-LL | | };\n-   | |__^ type validation failed: encountered uninitialized bytes at .b[1]\n-   |\n-   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n-   = note: the raw bytes of the constant (size: 36, align: 4) {\n-               0x00 \u2502 15 00 00 00 00 00 00 00 __ __ __ __ __ __ __ __ \u2502 ........\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n-               0x10 \u2502 17 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00 \u2502 ................\n-               0x20 \u2502 2a __ __ __                                     \u2502 *\u2591\u2591\u2591\n-           }\n-\n-error: aborting due to 3 previous errors\n-\n-For more information about this error, try `rustc --explain E0080`."}, {"sha": "40e5a005ba4af0eb9c136814b376cd4a83214a9f", "filename": "src/test/ui/consts/const-eval/union-ice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49705e0709eb4d04b6d9fa8c43e0fb07b2939e44/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funion-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49705e0709eb4d04b6d9fa8c43e0fb07b2939e44/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funion-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funion-ice.rs?ref=49705e0709eb4d04b6d9fa8c43e0fb07b2939e44", "patch": "@@ -1,4 +1,4 @@\n-// stderr-per-bitwidth\n+// only-x86_64\n #![feature(const_fn)]\n \n type Field1 = i32;"}, {"sha": "f8b9478ad1a60fbc37b5479519c6c8d4deea796d", "filename": "src/test/ui/consts/const-eval/union-ice.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/49705e0709eb4d04b6d9fa8c43e0fb07b2939e44/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funion-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/49705e0709eb4d04b6d9fa8c43e0fb07b2939e44/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funion-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funion-ice.stderr?ref=49705e0709eb4d04b6d9fa8c43e0fb07b2939e44", "previous_filename": "src/test/ui/consts/const-eval/union-ice.64bit.stderr"}]}