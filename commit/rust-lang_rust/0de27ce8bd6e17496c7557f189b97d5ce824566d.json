{"sha": "0de27ce8bd6e17496c7557f189b97d5ce824566d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkZTI3Y2U4YmQ2ZTE3NDk2Yzc1NTdmMTg5Yjk3ZDVjZTgyNDU2NmQ=", "commit": {"author": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-05-20T23:45:51Z"}, "committer": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-05-20T23:51:09Z"}, "message": "Translated start_task, but it fails on spp == align_down(spp)", "tree": {"sha": "13d7780f9316409e9374a5438a47490c8a33e6fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13d7780f9316409e9374a5438a47490c8a33e6fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0de27ce8bd6e17496c7557f189b97d5ce824566d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0de27ce8bd6e17496c7557f189b97d5ce824566d", "html_url": "https://github.com/rust-lang/rust/commit/0de27ce8bd6e17496c7557f189b97d5ce824566d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0de27ce8bd6e17496c7557f189b97d5ce824566d/comments", "author": null, "committer": null, "parents": [{"sha": "d01948cd076b0266607277aea8f729d36b925053", "url": "https://api.github.com/repos/rust-lang/rust/commits/d01948cd076b0266607277aea8f729d36b925053", "html_url": "https://github.com/rust-lang/rust/commit/d01948cd076b0266607277aea8f729d36b925053"}], "stats": {"total": 65, "additions": 58, "deletions": 7}, "files": [{"sha": "7f695518ed4cc328cf712fc3199d35b18896012c", "filename": "src/comp/back/upcall.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0de27ce8bd6e17496c7557f189b97d5ce824566d/src%2Fcomp%2Fback%2Fupcall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0de27ce8bd6e17496c7557f189b97d5ce824566d/src%2Fcomp%2Fback%2Fupcall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Fupcall.rs?ref=0de27ce8bd6e17496c7557f189b97d5ce824566d", "patch": "@@ -123,8 +123,8 @@ fn declare_upcalls(type_names tn, ModuleRef llmod) -> @upcalls {\n                             T_size_t(), T_ptr(T_ptr(T_tydesc(tn)))],\n                         T_ptr(T_tydesc(tn))),\n         new_task=d(\"new_task\", [T_ptr(T_str())], T_taskptr(tn)),\n-        start_task=d(\"start_task\", [T_taskptr(tn), T_int(), T_int(),\n-                                       T_int(), T_size_t()],\n+        start_task=d(\"start_task\", [T_taskptr(tn), \n+                                    T_int(), T_int(), T_size_t()],\n                      T_taskptr(tn)),\n         new_thread=d(\"new_thread\", [T_ptr(T_i8())], T_taskptr(tn)),\n         start_thread=d(\"start_thread\", [T_taskptr(tn), T_int(), T_int(),\n@@ -133,3 +133,13 @@ fn declare_upcalls(type_names tn, ModuleRef llmod) -> @upcalls {\n     );\n }\n \n+//\n+// Local Variables:\n+// mode: C++\n+// fill-column: 78;\n+// indent-tabs-mode: nil\n+// c-basic-offset: 4\n+// buffer-file-coding-system: utf-8-unix\n+// compile-command: \"make -k -C .. 2>&1 | sed -e 's/\\\\/x\\\\//x:\\\\//g'\";\n+// End:\n+//"}, {"sha": "12087e1a763792f73f6e7b80042e79c24a4378d4", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/0de27ce8bd6e17496c7557f189b97d5ce824566d/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0de27ce8bd6e17496c7557f189b97d5ce824566d/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=0de27ce8bd6e17496c7557f189b97d5ce824566d", "patch": "@@ -5981,6 +5981,47 @@ fn trans_spawn(&@block_ctxt cx,\n                               [bcx.fcx.lltaskptr, lltname]);\n     log_err \"Done\";\n \n+    // Okay, start the task.\n+    // First we find the function\n+    auto fnptr = trans_lval(bcx, func).res;\n+    bcx = fnptr.bcx;\n+    \n+    auto num_args = vec::len[@ast::expr](args);\n+\n+    auto llfnptr = bcx.build.GEP(fnptr.val,\n+                                 [C_int(0), C_int(0)]);\n+    log_err \"Casting llfnptr\";\n+    auto llfnptr_i = bcx.build.PointerCast(llfnptr,\n+                                    T_int());\n+    log_err \"Cassting llargs\";\n+    auto llargs_i = bcx.build.PointerCast(llargs.val,\n+                                   T_int());\n+\n+    log_err \"Building call to start_task\";\n+    log_err #fmt(\"ty(start_task) = %s\", \n+                 val_str(bcx.fcx.lcx.ccx.tn,\n+                         bcx.fcx.lcx.ccx.upcalls.start_task));\n+    log_err #fmt(\"ty(lltaskptr) = %s\", \n+                 val_str(bcx.fcx.lcx.ccx.tn,\n+                         bcx.fcx.lltaskptr));\n+    log_err #fmt(\"ty(new_task) = %s\", \n+                 val_str(bcx.fcx.lcx.ccx.tn,\n+                         new_task));\n+    log_err #fmt(\"ty(llfnptr) = %s\", \n+                 val_str(bcx.fcx.lcx.ccx.tn,\n+                         llfnptr_i));\n+    log_err #fmt(\"ty(llargs) = %s\", \n+                 val_str(bcx.fcx.lcx.ccx.tn,\n+                         llargs_i));\n+    log_err #fmt(\"ty(num_args) = %s\", \n+                 val_str(bcx.fcx.lcx.ccx.tn,\n+                         C_int(num_args as int)));\n+    bcx.build.Call(bcx.fcx.lcx.ccx.upcalls.start_task,\n+                   [bcx.fcx.lltaskptr, new_task,\n+                    llfnptr_i, llargs_i, C_int(num_args as int)]);\n+    log_err \"Done\";\n+\n+    /*\n     alt(dom) {\n         case(ast::dom_implicit) {\n             // TODO\n@@ -5995,6 +6036,7 @@ fn trans_spawn(&@block_ctxt cx,\n             fail;\n         }\n     }\n+    */\n \n     ret res(bcx, new_task);\n }"}, {"sha": "48d6a67ce44dc229b361b25fefe73f2aaf0b6e1e", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0de27ce8bd6e17496c7557f189b97d5ce824566d/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/0de27ce8bd6e17496c7557f189b97d5ce824566d/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=0de27ce8bd6e17496c7557f189b97d5ce824566d", "patch": "@@ -549,20 +549,19 @@ upcall_new_task(rust_task *spawner, rust_vec *name) {\n extern \"C\" CDECL rust_task *\n upcall_start_task(rust_task *spawner,\n                   rust_task *task,\n-                  uintptr_t exit_task_glue,\n                   uintptr_t spawnee_fn,\n+                  uintptr_t args,\n                   size_t callsz) {\n     LOG_UPCALL_ENTRY(spawner);\n \n     rust_dom *dom = spawner->dom;\n     DLOG(dom, task,\n              \"upcall start_task(task %s @0x%\" PRIxPTR\n-             \" exit_task_glue 0x%\" PRIxPTR\n              \", spawnee 0x%\" PRIxPTR\n-             \", callsz %\" PRIdPTR \")\", task->name, task, exit_task_glue,\n+             \", callsz %\" PRIdPTR \")\", task->name, task,\n              spawnee_fn, callsz);\n-    task->start(exit_task_glue, spawnee_fn,\n-                spawner->rust_sp, callsz);\n+    task->start((uintptr_t)rust_new_exit_task_glue, spawnee_fn,\n+                args, callsz);\n     return task;\n }\n "}]}