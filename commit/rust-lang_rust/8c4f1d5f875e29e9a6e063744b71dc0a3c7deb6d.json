{"sha": "8c4f1d5f875e29e9a6e063744b71dc0a3c7deb6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjNGYxZDVmODc1ZTI5ZTlhNmUwNjM3NDRiNzFkYzBhM2M3ZGViNmQ=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-12-12T02:20:29Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-12-12T02:21:52Z"}, "message": "review comments", "tree": {"sha": "b83c8c5f202487c004f2bab61b526b15c99b85ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b83c8c5f202487c004f2bab61b526b15c99b85ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c4f1d5f875e29e9a6e063744b71dc0a3c7deb6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c4f1d5f875e29e9a6e063744b71dc0a3c7deb6d", "html_url": "https://github.com/rust-lang/rust/commit/8c4f1d5f875e29e9a6e063744b71dc0a3c7deb6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c4f1d5f875e29e9a6e063744b71dc0a3c7deb6d/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3980342f3164a62ba7036711c16cc8af20d06418", "url": "https://api.github.com/repos/rust-lang/rust/commits/3980342f3164a62ba7036711c16cc8af20d06418", "html_url": "https://github.com/rust-lang/rust/commit/3980342f3164a62ba7036711c16cc8af20d06418"}], "stats": {"total": 150, "additions": 84, "deletions": 66}, "files": [{"sha": "9cd8c9abfd783e2519321cb0d81dcde8e42bf3f3", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 76, "deletions": 58, "changes": 134, "blob_url": "https://github.com/rust-lang/rust/blob/8c4f1d5f875e29e9a6e063744b71dc0a3c7deb6d/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c4f1d5f875e29e9a6e063744b71dc0a3c7deb6d/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=8c4f1d5f875e29e9a6e063744b71dc0a3c7deb6d", "patch": "@@ -15,7 +15,7 @@ use rustc::traits::Obligation;\n use rustc::ty::{self, Ty, TyCtxt, ToPolyTraitRef, ToPredicate, TypeFoldable};\n use rustc::ty::print::with_crate_prefix;\n use syntax_pos::{Span, FileName};\n-use syntax::ast;\n+use syntax::{ast, source_map};\n use syntax::util::lev_distance;\n \n use rustc_error_codes::*;\n@@ -79,61 +79,6 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             return None;\n         }\n \n-        let print_disambiguation_help = |\n-            err: &mut DiagnosticBuilder<'_>,\n-            trait_name: String,\n-            rcvr_ty: Ty<'_>,\n-            kind: ty::AssocKind,\n-            span: Span,\n-            candidate: Option<usize>,\n-        | {\n-            let mut applicability = Applicability::MachineApplicable;\n-            let sugg_args = if let ty::AssocKind::Method = kind {\n-                format!(\n-                    \"({}{})\",\n-                    if rcvr_ty.is_region_ptr() && args.is_some() {\n-                        if rcvr_ty.is_mutable_ptr() {\n-                            \"&mut \"\n-                        } else {\n-                            \"&\"\n-                        }\n-                    } else {\n-                        \"\"\n-                    },\n-                    args.map(|arg| arg\n-                        .iter()\n-                        .map(|arg| self.tcx.sess.source_map().span_to_snippet(arg.span)\n-                            .unwrap_or_else(|_| {\n-                                applicability = Applicability::HasPlaceholders;\n-                                \"...\".to_owned()\n-                            }))\n-                        .collect::<Vec<_>>()\n-                        .join(\", \")\n-                    ).unwrap_or_else(|| {\n-                        applicability = Applicability::HasPlaceholders;\n-                        \"...\".to_owned()\n-                    }),\n-                )\n-            } else {\n-                String::new()\n-            };\n-            let sugg = format!(\"{}::{}{}\", trait_name, item_name, sugg_args);\n-            err.span_suggestion(\n-                span,\n-                &format!(\n-                    \"disambiguate the {} for {}\",\n-                    kind.suggestion_descr(),\n-                    if let Some(candidate) = candidate {\n-                        format!(\"candidate #{}\", candidate)\n-                    } else {\n-                        \"the candidate\".to_string()\n-                    },\n-                ),\n-                sugg,\n-                applicability,\n-            );\n-        };\n-\n         let report_candidates = |\n             span: Span,\n             err: &mut DiagnosticBuilder<'_>,\n@@ -215,7 +160,17 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                     .map(|ty| *ty)\n                                     .unwrap_or(rcvr_ty),\n                             };\n-                            print_disambiguation_help(err, path, ty, item.kind, sugg_span, idx);\n+                            print_disambiguation_help(\n+                                item_name,\n+                                args,\n+                                err,\n+                                path,\n+                                ty,\n+                                item.kind,\n+                                sugg_span,\n+                                idx,\n+                                self.tcx.sess.source_map(),\n+                            );\n                         }\n                     }\n                     CandidateSource::TraitSource(trait_did) => {\n@@ -244,7 +199,17 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                             None\n                         };\n                         let path = self.tcx.def_path_str(trait_did);\n-                        print_disambiguation_help(err, path, rcvr_ty, item.kind, sugg_span, idx);\n+                        print_disambiguation_help(\n+                            item_name,\n+                            args,\n+                            err,\n+                            path,\n+                            rcvr_ty,\n+                            item.kind,\n+                            sugg_span,\n+                            idx,\n+                            self.tcx.sess.source_map(),\n+                        );\n                     }\n                 }\n             }\n@@ -1180,3 +1145,56 @@ impl hir::intravisit::Visitor<'tcx> for UsePlacementFinder<'tcx> {\n         hir::intravisit::NestedVisitorMap::None\n     }\n }\n+\n+fn print_disambiguation_help(\n+    item_name: ast::Ident,\n+    args: Option<&'tcx [hir::Expr]>,\n+    err: &mut DiagnosticBuilder<'_>,\n+    trait_name: String,\n+    rcvr_ty: Ty<'_>,\n+    kind: ty::AssocKind,\n+    span: Span,\n+    candidate: Option<usize>,\n+    source_map: &source_map::SourceMap,\n+) {\n+    let mut applicability = Applicability::MachineApplicable;\n+    let sugg_args = if let (ty::AssocKind::Method, Some(args)) = (kind, args) {\n+        format!(\n+            \"({}{})\",\n+            if rcvr_ty.is_region_ptr() {\n+                if rcvr_ty.is_mutable_ptr() {\n+                    \"&mut \"\n+                } else {\n+                    \"&\"\n+                }\n+            } else {\n+                \"\"\n+            },\n+            args.iter()\n+                .map(|arg| source_map.span_to_snippet(arg.span)\n+                    .unwrap_or_else(|_| {\n+                        applicability = Applicability::HasPlaceholders;\n+                        \"_\".to_owned()\n+                    }))\n+                .collect::<Vec<_>>()\n+                .join(\", \"),\n+        )\n+    } else {\n+        String::new()\n+    };\n+    let sugg = format!(\"{}::{}{}\", trait_name, item_name, sugg_args);\n+    err.span_suggestion(\n+        span,\n+        &format!(\n+            \"disambiguate the {} for {}\",\n+            kind.suggestion_descr(),\n+            if let Some(candidate) = candidate {\n+                format!(\"candidate #{}\", candidate)\n+            } else {\n+                \"the candidate\".to_string()\n+            },\n+        ),\n+        sugg,\n+        applicability,\n+    );\n+}"}, {"sha": "6db2ef5051d83ab0c32f3ee0734c11a9f5d790b5", "filename": "src/test/ui/error-codes/E0034.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8c4f1d5f875e29e9a6e063744b71dc0a3c7deb6d/src%2Ftest%2Fui%2Ferror-codes%2FE0034.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8c4f1d5f875e29e9a6e063744b71dc0a3c7deb6d/src%2Ftest%2Fui%2Ferror-codes%2FE0034.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0034.stderr?ref=8c4f1d5f875e29e9a6e063744b71dc0a3c7deb6d", "patch": "@@ -16,12 +16,12 @@ LL |     fn foo() {}\n    |     ^^^^^^^^\n help: disambiguate the method call for candidate #1\n    |\n-LL |     Trait1::foo(...)()\n-   |     ^^^^^^^^^^^^^^^^\n+LL |     Trait1::foo()\n+   |     ^^^^^^^^^^^\n help: disambiguate the method call for candidate #2\n    |\n-LL |     Trait2::foo(...)()\n-   |     ^^^^^^^^^^^^^^^^\n+LL |     Trait2::foo()\n+   |     ^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "44f85071505d2c33b594b151b4266ebbe5db083c", "filename": "src/test/ui/methods/method-ambig-two-traits-from-impls2.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8c4f1d5f875e29e9a6e063744b71dc0a3c7deb6d/src%2Ftest%2Fui%2Fmethods%2Fmethod-ambig-two-traits-from-impls2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8c4f1d5f875e29e9a6e063744b71dc0a3c7deb6d/src%2Ftest%2Fui%2Fmethods%2Fmethod-ambig-two-traits-from-impls2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fmethod-ambig-two-traits-from-impls2.stderr?ref=8c4f1d5f875e29e9a6e063744b71dc0a3c7deb6d", "patch": "@@ -16,12 +16,12 @@ LL |     fn foo() {}\n    |     ^^^^^^^^\n help: disambiguate the method call for candidate #1\n    |\n-LL |     A::foo(...)();\n-   |     ^^^^^^^^^^^\n+LL |     A::foo();\n+   |     ^^^^^^\n help: disambiguate the method call for candidate #2\n    |\n-LL |     B::foo(...)();\n-   |     ^^^^^^^^^^^\n+LL |     B::foo();\n+   |     ^^^^^^\n \n error: aborting due to previous error\n "}]}