{"sha": "1b32d14255aed79e1ff308e8c47b8cb884ed9703", "node_id": "C_kwDOAAsO6NoAKDFiMzJkMTQyNTVhZWQ3OWUxZmYzMDhlOGM0N2I4Y2I4ODRlZDk3MDM", "commit": {"author": {"name": "Andy Wang", "email": "cbeuw.andy@gmail.com", "date": "2022-06-05T21:11:55Z"}, "committer": {"name": "Andy Wang", "email": "cbeuw.andy@gmail.com", "date": "2022-06-06T18:16:02Z"}, "message": "Make racy imperfectly overlapping atomic access unsupported instead of UB\n\nCo-authored-by: Ralf Jung <post@ralfj.de>", "tree": {"sha": "6fdae3da40d54c19f291ccaf94de7932eab28b80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fdae3da40d54c19f291ccaf94de7932eab28b80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b32d14255aed79e1ff308e8c47b8cb884ed9703", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE7dcbcBMl24/h63ldGBtJ+fOPM3QFAmKeRGIACgkQGBtJ+fOP\nM3RAPwv+Po8W/LII+R5aMbEQ3hZ7ENn5zzJrgew0RVaWXEGy9cuYF96bt8Xz0npq\nsSB5XDjBaffP4Ruxot4mE35ZsGBu0pYFwi/ng1f0LWW5vxDmilIMwYfWN/8o9urJ\nYu2GS7DnDptarTa8trGS3vM4HuRu+qmvbsN+91M8TtMvNdjEYuPgJ58FWQrjTmzn\nPFJEAMHiCqaDeFRGKKPd8FBGnNi8biFaFnpCSkwDX9HS6Cr/JfJ8699ZPb+GmLVg\ngNBC26DOaBPKJkW8/PITQ/If18PinjFBVqn5vi2QAcZmMh11Pp1M/X7bGYljojQG\nsP1TCt0pA3u2bimBa5ER+C6zQaG/FwlQPoKGcsFsFiZ+hdLY7iEDPwSeD5sBitff\nJhoDWOAfGpab+/sM3neARnK+fnUljHxXjDozHeFa5HDscPyp8R/w94KO8uo384X/\nDJ8o710AXndnMbwAcqmE/JqdlUFAx6naaIX9Aj1mKEr3pQ1za0XqRo4R784228v+\nLNOhlRUa\n=MtnW\n-----END PGP SIGNATURE-----", "payload": "tree 6fdae3da40d54c19f291ccaf94de7932eab28b80\nparent bf7a5c41540a4005eb0f8d66afda205691fbb14b\nauthor Andy Wang <cbeuw.andy@gmail.com> 1654463515 +0100\ncommitter Andy Wang <cbeuw.andy@gmail.com> 1654539362 +0100\n\nMake racy imperfectly overlapping atomic access unsupported instead of UB\n\nCo-authored-by: Ralf Jung <post@ralfj.de>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b32d14255aed79e1ff308e8c47b8cb884ed9703", "html_url": "https://github.com/rust-lang/rust/commit/1b32d14255aed79e1ff308e8c47b8cb884ed9703", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b32d14255aed79e1ff308e8c47b8cb884ed9703/comments", "author": {"login": "cbeuw", "id": 7034308, "node_id": "MDQ6VXNlcjcwMzQzMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7034308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbeuw", "html_url": "https://github.com/cbeuw", "followers_url": "https://api.github.com/users/cbeuw/followers", "following_url": "https://api.github.com/users/cbeuw/following{/other_user}", "gists_url": "https://api.github.com/users/cbeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbeuw/subscriptions", "organizations_url": "https://api.github.com/users/cbeuw/orgs", "repos_url": "https://api.github.com/users/cbeuw/repos", "events_url": "https://api.github.com/users/cbeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/cbeuw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cbeuw", "id": 7034308, "node_id": "MDQ6VXNlcjcwMzQzMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7034308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbeuw", "html_url": "https://github.com/cbeuw", "followers_url": "https://api.github.com/users/cbeuw/followers", "following_url": "https://api.github.com/users/cbeuw/following{/other_user}", "gists_url": "https://api.github.com/users/cbeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbeuw/subscriptions", "organizations_url": "https://api.github.com/users/cbeuw/orgs", "repos_url": "https://api.github.com/users/cbeuw/repos", "events_url": "https://api.github.com/users/cbeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/cbeuw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf7a5c41540a4005eb0f8d66afda205691fbb14b", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf7a5c41540a4005eb0f8d66afda205691fbb14b", "html_url": "https://github.com/rust-lang/rust/commit/bf7a5c41540a4005eb0f8d66afda205691fbb14b"}], "stats": {"total": 18, "additions": 8, "deletions": 10}, "files": [{"sha": "da36fcd2fb3a8418ec9ba45f900573cc45bef237", "filename": "src/concurrency/weak_memory.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b32d14255aed79e1ff308e8c47b8cb884ed9703/src%2Fconcurrency%2Fweak_memory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b32d14255aed79e1ff308e8c47b8cb884ed9703/src%2Fconcurrency%2Fweak_memory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconcurrency%2Fweak_memory.rs?ref=1b32d14255aed79e1ff308e8c47b8cb884ed9703", "patch": "@@ -431,8 +431,8 @@ pub(super) trait EvalContextExt<'mir, 'tcx: 'mir>:\n                 && !alloc_clocks\n                     .race_free_with_atomic(range, this.machine.data_race.as_ref().unwrap())\n             {\n-                throw_ub_format!(\n-                    \"racy imperfectly overlapping atomic access is not possible in the C++20 memory model\"\n+                throw_unsup_format!(\n+                    \"racy imperfectly overlapping atomic access is not possible in the C++20 memory model, and not supported by Miri's weak memory emulation\"\n                 );\n             }\n         }"}, {"sha": "fc6be84315d77b21d6fb7f4d12164ef4ee74d981", "filename": "tests/fail/weak_memory/racing_mixed_size.stderr", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1b32d14255aed79e1ff308e8c47b8cb884ed9703/tests%2Ffail%2Fweak_memory%2Fracing_mixed_size.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b32d14255aed79e1ff308e8c47b8cb884ed9703/tests%2Ffail%2Fweak_memory%2Fracing_mixed_size.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fweak_memory%2Fracing_mixed_size.stderr?ref=1b32d14255aed79e1ff308e8c47b8cb884ed9703", "patch": "@@ -1,14 +1,13 @@\n warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n          (see https://github.com/rust-lang/miri/issues/1388)\n \n-error: Undefined Behavior: racy imperfectly overlapping atomic access is not possible in the C++20 memory model\n+error: unsupported operation: racy imperfectly overlapping atomic access is not possible in the C++20 memory model, and not supported by Miri's weak memory emulation\n   --> $DIR/racing_mixed_size.rs:LL:CC\n    |\n LL |             std::intrinsics::atomic_load_relaxed(hi);\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ racy imperfectly overlapping atomic access is not possible in the C++20 memory model\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ racy imperfectly overlapping atomic access is not possible in the C++20 memory model, and not supported by Miri's weak memory emulation\n    |\n-   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n-   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n+   = help: this is likely not a bug in the program; it indicates that the program performed an operation that the interpreter does not support\n            \n    = note: inside closure at $DIR/racing_mixed_size.rs:LL:CC\n "}, {"sha": "846d03f5448ff143ce341ed82cae1f17493d1f26", "filename": "tests/fail/weak_memory/racing_mixed_size_read.stderr", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1b32d14255aed79e1ff308e8c47b8cb884ed9703/tests%2Ffail%2Fweak_memory%2Fracing_mixed_size_read.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b32d14255aed79e1ff308e8c47b8cb884ed9703/tests%2Ffail%2Fweak_memory%2Fracing_mixed_size_read.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fweak_memory%2Fracing_mixed_size_read.stderr?ref=1b32d14255aed79e1ff308e8c47b8cb884ed9703", "patch": "@@ -1,14 +1,13 @@\n warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n          (see https://github.com/rust-lang/miri/issues/1388)\n \n-error: Undefined Behavior: racy imperfectly overlapping atomic access is not possible in the C++20 memory model\n+error: unsupported operation: racy imperfectly overlapping atomic access is not possible in the C++20 memory model, and not supported by Miri's weak memory emulation\n   --> $DIR/racing_mixed_size_read.rs:LL:CC\n    |\n LL |             std::intrinsics::atomic_load_relaxed(hi);\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ racy imperfectly overlapping atomic access is not possible in the C++20 memory model\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ racy imperfectly overlapping atomic access is not possible in the C++20 memory model, and not supported by Miri's weak memory emulation\n    |\n-   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n-   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n+   = help: this is likely not a bug in the program; it indicates that the program performed an operation that the interpreter does not support\n            \n    = note: inside closure at $DIR/racing_mixed_size_read.rs:LL:CC\n "}]}