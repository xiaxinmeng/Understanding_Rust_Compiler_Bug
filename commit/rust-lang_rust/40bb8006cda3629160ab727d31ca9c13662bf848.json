{"sha": "40bb8006cda3629160ab727d31ca9c13662bf848", "node_id": "C_kwDOAAsO6NoAKDQwYmI4MDA2Y2RhMzYyOTE2MGFiNzI3ZDMxY2E5YzEzNjYyYmY4NDg", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-05-10T12:31:43Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-05-10T12:31:43Z"}, "message": "Don't parse files in module completion", "tree": {"sha": "eb828ba3d109209e0bab67d9f2510bc9f222754e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb828ba3d109209e0bab67d9f2510bc9f222754e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40bb8006cda3629160ab727d31ca9c13662bf848", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40bb8006cda3629160ab727d31ca9c13662bf848", "html_url": "https://github.com/rust-lang/rust/commit/40bb8006cda3629160ab727d31ca9c13662bf848", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40bb8006cda3629160ab727d31ca9c13662bf848/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26fef97d5917eb9f148f4ef45a0104e95e037e95", "url": "https://api.github.com/repos/rust-lang/rust/commits/26fef97d5917eb9f148f4ef45a0104e95e037e95", "html_url": "https://github.com/rust-lang/rust/commit/26fef97d5917eb9f148f4ef45a0104e95e037e95"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "78d0ef7122a6e6fafced390443a5e454f73d9062", "filename": "crates/ide-completion/src/completions/mod_.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/40bb8006cda3629160ab727d31ca9c13662bf848/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fmod_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40bb8006cda3629160ab727d31ca9c13662bf848/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fmod_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fmod_.rs?ref=40bb8006cda3629160ab727d31ca9c13662bf848", "patch": "@@ -17,13 +17,12 @@ use crate::{\n /// Complete mod declaration, i.e. `mod $0;`\n pub(crate) fn complete_mod(acc: &mut Completions, ctx: &CompletionContext) -> Option<()> {\n     let mod_under_caret = match ctx.name_ctx() {\n-        Some(NameContext { kind: NameKind::Module(mod_under_caret), .. })\n-            if mod_under_caret.item_list().is_none() =>\n-        {\n-            mod_under_caret\n-        }\n+        Some(NameContext { kind: NameKind::Module(mod_under_caret), .. }) => mod_under_caret,\n         _ => return None,\n     };\n+    if mod_under_caret.item_list().is_some() {\n+        return None;\n+    }\n \n     let _p = profile::span(\"completion::complete_mod\");\n \n@@ -32,8 +31,8 @@ pub(crate) fn complete_mod(acc: &mut Completions, ctx: &CompletionContext) -> Op\n     // interested in its parent.\n     if ctx.original_token.kind() == SyntaxKind::IDENT {\n         if let Some(module) = ctx.original_token.ancestors().nth(1).and_then(ast::Module::cast) {\n-            match current_module.definition_source(ctx.db).value {\n-                ModuleSource::Module(src) if src == module => {\n+            match ctx.sema.to_def(&module) {\n+                Some(module) if module == current_module => {\n                     if let Some(parent) = current_module.parent(ctx.db) {\n                         current_module = parent;\n                     }"}]}