{"sha": "c2d0d4fea6598c6d366b23d45b76b9c0572e7ac4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyZDBkNGZlYTY1OThjNmQzNjZiMjNkNDViNzZiOWMwNTcyZTdhYzQ=", "commit": {"author": {"name": "Srinivas Reddy Thatiparthy", "email": "thatiparthysreenivas@gmail.com", "date": "2016-10-19T19:08:55Z"}, "committer": {"name": "Srinivas Reddy Thatiparthy", "email": "thatiparthysreenivas@gmail.com", "date": "2016-10-19T19:08:55Z"}, "message": "run rustfmt on unify folder", "tree": {"sha": "2514a3cfbb859d2867d17e7a0bc29fdcb34fe0fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2514a3cfbb859d2867d17e7a0bc29fdcb34fe0fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2d0d4fea6598c6d366b23d45b76b9c0572e7ac4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYB8THAAoJEAkcWPS/w2Vx3fAQALeAFcJxGH1BD7dQH7fqz2Xd\nXpxMbe1ZLM9ehPC1PDuoKx8TKnfQaIEDRpkLdiWE1j8kIgkui31iwC9x2l7GfV9f\niLsKjz+1RTDE4FROmYYmTPlkR4yR3rkexEY15vDfzcaUpZ236FB494LXsWs1Tq/X\nTPqEg+dK1FnSAmBsHBBMnHS9HMeE3vsh70mz5SROTYFAqZkIhVWGII4+oOvVgP84\nINoSxPC3sl1Z13ipB6K8fl56DviIz3oONfoOLAeS4Ew87KNfpvvKCacNrJ3BNYMV\nObbgl+5Tl46b8y+d6daMVPw4qJ4iYD0Lhdp6SxBwpUh1mNXHhjTUC//sawH4sZmg\nDJX0lKDmlMZ2LESEoNPJYxwmUd/LsSStXfKBaVexgcbj4y6UZo2qpal4GCrJ7jXh\nvu1Jlc139vZGxbZh4iDwGksKuhlzkYiCDHEL2d5doSBpG9iIcM0sA8AL8Mfxod7y\n4NtNecjDszNQBLA9O5wZTAJoowNhcBe1jJhnq22j75OQwOaR2zVw3923rXP1+muY\nNWG63PqzlcfokzOPKdVTWinmBFMfHPJ8L2c9+AAwXILBrTKBBoYrJyJLKO3URFC1\nQAaTCi0/MSETz89KZHyBAMxEfM/AbnOf6t45OyYPrhff+u3TVNC/Kf2H356hTRUq\ny+cVg+3BMN4tMNMdkPMB\n=SbyZ\n-----END PGP SIGNATURE-----", "payload": "tree 2514a3cfbb859d2867d17e7a0bc29fdcb34fe0fc\nparent a41505f4f4a93bf94f4f7439d41afd826ab20b94\nauthor Srinivas Reddy Thatiparthy <thatiparthysreenivas@gmail.com> 1476904135 +0530\ncommitter Srinivas Reddy Thatiparthy <thatiparthysreenivas@gmail.com> 1476904135 +0530\n\nrun rustfmt on unify folder\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2d0d4fea6598c6d366b23d45b76b9c0572e7ac4", "html_url": "https://github.com/rust-lang/rust/commit/c2d0d4fea6598c6d366b23d45b76b9c0572e7ac4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2d0d4fea6598c6d366b23d45b76b9c0572e7ac4/comments", "author": {"login": "srinivasreddy", "id": 198396, "node_id": "MDQ6VXNlcjE5ODM5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/198396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srinivasreddy", "html_url": "https://github.com/srinivasreddy", "followers_url": "https://api.github.com/users/srinivasreddy/followers", "following_url": "https://api.github.com/users/srinivasreddy/following{/other_user}", "gists_url": "https://api.github.com/users/srinivasreddy/gists{/gist_id}", "starred_url": "https://api.github.com/users/srinivasreddy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srinivasreddy/subscriptions", "organizations_url": "https://api.github.com/users/srinivasreddy/orgs", "repos_url": "https://api.github.com/users/srinivasreddy/repos", "events_url": "https://api.github.com/users/srinivasreddy/events{/privacy}", "received_events_url": "https://api.github.com/users/srinivasreddy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "srinivasreddy", "id": 198396, "node_id": "MDQ6VXNlcjE5ODM5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/198396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srinivasreddy", "html_url": "https://github.com/srinivasreddy", "followers_url": "https://api.github.com/users/srinivasreddy/followers", "following_url": "https://api.github.com/users/srinivasreddy/following{/other_user}", "gists_url": "https://api.github.com/users/srinivasreddy/gists{/gist_id}", "starred_url": "https://api.github.com/users/srinivasreddy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srinivasreddy/subscriptions", "organizations_url": "https://api.github.com/users/srinivasreddy/orgs", "repos_url": "https://api.github.com/users/srinivasreddy/repos", "events_url": "https://api.github.com/users/srinivasreddy/events{/privacy}", "received_events_url": "https://api.github.com/users/srinivasreddy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a41505f4f4a93bf94f4f7439d41afd826ab20b94", "url": "https://api.github.com/repos/rust-lang/rust/commits/a41505f4f4a93bf94f4f7439d41afd826ab20b94", "html_url": "https://github.com/rust-lang/rust/commit/a41505f4f4a93bf94f4f7439d41afd826ab20b94"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "1f4d09a92247eb9765d218a192b5d9dc7b54024c", "filename": "src/librustc_data_structures/unify/mod.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c2d0d4fea6598c6d366b23d45b76b9c0572e7ac4/src%2Flibrustc_data_structures%2Funify%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2d0d4fea6598c6d366b23d45b76b9c0572e7ac4/src%2Flibrustc_data_structures%2Funify%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Funify%2Fmod.rs?ref=c2d0d4fea6598c6d366b23d45b76b9c0572e7ac4", "patch": "@@ -27,7 +27,7 @@ mod tests;\n ///\n /// Clients are expected to provide implementations of this trait; you\n /// can see some examples in the `test` module.\n-pub trait UnifyKey : Copy + Clone + Debug + PartialEq {\n+pub trait UnifyKey: Copy + Clone + Debug + PartialEq {\n     type Value: Clone + PartialEq + Debug;\n \n     fn index(&self) -> u32;\n@@ -115,11 +115,7 @@ impl<K: UnifyKey> VarValue<K> {\n     }\n \n     fn if_not_self(&self, key: K, self_key: K) -> Option<K> {\n-        if key == self_key {\n-            None\n-        } else {\n-            Some(key)\n-        }\n+        if key == self_key { None } else { Some(key) }\n     }\n }\n \n@@ -236,7 +232,8 @@ impl<K: UnifyKey> UnificationTable<K> {\n                      new_rank: u32,\n                      old_root: VarValue<K>,\n                      new_root: VarValue<K>,\n-                     new_value: K::Value) -> K {\n+                     new_value: K::Value)\n+                     -> K {\n         let old_root_key = old_root.key();\n         let new_root_key = new_root.key();\n         self.set(old_root_key, old_root.redirect(new_root_key));\n@@ -306,7 +303,8 @@ impl<'tcx, K, V> UnificationTable<K>\n         let combined = {\n             match (&node_a.value, &node_b.value) {\n                 (&None, &None) => None,\n-                (&Some(ref v), &None) | (&None, &Some(ref v)) => Some(v.clone()),\n+                (&Some(ref v), &None) |\n+                (&None, &Some(ref v)) => Some(v.clone()),\n                 (&Some(ref v1), &Some(ref v2)) => {\n                     if *v1 != *v2 {\n                         return Err((v1.clone(), v2.clone()));"}]}