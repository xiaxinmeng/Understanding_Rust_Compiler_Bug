{"sha": "5fee32457fdb9ad495c9f19fa59e8b9b6c34f48b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmZWUzMjQ1N2ZkYjlhZDQ5NWM5ZjE5ZmE1OWU4YjliNmMzNGY0OGI=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-05-01T05:42:36Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-05-01T14:49:41Z"}, "message": "syntax: remove parse::token::{dtor,literally_dtor}", "tree": {"sha": "b19557f81d63422acb31a27ca6aa0ff9d9261944", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b19557f81d63422acb31a27ca6aa0ff9d9261944"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fee32457fdb9ad495c9f19fa59e8b9b6c34f48b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fee32457fdb9ad495c9f19fa59e8b9b6c34f48b", "html_url": "https://github.com/rust-lang/rust/commit/5fee32457fdb9ad495c9f19fa59e8b9b6c34f48b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fee32457fdb9ad495c9f19fa59e8b9b6c34f48b/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e3e2f00250d77719598ad052bb2016d46e6a148", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e3e2f00250d77719598ad052bb2016d46e6a148", "html_url": "https://github.com/rust-lang/rust/commit/3e3e2f00250d77719598ad052bb2016d46e6a148"}], "stats": {"total": 145, "additions": 70, "deletions": 75}, "files": [{"sha": "4c1a92f898e2dff3afffe905e170a8b11174a23c", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 70, "deletions": 75, "changes": 145, "blob_url": "https://github.com/rust-lang/rust/blob/5fee32457fdb9ad495c9f19fa59e8b9b6c34f48b/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fee32457fdb9ad495c9f19fa59e8b9b6c34f48b/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=5fee32457fdb9ad495c9f19fa59e8b9b6c34f48b", "patch": "@@ -305,50 +305,47 @@ pub fn is_bar(t: &Token) -> bool {\n pub mod special_idents {\n     use ast::ident;\n \n-    pub static underscore : ident = ident { repr: 0u, ctxt: 0};\n-    pub static anon : ident = ident { repr: 1u, ctxt: 0};\n-    pub static dtor : ident = ident { repr: 2u, ctxt: 0}; // 'drop', but that's\n-                                                 // reserved\n-    pub static invalid : ident = ident { repr: 3u, ctxt: 0}; // ''\n-    pub static unary : ident = ident { repr: 4u, ctxt: 0};\n-    pub static not_fn : ident = ident { repr: 5u, ctxt: 0};\n-    pub static idx_fn : ident = ident { repr: 6u, ctxt: 0};\n-    pub static unary_minus_fn : ident = ident { repr: 7u, ctxt: 0};\n-    pub static clownshoes_extensions : ident = ident { repr: 8u, ctxt: 0};\n-\n-    pub static self_ : ident = ident { repr: 9u, ctxt: 0}; // 'self'\n+    pub static underscore : ident = ident { repr: 0, ctxt: 0};\n+    pub static anon : ident = ident { repr: 1, ctxt: 0};\n+    pub static invalid : ident = ident { repr: 2, ctxt: 0}; // ''\n+    pub static unary : ident = ident { repr: 3, ctxt: 0};\n+    pub static not_fn : ident = ident { repr: 4, ctxt: 0};\n+    pub static idx_fn : ident = ident { repr: 5, ctxt: 0};\n+    pub static unary_minus_fn : ident = ident { repr: 6, ctxt: 0};\n+    pub static clownshoes_extensions : ident = ident { repr: 7, ctxt: 0};\n+\n+    pub static self_ : ident = ident { repr: 8, ctxt: 0}; // 'self'\n \n     /* for matcher NTs */\n-    pub static item : ident = ident { repr: 10u, ctxt: 0};\n-    pub static block : ident = ident { repr: 11u, ctxt: 0};\n-    pub static stmt : ident = ident { repr: 12u, ctxt: 0};\n-    pub static pat : ident = ident { repr: 13u, ctxt: 0};\n-    pub static expr : ident = ident { repr: 14u, ctxt: 0};\n-    pub static ty : ident = ident { repr: 15u, ctxt: 0};\n-    pub static ident : ident = ident { repr: 16u, ctxt: 0};\n-    pub static path : ident = ident { repr: 17u, ctxt: 0};\n-    pub static tt : ident = ident { repr: 18u, ctxt: 0};\n-    pub static matchers : ident = ident { repr: 19u, ctxt: 0};\n-\n-    pub static str : ident = ident { repr: 20u, ctxt: 0}; // for the type\n+    pub static item : ident = ident { repr: 9, ctxt: 0};\n+    pub static block : ident = ident { repr: 10, ctxt: 0};\n+    pub static stmt : ident = ident { repr: 11, ctxt: 0};\n+    pub static pat : ident = ident { repr: 12, ctxt: 0};\n+    pub static expr : ident = ident { repr: 13, ctxt: 0};\n+    pub static ty : ident = ident { repr: 14, ctxt: 0};\n+    pub static ident : ident = ident { repr: 15, ctxt: 0};\n+    pub static path : ident = ident { repr: 16, ctxt: 0};\n+    pub static tt : ident = ident { repr: 17, ctxt: 0};\n+    pub static matchers : ident = ident { repr: 18, ctxt: 0};\n+\n+    pub static str : ident = ident { repr: 19, ctxt: 0}; // for the type\n \n     /* outside of libsyntax */\n-    pub static ty_visitor : ident = ident { repr: 21u, ctxt: 0};\n-    pub static arg : ident = ident { repr: 22u, ctxt: 0};\n-    pub static descrim : ident = ident { repr: 23u, ctxt: 0};\n-    pub static clownshoe_abi : ident = ident { repr: 24u, ctxt: 0};\n-    pub static clownshoe_stack_shim : ident = ident { repr: 25u, ctxt: 0};\n-    pub static tydesc : ident = ident { repr: 26u, ctxt: 0};\n-    pub static literally_dtor : ident = ident { repr: 27u, ctxt: 0};\n-    pub static main : ident = ident { repr: 28u, ctxt: 0};\n-    pub static opaque : ident = ident { repr: 29u, ctxt: 0};\n-    pub static blk : ident = ident { repr: 30u, ctxt: 0};\n-    pub static static : ident = ident { repr: 31u, ctxt: 0};\n-    pub static intrinsic : ident = ident { repr: 32u, ctxt: 0};\n-    pub static clownshoes_foreign_mod: ident = ident { repr: 33u, ctxt: 0};\n-    pub static unnamed_field: ident = ident { repr: 34u, ctxt: 0};\n-    pub static c_abi: ident = ident { repr: 35u, ctxt: 0};\n-    pub static type_self: ident = ident { repr: 36u, ctxt: 0};    // `Self`\n+    pub static ty_visitor : ident = ident { repr: 20, ctxt: 0};\n+    pub static arg : ident = ident { repr: 21, ctxt: 0};\n+    pub static descrim : ident = ident { repr: 22, ctxt: 0};\n+    pub static clownshoe_abi : ident = ident { repr: 23, ctxt: 0};\n+    pub static clownshoe_stack_shim : ident = ident { repr: 24, ctxt: 0};\n+    pub static tydesc : ident = ident { repr: 25, ctxt: 0};\n+    pub static main : ident = ident { repr: 26, ctxt: 0};\n+    pub static opaque : ident = ident { repr: 27, ctxt: 0};\n+    pub static blk : ident = ident { repr: 28, ctxt: 0};\n+    pub static static : ident = ident { repr: 29, ctxt: 0};\n+    pub static intrinsic : ident = ident { repr: 30, ctxt: 0};\n+    pub static clownshoes_foreign_mod: ident = ident { repr: 31, ctxt: 0};\n+    pub static unnamed_field: ident = ident { repr: 32, ctxt: 0};\n+    pub static c_abi: ident = ident { repr: 33, ctxt: 0};\n+    pub static type_self: ident = ident { repr: 34, ctxt: 0};    // `Self`\n }\n \n pub struct StringRef<'self>(&'self str);\n@@ -426,41 +423,39 @@ pub fn mk_fresh_ident_interner() -> @ident_interner {\n     let init_vec = ~[\n         @~\"_\",                  // 0\n         @~\"anon\",               // 1\n-        @~\"drop\",               // 2\n-        @~\"\",                   // 3\n-        @~\"unary\",              // 4\n-        @~\"!\",                  // 5\n-        @~\"[]\",                 // 6\n-        @~\"unary-\",             // 7\n-        @~\"__extensions__\",     // 8\n-        @~\"self\",               // 9\n-        @~\"item\",               // 10\n-        @~\"block\",              // 11\n-        @~\"stmt\",               // 12\n-        @~\"pat\",                // 13\n-        @~\"expr\",               // 14\n-        @~\"ty\",                 // 15\n-        @~\"ident\",              // 16\n-        @~\"path\",               // 17\n-        @~\"tt\",                 // 18\n-        @~\"matchers\",           // 19\n-        @~\"str\",                // 20\n-        @~\"TyVisitor\",          // 21\n-        @~\"arg\",                // 22\n-        @~\"descrim\",            // 23\n-        @~\"__rust_abi\",         // 24\n-        @~\"__rust_stack_shim\",  // 25\n-        @~\"TyDesc\",             // 26\n-        @~\"dtor\",               // 27\n-        @~\"main\",               // 28\n-        @~\"<opaque>\",           // 29\n-        @~\"blk\",                // 30\n-        @~\"static\",             // 31\n-        @~\"intrinsic\",          // 32\n-        @~\"__foreign_mod__\",    // 33\n-        @~\"__field__\",          // 34\n-        @~\"C\",                  // 35\n-        @~\"Self\",               // 36\n+        @~\"\",                   // 2\n+        @~\"unary\",              // 3\n+        @~\"!\",                  // 4\n+        @~\"[]\",                 // 5\n+        @~\"unary-\",             // 6\n+        @~\"__extensions__\",     // 7\n+        @~\"self\",               // 8\n+        @~\"item\",               // 9\n+        @~\"block\",              // 10\n+        @~\"stmt\",               // 11\n+        @~\"pat\",                // 12\n+        @~\"expr\",               // 13\n+        @~\"ty\",                 // 14\n+        @~\"ident\",              // 15\n+        @~\"path\",               // 16\n+        @~\"tt\",                 // 17\n+        @~\"matchers\",           // 18\n+        @~\"str\",                // 19\n+        @~\"TyVisitor\",          // 20\n+        @~\"arg\",                // 21\n+        @~\"descrim\",            // 22\n+        @~\"__rust_abi\",         // 23\n+        @~\"__rust_stack_shim\",  // 24\n+        @~\"TyDesc\",             // 25\n+        @~\"main\",               // 26\n+        @~\"<opaque>\",           // 27\n+        @~\"blk\",                // 28\n+        @~\"static\",             // 29\n+        @~\"intrinsic\",          // 30\n+        @~\"__foreign_mod__\",    // 31\n+        @~\"__field__\",          // 32\n+        @~\"C\",                  // 33\n+        @~\"Self\",               // 34\n     ];\n \n     let rv = @ident_interner {"}]}