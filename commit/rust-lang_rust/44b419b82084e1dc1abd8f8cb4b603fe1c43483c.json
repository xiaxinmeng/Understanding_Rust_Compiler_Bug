{"sha": "44b419b82084e1dc1abd8f8cb4b603fe1c43483c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0YjQxOWI4MjA4NGUxZGMxYWJkOGY4Y2I0YjYwM2ZlMWM0MzQ4M2M=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-02T20:17:55Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-13T22:03:44Z"}, "message": "librustc_trans: fix fallout", "tree": {"sha": "fcc8f6d92e4207529d5464899626211bfc966b1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fcc8f6d92e4207529d5464899626211bfc966b1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44b419b82084e1dc1abd8f8cb4b603fe1c43483c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44b419b82084e1dc1abd8f8cb4b603fe1c43483c", "html_url": "https://github.com/rust-lang/rust/commit/44b419b82084e1dc1abd8f8cb4b603fe1c43483c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44b419b82084e1dc1abd8f8cb4b603fe1c43483c/comments", "author": null, "committer": null, "parents": [{"sha": "fd06ef24bb6e91a60dab2d1199acb810ff2875b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd06ef24bb6e91a60dab2d1199acb810ff2875b3", "html_url": "https://github.com/rust-lang/rust/commit/fd06ef24bb6e91a60dab2d1199acb810ff2875b3"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "1bd29038fdf69ad60fc32dc414e70525c5455887", "filename": "src/librustc_trans/trans/basic_block.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/44b419b82084e1dc1abd8f8cb4b603fe1c43483c/src%2Flibrustc_trans%2Ftrans%2Fbasic_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44b419b82084e1dc1abd8f8cb4b603fe1c43483c/src%2Flibrustc_trans%2Ftrans%2Fbasic_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbasic_block.rs?ref=44b419b82084e1dc1abd8f8cb4b603fe1c43483c", "patch": "@@ -17,7 +17,7 @@ pub struct BasicBlock(pub BasicBlockRef);\n \n impl Copy for BasicBlock {}\n \n-pub type Preds<'a> = Map<'a, Value, BasicBlock, Filter<'a, Value, Users>>;\n+pub type Preds<'a> = Map<Value, BasicBlock, Filter<'a, Value, Users>, fn(Value) -> BasicBlock>;\n \n /// Wrapper for LLVM BasicBlockRef\n impl BasicBlock {\n@@ -32,9 +32,11 @@ impl BasicBlock {\n     }\n \n     pub fn pred_iter(self) -> Preds<'static> {\n+        fn get_parent(user: Value) -> BasicBlock { user.get_parent().unwrap() }\n+\n         self.as_value().user_iter()\n             .filter(|user| user.is_a_terminator_inst())\n-            .map(|user| user.get_parent().unwrap())\n+            .map(get_parent)\n     }\n \n     pub fn get_single_predecessor(self) -> Option<BasicBlock> {"}]}