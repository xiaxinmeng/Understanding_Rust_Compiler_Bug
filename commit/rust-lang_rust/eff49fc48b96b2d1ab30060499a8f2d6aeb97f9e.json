{"sha": "eff49fc48b96b2d1ab30060499a8f2d6aeb97f9e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmZjQ5ZmM0OGI5NmIyZDFhYjMwMDYwNDk5YThmMmQ2YWViOTdmOWU=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-06-06T21:17:18Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-06-06T21:21:07Z"}, "message": "implement fold traversing macros", "tree": {"sha": "badadef94c230dd70cb36d570b8bd8a67c9d296a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/badadef94c230dd70cb36d570b8bd8a67c9d296a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eff49fc48b96b2d1ab30060499a8f2d6aeb97f9e", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eff49fc48b96b2d1ab30060499a8f2d6aeb97f9e", "html_url": "https://github.com/rust-lang/rust/commit/eff49fc48b96b2d1ab30060499a8f2d6aeb97f9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eff49fc48b96b2d1ab30060499a8f2d6aeb97f9e/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d59ebadb934e7f576662a46b8f150bb50008424", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d59ebadb934e7f576662a46b8f150bb50008424", "html_url": "https://github.com/rust-lang/rust/commit/2d59ebadb934e7f576662a46b8f150bb50008424"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "9796fcd8baca01e6b787882a67ecd5c4ea86fdec", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 38, "deletions": 3, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/eff49fc48b96b2d1ab30060499a8f2d6aeb97f9e/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eff49fc48b96b2d1ab30060499a8f2d6aeb97f9e/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=eff49fc48b96b2d1ab30060499a8f2d6aeb97f9e", "patch": "@@ -116,11 +116,43 @@ fn fold_arg_(a: arg, fld: @ast_fold) -> arg {\n         id: fld.new_id(a.id),\n     }\n }\n+\n //used in noop_fold_expr, and possibly elsewhere in the future\n fn fold_mac_(m: &mac, fld: @ast_fold) -> mac {\n     spanned {\n-        node: match m.node { mac_invoc_tt(*) => copy m.node },\n-        span: fld.new_span(m.span),\n+        node: match m.node {\n+            mac_invoc_tt(p,ref tts) =>\n+            mac_invoc_tt(fld.fold_path(p),\n+                         fold_tts(*tts,fld))\n+        },\n+        span: fld.new_span(m.span)\n+    }\n+}\n+\n+fn fold_tts(tts : &[token_tree], fld: @ast_fold) -> ~[token_tree] {\n+    do tts.map |tt| {\n+        match *tt {\n+            tt_tok(span, ref tok) =>\n+            tt_tok(span,maybe_fold_ident(tok,fld)),\n+            tt_delim(ref tts) =>\n+            tt_delim(fold_tts(*tts,fld)),\n+            tt_seq(span, ref pattern, ref sep, is_optional) =>\n+            tt_seq(span,\n+                   fold_tts(*pattern,fld),\n+                   sep.map(|tok|maybe_fold_ident(tok,fld)),\n+                   is_optional),\n+            tt_nonterminal(sp,ref ident) =>\n+            tt_nonterminal(sp,fld.fold_ident(*ident))\n+        }\n+    }\n+}\n+\n+// apply ident folder if it's an ident, otherwise leave it alone\n+fn maybe_fold_ident(t : &token::Token, fld: @ast_fold) -> token::Token {\n+    match *t {\n+        token::IDENT(id,followed_by_colons) =>\n+        token::IDENT(fld.fold_ident(id),followed_by_colons),\n+        _ => copy *t\n     }\n }\n \n@@ -291,7 +323,10 @@ pub fn noop_fold_item_underscore(i: &item_, fld: @ast_fold) -> item_ {\n         }\n         item_mac(ref m) => {\n             // FIXME #2888: we might actually want to do something here.\n-            item_mac(copy *m)\n+            // ... okay, we're doing something. It would probably be nicer\n+            // to add something to the ast_fold trait, but I'll defer\n+            // that work.\n+            item_mac(fold_mac_(m,fld))\n         }\n     }\n }"}]}