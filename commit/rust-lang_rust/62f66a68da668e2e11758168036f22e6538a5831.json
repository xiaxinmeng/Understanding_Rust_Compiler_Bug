{"sha": "62f66a68da668e2e11758168036f22e6538a5831", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyZjY2YTY4ZGE2NjhlMmUxMTc1ODE2ODAzNmYyMmU2NTM4YTU4MzE=", "commit": {"author": {"name": "Sae-bom Kim", "email": "sae-bom.kim@samsung.com", "date": "2015-06-04T01:38:49Z"}, "committer": {"name": "Sae-bom Kim", "email": "sae-bom.kim@samsung.com", "date": "2015-06-04T05:25:05Z"}, "message": "support aarch64-android raw type definitions", "tree": {"sha": "f3d4190e45ecf2df785b0f0319394a8f79c4666a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3d4190e45ecf2df785b0f0319394a8f79c4666a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62f66a68da668e2e11758168036f22e6538a5831", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62f66a68da668e2e11758168036f22e6538a5831", "html_url": "https://github.com/rust-lang/rust/commit/62f66a68da668e2e11758168036f22e6538a5831", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62f66a68da668e2e11758168036f22e6538a5831/comments", "author": {"login": "sae-bom", "id": 11533579, "node_id": "MDQ6VXNlcjExNTMzNTc5", "avatar_url": "https://avatars.githubusercontent.com/u/11533579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sae-bom", "html_url": "https://github.com/sae-bom", "followers_url": "https://api.github.com/users/sae-bom/followers", "following_url": "https://api.github.com/users/sae-bom/following{/other_user}", "gists_url": "https://api.github.com/users/sae-bom/gists{/gist_id}", "starred_url": "https://api.github.com/users/sae-bom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sae-bom/subscriptions", "organizations_url": "https://api.github.com/users/sae-bom/orgs", "repos_url": "https://api.github.com/users/sae-bom/repos", "events_url": "https://api.github.com/users/sae-bom/events{/privacy}", "received_events_url": "https://api.github.com/users/sae-bom/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sae-bom", "id": 11533579, "node_id": "MDQ6VXNlcjExNTMzNTc5", "avatar_url": "https://avatars.githubusercontent.com/u/11533579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sae-bom", "html_url": "https://github.com/sae-bom", "followers_url": "https://api.github.com/users/sae-bom/followers", "following_url": "https://api.github.com/users/sae-bom/following{/other_user}", "gists_url": "https://api.github.com/users/sae-bom/gists{/gist_id}", "starred_url": "https://api.github.com/users/sae-bom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sae-bom/subscriptions", "organizations_url": "https://api.github.com/users/sae-bom/orgs", "repos_url": "https://api.github.com/users/sae-bom/repos", "events_url": "https://api.github.com/users/sae-bom/events{/privacy}", "received_events_url": "https://api.github.com/users/sae-bom/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe107b360e7721515141839c9d2b01ba92a07244", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe107b360e7721515141839c9d2b01ba92a07244", "html_url": "https://github.com/rust-lang/rust/commit/fe107b360e7721515141839c9d2b01ba92a07244"}], "stats": {"total": 115, "additions": 82, "deletions": 33}, "files": [{"sha": "ea80151623bbdc53aa5a473c1ee01c272d7c0b29", "filename": "src/libstd/os/android/raw.rs", "status": "modified", "additions": 82, "deletions": 33, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/62f66a68da668e2e11758168036f22e6538a5831/src%2Flibstd%2Fos%2Fandroid%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62f66a68da668e2e11758168036f22e6538a5831/src%2Flibstd%2Fos%2Fandroid%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fandroid%2Fraw.rs?ref=62f66a68da668e2e11758168036f22e6538a5831", "patch": "@@ -10,37 +10,86 @@\n \n //! Android-specific raw type definitions\n \n-use os::raw::{c_uint, c_uchar, c_ulonglong, c_longlong, c_ulong};\n-use os::unix::raw::{uid_t, gid_t};\n-\n-pub type blkcnt_t = u32;\n-pub type blksize_t = u32;\n-pub type dev_t = u32;\n-pub type ino_t = u32;\n-pub type mode_t = u16;\n-pub type nlink_t = u16;\n-pub type off_t = i32;\n-pub type time_t = i32;\n-\n-#[repr(C)]\n-pub struct stat {\n-    pub st_dev: c_ulonglong,\n-    pub __pad0: [c_uchar; 4],\n-    pub __st_ino: ino_t,\n-    pub st_mode: c_uint,\n-    pub st_nlink: c_uint,\n-    pub st_uid: uid_t,\n-    pub st_gid: gid_t,\n-    pub st_rdev: c_ulonglong,\n-    pub __pad3: [c_uchar; 4],\n-    pub st_size: c_longlong,\n-    pub st_blksize: blksize_t,\n-    pub st_blocks: c_ulonglong,\n-    pub st_atime: time_t,\n-    pub st_atime_nsec: c_ulong,\n-    pub st_mtime: time_t,\n-    pub st_mtime_nsec: c_ulong,\n-    pub st_ctime: time_t,\n-    pub st_ctime_nsec: c_ulong,\n-    pub st_ino: c_ulonglong,\n+#[doc(inline)]\n+pub use self::arch::{dev_t, mode_t, blkcnt_t, blksize_t, ino_t, nlink_t, off_t, stat, time_t};\n+\n+#[cfg(target_arch = \"arm\")]\n+mod arch {\n+    use os::raw::{c_uint, c_uchar, c_ulonglong, c_longlong, c_ulong};\n+    use os::unix::raw::{uid_t, gid_t};\n+\n+    pub type dev_t = u32;\n+    pub type mode_t = u16;\n+\n+    pub type blkcnt_t = u32;\n+    pub type blksize_t = u32;\n+    pub type ino_t = u32;\n+    pub type nlink_t = u16;\n+    pub type off_t = i32;\n+    pub type time_t = i32;\n+\n+    #[repr(C)]\n+    pub struct stat {\n+        pub st_dev: c_ulonglong,\n+        pub __pad0: [c_uchar; 4],\n+        pub __st_ino: ino_t,\n+        pub st_mode: c_uint,\n+        pub st_nlink: c_uint,\n+        pub st_uid: uid_t,\n+        pub st_gid: gid_t,\n+        pub st_rdev: c_ulonglong,\n+        pub __pad3: [c_uchar; 4],\n+        pub st_size: c_longlong,\n+        pub st_blksize: blksize_t,\n+        pub st_blocks: c_ulonglong,\n+        pub st_atime: time_t,\n+        pub st_atime_nsec: c_ulong,\n+        pub st_mtime: time_t,\n+        pub st_mtime_nsec: c_ulong,\n+        pub st_ctime: time_t,\n+        pub st_ctime_nsec: c_ulong,\n+        pub st_ino: c_ulonglong,\n+    }\n+\n+}\n+\n+\n+#[cfg(target_arch = \"aarch64\")]\n+mod arch {\n+    use os::raw::{c_uchar, c_ulong};\n+    use os::unix::raw::{uid_t, gid_t};\n+\n+    pub type dev_t = u64;\n+    pub type mode_t = u32;\n+\n+    pub type blkcnt_t = u64;\n+    pub type blksize_t = u32;\n+    pub type ino_t = u64;\n+    pub type nlink_t = u32;\n+    pub type off_t = i64;\n+    pub type time_t = i64;\n+\n+    #[repr(C)]\n+    pub struct stat {\n+        pub st_dev: dev_t,\n+        pub __pad0: [c_uchar; 4],\n+        pub __st_ino: ino_t,\n+        pub st_mode: mode_t,\n+        pub st_nlink: nlink_t,\n+        pub st_uid: uid_t,\n+        pub st_gid: gid_t,\n+        pub st_rdev: dev_t,\n+        pub __pad3: [c_uchar; 4],\n+        pub st_size: off_t,\n+        pub st_blksize: blksize_t,\n+        pub st_blocks: blkcnt_t,\n+        pub st_atime: time_t,\n+        pub st_atime_nsec: c_ulong,\n+        pub st_mtime: time_t,\n+        pub st_mtime_nsec: c_ulong,\n+        pub st_ctime: time_t,\n+        pub st_ctime_nsec: c_ulong,\n+        pub st_ino: ino_t,\n+    }\n+\n }"}]}