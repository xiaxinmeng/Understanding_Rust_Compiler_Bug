{"sha": "15955772276e5574414a6ff630495a9898a99efb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1OTU1NzcyMjc2ZTU1NzQ0MTRhNmZmNjMwNDk1YTk4OThhOTllZmI=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-05-29T17:48:47Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-05-29T17:48:47Z"}, "message": "Borrow<[T]> for Interned<'tcx, List<T>>", "tree": {"sha": "da4c28f7a12cf10b8ce815c55cf8b162eb4a4be7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da4c28f7a12cf10b8ce815c55cf8b162eb4a4be7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15955772276e5574414a6ff630495a9898a99efb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15955772276e5574414a6ff630495a9898a99efb", "html_url": "https://github.com/rust-lang/rust/commit/15955772276e5574414a6ff630495a9898a99efb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15955772276e5574414a6ff630495a9898a99efb/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96dd4690c3aa70ec312448c3f2d50e6dc6fb87df", "url": "https://api.github.com/repos/rust-lang/rust/commits/96dd4690c3aa70ec312448c3f2d50e6dc6fb87df", "html_url": "https://github.com/rust-lang/rust/commit/96dd4690c3aa70ec312448c3f2d50e6dc6fb87df"}], "stats": {"total": 50, "additions": 2, "deletions": 48}, "files": [{"sha": "a2e8771e05895dfca1791ec8d7d571170207f918", "filename": "src/librustc_middle/ty/context.rs", "status": "modified", "additions": 2, "deletions": 48, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/15955772276e5574414a6ff630495a9898a99efb/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15955772276e5574414a6ff630495a9898a99efb/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fcontext.rs?ref=15955772276e5574414a6ff630495a9898a99efb", "patch": "@@ -1924,32 +1924,8 @@ impl<'tcx, T: Hash> Hash for Interned<'tcx, List<T>> {\n     }\n }\n \n-impl<'tcx> Borrow<[Ty<'tcx>]> for Interned<'tcx, List<Ty<'tcx>>> {\n-    fn borrow<'a>(&'a self) -> &'a [Ty<'tcx>] {\n-        &self.0[..]\n-    }\n-}\n-\n-impl<'tcx> Borrow<[CanonicalVarInfo]> for Interned<'tcx, List<CanonicalVarInfo>> {\n-    fn borrow(&self) -> &[CanonicalVarInfo] {\n-        &self.0[..]\n-    }\n-}\n-\n-impl<'tcx> Borrow<[GenericArg<'tcx>]> for Interned<'tcx, InternalSubsts<'tcx>> {\n-    fn borrow<'a>(&'a self) -> &'a [GenericArg<'tcx>] {\n-        &self.0[..]\n-    }\n-}\n-\n-impl<'tcx> Borrow<[ProjectionKind]> for Interned<'tcx, List<ProjectionKind>> {\n-    fn borrow(&self) -> &[ProjectionKind] {\n-        &self.0[..]\n-    }\n-}\n-\n-impl<'tcx> Borrow<[PlaceElem<'tcx>]> for Interned<'tcx, List<PlaceElem<'tcx>>> {\n-    fn borrow(&self) -> &[PlaceElem<'tcx>] {\n+impl<'tcx, T> Borrow<[T]> for Interned<'tcx, List<T>> {\n+    fn borrow<'a>(&'a self) -> &'a [T] {\n         &self.0[..]\n     }\n }\n@@ -1960,34 +1936,12 @@ impl<'tcx> Borrow<RegionKind> for Interned<'tcx, RegionKind> {\n     }\n }\n \n-impl<'tcx> Borrow<[ExistentialPredicate<'tcx>]>\n-    for Interned<'tcx, List<ExistentialPredicate<'tcx>>>\n-{\n-    fn borrow<'a>(&'a self) -> &'a [ExistentialPredicate<'tcx>] {\n-        &self.0[..]\n-    }\n-}\n-\n-impl<'tcx> Borrow<[Predicate<'tcx>]> for Interned<'tcx, List<Predicate<'tcx>>> {\n-    fn borrow<'a>(&'a self) -> &'a [Predicate<'tcx>] {\n-        &self.0[..]\n-    }\n-}\n-\n impl<'tcx> Borrow<Const<'tcx>> for Interned<'tcx, Const<'tcx>> {\n     fn borrow<'a>(&'a self) -> &'a Const<'tcx> {\n         &self.0\n     }\n }\n \n-impl<'tcx> Borrow<[traits::ChalkEnvironmentClause<'tcx>]>\n-    for Interned<'tcx, List<traits::ChalkEnvironmentClause<'tcx>>>\n-{\n-    fn borrow<'a>(&'a self) -> &'a [traits::ChalkEnvironmentClause<'tcx>] {\n-        &self.0[..]\n-    }\n-}\n-\n impl<'tcx> Borrow<PredicateKind<'tcx>> for Interned<'tcx, PredicateKind<'tcx>> {\n     fn borrow<'a>(&'a self) -> &'a PredicateKind<'tcx> {\n         &self.0"}]}