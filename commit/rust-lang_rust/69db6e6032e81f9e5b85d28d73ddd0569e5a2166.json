{"sha": "69db6e6032e81f9e5b85d28d73ddd0569e5a2166", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5ZGI2ZTYwMzJlODFmOWU1Yjg1ZDI4ZDczZGRkMDU2OWU1YTIxNjY=", "commit": {"author": {"name": "Srinivas Reddy Thatiparthy", "email": "thatiparthysreenivas@gmail.com", "date": "2016-05-23T02:49:35Z"}, "committer": {"name": "Srinivas Reddy Thatiparthy", "email": "thatiparthysreenivas@gmail.com", "date": "2016-05-24T02:09:55Z"}, "message": "format with [rustfmt_skip] and addressed a few comments", "tree": {"sha": "df2b739c8c511cb1a25398394f86e136e2ee7962", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df2b739c8c511cb1a25398394f86e136e2ee7962"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69db6e6032e81f9e5b85d28d73ddd0569e5a2166", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69db6e6032e81f9e5b85d28d73ddd0569e5a2166", "html_url": "https://github.com/rust-lang/rust/commit/69db6e6032e81f9e5b85d28d73ddd0569e5a2166", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69db6e6032e81f9e5b85d28d73ddd0569e5a2166/comments", "author": {"login": "srinivasreddy", "id": 198396, "node_id": "MDQ6VXNlcjE5ODM5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/198396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srinivasreddy", "html_url": "https://github.com/srinivasreddy", "followers_url": "https://api.github.com/users/srinivasreddy/followers", "following_url": "https://api.github.com/users/srinivasreddy/following{/other_user}", "gists_url": "https://api.github.com/users/srinivasreddy/gists{/gist_id}", "starred_url": "https://api.github.com/users/srinivasreddy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srinivasreddy/subscriptions", "organizations_url": "https://api.github.com/users/srinivasreddy/orgs", "repos_url": "https://api.github.com/users/srinivasreddy/repos", "events_url": "https://api.github.com/users/srinivasreddy/events{/privacy}", "received_events_url": "https://api.github.com/users/srinivasreddy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "srinivasreddy", "id": 198396, "node_id": "MDQ6VXNlcjE5ODM5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/198396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srinivasreddy", "html_url": "https://github.com/srinivasreddy", "followers_url": "https://api.github.com/users/srinivasreddy/followers", "following_url": "https://api.github.com/users/srinivasreddy/following{/other_user}", "gists_url": "https://api.github.com/users/srinivasreddy/gists{/gist_id}", "starred_url": "https://api.github.com/users/srinivasreddy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srinivasreddy/subscriptions", "organizations_url": "https://api.github.com/users/srinivasreddy/orgs", "repos_url": "https://api.github.com/users/srinivasreddy/repos", "events_url": "https://api.github.com/users/srinivasreddy/events{/privacy}", "received_events_url": "https://api.github.com/users/srinivasreddy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d9d96b6da21579e87db3537b7e6dcf3f517b2a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d9d96b6da21579e87db3537b7e6dcf3f517b2a7", "html_url": "https://github.com/rust-lang/rust/commit/3d9d96b6da21579e87db3537b7e6dcf3f517b2a7"}], "stats": {"total": 99, "additions": 19, "deletions": 80}, "files": [{"sha": "972361326d7bb33af99e99d0a34b49ff8a4ccc70", "filename": "src/libcollectionstest/enum_set.rs", "status": "modified", "additions": 19, "deletions": 78, "changes": 97, "blob_url": "https://github.com/rust-lang/rust/blob/69db6e6032e81f9e5b85d28d73ddd0569e5a2166/src%2Flibcollectionstest%2Fenum_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69db6e6032e81f9e5b85d28d73ddd0569e5a2166/src%2Flibcollectionstest%2Fenum_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fenum_set.rs?ref=69db6e6032e81f9e5b85d28d73ddd0569e5a2166", "patch": "@@ -62,8 +62,9 @@ fn test_len() {\n     assert_eq!(e.len(), 0);\n }\n \n-/// ////////////////////////////////////////////////////////////////////////\n-/// intersect\n+///////////////////////////////////////////////////////////////////////////\n+// intersect\n+\n #[test]\n fn test_two_empties_do_not_intersect() {\n     let e1: EnumSet<Foo> = EnumSet::new();\n@@ -106,8 +107,9 @@ fn test_overlapping_intersects() {\n     assert!(!e1.is_disjoint(&e2));\n }\n \n-/// ////////////////////////////////////////////////////////////////////////\n-/// contains and contains_elem\n+///////////////////////////////////////////////////////////////////////////\n+// contains and contains_elem\n+\n #[test]\n fn test_superset() {\n     let mut e1: EnumSet<Foo> = EnumSet::new();\n@@ -141,8 +143,9 @@ fn test_contains() {\n     assert!(!e1.contains(&C));\n }\n \n-/// ////////////////////////////////////////////////////////////////////////\n-/// iter\n+///////////////////////////////////////////////////////////////////////////\n+// iter\n+\n #[test]\n fn test_iterator() {\n     let mut e1: EnumSet<Foo> = EnumSet::new();\n@@ -167,8 +170,9 @@ fn test_iterator() {\n     assert_eq!(elems, [A, B, C]);\n }\n \n-/// ////////////////////////////////////////////////////////////////////////\n-/// operators\n+///////////////////////////////////////////////////////////////////////////\n+// operators\n+\n #[test]\n fn test_operators() {\n     let mut e1: EnumSet<Foo> = EnumSet::new();\n@@ -219,76 +223,13 @@ fn test_overflow() {\n     #[derive(Copy, Clone)]\n     #[repr(usize)]\n     enum Bar {\n-        V00,\n-        V01,\n-        V02,\n-        V03,\n-        V04,\n-        V05,\n-        V06,\n-        V07,\n-        V08,\n-        V09,\n-        V10,\n-        V11,\n-        V12,\n-        V13,\n-        V14,\n-        V15,\n-        V16,\n-        V17,\n-        V18,\n-        V19,\n-        V20,\n-        V21,\n-        V22,\n-        V23,\n-        V24,\n-        V25,\n-        V26,\n-        V27,\n-        V28,\n-        V29,\n-        V30,\n-        V31,\n-        V32,\n-        V33,\n-        V34,\n-        V35,\n-        V36,\n-        V37,\n-        V38,\n-        V39,\n-        V40,\n-        V41,\n-        V42,\n-        V43,\n-        V44,\n-        V45,\n-        V46,\n-        V47,\n-        V48,\n-        V49,\n-        V50,\n-        V51,\n-        V52,\n-        V53,\n-        V54,\n-        V55,\n-        V56,\n-        V57,\n-        V58,\n-        V59,\n-        V60,\n-        V61,\n-        V62,\n-        V63,\n-        V64,\n-        V65,\n-        V66,\n-        V67,\n-        V68,\n-        V69,\n+        V00, V01, V02, V03, V04, V05, V06, V07, V08, V09,\n+        V10, V11, V12, V13, V14, V15, V16, V17, V18, V19,\n+        V20, V21, V22, V23, V24, V25, V26, V27, V28, V29,\n+        V30, V31, V32, V33, V34, V35, V36, V37, V38, V39,\n+        V40, V41, V42, V43, V44, V45, V46, V47, V48, V49,\n+        V50, V51, V52, V53, V54, V55, V56, V57, V58, V59,\n+        V60, V61, V62, V63, V64, V65, V66, V67, V68, V69,\n     }\n \n     impl CLike for Bar {"}, {"sha": "71416f2069fa0976d5042d11d9e67f0f110261be", "filename": "src/libcollectionstest/slice.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/69db6e6032e81f9e5b85d28d73ddd0569e5a2166/src%2Flibcollectionstest%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69db6e6032e81f9e5b85d28d73ddd0569e5a2166/src%2Flibcollectionstest%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fslice.rs?ref=69db6e6032e81f9e5b85d28d73ddd0569e5a2166", "patch": "@@ -342,7 +342,6 @@ fn test_dedup_unique() {\n     v2.dedup();\n     // If the boxed pointers were leaked or otherwise misused, valgrind\n     // and/or rt should raise errors.\n-    //\n }\n \n #[test]\n@@ -355,7 +354,6 @@ fn test_dedup_shared() {\n     v2.dedup();\n     // If the pointers were leaked or otherwise misused, valgrind and/or\n     // rt should raise errors.\n-    //\n }\n \n #[test]"}]}