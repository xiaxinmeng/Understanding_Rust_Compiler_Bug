{"sha": "4f939ddf0c9344da646367d46810eb1ac92c5780", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmOTM5ZGRmMGM5MzQ0ZGE2NDYzNjdkNDY4MTBlYjFhYzkyYzU3ODA=", "commit": {"author": {"name": "Casey Rodarmor", "email": "casey@rodarmor.com", "date": "2017-02-12T23:50:10Z"}, "committer": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-02-12T23:50:10Z"}, "message": "Don't print config file by default (#1313)\n\nSupress `Using rusftmt config file...` messages unless the --verbose\r\nflag is given.", "tree": {"sha": "82669db5cb03258c73cb6bc2db4490e611fbe2ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82669db5cb03258c73cb6bc2db4490e611fbe2ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f939ddf0c9344da646367d46810eb1ac92c5780", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f939ddf0c9344da646367d46810eb1ac92c5780", "html_url": "https://github.com/rust-lang/rust/commit/4f939ddf0c9344da646367d46810eb1ac92c5780", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f939ddf0c9344da646367d46810eb1ac92c5780/comments", "author": {"login": "casey", "id": 1945, "node_id": "MDQ6VXNlcjE5NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/casey", "html_url": "https://github.com/casey", "followers_url": "https://api.github.com/users/casey/followers", "following_url": "https://api.github.com/users/casey/following{/other_user}", "gists_url": "https://api.github.com/users/casey/gists{/gist_id}", "starred_url": "https://api.github.com/users/casey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/casey/subscriptions", "organizations_url": "https://api.github.com/users/casey/orgs", "repos_url": "https://api.github.com/users/casey/repos", "events_url": "https://api.github.com/users/casey/events{/privacy}", "received_events_url": "https://api.github.com/users/casey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fad74c8ac9dcf9cd0f9db5439a30e5cadf5d6542", "url": "https://api.github.com/repos/rust-lang/rust/commits/fad74c8ac9dcf9cd0f9db5439a30e5cadf5d6542", "html_url": "https://github.com/rust-lang/rust/commit/fad74c8ac9dcf9cd0f9db5439a30e5cadf5d6542"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "9d66154a814c7de9a259e14973525303d5159c1e", "filename": "src/bin/rustfmt.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/4f939ddf0c9344da646367d46810eb1ac92c5780/src%2Fbin%2Frustfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f939ddf0c9344da646367d46810eb1ac92c5780/src%2Fbin%2Frustfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Frustfmt.rs?ref=4f939ddf0c9344da646367d46810eb1ac92c5780", "patch": "@@ -170,7 +170,7 @@ fn make_opts() -> Options {\n     let mut opts = Options::new();\n     opts.optflag(\"h\", \"help\", \"show this message\");\n     opts.optflag(\"V\", \"version\", \"show version information\");\n-    opts.optflag(\"v\", \"verbose\", \"show progress\");\n+    opts.optflag(\"v\", \"verbose\", \"print verbose output\");\n     opts.optopt(\"\",\n                 \"write-mode\",\n                 \"mode to write in (not usable when piping from stdin)\",\n@@ -234,8 +234,11 @@ fn execute(opts: &Options) -> FmtResult<Summary> {\n                 config = cfg_tmp;\n                 path = path_tmp;\n             };\n-            if let Some(path) = path.as_ref() {\n-                println!(\"Using rustfmt config file {}\", path.display());\n+\n+            if options.verbose {\n+                if let Some(path) = path.as_ref() {\n+                    println!(\"Using rustfmt config file {}\", path.display());\n+                }\n             }\n \n             let mut error_summary = Summary::new();\n@@ -244,10 +247,12 @@ fn execute(opts: &Options) -> FmtResult<Summary> {\n                 if path.is_none() {\n                     let (config_tmp, path_tmp) = resolve_config(file.parent().unwrap())\n                         .expect(&format!(\"Error resolving config for {}\", file.display()));\n-                    if let Some(path) = path_tmp.as_ref() {\n-                        println!(\"Using rustfmt config file {} for {}\",\n-                                 path.display(),\n-                                 file.display());\n+                    if options.verbose {\n+                        if let Some(path) = path_tmp.as_ref() {\n+                            println!(\"Using rustfmt config file {} for {}\",\n+                                     path.display(),\n+                                     file.display());\n+                        }\n                     }\n                     config = config_tmp;\n                 }"}]}