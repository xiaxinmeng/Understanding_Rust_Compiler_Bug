{"sha": "065fa9a4621291c12cc69a3f07e1992ce1c7f6a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2NWZhOWE0NjIxMjkxYzEyY2M2OWEzZjA3ZTE5OTJjZTFjN2Y2YTM=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-06-13T16:34:43Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-06-13T16:34:43Z"}, "message": "Make cargo a little more ideomatic", "tree": {"sha": "0fb055cc0a2ceec900362dbc4df8a1277d9f7361", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0fb055cc0a2ceec900362dbc4df8a1277d9f7361"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/065fa9a4621291c12cc69a3f07e1992ce1c7f6a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/065fa9a4621291c12cc69a3f07e1992ce1c7f6a3", "html_url": "https://github.com/rust-lang/rust/commit/065fa9a4621291c12cc69a3f07e1992ce1c7f6a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/065fa9a4621291c12cc69a3f07e1992ce1c7f6a3/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11a56c3e9141045d92ad913495c2387b636f5d9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/11a56c3e9141045d92ad913495c2387b636f5d9b", "html_url": "https://github.com/rust-lang/rust/commit/11a56c3e9141045d92ad913495c2387b636f5d9b"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "a41fcc4e47b6d2178dde9152cc8327fdf4d4332f", "filename": "src/cargo/cargo.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/065fa9a4621291c12cc69a3f07e1992ce1c7f6a3/src%2Fcargo%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/065fa9a4621291c12cc69a3f07e1992ce1c7f6a3/src%2Fcargo%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo%2Fcargo.rs?ref=065fa9a4621291c12cc69a3f07e1992ce1c7f6a3", "patch": "@@ -557,8 +557,8 @@ fn load_source_info(c: cargo, src: source) {\n     if !os::path_exists(srcfile) { ret; }\n     let srcstr = io::read_whole_file_str(srcfile);\n     alt json::from_str(result::get(srcstr)) {\n-        ok(json::dict(_s)) {\n-            let o = parse_source(src.name, json::dict(_s));\n+        ok(json::dict(s)) {\n+            let o = parse_source(src.name, json::dict(s));\n \n             src.key = o.key;\n             src.keyfp = o.keyfp;\n@@ -635,7 +635,7 @@ fn build_cargo_options(argv: [str]) -> options {\n \n fn configure(opts: options) -> cargo {\n     let home = alt get_cargo_root() {\n-        ok(_home) { _home }\n+        ok(home) { home }\n         err(_err) { result::get(get_cargo_sysroot()) }\n     };\n \n@@ -647,11 +647,11 @@ fn configure(opts: options) -> cargo {\n \n     let p = result::get(get_cargo_dir());\n \n-    let sources = map::str_hash::<source>();\n+    let sources = map::str_hash();\n     try_parse_sources(path::connect(home, \"sources.json\"), sources);\n     try_parse_sources(path::connect(home, \"local-sources.json\"), sources);\n \n-    let dep_cache = map::str_hash::<bool>();\n+    let dep_cache = map::str_hash();\n \n     let mut c = {\n         pgp: pgp::supported(),\n@@ -799,7 +799,7 @@ fn install_source(c: cargo, path: str) {\n \n                     let wd_base = c.workdir + path::path_sep();\n                     let wd = alt tempfile::mkdtemp(wd_base, \"\") {\n-                        some(_wd) { _wd }\n+                        some(wd) { wd }\n                         none { fail #fmt(\"needed temp dir: %s\", wd_base); }\n                     };\n \n@@ -819,8 +819,8 @@ fn install_source(c: cargo, path: str) {\n \n fn install_git(c: cargo, wd: str, url: str, ref: option<str>) {\n     run::program_output(\"git\", [\"clone\", url, wd]);\n-    if option::is_some::<str>(ref) {\n-        let r = option::get::<str>(ref);\n+    if option::is_some(ref) {\n+        let r = option::get(ref);\n         os::change_dir(wd);\n         run::run_program(\"git\", [\"checkout\", r]);\n     }\n@@ -1021,8 +1021,8 @@ fn cmd_uninstall(c: cargo) {\n \n fn install_query(c: cargo, wd: str, target: str) {\n     alt c.dep_cache.find(target) {\n-        some(_inst) {\n-            if _inst {\n+        some(inst) {\n+            if inst {\n                 ret;\n             }\n         }\n@@ -1082,7 +1082,7 @@ fn install_query(c: cargo, wd: str, target: str) {\n fn cmd_install(c: cargo) unsafe {\n     let wd_base = c.workdir + path::path_sep();\n     let wd = alt tempfile::mkdtemp(wd_base, \"\") {\n-        some(_wd) { _wd }\n+        some(wd) { wd }\n         none { fail #fmt(\"needed temp dir: %s\", wd_base); }\n     };\n "}]}