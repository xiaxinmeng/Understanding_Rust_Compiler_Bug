{"sha": "f7dcfcd45bd019acf8c914c204ccae519c420adc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3ZGNmY2Q0NWJkMDE5YWNmOGM5MTRjMjA0Y2NhZTUxOWM0MjBhZGM=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-07-02T12:40:34Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-07-28T03:11:18Z"}, "message": "Don't build rustc without std\n\n- Set rustc to build only when explicitly asked for\n\nThis allows building the stage2 rustc artifacts, which nothing depends\non.\n\nPreviously the behavior was as follows (where stageN <-> stage(N-1) artifacts, except for stage0 libstd):\n\n- `x.py build --stage 0`:\n  - stage0 libstd\n  - stage1 rustc (but without putting rustc in stage0/)\n\nThis leaves you without any rustc at all except for the beta compiler\n(https://github.com/rust-lang/rust/issues/73519). This is never what you want.\n\n- `x.py build --stage 1`:\n  - stage0 libstd\n  - stage1 rustc\n  - stage1 libstd\n  - stage1 rustdoc\n  - stage2 rustc\n\nThis leaves you with a broken stage2 rustc which doesn't even have\nlibcore and is effectively useless. Additionally, it compiles rustc\ntwice, which is not normally what you want.\n\n- `x.py build --stage 2`:\n  - stage0 libstd\n  - stage1 rustc\n  - stage1 libstd\n  - stage2 rustc\n  - stage2 rustdoc and tools\n\nThis builds all tools in release mode. This is the correct usage for CI,\nbut takes far to long for development.\n\nNow the behavior is as follows:\n\n- `x.py build --stage 0`:\n  - stage0 libstd\n\nThis is suitable for contributors only working on the standard library,\nas it means rustc never has to be compiled.\n\n- `x.py build --stage 1`:\n  - stage0 libstd\n  - stage1 rustc\n  - stage1 libstd\n  - stage1 rustdoc\n\nThis is suitable for contributors working on the compiler. It ensures\nthat you have a working rustc and libstd without having to pass\n`src/libstd` in addition.\n\n- `x.py build --stage 2`:\n  - stage0 libstd\n  - stage1 rustc\n  - stage1 libstd\n  - stage2 rustc\n  - stage2 libstd\n  - stage2 rustdoc\n\nThis is suitable for debugging errors which only appear with the stage2\ncompiler.\n\n- `x.py build --stage 2 src/libstd src/rustc`\n  - stage0 libstd\n  - stage1 rustc\n  - stage1 libstd\n  - stage2 rustc\n  - stage2 libstd\n  - stage2 rustdoc, tools, etc.\n  - stage2 rustc artifacts ('stage3')\n\nThis is suitable for CI, which wants all tools in release mode.\nHowever, most of the use cases for this should use `x.py dist` instead,\nwhich builds all the tools without each having to be named individually.", "tree": {"sha": "31ba2c2404a8274bc84482f757419bcb2aaa1090", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31ba2c2404a8274bc84482f757419bcb2aaa1090"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7dcfcd45bd019acf8c914c204ccae519c420adc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7dcfcd45bd019acf8c914c204ccae519c420adc", "html_url": "https://github.com/rust-lang/rust/commit/f7dcfcd45bd019acf8c914c204ccae519c420adc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7dcfcd45bd019acf8c914c204ccae519c420adc/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0192fa4786db80d2c9888af98e7ceec47d327887", "url": "https://api.github.com/repos/rust-lang/rust/commits/0192fa4786db80d2c9888af98e7ceec47d327887", "html_url": "https://github.com/rust-lang/rust/commit/0192fa4786db80d2c9888af98e7ceec47d327887"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "373e240cb8e3e456018e8eec30688443d2425d40", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7dcfcd45bd019acf8c914c204ccae519c420adc/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7dcfcd45bd019acf8c914c204ccae519c420adc/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=f7dcfcd45bd019acf8c914c204ccae519c420adc", "patch": "@@ -446,10 +446,10 @@ pub struct Rustc {\n impl Step for Rustc {\n     type Output = ();\n     const ONLY_HOSTS: bool = true;\n-    const DEFAULT: bool = true;\n+    const DEFAULT: bool = false;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        run.all_krates(\"rustc-main\")\n+        run.path(\"src/rustc\")\n     }\n \n     fn make_run(run: RunConfig<'_>) {"}]}