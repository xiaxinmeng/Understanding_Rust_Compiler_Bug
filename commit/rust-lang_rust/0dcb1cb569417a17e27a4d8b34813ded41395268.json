{"sha": "0dcb1cb569417a17e27a4d8b34813ded41395268", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkY2IxY2I1Njk0MTdhMTdlMjdhNGQ4YjM0ODEzZGVkNDEzOTUyNjg=", "commit": {"author": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-03-06T09:34:38Z"}, "committer": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-03-06T09:34:38Z"}, "message": "Add showWorkspaceLoadedNotification to vscode client\n\nThis allows users to control whether or not they want to see the \"workspace\nloaded\" notification.\n\nThis is done on the server side using InitializationOptions which are provided\nby the client. By default show_workspace_loaded is true, meaning the\nnotification is sent.", "tree": {"sha": "123896a906abdfb6de3c0e3f13e0c69e98e3cc01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/123896a906abdfb6de3c0e3f13e0c69e98e3cc01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0dcb1cb569417a17e27a4d8b34813ded41395268", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0dcb1cb569417a17e27a4d8b34813ded41395268", "html_url": "https://github.com/rust-lang/rust/commit/0dcb1cb569417a17e27a4d8b34813ded41395268", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0dcb1cb569417a17e27a4d8b34813ded41395268/comments", "author": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce118da149a0db1815f188c9914001608a5ac09e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce118da149a0db1815f188c9914001608a5ac09e", "html_url": "https://github.com/rust-lang/rust/commit/ce118da149a0db1815f188c9914001608a5ac09e"}], "stats": {"total": 100, "additions": 78, "deletions": 22}, "files": [{"sha": "0b7a47a0b9ee00281c7cd160f8cef4aefb311f17", "filename": "crates/ra_lsp_server/src/init.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/0dcb1cb569417a17e27a4d8b34813ded41395268/crates%2Fra_lsp_server%2Fsrc%2Finit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0dcb1cb569417a17e27a4d8b34813ded41395268/crates%2Fra_lsp_server%2Fsrc%2Finit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Finit.rs?ref=0dcb1cb569417a17e27a4d8b34813ded41395268", "patch": "@@ -0,0 +1,39 @@\n+use serde::{Deserialize, Deserializer};\r\n+\r\n+/// Client provided initialization options\r\n+#[derive(Deserialize, Clone, Copy, Debug)]\r\n+#[serde(rename_all = \"camelCase\")]\r\n+pub struct InitializationOptions {\r\n+    /// Whether the client supports our custom highlighting publishing decorations.\r\n+    /// This is different to the highlightingOn setting, which is whether the user\r\n+    /// wants our custom highlighting to be used.\r\n+    ///\r\n+    /// Defaults to `true`\r\n+    #[serde(default = \"bool_true\", deserialize_with = \"nullable_bool_true\")]\r\n+    pub publish_decorations: bool,\r\n+\r\n+    /// Whether or not the workspace loaded notification should be sent\r\n+    ///\r\n+    /// Defaults to `true`\r\n+    #[serde(default = \"bool_true\", deserialize_with = \"nullable_bool_true\")]\r\n+    pub show_workspace_loaded: bool,\r\n+}\r\n+\r\n+impl Default for InitializationOptions {\r\n+    fn default() -> InitializationOptions {\r\n+        InitializationOptions { publish_decorations: true, show_workspace_loaded: true }\r\n+    }\r\n+}\r\n+\r\n+fn bool_true() -> bool {\r\n+    true\r\n+}\r\n+\r\n+/// Deserializes a null value to a bool true by default\r\n+fn nullable_bool_true<'de, D>(deserializer: D) -> Result<bool, D::Error>\r\n+where\r\n+    D: Deserializer<'de>,\r\n+{\r\n+    let opt = Option::deserialize(deserializer)?;\r\n+    Ok(opt.unwrap_or(true))\r\n+}\r"}, {"sha": "59e16a47c5e655c8a736fde0e60f06115ee58d27", "filename": "crates/ra_lsp_server/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0dcb1cb569417a17e27a4d8b34813ded41395268/crates%2Fra_lsp_server%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0dcb1cb569417a17e27a4d8b34813ded41395268/crates%2Fra_lsp_server%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Flib.rs?ref=0dcb1cb569417a17e27a4d8b34813ded41395268", "patch": "@@ -5,7 +5,8 @@ mod main_loop;\n mod markdown;\n mod project_model;\n pub mod req;\n+pub mod init;\n mod server_world;\n \n pub type Result<T> = ::std::result::Result<T, ::failure::Error>;\n-pub use crate::{caps::server_capabilities, main_loop::main_loop, main_loop::LspError};\n+pub use crate::{caps::server_capabilities, main_loop::main_loop, main_loop::LspError, init::InitializationOptions};"}, {"sha": "5a29052071c36490115b2df3a240589a6c2f321a", "filename": "crates/ra_lsp_server/src/main.rs", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0dcb1cb569417a17e27a4d8b34813ded41395268/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0dcb1cb569417a17e27a4d8b34813ded41395268/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs?ref=0dcb1cb569417a17e27a4d8b34813ded41395268", "patch": "@@ -2,7 +2,7 @@ use serde::Deserialize;\n use flexi_logger::{Duplicate, Logger};\n use gen_lsp_server::{run_server, stdio_transport};\n \n-use ra_lsp_server::Result;\n+use ra_lsp_server::{Result, InitializationOptions};\n \n fn main() -> Result<()> {\n     ::std::env::set_var(\"RUST_BACKTRACE\", \"short\");\n@@ -24,26 +24,18 @@ fn main() -> Result<()> {\n     }\n }\n \n-#[derive(Deserialize)]\n-#[serde(rename_all = \"camelCase\")]\n-struct InitializationOptions {\n-    // Whether the client supports our custom highlighting publishing decorations.\n-    // This is different to the highlightingOn setting, which is whether the user\n-    // wants our custom highlighting to be used.\n-    publish_decorations: Option<bool>,\n-}\n-\n fn main_inner() -> Result<()> {\n     let (receiver, sender, threads) = stdio_transport();\n     let cwd = ::std::env::current_dir()?;\n     run_server(ra_lsp_server::server_capabilities(), receiver, sender, |params, r, s| {\n         let root = params.root_uri.and_then(|it| it.to_file_path().ok()).unwrap_or(cwd);\n-        let supports_decorations = params\n+\n+        let opts = params\n             .initialization_options\n             .and_then(|v| InitializationOptions::deserialize(v).ok())\n-            .and_then(|it| it.publish_decorations)\n-            == Some(true);\n-        ra_lsp_server::main_loop(root, supports_decorations, r, s)\n+            .unwrap_or(InitializationOptions::default());\n+\n+        ra_lsp_server::main_loop(root, opts, r, s)\n     })?;\n     log::info!(\"shutting down IO...\");\n     threads.join()?;"}, {"sha": "d0c2a95ef70f9c2cfbd39b77a0874ca214362b0b", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0dcb1cb569417a17e27a4d8b34813ded41395268/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0dcb1cb569417a17e27a4d8b34813ded41395268/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=0dcb1cb569417a17e27a4d8b34813ded41395268", "patch": "@@ -22,6 +22,7 @@ use crate::{\n     req,\n     server_world::{ServerWorld, ServerWorldState},\n     Result,\n+    InitializationOptions,\n };\n \n #[derive(Debug, Fail)]\n@@ -47,7 +48,7 @@ const THREADPOOL_SIZE: usize = 8;\n \n pub fn main_loop(\n     ws_root: PathBuf,\n-    supports_decorations: bool,\n+    options: InitializationOptions,\n     msg_receiver: &Receiver<RawMessage>,\n     msg_sender: &Sender<RawMessage>,\n ) -> Result<()> {\n@@ -80,7 +81,7 @@ pub fn main_loop(\n     let mut pending_requests = FxHashSet::default();\n     let mut subs = Subscriptions::new();\n     let main_res = main_loop_inner(\n-        supports_decorations,\n+        options,\n         &pool,\n         msg_sender,\n         msg_receiver,\n@@ -147,7 +148,7 @@ impl fmt::Debug for Event {\n }\n \n fn main_loop_inner(\n-    supports_decorations: bool,\n+    options: InitializationOptions,\n     pool: &ThreadPool,\n     msg_sender: &Sender<RawMessage>,\n     msg_receiver: &Receiver<RawMessage>,\n@@ -247,7 +248,9 @@ fn main_loop_inner(\n             && pending_libraries.is_empty()\n             && in_flight_libraries == 0\n         {\n-            show_message(req::MessageType::Info, \"workspace loaded\", msg_sender);\n+            if options.show_workspace_loaded {\n+                show_message(req::MessageType::Info, \"workspace loaded\", msg_sender);\n+            }\n             // Only send the notification first time\n             send_workspace_notification = false;\n         }\n@@ -256,7 +259,7 @@ fn main_loop_inner(\n             update_file_notifications_on_threadpool(\n                 pool,\n                 state.snapshot(),\n-                supports_decorations,\n+                options.publish_decorations,\n                 task_sender.clone(),\n                 subs.subscriptions(),\n             )"}, {"sha": "8bfc8d62206cc657cfee37d6963630eddd9c404c", "filename": "crates/ra_lsp_server/tests/heavy_tests/support.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0dcb1cb569417a17e27a4d8b34813ded41395268/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fsupport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0dcb1cb569417a17e27a4d8b34813ded41395268/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fsupport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fsupport.rs?ref=0dcb1cb569417a17e27a4d8b34813ded41395268", "patch": "@@ -23,6 +23,7 @@ use test_utils::{parse_fixture, find_mismatch};\n \n use ra_lsp_server::{\n     main_loop, req,\n+    InitializationOptions,\n };\n \n pub fn project(fixture: &str) -> Server {\n@@ -57,7 +58,13 @@ impl Server {\n             \"test server\",\n             128,\n             move |mut msg_receiver, mut msg_sender| {\n-                main_loop(path, true, &mut msg_receiver, &mut msg_sender).unwrap()\n+                main_loop(\n+                    path,\n+                    InitializationOptions::default(),\n+                    &mut msg_receiver,\n+                    &mut msg_sender,\n+                )\n+                .unwrap()\n             },\n         );\n         let res = Server {"}, {"sha": "47eaac878a69c6d6d9f4d85af669b0e0c72919c2", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0dcb1cb569417a17e27a4d8b34813ded41395268/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/0dcb1cb569417a17e27a4d8b34813ded41395268/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=0dcb1cb569417a17e27a4d8b34813ded41395268", "patch": "@@ -150,6 +150,11 @@\n                     \"default\": false,\n                     \"description\": \"Highlight Rust code (overrides built-in syntax highlighting)\"\n                 },\n+                \"rust-analyzer.showWorkspaceLoadedNotification\": {\n+                    \"type\": \"boolean\",\n+                    \"default\": true,\n+                    \"description\": \"Show notification when workspace was loaded\"\n+                },\n                 \"rust-analyzer.enableEnhancedTyping\": {\n                     \"type\": \"boolean\",\n                     \"default\": true,"}, {"sha": "afc5cc6aff68ab8f71deff5e9edf893b3891f49a", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0dcb1cb569417a17e27a4d8b34813ded41395268/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/0dcb1cb569417a17e27a4d8b34813ded41395268/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=0dcb1cb569417a17e27a4d8b34813ded41395268", "patch": "@@ -8,6 +8,7 @@ export class Config {\n     public highlightingOn = true;\n     public enableEnhancedTyping = true;\n     public raLspServerPath = RA_LSP_DEBUG || 'ra_lsp_server';\n+    public showWorkspaceLoadedNotification = true;\n \n     private prevEnhancedTyping: null | boolean = null;\n \n@@ -24,6 +25,12 @@ export class Config {\n             this.highlightingOn = config.get('highlightingOn') as boolean;\n         }\n \n+        if (config.has('showWorkspaceLoadedNotification')) {\n+            this.showWorkspaceLoadedNotification = config.get(\n+                'showWorkspaceLoadedNotification'\n+            ) as boolean;\n+        }\n+\n         if (!this.highlightingOn && Server) {\n             Server.highlighter.removeHighlights();\n         }"}, {"sha": "50461b0c6eabdd51a50c7edf18e7f1fcdb13cde0", "filename": "editors/code/src/server.ts", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0dcb1cb569417a17e27a4d8b34813ded41395268/editors%2Fcode%2Fsrc%2Fserver.ts", "raw_url": "https://github.com/rust-lang/rust/raw/0dcb1cb569417a17e27a4d8b34813ded41395268/editors%2Fcode%2Fsrc%2Fserver.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fserver.ts?ref=0dcb1cb569417a17e27a4d8b34813ded41395268", "patch": "@@ -26,7 +26,9 @@ export class Server {\n         const clientOptions: lc.LanguageClientOptions = {\n             documentSelector: [{ scheme: 'file', language: 'rust' }],\n             initializationOptions: {\n-                publishDecorations: true\n+                publishDecorations: true,\n+                showWorkspaceLoaded:\n+                    Server.config.showWorkspaceLoadedNotification\n             },\n             traceOutputChannel\n         };"}]}