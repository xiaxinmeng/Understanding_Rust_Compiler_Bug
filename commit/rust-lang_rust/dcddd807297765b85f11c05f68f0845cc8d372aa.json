{"sha": "dcddd807297765b85f11c05f68f0845cc8d372aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjZGRkODA3Mjk3NzY1Yjg1ZjExYzA1ZjY4ZjA4NDVjYzhkMzcyYWE=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-07-15T01:50:43Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-07-28T13:46:25Z"}, "message": "Remove debug code", "tree": {"sha": "a541b110468c06f306d8fe624c78512289649fe6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a541b110468c06f306d8fe624c78512289649fe6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcddd807297765b85f11c05f68f0845cc8d372aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcddd807297765b85f11c05f68f0845cc8d372aa", "html_url": "https://github.com/rust-lang/rust/commit/dcddd807297765b85f11c05f68f0845cc8d372aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcddd807297765b85f11c05f68f0845cc8d372aa/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a602fc06bdc1570e48761542cf06e6b051e802d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a602fc06bdc1570e48761542cf06e6b051e802d6", "html_url": "https://github.com/rust-lang/rust/commit/a602fc06bdc1570e48761542cf06e6b051e802d6"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "78168f8db7193091cd5d2f114c3ef63d9ba2887d", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dcddd807297765b85f11c05f68f0845cc8d372aa/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcddd807297765b85f11c05f68f0845cc8d372aa/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=dcddd807297765b85f11c05f68f0845cc8d372aa", "patch": "@@ -1015,10 +1015,6 @@ fn check_fn<'a, 'gcx, 'tcx>(inherited: &'a Inherited<'a, 'gcx, 'tcx>,\n     let def_id = fcx.tcx.hir.local_def_id(fn_id);\n     let span = body.value.span;\n \n-    if fcx.tcx.sess.verbose() {\n-        println!(\"checking body {} {}\", fn_id, can_be_generator);\n-    }\n-\n     if let Some(ref impl_arg) = body.impl_arg {\n         if can_be_generator {\n             let impl_arg_ty = fcx.infcx.type_var_for_impl_arg(span, def_id);"}]}