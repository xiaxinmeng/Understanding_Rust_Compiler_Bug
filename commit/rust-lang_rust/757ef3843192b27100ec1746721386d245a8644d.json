{"sha": "757ef3843192b27100ec1746721386d245a8644d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1N2VmMzg0MzE5MmIyNzEwMGVjMTc0NjcyMTM4NmQyNDVhODY0NGQ=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-04-08T21:58:18Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-04-09T18:19:20Z"}, "message": "improve unknown enum variant errors", "tree": {"sha": "73768ac5014ab5723774009e420b46b782ea687e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73768ac5014ab5723774009e420b46b782ea687e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/757ef3843192b27100ec1746721386d245a8644d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAlys4kgWHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdDFFB/94BiASj1FAcscMSsQQecSXicia\nVgTpchj7iPBdn3vSv3UenmMw01cWO1/9Pk9w62tW8cGbAas8eiZGjSYi4IlsWHGx\nnsMXZRjFryYhqqxnqeHskCO/QlwDABCLnsVpFQ6eduLohm/Zu8sFtmTYKU415e1V\n+pzYIJVxlvtLE6gPGKUsa9tBrQqmMen/K4xO1xhse7lt/JsupBNUNoiE8TqGGElZ\nWNrt9takyZGq4vlMkOrvRDdF3PwUcFjVk51WtYx0hvI2vYXQzw9jPTNgByLWZI4D\nHwHvxHagVu3U/XlvQnRdC8R+Wtm5JS8fbva+k+O6GdypWTJ3CUsOUYL5GgHp\n=KW94\n-----END PGP SIGNATURE-----", "payload": "tree 73768ac5014ab5723774009e420b46b782ea687e\nparent 3750348daff89741e3153e0e120aa70a45ff5b68\nauthor Andy Russell <arussell123@gmail.com> 1554760698 -0400\ncommitter Andy Russell <arussell123@gmail.com> 1554833960 -0400\n\nimprove unknown enum variant errors\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/757ef3843192b27100ec1746721386d245a8644d", "html_url": "https://github.com/rust-lang/rust/commit/757ef3843192b27100ec1746721386d245a8644d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/757ef3843192b27100ec1746721386d245a8644d/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3750348daff89741e3153e0e120aa70a45ff5b68", "url": "https://api.github.com/repos/rust-lang/rust/commits/3750348daff89741e3153e0e120aa70a45ff5b68", "html_url": "https://github.com/rust-lang/rust/commit/3750348daff89741e3153e0e120aa70a45ff5b68"}], "stats": {"total": 315, "additions": 216, "deletions": 99}, "files": [{"sha": "0c206b27f80589b91917fdfd82e4dfe2ef28ca79", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/757ef3843192b27100ec1746721386d245a8644d/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/757ef3843192b27100ec1746721386d245a8644d/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=757ef3843192b27100ec1746721386d245a8644d", "patch": "@@ -1362,27 +1362,32 @@ impl<'o, 'gcx: 'tcx, 'tcx> dyn AstConv<'gcx, 'tcx> + 'o {\n                     let msg = format!(\"expected type, found variant `{}`\", assoc_ident);\n                     tcx.sess.span_err(span, &msg);\n                 } else if qself_ty.is_enum() {\n-                    // Report as incorrect enum variant rather than ambiguous type.\n                     let mut err = tcx.sess.struct_span_err(\n-                        span,\n-                        &format!(\"no variant `{}` on enum `{}`\", &assoc_ident.as_str(), qself_ty),\n+                        assoc_ident.span,\n+                        &format!(\"no variant `{}` in enum `{}`\", assoc_ident, qself_ty),\n                     );\n-                    // Check if it was a typo.\n+\n                     let adt_def = qself_ty.ty_adt_def().expect(\"enum is not an ADT\");\n                     if let Some(suggested_name) = find_best_match_for_name(\n                         adt_def.variants.iter().map(|variant| &variant.ident.name),\n                         &assoc_ident.as_str(),\n                         None,\n                     ) {\n                         err.span_suggestion(\n-                            span,\n-                            \"did you mean\",\n-                            format!(\"{}::{}\", qself_ty, suggested_name),\n+                            assoc_ident.span,\n+                            \"there is a variant with a similar name\",\n+                            suggested_name.to_string(),\n                             Applicability::MaybeIncorrect,\n                         );\n                     } else {\n-                        err.span_label(span, \"unknown variant\");\n+                        err.span_label(span, format!(\"variant not found in `{}`\", qself_ty));\n                     }\n+\n+                    if let Some(sp) = tcx.hir().span_if_local(adt_def.did) {\n+                        let sp = tcx.sess.source_map().def_span(sp);\n+                        err.span_label(sp, format!(\"variant `{}` not found here\", assoc_ident));\n+                    }\n+\n                     err.emit();\n                 } else if !qself_ty.references_error() {\n                     // Don't print `TyErr` to the user."}, {"sha": "31b7724d63816e0a4bc1e75e4182a4d5e895c22e", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 28, "deletions": 23, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/757ef3843192b27100ec1746721386d245a8644d/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/757ef3843192b27100ec1746721386d245a8644d/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=757ef3843192b27100ec1746721386d245a8644d", "patch": "@@ -14,11 +14,11 @@ use rustc::hir::map as hir_map;\n use rustc::hir::print;\n use rustc::infer::type_variable::TypeVariableOrigin;\n use rustc::traits::Obligation;\n-use rustc::ty::{self, Adt, Ty, TyCtxt, ToPolyTraitRef, ToPredicate, TypeFoldable};\n+use rustc::ty::{self, Ty, TyCtxt, ToPolyTraitRef, ToPredicate, TypeFoldable};\n use rustc::ty::print::with_crate_prefix;\n use syntax_pos::{Span, FileName};\n use syntax::ast;\n-use syntax::util::lev_distance::find_best_match_for_name;\n+use syntax::util::lev_distance;\n \n use std::cmp::Ordering;\n \n@@ -188,17 +188,10 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                 let actual = self.resolve_type_vars_if_possible(&rcvr_ty);\n                 let ty_str = self.ty_to_string(actual);\n                 let is_method = mode == Mode::MethodCall;\n-                let mut suggestion = None;\n                 let item_kind = if is_method {\n                     \"method\"\n                 } else if actual.is_enum() {\n-                    if let Adt(ref adt_def, _) = actual.sty {\n-                        let names = adt_def.variants.iter().map(|s| &s.ident.name);\n-                        suggestion = find_best_match_for_name(names,\n-                                                              &item_name.as_str(),\n-                                                              None);\n-                    }\n-                    \"variant\"\n+                    \"variant or associated item\"\n                 } else {\n                     match (item_name.as_str().chars().next(), actual.is_fresh_ty()) {\n                         (Some(name), false) if name.is_lowercase() => {\n@@ -299,25 +292,15 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                         return;\n                     } else {\n                         span = item_name.span;\n-                        let mut err = struct_span_err!(\n+                        struct_span_err!(\n                             tcx.sess,\n                             span,\n                             E0599,\n                             \"no {} named `{}` found for type `{}` in the current scope\",\n                             item_kind,\n                             item_name,\n                             ty_str\n-                        );\n-                        if let Some(suggestion) = suggestion {\n-                            // enum variant\n-                            err.span_suggestion(\n-                                span,\n-                                \"did you mean\",\n-                                suggestion.to_string(),\n-                                Applicability::MaybeIncorrect,\n-                            );\n-                        }\n-                        err\n+                        )\n                     }\n                 } else {\n                     tcx.sess.diagnostic().struct_dummy()\n@@ -469,14 +452,36 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                                                   out_of_scope_traits);\n                 }\n \n+                if actual.is_enum() {\n+                    let adt_def = actual.ty_adt_def().expect(\"enum is not an ADT\");\n+                    if let Some(suggestion) = lev_distance::find_best_match_for_name(\n+                        adt_def.variants.iter().map(|s| &s.ident.name),\n+                        &item_name.as_str(),\n+                        None,\n+                    ) {\n+                        err.span_suggestion(\n+                            span,\n+                            \"there is a variant with a similar name\",\n+                            suggestion.to_string(),\n+                            Applicability::MaybeIncorrect,\n+                        );\n+                    }\n+                }\n+\n                 if let Some(lev_candidate) = lev_candidate {\n+                    let def = lev_candidate.def();\n                     err.span_suggestion(\n                         span,\n-                        \"did you mean\",\n+                        &format!(\n+                            \"there is {} {} with a similar name\",\n+                            def.article(),\n+                            def.kind_name(),\n+                        ),\n                         lev_candidate.ident.to_string(),\n                         Applicability::MaybeIncorrect,\n                     );\n                 }\n+\n                 err.emit();\n             }\n "}, {"sha": "30ba258155bb9cef28ff2a5c759d2833166fb251", "filename": "src/test/ui/associated-item/associated-item-enum.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fassociated-item%2Fassociated-item-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fassociated-item%2Fassociated-item-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-item%2Fassociated-item-enum.rs?ref=757ef3843192b27100ec1746721386d245a8644d", "patch": "@@ -0,0 +1,20 @@\n+enum Enum { Variant }\n+\n+impl Enum {\n+    const MISSPELLABLE: i32 = 0;\n+    fn misspellable() {}\n+}\n+\n+trait Trait {\n+    fn misspellable_trait() {}\n+}\n+\n+impl Trait for Enum {\n+    fn misspellable_trait() {}\n+}\n+\n+fn main() {\n+    Enum::mispellable(); //~ ERROR no variant or associated item\n+    Enum::mispellable_trait(); //~ ERROR no variant or associated item\n+    Enum::MISPELLABLE; //~ ERROR no variant or associated item\n+}"}, {"sha": "5a62b9736dedda5e145ba823f43c3d5da016e912", "filename": "src/test/ui/associated-item/associated-item-enum.stderr", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fassociated-item%2Fassociated-item-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fassociated-item%2Fassociated-item-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-item%2Fassociated-item-enum.stderr?ref=757ef3843192b27100ec1746721386d245a8644d", "patch": "@@ -0,0 +1,36 @@\n+error[E0599]: no variant or associated item named `mispellable` found for type `Enum` in the current scope\n+  --> $DIR/associated-item-enum.rs:17:11\n+   |\n+LL | enum Enum { Variant }\n+   | --------- variant or associated item `mispellable` not found here\n+...\n+LL |     Enum::mispellable();\n+   |           ^^^^^^^^^^^\n+   |           |\n+   |           variant or associated item not found in `Enum`\n+   |           help: there is a method with a similar name: `misspellable`\n+\n+error[E0599]: no variant or associated item named `mispellable_trait` found for type `Enum` in the current scope\n+  --> $DIR/associated-item-enum.rs:18:11\n+   |\n+LL | enum Enum { Variant }\n+   | --------- variant or associated item `mispellable_trait` not found here\n+...\n+LL |     Enum::mispellable_trait();\n+   |           ^^^^^^^^^^^^^^^^^ variant or associated item not found in `Enum`\n+\n+error[E0599]: no variant or associated item named `MISPELLABLE` found for type `Enum` in the current scope\n+  --> $DIR/associated-item-enum.rs:19:11\n+   |\n+LL | enum Enum { Variant }\n+   | --------- variant or associated item `MISPELLABLE` not found here\n+...\n+LL |     Enum::MISPELLABLE;\n+   |           ^^^^^^^^^^^\n+   |           |\n+   |           variant or associated item not found in `Enum`\n+   |           help: there is an associated constant with a similar name: `MISSPELLABLE`\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0599`."}, {"sha": "f2e0d379d1b3084416f4805c882922847f2d8e4b", "filename": "src/test/ui/auto-ref-slice-plus-ref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fauto-ref-slice-plus-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fauto-ref-slice-plus-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauto-ref-slice-plus-ref.stderr?ref=757ef3843192b27100ec1746721386d245a8644d", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `test_mut` found for type `std::vec::Vec<{integer}\n   --> $DIR/auto-ref-slice-plus-ref.rs:7:7\n    |\n LL |     a.test_mut();\n-   |       ^^^^^^^^ help: did you mean: `get_mut`\n+   |       ^^^^^^^^ help: there is a method with a similar name: `get_mut`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `test_mut`, perhaps you need to implement it:"}, {"sha": "237b8c54ce301dffb03a4631f0da665182cae777", "filename": "src/test/ui/block-result/issue-3563.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fblock-result%2Fissue-3563.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fblock-result%2Fissue-3563.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-3563.stderr?ref=757ef3843192b27100ec1746721386d245a8644d", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `b` found for type `&Self` in the current scope\n   --> $DIR/issue-3563.rs:3:17\n    |\n LL |         || self.b()\n-   |                 ^ help: did you mean: `a`\n+   |                 ^ help: there is a method with a similar name: `a`\n \n error: aborting due to previous error\n "}, {"sha": "890f6800c22af7bb03f08829f369060c6f5ecd73", "filename": "src/test/ui/bogus-tag.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fbogus-tag.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fbogus-tag.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbogus-tag.stderr?ref=757ef3843192b27100ec1746721386d245a8644d", "patch": "@@ -1,11 +1,11 @@\n-error[E0599]: no variant named `Hsl` found for type `Color` in the current scope\n+error[E0599]: no variant or associated item named `Hsl` found for type `Color` in the current scope\n   --> $DIR/bogus-tag.rs:7:16\n    |\n LL | enum Color { Rgb(isize, isize, isize), Rgba(isize, isize, isize, isize), }\n-   | ---------- variant `Hsl` not found here\n+   | ---------- variant or associated item `Hsl` not found here\n ...\n LL |         Color::Hsl(h, s, l) => { println!(\"hsl\"); }\n-   |                ^^^ variant not found in `Color`\n+   |                ^^^ variant or associated item not found in `Color`\n \n error: aborting due to previous error\n "}, {"sha": "e33fcb70db7751b7ea711773b135edcd20577d4c", "filename": "src/test/ui/empty/empty-struct-braces-expr.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-expr.rs?ref=757ef3843192b27100ec1746721386d245a8644d", "patch": "@@ -19,6 +19,8 @@ fn main() {\n \n     let xe1 = XEmpty1; //~ ERROR expected value, found struct `XEmpty1`\n     let xe1 = XEmpty1(); //~ ERROR expected function, found struct `XEmpty1`\n-    let xe3 = XE::Empty3; //~ ERROR no variant named `Empty3` found for type\n-    let xe3 = XE::Empty3(); //~ ERROR no variant named `Empty3` found for type\n+    let xe3 = XE::Empty3; //~ ERROR no variant or associated item named `Empty3` found for type\n+    let xe3 = XE::Empty3(); //~ ERROR no variant or associated item named `Empty3` found for type\n+\n+    XE::Empty1 {}; //~ ERROR no variant `Empty1` in enum `empty_struct::XE`\n }"}, {"sha": "f5609c8e1bf7b0df980faf27bf07232223be4622", "filename": "src/test/ui/empty/empty-struct-braces-expr.stderr", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-expr.stderr?ref=757ef3843192b27100ec1746721386d245a8644d", "patch": "@@ -46,25 +46,31 @@ LL |     let xe1 = XEmpty1();\n    |               did you mean `XEmpty1 { /* fields */ }`?\n    |               help: a unit struct with a similar name exists: `XEmpty2`\n \n-error[E0599]: no variant named `Empty3` found for type `empty_struct::XE` in the current scope\n+error[E0599]: no variant or associated item named `Empty3` found for type `empty_struct::XE` in the current scope\n   --> $DIR/empty-struct-braces-expr.rs:22:19\n    |\n LL |     let xe3 = XE::Empty3;\n    |                   ^^^^^^\n    |                   |\n-   |                   variant not found in `empty_struct::XE`\n-   |                   help: did you mean: `XEmpty3`\n+   |                   variant or associated item not found in `empty_struct::XE`\n+   |                   help: there is a variant with a similar name: `XEmpty3`\n \n-error[E0599]: no variant named `Empty3` found for type `empty_struct::XE` in the current scope\n+error[E0599]: no variant or associated item named `Empty3` found for type `empty_struct::XE` in the current scope\n   --> $DIR/empty-struct-braces-expr.rs:23:19\n    |\n LL |     let xe3 = XE::Empty3();\n    |                   ^^^^^^\n    |                   |\n-   |                   variant not found in `empty_struct::XE`\n-   |                   help: did you mean: `XEmpty3`\n+   |                   variant or associated item not found in `empty_struct::XE`\n+   |                   help: there is a variant with a similar name: `XEmpty3`\n \n-error: aborting due to 8 previous errors\n+error: no variant `Empty1` in enum `empty_struct::XE`\n+  --> $DIR/empty-struct-braces-expr.rs:25:9\n+   |\n+LL |     XE::Empty1 {};\n+   |         ^^^^^^ help: there is a variant with a similar name: `XEmpty3`\n+\n+error: aborting due to 9 previous errors\n \n Some errors occurred: E0423, E0599.\n For more information about an error, try `rustc --explain E0423`."}, {"sha": "98a354b1bd0fc5f5f7b337c5ed034d777de63725", "filename": "src/test/ui/issues/issue-22933-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fissues%2Fissue-22933-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fissues%2Fissue-22933-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-22933-2.rs?ref=757ef3843192b27100ec1746721386d245a8644d", "patch": "@@ -2,7 +2,7 @@ enum Delicious {\n     Pie      = 0x1,\n     Apple    = 0x2,\n     ApplePie = Delicious::Apple as isize | Delicious::PIE as isize,\n-    //~^ ERROR no variant named `PIE` found for type `Delicious`\n+    //~^ ERROR no variant or associated item named `PIE` found for type `Delicious`\n }\n \n fn main() {}"}, {"sha": "72038ea20a3fae86b269f5060ca868f2c359cc93", "filename": "src/test/ui/issues/issue-22933-2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fissues%2Fissue-22933-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fissues%2Fissue-22933-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-22933-2.stderr?ref=757ef3843192b27100ec1746721386d245a8644d", "patch": "@@ -1,11 +1,11 @@\n-error[E0599]: no variant named `PIE` found for type `Delicious` in the current scope\n+error[E0599]: no variant or associated item named `PIE` found for type `Delicious` in the current scope\n   --> $DIR/issue-22933-2.rs:4:55\n    |\n LL | enum Delicious {\n-   | -------------- variant `PIE` not found here\n+   | -------------- variant or associated item `PIE` not found here\n ...\n LL |     ApplePie = Delicious::Apple as isize | Delicious::PIE as isize,\n-   |                                                       ^^^ variant not found in `Delicious`\n+   |                                                       ^^^ variant or associated item not found in `Delicious`\n \n error: aborting due to previous error\n "}, {"sha": "7c15598448d7fe6ccd01a16ff1f81cd874918934", "filename": "src/test/ui/issues/issue-23173.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fissues%2Fissue-23173.rs", "raw_url": "https://github.com/rust-lang/rust/raw/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fissues%2Fissue-23173.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-23173.rs?ref=757ef3843192b27100ec1746721386d245a8644d", "patch": "@@ -6,12 +6,8 @@ struct Struct {\n fn use_token(token: &Token) { unimplemented!() }\n \n fn main() {\n-    use_token(&Token::Homura);\n-    //~^ ERROR no variant named `Homura`\n-    Struct::method();\n-    //~^ ERROR no function or associated item named `method` found for type\n-    Struct::method;\n-    //~^ ERROR no function or associated item named `method` found for type\n-    Struct::Assoc;\n-    //~^ ERROR no associated item named `Assoc` found for type `Struct` in\n+    use_token(&Token::Homura); //~ ERROR no variant or associated item named `Homura`\n+    Struct::method(); //~ ERROR no function or associated item named `method` found for type\n+    Struct::method; //~ ERROR no function or associated item named `method` found for type\n+    Struct::Assoc; //~ ERROR no associated item named `Assoc` found for type `Struct` in\n }"}, {"sha": "699e41156fa808e463690e04cbbc941895f3fa63", "filename": "src/test/ui/issues/issue-23173.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fissues%2Fissue-23173.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fissues%2Fissue-23173.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-23173.stderr?ref=757ef3843192b27100ec1746721386d245a8644d", "patch": "@@ -1,14 +1,14 @@\n-error[E0599]: no variant named `Homura` found for type `Token` in the current scope\n+error[E0599]: no variant or associated item named `Homura` found for type `Token` in the current scope\n   --> $DIR/issue-23173.rs:9:23\n    |\n LL | enum Token { LeftParen, RightParen, Plus, Minus, /* etc */ }\n-   | ---------- variant `Homura` not found here\n+   | ---------- variant or associated item `Homura` not found here\n ...\n LL |     use_token(&Token::Homura);\n-   |                       ^^^^^^ variant not found in `Token`\n+   |                       ^^^^^^ variant or associated item not found in `Token`\n \n error[E0599]: no function or associated item named `method` found for type `Struct` in the current scope\n-  --> $DIR/issue-23173.rs:11:13\n+  --> $DIR/issue-23173.rs:10:13\n    |\n LL | struct Struct {\n    | ------------- function or associated item `method` not found for this\n@@ -17,7 +17,7 @@ LL |     Struct::method();\n    |             ^^^^^^ function or associated item not found in `Struct`\n \n error[E0599]: no function or associated item named `method` found for type `Struct` in the current scope\n-  --> $DIR/issue-23173.rs:13:13\n+  --> $DIR/issue-23173.rs:11:13\n    |\n LL | struct Struct {\n    | ------------- function or associated item `method` not found for this\n@@ -26,7 +26,7 @@ LL |     Struct::method;\n    |             ^^^^^^ function or associated item not found in `Struct`\n \n error[E0599]: no associated item named `Assoc` found for type `Struct` in the current scope\n-  --> $DIR/issue-23173.rs:15:13\n+  --> $DIR/issue-23173.rs:12:13\n    |\n LL | struct Struct {\n    | ------------- associated item `Assoc` not found for this"}, {"sha": "157f20d22d8ae85d00b7b8306c2c054989d6993d", "filename": "src/test/ui/issues/issue-23217.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fissues%2Fissue-23217.rs", "raw_url": "https://github.com/rust-lang/rust/raw/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fissues%2Fissue-23217.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-23217.rs?ref=757ef3843192b27100ec1746721386d245a8644d", "patch": "@@ -1,6 +1,5 @@\n pub enum SomeEnum {\n-    B = SomeEnum::A,\n-    //~^ ERROR no variant named `A` found for type `SomeEnum`\n+    B = SomeEnum::A, //~ ERROR no variant or associated item named `A` found for type `SomeEnum`\n }\n \n fn main() {}"}, {"sha": "97100ed375374b70c5bbdec22d18c6366291aa92", "filename": "src/test/ui/issues/issue-23217.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fissues%2Fissue-23217.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fissues%2Fissue-23217.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-23217.stderr?ref=757ef3843192b27100ec1746721386d245a8644d", "patch": "@@ -1,13 +1,13 @@\n-error[E0599]: no variant named `A` found for type `SomeEnum` in the current scope\n+error[E0599]: no variant or associated item named `A` found for type `SomeEnum` in the current scope\n   --> $DIR/issue-23217.rs:2:19\n    |\n LL | pub enum SomeEnum {\n-   | ----------------- variant `A` not found here\n+   | ----------------- variant or associated item `A` not found here\n LL |     B = SomeEnum::A,\n    |                   ^\n    |                   |\n-   |                   variant not found in `SomeEnum`\n-   |                   help: did you mean: `B`\n+   |                   variant or associated item not found in `SomeEnum`\n+   |                   help: there is a variant with a similar name: `B`\n \n error: aborting due to previous error\n "}, {"sha": "f3a8019e2329ce0c12ca822537d5404dca6e17ad", "filename": "src/test/ui/issues/issue-28344.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fissues%2Fissue-28344.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fissues%2Fissue-28344.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28344.stderr?ref=757ef3843192b27100ec1746721386d245a8644d", "patch": "@@ -11,7 +11,7 @@ LL |     let x: u8 = BitXor::bitor(0 as u8, 0 as u8);\n    |                         ^^^^^\n    |                         |\n    |                         function or associated item not found in `dyn std::ops::BitXor<_>`\n-   |                         help: did you mean: `bitxor`\n+   |                         help: there is a method with a similar name: `bitxor`\n \n error[E0191]: the value of the associated type `Output` (from the trait `std::ops::BitXor`) must be specified\n   --> $DIR/issue-28344.rs:8:13\n@@ -26,7 +26,7 @@ LL |     let g = BitXor::bitor;\n    |                     ^^^^^\n    |                     |\n    |                     function or associated item not found in `dyn std::ops::BitXor<_>`\n-   |                     help: did you mean: `bitxor`\n+   |                     help: there is a method with a similar name: `bitxor`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "6493565d2164719b9b51cf36c6cf35c469b78b0e", "filename": "src/test/ui/issues/issue-28971.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fissues%2Fissue-28971.rs", "raw_url": "https://github.com/rust-lang/rust/raw/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fissues%2Fissue-28971.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28971.rs?ref=757ef3843192b27100ec1746721386d245a8644d", "patch": "@@ -1,13 +1,11 @@\n-// This should not cause an ICE\n-\n enum Foo {\n     Bar(u8)\n }\n fn main(){\n     foo(|| {\n         match Foo::Bar(1) {\n             Foo::Baz(..) => (),\n-            //~^ ERROR no variant named `Baz` found for type `Foo`\n+            //~^ ERROR no variant or associated item named `Baz` found for type `Foo`\n             _ => (),\n         }\n     });"}, {"sha": "7411896443dfe80d153807fd8a884ef8a3409ea9", "filename": "src/test/ui/issues/issue-28971.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fissues%2Fissue-28971.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fissues%2Fissue-28971.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28971.stderr?ref=757ef3843192b27100ec1746721386d245a8644d", "patch": "@@ -1,14 +1,14 @@\n-error[E0599]: no variant named `Baz` found for type `Foo` in the current scope\n-  --> $DIR/issue-28971.rs:9:18\n+error[E0599]: no variant or associated item named `Baz` found for type `Foo` in the current scope\n+  --> $DIR/issue-28971.rs:7:18\n    |\n LL | enum Foo {\n-   | -------- variant `Baz` not found here\n+   | -------- variant or associated item `Baz` not found here\n ...\n LL |             Foo::Baz(..) => (),\n    |                  ^^^\n    |                  |\n-   |                  variant not found in `Foo`\n-   |                  help: did you mean: `Bar`\n+   |                  variant or associated item not found in `Foo`\n+   |                  help: there is a variant with a similar name: `Bar`\n \n error: aborting due to previous error\n "}, {"sha": "fc2c3679e13b8c3ef67d9db03b9d36592f73a4bc", "filename": "src/test/ui/issues/issue-34209.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fissues%2Fissue-34209.rs", "raw_url": "https://github.com/rust-lang/rust/raw/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fissues%2Fissue-34209.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-34209.rs?ref=757ef3843192b27100ec1746721386d245a8644d", "patch": "@@ -4,8 +4,7 @@ enum S {\n \n fn bug(l: S) {\n     match l {\n-        S::B { } => { },\n-        //~^ ERROR no variant `B` on enum `S`\n+        S::B {} => {}, //~ ERROR no variant `B` in enum `S`\n     }\n }\n "}, {"sha": "194bb2bfab8ae29d532aff3f1a62515cfa96639c", "filename": "src/test/ui/issues/issue-34209.stderr", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fissues%2Fissue-34209.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fissues%2Fissue-34209.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-34209.stderr?ref=757ef3843192b27100ec1746721386d245a8644d", "patch": "@@ -1,8 +1,11 @@\n-error: no variant `B` on enum `S`\n-  --> $DIR/issue-34209.rs:7:9\n+error: no variant `B` in enum `S`\n+  --> $DIR/issue-34209.rs:7:12\n    |\n-LL |         S::B { } => { },\n-   |         ^^^^ help: did you mean: `S::A`\n+LL | enum S {\n+   | ------ variant `B` not found here\n+...\n+LL |         S::B {} => {},\n+   |            ^ help: there is a variant with a similar name: `A`\n \n error: aborting due to previous error\n "}, {"sha": "333036127eadbd0fe4d34e4b5402c04fda871067", "filename": "src/test/ui/issues/issue-50264-inner-deref-trait/result-deref-err.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Fresult-deref-err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Fresult-deref-err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Fresult-deref-err.stderr?ref=757ef3843192b27100ec1746721386d245a8644d", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `deref_err` found for type `std::result::Result<_,\n   --> $DIR/result-deref-err.rs:4:28\n    |\n LL |     let _result = &Err(41).deref_err();\n-   |                            ^^^^^^^^^ help: did you mean: `deref_ok`\n+   |                            ^^^^^^^^^ help: there is a method with a similar name: `deref_ok`\n    |\n    = note: the method `deref_err` exists but the following trait bounds were not satisfied:\n            `{integer} : std::ops::Deref`"}, {"sha": "ad4a4deb5a8863f60f10653b4cf21410e37ec6e4", "filename": "src/test/ui/suggestions/suggest-methods.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-methods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-methods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-methods.stderr?ref=757ef3843192b27100ec1746721386d245a8644d", "patch": "@@ -5,19 +5,19 @@ LL | struct Foo;\n    | ----------- method `bat` not found for this\n ...\n LL |     f.bat(1.0);\n-   |       ^^^ help: did you mean: `bar`\n+   |       ^^^ help: there is a method with a similar name: `bar`\n \n error[E0599]: no method named `is_emtpy` found for type `std::string::String` in the current scope\n   --> $DIR/suggest-methods.rs:21:15\n    |\n LL |     let _ = s.is_emtpy();\n-   |               ^^^^^^^^ help: did you mean: `is_empty`\n+   |               ^^^^^^^^ help: there is a method with a similar name: `is_empty`\n \n error[E0599]: no method named `count_eos` found for type `u32` in the current scope\n   --> $DIR/suggest-methods.rs:25:19\n    |\n LL |     let _ = 63u32.count_eos();\n-   |                   ^^^^^^^^^ help: did you mean: `count_zeros`\n+   |                   ^^^^^^^^^ help: there is a method with a similar name: `count_zeros`\n \n error[E0599]: no method named `count_o` found for type `u32` in the current scope\n   --> $DIR/suggest-methods.rs:28:19"}, {"sha": "d418834432e0844e15183c03703d97b8877b0538", "filename": "src/test/ui/suggestions/suggest-variants.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-variants.rs?ref=757ef3843192b27100ec1746721386d245a8644d", "patch": "@@ -12,4 +12,7 @@ fn main() {\n     println!(\"My shape is {:?}\", Shape::Squareee { size: 5});  //~ ERROR no variant `Squareee`\n     println!(\"My shape is {:?}\", Shape::Circl { size: 5}); //~ ERROR no variant `Circl`\n     println!(\"My shape is {:?}\", Shape::Rombus{ size: 5}); //~ ERROR no variant `Rombus`\n+    Shape::Squareee; //~ ERROR no variant\n+    Shape::Circl; //~ ERROR no variant\n+    Shape::Rombus; //~ ERROR no variant\n }"}, {"sha": "ef0ba70c34066e1b9dce4aaa8599f68a332afc6d", "filename": "src/test/ui/suggestions/suggest-variants.stderr", "status": "modified", "additions": 55, "deletions": 10, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-variants.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/757ef3843192b27100ec1746721386d245a8644d/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-variants.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-variants.stderr?ref=757ef3843192b27100ec1746721386d245a8644d", "patch": "@@ -1,20 +1,65 @@\n-error: no variant `Squareee` on enum `Shape`\n-  --> $DIR/suggest-variants.rs:12:34\n+error: no variant `Squareee` in enum `Shape`\n+  --> $DIR/suggest-variants.rs:12:41\n    |\n+LL | enum Shape {\n+   | ---------- variant `Squareee` not found here\n+...\n LL |     println!(\"My shape is {:?}\", Shape::Squareee { size: 5});\n-   |                                  ^^^^^^^^^^^^^^^ help: did you mean: `Shape::Square`\n+   |                                         ^^^^^^^^ help: there is a variant with a similar name: `Square`\n \n-error: no variant `Circl` on enum `Shape`\n-  --> $DIR/suggest-variants.rs:13:34\n+error: no variant `Circl` in enum `Shape`\n+  --> $DIR/suggest-variants.rs:13:41\n    |\n+LL | enum Shape {\n+   | ---------- variant `Circl` not found here\n+...\n LL |     println!(\"My shape is {:?}\", Shape::Circl { size: 5});\n-   |                                  ^^^^^^^^^^^^ help: did you mean: `Shape::Circle`\n+   |                                         ^^^^^ help: there is a variant with a similar name: `Circle`\n \n-error: no variant `Rombus` on enum `Shape`\n-  --> $DIR/suggest-variants.rs:14:34\n+error: no variant `Rombus` in enum `Shape`\n+  --> $DIR/suggest-variants.rs:14:41\n    |\n+LL | enum Shape {\n+   | ---------- variant `Rombus` not found here\n+...\n LL |     println!(\"My shape is {:?}\", Shape::Rombus{ size: 5});\n-   |                                  ^^^^^^^^^^^^^ unknown variant\n+   |                                  -------^^^^^^\n+   |                                  |\n+   |                                  variant not found in `Shape`\n \n-error: aborting due to 3 previous errors\n+error[E0599]: no variant or associated item named `Squareee` found for type `Shape` in the current scope\n+  --> $DIR/suggest-variants.rs:15:12\n+   |\n+LL | enum Shape {\n+   | ---------- variant or associated item `Squareee` not found here\n+...\n+LL |     Shape::Squareee;\n+   |            ^^^^^^^^\n+   |            |\n+   |            variant or associated item not found in `Shape`\n+   |            help: there is a variant with a similar name: `Square`\n+\n+error[E0599]: no variant or associated item named `Circl` found for type `Shape` in the current scope\n+  --> $DIR/suggest-variants.rs:16:12\n+   |\n+LL | enum Shape {\n+   | ---------- variant or associated item `Circl` not found here\n+...\n+LL |     Shape::Circl;\n+   |            ^^^^^\n+   |            |\n+   |            variant or associated item not found in `Shape`\n+   |            help: there is a variant with a similar name: `Circle`\n+\n+error[E0599]: no variant or associated item named `Rombus` found for type `Shape` in the current scope\n+  --> $DIR/suggest-variants.rs:17:12\n+   |\n+LL | enum Shape {\n+   | ---------- variant or associated item `Rombus` not found here\n+...\n+LL |     Shape::Rombus;\n+   |            ^^^^^^ variant or associated item not found in `Shape`\n+\n+error: aborting due to 6 previous errors\n \n+For more information about this error, try `rustc --explain E0599`."}]}