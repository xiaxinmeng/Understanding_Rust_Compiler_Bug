{"sha": "1656582822a80139d725e56f00c564f4f58f2883", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2NTY1ODI4MjJhODAxMzlkNzI1ZTU2ZjAwYzU2NGY0ZjU4ZjI4ODM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-19T01:02:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-19T01:02:19Z"}, "message": "Auto merge of #75555 - workingjubilee:update-everything, r=Mark-Simulacrum\n\nCargo update (almost) all the things!\n\nThis runs `cargo update` on our dependency tree, bumping numerous crates. See details in the first commit of this PR.\n\nSeveral updates were held back intentionally; version_check in particular landed a change in behavior in 0.9.2 (arguably a bug fix, but still will be split into a separate PR).", "tree": {"sha": "b3577648ac4ec01776d0b65f045eb95c1415bc9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3577648ac4ec01776d0b65f045eb95c1415bc9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1656582822a80139d725e56f00c564f4f58f2883", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1656582822a80139d725e56f00c564f4f58f2883", "html_url": "https://github.com/rust-lang/rust/commit/1656582822a80139d725e56f00c564f4f58f2883", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1656582822a80139d725e56f00c564f4f58f2883/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30f0a07684f6c1f5df62d69e9519d82e13d6bf2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/30f0a07684f6c1f5df62d69e9519d82e13d6bf2d", "html_url": "https://github.com/rust-lang/rust/commit/30f0a07684f6c1f5df62d69e9519d82e13d6bf2d"}, {"sha": "8c40426051a667673cdac9975f84cb6acd4e245f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c40426051a667673cdac9975f84cb6acd4e245f", "html_url": "https://github.com/rust-lang/rust/commit/8c40426051a667673cdac9975f84cb6acd4e245f"}], "stats": {"total": 1182, "additions": 625, "deletions": 557}, "files": [{"sha": "985dbb046d0c65d0b206510c2b0ca2e267aecec9", "filename": "Cargo.lock", "status": "modified", "additions": 595, "deletions": 538, "changes": 1133, "blob_url": "https://github.com/rust-lang/rust/blob/1656582822a80139d725e56f00c564f4f58f2883/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/1656582822a80139d725e56f00c564f4f58f2883/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=1656582822a80139d725e56f00c564f4f58f2883"}, {"sha": "eca9ddceae1b5a80c1b7424dfeca07b884e536bd", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1656582822a80139d725e56f00c564f4f58f2883/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1656582822a80139d725e56f00c564f4f58f2883/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=1656582822a80139d725e56f00c564f4f58f2883", "patch": "@@ -454,7 +454,8 @@ fn configure_cmake(\n             }\n         }\n         cfg.define(\"CMAKE_C_COMPILER\", sanitize_cc(cc))\n-            .define(\"CMAKE_CXX_COMPILER\", sanitize_cc(cxx));\n+            .define(\"CMAKE_CXX_COMPILER\", sanitize_cc(cxx))\n+            .define(\"CMAKE_ASM_COMPILER\", sanitize_cc(cc));\n     }\n \n     cfg.build_arg(\"-j\").build_arg(builder.jobs().to_string());"}, {"sha": "4f98944e4c8ebb267f458c2b23fdfd8b691e0953", "filename": "src/tools/tidy/src/deps.rs", "status": "modified", "additions": 28, "deletions": 18, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/1656582822a80139d725e56f00c564f4f58f2883/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1656582822a80139d725e56f00c564f4f58f2883/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs?ref=1656582822a80139d725e56f00c564f4f58f2883", "patch": "@@ -18,31 +18,32 @@ const LICENSES: &[&str] = &[\n     \"Unlicense/MIT\",\n     \"Unlicense OR MIT\",\n     \"0BSD OR MIT OR Apache-2.0\", // adler license\n+    \"Zlib OR Apache-2.0 OR MIT\", // tinyvec\n ];\n \n /// These are exceptions to Rust's permissive licensing policy, and\n /// should be considered bugs. Exceptions are only allowed in Rust\n /// tooling. It is _crucial_ that no exception crates be dependencies\n /// of the Rust runtime (std/test).\n const EXCEPTIONS: &[(&str, &str)] = &[\n-    (\"mdbook\", \"MPL-2.0\"),                  // mdbook\n-    (\"openssl\", \"Apache-2.0\"),              // cargo, mdbook\n-    (\"rdrand\", \"ISC\"),                      // mdbook, rustfmt\n-    (\"fuchsia-cprng\", \"BSD-3-Clause\"),      // mdbook, rustfmt\n-    (\"fuchsia-zircon-sys\", \"BSD-3-Clause\"), // rustdoc, rustc, cargo\n-    (\"fuchsia-zircon\", \"BSD-3-Clause\"),     // rustdoc, rustc, cargo (jobserver & tempdir)\n-    (\"colored\", \"MPL-2.0\"),                 // rustfmt\n-    (\"ordslice\", \"Apache-2.0\"),             // rls\n-    (\"cloudabi\", \"BSD-2-Clause\"),           // (rls -> crossbeam-channel 0.2 -> rand 0.5)\n-    (\"ryu\", \"Apache-2.0 OR BSL-1.0\"),       // rls/cargo/... (because of serde)\n-    (\"bytesize\", \"Apache-2.0\"),             // cargo\n-    (\"im-rc\", \"MPL-2.0+\"),                  // cargo\n-    (\"constant_time_eq\", \"CC0-1.0\"),        // rustfmt\n-    (\"sized-chunks\", \"MPL-2.0+\"),           // cargo via im-rc\n-    (\"bitmaps\", \"MPL-2.0+\"),                // cargo via im-rc\n+    (\"mdbook\", \"MPL-2.0\"),                                  // mdbook\n+    (\"openssl\", \"Apache-2.0\"),                              // cargo, mdbook\n+    (\"fuchsia-zircon-sys\", \"BSD-3-Clause\"),                 // rustdoc, rustc, cargo\n+    (\"fuchsia-zircon\", \"BSD-3-Clause\"), // rustdoc, rustc, cargo (jobserver & tempdir)\n+    (\"colored\", \"MPL-2.0\"),             // rustfmt\n+    (\"ordslice\", \"Apache-2.0\"),         // rls\n+    (\"cloudabi\", \"BSD-2-Clause\"),       // (rls -> crossbeam-channel 0.2 -> rand 0.5)\n+    (\"ryu\", \"Apache-2.0 OR BSL-1.0\"),   // rls/cargo/... (because of serde)\n+    (\"bytesize\", \"Apache-2.0\"),         // cargo\n+    (\"im-rc\", \"MPL-2.0+\"),              // cargo\n+    (\"constant_time_eq\", \"CC0-1.0\"),    // rustfmt\n+    (\"sized-chunks\", \"MPL-2.0+\"),       // cargo via im-rc\n+    (\"bitmaps\", \"MPL-2.0+\"),            // cargo via im-rc\n+    (\"crossbeam-queue\", \"MIT/Apache-2.0 AND BSD-2-Clause\"), // rls via rayon\n+    (\"arrayref\", \"BSD-2-Clause\"),       // cargo-miri/directories/.../rust-argon2 (redox)\n+    (\"instant\", \"BSD-3-Clause\"),        // rustc_driver/tracing-subscriber/parking_lot\n     // FIXME: this dependency violates the documentation comment above:\n     (\"fortanix-sgx-abi\", \"MPL-2.0\"), // libstd but only for `sgx` target\n-    (\"crossbeam-channel\", \"MIT/Apache-2.0 AND BSD-2-Clause\"), // cargo\n ];\n \n /// These are the root crates that are part of the runtime. The licenses for\n@@ -69,8 +70,8 @@ const PERMITTED_DEPENDENCIES: &[&str] = &[\n     \"bitflags\",\n     \"block-buffer\",\n     \"block-padding\",\n-    \"byte-tools\",\n     \"byteorder\",\n+    \"byte-tools\",\n     \"cc\",\n     \"cfg-if\",\n     \"chalk-derive\",\n@@ -103,6 +104,7 @@ const PERMITTED_DEPENDENCIES: &[&str] = &[\n     \"hermit-abi\",\n     \"humantime\",\n     \"indexmap\",\n+    \"instant\",\n     \"itertools\",\n     \"jobserver\",\n     \"kernel32-sys\",\n@@ -112,13 +114,13 @@ const PERMITTED_DEPENDENCIES: &[&str] = &[\n     \"lock_api\",\n     \"log\",\n     \"log_settings\",\n+    \"maybe-uninit\",\n     \"md-5\",\n     \"measureme\",\n     \"memchr\",\n     \"memmap\",\n     \"memoffset\",\n     \"miniz_oxide\",\n-    \"nodrop\",\n     \"num_cpus\",\n     \"object\",\n     \"once_cell\",\n@@ -233,6 +235,14 @@ fn check_exceptions(metadata: &Metadata, bad: &mut bool) {\n                 }\n                 Some(pkg_license) => {\n                     if pkg_license.as_str() != *license {\n+                        if *name == \"crossbeam-queue\"\n+                            && *license == \"MIT/Apache-2.0 AND BSD-2-Clause\"\n+                        {\n+                            // We have two versions of crossbeam-queue and both\n+                            // are fine.\n+                            continue;\n+                        }\n+\n                         println!(\"dependency exception `{}` license has changed\", name);\n                         println!(\"    previously `{}` now `{}`\", license, pkg_license);\n                         println!(\"    update EXCEPTIONS for the new license\");"}]}