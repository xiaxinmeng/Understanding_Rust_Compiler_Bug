{"sha": "d25c580453829afeff9753013f71503164e68d5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyNWM1ODA0NTM4MjlhZmVmZjk3NTMwMTNmNzE1MDMxNjRlNjhkNWY=", "commit": {"author": {"name": "Dan Aloni", "email": "alonid@gmail.com", "date": "2020-10-06T06:00:55Z"}, "committer": {"name": "Dan Aloni", "email": "alonid@gmail.com", "date": "2020-10-06T06:17:44Z"}, "message": "Fix rustc_def_path to show the full path and not the trimmed one", "tree": {"sha": "ee8b3745eb80f0a430f67e534e579da8c7465206", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee8b3745eb80f0a430f67e534e579da8c7465206"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d25c580453829afeff9753013f71503164e68d5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d25c580453829afeff9753013f71503164e68d5f", "html_url": "https://github.com/rust-lang/rust/commit/d25c580453829afeff9753013f71503164e68d5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d25c580453829afeff9753013f71503164e68d5f/comments", "author": {"login": "da-x", "id": 321273, "node_id": "MDQ6VXNlcjMyMTI3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/321273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/da-x", "html_url": "https://github.com/da-x", "followers_url": "https://api.github.com/users/da-x/followers", "following_url": "https://api.github.com/users/da-x/following{/other_user}", "gists_url": "https://api.github.com/users/da-x/gists{/gist_id}", "starred_url": "https://api.github.com/users/da-x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/da-x/subscriptions", "organizations_url": "https://api.github.com/users/da-x/orgs", "repos_url": "https://api.github.com/users/da-x/repos", "events_url": "https://api.github.com/users/da-x/events{/privacy}", "received_events_url": "https://api.github.com/users/da-x/received_events", "type": "User", "site_admin": false}, "committer": {"login": "da-x", "id": 321273, "node_id": "MDQ6VXNlcjMyMTI3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/321273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/da-x", "html_url": "https://github.com/da-x", "followers_url": "https://api.github.com/users/da-x/followers", "following_url": "https://api.github.com/users/da-x/following{/other_user}", "gists_url": "https://api.github.com/users/da-x/gists{/gist_id}", "starred_url": "https://api.github.com/users/da-x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/da-x/subscriptions", "organizations_url": "https://api.github.com/users/da-x/orgs", "repos_url": "https://api.github.com/users/da-x/repos", "events_url": "https://api.github.com/users/da-x/events{/privacy}", "received_events_url": "https://api.github.com/users/da-x/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fe73e80d762bc575040239fc05fb1c612873554", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fe73e80d762bc575040239fc05fb1c612873554", "html_url": "https://github.com/rust-lang/rust/commit/8fe73e80d762bc575040239fc05fb1c612873554"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "d2c9b05c5607fbf43123db914a8b33cbba2237c9", "filename": "compiler/rustc_symbol_mangling/src/test.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d25c580453829afeff9753013f71503164e68d5f/compiler%2Frustc_symbol_mangling%2Fsrc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d25c580453829afeff9753013f71503164e68d5f/compiler%2Frustc_symbol_mangling%2Fsrc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Ftest.rs?ref=d25c580453829afeff9753013f71503164e68d5f", "patch": "@@ -5,6 +5,7 @@\n //! paths etc in all kinds of annoying scenarios.\n \n use rustc_hir as hir;\n+use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::{Instance, TyCtxt};\n use rustc_span::symbol::{sym, Symbol};\n \n@@ -44,7 +45,7 @@ impl SymbolNamesTest<'tcx> {\n                     tcx.sess.span_err(attr.span, &format!(\"demangling-alt({:#})\", demangling));\n                 }\n             } else if tcx.sess.check_name(attr, DEF_PATH) {\n-                let path = tcx.def_path_str(def_id.to_def_id());\n+                let path = with_no_trimmed_paths(|| tcx.def_path_str(def_id.to_def_id()));\n                 tcx.sess.span_err(attr.span, &format!(\"def-path({})\", path));\n             }\n "}, {"sha": "c866f9bd3b79100d8e0ed587136cac1b2aeb2d2a", "filename": "src/test/ui/symbol-names/impl1.legacy.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d25c580453829afeff9753013f71503164e68d5f/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.legacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d25c580453829afeff9753013f71503164e68d5f/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.legacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.legacy.stderr?ref=d25c580453829afeff9753013f71503164e68d5f", "patch": "@@ -64,7 +64,7 @@ error: demangling-alt(<[&dyn impl1::Foo+Assoc = extern \"C\" fn(&u8, ::.)+impl1::A\n LL |             #[rustc_symbol_name]\n    |             ^^^^^^^^^^^^^^^^^^^^\n \n-error: def-path(<[&dyn Foo<Assoc = for<'r> extern \"C\" fn(&'r u8, ...)> + AutoTrait; 3] as Bar>::method)\n+error: def-path(<[&dyn Foo<Assoc = for<'r> extern \"C\" fn(&'r u8, ...)> + AutoTrait; 3] as main::{closure#1}::Bar>::method)\n   --> $DIR/impl1.rs:71:13\n    |\n LL |             #[rustc_def_path]"}, {"sha": "1ada54cc102ed022fe0e9b6de98fdbaf0eefc4e9", "filename": "src/test/ui/symbol-names/impl1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d25c580453829afeff9753013f71503164e68d5f/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d25c580453829afeff9753013f71503164e68d5f/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.rs?ref=d25c580453829afeff9753013f71503164e68d5f", "patch": "@@ -69,8 +69,8 @@ fn main() {\n                 //[v0]~| ERROR demangling(<[&dyn impl1[317d481089b8c8fe]::Foo<Assoc = for<'a> extern \"C\" fn(&'a u8, ...)> + impl1[317d481089b8c8fe]::AutoTrait; 3: usize] as impl1[317d481089b8c8fe]::main::{closure#1}::Bar>::method)\n                 //[v0]~| ERROR demangling-alt(<[&dyn impl1::Foo<Assoc = for<'a> extern \"C\" fn(&'a u8, ...)> + impl1::AutoTrait; 3] as impl1::main::{closure#1}::Bar>::method)\n             #[rustc_def_path]\n-            //[legacy]~^ ERROR def-path(<[&dyn Foo<Assoc = for<'r> extern \"C\" fn(&'r u8, ...)> + AutoTrait; 3] as Bar>::method)\n-               //[v0]~^^ ERROR def-path(<[&dyn Foo<Assoc = for<'r> extern \"C\" fn(&'r u8, ...)> + AutoTrait; 3] as Bar>::method)\n+            //[legacy]~^ ERROR def-path(<[&dyn Foo<Assoc = for<'r> extern \"C\" fn(&'r u8, ...)> + AutoTrait; 3] as main::{closure#1}::Bar>::method)\n+               //[v0]~^^ ERROR def-path(<[&dyn Foo<Assoc = for<'r> extern \"C\" fn(&'r u8, ...)> + AutoTrait; 3] as main::{closure#1}::Bar>::method)\n             fn method(&self) {}\n         }\n     };"}, {"sha": "db5eda0db5074899c563d007470fcaf57f8422af", "filename": "src/test/ui/symbol-names/impl1.v0.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d25c580453829afeff9753013f71503164e68d5f/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.v0.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d25c580453829afeff9753013f71503164e68d5f/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.v0.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.v0.stderr?ref=d25c580453829afeff9753013f71503164e68d5f", "patch": "@@ -64,7 +64,7 @@ error: demangling-alt(<[&dyn impl1::Foo<Assoc = for<'a> extern \"C\" fn(&'a u8, ..\n LL |             #[rustc_symbol_name]\n    |             ^^^^^^^^^^^^^^^^^^^^\n \n-error: def-path(<[&dyn Foo<Assoc = for<'r> extern \"C\" fn(&'r u8, ...)> + AutoTrait; 3] as Bar>::method)\n+error: def-path(<[&dyn Foo<Assoc = for<'r> extern \"C\" fn(&'r u8, ...)> + AutoTrait; 3] as main::{closure#1}::Bar>::method)\n   --> $DIR/impl1.rs:71:13\n    |\n LL |             #[rustc_def_path]"}]}