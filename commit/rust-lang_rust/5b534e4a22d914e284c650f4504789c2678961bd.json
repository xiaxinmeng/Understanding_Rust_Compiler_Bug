{"sha": "5b534e4a22d914e284c650f4504789c2678961bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViNTM0ZTRhMjJkOTE0ZTI4NGM2NTBmNDUwNDc4OWMyNjc4OTYxYmQ=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2013-11-17T00:59:08Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2013-11-19T00:20:09Z"}, "message": "Use the correct calling convention for extern rust functions.", "tree": {"sha": "ec33d4c2a44bd5a2e1a9bd3a77c73ecd58c11e58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec33d4c2a44bd5a2e1a9bd3a77c73ecd58c11e58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b534e4a22d914e284c650f4504789c2678961bd", "comment_count": 4, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b534e4a22d914e284c650f4504789c2678961bd", "html_url": "https://github.com/rust-lang/rust/commit/5b534e4a22d914e284c650f4504789c2678961bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b534e4a22d914e284c650f4504789c2678961bd/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50fb4be1cce008ef8c0b4b40e70460c1be1d795a", "url": "https://api.github.com/repos/rust-lang/rust/commits/50fb4be1cce008ef8c0b4b40e70460c1be1d795a", "html_url": "https://github.com/rust-lang/rust/commit/50fb4be1cce008ef8c0b4b40e70460c1be1d795a"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "716ea049b66ed67ef40a0bcd313946a28ed9d9bc", "filename": "src/librustc/middle/trans/foreign.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5b534e4a22d914e284c650f4504789c2678961bd/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b534e4a22d914e284c650f4504789c2678961bd/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs?ref=5b534e4a22d914e284c650f4504789c2678961bd", "patch": "@@ -399,11 +399,19 @@ pub fn register_rust_fn_with_foreign_abi(ccx: @mut CrateContext,\n \n     let tys = foreign_types_for_id(ccx, node_id);\n     let llfn_ty = lltype_for_fn_from_foreign_types(&tys);\n+    let t = ty::node_id_to_type(ccx.tcx, node_id);\n+    let cconv = match ty::get(t).sty {\n+        ty::ty_bare_fn(ref fn_ty) => {\n+            let c = llvm_calling_convention(ccx, fn_ty.abis);\n+            c.unwrap_or(lib::llvm::CCallConv)\n+        }\n+        _ => lib::llvm::CCallConv\n+    };\n     let llfn = base::register_fn_llvmty(ccx,\n                                         sp,\n                                         sym,\n                                         node_id,\n-                                        lib::llvm::CCallConv,\n+                                        cconv,\n                                         llfn_ty);\n     add_argument_attributes(&tys, llfn);\n     debug!(\"register_rust_fn_with_foreign_abi(node_id={:?}, llfn_ty={}, llfn={})\","}]}