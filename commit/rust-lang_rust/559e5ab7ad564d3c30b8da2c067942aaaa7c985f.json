{"sha": "559e5ab7ad564d3c30b8da2c067942aaaa7c985f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1OWU1YWI3YWQ1NjRkM2MzMGI4ZGEyYzA2Nzk0MmFhYWE3Yzk4NWY=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-03-01T10:28:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-01T10:28:07Z"}, "message": "Rollup merge of #69549 - mati865:mingw, r=kennytm\n\nImprove MinGW detection when cross compiling\n\nOfficial mingw-w64 builds, MSYS2 and LLVM MinGW provide both `gcc.exe` and `$ARCH-w64-mingw32-gcc.exe` so they should not regress but I included CI changes to verify it though `@bors try` (I don't have permission).\n\nThis change will come handy when cross compiling from Linux or Cygwin since they use `gcc` as native compiler and `$ARCH-w64-mingw32-gcc.exe` for MinGW. This means users will no longer have to override the linker.", "tree": {"sha": "cc928cec4665506f18b51153955ce9cc31f42031", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc928cec4665506f18b51153955ce9cc31f42031"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/559e5ab7ad564d3c30b8da2c067942aaaa7c985f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeW443CRBK7hj4Ov3rIwAAdHIIAAQ8nF1vXDNd7dztC77GypPM\nV3NEArSHDlIjwhQlIfUQVjvLi2iOXmGz/lRsq1TJ2KkOY+ViYPhn+8UQRvRzYm3L\nEUsyr4PmdKFuBcIY+l5+oFVbcT7PojhnATc/o/S6TrUx9J3rFkTpzC1nvkHg0PuJ\nzOwMu9wokoOk39pxFnEVO0/VigF7D4NvpcMZuQmUnl0aEUzlJ8BIvjaxUMzGlp65\n9QBMgGkLCUWvW9P1NTweEfVJozuYOgT6ny3p2R/5iLQIZx4yl8sJIuH+H99vcUyN\nOSN3FGqEIeCHzPPT9lJJNc+3sgxhIGqPpxinTeXVv0FKjFQL/JgR/vVAUjjQSpQ=\n=wtn+\n-----END PGP SIGNATURE-----\n", "payload": "tree cc928cec4665506f18b51153955ce9cc31f42031\nparent 1e258784e141d68737d5702c6f388bd340c1d889\nparent cdb69556593c33023ca516795322ba75e6444b40\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1583058487 +0900\ncommitter GitHub <noreply@github.com> 1583058487 +0900\n\nRollup merge of #69549 - mati865:mingw, r=kennytm\n\nImprove MinGW detection when cross compiling\n\nOfficial mingw-w64 builds, MSYS2 and LLVM MinGW provide both `gcc.exe` and `$ARCH-w64-mingw32-gcc.exe` so they should not regress but I included CI changes to verify it though `@bors try` (I don't have permission).\n\nThis change will come handy when cross compiling from Linux or Cygwin since they use `gcc` as native compiler and `$ARCH-w64-mingw32-gcc.exe` for MinGW. This means users will no longer have to override the linker.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/559e5ab7ad564d3c30b8da2c067942aaaa7c985f", "html_url": "https://github.com/rust-lang/rust/commit/559e5ab7ad564d3c30b8da2c067942aaaa7c985f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/559e5ab7ad564d3c30b8da2c067942aaaa7c985f/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e258784e141d68737d5702c6f388bd340c1d889", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e258784e141d68737d5702c6f388bd340c1d889", "html_url": "https://github.com/rust-lang/rust/commit/1e258784e141d68737d5702c6f388bd340c1d889"}, {"sha": "cdb69556593c33023ca516795322ba75e6444b40", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdb69556593c33023ca516795322ba75e6444b40", "html_url": "https://github.com/rust-lang/rust/commit/cdb69556593c33023ca516795322ba75e6444b40"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "76478abd0dea78ecbab27b65ce8c9edecfca6f9a", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/559e5ab7ad564d3c30b8da2c067942aaaa7c985f/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/559e5ab7ad564d3c30b8da2c067942aaaa7c985f/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=559e5ab7ad564d3c30b8da2c067942aaaa7c985f", "patch": "@@ -234,7 +234,14 @@ fn make_win_dist(\n         }\n     }\n \n-    let target_tools = [\"gcc.exe\", \"ld.exe\", \"dlltool.exe\", \"libwinpthread-1.dll\"];\n+    let compiler = if target_triple == \"i686-pc-windows-gnu\" {\n+        \"i686-w64-mingw32-gcc.exe\"\n+    } else if target_triple == \"x86_64-pc-windows-gnu\" {\n+        \"x86_64-w64-mingw32-gcc.exe\"\n+    } else {\n+        \"gcc.exe\"\n+    };\n+    let target_tools = [compiler, \"ld.exe\", \"dlltool.exe\", \"libwinpthread-1.dll\"];\n     let mut rustc_dlls = vec![\"libwinpthread-1.dll\"];\n     if target_triple.starts_with(\"i686-\") {\n         rustc_dlls.push(\"libgcc_s_dw2-1.dll\");"}, {"sha": "2091902d7ce2128e207acb40cbde8cb23de0ccb5", "filename": "src/librustc_target/spec/i686_pc_windows_gnu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/559e5ab7ad564d3c30b8da2c067942aaaa7c985f/src%2Flibrustc_target%2Fspec%2Fi686_pc_windows_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/559e5ab7ad564d3c30b8da2c067942aaaa7c985f/src%2Flibrustc_target%2Fspec%2Fi686_pc_windows_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_pc_windows_gnu.rs?ref=559e5ab7ad564d3c30b8da2c067942aaaa7c985f", "patch": "@@ -5,6 +5,7 @@ pub fn target() -> TargetResult {\n     base.cpu = \"pentium4\".to_string();\n     base.max_atomic_width = Some(64);\n     base.eliminate_frame_pointer = false; // Required for backtraces\n+    base.linker = Some(\"i686-w64-mingw32-gcc\".to_string());\n \n     // Mark all dynamic libraries and executables as compatible with the larger 4GiB address\n     // space available to x86 Windows binaries on x86_64."}, {"sha": "3d3acc682dea434d93efbc5c2c8d14cbb45a2bd9", "filename": "src/librustc_target/spec/x86_64_pc_windows_gnu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/559e5ab7ad564d3c30b8da2c067942aaaa7c985f/src%2Flibrustc_target%2Fspec%2Fx86_64_pc_windows_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/559e5ab7ad564d3c30b8da2c067942aaaa7c985f/src%2Flibrustc_target%2Fspec%2Fx86_64_pc_windows_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_pc_windows_gnu.rs?ref=559e5ab7ad564d3c30b8da2c067942aaaa7c985f", "patch": "@@ -5,6 +5,7 @@ pub fn target() -> TargetResult {\n     base.cpu = \"x86-64\".to_string();\n     base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap().push(\"-m64\".to_string());\n     base.max_atomic_width = Some(64);\n+    base.linker = Some(\"x86_64-w64-mingw32-gcc\".to_string());\n \n     Ok(Target {\n         llvm_target: \"x86_64-pc-windows-gnu\".to_string(),"}]}