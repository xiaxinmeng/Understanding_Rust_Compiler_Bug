{"sha": "98eab09cf4ee1a35290a2061ee0e7a19703923a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4ZWFiMDljZjRlZTFhMzUyOTBhMjA2MWVlMGU3YTE5NzAzOTIzYTg=", "commit": {"author": {"name": "Jacob Hughes", "email": "j@jacobhughes.me", "date": "2020-09-23T06:14:42Z"}, "committer": {"name": "Jacob Hughes", "email": "j@jacobhughes.me", "date": "2020-09-23T06:14:42Z"}, "message": "Add enum and type alias tests for generic default stability", "tree": {"sha": "8570e75f390a84c734316ac3609294c5a4828246", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8570e75f390a84c734316ac3609294c5a4828246"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98eab09cf4ee1a35290a2061ee0e7a19703923a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98eab09cf4ee1a35290a2061ee0e7a19703923a8", "html_url": "https://github.com/rust-lang/rust/commit/98eab09cf4ee1a35290a2061ee0e7a19703923a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98eab09cf4ee1a35290a2061ee0e7a19703923a8/comments", "author": {"login": "exrook", "id": 534850, "node_id": "MDQ6VXNlcjUzNDg1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/534850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/exrook", "html_url": "https://github.com/exrook", "followers_url": "https://api.github.com/users/exrook/followers", "following_url": "https://api.github.com/users/exrook/following{/other_user}", "gists_url": "https://api.github.com/users/exrook/gists{/gist_id}", "starred_url": "https://api.github.com/users/exrook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/exrook/subscriptions", "organizations_url": "https://api.github.com/users/exrook/orgs", "repos_url": "https://api.github.com/users/exrook/repos", "events_url": "https://api.github.com/users/exrook/events{/privacy}", "received_events_url": "https://api.github.com/users/exrook/received_events", "type": "User", "site_admin": false}, "committer": {"login": "exrook", "id": 534850, "node_id": "MDQ6VXNlcjUzNDg1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/534850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/exrook", "html_url": "https://github.com/exrook", "followers_url": "https://api.github.com/users/exrook/followers", "following_url": "https://api.github.com/users/exrook/following{/other_user}", "gists_url": "https://api.github.com/users/exrook/gists{/gist_id}", "starred_url": "https://api.github.com/users/exrook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/exrook/subscriptions", "organizations_url": "https://api.github.com/users/exrook/orgs", "repos_url": "https://api.github.com/users/exrook/repos", "events_url": "https://api.github.com/users/exrook/events{/privacy}", "received_events_url": "https://api.github.com/users/exrook/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f1b4b39e3dbff49d3298af1acaa526310b255a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f1b4b39e3dbff49d3298af1acaa526310b255a7", "html_url": "https://github.com/rust-lang/rust/commit/3f1b4b39e3dbff49d3298af1acaa526310b255a7"}], "stats": {"total": 542, "additions": 540, "deletions": 2}, "files": [{"sha": "231ab966558f995ad4e7c5148ad04f123a1bce2c", "filename": "src/test/ui/stability-attribute/auxiliary/unstable_generic_param.rs", "status": "modified", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/rust-lang/rust/blob/98eab09cf4ee1a35290a2061ee0e7a19703923a8/src%2Ftest%2Fui%2Fstability-attribute%2Fauxiliary%2Funstable_generic_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98eab09cf4ee1a35290a2061ee0e7a19703923a8/src%2Ftest%2Fui%2Fstability-attribute%2Fauxiliary%2Funstable_generic_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fauxiliary%2Funstable_generic_param.rs?ref=98eab09cf4ee1a35290a2061ee0e7a19703923a8", "patch": "@@ -75,6 +75,112 @@ pub const STRUCT4: Struct4 = Struct4 { field: 1 };\n #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n pub const STRUCT5: Struct5 = Struct5 { field: 1 };\n \n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+pub enum Enum1<#[unstable(feature = \"unstable_default\", issue = \"none\")] T = usize> {\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+    Some(#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")] T),\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+    None,\n+}\n+\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+pub enum Enum2<T = usize> {\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+    Some(#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")] T),\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+    None,\n+}\n+\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+pub enum Enum3<T = isize, #[unstable(feature = \"unstable_default\", issue = \"none\")] E = usize> {\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+    Ok(#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")] T),\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+    Err(#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")] E),\n+}\n+\n+#[rustc_deprecated(since = \"1.1.0\", reason = \"test\")]\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+pub enum Enum4<T = usize> {\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+    Some(#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")] T),\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+    None,\n+}\n+\n+#[rustc_deprecated(since = \"1.1.0\", reason = \"test\")]\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+pub enum Enum5<#[unstable(feature = \"unstable_default\", issue = \"none\")] T = usize> {\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+    Some(#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")] T),\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+    None,\n+}\n+\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+pub enum Enum6<#[unstable(feature = \"unstable_default6\", issue = \"none\")] T = usize> {\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+    Some(#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")] T),\n+    #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+    None,\n+}\n+\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+pub const ENUM1: Enum1 = Enum1::Some(1);\n+\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+pub const ENUM2: Enum2 = Enum2::Some(1);\n+\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+pub const ENUM3: Enum3 = Enum3::Ok(1);\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+pub const ENUM3B: Enum3 = Enum3::Err(1);\n+\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+pub const ENUM4: Enum4 = Enum4::Some(1);\n+\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+pub const ENUM5: Enum5 = Enum5::Some(1);\n+\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+pub type Alias1<#[unstable(feature = \"unstable_default\", issue = \"none\")] T = usize> = Option<T>;\n+\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+pub type Alias2<T = usize> = Option<T>;\n+\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+pub type Alias3<T = isize, #[unstable(feature = \"unstable_default\", issue = \"none\")] E = usize> =\n+    Result<T, E>;\n+\n+#[rustc_deprecated(since = \"1.1.0\", reason = \"test\")]\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+pub type Alias4<T = usize> = Option<T>;\n+\n+#[rustc_deprecated(since = \"1.1.0\", reason = \"test\")]\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+pub type Alias5<#[unstable(feature = \"unstable_default\", issue = \"none\")] T = usize> = Option<T>;\n+\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+pub type Alias6<#[unstable(feature = \"unstable_default6\", issue = \"none\")] T = usize> = Option<T>;\n+\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+pub const ALIAS1: Alias1 = Alias1::Some(1);\n+\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+pub const ALIAS2: Alias2 = Alias2::Some(1);\n+\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+pub const ALIAS3: Alias3 = Alias3::Ok(1);\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+pub const ALIAS3B: Alias3 = Alias3::Err(1);\n+\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+pub const ALIAS4: Alias4 = Alias4::Some(1);\n+\n+#[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+pub const ALIAS5: Alias5 = Alias5::Some(1);\n+\n+\n #[stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n pub trait Alloc {}\n "}, {"sha": "d6f28e3e447e20f8a00899e0ded343a9a6c0d09b", "filename": "src/test/ui/stability-attribute/generics-default-stability.rs", "status": "modified", "additions": 144, "deletions": 0, "changes": 144, "blob_url": "https://github.com/rust-lang/rust/blob/98eab09cf4ee1a35290a2061ee0e7a19703923a8/src%2Ftest%2Fui%2Fstability-attribute%2Fgenerics-default-stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98eab09cf4ee1a35290a2061ee0e7a19703923a8/src%2Ftest%2Fui%2Fstability-attribute%2Fgenerics-default-stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fgenerics-default-stability.rs?ref=98eab09cf4ee1a35290a2061ee0e7a19703923a8", "patch": "@@ -110,6 +110,150 @@ fn main() {\n     let _: Struct6<isize> = Struct6 { field: 1 }; // ok\n     let _: Struct6<isize> = Struct6 { field: 0 }; // ok\n \n+    let _: Alias1<isize> = Alias1::Some(1); //~ ERROR use of unstable library feature 'unstable_default'\n+\n+    let _ = ALIAS1; // ok\n+    let _: Alias1 = ALIAS1; // ok\n+    let _: Alias1<usize> = ALIAS1; //~ ERROR use of unstable library feature 'unstable_default'\n+    let _: Alias1<isize> = Alias1::Some(0); //~ ERROR use of unstable library feature 'unstable_default'\n+\n+    // Instability is not enforced for generic type parameters used in public fields.\n+    // Note how the unstable type default `usize` leaks,\n+    // and can be used without the 'unstable_default' feature.\n+    let _ = Alias1::Some(1);\n+    let _ = Alias1::Some(());\n+    let _ = Alias1::Some(1isize);\n+    let _: Alias1 = Alias1::Some(1);\n+    let _: usize = ALIAS1.unwrap();\n+    let _ = ALIAS1.unwrap() + 1;\n+    let _ = ALIAS1.unwrap() + 1usize;\n+\n+    let _ = Alias2::Some(1); // ok\n+    let _: Alias2 = Alias2::Some(1); // ok\n+    let _: Alias2<usize> = Alias2::Some(1); // ok\n+\n+    let _ = ALIAS2;\n+    let _: Alias2 = ALIAS2; // ok\n+    let _: Alias2<usize> = ALIAS2; // ok\n+    let _: Alias2<isize> = Alias2::Some(0); // ok\n+    let _ = ALIAS2.unwrap(); // ok\n+    let _: usize = ALIAS2.unwrap(); // ok\n+    let _ = ALIAS2.unwrap() + 1; // ok\n+    let _ = ALIAS2.unwrap() + 1usize; // ok\n+\n+    let _ = ALIAS3;\n+    let _: Alias3 = ALIAS3; // ok\n+    let _: Alias3<isize, usize> = ALIAS3; //~ ERROR use of unstable library feature 'unstable_default'\n+    let _: Alias3<isize> = ALIAS3; // ok\n+    let _: Alias3<isize, isize> = Alias3::Ok(0); //~ ERROR use of unstable library feature 'unstable_default'\n+    let _: Alias3<usize, usize> = Alias3::Ok(0); //~ ERROR use of unstable library feature 'unstable_default'\n+    let _ = ALIAS3.unwrap(); // ok\n+    let _: isize = ALIAS3.unwrap(); // ok\n+    let _ = ALIAS3.unwrap() + 1; // ok\n+    // Note the aforementioned leak.\n+    let _: usize = ALIAS3B.unwrap_err(); // ok\n+    let _: Alias3<usize> = Alias3::Err(0); // ok\n+    let _ = ALIAS3B.unwrap_err() + 1; // ok\n+    let _ = ALIAS3B.unwrap_err() + 1usize; // ok\n+\n+    let _ = ALIAS4;\n+    let _: Alias4<isize> = Alias4::Some(1);\n+    //~^ use of deprecated type alias `unstable_generic_param::Alias4`: test [deprecated]\n+    //~^^ use of deprecated type alias `unstable_generic_param::Alias4`: test [deprecated]\n+    let _ = ALIAS4;\n+    let _: Alias4 = ALIAS4; //~ use of deprecated type alias `unstable_generic_param::Alias4`: test [deprecated]\n+    let _: Alias4<usize> = ALIAS4; //~ use of deprecated type alias `unstable_generic_param::Alias4`: test [deprecated]\n+    let _: Alias4<isize> = Alias4::Some(0);\n+    //~^ use of deprecated type alias `unstable_generic_param::Alias4`: test [deprecated]\n+    //~^^ use of deprecated type alias `unstable_generic_param::Alias4`: test [deprecated]\n+\n+    let _ = ALIAS5;\n+    let _: Alias5<isize> = Alias5::Some(1); //~ ERROR use of unstable library feature 'unstable_default'\n+    //~^ use of deprecated type alias `unstable_generic_param::Alias5`: test [deprecated]\n+    //~^^ use of deprecated type alias `unstable_generic_param::Alias5`: test [deprecated]\n+    let _ = ALIAS5;\n+    let _: Alias5 = ALIAS5; //~ use of deprecated type alias `unstable_generic_param::Alias5`: test [deprecated]\n+    let _: Alias5<usize> = ALIAS5; //~ ERROR use of unstable library feature 'unstable_default'\n+    //~^ use of deprecated type alias `unstable_generic_param::Alias5`: test [deprecated]\n+    let _: Alias5<isize> = Alias5::Some(0); //~ ERROR use of unstable library feature 'unstable_default'\n+    //~^ use of deprecated type alias `unstable_generic_param::Alias5`: test [deprecated]\n+    //~^^ use of deprecated type alias `unstable_generic_param::Alias5`: test [deprecated]\n+\n+    let _: Alias6<isize> = Alias6::Some(1); // ok\n+    let _: Alias6<isize> = Alias6::Some(0); // ok\n+\n+    let _: Enum1<isize> = Enum1::Some(1); //~ ERROR use of unstable library feature 'unstable_default'\n+\n+    let _ = ENUM1; // ok\n+    let _: Enum1 = ENUM1; // ok\n+    let _: Enum1<usize> = ENUM1; //~ ERROR use of unstable library feature 'unstable_default'\n+    let _: Enum1<isize> = Enum1::Some(0); //~ ERROR use of unstable library feature 'unstable_default'\n+\n+    // Instability is not enforced for generic type parameters used in public fields.\n+    // Note how the unstable type default `usize` leaks,\n+    // and can be used without the 'unstable_default' feature.\n+    let _ = Enum1::Some(1);\n+    let _ = Enum1::Some(());\n+    let _ = Enum1::Some(1isize);\n+    let _: Enum1 = Enum1::Some(1);\n+    if let Enum1::Some(x) = ENUM1 {let _: usize = x;}\n+    if let Enum1::Some(x) = ENUM1 {let _ = x + 1;}\n+    if let Enum1::Some(x) = ENUM1 {let _ = x + 1usize;}\n+\n+    let _ = Enum2::Some(1); // ok\n+    let _: Enum2 = Enum2::Some(1); // ok\n+    let _: Enum2<usize> = Enum2::Some(1); // ok\n+\n+    let _ = ENUM2;\n+    let _: Enum2 = ENUM2; // ok\n+    let _: Enum2<usize> = ENUM2; // ok\n+    let _: Enum2<isize> = Enum2::Some(0); // ok\n+    if let Enum2::Some(x) = ENUM2 {let _ = x;} // ok\n+    if let Enum2::Some(x) = ENUM2 {let _: usize = x;} // ok\n+    if let Enum2::Some(x) = ENUM2 {let _ = x + 1;} // ok\n+    if let Enum2::Some(x) = ENUM2 {let _ = x + 1usize;} // ok\n+\n+    let _ = ENUM3;\n+    let _: Enum3 = ENUM3; // ok\n+    let _: Enum3<isize, usize> = ENUM3; //~ ERROR use of unstable library feature 'unstable_default'\n+    let _: Enum3<isize> = ENUM3; // ok\n+    let _: Enum3<isize, isize> = Enum3::Ok(0); //~ ERROR use of unstable library feature 'unstable_default'\n+    let _: Enum3<usize, usize> = Enum3::Ok(0); //~ ERROR use of unstable library feature 'unstable_default'\n+    if let Enum3::Ok(x) = ENUM3 {let _ = x;} // ok\n+    if let Enum3::Ok(x) = ENUM3 {let _: isize = x;} // ok\n+    if let Enum3::Ok(x) = ENUM3 {let _ = x + 1;} // ok\n+    // Note the aforementioned leak.\n+    if let Enum3::Err(x) = ENUM3B {let _: usize = x;} // ok\n+    let _: Enum3<usize> = Enum3::Err(0); // ok\n+    if let Enum3::Err(x) = ENUM3B {let _ = x + 1;} // ok\n+    if let Enum3::Err(x) = ENUM3B {let _ = x + 1usize;} // ok\n+\n+    let _ = ENUM4;\n+    let _: Enum4<isize> = Enum4::Some(1);\n+    //~^ use of deprecated variant `unstable_generic_param::Enum4::Some`: test [deprecated]\n+    //~^^ use of deprecated enum `unstable_generic_param::Enum4`: test [deprecated]\n+    let _ = ENUM4;\n+    let _: Enum4 = ENUM4; //~ use of deprecated enum `unstable_generic_param::Enum4`: test [deprecated]\n+    let _: Enum4<usize> = ENUM4; //~ use of deprecated enum `unstable_generic_param::Enum4`: test [deprecated]\n+    let _: Enum4<isize> = Enum4::Some(0);\n+    //~^ use of deprecated variant `unstable_generic_param::Enum4::Some`: test [deprecated]\n+    //~^^ use of deprecated enum `unstable_generic_param::Enum4`: test [deprecated]\n+\n+    let _ = ENUM5;\n+    let _: Enum5<isize> = Enum5::Some(1); //~ ERROR use of unstable library feature 'unstable_default'\n+    //~^ use of deprecated variant `unstable_generic_param::Enum5::Some`: test [deprecated]\n+    //~^^ use of deprecated enum `unstable_generic_param::Enum5`: test [deprecated]\n+    let _ = ENUM5;\n+    let _: Enum5 = ENUM5; //~ use of deprecated enum `unstable_generic_param::Enum5`: test [deprecated]\n+    let _: Enum5<usize> = ENUM5; //~ ERROR use of unstable library feature 'unstable_default'\n+    //~^ use of deprecated enum `unstable_generic_param::Enum5`: test [deprecated]\n+    let _: Enum5<isize> = Enum5::Some(0); //~ ERROR use of unstable library feature 'unstable_default'\n+    //~^ use of deprecated variant `unstable_generic_param::Enum5::Some`: test [deprecated]\n+    //~^^ use of deprecated enum `unstable_generic_param::Enum5`: test [deprecated]\n+\n+    let _: Enum6<isize> = Enum6::Some(1); // ok\n+    let _: Enum6<isize> = Enum6::Some(0); // ok\n+\n     let _: Box1<isize, System> = Box1::new(1); //~ ERROR use of unstable library feature 'box_alloc_param'\n     let _: Box1<isize> = Box1::new(1); // ok\n "}, {"sha": "a5df70bb8b3dd8665cf9a45cf14ba4ce292f6ab8", "filename": "src/test/ui/stability-attribute/generics-default-stability.stderr", "status": "modified", "additions": 290, "deletions": 2, "changes": 292, "blob_url": "https://github.com/rust-lang/rust/blob/98eab09cf4ee1a35290a2061ee0e7a19703923a8/src%2Ftest%2Fui%2Fstability-attribute%2Fgenerics-default-stability.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/98eab09cf4ee1a35290a2061ee0e7a19703923a8/src%2Ftest%2Fui%2Fstability-attribute%2Fgenerics-default-stability.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fgenerics-default-stability.stderr?ref=98eab09cf4ee1a35290a2061ee0e7a19703923a8", "patch": "@@ -96,6 +96,150 @@ warning: use of deprecated struct `unstable_generic_param::Struct5`: test\n LL |     let _: Struct5<isize> = Struct5 { field: 0 };\n    |            ^^^^^^^^^^^^^^\n \n+warning: use of deprecated type alias `unstable_generic_param::Alias4`: test\n+  --> $DIR/generics-default-stability.rs:160:28\n+   |\n+LL |     let _: Alias4<isize> = Alias4::Some(1);\n+   |                            ^^^^^^^^^^^^\n+\n+warning: use of deprecated type alias `unstable_generic_param::Alias4`: test\n+  --> $DIR/generics-default-stability.rs:160:12\n+   |\n+LL |     let _: Alias4<isize> = Alias4::Some(1);\n+   |            ^^^^^^^^^^^^^\n+\n+warning: use of deprecated type alias `unstable_generic_param::Alias4`: test\n+  --> $DIR/generics-default-stability.rs:164:12\n+   |\n+LL |     let _: Alias4 = ALIAS4;\n+   |            ^^^^^^\n+\n+warning: use of deprecated type alias `unstable_generic_param::Alias4`: test\n+  --> $DIR/generics-default-stability.rs:165:12\n+   |\n+LL |     let _: Alias4<usize> = ALIAS4;\n+   |            ^^^^^^^^^^^^^\n+\n+warning: use of deprecated type alias `unstable_generic_param::Alias4`: test\n+  --> $DIR/generics-default-stability.rs:166:28\n+   |\n+LL |     let _: Alias4<isize> = Alias4::Some(0);\n+   |                            ^^^^^^^^^^^^\n+\n+warning: use of deprecated type alias `unstable_generic_param::Alias4`: test\n+  --> $DIR/generics-default-stability.rs:166:12\n+   |\n+LL |     let _: Alias4<isize> = Alias4::Some(0);\n+   |            ^^^^^^^^^^^^^\n+\n+warning: use of deprecated type alias `unstable_generic_param::Alias5`: test\n+  --> $DIR/generics-default-stability.rs:171:28\n+   |\n+LL |     let _: Alias5<isize> = Alias5::Some(1);\n+   |                            ^^^^^^^^^^^^\n+\n+warning: use of deprecated type alias `unstable_generic_param::Alias5`: test\n+  --> $DIR/generics-default-stability.rs:171:12\n+   |\n+LL |     let _: Alias5<isize> = Alias5::Some(1);\n+   |            ^^^^^^^^^^^^^\n+\n+warning: use of deprecated type alias `unstable_generic_param::Alias5`: test\n+  --> $DIR/generics-default-stability.rs:175:12\n+   |\n+LL |     let _: Alias5 = ALIAS5;\n+   |            ^^^^^^\n+\n+warning: use of deprecated type alias `unstable_generic_param::Alias5`: test\n+  --> $DIR/generics-default-stability.rs:176:12\n+   |\n+LL |     let _: Alias5<usize> = ALIAS5;\n+   |            ^^^^^^^^^^^^^\n+\n+warning: use of deprecated type alias `unstable_generic_param::Alias5`: test\n+  --> $DIR/generics-default-stability.rs:178:28\n+   |\n+LL |     let _: Alias5<isize> = Alias5::Some(0);\n+   |                            ^^^^^^^^^^^^\n+\n+warning: use of deprecated type alias `unstable_generic_param::Alias5`: test\n+  --> $DIR/generics-default-stability.rs:178:12\n+   |\n+LL |     let _: Alias5<isize> = Alias5::Some(0);\n+   |            ^^^^^^^^^^^^^\n+\n+warning: use of deprecated variant `unstable_generic_param::Enum4::Some`: test\n+  --> $DIR/generics-default-stability.rs:232:27\n+   |\n+LL |     let _: Enum4<isize> = Enum4::Some(1);\n+   |                           ^^^^^^^^^^^\n+\n+warning: use of deprecated enum `unstable_generic_param::Enum4`: test\n+  --> $DIR/generics-default-stability.rs:232:12\n+   |\n+LL |     let _: Enum4<isize> = Enum4::Some(1);\n+   |            ^^^^^^^^^^^^\n+\n+warning: use of deprecated enum `unstable_generic_param::Enum4`: test\n+  --> $DIR/generics-default-stability.rs:236:12\n+   |\n+LL |     let _: Enum4 = ENUM4;\n+   |            ^^^^^\n+\n+warning: use of deprecated enum `unstable_generic_param::Enum4`: test\n+  --> $DIR/generics-default-stability.rs:237:12\n+   |\n+LL |     let _: Enum4<usize> = ENUM4;\n+   |            ^^^^^^^^^^^^\n+\n+warning: use of deprecated variant `unstable_generic_param::Enum4::Some`: test\n+  --> $DIR/generics-default-stability.rs:238:27\n+   |\n+LL |     let _: Enum4<isize> = Enum4::Some(0);\n+   |                           ^^^^^^^^^^^\n+\n+warning: use of deprecated enum `unstable_generic_param::Enum4`: test\n+  --> $DIR/generics-default-stability.rs:238:12\n+   |\n+LL |     let _: Enum4<isize> = Enum4::Some(0);\n+   |            ^^^^^^^^^^^^\n+\n+warning: use of deprecated variant `unstable_generic_param::Enum5::Some`: test\n+  --> $DIR/generics-default-stability.rs:243:27\n+   |\n+LL |     let _: Enum5<isize> = Enum5::Some(1);\n+   |                           ^^^^^^^^^^^\n+\n+warning: use of deprecated enum `unstable_generic_param::Enum5`: test\n+  --> $DIR/generics-default-stability.rs:243:12\n+   |\n+LL |     let _: Enum5<isize> = Enum5::Some(1);\n+   |            ^^^^^^^^^^^^\n+\n+warning: use of deprecated enum `unstable_generic_param::Enum5`: test\n+  --> $DIR/generics-default-stability.rs:247:12\n+   |\n+LL |     let _: Enum5 = ENUM5;\n+   |            ^^^^^\n+\n+warning: use of deprecated enum `unstable_generic_param::Enum5`: test\n+  --> $DIR/generics-default-stability.rs:248:12\n+   |\n+LL |     let _: Enum5<usize> = ENUM5;\n+   |            ^^^^^^^^^^^^\n+\n+warning: use of deprecated variant `unstable_generic_param::Enum5::Some`: test\n+  --> $DIR/generics-default-stability.rs:250:27\n+   |\n+LL |     let _: Enum5<isize> = Enum5::Some(0);\n+   |                           ^^^^^^^^^^^\n+\n+warning: use of deprecated enum `unstable_generic_param::Enum5`: test\n+  --> $DIR/generics-default-stability.rs:250:12\n+   |\n+LL |     let _: Enum5<isize> = Enum5::Some(0);\n+   |            ^^^^^^^^^^^^\n+\n error[E0658]: use of unstable library feature 'unstable_default'\n   --> $DIR/generics-default-stability.rs:36:20\n    |\n@@ -168,8 +312,152 @@ LL |     let _: Struct5<isize> = Struct5 { field: 0 };\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n+error[E0658]: use of unstable library feature 'unstable_default'\n+  --> $DIR/generics-default-stability.rs:113:19\n+   |\n+LL |     let _: Alias1<isize> = Alias1::Some(1);\n+   |                   ^^^^^\n+   |\n+   = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n+\n+error[E0658]: use of unstable library feature 'unstable_default'\n+  --> $DIR/generics-default-stability.rs:117:19\n+   |\n+LL |     let _: Alias1<usize> = ALIAS1;\n+   |                   ^^^^^\n+   |\n+   = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n+\n+error[E0658]: use of unstable library feature 'unstable_default'\n+  --> $DIR/generics-default-stability.rs:118:19\n+   |\n+LL |     let _: Alias1<isize> = Alias1::Some(0);\n+   |                   ^^^^^\n+   |\n+   = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n+\n+error[E0658]: use of unstable library feature 'unstable_default'\n+  --> $DIR/generics-default-stability.rs:146:26\n+   |\n+LL |     let _: Alias3<isize, usize> = ALIAS3;\n+   |                          ^^^^^\n+   |\n+   = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n+\n+error[E0658]: use of unstable library feature 'unstable_default'\n+  --> $DIR/generics-default-stability.rs:148:26\n+   |\n+LL |     let _: Alias3<isize, isize> = Alias3::Ok(0);\n+   |                          ^^^^^\n+   |\n+   = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n+\n+error[E0658]: use of unstable library feature 'unstable_default'\n+  --> $DIR/generics-default-stability.rs:149:26\n+   |\n+LL |     let _: Alias3<usize, usize> = Alias3::Ok(0);\n+   |                          ^^^^^\n+   |\n+   = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n+\n+error[E0658]: use of unstable library feature 'unstable_default'\n+  --> $DIR/generics-default-stability.rs:171:19\n+   |\n+LL |     let _: Alias5<isize> = Alias5::Some(1);\n+   |                   ^^^^^\n+   |\n+   = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n+\n+error[E0658]: use of unstable library feature 'unstable_default'\n+  --> $DIR/generics-default-stability.rs:176:19\n+   |\n+LL |     let _: Alias5<usize> = ALIAS5;\n+   |                   ^^^^^\n+   |\n+   = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n+\n+error[E0658]: use of unstable library feature 'unstable_default'\n+  --> $DIR/generics-default-stability.rs:178:19\n+   |\n+LL |     let _: Alias5<isize> = Alias5::Some(0);\n+   |                   ^^^^^\n+   |\n+   = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n+\n+error[E0658]: use of unstable library feature 'unstable_default'\n+  --> $DIR/generics-default-stability.rs:185:18\n+   |\n+LL |     let _: Enum1<isize> = Enum1::Some(1);\n+   |                  ^^^^^\n+   |\n+   = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n+\n+error[E0658]: use of unstable library feature 'unstable_default'\n+  --> $DIR/generics-default-stability.rs:189:18\n+   |\n+LL |     let _: Enum1<usize> = ENUM1;\n+   |                  ^^^^^\n+   |\n+   = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n+\n+error[E0658]: use of unstable library feature 'unstable_default'\n+  --> $DIR/generics-default-stability.rs:190:18\n+   |\n+LL |     let _: Enum1<isize> = Enum1::Some(0);\n+   |                  ^^^^^\n+   |\n+   = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n+\n+error[E0658]: use of unstable library feature 'unstable_default'\n+  --> $DIR/generics-default-stability.rs:218:25\n+   |\n+LL |     let _: Enum3<isize, usize> = ENUM3;\n+   |                         ^^^^^\n+   |\n+   = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n+\n+error[E0658]: use of unstable library feature 'unstable_default'\n+  --> $DIR/generics-default-stability.rs:220:25\n+   |\n+LL |     let _: Enum3<isize, isize> = Enum3::Ok(0);\n+   |                         ^^^^^\n+   |\n+   = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n+\n+error[E0658]: use of unstable library feature 'unstable_default'\n+  --> $DIR/generics-default-stability.rs:221:25\n+   |\n+LL |     let _: Enum3<usize, usize> = Enum3::Ok(0);\n+   |                         ^^^^^\n+   |\n+   = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n+\n+error[E0658]: use of unstable library feature 'unstable_default'\n+  --> $DIR/generics-default-stability.rs:243:18\n+   |\n+LL |     let _: Enum5<isize> = Enum5::Some(1);\n+   |                  ^^^^^\n+   |\n+   = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n+\n+error[E0658]: use of unstable library feature 'unstable_default'\n+  --> $DIR/generics-default-stability.rs:248:18\n+   |\n+LL |     let _: Enum5<usize> = ENUM5;\n+   |                  ^^^^^\n+   |\n+   = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n+\n+error[E0658]: use of unstable library feature 'unstable_default'\n+  --> $DIR/generics-default-stability.rs:250:18\n+   |\n+LL |     let _: Enum5<isize> = Enum5::Some(0);\n+   |                  ^^^^^\n+   |\n+   = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n+\n error[E0658]: use of unstable library feature 'box_alloc_param'\n-  --> $DIR/generics-default-stability.rs:113:24\n+  --> $DIR/generics-default-stability.rs:257:24\n    |\n LL |     let _: Box1<isize, System> = Box1::new(1);\n    |                        ^^^^^^\n@@ -200,6 +488,6 @@ warning: use of deprecated field `unstable_generic_param::Struct5::field`: test\n LL |     let _: Struct5<isize> = Struct5 { field: 0 };\n    |                                       ^^^^^^^^\n \n-error: aborting due to 13 previous errors; 16 warnings emitted\n+error: aborting due to 31 previous errors; 40 warnings emitted\n \n For more information about this error, try `rustc --explain E0658`."}]}