{"sha": "140d16ac5803a0e7b61d0f901a82549c09e4411f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0MGQxNmFjNTgwM2EwZTdiNjFkMGY5MDFhODI1NDljMDllNDQxMWY=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-10-12T02:44:48Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-10-12T02:45:04Z"}, "message": "Fix tutorial-ffi tests", "tree": {"sha": "a087c4db704c16cedd05eef7cf1ae4b9f402538f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a087c4db704c16cedd05eef7cf1ae4b9f402538f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/140d16ac5803a0e7b61d0f901a82549c09e4411f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/140d16ac5803a0e7b61d0f901a82549c09e4411f", "html_url": "https://github.com/rust-lang/rust/commit/140d16ac5803a0e7b61d0f901a82549c09e4411f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/140d16ac5803a0e7b61d0f901a82549c09e4411f/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5bca5f7c5474083aeddca1d5c405ff08ec8322f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/5bca5f7c5474083aeddca1d5c405ff08ec8322f4", "html_url": "https://github.com/rust-lang/rust/commit/5bca5f7c5474083aeddca1d5c405ff08ec8322f4"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "895aaf224364eb7dd1f07c5e090e994ee6a40e6c", "filename": "doc/tutorial-ffi.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/140d16ac5803a0e7b61d0f901a82549c09e4411f/doc%2Ftutorial-ffi.md", "raw_url": "https://github.com/rust-lang/rust/raw/140d16ac5803a0e7b61d0f901a82549c09e4411f/doc%2Ftutorial-ffi.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial-ffi.md?ref=140d16ac5803a0e7b61d0f901a82549c09e4411f", "patch": "@@ -30,7 +30,7 @@ fn sha1(data: ~str) -> ~str unsafe {\n     let bytes = str::to_bytes(data);\n     let hash = crypto::SHA1(vec::raw::to_ptr(bytes),\n                             vec::len(bytes) as c_uint, ptr::null());\n-    return as_hex(vec::raw::from_buf(hash, 20));\n+    return as_hex(vec::from_buf(hash, 20));\n }\n \n fn main(args: ~[~str]) {\n@@ -132,7 +132,7 @@ fn sha1(data: ~str) -> ~str {\n         let bytes = str::to_bytes(data);\n         let hash = crypto::SHA1(vec::raw::to_ptr(bytes),\n                                 vec::len(bytes), ptr::null());\n-        return as_hex(vec::raw::from_buf(hash, 20));\n+        return as_hex(vec::from_buf(hash, 20));\n     }\n }\n ~~~~\n@@ -177,7 +177,7 @@ Let's look at our `sha1` function again.\n let bytes = str::to_bytes(data);\n let hash = crypto::SHA1(vec::raw::to_ptr(bytes),\n                         vec::len(bytes), ptr::null());\n-return as_hex(vec::raw::from_buf(hash, 20));\n+return as_hex(vec::from_buf(hash, 20));\n # }\n # }\n ~~~~\n@@ -198,7 +198,7 @@ unsafe null pointer of type `*u8`. (Rust generics are awesome\n like that: they can take the right form depending on the type that they\n are expected to return.)\n \n-Finally, `vec::raw::from_buf` builds up a new `~[u8]` from the\n+Finally, `vec::from_buf` builds up a new `~[u8]` from the\n unsafe pointer that `SHA1` returned. SHA1 digests are always\n twenty bytes long, so we can pass `20` for the length of the new\n vector."}]}