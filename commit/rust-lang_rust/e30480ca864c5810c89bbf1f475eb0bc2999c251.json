{"sha": "e30480ca864c5810c89bbf1f475eb0bc2999c251", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzMDQ4MGNhODY0YzU4MTBjODliYmYxZjQ3NWViMGJjMjk5OWMyNTE=", "commit": {"author": {"name": "Observer42", "email": "yishengxu47@gmail.com", "date": "2019-08-12T10:07:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-12T10:07:14Z"}, "message": "Apply suggestions from code review\n\nCo-Authored-By: Mazdak Farrokhzad <twingoow@gmail.com>", "tree": {"sha": "ab46c08dbb0c4388218a55b4e004dd1a1f882f33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab46c08dbb0c4388218a55b4e004dd1a1f882f33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e30480ca864c5810c89bbf1f475eb0bc2999c251", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdUTpSCRBK7hj4Ov3rIwAAdHIIAFJk61eFoeDx6RIMxjqXrOTx\ngD/IGGCeE0LkALx03mnjqx+QGAYqbJ26dC77sgvH/Cn9MEn/zN6QQFiLHJEJfUv6\ntzjAsM8jWlwM4wQgI9XwfMz1O9SZ3hFTLEo+/tKfsIzLOUIraWIpljQuap0kIMt1\nvBzdXqgzxqtN2N26aRoRA3Oez3P69NxHAih8e3obC6ZD5pjeh8g1gw7uwVoXhkem\nSWvFj2DzYQkQDngCiiHEfdTxAgqTFwR39/Vdy4Alp/mJwNTBl0S6oFDMbjrmtMQl\nXsSypGlEzfo11jFt1CW6ofPl6UDEss292myBdqwmqHXLIKvZX2Rvts5T65vMNnY=\n=P4yI\n-----END PGP SIGNATURE-----\n", "payload": "tree ab46c08dbb0c4388218a55b4e004dd1a1f882f33\nparent fa7a40cc6ee7e16c948a804dbb487d36b3d0ccc9\nauthor Observer42 <yishengxu47@gmail.com> 1565604434 +0800\ncommitter GitHub <noreply@github.com> 1565604434 +0800\n\nApply suggestions from code review\n\nCo-Authored-By: Mazdak Farrokhzad <twingoow@gmail.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e30480ca864c5810c89bbf1f475eb0bc2999c251", "html_url": "https://github.com/rust-lang/rust/commit/e30480ca864c5810c89bbf1f475eb0bc2999c251", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e30480ca864c5810c89bbf1f475eb0bc2999c251/comments", "author": {"login": "Observer42", "id": 2409663, "node_id": "MDQ6VXNlcjI0MDk2NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/2409663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Observer42", "html_url": "https://github.com/Observer42", "followers_url": "https://api.github.com/users/Observer42/followers", "following_url": "https://api.github.com/users/Observer42/following{/other_user}", "gists_url": "https://api.github.com/users/Observer42/gists{/gist_id}", "starred_url": "https://api.github.com/users/Observer42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Observer42/subscriptions", "organizations_url": "https://api.github.com/users/Observer42/orgs", "repos_url": "https://api.github.com/users/Observer42/repos", "events_url": "https://api.github.com/users/Observer42/events{/privacy}", "received_events_url": "https://api.github.com/users/Observer42/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa7a40cc6ee7e16c948a804dbb487d36b3d0ccc9", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa7a40cc6ee7e16c948a804dbb487d36b3d0ccc9", "html_url": "https://github.com/rust-lang/rust/commit/fa7a40cc6ee7e16c948a804dbb487d36b3d0ccc9"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "3d04f30e7bde54bf2c8e832bcd4cedb40688fbb8", "filename": "src/liballoc/collections/binary_heap.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e30480ca864c5810c89bbf1f475eb0bc2999c251/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e30480ca864c5810c89bbf1f475eb0bc2999c251/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs?ref=e30480ca864c5810c89bbf1f475eb0bc2999c251", "patch": "@@ -1163,9 +1163,9 @@ impl<T> FusedIterator for Drain<'_, T> {}\n \n #[stable(feature = \"binary_heap_extras_15\", since = \"1.5.0\")]\n impl<T: Ord> From<Vec<T>> for BinaryHeap<T> {\n-    /// Converts a `Vec` into a `BinaryHeap`.\n+    /// Converts a `Vec<T>` into a `BinaryHeap<T>`.\n     ///\n-    /// This conversion happens in-place, and has O(n) time complexity.\n+    /// This conversion happens in-place, and has `O(n)` time complexity.\n     fn from(vec: Vec<T>) -> BinaryHeap<T> {\n         let mut heap = BinaryHeap { data: vec };\n         heap.rebuild();"}]}