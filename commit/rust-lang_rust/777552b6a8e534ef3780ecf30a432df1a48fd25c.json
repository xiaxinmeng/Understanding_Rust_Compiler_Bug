{"sha": "777552b6a8e534ef3780ecf30a432df1a48fd25c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3NzU1MmI2YThlNTM0ZWYzNzgwZWNmMzBhNDMyZGYxYTQ4ZmQyNWM=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2019-08-05T10:31:00Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2019-08-05T10:41:02Z"}, "message": "Cache decorations before the first change only", "tree": {"sha": "cb7edfde64b31b49b10a09450111b7f0058c2089", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb7edfde64b31b49b10a09450111b7f0058c2089"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/777552b6a8e534ef3780ecf30a432df1a48fd25c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/777552b6a8e534ef3780ecf30a432df1a48fd25c", "html_url": "https://github.com/rust-lang/rust/commit/777552b6a8e534ef3780ecf30a432df1a48fd25c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/777552b6a8e534ef3780ecf30a432df1a48fd25c/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f358b4c0c05b20bd438f5fe3082a53dbe5b90e88", "url": "https://api.github.com/repos/rust-lang/rust/commits/f358b4c0c05b20bd438f5fe3082a53dbe5b90e88", "html_url": "https://github.com/rust-lang/rust/commit/f358b4c0c05b20bd438f5fe3082a53dbe5b90e88"}], "stats": {"total": 41, "additions": 21, "deletions": 20}, "files": [{"sha": "d6d1f61f9e4581cf199aba1c01275b451b3ddf0b", "filename": "editors/code/src/commands/inlay_hints.ts", "status": "modified", "additions": 21, "deletions": 20, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/777552b6a8e534ef3780ecf30a432df1a48fd25c/editors%2Fcode%2Fsrc%2Fcommands%2Finlay_hints.ts", "raw_url": "https://github.com/rust-lang/rust/raw/777552b6a8e534ef3780ecf30a432df1a48fd25c/editors%2Fcode%2Fsrc%2Fcommands%2Finlay_hints.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Finlay_hints.ts?ref=777552b6a8e534ef3780ecf30a432df1a48fd25c", "patch": "@@ -21,17 +21,17 @@ const typeHintDecorationType = vscode.window.createTextEditorDecorationType({\n \n export class HintsUpdater {\n     private displayHints = true;\n-    private drawnDecorations = new WeakMap<\n-        vscode.Uri,\n+    private decorationsSinceLastChange = new Map<\n+        string,\n         vscode.DecorationOptions[]\n     >();\n \n     public async loadHints(editor?: vscode.TextEditor): Promise<void> {\n         if (this.displayHints) {\n             const documentUri = this.getEditorDocumentUri(editor);\n             if (documentUri !== null) {\n-                const latestDecorations = this.drawnDecorations.get(\n-                    documentUri\n+                const latestDecorations = this.decorationsSinceLastChange.get(\n+                    documentUri.toString()\n                 );\n                 if (latestDecorations === undefined) {\n                     await this.updateDecorationsFromServer(\n@@ -51,7 +51,7 @@ export class HintsUpdater {\n     public async toggleHintsDisplay(displayHints: boolean): Promise<void> {\n         if (this.displayHints !== displayHints) {\n             this.displayHints = displayHints;\n-            this.drawnDecorations = new WeakMap();\n+            this.decorationsSinceLastChange.clear();\n \n             if (displayHints) {\n                 return this.updateHints();\n@@ -72,14 +72,15 @@ export class HintsUpdater {\n             return;\n         }\n         const editor = vscode.window.activeTextEditor;\n-        if (editor == null) {\n+        if (editor === undefined) {\n             return;\n         }\n-        const document = cause == null ? editor.document : cause.document;\n+        const document = cause === undefined ? editor.document : cause.document;\n         if (!this.isRustDocument(document)) {\n             return;\n         }\n \n+        this.decorationsSinceLastChange.clear();\n         return await this.updateDecorationsFromServer(document.uri, editor);\n     }\n \n@@ -92,23 +93,23 @@ export class HintsUpdater {\n         editor: TextEditor\n     ): Promise<void> {\n         const newHints = await this.queryHints(documentUri.toString());\n-        if (newHints != null) {\n+        if (\n+            newHints !== null &&\n+            this.getEditorDocumentUri(vscode.window.activeTextEditor) ===\n+                documentUri\n+        ) {\n             const newDecorations = newHints.map(hint => ({\n                 range: hint.range,\n                 renderOptions: { after: { contentText: `: ${hint.label}` } }\n             }));\n-\n-            this.drawnDecorations.set(documentUri, newDecorations);\n-\n-            if (\n-                this.getEditorDocumentUri(vscode.window.activeTextEditor) ===\n-                documentUri\n-            ) {\n-                return editor.setDecorations(\n-                    typeHintDecorationType,\n-                    newDecorations\n-                );\n-            }\n+            this.decorationsSinceLastChange.set(\n+                documentUri.toString(),\n+                newDecorations\n+            );\n+            return editor.setDecorations(\n+                typeHintDecorationType,\n+                newDecorations\n+            );\n         }\n     }\n "}]}