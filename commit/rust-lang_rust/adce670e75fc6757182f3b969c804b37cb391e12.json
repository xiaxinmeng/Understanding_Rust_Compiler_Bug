{"sha": "adce670e75fc6757182f3b969c804b37cb391e12", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkY2U2NzBlNzVmYzY3NTcxODJmM2I5NjljODA0YjM3Y2IzOTFlMTI=", "commit": {"author": {"name": "Vadim Chugunov", "email": "vadimcn@gmail.com", "date": "2015-10-18T22:10:48Z"}, "committer": {"name": "Vadim Chugunov", "email": "vadimcn@gmail.com", "date": "2015-10-20T01:54:38Z"}, "message": "Fix up tests and docs.", "tree": {"sha": "4f90c485ffa4a6d4b645a3c086e771cfc8b2e401", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f90c485ffa4a6d4b645a3c086e771cfc8b2e401"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adce670e75fc6757182f3b969c804b37cb391e12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adce670e75fc6757182f3b969c804b37cb391e12", "html_url": "https://github.com/rust-lang/rust/commit/adce670e75fc6757182f3b969c804b37cb391e12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adce670e75fc6757182f3b969c804b37cb391e12/comments", "author": {"login": "vadimcn", "id": 3203809, "node_id": "MDQ6VXNlcjMyMDM4MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3203809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimcn", "html_url": "https://github.com/vadimcn", "followers_url": "https://api.github.com/users/vadimcn/followers", "following_url": "https://api.github.com/users/vadimcn/following{/other_user}", "gists_url": "https://api.github.com/users/vadimcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimcn/subscriptions", "organizations_url": "https://api.github.com/users/vadimcn/orgs", "repos_url": "https://api.github.com/users/vadimcn/repos", "events_url": "https://api.github.com/users/vadimcn/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimcn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vadimcn", "id": 3203809, "node_id": "MDQ6VXNlcjMyMDM4MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3203809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimcn", "html_url": "https://github.com/vadimcn", "followers_url": "https://api.github.com/users/vadimcn/followers", "following_url": "https://api.github.com/users/vadimcn/following{/other_user}", "gists_url": "https://api.github.com/users/vadimcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimcn/subscriptions", "organizations_url": "https://api.github.com/users/vadimcn/orgs", "repos_url": "https://api.github.com/users/vadimcn/repos", "events_url": "https://api.github.com/users/vadimcn/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimcn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd0cf1ba13566417c71ce8908af39f94cbbb8468", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd0cf1ba13566417c71ce8908af39f94cbbb8468", "html_url": "https://github.com/rust-lang/rust/commit/bd0cf1ba13566417c71ce8908af39f94cbbb8468"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "d927eac0751d305010f60c3587e186de74a30a08", "filename": "src/doc/trpl/custom-allocators.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adce670e75fc6757182f3b969c804b37cb391e12/src%2Fdoc%2Ftrpl%2Fcustom-allocators.md", "raw_url": "https://github.com/rust-lang/rust/raw/adce670e75fc6757182f3b969c804b37cb391e12/src%2Fdoc%2Ftrpl%2Fcustom-allocators.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fcustom-allocators.md?ref=adce670e75fc6757182f3b969c804b37cb391e12", "patch": "@@ -140,6 +140,8 @@ pub extern fn __rust_usable_size(size: usize, _align: usize) -> usize {\n # #[lang = \"panic_fmt\"] fn panic_fmt() {}\n # #[lang = \"eh_personality\"] fn eh_personality() {}\n # #[lang = \"eh_unwind_resume\"] extern fn eh_unwind_resume() {}\n+# #[no_mangle] pub extern fn rust_eh_register_frames () {}\n+# #[no_mangle] pub extern fn rust_eh_unregister_frames () {}\n ```\n \n After we compile this crate, it can be used as follows:"}, {"sha": "76b9f82827bbbc33cd16e995a783b5d817753493", "filename": "src/doc/trpl/lang-items.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adce670e75fc6757182f3b969c804b37cb391e12/src%2Fdoc%2Ftrpl%2Flang-items.md", "raw_url": "https://github.com/rust-lang/rust/raw/adce670e75fc6757182f3b969c804b37cb391e12/src%2Fdoc%2Ftrpl%2Flang-items.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Flang-items.md?ref=adce670e75fc6757182f3b969c804b37cb391e12", "patch": "@@ -54,6 +54,8 @@ fn main(argc: isize, argv: *const *const u8) -> isize {\n #[lang = \"eh_personality\"] extern fn eh_personality() {}\n #[lang = \"panic_fmt\"] fn panic_fmt() -> ! { loop {} }\n # #[lang = \"eh_unwind_resume\"] extern fn rust_eh_unwind_resume() {}\n+# #[no_mangle] pub extern fn rust_eh_register_frames () {}\n+# #[no_mangle] pub extern fn rust_eh_unregister_frames () {}\n ```\n \n Note the use of `abort`: the `exchange_malloc` lang item is assumed to"}, {"sha": "0040878fb2f4f19057a509dde4f5b06e34a0ec66", "filename": "src/doc/trpl/no-stdlib.md", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/adce670e75fc6757182f3b969c804b37cb391e12/src%2Fdoc%2Ftrpl%2Fno-stdlib.md", "raw_url": "https://github.com/rust-lang/rust/raw/adce670e75fc6757182f3b969c804b37cb391e12/src%2Fdoc%2Ftrpl%2Fno-stdlib.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fno-stdlib.md?ref=adce670e75fc6757182f3b969c804b37cb391e12", "patch": "@@ -34,6 +34,8 @@ fn start(_argc: isize, _argv: *const *const u8) -> isize {\n #[lang = \"eh_personality\"] extern fn eh_personality() {}\n #[lang = \"panic_fmt\"] fn panic_fmt() -> ! { loop {} }\n # #[lang = \"eh_unwind_resume\"] extern fn rust_eh_unwind_resume() {}\n+# #[no_mangle] pub extern fn rust_eh_register_frames () {}\n+# #[no_mangle] pub extern fn rust_eh_unregister_frames () {}\n # // fn main() {} tricked you, rustdoc!\n ```\n \n@@ -60,6 +62,8 @@ pub extern fn main(argc: i32, argv: *const *const u8) -> i32 {\n #[lang = \"eh_personality\"] extern fn eh_personality() {}\n #[lang = \"panic_fmt\"] fn panic_fmt() -> ! { loop {} }\n # #[lang = \"eh_unwind_resume\"] extern fn rust_eh_unwind_resume() {}\n+# #[no_mangle] pub extern fn rust_eh_register_frames () {}\n+# #[no_mangle] pub extern fn rust_eh_unregister_frames () {}\n # // fn main() {} tricked you, rustdoc!\n ```\n \n@@ -145,8 +149,10 @@ extern fn panic_fmt(args: &core::fmt::Arguments,\n }\n \n #[lang = \"eh_personality\"] extern fn eh_personality() {}\n-# #[lang = \"eh_unwind_resume\"] extern fn rust_eh_unwind_resume() {}\n # #[start] fn start(argc: isize, argv: *const *const u8) -> isize { 0 }\n+# #[lang = \"eh_unwind_resume\"] extern fn rust_eh_unwind_resume() {}\n+# #[no_mangle] pub extern fn rust_eh_register_frames () {}\n+# #[no_mangle] pub extern fn rust_eh_unregister_frames () {}\n # fn main() {}\n ```\n "}, {"sha": "2df7604f96138f5c4dcad98c3c2a31a259e54365", "filename": "src/test/run-make/no-duplicate-libs/bar.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adce670e75fc6757182f3b969c804b37cb391e12/src%2Ftest%2Frun-make%2Fno-duplicate-libs%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adce670e75fc6757182f3b969c804b37cb391e12/src%2Ftest%2Frun-make%2Fno-duplicate-libs%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fno-duplicate-libs%2Fbar.rs?ref=adce670e75fc6757182f3b969c804b37cb391e12", "patch": "@@ -20,3 +20,5 @@ pub extern fn bar() {}\n #[lang = \"eh_personality\"] fn eh_personality() {}\n #[lang = \"eh_unwind_resume\"] fn eh_unwind_resume() {}\n #[lang = \"panic_fmt\"] fn panic_fmt() -> ! { loop {} }\n+#[no_mangle] pub extern fn rust_eh_register_frames () {}\n+#[no_mangle] pub extern fn rust_eh_unregister_frames () {}"}, {"sha": "4e81f0ea06e6a6b620f861f317072de4e901cdee", "filename": "src/test/run-make/no-duplicate-libs/foo.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/adce670e75fc6757182f3b969c804b37cb391e12/src%2Ftest%2Frun-make%2Fno-duplicate-libs%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adce670e75fc6757182f3b969c804b37cb391e12/src%2Ftest%2Frun-make%2Fno-duplicate-libs%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fno-duplicate-libs%2Ffoo.rs?ref=adce670e75fc6757182f3b969c804b37cb391e12", "patch": "@@ -20,4 +20,5 @@ pub extern fn foo() {}\n #[lang = \"eh_personality\"] fn eh_personality() {}\n #[lang = \"eh_unwind_resume\"] fn eh_unwind_resume() {}\n #[lang = \"panic_fmt\"] fn panic_fmt() -> ! { loop {} }\n-\n+#[no_mangle] pub extern fn rust_eh_register_frames () {}\n+#[no_mangle] pub extern fn rust_eh_unregister_frames () {}"}, {"sha": "b11970560d59a730583178b60bae51eb11d2bf62", "filename": "src/test/run-pass/smallest-hello-world.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adce670e75fc6757182f3b969c804b37cb391e12/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adce670e75fc6757182f3b969c804b37cb391e12/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs?ref=adce670e75fc6757182f3b969c804b37cb391e12", "patch": "@@ -23,6 +23,8 @@ extern \"rust-intrinsic\" { fn transmute<T, U>(t: T) -> U; }\n #[lang = \"eh_personality\"] extern fn eh_personality() {}\n #[lang = \"eh_unwind_resume\"] extern fn eh_unwind_resume() {}\n #[lang = \"panic_fmt\"] fn panic_fmt() -> ! { loop {} }\n+#[no_mangle] pub extern fn rust_eh_register_frames () {}\n+#[no_mangle] pub extern fn rust_eh_unregister_frames () {}\n \n #[start]\n fn main(_: isize, _: *const *const u8) -> isize {"}]}