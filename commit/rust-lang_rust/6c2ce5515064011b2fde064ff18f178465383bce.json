{"sha": "6c2ce5515064011b2fde064ff18f178465383bce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjMmNlNTUxNTA2NDAxMWIyZmRlMDY0ZmYxOGYxNzg0NjUzODNiY2U=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-01-30T15:31:19Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-01-30T15:31:19Z"}, "message": "Fix ast::String::value not properly escaping in some cases", "tree": {"sha": "742388df841bbeea6e6d7fcbfe65a16348c3575d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/742388df841bbeea6e6d7fcbfe65a16348c3575d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c2ce5515064011b2fde064ff18f178465383bce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c2ce5515064011b2fde064ff18f178465383bce", "html_url": "https://github.com/rust-lang/rust/commit/6c2ce5515064011b2fde064ff18f178465383bce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c2ce5515064011b2fde064ff18f178465383bce/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "557c1e36ddbb19cc76f7a1f04d1b327942aafcb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/557c1e36ddbb19cc76f7a1f04d1b327942aafcb9", "html_url": "https://github.com/rust-lang/rust/commit/557c1e36ddbb19cc76f7a1f04d1b327942aafcb9"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "044e3e5e8494f48761cec12717ed18ebc0a3f18a", "filename": "crates/syntax/src/ast/token_ext.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6c2ce5515064011b2fde064ff18f178465383bce/crates%2Fsyntax%2Fsrc%2Fast%2Ftoken_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c2ce5515064011b2fde064ff18f178465383bce/crates%2Fsyntax%2Fsrc%2Fast%2Ftoken_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Ftoken_ext.rs?ref=6c2ce5515064011b2fde064ff18f178465383bce", "patch": "@@ -173,7 +173,7 @@ impl ast::String {\n             buf.capacity() == 0,\n         ) {\n             (Ok(c), false) => buf.push(c),\n-            (Ok(c), true) if Some(c) == text_iter.next() => (),\n+            (Ok(c), true) if char_range.len() == 1 && Some(c) == text_iter.next() => (),\n             (Ok(c), true) => {\n                 buf.reserve_exact(text.len());\n                 buf.push_str(&text[..char_range.start]);\n@@ -659,7 +659,7 @@ impl Radix {\n \n #[cfg(test)]\n mod tests {\n-    use crate::ast::{make, FloatNumber, IntNumber};\n+    use crate::ast::{self, make, FloatNumber, IntNumber};\n \n     fn check_float_suffix<'a>(lit: &str, expected: impl Into<Option<&'a str>>) {\n         assert_eq!(FloatNumber { syntax: make::tokens::literal(lit) }.suffix(), expected.into());\n@@ -692,4 +692,21 @@ mod tests {\n         check_int_suffix(\"0o11u32\", \"u32\");\n         check_int_suffix(\"0xffu32\", \"u32\");\n     }\n+\n+    fn check_string_value<'a>(lit: &str, expected: impl Into<Option<&'a str>>) {\n+        assert_eq!(\n+            ast::String { syntax: make::tokens::literal(&format!(\"\\\"{}\\\"\", lit)) }\n+                .value()\n+                .as_deref(),\n+            expected.into()\n+        );\n+    }\n+\n+    #[test]\n+    fn test_string_escape() {\n+        check_string_value(r\"foobar\", \"foobar\");\n+        check_string_value(r\"\\foobar\", None);\n+        check_string_value(r\"\\nfoobar\", \"\\nfoobar\");\n+        check_string_value(r\"C:\\\\Windows\\\\System32\\\\\", \"C:\\\\Windows\\\\System32\\\\\");\n+    }\n }"}]}