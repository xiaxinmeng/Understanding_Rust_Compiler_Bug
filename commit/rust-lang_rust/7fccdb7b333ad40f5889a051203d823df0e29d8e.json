{"sha": "7fccdb7b333ad40f5889a051203d823df0e29d8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmY2NkYjdiMzMzYWQ0MGY1ODg5YTA1MTIwM2Q4MjNkZjBlMjlkOGU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-06-12T17:01:32Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-06-12T17:01:32Z"}, "message": "fix intrinsic_operation_unsafety comment", "tree": {"sha": "1a92be7a050607426a238821afd710002c7de67e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a92be7a050607426a238821afd710002c7de67e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7fccdb7b333ad40f5889a051203d823df0e29d8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7fccdb7b333ad40f5889a051203d823df0e29d8e", "html_url": "https://github.com/rust-lang/rust/commit/7fccdb7b333ad40f5889a051203d823df0e29d8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7fccdb7b333ad40f5889a051203d823df0e29d8e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5fbcd35a8217a17f6b63a22217ace06cf8f5f02", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5fbcd35a8217a17f6b63a22217ace06cf8f5f02", "html_url": "https://github.com/rust-lang/rust/commit/c5fbcd35a8217a17f6b63a22217ace06cf8f5f02"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "a259fc6a488fc7ce881926a5cb8a3fa279e6d5f7", "filename": "compiler/rustc_typeck/src/check/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7fccdb7b333ad40f5889a051203d823df0e29d8e/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fccdb7b333ad40f5889a051203d823df0e29d8e/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fintrinsic.rs?ref=7fccdb7b333ad40f5889a051203d823df0e29d8e", "patch": "@@ -53,7 +53,7 @@ fn equate_intrinsic_type<'tcx>(\n     require_same_types(tcx, &cause, tcx.mk_fn_ptr(tcx.fn_sig(it.def_id)), fty);\n }\n \n-/// Returns `true` if the given intrinsic is unsafe to call or not.\n+/// Returns the unsafety of the given intrinsic.\n pub fn intrinsic_operation_unsafety(intrinsic: Symbol) -> hir::Unsafety {\n     match intrinsic {\n         sym::abort"}]}