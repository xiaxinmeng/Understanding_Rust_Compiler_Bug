{"sha": "a4b7474461f5ea96eb895adef7f17a079b42bad5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0Yjc0NzQ0NjFmNWVhOTZlYjg5NWFkZWY3ZjE3YTA3OWI0MmJhZDU=", "commit": {"author": {"name": "Branimir", "email": "branimir@volomp.com", "date": "2013-09-26T14:59:54Z"}, "committer": {"name": "Branimir", "email": "branimir@volomp.com", "date": "2013-09-26T14:59:54Z"}, "message": "Fix ICE caused by my previous patch, that is, if super trait had more\nmethods tnan subtrait, compiling would fail. I simply forgot to update\nvariable name. Updated test case , too.", "tree": {"sha": "5ebba72670181adb4c966ca84879cf48dd66e5cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ebba72670181adb4c966ca84879cf48dd66e5cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4b7474461f5ea96eb895adef7f17a079b42bad5", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4b7474461f5ea96eb895adef7f17a079b42bad5", "html_url": "https://github.com/rust-lang/rust/commit/a4b7474461f5ea96eb895adef7f17a079b42bad5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4b7474461f5ea96eb895adef7f17a079b42bad5/comments", "author": null, "committer": null, "parents": [{"sha": "0022f2b20418a35737cd944487b1b272f68de4f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/0022f2b20418a35737cd944487b1b272f68de4f2", "html_url": "https://github.com/rust-lang/rust/commit/0022f2b20418a35737cd944487b1b272f68de4f2"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "3cc93d3fea928f8137693d490e1469ae7a711ec1", "filename": "src/librustc/middle/typeck/check/method.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a4b7474461f5ea96eb895adef7f17a079b42bad5/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4b7474461f5ea96eb895adef7f17a079b42bad5/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs?ref=a4b7474461f5ea96eb895adef7f17a079b42bad5", "patch": "@@ -431,10 +431,10 @@ impl<'self> LookupContext<'self> {\n \n             Candidate {\n                 rcvr_match_condition: RcvrMatchesIfObject(did),\n-                rcvr_substs: trait_ref.substs.clone(),\n+                rcvr_substs: new_trait_ref.substs.clone(),\n                 method_ty: m,\n                 origin: method_object(method_object {\n-                        trait_id: trait_ref.def_id,\n+                        trait_id: new_trait_ref.def_id,\n                         object_trait_id: did,\n                         method_num: method_num,\n                         real_index: vtable_index"}, {"sha": "f2ee9206957ed27f86222e1dd24a217c4793fbc3", "filename": "src/test/run-pass/issue-9394-inherited-trait-calls.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a4b7474461f5ea96eb895adef7f17a079b42bad5/src%2Ftest%2Frun-pass%2Fissue-9394-inherited-trait-calls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4b7474461f5ea96eb895adef7f17a079b42bad5/src%2Ftest%2Frun-pass%2Fissue-9394-inherited-trait-calls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-9394-inherited-trait-calls.rs?ref=a4b7474461f5ea96eb895adef7f17a079b42bad5", "patch": "@@ -10,6 +10,10 @@\n \n trait Base: Base2 + Base3{\n     fn foo(&self) -> ~str;\n+    fn foo1(&self) -> ~str;\n+    fn foo2(&self) -> ~str{\n+        ~\"base foo2\"\n+    }\n }\n \n trait Base2: Base3{\n@@ -30,6 +34,9 @@ impl Base for X {\n     fn foo(&self) -> ~str{\n         ~\"base foo\"\n     }\n+    fn foo1(&self) -> ~str{\n+        ~\"base foo1\"\n+    }\n \n }\n \n@@ -56,6 +63,8 @@ pub fn main() {\n     let s = &n as &Super;\n     assert_eq!(s.bar(),~\"super bar\");\n     assert_eq!(s.foo(),~\"base foo\");\n+    assert_eq!(s.foo1(),~\"base foo1\");\n+    assert_eq!(s.foo2(),~\"base foo2\");\n     assert_eq!(s.baz(),~\"base2 baz\");\n     assert_eq!(s.root(),~\"base3 root\");\n }"}]}