{"sha": "e4a6343e47a7dc87192b762b3b2ebd100240d194", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0YTYzNDNlNDdhN2RjODcxOTJiNzYyYjNiMmViZDEwMDI0MGQxOTQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-08T11:09:57Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-08T11:34:30Z"}, "message": "move index_resolve to symbol index", "tree": {"sha": "44f92482abb828755b6ad483fb50eb9ec673ee38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44f92482abb828755b6ad483fb50eb9ec673ee38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4a6343e47a7dc87192b762b3b2ebd100240d194", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4a6343e47a7dc87192b762b3b2ebd100240d194", "html_url": "https://github.com/rust-lang/rust/commit/e4a6343e47a7dc87192b762b3b2ebd100240d194", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4a6343e47a7dc87192b762b3b2ebd100240d194/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5173c6295b9c48e6990d6fb6467fc35cd0dfc902", "url": "https://api.github.com/repos/rust-lang/rust/commits/5173c6295b9c48e6990d6fb6467fc35cd0dfc902", "html_url": "https://github.com/rust-lang/rust/commit/5173c6295b9c48e6990d6fb6467fc35cd0dfc902"}], "stats": {"total": 25, "additions": 11, "deletions": 14}, "files": [{"sha": "a59ab78535f92cd344680273585c9e663da37af8", "filename": "crates/ra_ide_api/src/call_info.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4a6343e47a7dc87192b762b3b2ebd100240d194/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4a6343e47a7dc87192b762b3b2ebd100240d194/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs?ref=e4a6343e47a7dc87192b762b3b2ebd100240d194", "patch": "@@ -20,7 +20,7 @@ pub(crate) fn call_info(db: &RootDatabase, position: FilePosition) -> Option<Cal\n     let name_ref = calling_node.name_ref()?;\n \n     // Resolve the function's NameRef (NOTE: this isn't entirely accurate).\n-    let file_symbols = db.index_resolve(name_ref);\n+    let file_symbols = crate::symbol_index::index_resolve(db, name_ref);\n     let symbol = file_symbols\n         .into_iter()\n         .find(|it| it.ptr.kind() == FN_DEF)?;"}, {"sha": "69f2d2bf622089263661c99d067afe036d249340", "filename": "crates/ra_ide_api/src/goto_definition.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e4a6343e47a7dc87192b762b3b2ebd100240d194/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4a6343e47a7dc87192b762b3b2ebd100240d194/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs?ref=e4a6343e47a7dc87192b762b3b2ebd100240d194", "patch": "@@ -118,8 +118,7 @@ pub(crate) fn reference_definition(\n         }\n     }\n     // If that fails try the index based approach.\n-    let navs = db\n-        .index_resolve(name_ref)\n+    let navs = crate::symbol_index::index_resolve(db, name_ref)\n         .into_iter()\n         .map(NavigationTarget::from_symbol)\n         .collect();"}, {"sha": "a351c93733c71c16bb0104b9c78f49c27fc70313", "filename": "crates/ra_ide_api/src/imp.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e4a6343e47a7dc87192b762b3b2ebd100240d194/crates%2Fra_ide_api%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4a6343e47a7dc87192b762b3b2ebd100240d194/crates%2Fra_ide_api%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fimp.rs?ref=e4a6343e47a7dc87192b762b3b2ebd100240d194", "patch": "@@ -2,13 +2,11 @@ use hir::{\n     self, Problem, source_binder\n };\n use ra_ide_api_light::{self, LocalEdit, Severity};\n-use ra_syntax::ast;\n use ra_db::SourceDatabase;\n \n use crate::{\n     db, Diagnostic, FileId, FilePosition, FileSystemEdit,\n-    Query, SourceChange, SourceFileEdit,\n-    symbol_index::FileSymbol,\n+    SourceChange, SourceFileEdit,\n };\n \n impl db::RootDatabase {\n@@ -75,14 +73,6 @@ impl db::RootDatabase {\n         };\n         res\n     }\n-\n-    pub(crate) fn index_resolve(&self, name_ref: &ast::NameRef) -> Vec<FileSymbol> {\n-        let name = name_ref.text();\n-        let mut query = Query::new(name.to_string());\n-        query.exact();\n-        query.limit(4);\n-        crate::symbol_index::world_symbols(self, query)\n-    }\n }\n \n impl SourceChange {"}, {"sha": "3d0b2369eda5734b4c04b7711374636f766f04dc", "filename": "crates/ra_ide_api/src/symbol_index.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e4a6343e47a7dc87192b762b3b2ebd100240d194/crates%2Fra_ide_api%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4a6343e47a7dc87192b762b3b2ebd100240d194/crates%2Fra_ide_api%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsymbol_index.rs?ref=e4a6343e47a7dc87192b762b3b2ebd100240d194", "patch": "@@ -109,6 +109,14 @@ pub(crate) fn world_symbols(db: &RootDatabase, query: Query) -> Vec<FileSymbol>\n     query.search(&buf)\n }\n \n+pub(crate) fn index_resolve(db: &RootDatabase, name_ref: &ast::NameRef) -> Vec<FileSymbol> {\n+    let name = name_ref.text();\n+    let mut query = Query::new(name.to_string());\n+    query.exact();\n+    query.limit(4);\n+    crate::symbol_index::world_symbols(db, query)\n+}\n+\n #[derive(Default, Debug)]\n pub(crate) struct SymbolIndex {\n     symbols: Vec<FileSymbol>,"}]}