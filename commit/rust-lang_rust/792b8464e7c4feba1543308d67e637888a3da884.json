{"sha": "792b8464e7c4feba1543308d67e637888a3da884", "node_id": "C_kwDOAAsO6NoAKDc5MmI4NDY0ZTdjNGZlYmExNTQzMzA4ZDY3ZTYzNzg4OGEzZGE4ODQ", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-02-09T17:42:42Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-02-09T17:42:42Z"}, "message": "rustdoc: remove unused fn parameter `tab`", "tree": {"sha": "26001ff4b9b490e1a27c5ba1ba5265cf615fa016", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26001ff4b9b490e1a27c5ba1ba5265cf615fa016"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/792b8464e7c4feba1543308d67e637888a3da884", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/792b8464e7c4feba1543308d67e637888a3da884", "html_url": "https://github.com/rust-lang/rust/commit/792b8464e7c4feba1543308d67e637888a3da884", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/792b8464e7c4feba1543308d67e637888a3da884/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cca42a47f5d574c8f7302c98c3f918cdc772fbb", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cca42a47f5d574c8f7302c98c3f918cdc772fbb", "html_url": "https://github.com/rust-lang/rust/commit/8cca42a47f5d574c8f7302c98c3f918cdc772fbb"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "82a51a8467bcd557c4dd3de7736f9268414bf4d0", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/792b8464e7c4feba1543308d67e637888a3da884/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/792b8464e7c4feba1543308d67e637888a3da884/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=792b8464e7c4feba1543308d67e637888a3da884", "patch": "@@ -1109,7 +1109,7 @@ fn item_typedef(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clea\n fn item_union(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, s: &clean::Union) {\n     wrap_item(w, |w| {\n         render_attributes_in_pre(w, it, \"\");\n-        render_union(w, it, Some(&s.generics), &s.fields, \"\", cx);\n+        render_union(w, it, Some(&s.generics), &s.fields, cx);\n     });\n \n     document(w, cx, it, None, HeadingOffset::H2);\n@@ -1628,7 +1628,6 @@ fn render_union(\n     it: &clean::Item,\n     g: Option<&clean::Generics>,\n     fields: &[clean::Item],\n-    tab: &str,\n     cx: &Context<'_>,\n ) {\n     let tcx = cx.tcx();\n@@ -1651,7 +1650,7 @@ fn render_union(\n         w.write_str(\" \");\n     }\n \n-    write!(w, \"{{\\n{}\", tab);\n+    write!(w, \"{{\\n\");\n     let count_fields =\n         fields.iter().filter(|f| matches!(*f.kind, clean::StructFieldItem(..))).count();\n     let toggle = should_hide_fields(count_fields);\n@@ -1663,17 +1662,16 @@ fn render_union(\n         if let clean::StructFieldItem(ref ty) = *field.kind {\n             write!(\n                 w,\n-                \"    {}{}: {},\\n{}\",\n+                \"    {}{}: {},\\n\",\n                 visibility_print_with_space(field.visibility(tcx), field.item_id, cx),\n                 field.name.unwrap(),\n-                ty.print(cx),\n-                tab\n+                ty.print(cx)\n             );\n         }\n     }\n \n     if it.has_stripped_entries().unwrap() {\n-        write!(w, \"    /* private fields */\\n{}\", tab);\n+        write!(w, \"    /* private fields */\\n\");\n     }\n     if toggle {\n         toggle_close(w);"}]}