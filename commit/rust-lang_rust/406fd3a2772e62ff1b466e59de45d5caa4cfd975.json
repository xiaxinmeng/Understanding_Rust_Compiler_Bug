{"sha": "406fd3a2772e62ff1b466e59de45d5caa4cfd975", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwNmZkM2EyNzcyZTYyZmYxYjQ2NmU1OWRlNDVkNWNhYTRjZmQ5NzU=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-02-07T08:45:49Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-02-07T08:45:49Z"}, "message": "silence dead code warnings on windows", "tree": {"sha": "53454dd395e00d183746d01ce2c9bbcb9a2a1a83", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53454dd395e00d183746d01ce2c9bbcb9a2a1a83"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/406fd3a2772e62ff1b466e59de45d5caa4cfd975", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/406fd3a2772e62ff1b466e59de45d5caa4cfd975", "html_url": "https://github.com/rust-lang/rust/commit/406fd3a2772e62ff1b466e59de45d5caa4cfd975", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/406fd3a2772e62ff1b466e59de45d5caa4cfd975/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55ca27faa78434d81d3f59535c96bbb2a08f0d5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/55ca27faa78434d81d3f59535c96bbb2a08f0d5c", "html_url": "https://github.com/rust-lang/rust/commit/55ca27faa78434d81d3f59535c96bbb2a08f0d5c"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "7fd902ee0fe2ee9672432ef17e0378cd7cc1c930", "filename": "library/std/src/sys_common/rwlock.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/406fd3a2772e62ff1b466e59de45d5caa4cfd975/library%2Fstd%2Fsrc%2Fsys_common%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/406fd3a2772e62ff1b466e59de45d5caa4cfd975/library%2Fstd%2Fsrc%2Fsys_common%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Frwlock.rs?ref=406fd3a2772e62ff1b466e59de45d5caa4cfd975", "patch": "@@ -1,12 +1,15 @@\n use crate::sys::rwlock as imp;\n \n+#[cfg(unix)]\n enum GuardType {\n     Read,\n     Write,\n }\n \n+#[cfg(unix)]\n pub struct RWLockGuard(&'static RWLock, GuardType);\n \n+#[cfg(unix)]\n impl Drop for RWLockGuard {\n     fn drop(&mut self) {\n         unsafe {\n@@ -52,6 +55,7 @@ impl RWLock {\n     /// Behavior is undefined if the rwlock has been moved between this and any\n     /// previous method call.\n     #[inline]\n+    #[cfg(unix)]\n     pub unsafe fn read_with_guard(&'static self) -> RWLockGuard {\n         self.read();\n         RWLockGuard(&self, GuardType::Read)\n@@ -87,6 +91,7 @@ impl RWLock {\n     /// Behavior is undefined if the rwlock has been moved between this and any\n     /// previous method call.\n     #[inline]\n+    #[cfg(unix)]\n     pub unsafe fn write_with_guard(&'static self) -> RWLockGuard {\n         self.write();\n         RWLockGuard(&self, GuardType::Write)"}]}