{"sha": "44187383f4724bd7e4b2b220235e93438043947a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0MTg3MzgzZjQ3MjRiZDdlNGIyYjIyMDIzNWU5MzQzODA0Mzk0N2E=", "commit": {"author": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-06-24T00:41:46Z"}, "committer": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-09-24T21:02:05Z"}, "message": "Use operator overloading instead of direct calls of `make_binop`", "tree": {"sha": "63d5eaeb35445c91fc06f28f336bcc89119ab991", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63d5eaeb35445c91fc06f28f336bcc89119ab991"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44187383f4724bd7e4b2b220235e93438043947a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44187383f4724bd7e4b2b220235e93438043947a", "html_url": "https://github.com/rust-lang/rust/commit/44187383f4724bd7e4b2b220235e93438043947a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44187383f4724bd7e4b2b220235e93438043947a/comments", "author": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "174065fc98ef9335ea45a234aa18286cdf6c3934", "url": "https://api.github.com/repos/rust-lang/rust/commits/174065fc98ef9335ea45a234aa18286cdf6c3934", "html_url": "https://github.com/rust-lang/rust/commit/174065fc98ef9335ea45a234aa18286cdf6c3934"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "5928d12f30bec43f38fb94b7c0084dcc4e296195", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/44187383f4724bd7e4b2b220235e93438043947a/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44187383f4724bd7e4b2b220235e93438043947a/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=44187383f4724bd7e4b2b220235e93438043947a", "patch": "@@ -875,7 +875,7 @@ impl std::ops::Sub for &MinifyingSugg<'static> {\n     fn sub(self, rhs: &MinifyingSugg<'static>) -> MinifyingSugg<'static> {\n         match (self.as_str(), rhs.as_str()) {\n             (_, \"0\") => self.clone(),\n-            (\"0\", _) => MinifyingSugg(sugg::make_unop(\"-\", rhs.0.clone())),\n+            (\"0\", _) => MinifyingSugg(-(rhs.0.clone())),\n             (x, y) if x == y => MinifyingSugg::non_paren(\"0\"),\n             (_, _) => MinifyingSugg(&self.0 - &rhs.0),\n         }\n@@ -898,7 +898,7 @@ impl std::ops::Sub<&MinifyingSugg<'static>> for MinifyingSugg<'static> {\n     fn sub(self, rhs: &MinifyingSugg<'static>) -> MinifyingSugg<'static> {\n         match (self.as_str(), rhs.as_str()) {\n             (_, \"0\") => self,\n-            (\"0\", _) => MinifyingSugg(sugg::make_unop(\"-\", rhs.0.clone())),\n+            (\"0\", _) => MinifyingSugg(-(rhs.0.clone())),\n             (x, y) if x == y => MinifyingSugg::non_paren(\"0\"),\n             (_, _) => MinifyingSugg(self.0 - &rhs.0),\n         }"}, {"sha": "1f448f86d72e33e955dbc6d8f137ec1df2f1d4f7", "filename": "clippy_lints/src/utils/sugg.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/44187383f4724bd7e4b2b220235e93438043947a/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44187383f4724bd7e4b2b220235e93438043947a/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fsugg.rs?ref=44187383f4724bd7e4b2b220235e93438043947a", "patch": "@@ -13,7 +13,7 @@ use rustc_span::{BytePos, Pos};\n use std::borrow::Cow;\n use std::convert::TryInto;\n use std::fmt::Display;\n-use std::ops::{Add, Not, Sub};\n+use std::ops::{Add, Neg, Not, Sub};\n \n /// A helper type to build suggestion correctly handling parenthesis.\n pub enum Sugg<'a> {\n@@ -354,6 +354,13 @@ impl Sub for &Sugg<'_> {\n forward_binop_impls_to_ref!(impl Add, add for Sugg<'_>, type Output = Sugg<'static>);\n forward_binop_impls_to_ref!(impl Sub, sub for Sugg<'_>, type Output = Sugg<'static>);\n \n+impl Neg for Sugg<'_> {\n+    type Output = Sugg<'static>;\n+    fn neg(self) -> Sugg<'static> {\n+        make_unop(\"-\", self)\n+    }\n+}\n+\n impl Not for Sugg<'_> {\n     type Output = Sugg<'static>;\n     fn not(self) -> Sugg<'static> {"}]}