{"sha": "9103e439091fbd4e5ec7e561f007172342065340", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxMDNlNDM5MDkxZmJkNGU1ZWM3ZTU2MWYwMDcxNzIzNDIwNjUzNDA=", "commit": {"author": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-07-24T18:44:32Z"}, "committer": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-07-24T18:44:58Z"}, "message": "Bugfix: enable transcription to deal with zero-repetition cases.", "tree": {"sha": "2693c1a5852eb1baebbb4acccb9f55956a0a97c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2693c1a5852eb1baebbb4acccb9f55956a0a97c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9103e439091fbd4e5ec7e561f007172342065340", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9103e439091fbd4e5ec7e561f007172342065340", "html_url": "https://github.com/rust-lang/rust/commit/9103e439091fbd4e5ec7e561f007172342065340", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9103e439091fbd4e5ec7e561f007172342065340/comments", "author": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e20c5e759687ce26a4579c00ee5edabfea9e8fd9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e20c5e759687ce26a4579c00ee5edabfea9e8fd9", "html_url": "https://github.com/rust-lang/rust/commit/e20c5e759687ce26a4579c00ee5edabfea9e8fd9"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "1a7ccda3da424abb31e864f4e3d693b4bd1768e2", "filename": "src/libsyntax/ext/tt/transcribe.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9103e439091fbd4e5ec7e561f007172342065340/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9103e439091fbd4e5ec7e561f007172342065340/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs?ref=9103e439091fbd4e5ec7e561f007172342065340", "patch": "@@ -86,8 +86,6 @@ pure fn lookup_cur_ad_by_ad(r: tt_reader, start: @arb_depth) -> @arb_depth {\n           seq(ads, _) { ads[idx] }\n         }\n     }\n-    unchecked {io::println(#fmt[\"%? / %?\", copy r.repeat_idx,\n-                                copy r.repeat_len]);};\n     vec::foldl(start, r.repeat_idx, red)\n }\n \n@@ -135,7 +133,7 @@ fn lockstep_iter_size(&&t: token_tree, &&r: tt_reader) -> lis {\n \n fn tt_next_token(&&r: tt_reader) -> {tok: token, sp: span} {\n     let ret_val = { tok: r.cur_tok, sp: r.cur_span };\n-    while r.cur.idx >= vec::len(r.cur.readme) {\n+    while r.cur.idx >= r.cur.readme.len() {\n         /* done with this set; pop or repeat? */\n         if ! r.cur.dotdotdoted\n             || r.repeat_idx.last() == r.repeat_len.last() - 1 {\n@@ -193,20 +191,21 @@ fn tt_next_token(&&r: tt_reader) -> {tok: token, sp: span} {\n                 r.sp_diag.span_fatal(sp, msg);\n               }\n               lis_constraint(len, _) {\n-                vec::push(r.repeat_len, len);\n-                vec::push(r.repeat_idx, 0u);\n-                r.cur = @{readme: tts, mut idx: 0u, dotdotdoted: true,\n-                          sep: sep, up: tt_frame_up(option::some(r.cur)) };\n-\n                 if len == 0 {\n                     if !zerok {\n                         r.sp_diag.span_fatal(sp, /* FIXME #2887 blame invoker\n                                                   */\n                                              ~\"this must repeat at least \\\n                                               once\");\n                     }\n-                    /* we need to pop before we proceed, so recur */\n+\n+                    r.cur.idx += 1u;\n                     ret tt_next_token(r);\n+                } else {\n+                    vec::push(r.repeat_len, len);\n+                    vec::push(r.repeat_idx, 0u);\n+                    r.cur = @{readme: tts, mut idx: 0u, dotdotdoted: true,\n+                              sep: sep, up: tt_frame_up(option::some(r.cur))};\n                 }\n               }\n             }"}]}