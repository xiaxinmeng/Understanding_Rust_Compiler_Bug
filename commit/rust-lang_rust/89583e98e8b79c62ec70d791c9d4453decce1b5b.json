{"sha": "89583e98e8b79c62ec70d791c9d4453decce1b5b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5NTgzZTk4ZThiNzljNjJlYzcwZDc5MWM5ZDQ0NTNkZWNjZTFiNWI=", "commit": {"author": {"name": "Frank Steffahn", "email": "frank.steffahn@stu.uni-kiel.de", "date": "2021-07-01T17:12:13Z"}, "committer": {"name": "Frank Steffahn", "email": "frank.steffahn@stu.uni-kiel.de", "date": "2021-07-28T12:33:36Z"}, "message": "Make `SpecInPlaceCollect` use `TrustedRandomAccessNoCoerce`", "tree": {"sha": "5191ff12a14af7fb36e27aeb5faf84f6de387398", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5191ff12a14af7fb36e27aeb5faf84f6de387398"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89583e98e8b79c62ec70d791c9d4453decce1b5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89583e98e8b79c62ec70d791c9d4453decce1b5b", "html_url": "https://github.com/rust-lang/rust/commit/89583e98e8b79c62ec70d791c9d4453decce1b5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89583e98e8b79c62ec70d791c9d4453decce1b5b/comments", "author": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ff421da992d6612eb43fb58014f83ce15168146", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ff421da992d6612eb43fb58014f83ce15168146", "html_url": "https://github.com/rust-lang/rust/commit/9ff421da992d6612eb43fb58014f83ce15168146"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "4c06c044e1a27fdd4246b868d7f7259b3e4c2f0a", "filename": "library/alloc/src/vec/source_iter_marker.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/89583e98e8b79c62ec70d791c9d4453decce1b5b/library%2Falloc%2Fsrc%2Fvec%2Fsource_iter_marker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89583e98e8b79c62ec70d791c9d4453decce1b5b/library%2Falloc%2Fsrc%2Fvec%2Fsource_iter_marker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fsource_iter_marker.rs?ref=89583e98e8b79c62ec70d791c9d4453decce1b5b", "patch": "@@ -1,4 +1,4 @@\n-use core::iter::{InPlaceIterable, SourceIter, TrustedRandomAccess};\n+use core::iter::{InPlaceIterable, SourceIter, TrustedRandomAccessNoCoerce};\n use core::mem::{self, ManuallyDrop};\n use core::ptr::{self};\n \n@@ -101,6 +101,8 @@ fn write_in_place_with_drop<T>(\n trait SpecInPlaceCollect<T, I>: Iterator<Item = T> {\n     /// Collects an iterator (`self`) into the destination buffer (`dst`) and returns the number of items\n     /// collected. `end` is the last writable element of the allocation and used for bounds checks.\n+    // FIXME: Clarify safety conditions. Iterator must not be coerced to a subtype\n+    // after this call due to potential use of [`TrustedRandomAccessNoCoerce`].\n     fn collect_in_place(&mut self, dst: *mut T, end: *const T) -> usize;\n }\n \n@@ -124,7 +126,7 @@ where\n \n impl<T, I> SpecInPlaceCollect<T, I> for I\n where\n-    I: Iterator<Item = T> + TrustedRandomAccess,\n+    I: Iterator<Item = T> + TrustedRandomAccessNoCoerce,\n {\n     #[inline]\n     fn collect_in_place(&mut self, dst_buf: *mut T, end: *const T) -> usize {"}, {"sha": "0c62ee294fab535310ccfa3b74045ffa1fe795c7", "filename": "library/core/src/iter/adapters/zip.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/89583e98e8b79c62ec70d791c9d4453decce1b5b/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fzip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89583e98e8b79c62ec70d791c9d4453decce1b5b/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fzip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fzip.rs?ref=89583e98e8b79c62ec70d791c9d4453decce1b5b", "patch": "@@ -514,6 +514,9 @@ impl<A: Debug + TrustedRandomAccessNoCoerce, B: Debug + TrustedRandomAccessNoCoe\n ///   `self.__iterator_get_unchecked(idx)`, assuming that the required traits are implemented.\n /// * It must also be safe to drop `self` after calling `self.__iterator_get_unchecked(idx)`.\n /// * If `T` is a subtype of `Self`, then it must be safe to coerce `self` to `T`.\n+//\n+// FIXME: Clarify interaction with SourceIter/InPlaceIterable. Calling `SouceIter::as_inner`\n+// after `__iterator_get_unchecked` is supposed to be allowed.\n #[doc(hidden)]\n #[unstable(feature = \"trusted_random_access\", issue = \"none\")]\n #[rustc_specialization_trait]"}]}