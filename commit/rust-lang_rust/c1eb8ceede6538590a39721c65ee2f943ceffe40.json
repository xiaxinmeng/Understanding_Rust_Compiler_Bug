{"sha": "c1eb8ceede6538590a39721c65ee2f943ceffe40", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxZWI4Y2VlZGU2NTM4NTkwYTM5NzIxYzY1ZWUyZjk0M2NlZmZlNDA=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-09-24T14:36:29Z"}, "committer": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-10-30T22:29:44Z"}, "message": "get_hint_if_single_char_arg: fix bug where multi-char letters are not detected properly", "tree": {"sha": "64bef69c76338e3373ae5d0a9ad573cec1182793", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64bef69c76338e3373ae5d0a9ad573cec1182793"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1eb8ceede6538590a39721c65ee2f943ceffe40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1eb8ceede6538590a39721c65ee2f943ceffe40", "html_url": "https://github.com/rust-lang/rust/commit/c1eb8ceede6538590a39721c65ee2f943ceffe40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1eb8ceede6538590a39721c65ee2f943ceffe40/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6412aeebc432ab49d46fe1f45a0fb5322c805d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6412aeebc432ab49d46fe1f45a0fb5322c805d1", "html_url": "https://github.com/rust-lang/rust/commit/c6412aeebc432ab49d46fe1f45a0fb5322c805d1"}], "stats": {"total": 38, "additions": 31, "deletions": 7}, "files": [{"sha": "5cc3c25e01de62ec9e696d58c6cbc16eabae4fe5", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c1eb8ceede6538590a39721c65ee2f943ceffe40/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1eb8ceede6538590a39721c65ee2f943ceffe40/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=c1eb8ceede6538590a39721c65ee2f943ceffe40", "patch": "@@ -3204,7 +3204,7 @@ fn get_hint_if_single_char_arg(\n         if let hir::ExprKind::Lit(lit) = &arg.kind;\n         if let ast::LitKind::Str(r, style) = lit.node;\n         let string = r.as_str();\n-        if string.len() == 1;\n+        if string.chars().count() == 1;\n         then {\n             let snip = snippet_with_applicability(cx, arg.span, &string, applicability);\n             let ch = if let ast::StrStyle::Raw(nhash) = style {"}, {"sha": "817a06199ffe598c671ff268c096c78d3c7746b2", "filename": "tests/ui/single_char_pattern.fixed", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c1eb8ceede6538590a39721c65ee2f943ceffe40/tests%2Fui%2Fsingle_char_pattern.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c1eb8ceede6538590a39721c65ee2f943ceffe40/tests%2Fui%2Fsingle_char_pattern.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_pattern.fixed?ref=c1eb8ceede6538590a39721c65ee2f943ceffe40", "patch": "@@ -18,9 +18,9 @@ fn main() {\n     //\n     // We may not want to suggest changing these anyway\n     // See: https://github.com/rust-lang/rust-clippy/issues/650#issuecomment-184328984\n-    x.split(\"\u00df\");\n-    x.split(\"\u211d\");\n-    x.split(\"\ud83d\udca3\");\n+    x.split('\u00df');\n+    x.split('\u211d');\n+    x.split('\ud83d\udca3');\n     // Can't use this lint for unicode code points which don't fit in a char\n     x.split(\"\u2764\ufe0f\");\n     x.contains('x');"}, {"sha": "ecaabd9155bb58892041ecb4c5125d70684e6450", "filename": "tests/ui/single_char_pattern.stderr", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c1eb8ceede6538590a39721c65ee2f943ceffe40/tests%2Fui%2Fsingle_char_pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c1eb8ceede6538590a39721c65ee2f943ceffe40/tests%2Fui%2Fsingle_char_pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_pattern.stderr?ref=c1eb8ceede6538590a39721c65ee2f943ceffe40", "patch": "@@ -6,6 +6,24 @@ LL |     x.split(\"x\");\n    |\n    = note: `-D clippy::single-char-pattern` implied by `-D warnings`\n \n+error: single-character string constant used as pattern\n+  --> $DIR/single_char_pattern.rs:21:13\n+   |\n+LL |     x.split(\"\u00df\");\n+   |             ^^^ help: try using a `char` instead: `'\u00df'`\n+\n+error: single-character string constant used as pattern\n+  --> $DIR/single_char_pattern.rs:22:13\n+   |\n+LL |     x.split(\"\u211d\");\n+   |             ^^^ help: try using a `char` instead: `'\u211d'`\n+\n+error: single-character string constant used as pattern\n+  --> $DIR/single_char_pattern.rs:23:13\n+   |\n+LL |     x.split(\"\ud83d\udca3\");\n+   |             ^^^^ help: try using a `char` instead: `'\ud83d\udca3'`\n+\n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:26:16\n    |\n@@ -162,5 +180,5 @@ error: single-character string constant used as pattern\n LL |     x.split(r###\"#\"###);\n    |             ^^^^^^^^^^ help: try using a `char` instead: `'#'`\n \n-error: aborting due to 27 previous errors\n+error: aborting due to 30 previous errors\n "}, {"sha": "3c550bee9a38672b9f0cf0b04e181dc0043c449c", "filename": "tests/ui/single_char_push_str.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c1eb8ceede6538590a39721c65ee2f943ceffe40/tests%2Fui%2Fsingle_char_push_str.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c1eb8ceede6538590a39721c65ee2f943ceffe40/tests%2Fui%2Fsingle_char_push_str.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_push_str.fixed?ref=c1eb8ceede6538590a39721c65ee2f943ceffe40", "patch": "@@ -19,5 +19,5 @@ fn main() {\n     string.push('\\u{0052}');\n     string.push('a');\n \n-    get_string!().push_str(\"\u00f6\");\n+    get_string!().push('\u00f6');\n }"}, {"sha": "d6e6e635cc5356b9d95aa7e30d509e41dcf97b17", "filename": "tests/ui/single_char_push_str.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c1eb8ceede6538590a39721c65ee2f943ceffe40/tests%2Fui%2Fsingle_char_push_str.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c1eb8ceede6538590a39721c65ee2f943ceffe40/tests%2Fui%2Fsingle_char_push_str.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_push_str.stderr?ref=c1eb8ceede6538590a39721c65ee2f943ceffe40", "patch": "@@ -30,5 +30,11 @@ error: calling `push_str()` using a single-character string literal\n LL |     string.push_str(r##\"a\"##);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `string.push('a')`\n \n-error: aborting due to 5 previous errors\n+error: calling `push_str()` using a single-character string literal\n+  --> $DIR/single_char_push_str.rs:22:5\n+   |\n+LL |     get_string!().push_str(\"\u00f6\");\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `get_string!().push('\u00f6')`\n+\n+error: aborting due to 6 previous errors\n "}]}