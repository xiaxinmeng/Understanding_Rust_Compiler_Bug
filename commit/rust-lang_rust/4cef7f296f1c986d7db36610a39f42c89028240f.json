{"sha": "4cef7f296f1c986d7db36610a39f42c89028240f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjZWY3ZjI5NmYxYzk4NmQ3ZGIzNjYxMGEzOWY0MmM4OTAyODI0MGY=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-04-08T15:34:12Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-04-08T15:34:12Z"}, "message": "Rollup merge of #24149 - bombless:update-faq, r=steveklabnik\n\nI think \"let is used to introduce variables\" is incorrent.\r\nYou can use\r\n```rust\r\nmatch (42, true) {\r\n    (x, y) => { /* ... */ }\r\n}\r\n```\r\nto replace\r\n```rust\r\nlet x = 42;\r\nlet y = true;\r\n```\r\nso it's nothing special for `let`.", "tree": {"sha": "302d589ba156962c7aa8b833c83b302ac8736b34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/302d589ba156962c7aa8b833c83b302ac8736b34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4cef7f296f1c986d7db36610a39f42c89028240f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4cef7f296f1c986d7db36610a39f42c89028240f", "html_url": "https://github.com/rust-lang/rust/commit/4cef7f296f1c986d7db36610a39f42c89028240f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4cef7f296f1c986d7db36610a39f42c89028240f/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac3cc6c427a77c59dd02912cf7178d3190a16720", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac3cc6c427a77c59dd02912cf7178d3190a16720", "html_url": "https://github.com/rust-lang/rust/commit/ac3cc6c427a77c59dd02912cf7178d3190a16720"}, {"sha": "c9454b1a02754b8cdb46fec00241d5fd2171ef9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9454b1a02754b8cdb46fec00241d5fd2171ef9e", "html_url": "https://github.com/rust-lang/rust/commit/c9454b1a02754b8cdb46fec00241d5fd2171ef9e"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "0f2c37a5abf8346b9c102262b20075adfe825efa", "filename": "src/doc/complement-design-faq.md", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4cef7f296f1c986d7db36610a39f42c89028240f/src%2Fdoc%2Fcomplement-design-faq.md", "raw_url": "https://github.com/rust-lang/rust/raw/4cef7f296f1c986d7db36610a39f42c89028240f/src%2Fdoc%2Fcomplement-design-faq.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fcomplement-design-faq.md?ref=4cef7f296f1c986d7db36610a39f42c89028240f", "patch": "@@ -163,13 +163,17 @@ This is to make the language easier to parse for humans, especially in the face\n of higher-order functions. `fn foo<T>(f: fn(int): int, fn(T): U): U` is not\n particularly easy to read.\n \n-## `let` is used to introduce variables\n+## Why is `let` used to introduce variables?\n \n-`let` not only defines variables, but can do pattern matching. One can also\n-redeclare immutable variables with `let`. This is useful to avoid unnecessary\n-`mut` annotations. An interesting historical note is that Rust comes,\n-syntactically, most closely from ML, which also uses `let` to introduce\n-bindings.\n+We don't use the term \"variable\", instead, we use \"variable bindings\". The\n+simplest way for binding is the `let` syntax, other ways including `if let`,\n+`while let` and `match`. Bindings also exist in function arguments positions.\n+\n+Bindings always happen in pattern matching positions, and it's also Rust's way\n+to declare mutability. One can also redeclare mutability of a binding in\n+pattern matching. This is useful to avoid unnecessary `mut` annotations. An\n+interesting historical note is that Rust comes, syntactically, most closely\n+from ML, which also uses `let` to introduce bindings.\n \n See also [a long thread][alt] on renaming `let mut` to `var`.\n "}]}