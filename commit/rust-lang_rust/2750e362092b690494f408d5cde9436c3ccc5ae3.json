{"sha": "2750e362092b690494f408d5cde9436c3ccc5ae3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3NTBlMzYyMDkyYjY5MDQ5NGY0MDhkNWNkZTk0MzZjM2NjYzVhZTM=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-01-10T20:45:58Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-01-10T20:51:48Z"}, "message": "rustdoc: Resolve `&str` as `str`\n\nPeople almost always are referring to `&str`, not `str`, so this will\nsave a manual link resolve in many cases.\n\nNote that we already accept `&` (resolves to `reference`) in intra-doc\nlinks, so this shouldn't cause breakage.", "tree": {"sha": "0b6fb5cb09164759547223dc130405318311b401", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b6fb5cb09164759547223dc130405318311b401"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2750e362092b690494f408d5cde9436c3ccc5ae3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2750e362092b690494f408d5cde9436c3ccc5ae3", "html_url": "https://github.com/rust-lang/rust/commit/2750e362092b690494f408d5cde9436c3ccc5ae3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2750e362092b690494f408d5cde9436c3ccc5ae3/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f30733adb9150a9b965a6af1650d5213bec8ddf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/f30733adb9150a9b965a6af1650d5213bec8ddf6", "html_url": "https://github.com/rust-lang/rust/commit/f30733adb9150a9b965a6af1650d5213bec8ddf6"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "0eb5c63cef5e63e4dbf2e68b05a7c709d0d628cf", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2750e362092b690494f408d5cde9436c3ccc5ae3/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2750e362092b690494f408d5cde9436c3ccc5ae3/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=2750e362092b690494f408d5cde9436c3ccc5ae3", "patch": "@@ -2086,7 +2086,7 @@ fn resolve_primitive(path_str: &str, ns: Namespace) -> Option<Res> {\n         \"f64\" => F64,\n         \"char\" => Char,\n         \"bool\" | \"true\" | \"false\" => Bool,\n-        \"str\" => Str,\n+        \"str\" | \"&str\" => Str,\n         // See #80181 for why these don't have symbols associated.\n         \"slice\" => Slice,\n         \"array\" => Array,"}, {"sha": "28256a442d7fe2ae55e1a9796f470ccceb3e0ca3", "filename": "src/test/rustdoc/intra-doc/non-path-primitives.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2750e362092b690494f408d5cde9436c3ccc5ae3/src%2Ftest%2Frustdoc%2Fintra-doc%2Fnon-path-primitives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2750e362092b690494f408d5cde9436c3ccc5ae3/src%2Ftest%2Frustdoc%2Fintra-doc%2Fnon-path-primitives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fnon-path-primitives.rs?ref=2750e362092b690494f408d5cde9436c3ccc5ae3", "patch": "@@ -8,6 +8,15 @@\n // @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html#method.map\"]' 'array::map'\n //! [array::map]\n \n+// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\"]' 'owned str'\n+// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\"]' 'str ref'\n+// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html#method.is_empty\"]' 'str::is_empty'\n+// @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html#method.len\"]' '&str::len'\n+//! [owned str][str]\n+//! [str ref][&str]\n+//! [str::is_empty]\n+//! [&str::len]\n+\n // @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html#method.is_null\"]' 'pointer::is_null'\n // @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html#method.is_null\"]' '*const::is_null'\n // @has - '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html#method.is_null\"]' '*mut::is_null'"}]}