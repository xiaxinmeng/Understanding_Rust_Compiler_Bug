{"sha": "42f8e1f879487e3b0a48b9635eac11aaf7b672a1", "node_id": "C_kwDOAAsO6NoAKDQyZjhlMWY4Nzk0ODdlM2IwYTQ4Yjk2MzVlYWMxMWFhZjdiNjcyYTE", "commit": {"author": {"name": "S\u00e9bastien Marie", "email": "semarie@online.fr", "date": "2022-05-11T04:51:09Z"}, "committer": {"name": "S\u00e9bastien Marie", "email": "semarie@online.fr", "date": "2022-05-11T04:51:09Z"}, "message": "to_timespec could be unused by some targets", "tree": {"sha": "1552016aa6d27512ee1cb1e7736fd1568d54553c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1552016aa6d27512ee1cb1e7736fd1568d54553c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42f8e1f879487e3b0a48b9635eac11aaf7b672a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42f8e1f879487e3b0a48b9635eac11aaf7b672a1", "html_url": "https://github.com/rust-lang/rust/commit/42f8e1f879487e3b0a48b9635eac11aaf7b672a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42f8e1f879487e3b0a48b9635eac11aaf7b672a1/comments", "author": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cadc11d838d5f07b2849ba148dfb83c006fb70f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3cadc11d838d5f07b2849ba148dfb83c006fb70f", "html_url": "https://github.com/rust-lang/rust/commit/3cadc11d838d5f07b2849ba148dfb83c006fb70f"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "f99c453a3a85b88cd3f3eb66582cc716962c382b", "filename": "library/std/src/sys/unix/time.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42f8e1f879487e3b0a48b9635eac11aaf7b672a1/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42f8e1f879487e3b0a48b9635eac11aaf7b672a1/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ftime.rs?ref=42f8e1f879487e3b0a48b9635eac11aaf7b672a1", "patch": "@@ -125,6 +125,7 @@ impl Timespec {\n         Some(Timespec::new(secs, nsec as i64))\n     }\n \n+    #[allow(dead_code)]\n     pub fn to_timespec(&self) -> Option<libc::timespec> {\n         Some(libc::timespec {\n             tv_sec: self.tv_sec.try_into().ok()?,"}]}