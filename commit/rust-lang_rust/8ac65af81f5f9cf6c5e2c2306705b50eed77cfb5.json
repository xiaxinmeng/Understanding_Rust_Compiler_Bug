{"sha": "8ac65af81f5f9cf6c5e2c2306705b50eed77cfb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhYzY1YWY4MWY1ZjljZjZjNWUyYzIzMDY3MDViNTBlZWQ3N2NmYjU=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-12-20T15:37:29Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-12-20T15:37:29Z"}, "message": "Implement Encodable and Decodable for Result.", "tree": {"sha": "e0795758bdf54c228ffc93d52ac51916768bb2ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0795758bdf54c228ffc93d52ac51916768bb2ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ac65af81f5f9cf6c5e2c2306705b50eed77cfb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ac65af81f5f9cf6c5e2c2306705b50eed77cfb5", "html_url": "https://github.com/rust-lang/rust/commit/8ac65af81f5f9cf6c5e2c2306705b50eed77cfb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ac65af81f5f9cf6c5e2c2306705b50eed77cfb5/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16212b93677eae6951974676b174247e6ad0ba48", "url": "https://api.github.com/repos/rust-lang/rust/commits/16212b93677eae6951974676b174247e6ad0ba48", "html_url": "https://github.com/rust-lang/rust/commit/16212b93677eae6951974676b174247e6ad0ba48"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "854ca4eb3b03b78d6afe64441ad8cf1b982bc593", "filename": "src/libserialize/serialize.rs", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/8ac65af81f5f9cf6c5e2c2306705b50eed77cfb5/src%2Flibserialize%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ac65af81f5f9cf6c5e2c2306705b50eed77cfb5/src%2Flibserialize%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fserialize.rs?ref=8ac65af81f5f9cf6c5e2c2306705b50eed77cfb5", "patch": "@@ -618,6 +618,54 @@ impl<T:Decodable> Decodable for Option<T> {\n     }\n }\n \n+impl<T1: Encodable, T2: Encodable> Encodable for Result<T1, T2> {\n+    fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {\n+        s.emit_enum(\"Result\", |s| {\n+            match *self {\n+                Ok(ref v) => {\n+                    s.emit_enum_variant(\"Ok\", 0, 1, |s| {\n+                        s.emit_enum_variant_arg(0, |s| {\n+                            v.encode(s)\n+                        })\n+                    })\n+                }\n+                Err(ref v) => {\n+                    s.emit_enum_variant(\"Err\", 1, 1, |s| {\n+                        s.emit_enum_variant_arg(0, |s| {\n+                            v.encode(s)\n+                        })\n+                    })\n+                }\n+            }\n+        })\n+    }\n+}\n+\n+impl<T1:Decodable, T2:Decodable> Decodable for Result<T1, T2> {\n+    fn decode<D: Decoder>(d: &mut D) -> Result<Result<T1, T2>, D::Error> {\n+        d.read_enum(\"Result\", |d| {\n+            d.read_enum_variant(&[\"Ok\", \"Err\"], |d, disr| {\n+                match disr {\n+                    0 => {\n+                        Ok(Ok(d.read_enum_variant_arg(0, |d| {\n+                            T1::decode(d)\n+                        })?))\n+                    }\n+                    1 => {\n+                        Ok(Err(d.read_enum_variant_arg(0, |d| {\n+                            T2::decode(d)\n+                        })?))\n+                    }\n+                    _ => {\n+                        panic!(\"Encountered invalid discriminant while \\\n+                                decoding `Result`.\");\n+                    }\n+                }\n+            })\n+        })\n+    }\n+}\n+\n macro_rules! peel {\n     ($name:ident, $($other:ident,)*) => (tuple! { $($other,)* })\n }"}]}