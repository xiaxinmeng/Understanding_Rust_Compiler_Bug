{"sha": "78f11a2f83e0c989f3de750697a89a856e9782ae", "node_id": "C_kwDOAAsO6NoAKDc4ZjExYTJmODNlMGM5ODlmM2RlNzUwNjk3YTg5YTg1NmU5NzgyYWU", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2023-04-26T09:32:06Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2023-04-26T09:42:06Z"}, "message": "fmt", "tree": {"sha": "2f42c765e1ef5f4da25e646a55e048414ec95b8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f42c765e1ef5f4da25e646a55e048414ec95b8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78f11a2f83e0c989f3de750697a89a856e9782ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78f11a2f83e0c989f3de750697a89a856e9782ae", "html_url": "https://github.com/rust-lang/rust/commit/78f11a2f83e0c989f3de750697a89a856e9782ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78f11a2f83e0c989f3de750697a89a856e9782ae/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd5c1d41f7e2e211a067ad72e32f25e43573905d", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd5c1d41f7e2e211a067ad72e32f25e43573905d", "html_url": "https://github.com/rust-lang/rust/commit/bd5c1d41f7e2e211a067ad72e32f25e43573905d"}], "stats": {"total": 33, "additions": 16, "deletions": 17}, "files": [{"sha": "e9bbae4d50488ef0312f45502a41f11a628411db", "filename": "src/tools/miri/src/concurrency/thread.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/78f11a2f83e0c989f3de750697a89a856e9782ae/src%2Ftools%2Fmiri%2Fsrc%2Fconcurrency%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78f11a2f83e0c989f3de750697a89a856e9782ae/src%2Ftools%2Fmiri%2Fsrc%2Fconcurrency%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fconcurrency%2Fthread.rs?ref=78f11a2f83e0c989f3de750697a89a856e9782ae", "patch": "@@ -272,9 +272,8 @@ impl Time {\n     fn get_wait_time(&self, clock: &Clock) -> Duration {\n         match self {\n             Time::Monotonic(instant) => instant.duration_since(clock.now()),\n-            Time::RealTime(time) => {\n-                time.duration_since(SystemTime::now()).unwrap_or(Duration::new(0, 0))\n-            }\n+            Time::RealTime(time) =>\n+                time.duration_since(SystemTime::now()).unwrap_or(Duration::new(0, 0)),\n         }\n     }\n }"}, {"sha": "a6e67ef8699df42f41c1a809eb9186514e02f67e", "filename": "src/tools/miri/src/concurrency/vector_clock.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/78f11a2f83e0c989f3de750697a89a856e9782ae/src%2Ftools%2Fmiri%2Fsrc%2Fconcurrency%2Fvector_clock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78f11a2f83e0c989f3de750697a89a856e9782ae/src%2Ftools%2Fmiri%2Fsrc%2Fconcurrency%2Fvector_clock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fconcurrency%2Fvector_clock.rs?ref=78f11a2f83e0c989f3de750697a89a856e9782ae", "patch": "@@ -212,16 +212,14 @@ impl PartialOrd for VClock {\n         for (l, r) in iter {\n             match order {\n                 Ordering::Equal => order = l.cmp(r),\n-                Ordering::Less => {\n+                Ordering::Less =>\n                     if l > r {\n                         return None;\n-                    }\n-                }\n-                Ordering::Greater => {\n+                    },\n+                Ordering::Greater =>\n                     if l < r {\n                         return None;\n-                    }\n-                }\n+                    },\n             }\n         }\n \n@@ -236,16 +234,18 @@ impl PartialOrd for VClock {\n             Ordering::Equal => Some(order),\n             // Right has at least 1 element > than the implicit 0,\n             // so the only valid values are Ordering::Less or None.\n-            Ordering::Less => match order {\n-                Ordering::Less | Ordering::Equal => Some(Ordering::Less),\n-                Ordering::Greater => None,\n-            },\n+            Ordering::Less =>\n+                match order {\n+                    Ordering::Less | Ordering::Equal => Some(Ordering::Less),\n+                    Ordering::Greater => None,\n+                },\n             // Left has at least 1 element > than the implicit 0,\n             // so the only valid values are Ordering::Greater or None.\n-            Ordering::Greater => match order {\n-                Ordering::Greater | Ordering::Equal => Some(Ordering::Greater),\n-                Ordering::Less => None,\n-            },\n+            Ordering::Greater =>\n+                match order {\n+                    Ordering::Greater | Ordering::Equal => Some(Ordering::Greater),\n+                    Ordering::Less => None,\n+                },\n         }\n     }\n "}]}