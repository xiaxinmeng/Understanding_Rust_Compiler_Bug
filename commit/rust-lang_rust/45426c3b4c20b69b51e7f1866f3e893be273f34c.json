{"sha": "45426c3b4c20b69b51e7f1866f3e893be273f34c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1NDI2YzNiNGMyMGI2OWI1MWU3ZjE4NjZmM2U4OTNiZTI3M2YzNGM=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-08-14T01:29:16Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-08-16T01:12:34Z"}, "message": "vec: rm obsolete zip and zip_slice\n\nThese are obsoleted by the generic iterator `zip` adaptor. Unlike\nthese, it does not clone the elements or allocate a new vector by\ndefault.", "tree": {"sha": "86976aaf418b7e4a4cea567fa423197bd7ec690e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86976aaf418b7e4a4cea567fa423197bd7ec690e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45426c3b4c20b69b51e7f1866f3e893be273f34c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45426c3b4c20b69b51e7f1866f3e893be273f34c", "html_url": "https://github.com/rust-lang/rust/commit/45426c3b4c20b69b51e7f1866f3e893be273f34c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45426c3b4c20b69b51e7f1866f3e893be273f34c/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f89eb867a33b25c3df0078eb2ec18d1fc00bc43", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f89eb867a33b25c3df0078eb2ec18d1fc00bc43", "html_url": "https://github.com/rust-lang/rust/commit/1f89eb867a33b25c3df0078eb2ec18d1fc00bc43"}], "stats": {"total": 104, "additions": 4, "deletions": 100}, "files": [{"sha": "bea7868fd32b7c96d0dbd4196ced81b76d5336fa", "filename": "src/libextra/sort.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/45426c3b4c20b69b51e7f1866f3e893be273f34c/src%2Flibextra%2Fsort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45426c3b4c20b69b51e7f1866f3e893be273f34c/src%2Flibextra%2Fsort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fsort.rs?ref=45426c3b4c20b69b51e7f1866f3e893be273f34c", "patch": "@@ -782,11 +782,8 @@ mod test_qsort3 {\n \n #[cfg(test)]\n mod test_qsort {\n-\n     use sort::*;\n \n-    use std::vec;\n-\n     fn check_sort(v1: &mut [int], v2: &mut [int]) {\n         let len = v1.len();\n         fn leual(a: &int, b: &int) -> bool { *a <= *b }\n@@ -835,9 +832,7 @@ mod test_qsort {\n \n         let immut_names = names;\n \n-        let pairs = vec::zip_slice(expected, immut_names);\n-        for p in pairs.iter() {\n-            let (a, b) = *p;\n+        for (&a, &b) in expected.iter().zip(immut_names.iter()) {\n             debug!(\"%d %d\", a, b);\n             assert_eq!(a, b);\n         }"}, {"sha": "9778248f005423468d2f4e1d46ae60d65e3ce687", "filename": "src/libextra/test.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/45426c3b4c20b69b51e7f1866f3e893be273f34c/src%2Flibextra%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45426c3b4c20b69b51e7f1866f3e893be273f34c/src%2Flibextra%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftest.rs?ref=45426c3b4c20b69b51e7f1866f3e893be273f34c", "patch": "@@ -1121,7 +1121,6 @@ mod tests {\n \n     use std::either;\n     use std::comm::{stream, SharedChan};\n-    use std::vec;\n     use tempfile;\n     use std::os;\n \n@@ -1309,14 +1308,8 @@ mod tests {\n               ~\"test::parse_ignored_flag\",\n               ~\"test::sort_tests\"];\n \n-        let pairs = vec::zip(expected, filtered);\n-\n-        for p in pairs.iter() {\n-            match *p {\n-                (ref a, ref b) => {\n-                    assert!(*a == b.desc.name.to_str());\n-                }\n-            }\n+        for (a, b) in expected.iter().zip(filtered.iter()) {\n+            assert!(*a == b.desc.name.to_str());\n         }\n     }\n "}, {"sha": "996b00096a29f27b34bb9b3fb095a82f77b71809", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 1, "deletions": 41, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/45426c3b4c20b69b51e7f1866f3e893be273f34c/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45426c3b4c20b69b51e7f1866f3e893be273f34c/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=45426c3b4c20b69b51e7f1866f3e893be273f34c", "patch": "@@ -390,39 +390,6 @@ pub fn unzip<T,U>(v: ~[(T, U)]) -> (~[T], ~[U]) {\n     (ts, us)\n }\n \n-/**\n- * Convert two vectors to a vector of pairs, by reference. As zip().\n- */\n-pub fn zip_slice<T:Clone,U:Clone>(v: &[T], u: &[U]) -> ~[(T, U)] {\n-    let mut zipped = ~[];\n-    let sz = v.len();\n-    let mut i = 0u;\n-    assert_eq!(sz, u.len());\n-    while i < sz {\n-        zipped.push((v[i].clone(), u[i].clone()));\n-        i += 1u;\n-    }\n-    zipped\n-}\n-\n-/**\n- * Convert two vectors to a vector of pairs.\n- *\n- * Returns a vector of tuples, where the i-th tuple contains the\n- * i-th elements from each of the input vectors.\n- */\n-pub fn zip<T, U>(mut v: ~[T], mut u: ~[U]) -> ~[(T, U)] {\n-    let mut i = v.len();\n-    assert_eq!(i, u.len());\n-    let mut w = with_capacity(i);\n-    while i > 0 {\n-        w.push((v.pop(),u.pop()));\n-        i -= 1;\n-    }\n-    w.reverse();\n-    w\n-}\n-\n /**\n  * Iterate over all permutations of vector `v`.\n  *\n@@ -2865,14 +2832,7 @@ mod tests {\n \n     #[test]\n     fn test_zip_unzip() {\n-        let v1 = ~[1, 2, 3];\n-        let v2 = ~[4, 5, 6];\n-\n-        let z1 = zip(v1, v2);\n-\n-        assert_eq!((1, 4), z1[0]);\n-        assert_eq!((2, 5), z1[1]);\n-        assert_eq!((3, 6), z1[2]);\n+        let z1 = ~[(1, 4), (2, 5), (3, 6)];\n \n         let (left, right) = unzip(z1);\n "}, {"sha": "d97148746d01b2342f4e007142c937cb49013d68", "filename": "src/test/run-pass/zip-same-length.rs", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/1f89eb867a33b25c3df0078eb2ec18d1fc00bc43/src%2Ftest%2Frun-pass%2Fzip-same-length.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f89eb867a33b25c3df0078eb2ec18d1fc00bc43/src%2Ftest%2Frun-pass%2Fzip-same-length.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fzip-same-length.rs?ref=1f89eb867a33b25c3df0078eb2ec18d1fc00bc43", "patch": "@@ -1,44 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// In this case, the code should compile and should\n-// succeed at runtime\n-\n-use std::vec;\n-\n-fn enum_chars(start: u8, end: u8) -> ~[char] {\n-    assert!(start < end);\n-    let mut i = start;\n-    let mut r = ~[];\n-    while i <= end { r.push(i as char); i += 1u as u8; }\n-    return r;\n-}\n-\n-fn enum_uints(start: uint, end: uint) -> ~[uint] {\n-    assert!(start < end);\n-    let mut i = start;\n-    let mut r = ~[];\n-    while i <= end { r.push(i); i += 1u; }\n-    return r;\n-}\n-\n-pub fn main() {\n-    let a = 'a' as u8;\n-    let j = 'j' as u8;\n-    let k = 1u;\n-    let l = 10u;\n-    let chars = enum_chars(a, j);\n-    let ints = enum_uints(k, l);\n-\n-    let ps = vec::zip(chars, ints);\n-\n-    assert_eq!(ps.head(), &('a', 1u));\n-    assert_eq!(ps.last(), &(j as char, 10u));\n-}"}]}