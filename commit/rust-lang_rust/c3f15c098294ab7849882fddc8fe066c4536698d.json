{"sha": "c3f15c098294ab7849882fddc8fe066c4536698d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzZjE1YzA5ODI5NGFiNzg0OTg4MmZkZGM4ZmUwNjZjNDUzNjY5OGQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-19T23:27:44Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-20T02:12:34Z"}, "message": "std: Partially demode uv::ll", "tree": {"sha": "2ce8f610b427f578dea2ac4bd476f53326e7842c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ce8f610b427f578dea2ac4bd476f53326e7842c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3f15c098294ab7849882fddc8fe066c4536698d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3f15c098294ab7849882fddc8fe066c4536698d", "html_url": "https://github.com/rust-lang/rust/commit/c3f15c098294ab7849882fddc8fe066c4536698d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3f15c098294ab7849882fddc8fe066c4536698d/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cf496ce97cc466bfa92b7ed7190a759cd9c1c33", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cf496ce97cc466bfa92b7ed7190a759cd9c1c33", "html_url": "https://github.com/rust-lang/rust/commit/6cf496ce97cc466bfa92b7ed7190a759cd9c1c33"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "09cded549770afcd2958981e680226742abf7c74", "filename": "src/libstd/uv_ll.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c3f15c098294ab7849882fddc8fe066c4536698d/src%2Flibstd%2Fuv_ll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3f15c098294ab7849882fddc8fe066c4536698d/src%2Flibstd%2Fuv_ll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fuv_ll.rs?ref=c3f15c098294ab7849882fddc8fe066c4536698d", "patch": "@@ -707,7 +707,7 @@ unsafe fn tcp_init(loop_handle: *libc::c_void, handle: *uv_tcp_t)\n unsafe fn tcp_connect(connect_ptr: *uv_connect_t,\n                       tcp_handle_ptr: *uv_tcp_t,\n                       addr_ptr: *sockaddr_in,\n-                      ++after_connect_cb: *u8)\n+                      after_connect_cb: *u8)\n -> libc::c_int {\n     log(debug, fmt!(\"b4 foreign tcp_connect--addr port: %u cb: %u\",\n                     (*addr_ptr).sin_port as uint, after_connect_cb as uint));\n@@ -718,7 +718,7 @@ unsafe fn tcp_connect(connect_ptr: *uv_connect_t,\n unsafe fn tcp_connect6(connect_ptr: *uv_connect_t,\n                       tcp_handle_ptr: *uv_tcp_t,\n                       addr_ptr: *sockaddr_in6,\n-                      ++after_connect_cb: *u8)\n+                      after_connect_cb: *u8)\n -> libc::c_int {\n     return rustrt::rust_uv_tcp_connect6(connect_ptr, tcp_handle_ptr,\n                                     after_connect_cb, addr_ptr);\n@@ -787,7 +787,7 @@ unsafe fn async_init(loop_handle: *libc::c_void,\n unsafe fn async_send(async_handle: *uv_async_t) {\n     return rustrt::rust_uv_async_send(async_handle);\n }\n-unsafe fn buf_init(++input: *u8, len: uint) -> uv_buf_t {\n+unsafe fn buf_init(input: *u8, len: uint) -> uv_buf_t {\n     let out_buf = { base: ptr::null(), len: 0 as libc::size_t };\n     let out_buf_ptr = ptr::addr_of(out_buf);\n     log(debug, fmt!(\"buf_init - input %u len %u out_buf: %u\",\n@@ -807,14 +807,14 @@ unsafe fn buf_init(++input: *u8, len: uint) -> uv_buf_t {\n     return out_buf;\n     //return result;\n }\n-unsafe fn ip4_addr(ip: ~str, port: int)\n+unsafe fn ip4_addr(ip: &str, port: int)\n -> sockaddr_in {\n     do str::as_c_str(ip) |ip_buf| {\n         rustrt::rust_uv_ip4_addr(ip_buf as *u8,\n                                  port as libc::c_int)\n     }\n }\n-unsafe fn ip6_addr(ip: ~str, port: int)\n+unsafe fn ip6_addr(ip: &str, port: int)\n -> sockaddr_in6 {\n     do str::as_c_str(ip) |ip_buf| {\n         rustrt::rust_uv_ip6_addr(ip_buf as *u8,\n@@ -1020,7 +1020,7 @@ mod test {\n     }\n \n     extern fn on_alloc_cb(handle: *libc::c_void,\n-                         ++suggested_size: libc::size_t)\n+                         suggested_size: libc::size_t)\n         -> uv_buf_t unsafe {\n         log(debug, ~\"on_alloc_cb!\");\n         let char_ptr = malloc_buf_base_of(suggested_size);\n@@ -1108,7 +1108,7 @@ mod test {\n         log(debug, ~\"finishing on_connect_cb\");\n     }\n \n-    fn impl_uv_tcp_request(ip: ~str, port: int, req_str: ~str,\n+    fn impl_uv_tcp_request(ip: &str, port: int, req_str: &str,\n                           client_chan: *comm::Chan<~str>) unsafe {\n         let test_loop = loop_new();\n         let tcp_handle = tcp_t();\n@@ -1353,10 +1353,10 @@ mod test {\n         close(async_handle as *libc::c_void, async_close_cb);\n     }\n \n-    fn impl_uv_tcp_server(server_ip: ~str,\n+    fn impl_uv_tcp_server(server_ip: &str,\n                           server_port: int,\n-                          kill_server_msg: ~str,\n-                          server_resp_msg: ~str,\n+                          +kill_server_msg: ~str,\n+                          +server_resp_msg: ~str,\n                           server_chan: *comm::Chan<~str>,\n                           continue_chan: *comm::Chan<bool>) unsafe {\n         let test_loop = loop_new();"}]}