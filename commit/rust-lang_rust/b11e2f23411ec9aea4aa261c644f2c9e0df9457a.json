{"sha": "b11e2f23411ec9aea4aa261c644f2c9e0df9457a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxMWUyZjIzNDExZWM5YWVhNGFhMjYxYzY0NGYyYzllMGRmOTQ1N2E=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-09T04:02:08Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-09T12:34:21Z"}, "message": "Give precedence to primitives over modules\n\nThis has less surprising behavior when there is a module with the same\nname as a primitive in scope.", "tree": {"sha": "18799078e199427c426b63bb99e64e9129d6f0ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18799078e199427c426b63bb99e64e9129d6f0ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b11e2f23411ec9aea4aa261c644f2c9e0df9457a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b11e2f23411ec9aea4aa261c644f2c9e0df9457a", "html_url": "https://github.com/rust-lang/rust/commit/b11e2f23411ec9aea4aa261c644f2c9e0df9457a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b11e2f23411ec9aea4aa261c644f2c9e0df9457a/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f091baba4fa656adb4c1a57b64aa831002d801d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f091baba4fa656adb4c1a57b64aa831002d801d", "html_url": "https://github.com/rust-lang/rust/commit/3f091baba4fa656adb4c1a57b64aa831002d801d"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "062bd61a7d00279b22ac8a581da9698fbf8e256e", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b11e2f23411ec9aea4aa261c644f2c9e0df9457a/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b11e2f23411ec9aea4aa261c644f2c9e0df9457a/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=b11e2f23411ec9aea4aa261c644f2c9e0df9457a", "patch": "@@ -217,9 +217,11 @@ impl<'a, 'tcx> LinkCollector<'a, 'tcx> {\n                         return Ok((res, Some(path_str.to_owned())));\n                     }\n                     Res::Def(DefKind::Mod, _) => {\n-                        // This resolved to a module, but if we were passed `type@`,\n-                        // we want primitive types to take precedence instead.\n-                        if disambiguator == Some(Disambiguator::Namespace(Namespace::TypeNS)) {\n+                        // This resolved to a module, but we want primitive types to take precedence instead.\n+                        if matches!(\n+                            disambiguator,\n+                            None | Some(Disambiguator::Namespace(Namespace::TypeNS))\n+                        ) {\n                             if let Some(prim) = is_primitive(path_str, ns) {\n                                 if extra_fragment.is_some() {\n                                     return Err(ErrorKind::AnchorFailure(AnchorFailure::Primitive));"}, {"sha": "15ea1232fd6fb826b746ac042e88eaca15aa0caa", "filename": "src/test/rustdoc/intra-link-prim-precedence.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b11e2f23411ec9aea4aa261c644f2c9e0df9457a/src%2Ftest%2Frustdoc%2Fintra-link-prim-precedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b11e2f23411ec9aea4aa261c644f2c9e0df9457a/src%2Ftest%2Frustdoc%2Fintra-link-prim-precedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-link-prim-precedence.rs?ref=b11e2f23411ec9aea4aa261c644f2c9e0df9457a", "patch": "@@ -8,5 +8,10 @@ pub mod char {}\n pub struct MyString;\n \n /// See also [char]\n-// @has intra_link_prim_precedence/struct.MyString2.html '//a/@href' 'intra_link_prim_precedence/char/index.html'\n+// @has intra_link_prim_precedence/struct.MyString2.html '//a/@href' 'https://doc.rust-lang.org/nightly/std/primitive.char.html'\n pub struct MyString2;\n+\n+/// See also [crate::char] and [mod@char]\n+// @has intra_link_prim_precedence/struct.MyString3.html '//*[@href=\"../intra_link_prim_precedence/char/index.html\"]' 'crate::char'\n+// @has - '//*[@href=\"../intra_link_prim_precedence/char/index.html\"]' 'mod@char'\n+pub struct MyString3;"}]}