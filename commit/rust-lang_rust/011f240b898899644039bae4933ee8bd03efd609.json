{"sha": "011f240b898899644039bae4933ee8bd03efd609", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxMWYyNDBiODk4ODk5NjQ0MDM5YmFlNDkzM2VlOGJkMDNlZmQ2MDk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-04-17T15:10:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-04-17T15:10:23Z"}, "message": "Auto merge of #41264 - alexeyzab:41158-fix-docs, r=steveklabnik\n\nFix old docs\n\nFixes #41158", "tree": {"sha": "b7d2b87bad45ec7b7a80b1dd09a57c2e669cb3ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7d2b87bad45ec7b7a80b1dd09a57c2e669cb3ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/011f240b898899644039bae4933ee8bd03efd609", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/011f240b898899644039bae4933ee8bd03efd609", "html_url": "https://github.com/rust-lang/rust/commit/011f240b898899644039bae4933ee8bd03efd609", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/011f240b898899644039bae4933ee8bd03efd609/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5997806a6a4f1e57491bd9f24c7ac07619bf38d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/5997806a6a4f1e57491bd9f24c7ac07619bf38d2", "html_url": "https://github.com/rust-lang/rust/commit/5997806a6a4f1e57491bd9f24c7ac07619bf38d2"}, {"sha": "08a955af68ae350dabb7b66b4981f4503ba74aa3", "url": "https://api.github.com/repos/rust-lang/rust/commits/08a955af68ae350dabb7b66b4981f4503ba74aa3", "html_url": "https://github.com/rust-lang/rust/commit/08a955af68ae350dabb7b66b4981f4503ba74aa3"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "3fbf9f06d99f6fdbb49f3143f5327ff9fb65d35d", "filename": "src/doc/grammar.md", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/011f240b898899644039bae4933ee8bd03efd609/src%2Fdoc%2Fgrammar.md", "raw_url": "https://github.com/rust-lang/rust/raw/011f240b898899644039bae4933ee8bd03efd609/src%2Fdoc%2Fgrammar.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fgrammar.md?ref=011f240b898899644039bae4933ee8bd03efd609", "patch": "@@ -761,8 +761,6 @@ closure_type := [ 'unsafe' ] [ '<' lifetime-list '>' ] '|' arg-list '|'\n                 [ ':' bound-list ] [ '->' type ]\n lifetime-list := lifetime | lifetime ',' lifetime-list\n arg-list := ident ':' type | ident ':' type ',' arg-list\n-bound-list := bound | bound '+' bound-list\n-bound := path | lifetime\n ```\n \n ### Never type\n@@ -780,6 +778,15 @@ never_type : \"!\" ;\n \n **FIXME:** grammar?\n \n+### Type parameter bounds\n+\n+```antlr\n+bound := ty_bound | lt_bound\n+lt_bound := lifetime\n+ty_bound := [?] [ for<lt_param_defs> ] simple_path\n+bound-list := bound | bound '+' bound-list '+' ?\n+```\n+\n ### Self types\n \n **FIXME:** grammar?"}, {"sha": "ab4ac6f1b91ee43ea6fa870d6f78ea26cc218a33", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/011f240b898899644039bae4933ee8bd03efd609/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011f240b898899644039bae4933ee8bd03efd609/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=011f240b898899644039bae4933ee8bd03efd609", "patch": "@@ -4066,7 +4066,7 @@ impl<'a> Parser<'a> {\n         }).emit();\n     }\n \n-    // Parse bounds of a type parameter `BOUND + BOUND + BOUND` without trailing `+`.\n+    // Parse bounds of a type parameter `BOUND + BOUND + BOUND`, possibly with trailing `+`.\n     // BOUND = TY_BOUND | LT_BOUND\n     // LT_BOUND = LIFETIME (e.g. `'a`)\n     // TY_BOUND = [?] [for<LT_PARAM_DEFS>] SIMPLE_PATH (e.g. `?for<'a: 'b> m::Trait<'a>`)\n@@ -4107,7 +4107,7 @@ impl<'a> Parser<'a> {\n         self.parse_ty_param_bounds_common(true)\n     }\n \n-    // Parse bounds of a type parameter `BOUND + BOUND + BOUND` without trailing `+`.\n+    // Parse bounds of a lifetime parameter `BOUND + BOUND + BOUND`, possibly with trailing `+`.\n     // BOUND = LT_BOUND (e.g. `'a`)\n     fn parse_lt_param_bounds(&mut self) -> Vec<Lifetime> {\n         let mut lifetimes = Vec::new();"}]}