{"sha": "48291a9dda821a81957b44034572c0ec62728f35", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4MjkxYTlkZGE4MjFhODE5NTdiNDQwMzQ1NzJjMGVjNjI3MjhmMzU=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-12-24T21:21:26Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-12-24T22:37:58Z"}, "message": "Silence line length warnings\n\nrustfmt tries its best already, we should not fight with it.", "tree": {"sha": "d63d72d23f7358f8a5a5b764dd5ce7f25237aea4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d63d72d23f7358f8a5a5b764dd5ce7f25237aea4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48291a9dda821a81957b44034572c0ec62728f35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48291a9dda821a81957b44034572c0ec62728f35", "html_url": "https://github.com/rust-lang/rust/commit/48291a9dda821a81957b44034572c0ec62728f35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48291a9dda821a81957b44034572c0ec62728f35/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9c1c04e986dbf610be8cbe6a8107f90b4db61ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9c1c04e986dbf610be8cbe6a8107f90b4db61ce", "html_url": "https://github.com/rust-lang/rust/commit/a9c1c04e986dbf610be8cbe6a8107f90b4db61ce"}], "stats": {"total": 65, "additions": 21, "deletions": 44}, "files": [{"sha": "5eab194464520e939c504358b49926b7f776c5be", "filename": "rustfmt.toml", "status": "modified", "additions": 3, "deletions": 41, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/48291a9dda821a81957b44034572c0ec62728f35/rustfmt.toml", "raw_url": "https://github.com/rust-lang/rust/raw/48291a9dda821a81957b44034572c0ec62728f35/rustfmt.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt.toml?ref=48291a9dda821a81957b44034572c0ec62728f35", "patch": "@@ -12,47 +12,6 @@ ignore = [\n \n     # tidy issues (line length, etc.)\n     # to be fixed shortly\n-    \"src/libcore/iter/adapters/mod.rs\",\n-    \"src/libcore/iter/traits/iterator.rs\",\n-    \"src/librustc/hir/lowering.rs\",\n-    \"src/librustc/infer/error_reporting/nice_region_error/outlives_closure.rs\",\n-    \"src/librustc/lint/mod.rs\",\n-    \"src/librustc/middle/resolve_lifetime.rs\",\n-    \"src/librustc/traits/mod.rs\",\n-    \"src/librustc/ty/constness.rs\",\n-    \"src/librustc/ty/context.rs\",\n-    \"src/librustc/ty/wf.rs\",\n-    \"src/librustc_codegen_llvm/back/write.rs\",\n-    \"src/librustc_codegen_llvm/consts.rs\",\n-    \"src/librustc_codegen_llvm/debuginfo/metadata.rs\",\n-    \"src/librustc_codegen_ssa/base.rs\",\n-    \"src/librustc_codegen_ssa/mir/place.rs\",\n-    \"src/librustc_codegen_utils/symbol_names/v0.rs\",\n-    \"src/librustc_errors/emitter.rs\",\n-    \"src/librustc_mir/borrow_check/diagnostics/mutability_errors.rs\",\n-    \"src/librustc_mir/borrow_check/type_check/mod.rs\",\n-    \"src/librustc_mir/build/expr/as_rvalue.rs\",\n-    \"src/librustc_mir/build/matches/mod.rs\",\n-    \"src/librustc_mir/build/mod.rs\",\n-    \"src/librustc_mir/const_eval.rs\",\n-    \"src/librustc_mir/interpret/place.rs\",\n-    \"src/librustc_mir/monomorphize/collector.rs\",\n-    \"src/librustc_passes/ast_validation.rs\",\n-    \"src/librustc_resolve/lib.rs\",\n-    \"src/librustc_resolve/resolve_imports.rs\",\n-    \"src/librustc_typeck/astconv.rs\",\n-    \"src/librustc_typeck/check/_match.rs\",\n-    \"src/librustc_typeck/check/coercion.rs\",\n-    \"src/librustc_typeck/check/method/confirm.rs\",\n-    \"src/librustc_typeck/check/mod.rs\",\n-    \"src/librustc_typeck/check/wfcheck.rs\",\n-    \"src/librustdoc/html/markdown/tests.rs\",\n-    \"src/libstd/sys/sgx/abi/mem.rs\",\n-    \"src/libstd/sys/unix/os.rs\",\n-    \"src/libsyntax_expand/parse/lexer/tests.rs\",\n-    \"src/libsyntax_expand/parse/tests.rs\",\n-    \"src/libsyntax_ext/test.rs\",\n-    \"src/tools/build-manifest/src/main.rs\",\n     \"src/librustc_feature\",\n \n     # do not format submodules\n@@ -71,4 +30,7 @@ ignore = [\n     \"src/tools/rls\",\n     \"src/tools/rust-installer\",\n     \"src/tools/rustfmt\",\n+\n+    # We do not format this file as it is externally sourced and auto-generated.\n+    \"src/libstd/sys/cloudabi/abi/cloudabi.rs\",\n ]"}, {"sha": "b15c29921d2b2b1d7d342f9d6806b1ee27ee1950", "filename": "src/tools/tidy/src/style.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/48291a9dda821a81957b44034572c0ec62728f35/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48291a9dda821a81957b44034572c0ec62728f35/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs?ref=48291a9dda821a81957b44034572c0ec62728f35", "patch": "@@ -2,14 +2,17 @@\n //!\n //! Example checks are:\n //!\n-//! * No lines over 100 characters.\n-//! * No files with over 3000 lines.\n+//! * No lines over 100 characters (in non-Rust files).\n+//! * No files with over 3000 lines (in non-Rust files).\n //! * No tabs.\n //! * No trailing whitespace.\n //! * No CR characters.\n //! * No `TODO` or `XXX` directives.\n //! * No unexplained ` ```ignore ` or ` ```rust,ignore ` doc tests.\n //!\n+//! Note that some of these rules are excluded from Rust files because we enforce rustfmt. It is\n+//! preferable to be formatted rather than tidy-clean.\n+//!\n //! A number of these checks can be opted-out of with various directives of the form:\n //! `// ignore-tidy-CHECK-NAME`.\n \n@@ -142,6 +145,15 @@ pub fn check(path: &Path, bad: &mut bool) {\n             return;\n         }\n \n+        let under_rustfmt = filename.ends_with(\".rs\") &&\n+            // This list should ideally be sourced from rustfmt.toml but we don't want to add a toml\n+            // parser to tidy.\n+            !file.ancestors().any(|a| {\n+                a.ends_with(\"src/test\") ||\n+                    a.ends_with(\"src/libstd/sys/cloudabi\") ||\n+                    a.ends_with(\"src/doc/book\")\n+            });\n+\n         if filename.ends_with(\".md\")\n             && file.parent().unwrap().file_name().unwrap().to_string_lossy() != \"error_codes\"\n         {\n@@ -181,7 +193,10 @@ pub fn check(path: &Path, bad: &mut bool) {\n             let mut err = |msg: &str| {\n                 tidy_error!(bad, \"{}:{}: {}\", file.display(), i + 1, msg);\n             };\n-            if line.chars().count() > max_columns && !long_line_is_ok(max_columns, line) {\n+            if !under_rustfmt\n+                && line.chars().count() > max_columns\n+                && !long_line_is_ok(max_columns, line)\n+            {\n                 suppressible_tidy_err!(\n                     err,\n                     skip_line_length,"}]}