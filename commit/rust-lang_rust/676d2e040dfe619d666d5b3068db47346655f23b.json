{"sha": "676d2e040dfe619d666d5b3068db47346655f23b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3NmQyZTA0MGRmZTYxOWQ2NjZkNWIzMDY4ZGI0NzM0NjY1NWYyM2I=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-10T20:28:41Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-10T20:30:24Z"}, "message": "Sort cargo metadata\n\nSee https://github.com/rust-lang/cargo/issues/8477\n\nWe need this to prevent spurious workspace reloads", "tree": {"sha": "d6cd17e713c766f16db7a5d7ca19a604c9e5e455", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6cd17e713c766f16db7a5d7ca19a604c9e5e455"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/676d2e040dfe619d666d5b3068db47346655f23b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/676d2e040dfe619d666d5b3068db47346655f23b", "html_url": "https://github.com/rust-lang/rust/commit/676d2e040dfe619d666d5b3068db47346655f23b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/676d2e040dfe619d666d5b3068db47346655f23b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be679a02aba985ee458dd8441606bff0595a2ce2", "url": "https://api.github.com/repos/rust-lang/rust/commits/be679a02aba985ee458dd8441606bff0595a2ce2", "html_url": "https://github.com/rust-lang/rust/commit/be679a02aba985ee458dd8441606bff0595a2ce2"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "4182ca156d6b95b485052ac021f63f2f87f5d84e", "filename": "crates/ra_project_model/src/cargo_workspace.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/676d2e040dfe619d666d5b3068db47346655f23b/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d2e040dfe619d666d5b3068db47346655f23b/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs?ref=676d2e040dfe619d666d5b3068db47346655f23b", "patch": "@@ -155,7 +155,7 @@ impl CargoWorkspace {\n         if let Some(target) = cargo_features.target.as_ref() {\n             meta.other_options(vec![String::from(\"--filter-platform\"), target.clone()]);\n         }\n-        let meta = meta.exec().with_context(|| {\n+        let mut meta = meta.exec().with_context(|| {\n             format!(\"Failed to run `cargo metadata --manifest-path {}`\", cargo_toml.display())\n         })?;\n \n@@ -175,6 +175,7 @@ impl CargoWorkspace {\n \n         let ws_members = &meta.workspace_members;\n \n+        meta.packages.sort_by(|a, b| a.id.cmp(&b.id));\n         for meta_pkg in meta.packages {\n             let cargo_metadata::Package { id, edition, name, manifest_path, version, .. } =\n                 meta_pkg;\n@@ -210,7 +211,7 @@ impl CargoWorkspace {\n             }\n         }\n         let resolve = meta.resolve.expect(\"metadata executed with deps\");\n-        for node in resolve.nodes {\n+        for mut node in resolve.nodes {\n             let source = match pkg_by_id.get(&node.id) {\n                 Some(&src) => src,\n                 // FIXME: replace this and a similar branch below with `.unwrap`, once\n@@ -221,6 +222,7 @@ impl CargoWorkspace {\n                     continue;\n                 }\n             };\n+            node.deps.sort_by(|a, b| a.pkg.cmp(&b.pkg));\n             for dep_node in node.deps {\n                 let pkg = match pkg_by_id.get(&dep_node.pkg) {\n                     Some(&pkg) => pkg,"}]}