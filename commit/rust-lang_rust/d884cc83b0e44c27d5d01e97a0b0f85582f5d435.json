{"sha": "d884cc83b0e44c27d5d01e97a0b0f85582f5d435", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4ODRjYzgzYjBlNDRjMjdkNWQwMWU5N2EwYjBmODU1ODJmNWQ0MzU=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2014-06-12T20:11:21Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-13T20:53:35Z"}, "message": "remove unnecessary PaX detection\n\nRust no longer has support for JIT compilation, so it doesn't currently\nrequire a PaX MPROTECT exception. The extended attributes are preferred\nover modifying the binaries so it's not actually going to work on most\nsystems like this anyway.\n\nIf JIT compilation ends up being supported again, it should handle this\nby *always* applying the exception via an extended attribute without\nperforming auto-detection of PaX on the host. The `paxctl` tool is only\nnecessary with the older method involving modifying the ELF binary.", "tree": {"sha": "f06d269245c87ea26a065ad6ee87179088101661", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f06d269245c87ea26a065ad6ee87179088101661"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d884cc83b0e44c27d5d01e97a0b0f85582f5d435", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d884cc83b0e44c27d5d01e97a0b0f85582f5d435", "html_url": "https://github.com/rust-lang/rust/commit/d884cc83b0e44c27d5d01e97a0b0f85582f5d435", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d884cc83b0e44c27d5d01e97a0b0f85582f5d435/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac7b9ddc545b7f62f00bf8f4d490d31ff4b90d1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac7b9ddc545b7f62f00bf8f4d490d31ff4b90d1d", "html_url": "https://github.com/rust-lang/rust/commit/ac7b9ddc545b7f62f00bf8f4d490d31ff4b90d1d"}], "stats": {"total": 56, "additions": 0, "deletions": 56}, "files": [{"sha": "3a306085c77aab3d37838ca6eb0e02e1f550b431", "filename": "configure", "status": "modified", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/d884cc83b0e44c27d5d01e97a0b0f85582f5d435/configure", "raw_url": "https://github.com/rust-lang/rust/raw/d884cc83b0e44c27d5d01e97a0b0f85582f5d435/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=d884cc83b0e44c27d5d01e97a0b0f85582f5d435", "patch": "@@ -416,7 +416,6 @@ opt mingw-cross 0 \"cross-compile for win32 using mingw\"\n opt clang 0 \"prefer clang to gcc for building the runtime\"\n opt ccache 0 \"invoke gcc/clang via ccache to reuse object files between builds\"\n opt local-rust 0 \"use an installed rustc rather than downloading a snapshot\"\n-opt pax-flags 0 \"apply PaX flags to rustc binaries (required for GRSecurity/PaX-patched kernels)\"\n opt inject-std-version 1 \"inject the current compiler version of libstd into programs\"\n opt llvm-static-stdcpp 0 \"statically link to libstdc++ for LLVM\"\n opt rpath 1 \"build rpaths into rustc itself\"\n@@ -518,12 +517,6 @@ then\n     fi\n fi\n \n-if [ \"$CFG_OSTYPE\" = \"unknown-linux-gnu\" ]\n-then\n-    probe CFG_PAXCTL           paxctl /sbin/paxctl\n-    probe CFG_ZCAT             zcat\n-fi\n-\n step_msg \"looking for target specific programs\"\n \n probe CFG_ADB        adb\n@@ -546,51 +539,6 @@ then\n     fi\n fi\n \n-if [ \"$CFG_OSTYPE\" = \"unknown-linux-gnu\" ]\n-then\n-    if [ ! -z \"$CFG_ENABLE_PAX_FLAGS\" -a -z \"$CFG_PAXCTL\" ]\n-    then\n-        err \"enabled PaX markings but no paxctl binary found\"\n-    fi\n-\n-    if [ -z \"$CFG_DISABLE_PAX_FLAGS\" ]\n-    then\n-        # GRSecurity/PaX detection. This can be very flaky.\n-        GRSEC_DETECTED=\n-\n-        # /dev/grsec only exists if CONFIG_GRKERNSEC_NO_RBAC is not set.\n-        # /proc/sys/kernel/grsecurity is not available if \u00c7ONFIG_GRKERNSEC_SYSCTL is not set.\n-        if [ -e /dev/grsec -o -d /proc/sys/kernel/grsecurity ]\n-        then\n-            GRSEC_DETECTED=1\n-        # /proc/config.gz is normally only available to root, and only if CONFIG_IKCONFIG_PROC has been set.\n-        elif [ -r /proc/config.gz -a ! -z \"$CFG_ZCAT\" ]\n-        then\n-            if \"$CFG_ZCAT\" /proc/config.gz | grep --quiet \"CONFIG_GRKERNSEC=y\"\n-            then\n-                GRSEC_DETECTED=1\n-            fi\n-        # Flaky.\n-        elif grep --quiet grsec /proc/version\n-        then\n-            GRSEC_DETECTED=1\n-        fi\n-\n-        if [ ! -z \"$GRSEC_DETECTED\" ]\n-        then\n-            step_msg \"GRSecurity: yes\"\n-            if [ ! -z \"$CFG_PAXCTL\" ]\n-            then\n-                CFG_ENABLE_PAX_FLAGS=1\n-            else\n-                warn \"GRSecurity kernel detected but no paxctl binary found: not setting CFG_ENABLE_PAX_FLAGS\"\n-            fi\n-        else\n-            step_msg \"GRSecurity: no\"\n-        fi\n-    fi\n-fi\n-\n BIN_SUF=\n if [ \"$CFG_OSTYPE\" = \"pc-mingw32\" ] || [ \"$CFG_OSTYPE\" = \"w64-mingw32\" ]\n then"}, {"sha": "972cfecea718aa87de4a9cb1639d4c3a26ba235e", "filename": "mk/stage0.mk", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d884cc83b0e44c27d5d01e97a0b0f85582f5d435/mk%2Fstage0.mk", "raw_url": "https://github.com/rust-lang/rust/raw/d884cc83b0e44c27d5d01e97a0b0f85582f5d435/mk%2Fstage0.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fstage0.mk?ref=d884cc83b0e44c27d5d01e97a0b0f85582f5d435", "patch": "@@ -18,10 +18,6 @@ ifdef CFG_ENABLE_LOCAL_RUST\n \t$(Q)$(S)src/etc/local_stage0.sh $(CFG_BUILD) $(CFG_LOCAL_RUST_ROOT) rustlib\n else\n \t$(Q)$(CFG_PYTHON) $(S)src/etc/get-snapshot.py $(CFG_BUILD) $(SNAPSHOT_FILE)\n-ifdef CFG_ENABLE_PAX_FLAGS\n-\t@$(call E, apply PaX flags: $@)\n-\t@\"$(CFG_PAXCTL)\" -cm \"$@\"\n-endif\n endif\n \t$(Q)touch $@\n "}]}