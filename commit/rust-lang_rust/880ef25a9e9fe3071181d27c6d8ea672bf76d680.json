{"sha": "880ef25a9e9fe3071181d27c6d8ea672bf76d680", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4MGVmMjVhOWU5ZmUzMDcxMTgxZDI3YzZkOGVhNjcyYmY3NmQ2ODA=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-05-07T10:09:10Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-05-07T11:45:29Z"}, "message": "Allow targeting a specific function with analysis-stats\n\nThis can be useful for debugging.", "tree": {"sha": "345036658dbb81fe3c1796a67a519617ae6e0218", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/345036658dbb81fe3c1796a67a519617ae6e0218"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/880ef25a9e9fe3071181d27c6d8ea672bf76d680", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/880ef25a9e9fe3071181d27c6d8ea672bf76d680", "html_url": "https://github.com/rust-lang/rust/commit/880ef25a9e9fe3071181d27c6d8ea672bf76d680", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/880ef25a9e9fe3071181d27c6d8ea672bf76d680/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4083caa233b03a390aca87e96e5bd290961df04c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4083caa233b03a390aca87e96e5bd290961df04c", "html_url": "https://github.com/rust-lang/rust/commit/4083caa233b03a390aca87e96e5bd290961df04c"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "86ee0cb6311f319b7f62a1ae390c634513d5c9c9", "filename": "crates/ra_cli/src/analysis_stats.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/880ef25a9e9fe3071181d27c6d8ea672bf76d680/crates%2Fra_cli%2Fsrc%2Fanalysis_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/880ef25a9e9fe3071181d27c6d8ea672bf76d680/crates%2Fra_cli%2Fsrc%2Fanalysis_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2Fsrc%2Fanalysis_stats.rs?ref=880ef25a9e9fe3071181d27c6d8ea672bf76d680", "patch": "@@ -7,7 +7,7 @@ use ra_syntax::AstNode;\n \n use crate::Result;\n \n-pub fn run(verbose: bool) -> Result<()> {\n+pub fn run(verbose: bool, only: Option<&str>) -> Result<()> {\n     let db_load_time = Instant::now();\n     let (db, roots) = BatchDatabase::load_cargo(\".\")?;\n     println!(\"Database loaded, {} roots, {:?}\", roots.len(), db_load_time.elapsed());\n@@ -57,14 +57,19 @@ pub fn run(verbose: bool) -> Result<()> {\n     let mut num_exprs_unknown = 0;\n     let mut num_exprs_partially_unknown = 0;\n     for f in funcs {\n+        let name = f.name(&db);\n         if verbose {\n             let (file_id, source) = f.source(&db);\n             let original_file = file_id.original_file(&db);\n             let path = db.file_relative_path(original_file);\n             let syntax_range = source.syntax().range();\n-            let name = f.name(&db);\n             println!(\"{} ({:?} {})\", name, path, syntax_range);\n         }\n+        if let Some(only_name) = only {\n+            if name.to_string() != only_name {\n+                continue;\n+            }\n+        }\n         let body = f.body(&db);\n         let inference_result = f.infer(&db);\n         for (expr_id, _) in body.exprs() {"}, {"sha": "11790d2e71f36b5031f443a7d470298cdac8e852", "filename": "crates/ra_cli/src/main.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/880ef25a9e9fe3071181d27c6d8ea672bf76d680/crates%2Fra_cli%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/880ef25a9e9fe3071181d27c6d8ea672bf76d680/crates%2Fra_cli%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2Fsrc%2Fmain.rs?ref=880ef25a9e9fe3071181d27c6d8ea672bf76d680", "patch": "@@ -23,7 +23,9 @@ fn main() -> Result<()> {\n         .subcommand(SubCommand::with_name(\"parse\").arg(Arg::with_name(\"no-dump\").long(\"--no-dump\")))\n         .subcommand(SubCommand::with_name(\"symbols\"))\n         .subcommand(\n-            SubCommand::with_name(\"analysis-stats\").arg(Arg::with_name(\"verbose\").short(\"v\")),\n+            SubCommand::with_name(\"analysis-stats\")\n+                .arg(Arg::with_name(\"verbose\").short(\"v\"))\n+                .arg(Arg::with_name(\"only\").short(\"o\").takes_value(true)),\n         )\n         .get_matches();\n     match matches.subcommand() {\n@@ -51,7 +53,8 @@ fn main() -> Result<()> {\n         }\n         (\"analysis-stats\", Some(matches)) => {\n             let verbose = matches.is_present(\"verbose\");\n-            analysis_stats::run(verbose)?;\n+            let only = matches.value_of(\"only\");\n+            analysis_stats::run(verbose, only)?;\n         }\n         _ => unreachable!(),\n     }"}]}