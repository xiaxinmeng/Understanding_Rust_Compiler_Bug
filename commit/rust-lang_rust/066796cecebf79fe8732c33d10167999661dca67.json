{"sha": "066796cecebf79fe8732c33d10167999661dca67", "node_id": "C_kwDOAAsO6NoAKDA2Njc5NmNlY2ViZjc5ZmU4NzMyYzMzZDEwMTY3OTk5NjYxZGNhNjc", "commit": {"author": {"name": "nidnogg", "email": "henriquevt98@gmail.com", "date": "2022-08-22T15:32:42Z"}, "committer": {"name": "nidnogg", "email": "henriquevt98@gmail.com", "date": "2022-08-22T15:32:42Z"}, "message": "Addressing tidy check fail", "tree": {"sha": "e2393215c0c99a3026aa82f9b1fc66e7a4d37861", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2393215c0c99a3026aa82f9b1fc66e7a4d37861"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/066796cecebf79fe8732c33d10167999661dca67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/066796cecebf79fe8732c33d10167999661dca67", "html_url": "https://github.com/rust-lang/rust/commit/066796cecebf79fe8732c33d10167999661dca67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/066796cecebf79fe8732c33d10167999661dca67/comments", "author": {"login": "nidnogg", "id": 17261185, "node_id": "MDQ6VXNlcjE3MjYxMTg1", "avatar_url": "https://avatars.githubusercontent.com/u/17261185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nidnogg", "html_url": "https://github.com/nidnogg", "followers_url": "https://api.github.com/users/nidnogg/followers", "following_url": "https://api.github.com/users/nidnogg/following{/other_user}", "gists_url": "https://api.github.com/users/nidnogg/gists{/gist_id}", "starred_url": "https://api.github.com/users/nidnogg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nidnogg/subscriptions", "organizations_url": "https://api.github.com/users/nidnogg/orgs", "repos_url": "https://api.github.com/users/nidnogg/repos", "events_url": "https://api.github.com/users/nidnogg/events{/privacy}", "received_events_url": "https://api.github.com/users/nidnogg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nidnogg", "id": 17261185, "node_id": "MDQ6VXNlcjE3MjYxMTg1", "avatar_url": "https://avatars.githubusercontent.com/u/17261185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nidnogg", "html_url": "https://github.com/nidnogg", "followers_url": "https://api.github.com/users/nidnogg/followers", "following_url": "https://api.github.com/users/nidnogg/following{/other_user}", "gists_url": "https://api.github.com/users/nidnogg/gists{/gist_id}", "starred_url": "https://api.github.com/users/nidnogg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nidnogg/subscriptions", "organizations_url": "https://api.github.com/users/nidnogg/orgs", "repos_url": "https://api.github.com/users/nidnogg/repos", "events_url": "https://api.github.com/users/nidnogg/events{/privacy}", "received_events_url": "https://api.github.com/users/nidnogg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "649749c7b040580abc6b0654584e3a580b1870d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/649749c7b040580abc6b0654584e3a580b1870d7", "html_url": "https://github.com/rust-lang/rust/commit/649749c7b040580abc6b0654584e3a580b1870d7"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "d9c4ae4d53f91d3946fce0f16368aaf45f5f86d0", "filename": "compiler/rustc_const_eval/src/const_eval/mod.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/066796cecebf79fe8732c33d10167999661dca67/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/066796cecebf79fe8732c33d10167999661dca67/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fmod.rs?ref=066796cecebf79fe8732c33d10167999661dca67", "patch": "@@ -75,9 +75,14 @@ pub(crate) fn eval_to_valtree<'tcx>(\n             let global_const_id = cid.display(tcx);\n             match err {\n                 ValTreeCreationError::NodesOverflow => {\n-                    let msg = format!(\"maximum number of nodes exceeded in constant {}\", &global_const_id);\n+                    let msg = format!(\n+                        \"maximum number of nodes exceeded in constant {}\",\n+                        &global_const_id\n+                    );\n                     let mut diag = match tcx.hir().span_if_local(did) {\n-                        Some(span) => tcx.sess.create_err(MaxNumNodesInConstErr { span, global_const_id }),\n+                        Some(span) => {\n+                            tcx.sess.create_err(MaxNumNodesInConstErr { span, global_const_id })\n+                        }\n                         None => tcx.sess.struct_err(&msg),\n                     };\n                     diag.emit();"}]}