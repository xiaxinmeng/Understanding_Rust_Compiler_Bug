{"sha": "b2523afae4fd1896844e960db2e192206f71e903", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyNTIzYWZhZTRmZDE4OTY4NDRlOTYwZGIyZTE5MjIwNmY3MWU5MDM=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-11-29T10:12:19Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-11-29T10:12:19Z"}, "message": "Use infer_ctxt", "tree": {"sha": "029dd6f1e0410ecb833cb642d6ef81528e39ada9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/029dd6f1e0410ecb833cb642d6ef81528e39ada9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2523afae4fd1896844e960db2e192206f71e903", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl3g7wMACgkQaTCGhp1Q\nZjchSQ/+MAdI7CxMF6WC8dHauzT39jFGPrsZe8rEDEwdFejjrMO8y8EnO4GFQrOq\nj1sfdb6/LFMPzrYbZA/5e4k3Q9UC3Rt3e/0reMWfJQOx1k/43D5afEWb7/inZ90o\n2gLFLyB4mSyr87PZZ8cX87U6EZG6c9KcYZJiirRZGsZKgazWualfo9qi0JQ5Nepg\nm9A+lNTN0bI4+ixVcFcPhRR1Pc7iZHWjam++kLgfYxSYTOgVR4Hj2Tb+ryXSAt5r\nL7io3ibx0tDSdQ3iHEm7hLp7H2KAYOKcmklaeur+s9hj9LaxO17BLwbmkxv8mg5N\neXE7Mz6W4mWDVZOfTP53GMV4z2MuMVZgMbFLbMfBXed+cKDBORpBmT/ewwK+qLY3\ntr6EY6G6bJTTfH3KIUS1DTQQ9woOGecGNVzILEZJEEG+3pWzK5Nha8ZnsV2PP/kw\naFdgZmQYOLLPUaQuHGnQk0Wuto66JqufAqiv26SJyBK2bjouOdXipllm+qWCkpYq\nG58+dI683fYZEsj0LuPZejAP0wUvHyRld93nczn1QZIIEsOT/14cK+SKjAmpUBsy\nnSUMVraOP7g3k7rRfAlxEu10rgPe9nkQtdHtUAvA8uBap7qBV906KLZCDzcITF8S\n8KeWNInfqy1A+Nlht0oOyEVdf1pe+usxH1aA7KCVp+1nCffgE+M=\n=WET8\n-----END PGP SIGNATURE-----", "payload": "tree 029dd6f1e0410ecb833cb642d6ef81528e39ada9\nparent 45842e5131b763102abb20a6ba845d5acafdf8a5\nauthor flip1995 <hello@philkrones.com> 1575022339 +0100\ncommitter flip1995 <hello@philkrones.com> 1575022339 +0100\n\nUse infer_ctxt\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2523afae4fd1896844e960db2e192206f71e903", "html_url": "https://github.com/rust-lang/rust/commit/b2523afae4fd1896844e960db2e192206f71e903", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2523afae4fd1896844e960db2e192206f71e903/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45842e5131b763102abb20a6ba845d5acafdf8a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/45842e5131b763102abb20a6ba845d5acafdf8a5", "html_url": "https://github.com/rust-lang/rust/commit/45842e5131b763102abb20a6ba845d5acafdf8a5"}], "stats": {"total": 40, "additions": 16, "deletions": 24}, "files": [{"sha": "de9e5cd4e869e02dc44ddefab1d6dfead603160d", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b2523afae4fd1896844e960db2e192206f71e903/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2523afae4fd1896844e960db2e192206f71e903/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=b2523afae4fd1896844e960db2e192206f71e903", "patch": "@@ -1,11 +1,11 @@\n use rustc::hir::intravisit as visit;\n use rustc::hir::{self, *};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n-use rustc_typeck::expr_use_visitor::*;\n use rustc::ty::layout::LayoutOf;\n use rustc::ty::{self, Ty};\n use rustc::util::nodemap::HirIdSet;\n use rustc::{declare_tool_lint, impl_lint_pass};\n+use rustc_typeck::expr_use_visitor::*;\n use syntax::source_map::Span;\n \n use crate::utils::span_lint;\n@@ -76,7 +76,9 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for BoxedLocal {\n         };\n \n         let fn_def_id = cx.tcx.hir().local_def_id(hir_id);\n-        ExprUseVisitor::new(&mut v, cx.tcx, fn_def_id, cx.param_env, cx.tables).consume_body(body);\n+        cx.tcx.infer_ctxt().enter(|infcx| {\n+            ExprUseVisitor::new(&mut v, &infcx, fn_def_id, cx.param_env, cx.tables).consume_body(body);\n+        });\n \n         for node in v.set {\n             span_lint("}, {"sha": "4212f9c1e64f07f9bcee7f7ed7157ab42a465d0d", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b2523afae4fd1896844e960db2e192206f71e903/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2523afae4fd1896844e960db2e192206f71e903/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=b2523afae4fd1896844e960db2e192206f71e903", "patch": "@@ -12,11 +12,11 @@ use rustc::{declare_lint_pass, declare_tool_lint};\n use crate::consts::{constant, Constant};\n use crate::utils::usage::mutated_variables;\n use crate::utils::{is_type_diagnostic_item, qpath_res, sext, sugg};\n-use rustc_typeck::expr_use_visitor::*;\n use rustc::ty::subst::Subst;\n use rustc::ty::{self, Ty};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::Applicability;\n+use rustc_typeck::expr_use_visitor::*;\n use std::iter::{once, Iterator};\n use std::mem;\n use syntax::ast;\n@@ -1678,14 +1678,9 @@ fn check_for_mutation(\n         span_high: None,\n     };\n     let def_id = def_id::DefId::local(body.hir_id.owner);\n-    ExprUseVisitor::new(\n-        &mut delegate,\n-        cx.tcx,\n-        def_id,\n-        cx.param_env,\n-        cx.tables,\n-    )\n-    .walk_expr(body);\n+    cx.tcx.infer_ctxt().enter(|infcx| {\n+        ExprUseVisitor::new(&mut delegate, &infcx, def_id, cx.param_env, cx.tables).walk_expr(body);\n+    });\n     delegate.mutation_span()\n }\n "}, {"sha": "05894de5cb708bfe00d6e011e615def80089c3fb", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b2523afae4fd1896844e960db2e192206f71e903/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2523afae4fd1896844e960db2e192206f71e903/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=b2523afae4fd1896844e960db2e192206f71e903", "patch": "@@ -8,13 +8,13 @@ use matches::matches;\n use rustc::hir::intravisit::FnKind;\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n-use rustc_typeck::expr_use_visitor as euv;\n use rustc::traits;\n use rustc::ty::{self, RegionKind, TypeFoldable};\n use rustc::{declare_lint_pass, declare_tool_lint};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::Applicability;\n use rustc_target::spec::abi::Abi;\n+use rustc_typeck::expr_use_visitor as euv;\n use std::borrow::Cow;\n use syntax::ast::Attribute;\n use syntax::errors::DiagnosticBuilder;\n@@ -134,8 +134,9 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessPassByValue {\n             ..\n         } = {\n             let mut ctx = MovedVariablesCtxt::default();\n-            euv::ExprUseVisitor::new(&mut ctx, cx.tcx, fn_def_id, cx.param_env, cx.tables)\n-                .consume_body(body);\n+            cx.tcx.infer_ctxt().enter(|infcx| {\n+                euv::ExprUseVisitor::new(&mut ctx, &infcx, fn_def_id, cx.param_env, cx.tables).consume_body(body);\n+            });\n             ctx\n         };\n \n@@ -342,4 +343,3 @@ impl<'tcx> euv::Delegate<'tcx> for MovedVariablesCtxt {\n \n     fn mutate(&mut self, _: &euv::Place<'tcx>) {}\n }\n-"}, {"sha": "089ebafbb7fd8ec8a04cb7dee43d4afa35cfb307", "filename": "clippy_lints/src/utils/usage.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b2523afae4fd1896844e960db2e192206f71e903/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2523afae4fd1896844e960db2e192206f71e903/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fusage.rs?ref=b2523afae4fd1896844e960db2e192206f71e903", "patch": "@@ -1,9 +1,9 @@\n use rustc::hir::def::Res;\n use rustc::hir::*;\n use rustc::lint::LateContext;\n-use rustc_typeck::expr_use_visitor::*;\n use rustc::ty;\n use rustc_data_structures::fx::FxHashSet;\n+use rustc_typeck::expr_use_visitor::*;\n \n /// Returns a set of mutated local variable IDs, or `None` if mutations could not be determined.\n pub fn mutated_variables<'a, 'tcx>(expr: &'tcx Expr, cx: &'a LateContext<'a, 'tcx>) -> Option<FxHashSet<HirId>> {\n@@ -12,14 +12,9 @@ pub fn mutated_variables<'a, 'tcx>(expr: &'tcx Expr, cx: &'a LateContext<'a, 'tc\n         skip: false,\n     };\n     let def_id = def_id::DefId::local(expr.hir_id.owner);\n-    ExprUseVisitor::new(\n-        &mut delegate,\n-        cx.tcx,\n-        def_id,\n-        cx.param_env,\n-        cx.tables,\n-    )\n-    .walk_expr(expr);\n+    cx.tcx.infer_ctxt().enter(|infcx| {\n+        ExprUseVisitor::new(&mut delegate, &infcx, def_id, cx.param_env, cx.tables).walk_expr(expr);\n+    });\n \n     if delegate.skip {\n         return None;"}]}