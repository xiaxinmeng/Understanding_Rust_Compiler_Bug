{"sha": "2c482d8d41a7c4424583f2abe62be85b188ddeb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjNDgyZDhkNDFhN2M0NDI0NTgzZjJhYmU2MmJlODViMTg4ZGRlYjg=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-10-12T12:16:06Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-10-13T08:09:40Z"}, "message": "rustc/driver: use Cow<str> where applicable", "tree": {"sha": "8124a7161fdf01aa3c67aee2b93bee790188caa0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8124a7161fdf01aa3c67aee2b93bee790188caa0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c482d8d41a7c4424583f2abe62be85b188ddeb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c482d8d41a7c4424583f2abe62be85b188ddeb8", "html_url": "https://github.com/rust-lang/rust/commit/2c482d8d41a7c4424583f2abe62be85b188ddeb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c482d8d41a7c4424583f2abe62be85b188ddeb8/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a1de086e4e5d46259c46128d17848cabbe7b8de", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a1de086e4e5d46259c46128d17848cabbe7b8de", "html_url": "https://github.com/rust-lang/rust/commit/9a1de086e4e5d46259c46128d17848cabbe7b8de"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "a01e2d4f845827a56bd156755603bf7ddae21ea0", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2c482d8d41a7c4424583f2abe62be85b188ddeb8/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c482d8d41a7c4424583f2abe62be85b188ddeb8/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=2c482d8d41a7c4424583f2abe62be85b188ddeb8", "patch": "@@ -90,6 +90,7 @@ use rustc_codegen_utils::codegen_backend::CodegenBackend;\n use serialize::json::ToJson;\n \n use std::any::Any;\n+use std::borrow::Cow;\n use std::cmp::max;\n use std::default::Default;\n use std::env::consts::{DLL_PREFIX, DLL_SUFFIX};\n@@ -1678,25 +1679,25 @@ pub fn monitor<F: FnOnce() + Send + 'static>(f: F) -> Result<(), CompilationFail\n                              errors::Level::Bug);\n             }\n \n-            let mut xs = vec![\n-                \"the compiler unexpectedly panicked. this is a bug.\".to_string(),\n-                format!(\"we would appreciate a bug report: {}\", BUG_REPORT_URL),\n+            let mut xs: Vec<Cow<'static, str>> = vec![\n+                \"the compiler unexpectedly panicked. this is a bug.\".into(),\n+                format!(\"we would appreciate a bug report: {}\", BUG_REPORT_URL).into(),\n                 format!(\"rustc {} running on {}\",\n                         option_env!(\"CFG_VERSION\").unwrap_or(\"unknown_version\"),\n-                        config::host_triple()),\n+                        config::host_triple()).into(),\n             ];\n \n             if let Some((flags, excluded_cargo_defaults)) = extra_compiler_flags() {\n-                xs.push(format!(\"compiler flags: {}\", flags.join(\" \")));\n+                xs.push(format!(\"compiler flags: {}\", flags.join(\" \")).into());\n \n                 if excluded_cargo_defaults {\n-                    xs.push(\"some of the compiler flags provided by cargo are hidden\".to_string());\n+                    xs.push(\"some of the compiler flags provided by cargo are hidden\".into());\n                 }\n             }\n \n             for note in &xs {\n                 handler.emit(&MultiSpan::new(),\n-                             &note,\n+                             note,\n                              errors::Level::Note);\n             }\n "}]}