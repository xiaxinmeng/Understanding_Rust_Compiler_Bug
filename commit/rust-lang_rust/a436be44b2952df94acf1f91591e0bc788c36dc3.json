{"sha": "a436be44b2952df94acf1f91591e0bc788c36dc3", "node_id": "C_kwDOAAsO6NoAKGE0MzZiZTQ0YjI5NTJkZjk0YWNmMWY5MTU5MWUwYmM3ODhjMzZkYzM", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2022-07-23T20:16:59Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2022-07-23T20:16:59Z"}, "message": "feat: don't highlight the whole fn on return-type mismatch", "tree": {"sha": "3f8f22783ad51b3786279bd0f2928094b1b3fe5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f8f22783ad51b3786279bd0f2928094b1b3fe5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a436be44b2952df94acf1f91591e0bc788c36dc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a436be44b2952df94acf1f91591e0bc788c36dc3", "html_url": "https://github.com/rust-lang/rust/commit/a436be44b2952df94acf1f91591e0bc788c36dc3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a436be44b2952df94acf1f91591e0bc788c36dc3/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2be00623e4fb1edc6a8a13f1d1c55b3ea093a732", "url": "https://api.github.com/repos/rust-lang/rust/commits/2be00623e4fb1edc6a8a13f1d1c55b3ea093a732", "html_url": "https://github.com/rust-lang/rust/commit/2be00623e4fb1edc6a8a13f1d1c55b3ea093a732"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "1b353ce56ba5c71c1e9ecd7e223369397f21e2b6", "filename": "crates/ide-diagnostics/src/handlers/type_mismatch.rs", "status": "modified", "additions": 34, "deletions": 3, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/a436be44b2952df94acf1f91591e0bc788c36dc3/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Ftype_mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a436be44b2952df94acf1f91591e0bc788c36dc3/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Ftype_mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Ftype_mismatch.rs?ref=a436be44b2952df94acf1f91591e0bc788c36dc3", "patch": "@@ -1,7 +1,12 @@\n use hir::{db::AstDatabase, HirDisplay, Type};\n-use ide_db::{famous_defs::FamousDefs, source_change::SourceChange};\n+use ide_db::{\n+    base_db::{FileRange, SourceDatabase},\n+    famous_defs::FamousDefs,\n+    source_change::SourceChange,\n+};\n use syntax::{\n-    ast::{BlockExpr, ExprStmt},\n+    algo::find_node_at_range,\n+    ast::{self, BlockExpr, ExprStmt},\n     AstNode,\n };\n use text_edit::TextEdit;\n@@ -13,14 +18,26 @@ use crate::{fix, Assist, Diagnostic, DiagnosticsContext};\n // This diagnostic is triggered when the type of an expression does not match\n // the expected type.\n pub(crate) fn type_mismatch(ctx: &DiagnosticsContext<'_>, d: &hir::TypeMismatch) -> Diagnostic {\n+    let FileRange { file_id, range } =\n+        ctx.sema.diagnostics_display_range(d.expr.clone().map(|it| it.into()));\n+\n+    let source_file = ctx.sema.db.parse(file_id);\n+    let block = find_node_at_range::<ast::BlockExpr>(&source_file.syntax_node(), range)\n+        .filter(|it| it.syntax().text_range() == range);\n+    let display_range = block\n+        .and_then(|it| it.stmt_list())\n+        .and_then(|it| it.r_curly_token())\n+        .map(|it| it.text_range())\n+        .unwrap_or(range);\n+\n     let mut diag = Diagnostic::new(\n         \"type-mismatch\",\n         format!(\n             \"expected {}, found {}\",\n             d.expected.display(ctx.sema.db),\n             d.actual.display(ctx.sema.db)\n         ),\n-        ctx.sema.diagnostics_display_range(d.expr.clone().map(|it| it.into())).range,\n+        display_range,\n     )\n     .with_fixes(fixes(ctx, d));\n     if diag.fixes.is_none() {\n@@ -545,4 +562,18 @@ fn test() -> String {\n             \"#,\n         );\n     }\n+\n+    #[test]\n+    fn type_mismatch_on_block() {\n+        check_diagnostics(\n+            r#\"\n+fn f() -> i32 {\n+    let x = 1;\n+    let y = 2;\n+    let _ = x + y;\n+  }\n+//^ error: expected i32, found ()\n+\"#,\n+        );\n+    }\n }"}]}