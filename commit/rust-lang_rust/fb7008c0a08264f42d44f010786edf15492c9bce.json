{"sha": "fb7008c0a08264f42d44f010786edf15492c9bce", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiNzAwOGMwYTA4MjY0ZjQyZDQ0ZjAxMDc4NmVkZjE1NDkyYzliY2U=", "commit": {"author": {"name": "mitaa", "email": "mitaa.ceb@gmail.com", "date": "2015-12-05T22:09:20Z"}, "committer": {"name": "mitaa", "email": "mitaa.ceb@gmail.com", "date": "2015-12-05T22:11:07Z"}, "message": "Add tests", "tree": {"sha": "d7b2a3fcb6a44aa6dd3a9a8017ea5ba073b50f54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7b2a3fcb6a44aa6dd3a9a8017ea5ba073b50f54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb7008c0a08264f42d44f010786edf15492c9bce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb7008c0a08264f42d44f010786edf15492c9bce", "html_url": "https://github.com/rust-lang/rust/commit/fb7008c0a08264f42d44f010786edf15492c9bce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb7008c0a08264f42d44f010786edf15492c9bce/comments", "author": {"login": "mitaa", "id": 6785936, "node_id": "MDQ6VXNlcjY3ODU5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6785936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitaa", "html_url": "https://github.com/mitaa", "followers_url": "https://api.github.com/users/mitaa/followers", "following_url": "https://api.github.com/users/mitaa/following{/other_user}", "gists_url": "https://api.github.com/users/mitaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitaa/subscriptions", "organizations_url": "https://api.github.com/users/mitaa/orgs", "repos_url": "https://api.github.com/users/mitaa/repos", "events_url": "https://api.github.com/users/mitaa/events{/privacy}", "received_events_url": "https://api.github.com/users/mitaa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mitaa", "id": 6785936, "node_id": "MDQ6VXNlcjY3ODU5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6785936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitaa", "html_url": "https://github.com/mitaa", "followers_url": "https://api.github.com/users/mitaa/followers", "following_url": "https://api.github.com/users/mitaa/following{/other_user}", "gists_url": "https://api.github.com/users/mitaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitaa/subscriptions", "organizations_url": "https://api.github.com/users/mitaa/orgs", "repos_url": "https://api.github.com/users/mitaa/repos", "events_url": "https://api.github.com/users/mitaa/events{/privacy}", "received_events_url": "https://api.github.com/users/mitaa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72d5675fef11c85b481b0b139c59fb27e1d327b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/72d5675fef11c85b481b0b139c59fb27e1d327b6", "html_url": "https://github.com/rust-lang/rust/commit/72d5675fef11c85b481b0b139c59fb27e1d327b6"}], "stats": {"total": 129, "additions": 129, "deletions": 0}, "files": [{"sha": "a5436886a7e8c62173070057d3e489646f889c11", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/fb7008c0a08264f42d44f010786edf15492c9bce/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb7008c0a08264f42d44f010786edf15492c9bce/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=fb7008c0a08264f42d44f010786edf15492c9bce", "patch": "@@ -585,6 +585,7 @@ mod tests {\n     fn issue_17736() {\n         let markdown = \"# title\";\n         format!(\"{}\", Markdown(markdown));\n+        reset_ids();\n     }\n \n     #[test]\n@@ -609,6 +610,32 @@ mod tests {\n           <em><code>baz</code></em> \u2764 #qux</a></h4>\");\n     }\n \n+    #[test]\n+    fn test_header_ids_multiple_blocks() {\n+        fn t(input: &str, expect: &str) {\n+            let output = format!(\"{}\", Markdown(input));\n+            assert_eq!(output, expect);\n+        }\n+\n+        let test = || {\n+            t(\"# Example\", \"\\n<h1 id='example' class='section-header'>\\\n+              <a href='#example'>Example</a></h1>\");\n+            t(\"# Panics\", \"\\n<h1 id='panics' class='section-header'>\\\n+              <a href='#panics'>Panics</a></h1>\");\n+            t(\"# Example\", \"\\n<h1 id='example-1' class='section-header'>\\\n+              <a href='#example-1'>Example</a></h1>\");\n+            t(\"# Main\", \"\\n<h1 id='main-1' class='section-header'>\\\n+              <a href='#main-1'>Main</a></h1>\");\n+            t(\"# Example\", \"\\n<h1 id='example-2' class='section-header'>\\\n+              <a href='#example-2'>Example</a></h1>\");\n+            t(\"# Panics\", \"\\n<h1 id='panics-1' class='section-header'>\\\n+              <a href='#panics-1'>Panics</a></h1>\");\n+        };\n+        test();\n+        reset_ids();\n+        test();\n+    }\n+\n     #[test]\n     fn test_plain_summary_line() {\n         fn t(input: &str, expect: &str) {"}, {"sha": "58d7a36aac8a6ef992c3ed1fb2b4ed2de029775b", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fb7008c0a08264f42d44f010786edf15492c9bce/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb7008c0a08264f42d44f010786edf15492c9bce/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=fb7008c0a08264f42d44f010786edf15492c9bce", "patch": "@@ -2708,3 +2708,22 @@ fn get_index_type_name(clean_type: &clean::Type) -> Option<String> {\n pub fn cache() -> Arc<Cache> {\n     CACHE_KEY.with(|c| c.borrow().clone())\n }\n+\n+#[cfg(test)]\n+#[test]\n+fn test_unique_id() {\n+    let input = [\"foo\", \"examples\", \"examples\", \"method.into_iter\",\"examples\",\n+                 \"method.into_iter\", \"foo\", \"main\", \"search\", \"methods\",\n+                 \"examples\", \"method.into_iter\", \"assoc_type.Item\", \"assoc_type.Item\"];\n+    let expected = [\"foo\", \"examples\", \"examples-1\", \"method.into_iter\", \"examples-2\",\n+                    \"method.into_iter-1\", \"foo-1\", \"main-1\", \"search-1\", \"methods-1\",\n+                    \"examples-3\", \"method.into_iter-2\", \"assoc_type.Item\", \"assoc_type.Item-1\"];\n+\n+    let test = || {\n+        let actual: Vec<String> = input.iter().map(|s| derive_id(s.to_string())).collect();\n+        assert_eq!(&actual[..], expected);\n+    };\n+    test();\n+    reset_ids();\n+    test();\n+}"}, {"sha": "e4d97828d50a08c860ef7474b1c2577f3974b8e8", "filename": "src/test/rustdoc/issue-25001.rs", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/fb7008c0a08264f42d44f010786edf15492c9bce/src%2Ftest%2Frustdoc%2Fissue-25001.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb7008c0a08264f42d44f010786edf15492c9bce/src%2Ftest%2Frustdoc%2Fissue-25001.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-25001.rs?ref=fb7008c0a08264f42d44f010786edf15492c9bce", "patch": "@@ -0,0 +1,53 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// @has issue_25001/struct.Foo.html\n+pub struct Foo<T>(T);\n+\n+pub trait Bar {\n+    type Item;\n+\n+    fn quux(self);\n+}\n+\n+impl<T> Foo<T> {\n+    // @has - '//*[@id=\"method.pass\"]//code' 'fn pass()'\n+    pub fn pass() {}\n+}\n+impl<T> Foo<T> {\n+    // @has - '//*[@id=\"method.pass-1\"]//code' 'fn pass() -> usize'\n+    pub fn pass() -> usize { 42 }\n+}\n+impl<T> Foo<T> {\n+    // @has - '//*[@id=\"method.pass-2\"]//code' 'fn pass() -> isize'\n+    pub fn pass() -> isize { 42 }\n+}\n+\n+impl<T> Bar for Foo<T> {\n+    // @has - '//*[@id=\"assoc_type.Item\"]//code' 'type Item = T'\n+    type Item=T;\n+\n+    // @has - '//*[@id=\"method.quux\"]//code' 'fn quux(self)'\n+    fn quux(self) {}\n+}\n+impl<'a, T> Bar for &'a Foo<T> {\n+    // @has - '//*[@id=\"assoc_type.Item-1\"]//code' \"type Item = &'a T\"\n+    type Item=&'a T;\n+\n+    // @has - '//*[@id=\"method.quux-1\"]//code' 'fn quux(self)'\n+    fn quux(self) {}\n+}\n+impl<'a, T> Bar for &'a mut Foo<T> {\n+    // @has - '//*[@id=\"assoc_type.Item-2\"]//code' \"type Item = &'a mut T\"\n+    type Item=&'a mut T;\n+\n+    // @has - '//*[@id=\"method.quux-2\"]//code' 'fn quux(self)'\n+    fn quux(self) {}\n+}"}, {"sha": "f296048e30b54d16d564f506ca8ddad3c8eac84e", "filename": "src/test/rustdoc/issue-29449.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/fb7008c0a08264f42d44f010786edf15492c9bce/src%2Ftest%2Frustdoc%2Fissue-29449.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb7008c0a08264f42d44f010786edf15492c9bce/src%2Ftest%2Frustdoc%2Fissue-29449.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-29449.rs?ref=fb7008c0a08264f42d44f010786edf15492c9bce", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// @has issue_29449/struct.Foo.html\n+pub struct Foo;\n+\n+impl Foo {\n+    // @has - '//*[@id=\"examples\"]//a' 'Examples'\n+    // @has - '//*[@id=\"panics\"]//a' 'Panics'\n+    /// # Examples\n+    /// # Panics\n+    pub fn bar() {}\n+\n+    // @has - '//*[@id=\"examples-1\"]//a' 'Examples'\n+    /// # Examples\n+    pub fn bar_1() {}\n+\n+    // @has - '//*[@id=\"examples-2\"]//a' 'Examples'\n+    // @has - '//*[@id=\"panics-1\"]//a' 'Panics'\n+    /// # Examples\n+    /// # Panics\n+    pub fn bar_2() {}\n+}"}]}