{"sha": "a483b5545dad2d36336c1e9a4f5dc991d2c8460b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0ODNiNTU0NWRhZDJkMzYzMzZjMWU5YTRmNWRjOTkxZDJjODQ2MGI=", "commit": {"author": {"name": "GrayJack", "email": "gr41.j4ck@gmail.com", "date": "2020-10-16T10:52:18Z"}, "committer": {"name": "GrayJack", "email": "gr41.j4ck@gmail.com", "date": "2020-10-16T10:52:18Z"}, "message": "Add Callable modifier for variables that implements Fnonce", "tree": {"sha": "4a9a2a515fa205a316f662cfa12a9cd220055875", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a9a2a515fa205a316f662cfa12a9cd220055875"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a483b5545dad2d36336c1e9a4f5dc991d2c8460b", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEcp2lmfLVC4NXZ3mZEsVOBKq5kx4FAl+Je2IACgkQEsVOBKq5\nkx5E9w/+LXfkwnXOBLn/wF5dVHqSsmEK39AhX4lvOU/Du90QBO5PCSNqBBLRvxfk\nK/5sgBQpNG9dtpNS/TDG7ubndY+yurcOxA46xdU8f11sV/f1AB1VOu4MKkdP30JK\nEuKhFbc9cYHUCyDfoSGMP4HG20/3fwRq0kRasMtLT50RA9qbhui1QTUKyTHaiUYs\niwKZVArCeUH7JtKaymR2Yfw/tFO5I+UoiRdeY340E7087m/CXMR/PDSPykpmzFNe\nhVKbnFMUB/bAODLtYknbRgBARxQA+jHtbVFHJEHdYzfM5GaoYqxYhVwUYfUGMLrU\nFbHKJTemyyrNCynHe/H6gOjvJDfQ/WdVE/0SBR7I8hZ/bgwcPf2f+h6CX+qJlQRx\nLpcVCdhfkMqp7h5v/Nb4KK8oNA9g/ST2MxOgVAU10ZZV5Eg49g30bhAKfhEYSq5i\nPlRUF5r+0h9RCzAQoUMOAZkUKmrS93JlTZ7Gm/vT4+NGBeSLqkeAZOHFSYpySexx\nZ5vp9MqUI7xB/w+HTbpFzt3eq+q1T747uFkhj21IevgNdl1uem0UjeMC4xcC9Dc+\nL4ZMUfE9lsp29sqzbHGq/hCJfAmLFyOHyguTDn9GP0WM4/C1JO0ExENEGfbvR8+p\nNHah8m/gskNSQp7HjBHaaK/PrqbRl2SAVvVZdolhRHG3L95V5Eo=\n=91Il\n-----END PGP SIGNATURE-----", "payload": "tree 4a9a2a515fa205a316f662cfa12a9cd220055875\nparent 83d6bc7113080c9bf3fd70bed1b89c6b4795d826\nauthor GrayJack <gr41.j4ck@gmail.com> 1602845538 -0300\ncommitter GrayJack <gr41.j4ck@gmail.com> 1602845538 -0300\n\nAdd Callable modifier for variables that implements Fnonce\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a483b5545dad2d36336c1e9a4f5dc991d2c8460b", "html_url": "https://github.com/rust-lang/rust/commit/a483b5545dad2d36336c1e9a4f5dc991d2c8460b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a483b5545dad2d36336c1e9a4f5dc991d2c8460b/comments", "author": {"login": "GrayJack", "id": 17973728, "node_id": "MDQ6VXNlcjE3OTczNzI4", "avatar_url": "https://avatars.githubusercontent.com/u/17973728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GrayJack", "html_url": "https://github.com/GrayJack", "followers_url": "https://api.github.com/users/GrayJack/followers", "following_url": "https://api.github.com/users/GrayJack/following{/other_user}", "gists_url": "https://api.github.com/users/GrayJack/gists{/gist_id}", "starred_url": "https://api.github.com/users/GrayJack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GrayJack/subscriptions", "organizations_url": "https://api.github.com/users/GrayJack/orgs", "repos_url": "https://api.github.com/users/GrayJack/repos", "events_url": "https://api.github.com/users/GrayJack/events{/privacy}", "received_events_url": "https://api.github.com/users/GrayJack/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GrayJack", "id": 17973728, "node_id": "MDQ6VXNlcjE3OTczNzI4", "avatar_url": "https://avatars.githubusercontent.com/u/17973728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GrayJack", "html_url": "https://github.com/GrayJack", "followers_url": "https://api.github.com/users/GrayJack/followers", "following_url": "https://api.github.com/users/GrayJack/following{/other_user}", "gists_url": "https://api.github.com/users/GrayJack/gists{/gist_id}", "starred_url": "https://api.github.com/users/GrayJack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GrayJack/subscriptions", "organizations_url": "https://api.github.com/users/GrayJack/orgs", "repos_url": "https://api.github.com/users/GrayJack/repos", "events_url": "https://api.github.com/users/GrayJack/events{/privacy}", "received_events_url": "https://api.github.com/users/GrayJack/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83d6bc7113080c9bf3fd70bed1b89c6b4795d826", "url": "https://api.github.com/repos/rust-lang/rust/commits/83d6bc7113080c9bf3fd70bed1b89c6b4795d826", "html_url": "https://github.com/rust-lang/rust/commit/83d6bc7113080c9bf3fd70bed1b89c6b4795d826"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "8ecf72bd91690a2e08650d993114157cec270777", "filename": "crates/hir/src/code_model.rs", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a483b5545dad2d36336c1e9a4f5dc991d2c8460b/crates%2Fhir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a483b5545dad2d36336c1e9a4f5dc991d2c8460b/crates%2Fhir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fcode_model.rs?ref=a483b5545dad2d36336c1e9a4f5dc991d2c8460b", "patch": "@@ -31,8 +31,7 @@ use hir_ty::{\n     autoderef,\n     display::{HirDisplayError, HirFormatter},\n     method_resolution,\n-    traits::Solution,\n-    traits::SolutionVariables,\n+    traits::{FnTrait, Solution, SolutionVariables},\n     ApplicationTy, BoundVar, CallableDefId, Canonical, DebruijnIndex, FnSig, GenericPredicate,\n     InEnvironment, Obligation, ProjectionPredicate, ProjectionTy, Substs, TraitEnvironment, Ty,\n     TyDefId, TyKind, TypeCtor,\n@@ -1385,6 +1384,28 @@ impl Type {\n         )\n     }\n \n+    /// Checks that particular type `ty` implements `std::ops::FnOnce`.\n+    ///\n+    /// This function can be used to check if a particular type is callable, since FnOnce is a\n+    /// supertrait of Fn and FnMut, so all callable types implements at least FnOnce.\n+    pub fn impls_fnonce(&self, db: &dyn HirDatabase) -> bool {\n+        let krate = self.krate;\n+\n+        let fnonce_trait = match FnTrait::FnOnce.get_id(db, krate) {\n+            Some(it) => it,\n+            None => return false,\n+        };\n+\n+        let canonical_ty = Canonical { value: self.ty.value.clone(), kinds: Arc::new([]) };\n+        method_resolution::implements_trait(\n+            &canonical_ty,\n+            db,\n+            self.ty.environment.clone(),\n+            krate,\n+            fnonce_trait,\n+        )\n+    }\n+\n     pub fn impls_trait(&self, db: &dyn HirDatabase, trait_: Trait, args: &[Type]) -> bool {\n         let trait_ref = hir_ty::TraitRef {\n             trait_: trait_.id,"}, {"sha": "75084846762f9da6a33a921d714c278361ab1116", "filename": "crates/ide/src/syntax_highlighting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a483b5545dad2d36336c1e9a4f5dc991d2c8460b/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a483b5545dad2d36336c1e9a4f5dc991d2c8460b/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs?ref=a483b5545dad2d36336c1e9a4f5dc991d2c8460b", "patch": "@@ -763,7 +763,7 @@ fn highlight_def(db: &RootDatabase, def: Definition) -> Highlight {\n             if local.is_mut(db) || local.ty(db).is_mutable_reference() {\n                 h |= HighlightModifier::Mutable;\n             }\n-            if local.ty(db).as_callable(db).is_some() {\n+            if local.ty(db).as_callable(db).is_some() || local.ty(db).impls_fnonce(db) {\n                 h |= HighlightModifier::Callable;\n             }\n             return h;"}]}