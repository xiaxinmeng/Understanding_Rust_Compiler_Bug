{"sha": "fbcf9359c167b1e293de80f2562b81d7445b7ecd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiY2Y5MzU5YzE2N2IxZTI5M2RlODBmMjU2MmI4MWQ3NDQ1YjdlY2Q=", "commit": {"author": {"name": "ggomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-04-14T16:42:00Z"}, "committer": {"name": "ggomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-04-14T16:42:00Z"}, "message": "Add examples for std::ptr module functions", "tree": {"sha": "13d7c53e7679828342bb262020bb02584a7b9365", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13d7c53e7679828342bb262020bb02584a7b9365"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fbcf9359c167b1e293de80f2562b81d7445b7ecd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fbcf9359c167b1e293de80f2562b81d7445b7ecd", "html_url": "https://github.com/rust-lang/rust/commit/fbcf9359c167b1e293de80f2562b81d7445b7ecd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fbcf9359c167b1e293de80f2562b81d7445b7ecd/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "772c600d4d6f39daa6d07d1a60ee0df3d3426978", "url": "https://api.github.com/repos/rust-lang/rust/commits/772c600d4d6f39daa6d07d1a60ee0df3d3426978", "html_url": "https://github.com/rust-lang/rust/commit/772c600d4d6f39daa6d07d1a60ee0df3d3426978"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "2d638a3dfd2108499cf9011cb69e656c659c8e31", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/fbcf9359c167b1e293de80f2562b81d7445b7ecd/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbcf9359c167b1e293de80f2562b81d7445b7ecd/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=fbcf9359c167b1e293de80f2562b81d7445b7ecd", "patch": "@@ -119,6 +119,17 @@ pub unsafe fn replace<T>(dest: *mut T, mut src: T) -> T {\n /// `src` is not used before the data is overwritten again (e.g. with `write`,\n /// `zero_memory`, or `copy_memory`). Note that `*src = foo` counts as a use\n /// because it will attempt to drop the value previously at `*src`.\n+///\n+/// # Examples\n+///\n+/// Basic usage:\n+///\n+/// ```\n+/// let x = 12;\n+/// let y = &x as *const i32;\n+///\n+/// unsafe { println!(\"{}\", std::ptr::read(y)); }\n+/// ```\n #[inline(always)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub unsafe fn read<T>(src: *const T) -> T {\n@@ -155,6 +166,21 @@ pub unsafe fn read_and_drop<T>(dest: *mut T) -> T {\n ///\n /// This is appropriate for initializing uninitialized memory, or overwriting\n /// memory that has previously been `read` from.\n+///\n+/// # Examples\n+///\n+/// Basic usage:\n+///\n+/// ```\n+/// let mut x = 0;\n+/// let y = &mut x as *mut i32;\n+/// let z = 12;\n+///\n+/// unsafe {\n+///     std::ptr::write(y, z);\n+///     println!(\"{}\", std::ptr::read(y));\n+/// }\n+/// ```\n #[inline]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub unsafe fn write<T>(dst: *mut T, src: T) {\n@@ -178,6 +204,17 @@ pub unsafe fn write<T>(dst: *mut T, src: T) {\n /// `src` is not used before the data is overwritten again (e.g. with `write`,\n /// `zero_memory`, or `copy_memory`). Note that `*src = foo` counts as a use\n /// because it will attempt to drop the value previously at `*src`.\n+///\n+/// # Examples\n+///\n+/// Basic usage:\n+///\n+/// ```\n+/// let x = 12;\n+/// let y = &x as *const i32;\n+///\n+/// unsafe { println!(\"{}\", std::ptr::read_volatile(y)); }\n+/// ```\n #[inline]\n #[unstable(feature = \"volatile\", reason = \"recently added\", issue = \"31756\")]\n pub unsafe fn read_volatile<T>(src: *const T) -> T {\n@@ -203,6 +240,21 @@ pub unsafe fn read_volatile<T>(src: *const T) -> T {\n ///\n /// This is appropriate for initializing uninitialized memory, or overwriting\n /// memory that has previously been `read` from.\n+///\n+/// # Examples\n+///\n+/// Basic usage:\n+///\n+/// ```\n+/// let mut x = 0;\n+/// let y = &mut x as *mut i32;\n+/// let z = 12;\n+///\n+/// unsafe {\n+///     std::ptr::write_volatile(y, z);\n+///     println!(\"{}\", std::ptr::read_volatile(y));\n+/// }\n+/// ```\n #[inline]\n #[unstable(feature = \"volatile\", reason = \"recently added\", issue = \"31756\")]\n pub unsafe fn write_volatile<T>(dst: *mut T, src: T) {"}]}