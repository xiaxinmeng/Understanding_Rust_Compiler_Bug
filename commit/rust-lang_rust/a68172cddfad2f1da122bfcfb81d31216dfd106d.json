{"sha": "a68172cddfad2f1da122bfcfb81d31216dfd106d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2ODE3MmNkZGZhZDJmMWRhMTIyYmZjZmI4MWQzMTIxNmRmZDEwNmQ=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-01-19T03:15:57Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-01-19T03:15:57Z"}, "message": "rustc: remove the explicit count from the lang_item macro.\n\nWe can use a secondary macro to calculate the count from the information\nwe're already having to pass to the lang items macro.", "tree": {"sha": "80c907e7302dcaf7a46b88fba163806fe681aa48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80c907e7302dcaf7a46b88fba163806fe681aa48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a68172cddfad2f1da122bfcfb81d31216dfd106d", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a68172cddfad2f1da122bfcfb81d31216dfd106d", "html_url": "https://github.com/rust-lang/rust/commit/a68172cddfad2f1da122bfcfb81d31216dfd106d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a68172cddfad2f1da122bfcfb81d31216dfd106d/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0f6ef080bb69ce4370c04c92cc92b9a860e5725", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0f6ef080bb69ce4370c04c92cc92b9a860e5725", "html_url": "https://github.com/rust-lang/rust/commit/d0f6ef080bb69ce4370c04c92cc92b9a860e5725"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "d11cd4b3f38197755c08229e6505c71b3d6004f1", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a68172cddfad2f1da122bfcfb81d31216dfd106d/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a68172cddfad2f1da122bfcfb81d31216dfd106d/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=a68172cddfad2f1da122bfcfb81d31216dfd106d", "patch": "@@ -33,12 +33,27 @@ use std::hashmap::HashMap;\n use std::iter::Enumerate;\n use std::vec;\n \n+\n+// Get the last \"argument\" (has to be done recursively to avoid phoney local ambiguity error)\n+macro_rules! last {\n+    ( $first:expr, $( $remainder:expr, )+ ) => ( last!( $( $remainder, )+ ) );\n+    ( $first:expr, ) => ( $first )\n+}\n+\n // The actual lang items defined come at the end of this file in one handy table.\n // So you probably just want to nip down to the end.\n macro_rules! lets_do_this {\n+    // secondary rule to allow us to use `$num` as both an expression\n+    // and a pattern.\n+    (\n+        $( $num:tt, $variant:ident, $name:expr, $method:ident; )*\n+    ) => {\n+        lets_do_this!(count = 1 + last!($($num,)*),\n+                      $($num, $variant, $name, $method; )*)\n+    };\n+\n     (\n-        There are $num_lang_items:expr lang items.\n-        $( $num:pat, $variant:ident, $name:expr, $method:ident; )*\n+        count = $num_lang_items:expr, $( $num:pat, $variant:ident, $name:expr, $method:ident; )*\n     ) => {\n \n pub enum LangItem {\n@@ -207,8 +222,6 @@ pub fn collect_language_items(crate: &ast::Crate,\n }\n \n lets_do_this! {\n-    There are 40 lang items.\n-\n //  ID, Variant name,                    Name,                      Method name;\n     0,  FreezeTraitLangItem,             \"freeze\",                  freeze_trait;\n     1,  SendTraitLangItem,               \"send\",                    send_trait;\n@@ -261,4 +274,3 @@ lets_do_this! {\n     38, ExchangeHeapLangItem,            \"exchange_heap\",           exchange_heap;\n     39, GcLangItem,                      \"gc\",                      gc;\n }\n-"}]}