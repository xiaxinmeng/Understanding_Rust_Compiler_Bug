{"sha": "8f40e1180f65bdf7e88baa4bcc03d24baded9fca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmNDBlMTE4MGY2NWJkZjdlODhiYWE0YmNjMDNkMjRiYWRlZDlmY2E=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-03-14T21:39:13Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-03-14T21:39:25Z"}, "message": "Use pretty-printer instead of `span_to_snippet`", "tree": {"sha": "98f00762e59397a12178c8ecb16a4d449bd17d39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98f00762e59397a12178c8ecb16a4d449bd17d39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f40e1180f65bdf7e88baa4bcc03d24baded9fca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f40e1180f65bdf7e88baa4bcc03d24baded9fca", "html_url": "https://github.com/rust-lang/rust/commit/8f40e1180f65bdf7e88baa4bcc03d24baded9fca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f40e1180f65bdf7e88baa4bcc03d24baded9fca/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13076f90d2febedd44d395561b0ec844cac64f8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/13076f90d2febedd44d395561b0ec844cac64f8b", "html_url": "https://github.com/rust-lang/rust/commit/13076f90d2febedd44d395561b0ec844cac64f8b"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "ceb3bdc6b221bc50d11d3f47ccf4156590c0e122", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8f40e1180f65bdf7e88baa4bcc03d24baded9fca/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/8f40e1180f65bdf7e88baa4bcc03d24baded9fca/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=8f40e1180f65bdf7e88baa4bcc03d24baded9fca", "patch": "@@ -4268,6 +4268,7 @@ name = \"rustc_passes\"\n version = \"0.0.0\"\n dependencies = [\n  \"rustc_ast\",\n+ \"rustc_ast_pretty\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\","}, {"sha": "4069fb2127e026a7e2c93b63efe05d5bed82018e", "filename": "compiler/rustc_passes/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8f40e1180f65bdf7e88baa4bcc03d24baded9fca/compiler%2Frustc_passes%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8f40e1180f65bdf7e88baa4bcc03d24baded9fca/compiler%2Frustc_passes%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2FCargo.toml?ref=8f40e1180f65bdf7e88baa4bcc03d24baded9fca", "patch": "@@ -19,3 +19,4 @@ rustc_serialize = { path = \"../rustc_serialize\" }\n rustc_span = { path = \"../rustc_span\" }\n rustc_trait_selection = { path = \"../rustc_trait_selection\" }\n rustc_lexer = { path = \"../rustc_lexer\" }\n+rustc_ast_pretty = { path = \"../rustc_ast_pretty\" }"}, {"sha": "98771c919588806303c9cbaf5b1ffee5ac5dad1e", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8f40e1180f65bdf7e88baa4bcc03d24baded9fca/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f40e1180f65bdf7e88baa4bcc03d24baded9fca/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=8f40e1180f65bdf7e88baa4bcc03d24baded9fca", "patch": "@@ -597,13 +597,10 @@ impl CheckAttrVisitor<'tcx> {\n                                 hir_id,\n                                 i_meta.span,\n                                 |lint| {\n-                                    let msg = if let Ok(snippet) =\n-                                        self.tcx.sess.source_map().span_to_snippet(i_meta.path.span)\n-                                    {\n-                                        format!(\"unknown `doc` attribute `{}`\", snippet,)\n-                                    } else {\n-                                        String::from(\"unknown `doc` attribute\")\n-                                    };\n+                                    let msg = format!(\n+                                        \"unknown `doc` attribute `{}`\",\n+                                        rustc_ast_pretty::pprust::path_to_string(&i_meta.path),\n+                                    );\n                                     lint.build(&msg).emit();\n                                 },\n                             );"}]}