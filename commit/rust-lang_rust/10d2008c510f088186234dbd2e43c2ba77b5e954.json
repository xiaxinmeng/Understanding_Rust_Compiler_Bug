{"sha": "10d2008c510f088186234dbd2e43c2ba77b5e954", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwZDIwMDhjNTEwZjA4ODE4NjIzNGRiZDJlNDNjMmJhNzdiNWU5NTQ=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-12-16T03:44:12Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-03-04T23:36:25Z"}, "message": "Add ignore and project attributes", "tree": {"sha": "d6533a4b216d5e8f15a6dd8c4e8b29adfa29b3ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6533a4b216d5e8f15a6dd8c4e8b29adfa29b3ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10d2008c510f088186234dbd2e43c2ba77b5e954", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10d2008c510f088186234dbd2e43c2ba77b5e954", "html_url": "https://github.com/rust-lang/rust/commit/10d2008c510f088186234dbd2e43c2ba77b5e954", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10d2008c510f088186234dbd2e43c2ba77b5e954/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70156fbb752d5c8726c6c47104922575164a92e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/70156fbb752d5c8726c6c47104922575164a92e3", "html_url": "https://github.com/rust-lang/rust/commit/70156fbb752d5c8726c6c47104922575164a92e3"}], "stats": {"total": 66, "additions": 61, "deletions": 5}, "files": [{"sha": "585f5505f1feabff65fd06080ef0398141ee440a", "filename": "src/librustc_macros/src/hash_stable.rs", "status": "modified", "additions": 60, "deletions": 4, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/10d2008c510f088186234dbd2e43c2ba77b5e954/src%2Flibrustc_macros%2Fsrc%2Fhash_stable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10d2008c510f088186234dbd2e43c2ba77b5e954/src%2Flibrustc_macros%2Fsrc%2Fhash_stable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_macros%2Fsrc%2Fhash_stable.rs?ref=10d2008c510f088186234dbd2e43c2ba77b5e954", "patch": "@@ -1,13 +1,69 @@\n use synstructure;\n-use syn;\n-use proc_macro2;\n+use syn::{self, Meta, NestedMeta};\n+use proc_macro2::{self, Ident, Span};\n+\n+struct Attributes {\n+    ignore: bool,\n+    project: Option<String>,\n+}\n+\n+fn parse_attributes(field: &syn::Field) -> Attributes {\n+    let mut attrs = Attributes {\n+        ignore: false,\n+        project: None,\n+    };\n+    for attr in &field.attrs {\n+        if let Ok(meta) = attr.parse_meta() {\n+            if &meta.name().to_string() != \"stable_hasher\" {\n+                continue;\n+            }\n+            let mut any_attr = false;\n+            if let Meta::List(list) = meta {\n+                for nested in list.nested.iter() {\n+                    if let NestedMeta::Meta(meta) = nested {\n+                        if &meta.name().to_string() == \"ignore\" {\n+                            attrs.ignore = true;\n+                            any_attr = true;\n+                        }\n+                        if &meta.name().to_string() == \"project\" {\n+                            if let Meta::List(list) = meta {\n+                                if let Some(nested) = list.nested.iter().next() {\n+                                    if let NestedMeta::Meta(meta) = nested {\n+                                        attrs.project = Some(meta.name().to_string());\n+                                        any_attr = true;\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+            }\n+            if !any_attr {\n+                panic!(\"error parsing stable_hasher\");\n+            }\n+        }\n+    }\n+    attrs\n+}\n \n pub fn hash_stable_derive(mut s: synstructure::Structure) -> proc_macro2::TokenStream {\n     let generic: syn::GenericParam = parse_quote!('__ctx);\n     s.add_bounds(synstructure::AddBounds::Generics);\n     s.add_impl_generic(generic);\n-    let body = s.each(|bi| quote!{\n-        ::rustc_data_structures::stable_hasher::HashStable::hash_stable(#bi, __hcx, __hasher);\n+    let body = s.each(|bi| {\n+        let attrs = parse_attributes(bi.ast());\n+        if attrs.ignore {\n+             quote!{}\n+        } else if let Some(project) = attrs.project {\n+            let project = Ident::new(&project, Span::call_site());\n+            quote!{\n+                &#bi.#project.hash_stable(__hcx, __hasher);\n+            }\n+        } else {\n+            quote!{\n+                #bi.hash_stable(__hcx, __hasher);\n+            }\n+        }\n     });\n \n     let discriminant = match s.ast().data {"}, {"sha": "460b415c5375ff0202384b46ec7b7853a2f6124b", "filename": "src/librustc_macros/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/10d2008c510f088186234dbd2e43c2ba77b5e954/src%2Flibrustc_macros%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10d2008c510f088186234dbd2e43c2ba77b5e954/src%2Flibrustc_macros%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_macros%2Fsrc%2Flib.rs?ref=10d2008c510f088186234dbd2e43c2ba77b5e954", "patch": "@@ -11,4 +11,4 @@ extern crate proc_macro2;\n \n mod hash_stable;\n \n-decl_derive!([HashStable] => hash_stable::hash_stable_derive);\n+decl_derive!([HashStable, attributes(stable_hasher)] => hash_stable::hash_stable_derive);"}]}