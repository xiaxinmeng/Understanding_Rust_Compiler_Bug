{"sha": "159922de93bd0437093f9ca07eda4673ba285b89", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1OTkyMmRlOTNiZDA0MzcwOTNmOWNhMDdlZGE0NjczYmEyODViODk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-05-31T16:09:44Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-05-31T16:45:50Z"}, "message": "minor: it's Parameter, not Argument", "tree": {"sha": "42feed3fe7649d45c435b055bbe7aac581cd3661", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42feed3fe7649d45c435b055bbe7aac581cd3661"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/159922de93bd0437093f9ca07eda4673ba285b89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/159922de93bd0437093f9ca07eda4673ba285b89", "html_url": "https://github.com/rust-lang/rust/commit/159922de93bd0437093f9ca07eda4673ba285b89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/159922de93bd0437093f9ca07eda4673ba285b89/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "341f8bb200d60caf4c0ea70738198ac8d62218b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/341f8bb200d60caf4c0ea70738198ac8d62218b8", "html_url": "https://github.com/rust-lang/rust/commit/341f8bb200d60caf4c0ea70738198ac8d62218b8"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "283894704473bfa9093f08e7ac0b400064a8633f", "filename": "crates/hir_ty/src/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/159922de93bd0437093f9ca07eda4673ba285b89/crates%2Fhir_ty%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/159922de93bd0437093f9ca07eda4673ba285b89/crates%2Fhir_ty%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics.rs?ref=159922de93bd0437093f9ca07eda4673ba285b89", "patch": "@@ -349,11 +349,11 @@ impl fmt::Display for CaseType {\n \n #[derive(Debug)]\n pub enum IdentType {\n-    Argument,\n     Constant,\n     Enum,\n     Field,\n     Function,\n+    Parameter,\n     StaticVariable,\n     Structure,\n     Variable,\n@@ -363,11 +363,11 @@ pub enum IdentType {\n impl fmt::Display for IdentType {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         let repr = match self {\n-            IdentType::Argument => \"Argument\",\n             IdentType::Constant => \"Constant\",\n             IdentType::Enum => \"Enum\",\n             IdentType::Field => \"Field\",\n             IdentType::Function => \"Function\",\n+            IdentType::Parameter => \"Parameter\",\n             IdentType::StaticVariable => \"Static variable\",\n             IdentType::Structure => \"Structure\",\n             IdentType::Variable => \"Variable\","}, {"sha": "cfb5d73200f59a7ce402cf5335b9bca1c9a6ca80", "filename": "crates/hir_ty/src/diagnostics/decl_check.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/159922de93bd0437093f9ca07eda4673ba285b89/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/159922de93bd0437093f9ca07eda4673ba285b89/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check.rs?ref=159922de93bd0437093f9ca07eda4673ba285b89", "patch": "@@ -256,7 +256,7 @@ impl<'a, 'b> DeclValidator<'a, 'b> {\n                         }\n \n                         let ident_type =\n-                            if is_param { IdentType::Argument } else { IdentType::Variable };\n+                            if is_param { IdentType::Parameter } else { IdentType::Variable };\n \n                         let diagnostic = IncorrectCase {\n                             file: source_ptr.file_id,\n@@ -643,10 +643,10 @@ fn NonSnakeCaseName() {}\n         check_diagnostics(\n             r#\"\n fn foo(SomeParam: u8) {}\n-    // ^^^^^^^^^ Argument `SomeParam` should have snake_case name, e.g. `some_param`\n+    // ^^^^^^^^^ Parameter `SomeParam` should have snake_case name, e.g. `some_param`\n \n fn foo2(ok_param: &str, CAPS_PARAM: u8) {}\n-                     // ^^^^^^^^^^ Argument `CAPS_PARAM` should have snake_case name, e.g. `caps_param`\n+                     // ^^^^^^^^^^ Parameter `CAPS_PARAM` should have snake_case name, e.g. `caps_param`\n \"#,\n         );\n     }"}]}