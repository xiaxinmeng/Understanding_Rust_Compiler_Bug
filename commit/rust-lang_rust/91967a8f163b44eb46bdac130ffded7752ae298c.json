{"sha": "91967a8f163b44eb46bdac130ffded7752ae298c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxOTY3YThmMTYzYjQ0ZWI0NmJkYWMxMzBmZmRlZDc3NTJhZTI5OGM=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-07-23T03:52:43Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-08-19T23:53:41Z"}, "message": "Put `try` in the reserved list, not the in-use list", "tree": {"sha": "0f44ac2f24fe20fae6eb5d75f1aad03b736f4bcb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f44ac2f24fe20fae6eb5d75f1aad03b736f4bcb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91967a8f163b44eb46bdac130ffded7752ae298c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91967a8f163b44eb46bdac130ffded7752ae298c", "html_url": "https://github.com/rust-lang/rust/commit/91967a8f163b44eb46bdac130ffded7752ae298c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91967a8f163b44eb46bdac130ffded7752ae298c/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef198867a73f24d4c3c50d246c1024a3bff3cee2", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef198867a73f24d4c3c50d246c1024a3bff3cee2", "html_url": "https://github.com/rust-lang/rust/commit/ef198867a73f24d4c3c50d246c1024a3bff3cee2"}], "stats": {"total": 23, "additions": 8, "deletions": 15}, "files": [{"sha": "1eb76e7fe52fd76f1716370bea8d133193f1f187", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/91967a8f163b44eb46bdac130ffded7752ae298c/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91967a8f163b44eb46bdac130ffded7752ae298c/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=91967a8f163b44eb46bdac130ffded7752ae298c", "patch": "@@ -413,11 +413,9 @@ declare_keywords! {\n     (49, Virtual,            \"virtual\")\n     (50, Yield,              \"yield\")\n \n-    // Edition-specific keywords currently in use.\n-    (51, Try,                \"try\") // >= 2018 Edition Only\n-\n     // Edition-specific keywords reserved for future use.\n-    (52, Async,              \"async\") // >= 2018 Edition Only\n+    (51, Async,              \"async\") // >= 2018 Edition Only\n+    (52, Try,                \"try\") // >= 2018 Edition Only\n \n     // Special lifetime names\n     (53, UnderscoreLifetime, \"'_\")\n@@ -433,12 +431,9 @@ declare_keywords! {\n }\n \n impl Symbol {\n-    fn is_used_keyword_2018(self) -> bool {\n-        self == keywords::Try.name()\n-    }\n-\n     fn is_unused_keyword_2018(self) -> bool {\n-        self == keywords::Async.name()\n+        self >= keywords::Async.name() &&\n+        self <= keywords::Try.name()\n     }\n }\n \n@@ -451,9 +446,7 @@ impl Ident {\n \n     /// Returns `true` if the token is a keyword used in the language.\n     pub fn is_used_keyword(self) -> bool {\n-        // Note: `span.edition()` is relatively expensive, don't call it unless necessary.\n-        self.name >= keywords::As.name() && self.name <= keywords::While.name() ||\n-        self.name.is_used_keyword_2018() && self.span.edition() == Edition::Edition2018\n+        self.name >= keywords::As.name() && self.name <= keywords::While.name()\n     }\n \n     /// Returns `true` if the token is a keyword reserved for possible future use."}, {"sha": "1920caa548f0929303e53f95146fb7555d407d33", "filename": "src/test/compile-fail/try-block-in-match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91967a8f163b44eb46bdac130ffded7752ae298c/src%2Ftest%2Fcompile-fail%2Ftry-block-in-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91967a8f163b44eb46bdac130ffded7752ae298c/src%2Ftest%2Fcompile-fail%2Ftry-block-in-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftry-block-in-match.rs?ref=91967a8f163b44eb46bdac130ffded7752ae298c", "patch": "@@ -13,5 +13,5 @@\n #![feature(catch_expr)]\n \n fn main() {\n-    match try { false } { _ => {} } //~ ERROR expected expression, found keyword `try`\n+    match try { false } { _ => {} } //~ ERROR expected expression, found reserved keyword `try`\n }"}, {"sha": "fc1c08976141c61dd2339b91d2f62098cbe118b7", "filename": "src/test/compile-fail/try-block-in-while.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91967a8f163b44eb46bdac130ffded7752ae298c/src%2Ftest%2Fcompile-fail%2Ftry-block-in-while.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91967a8f163b44eb46bdac130ffded7752ae298c/src%2Ftest%2Fcompile-fail%2Ftry-block-in-while.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftry-block-in-while.rs?ref=91967a8f163b44eb46bdac130ffded7752ae298c", "patch": "@@ -13,5 +13,5 @@\n #![feature(catch_expr)]\n \n fn main() {\n-    while try { false } {} //~ ERROR expected expression, found keyword `try`\n+    while try { false } {} //~ ERROR expected expression, found reserved keyword `try`\n }"}, {"sha": "1e4f85c122d6c154cafa615457e0b7dc09fc7b0f", "filename": "src/test/parse-fail/keyword-try-as-identifier-edition2018.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91967a8f163b44eb46bdac130ffded7752ae298c/src%2Ftest%2Fparse-fail%2Fkeyword-try-as-identifier-edition2018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91967a8f163b44eb46bdac130ffded7752ae298c/src%2Ftest%2Fparse-fail%2Fkeyword-try-as-identifier-edition2018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fkeyword-try-as-identifier-edition2018.rs?ref=91967a8f163b44eb46bdac130ffded7752ae298c", "patch": "@@ -11,5 +11,5 @@\n // compile-flags: -Z parse-only --edition 2018\n \n fn main() {\n-    let try = \"foo\"; //~ error: expected pattern, found keyword `try`\n+    let try = \"foo\"; //~ error: expected pattern, found reserved keyword `try`\n }"}]}