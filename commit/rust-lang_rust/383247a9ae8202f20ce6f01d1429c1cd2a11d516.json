{"sha": "383247a9ae8202f20ce6f01d1429c1cd2a11d516", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4MzI0N2E5YWU4MjAyZjIwY2U2ZjAxZDE0MjljMWNkMmExMWQ1MTY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-30T22:33:37Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-30T22:33:37Z"}, "message": "Generalize", "tree": {"sha": "d1861a269d940a9369f26a95021eafaad62d66de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1861a269d940a9369f26a95021eafaad62d66de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/383247a9ae8202f20ce6f01d1429c1cd2a11d516", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/383247a9ae8202f20ce6f01d1429c1cd2a11d516", "html_url": "https://github.com/rust-lang/rust/commit/383247a9ae8202f20ce6f01d1429c1cd2a11d516", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/383247a9ae8202f20ce6f01d1429c1cd2a11d516/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1829d8959d9f48302fec42d64216c158db13744", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1829d8959d9f48302fec42d64216c158db13744", "html_url": "https://github.com/rust-lang/rust/commit/e1829d8959d9f48302fec42d64216c158db13744"}], "stats": {"total": 30, "additions": 21, "deletions": 9}, "files": [{"sha": "2e8fd34943e5dca30659550b18c7f59720a32bf1", "filename": "xtask/src/codegen.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/383247a9ae8202f20ce6f01d1429c1cd2a11d516/xtask%2Fsrc%2Fcodegen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/383247a9ae8202f20ce6f01d1429c1cd2a11d516/xtask%2Fsrc%2Fcodegen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen.rs?ref=383247a9ae8202f20ce6f01d1429c1cd2a11d516", "patch": "@@ -61,8 +61,24 @@ fn extract_comment_blocks(text: &str) -> Vec<Vec<String>> {\n     do_extract_comment_blocks(text, false)\n }\n \n-fn extract_comment_blocks_with_empty_lines(text: &str) -> Vec<Vec<String>> {\n-    do_extract_comment_blocks(text, true)\n+fn extract_comment_blocks_with_empty_lines(tag: &str, text: &str) -> Vec<CommentBlock> {\n+    assert!(tag.starts_with(char::is_uppercase));\n+    let tag = format!(\"{}:\", tag);\n+    let mut res = Vec::new();\n+    for mut block in do_extract_comment_blocks(text, true) {\n+        let first = block.remove(0);\n+        if first.starts_with(&tag) {\n+            let id = first[tag.len()..].trim().to_string();\n+            let block = CommentBlock { id, contents: block };\n+            res.push(block);\n+        }\n+    }\n+    res\n+}\n+\n+struct CommentBlock {\n+    id: String,\n+    contents: Vec<String>,\n }\n \n fn do_extract_comment_blocks(text: &str, allow_blocks_with_empty_lines: bool) -> Vec<Vec<String>> {"}, {"sha": "6ebeb8aea4e7a53b2af7db60d78a60c428da8c8c", "filename": "xtask/src/codegen/gen_assists_docs.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/383247a9ae8202f20ce6f01d1429c1cd2a11d516/xtask%2Fsrc%2Fcodegen%2Fgen_assists_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/383247a9ae8202f20ce6f01d1429c1cd2a11d516/xtask%2Fsrc%2Fcodegen%2Fgen_assists_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen%2Fgen_assists_docs.rs?ref=383247a9ae8202f20ce6f01d1429c1cd2a11d516", "patch": "@@ -33,22 +33,18 @@ impl Assist {\n \n         fn collect_file(acc: &mut Vec<Assist>, path: &Path) -> Result<()> {\n             let text = fs::read_to_string(path)?;\n-            let comment_blocks = extract_comment_blocks_with_empty_lines(&text);\n+            let comment_blocks = extract_comment_blocks_with_empty_lines(\"Assist\", &text);\n \n             for block in comment_blocks {\n                 // FIXME: doesn't support blank lines yet, need to tweak\n                 // `extract_comment_blocks` for that.\n-                let mut lines = block.iter();\n-                let first_line = lines.next().unwrap();\n-                if !first_line.starts_with(\"Assist: \") {\n-                    continue;\n-                }\n-                let id = first_line[\"Assist: \".len()..].to_string();\n+                let id = block.id;\n                 assert!(\n                     id.chars().all(|it| it.is_ascii_lowercase() || it == '_'),\n                     \"invalid assist id: {:?}\",\n                     id\n                 );\n+                let mut lines = block.contents.iter();\n \n                 let doc = take_until(lines.by_ref(), \"```\").trim().to_string();\n                 assert!("}]}