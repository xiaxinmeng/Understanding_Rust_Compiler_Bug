{"sha": "d7ca0758812daa1e796a6f58a1fb3fe98cf88fa6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3Y2EwNzU4ODEyZGFhMWU3OTZhNmY1OGExZmIzZmU5OGNmODhmYTY=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-12-19T12:14:03Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-12-19T14:15:04Z"}, "message": "query: insert visited queries more eagerly", "tree": {"sha": "bc0bd767012fc3b268c11e779fe5673b05d44920", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc0bd767012fc3b268c11e779fe5673b05d44920"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7ca0758812daa1e796a6f58a1fb3fe98cf88fa6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7ca0758812daa1e796a6f58a1fb3fe98cf88fa6", "html_url": "https://github.com/rust-lang/rust/commit/d7ca0758812daa1e796a6f58a1fb3fe98cf88fa6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7ca0758812daa1e796a6f58a1fb3fe98cf88fa6/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3294a69abb1749bba8769df867f65cd37a93a30c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3294a69abb1749bba8769df867f65cd37a93a30c", "html_url": "https://github.com/rust-lang/rust/commit/3294a69abb1749bba8769df867f65cd37a93a30c"}], "stats": {"total": 9, "additions": 3, "deletions": 6}, "files": [{"sha": "559093b8f1893266aa599de54a80e2ad742cf66f", "filename": "src/librustc/ty/query/job.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d7ca0758812daa1e796a6f58a1fb3fe98cf88fa6/src%2Flibrustc%2Fty%2Fquery%2Fjob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7ca0758812daa1e796a6f58a1fb3fe98cf88fa6/src%2Flibrustc%2Fty%2Fquery%2Fjob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fjob.rs?ref=d7ca0758812daa1e796a6f58a1fb3fe98cf88fa6", "patch": "@@ -290,7 +290,7 @@ fn cycle_check<'tcx>(query: Lrc<QueryJob<'tcx>>,\n                      stack: &mut Vec<(Span, Lrc<QueryJob<'tcx>>)>,\n                      visited: &mut FxHashSet<*const QueryJob<'tcx>>\n ) -> Option<Option<Waiter<'tcx>>> {\n-    if visited.contains(&query.as_ptr()) {\n+    if !visited.insert(query.as_ptr()) {\n         return if let Some(p) = stack.iter().position(|q| q.1.as_ptr() == query.as_ptr()) {\n             // We detected a query cycle, fix up the initial span and return Some\n \n@@ -304,8 +304,7 @@ fn cycle_check<'tcx>(query: Lrc<QueryJob<'tcx>>,\n         }\n     }\n \n-    // Mark this query is visited and add it to the stack\n-    visited.insert(query.as_ptr());\n+    // Query marked as visited is added it to the stack\n     stack.push((span, query.clone()));\n \n     // Visit all the waiters\n@@ -330,7 +329,7 @@ fn connected_to_root<'tcx>(\n     visited: &mut FxHashSet<*const QueryJob<'tcx>>\n ) -> bool {\n     // We already visited this or we're deliberately ignoring it\n-    if visited.contains(&query.as_ptr()) {\n+    if !visited.insert(query.as_ptr()) {\n         return false;\n     }\n \n@@ -339,8 +338,6 @@ fn connected_to_root<'tcx>(\n         return true;\n     }\n \n-    visited.insert(query.as_ptr());\n-\n     visit_waiters(query, |_, successor| {\n         if connected_to_root(successor, visited) {\n             Some(None)"}]}