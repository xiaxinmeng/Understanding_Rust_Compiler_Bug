{"sha": "f02577d49159c88414911b1e10ff654622856b55", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwMjU3N2Q0OTE1OWM4ODQxNDkxMWIxZTEwZmY2NTQ2MjI4NTZiNTU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-10-28T15:05:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-28T15:05:47Z"}, "message": "Rollup merge of #36206 - mcarton:35755, r=pnkfelix\n\nFix bad error message with `::<` in types\n\nFix #36116.\n\nBefore:\n```rust\nerror: expected identifier, found `<`\n  --> src/test/compile-fail/issue-36116.rs:16:52\n   |\n16 |     let f = Some(Foo { _a: 42 }).map(|a| a as Foo::<i32>);\n   |                                                    ^\n\nerror: chained comparison operators require parentheses\n  --> src/test/compile-fail/issue-36116.rs:16:52\n   |\n16 |     let f = Some(Foo { _a: 42 }).map(|a| a as Foo::<i32>);\n   |                                                    ^^^^^^\n   |\n   = help: use `::<...>` instead of `<...>` if you meant to specify type arguments\n\nerror: expected expression, found `)`\n  --> src/test/compile-fail/issue-36116.rs:16:57\n   |\n16 |     let f = Some(Foo { _a: 42 }).map(|a| a as Foo::<i32>);\n   |                                                         ^\n\nerror: expected identifier, found `<`\n  --> src/test/compile-fail/issue-36116.rs:20:17\n   |\n20 |     let g: Foo::<i32> = Foo { _a: 42 };\n   |                 ^\n\nerror: aborting due to 5 previous errors\n```\n\nAfter:\n```rust\nerror: unexpected token: `::`\n  --> src/test/compile-fail/issue-36116.rs:16:50\n   |\n16 |     let f = Some(Foo { _a: 42 }).map(|a| a as Foo::<i32>);\n   |                                                  ^^\n   |\n   = help: use `<...>` instead of `::<...>` if you meant to specify type arguments\n\nerror: unexpected token: `::`\n  --> src/test/compile-fail/issue-36116.rs:20:15\n   |\n20 |     let g: Foo::<i32> = Foo { _a: 42 };\n   |               ^^\n   |\n   = help: use `<...>` instead of `::<...>` if you meant to specify type arguments\n\nerror: aborting due to 2 previous errors\n```", "tree": {"sha": "5bb424e5c2ec5c2a568f8cbdbc79549cdca3b6a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5bb424e5c2ec5c2a568f8cbdbc79549cdca3b6a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f02577d49159c88414911b1e10ff654622856b55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f02577d49159c88414911b1e10ff654622856b55", "html_url": "https://github.com/rust-lang/rust/commit/f02577d49159c88414911b1e10ff654622856b55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f02577d49159c88414911b1e10ff654622856b55/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d3caecdd7f16137dbba14178a3e54d2a4113e07", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d3caecdd7f16137dbba14178a3e54d2a4113e07", "html_url": "https://github.com/rust-lang/rust/commit/9d3caecdd7f16137dbba14178a3e54d2a4113e07"}, {"sha": "f7cc6dc1eddc367f988017172d09d96ce191e5e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7cc6dc1eddc367f988017172d09d96ce191e5e1", "html_url": "https://github.com/rust-lang/rust/commit/f7cc6dc1eddc367f988017172d09d96ce191e5e1"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "da5d754b5990415f126d0a0abc38a66a8432f700", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f02577d49159c88414911b1e10ff654622856b55/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f02577d49159c88414911b1e10ff654622856b55/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=f02577d49159c88414911b1e10ff654622856b55", "patch": "@@ -1757,6 +1757,17 @@ impl<'a> Parser<'a> {\n             // First, parse an identifier.\n             let identifier = self.parse_path_segment_ident()?;\n \n+            if self.check(&token::ModSep) && self.look_ahead(1, |t| *t == token::Lt) {\n+                self.bump();\n+                let prev_span = self.prev_span;\n+\n+                let mut err = self.diagnostic().struct_span_err(prev_span,\n+                    \"unexpected token: `::`\");\n+                err.help(\n+                    \"use `<...>` instead of `::<...>` if you meant to specify type arguments\");\n+                err.emit();\n+            }\n+\n             // Parse types, optionally.\n             let parameters = if self.eat_lt() {\n                 let (lifetimes, types, bindings) = self.parse_generic_values_after_lt()?;"}, {"sha": "9abf2b5ec3ad3d988e2531849a22837d8fdb4a1f", "filename": "src/test/compile-fail/issue-36116.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/f02577d49159c88414911b1e10ff654622856b55/src%2Ftest%2Fcompile-fail%2Fissue-36116.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f02577d49159c88414911b1e10ff654622856b55/src%2Ftest%2Fcompile-fail%2Fissue-36116.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-36116.rs?ref=f02577d49159c88414911b1e10ff654622856b55", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Foo<T> {\n+    _a: T,\n+}\n+\n+fn main() {\n+    let f = Some(Foo { _a: 42 }).map(|a| a as Foo::<i32>);\n+    //~^ ERROR unexpected token: `::`\n+    //~| HELP use `<...>` instead of `::<...>` if you meant to specify type arguments\n+\n+    let g: Foo::<i32> = Foo { _a: 42 };\n+    //~^ ERROR unexpected token: `::`\n+    //~| HELP use `<...>` instead of `::<...>` if you meant to specify type arguments\n+}"}]}