{"sha": "76ec35ae743ee299484a48b233bc64cf3779097d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2ZWMzNWFlNzQzZWUyOTk0ODRhNDhiMjMzYmM2NGNmMzc3OTA5N2Q=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-04-29T18:57:40Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-04-29T18:57:40Z"}, "message": "auto merge of #6099 : danluu/rust/xfail_clone, r=catamorphism\n\nOne of the tests seems to have no current equivalent that's similar. Please let me know if that's incorrect, and I'll try fixing it instead of deleting it. I suppose a struct could be used instead of `any` and `match type`, but it seems like the original intent of the test was to exercise `match type`", "tree": {"sha": "8bc170b7075bbda7d489b23746ce0f0075bfaeb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bc170b7075bbda7d489b23746ce0f0075bfaeb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76ec35ae743ee299484a48b233bc64cf3779097d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76ec35ae743ee299484a48b233bc64cf3779097d", "html_url": "https://github.com/rust-lang/rust/commit/76ec35ae743ee299484a48b233bc64cf3779097d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76ec35ae743ee299484a48b233bc64cf3779097d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32901104cb54a37211ac1c05f377f69ee702485c", "url": "https://api.github.com/repos/rust-lang/rust/commits/32901104cb54a37211ac1c05f377f69ee702485c", "html_url": "https://github.com/rust-lang/rust/commit/32901104cb54a37211ac1c05f377f69ee702485c"}, {"sha": "e9814da3c0959247a79cffca8af3f07d124a8e49", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9814da3c0959247a79cffca8af3f07d124a8e49", "html_url": "https://github.com/rust-lang/rust/commit/e9814da3c0959247a79cffca8af3f07d124a8e49"}], "stats": {"total": 51, "additions": 20, "deletions": 31}, "files": [{"sha": "dbe9ae7cba5f8aaeb5e30ec518622ac9203a9bf6", "filename": "src/test/run-pass/alt-type-simple.rs", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/32901104cb54a37211ac1c05f377f69ee702485c/src%2Ftest%2Frun-pass%2Falt-type-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32901104cb54a37211ac1c05f377f69ee702485c/src%2Ftest%2Frun-pass%2Falt-type-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falt-type-simple.rs?ref=32901104cb54a37211ac1c05f377f69ee702485c", "patch": "@@ -1,14 +0,0 @@\n-\n-// xfail-test\n-\n-fn altsimple(any x) {\n-  match type (f) {\n-    case (int i) { print(\"int\"); }\n-    case (str s) { print(\"str\"); }\n-  }\n-}\n-\n-pub fn main() {\n-  altsimple(5);\n-  altsimple(\"asdfasdfsDF\");\n-}"}, {"sha": "57c4f91142dd804657a50e51bded9bf0ba82d4f7", "filename": "src/test/run-pass/clone-with-exterior.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/76ec35ae743ee299484a48b233bc64cf3779097d/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76ec35ae743ee299484a48b233bc64cf3779097d/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs?ref=76ec35ae743ee299484a48b233bc64cf3779097d", "patch": "@@ -8,17 +8,21 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//xfail-test\n-\n extern mod std;\n+use core::task::spawn;\n \n-fn f(x : @{a:int, b:int}) {\n-    assert!((x.a == 10));\n-    assert!((x.b == 12));\n+struct Pair {\n+    a: int,\n+    b: int\n }\n \n pub fn main() {\n-    let z : @{a:int, b:int} = @{ a : 10, b : 12};\n-    let p = task::_spawn(bind f(z));\n-    task::join_id(p);\n+    let z = ~Pair { a : 10, b : 12};\n+    \n+    let f: ~fn() = || {\n+        assert!((z.a == 10));\n+        assert!((z.b == 12));\n+    };\n+\n+    spawn(f);\n }"}, {"sha": "611a4b9ccabdd7a9996c2365d170414a7642ac17", "filename": "src/test/run-pass/infinite-loops.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/76ec35ae743ee299484a48b233bc64cf3779097d/src%2Ftest%2Frun-pass%2Finfinite-loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76ec35ae743ee299484a48b233bc64cf3779097d/src%2Ftest%2Frun-pass%2Finfinite-loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finfinite-loops.rs?ref=76ec35ae743ee299484a48b233bc64cf3779097d", "patch": "@@ -15,16 +15,15 @@\n // xfail-test\n \n extern mod std;\n-use task::join;\n-\n-fn loop(n: int) {\n-    let t1: task;\n-    let t2: task;\n-\n-    if n > 0 { t1 = spawn loop(n - 1); t2 = spawn loop(n - 1); }\n-\n \n+fn loopy(n: int) {\n+    if n > 0 { do spawn { loopy(n - 1) }; do spawn { loopy(n - 1) }; }\n     loop { }\n }\n \n-pub fn main() { let t: task = spawn loop(5); join(t); }\n+pub fn main() { \n+    // Commenting this out, as this will hang forever otherwise.\n+    // Even after seeing the comment above, I'm not sure what the\n+    // intention of this test is.\n+    // do spawn { loopy(5) }; \n+}"}]}