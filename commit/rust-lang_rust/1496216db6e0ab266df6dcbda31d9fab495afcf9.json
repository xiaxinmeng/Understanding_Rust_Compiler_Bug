{"sha": "1496216db6e0ab266df6dcbda31d9fab495afcf9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0OTYyMTZkYjZlMGFiMjY2ZGY2ZGNiZGEzMWQ5ZmFiNDk1YWZjZjk=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-06-17T23:06:36Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-06-19T18:25:51Z"}, "message": "Permit moving out of captured upvars in once fns. Close #2549.", "tree": {"sha": "526e8308b73cc3db27d84a6e1f1c525648024ec7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/526e8308b73cc3db27d84a6e1f1c525648024ec7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1496216db6e0ab266df6dcbda31d9fab495afcf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1496216db6e0ab266df6dcbda31d9fab495afcf9", "html_url": "https://github.com/rust-lang/rust/commit/1496216db6e0ab266df6dcbda31d9fab495afcf9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1496216db6e0ab266df6dcbda31d9fab495afcf9/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c7903d59946e6a091bdcbb5f2ff51021c57a1d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c7903d59946e6a091bdcbb5f2ff51021c57a1d2", "html_url": "https://github.com/rust-lang/rust/commit/2c7903d59946e6a091bdcbb5f2ff51021c57a1d2"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "d982be684a2df1b5c4f7061b7cde5bd561dfd4cf", "filename": "src/librustc/middle/borrowck/gather_loans/gather_moves.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1496216db6e0ab266df6dcbda31d9fab495afcf9/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Fgather_moves.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1496216db6e0ab266df6dcbda31d9fab495afcf9/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Fgather_moves.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Fgather_moves.rs?ref=1496216db6e0ab266df6dcbda31d9fab495afcf9", "patch": "@@ -101,9 +101,7 @@ fn check_is_legal_to_move_from(bccx: @BorrowckCtxt,\n                                cmt0: mc::cmt,\n                                cmt: mc::cmt) -> bool {\n     match cmt.cat {\n-        mc::cat_stack_upvar(*) |\n         mc::cat_implicit_self(*) |\n-        mc::cat_copied_upvar(*) |\n         mc::cat_deref(_, _, mc::region_ptr(*)) |\n         mc::cat_deref(_, _, mc::gc_ptr(*)) |\n         mc::cat_deref(_, _, mc::unsafe_ptr(*)) => {\n@@ -114,6 +112,24 @@ fn check_is_legal_to_move_from(bccx: @BorrowckCtxt,\n             false\n         }\n \n+        // These are separate from the above cases for a better error message.\n+        mc::cat_stack_upvar(*) |\n+        mc::cat_copied_upvar(mc::CopiedUpvar { onceness: ast::Many, _ }) => {\n+            bccx.span_err(\n+                cmt0.span,\n+                fmt!(\"cannot move out of %s \\\n+                      (unless the destination closure type is `once fn')\",\n+                     bccx.cmt_to_str(cmt)));\n+            false\n+        }\n+\n+        // Can move out of captured upvars only if the destination closure\n+        // type is 'once'. 1-shot stack closures emit the copied_upvar form\n+        // (see mem_categorization.rs).\n+        mc::cat_copied_upvar(mc::CopiedUpvar { onceness: ast::Once, _ }) => {\n+            true\n+        }\n+\n         // It seems strange to allow a move out of a static item,\n         // but what happens in practice is that you have a\n         // reference to a constant with a type that should be"}, {"sha": "d020cf651a4ac504657257bb90570643ea188495", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1496216db6e0ab266df6dcbda31d9fab495afcf9/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1496216db6e0ab266df6dcbda31d9fab495afcf9/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=1496216db6e0ab266df6dcbda31d9fab495afcf9", "patch": "@@ -78,7 +78,7 @@ pub enum categorization {\n }\n \n #[deriving(Eq)]\n-struct CopiedUpvar {\n+pub struct CopiedUpvar {\n     upvar_id: ast::node_id,\n     onceness: ast::Onceness,\n }\n@@ -497,9 +497,8 @@ impl mem_categorization_ctxt {\n               let ty = ty::node_id_to_type(self.tcx, fn_node_id);\n               match ty::get(ty).sty {\n                   ty::ty_closure(ref closure_ty) => {\n-                      let sigil = closure_ty.sigil;\n-                      match sigil {\n-                          ast::BorrowedSigil => {\n+                      match (closure_ty.sigil, closure_ty.onceness) {\n+                          (ast::BorrowedSigil, ast::Many) => {\n                               let upvar_cmt =\n                                   self.cat_def(id, span, expr_ty, *inner);\n                               @cmt_ {\n@@ -510,7 +509,8 @@ impl mem_categorization_ctxt {\n                                   ty:upvar_cmt.ty\n                               }\n                           }\n-                          ast::OwnedSigil | ast::ManagedSigil => {\n+                          (ast::BorrowedSigil, ast::Once) |\n+                          (ast::OwnedSigil, _) | (ast::ManagedSigil, _) => {\n                               // FIXME #2152 allow mutation of moved upvars\n                               @cmt_ {\n                                   id:id,"}]}