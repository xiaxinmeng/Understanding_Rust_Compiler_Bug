{"sha": "0da4bdeb2a749ac6ef8ffacf67cd807ccddd096c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkYTRiZGViMmE3NDlhYzZlZjhmZmFjZjY3Y2Q4MDdjY2RkZDA5NmM=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-04-27T19:32:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-04-27T19:32:16Z"}, "message": "Rollup merge of #50263 - alexcrichton:uwtable-allcoators, r=eddyb\n\nrustc: Emit `uwtable` for allocator shims\n\nThis commit emits the `uwtable` attribute to LLVM for platforms that require it\nfor the allocator shims that we generate to ensure that they can hopefully get\nunwound past. This is a stab in the dark at helping\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=1456150 along.", "tree": {"sha": "f45bd8aea89bd6aaaf90d1e1efc935bb02d19bf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f45bd8aea89bd6aaaf90d1e1efc935bb02d19bf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0da4bdeb2a749ac6ef8ffacf67cd807ccddd096c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa43rACRBK7hj4Ov3rIwAAdHIIAAff8GvkVA0VlAnSVZvHI7WX\nb87sEunyU7EToPMTcQdw4W19SzUK1yB2tx0VLOP/irkoPFNnyfc17wU1+RgYknGW\nHS98nOKjICkiQXDsqZY7bHIbf4TH5Qebv1GDOWcl3aeNPw4064ENpr0TT4dmZgrc\ncp57tgJ3sYGPYS0+gggKeLVoSDY/ZAwpFhbnhCMTqeoP2j/qrfwSds8c3PiaY4I1\nPdl36O+kWBUj6E6sOZHYWENOwsQwiqoBzuRBGbK9upiUDa81z1fOe542CJn/iMGt\nambDi49CwCOo+CisfOJ6q4jA8xp2HSvxJwsQP+yAqSL09fvvykm6p5v6KjxnGYs=\n=M/Jg\n-----END PGP SIGNATURE-----\n", "payload": "tree f45bd8aea89bd6aaaf90d1e1efc935bb02d19bf7\nparent 1c1fd2758e9da2c183d46f119a19ea119dbef0d9\nparent 20ad427af014aa6f8734629baa922c52f1ee8b77\nauthor kennytm <kennytm@gmail.com> 1524857536 +0800\ncommitter GitHub <noreply@github.com> 1524857536 +0800\n\nRollup merge of #50263 - alexcrichton:uwtable-allcoators, r=eddyb\n\nrustc: Emit `uwtable` for allocator shims\n\nThis commit emits the `uwtable` attribute to LLVM for platforms that require it\nfor the allocator shims that we generate to ensure that they can hopefully get\nunwound past. This is a stab in the dark at helping\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=1456150 along.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0da4bdeb2a749ac6ef8ffacf67cd807ccddd096c", "html_url": "https://github.com/rust-lang/rust/commit/0da4bdeb2a749ac6ef8ffacf67cd807ccddd096c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0da4bdeb2a749ac6ef8ffacf67cd807ccddd096c/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c1fd2758e9da2c183d46f119a19ea119dbef0d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c1fd2758e9da2c183d46f119a19ea119dbef0d9", "html_url": "https://github.com/rust-lang/rust/commit/1c1fd2758e9da2c183d46f119a19ea119dbef0d9"}, {"sha": "20ad427af014aa6f8734629baa922c52f1ee8b77", "url": "https://api.github.com/repos/rust-lang/rust/commits/20ad427af014aa6f8734629baa922c52f1ee8b77", "html_url": "https://github.com/rust-lang/rust/commit/20ad427af014aa6f8734629baa922c52f1ee8b77"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "871fe98ec01879612afa2b7830f558ffaa05c3a8", "filename": "src/librustc_trans/allocator.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0da4bdeb2a749ac6ef8ffacf67cd807ccddd096c/src%2Flibrustc_trans%2Fallocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0da4bdeb2a749ac6ef8ffacf67cd807ccddd096c/src%2Flibrustc_trans%2Fallocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fallocator.rs?ref=0da4bdeb2a749ac6ef8ffacf67cd807ccddd096c", "patch": "@@ -11,6 +11,7 @@\n use std::ffi::CString;\n use std::ptr;\n \n+use attributes;\n use libc::c_uint;\n use rustc::middle::allocator::AllocatorKind;\n use rustc::ty::TyCtxt;\n@@ -67,6 +68,9 @@ pub(crate) unsafe fn trans(tcx: TyCtxt, mods: &ModuleLlvm, kind: AllocatorKind)\n         if tcx.sess.target.target.options.default_hidden_visibility {\n             llvm::LLVMRustSetVisibility(llfn, llvm::Visibility::Hidden);\n         }\n+       if tcx.sess.target.target.options.requires_uwtable {\n+           attributes::emit_uwtable(llfn, true);\n+       }\n \n         let callee = CString::new(kind.fn_name(method.name)).unwrap();\n         let callee = llvm::LLVMRustGetOrInsertFunction(llmod,"}]}