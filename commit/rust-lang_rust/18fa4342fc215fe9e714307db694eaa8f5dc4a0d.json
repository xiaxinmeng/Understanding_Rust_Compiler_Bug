{"sha": "18fa4342fc215fe9e714307db694eaa8f5dc4a0d", "node_id": "C_kwDOAAsO6NoAKDE4ZmE0MzQyZmMyMTVmZTllNzE0MzA3ZGI2OTRlYWE4ZjVkYzRhMGQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-19T11:50:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-19T11:50:51Z"}, "message": "Auto merge of #90996 - the8472:obligation-hashes2, r=matthewjasper\n\nOptimize `impl Hash for ObligationCauseData` by not hashing `ObligationCauseCode` variant fields\n\nSplit out from #90913 since it's a [clear performance win](https://perf.rust-lang.org/compare.html?start=ad442399756573dccacb314b6bf8079964bcc72a&end=223f5e877fe93b5f437c2d703f883797913cd2b7) and should be easier to review.\n\nIt speeds up hashing for `Obligation` [deduplication](https://github.com/rust-lang/rust/blob/c9c4b5d7276297679387189d96a952f2b760e7ad/compiler/rustc_trait_selection/src/traits/select/mod.rs#L2355-L2356) by only hashing the discriminant of the `ObligationCauseCode` enum instead of its contents. That shouldn't affect hash quality much since there are several other fields in `Obligation` which should be unique enough, especially the predicate itself which is hashed as an interned pointer.", "tree": {"sha": "b6dd835a1306d3334d325c5e4e107e6e7d40b4d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6dd835a1306d3334d325c5e4e107e6e7d40b4d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18fa4342fc215fe9e714307db694eaa8f5dc4a0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18fa4342fc215fe9e714307db694eaa8f5dc4a0d", "html_url": "https://github.com/rust-lang/rust/commit/18fa4342fc215fe9e714307db694eaa8f5dc4a0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18fa4342fc215fe9e714307db694eaa8f5dc4a0d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8423e6c449ad3f4b0dab442175462004554e499", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8423e6c449ad3f4b0dab442175462004554e499", "html_url": "https://github.com/rust-lang/rust/commit/e8423e6c449ad3f4b0dab442175462004554e499"}, {"sha": "78b5f2d2faf490ab8799188a8e8bf9ead4906490", "url": "https://api.github.com/repos/rust-lang/rust/commits/78b5f2d2faf490ab8799188a8e8bf9ead4906490", "html_url": "https://github.com/rust-lang/rust/commit/78b5f2d2faf490ab8799188a8e8bf9ead4906490"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "49071e7995b4cd972de134c8c1d1958277c50b54", "filename": "compiler/rustc_middle/src/traits/mod.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/18fa4342fc215fe9e714307db694eaa8f5dc4a0d/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18fa4342fc215fe9e714307db694eaa8f5dc4a0d/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs?ref=18fa4342fc215fe9e714307db694eaa8f5dc4a0d", "patch": "@@ -23,6 +23,7 @@ use smallvec::SmallVec;\n \n use std::borrow::Cow;\n use std::fmt;\n+use std::hash::{Hash, Hasher};\n use std::ops::Deref;\n \n pub use self::select::{EvaluationCache, EvaluationResult, OverflowError, SelectionCache};\n@@ -108,7 +109,7 @@ impl Deref for ObligationCause<'tcx> {\n     }\n }\n \n-#[derive(Clone, Debug, PartialEq, Eq, Hash, Lift)]\n+#[derive(Clone, Debug, PartialEq, Eq, Lift)]\n pub struct ObligationCauseData<'tcx> {\n     pub span: Span,\n \n@@ -123,6 +124,14 @@ pub struct ObligationCauseData<'tcx> {\n     pub code: ObligationCauseCode<'tcx>,\n }\n \n+impl Hash for ObligationCauseData<'_> {\n+    fn hash<H: Hasher>(&self, state: &mut H) {\n+        self.body_id.hash(state);\n+        self.span.hash(state);\n+        std::mem::discriminant(&self.code).hash(state);\n+    }\n+}\n+\n impl<'tcx> ObligationCause<'tcx> {\n     #[inline]\n     pub fn new("}]}