{"sha": "e023158145ece18176a2e93420600ccda0d0bc58", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwMjMxNTgxNDVlY2UxODE3NmEyZTkzNDIwNjAwY2NkYTBkMGJjNTg=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-09-01T13:49:40Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-09-01T14:01:28Z"}, "message": "Permit uninhabited enums to cast into ints\n\nThis essentially reverts part of #6204.", "tree": {"sha": "11d7120ccb511602dd0377a317fa827c763ff598", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11d7120ccb511602dd0377a317fa827c763ff598"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e023158145ece18176a2e93420600ccda0d0bc58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e023158145ece18176a2e93420600ccda0d0bc58", "html_url": "https://github.com/rust-lang/rust/commit/e023158145ece18176a2e93420600ccda0d0bc58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e023158145ece18176a2e93420600ccda0d0bc58/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e88e908e66cd1e6e30d789b37bcd774951d01856", "url": "https://api.github.com/repos/rust-lang/rust/commits/e88e908e66cd1e6e30d789b37bcd774951d01856", "html_url": "https://github.com/rust-lang/rust/commit/e88e908e66cd1e6e30d789b37bcd774951d01856"}], "stats": {"total": 17, "additions": 6, "deletions": 11}, "files": [{"sha": "3e7d370c0af43d15d08c800d9e4d62c1c867b48b", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e023158145ece18176a2e93420600ccda0d0bc58/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e023158145ece18176a2e93420600ccda0d0bc58/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=e023158145ece18176a2e93420600ccda0d0bc58", "patch": "@@ -2481,8 +2481,10 @@ impl<'tcx> AdtDef {\n         self.variants.iter().flat_map(|v| v.fields.iter())\n     }\n \n+    /// Whether the ADT lacks fields. Note that this includes uninhabited enums,\n+    /// e.g., `enum Void {}` is considered payload free as well.\n     pub fn is_payloadfree(&self) -> bool {\n-        !self.variants.is_empty() && self.variants.iter().all(|v| v.fields.is_empty())\n+        self.variants.iter().all(|v| v.fields.is_empty())\n     }\n \n     /// Return a `VariantDef` given a variant id."}, {"sha": "5a75c94c42f0bdd7244825d61d477012836e883a", "filename": "src/test/ui/uninhabited/uninhabited-enum-cast.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e023158145ece18176a2e93420600ccda0d0bc58/src%2Ftest%2Fui%2Funinhabited%2Funinhabited-enum-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e023158145ece18176a2e93420600ccda0d0bc58/src%2Ftest%2Fui%2Funinhabited%2Funinhabited-enum-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funinhabited%2Funinhabited-enum-cast.rs?ref=e023158145ece18176a2e93420600ccda0d0bc58", "patch": "@@ -1,7 +1,9 @@\n+// check-pass\n+\n enum E {}\n \n fn f(e: E) {\n-    println!(\"{}\", (e as isize).to_string());   //~ ERROR non-primitive cast\n+    println!(\"{}\", (e as isize).to_string());\n }\n \n fn main() {}"}, {"sha": "a9f10dfec994a9e4c7a71ca776e2fca44abb058f", "filename": "src/test/ui/uninhabited/uninhabited-enum-cast.stderr", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e88e908e66cd1e6e30d789b37bcd774951d01856/src%2Ftest%2Fui%2Funinhabited%2Funinhabited-enum-cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e88e908e66cd1e6e30d789b37bcd774951d01856/src%2Ftest%2Fui%2Funinhabited%2Funinhabited-enum-cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funinhabited%2Funinhabited-enum-cast.stderr?ref=e88e908e66cd1e6e30d789b37bcd774951d01856", "patch": "@@ -1,9 +0,0 @@\n-error[E0605]: non-primitive cast: `E` as `isize`\n-  --> $DIR/uninhabited-enum-cast.rs:4:20\n-   |\n-LL |     println!(\"{}\", (e as isize).to_string());\n-   |                    ^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0605`."}]}