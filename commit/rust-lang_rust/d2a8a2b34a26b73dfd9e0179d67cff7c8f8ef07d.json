{"sha": "d2a8a2b34a26b73dfd9e0179d67cff7c8f8ef07d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyYThhMmIzNGEyNmI3M2RmZDllMDE3OWQ2N2NmZjdjOGY4ZWYwN2Q=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-07-11T18:38:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-11T18:38:32Z"}, "message": "Rollup merge of #51614 - csmoe:lit_sugg, r=estebank\n\nCorrect suggestion for println\n\nCloses https://github.com/rust-lang/rust/issues/51585\nr? @estebank", "tree": {"sha": "fb9d70714923cbcc766b106e20be55bd20da15bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb9d70714923cbcc766b106e20be55bd20da15bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2a8a2b34a26b73dfd9e0179d67cff7c8f8ef07d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbRk6oCRBK7hj4Ov3rIwAAdHIIAAI+3XfesvGpTYsg6VePbKp8\nr0qz0bTouEr+uaALHafCpcMDMvYorPOepyYYp/hvCI257ohToNUAhfvzXuRk06Pp\nUeRK0nXuLER+HyjiaOFJdYQOADHiJbKYt5KYhf65dj9i4PbgPO/eq/1C95h3hEa3\nXWZpTYI9mv1N8Lbeqq/+Vt/KOcmq3kqIqn2JxW4t8X73LkyJOtHS6namSGCtsAWx\nizFLpueyckkvP9aRWq1VW9ymha/I+sOFEIdvKqbmp3qJ73Ip00osAl91dDV8fD45\noi25IOq+laDyL/JA94thPszxqGyd9KEyjDMOawCjBc26Ep8UfkeU3iHlD+BJZJU=\n=Q8WY\n-----END PGP SIGNATURE-----\n", "payload": "tree fb9d70714923cbcc766b106e20be55bd20da15bf\nparent d573fe17786b9c2f5a766498d411d54eee5fa19f\nparent 790c09e8495d74e31073da0a88f1eacdb4a77dee\nauthor Mark Rousskov <mark.simulacrum@gmail.com> 1531334312 -0600\ncommitter GitHub <noreply@github.com> 1531334312 -0600\n\nRollup merge of #51614 - csmoe:lit_sugg, r=estebank\n\nCorrect suggestion for println\n\nCloses https://github.com/rust-lang/rust/issues/51585\nr? @estebank\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2a8a2b34a26b73dfd9e0179d67cff7c8f8ef07d", "html_url": "https://github.com/rust-lang/rust/commit/d2a8a2b34a26b73dfd9e0179d67cff7c8f8ef07d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2a8a2b34a26b73dfd9e0179d67cff7c8f8ef07d/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d573fe17786b9c2f5a766498d411d54eee5fa19f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d573fe17786b9c2f5a766498d411d54eee5fa19f", "html_url": "https://github.com/rust-lang/rust/commit/d573fe17786b9c2f5a766498d411d54eee5fa19f"}, {"sha": "790c09e8495d74e31073da0a88f1eacdb4a77dee", "url": "https://api.github.com/repos/rust-lang/rust/commits/790c09e8495d74e31073da0a88f1eacdb4a77dee", "html_url": "https://github.com/rust-lang/rust/commit/790c09e8495d74e31073da0a88f1eacdb4a77dee"}], "stats": {"total": 67, "additions": 38, "deletions": 29}, "files": [{"sha": "1c6f0089503e20d0e1c003ce45b0467916f6c256", "filename": "src/libsyntax_ext/concat.rs", "status": "modified", "additions": 34, "deletions": 29, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/d2a8a2b34a26b73dfd9e0179d67cff7c8f8ef07d/src%2Flibsyntax_ext%2Fconcat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2a8a2b34a26b73dfd9e0179d67cff7c8f8ef07d/src%2Flibsyntax_ext%2Fconcat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fconcat.rs?ref=d2a8a2b34a26b73dfd9e0179d67cff7c8f8ef07d", "patch": "@@ -12,48 +12,53 @@ use syntax::ast;\n use syntax::ext::base;\n use syntax::ext::build::AstBuilder;\n use syntax::symbol::Symbol;\n-use syntax_pos;\n use syntax::tokenstream;\n+use syntax_pos;\n \n use std::string::String;\n \n-pub fn expand_syntax_ext(cx: &mut base::ExtCtxt,\n-                         sp: syntax_pos::Span,\n-                         tts: &[tokenstream::TokenTree])\n-                         -> Box<base::MacResult + 'static> {\n+pub fn expand_syntax_ext(\n+    cx: &mut base::ExtCtxt,\n+    sp: syntax_pos::Span,\n+    tts: &[tokenstream::TokenTree],\n+) -> Box<base::MacResult + 'static> {\n     let es = match base::get_exprs_from_tts(cx, sp, tts) {\n         Some(e) => e,\n         None => return base::DummyResult::expr(sp),\n     };\n     let mut accumulator = String::new();\n     for e in es {\n         match e.node {\n-            ast::ExprKind::Lit(ref lit) => {\n-                match lit.node {\n-                    ast::LitKind::Str(ref s, _) |\n-                    ast::LitKind::Float(ref s, _) |\n-                    ast::LitKind::FloatUnsuffixed(ref s) => {\n-                        accumulator.push_str(&s.as_str());\n-                    }\n-                    ast::LitKind::Char(c) => {\n-                        accumulator.push(c);\n-                    }\n-                    ast::LitKind::Int(i, ast::LitIntType::Unsigned(_)) |\n-                    ast::LitKind::Int(i, ast::LitIntType::Signed(_)) |\n-                    ast::LitKind::Int(i, ast::LitIntType::Unsuffixed) => {\n-                        accumulator.push_str(&format!(\"{}\", i));\n-                    }\n-                    ast::LitKind::Bool(b) => {\n-                        accumulator.push_str(&format!(\"{}\", b));\n-                    }\n-                    ast::LitKind::Byte(..) |\n-                    ast::LitKind::ByteStr(..) => {\n-                        cx.span_err(e.span, \"cannot concatenate a byte string literal\");\n-                    }\n+            ast::ExprKind::Lit(ref lit) => match lit.node {\n+                ast::LitKind::Str(ref s, _)\n+                | ast::LitKind::Float(ref s, _)\n+                | ast::LitKind::FloatUnsuffixed(ref s) => {\n+                    accumulator.push_str(&s.as_str());\n                 }\n-            }\n+                ast::LitKind::Char(c) => {\n+                    accumulator.push(c);\n+                }\n+                ast::LitKind::Int(i, ast::LitIntType::Unsigned(_))\n+                | ast::LitKind::Int(i, ast::LitIntType::Signed(_))\n+                | ast::LitKind::Int(i, ast::LitIntType::Unsuffixed) => {\n+                    accumulator.push_str(&format!(\"{}\", i));\n+                }\n+                ast::LitKind::Bool(b) => {\n+                    accumulator.push_str(&format!(\"{}\", b));\n+                }\n+                ast::LitKind::Byte(..) | ast::LitKind::ByteStr(..) => {\n+                    cx.span_err(e.span, \"cannot concatenate a byte string literal\");\n+                }\n+            },\n             _ => {\n-                cx.span_err(e.span, \"expected a literal\");\n+                let mut err = cx.struct_span_err(e.span, \"expected a literal\");\n+                let snippet = cx.codemap().span_to_snippet(e.span).unwrap();\n+                err.span_suggestion(\n+                    e.span,\n+                    \"you might be missing a string literal to format with\",\n+                    format!(\"\\\"{{}}\\\", {}\", snippet),\n+                );\n+                err.emit();\n             }\n         }\n     }"}, {"sha": "0bfb060f84416783187b263866d6aa886b2d34f2", "filename": "src/test/ui/macros/bad_hello.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d2a8a2b34a26b73dfd9e0179d67cff7c8f8ef07d/src%2Ftest%2Fui%2Fmacros%2Fbad_hello.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d2a8a2b34a26b73dfd9e0179d67cff7c8f8ef07d/src%2Ftest%2Fui%2Fmacros%2Fbad_hello.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fbad_hello.stderr?ref=d2a8a2b34a26b73dfd9e0179d67cff7c8f8ef07d", "patch": "@@ -3,6 +3,10 @@ error: expected a literal\n    |\n LL |     println!(3 + 4); //~ ERROR expected a literal\n    |              ^^^^^\n+help: you might be missing a string literal to format with\n+   |\n+LL |     println!(\"{}\", 3 + 4); //~ ERROR expected a literal\n+   |              ^^^^^^^^^^^\n \n error: aborting due to previous error\n "}]}