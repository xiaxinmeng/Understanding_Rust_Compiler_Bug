{"sha": "34ffe3cc1c1c9855ecb47479761d812f64436c85", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0ZmZlM2NjMWMxYzk4NTVlY2I0NzQ3OTc2MWQ4MTJmNjQ0MzZjODU=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-02-19T07:27:49Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-02-19T18:32:26Z"}, "message": "rustc: support dumping the AST as JSON\n\nThis is mostly useful for working on rustc, when one is unfamiliar with the\nAST a particular construct will produce. It's a -Z flag as it's very much for\ndebugging.\n\nCloses #10485", "tree": {"sha": "a210ff5ed9fa5b3662c6f62ab68726b0ccf4813e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a210ff5ed9fa5b3662c6f62ab68726b0ccf4813e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34ffe3cc1c1c9855ecb47479761d812f64436c85", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34ffe3cc1c1c9855ecb47479761d812f64436c85", "html_url": "https://github.com/rust-lang/rust/commit/34ffe3cc1c1c9855ecb47479761d812f64436c85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34ffe3cc1c1c9855ecb47479761d812f64436c85/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74f3e0474b382160a6b0aec6e27fe239025519a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/74f3e0474b382160a6b0aec6e27fe239025519a0", "html_url": "https://github.com/rust-lang/rust/commit/74f3e0474b382160a6b0aec6e27fe239025519a0"}], "stats": {"total": 37, "additions": 30, "deletions": 7}, "files": [{"sha": "5edf7a3251c6f5614eb3688e36bb3469b52b3e3f", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/34ffe3cc1c1c9855ecb47479761d812f64436c85/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34ffe3cc1c1c9855ecb47479761d812f64436c85/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=34ffe3cc1c1c9855ecb47479761d812f64436c85", "patch": "@@ -27,6 +27,9 @@ use middle;\n use util::common::time;\n use util::ppaux;\n \n+use extra::json;\n+use serialize::Encodable;\n+\n use std::cell::{Cell, RefCell};\n use std::hashmap::{HashMap,HashSet};\n use std::io;\n@@ -154,7 +157,7 @@ pub enum Input {\n \n pub fn phase_1_parse_input(sess: Session, cfg: ast::CrateConfig, input: &Input)\n     -> ast::Crate {\n-    time(sess.time_passes(), \"parsing\", (), |_| {\n+    let krate = time(sess.time_passes(), \"parsing\", (), |_| {\n         match *input {\n             FileInput(ref file) => {\n                 parse::parse_crate_from_file(&(*file), cfg.clone(), sess.parse_sess)\n@@ -166,7 +169,15 @@ pub fn phase_1_parse_input(sess: Session, cfg: ast::CrateConfig, input: &Input)\n                                                    sess.parse_sess)\n             }\n         }\n-    })\n+    });\n+\n+    if sess.opts.debugging_opts & session::AST_JSON_NOEXPAND != 0 {\n+        let mut stdout = io::stdout();\n+        let mut json = json::PrettyEncoder::new(&mut stdout);\n+        krate.encode(&mut json);\n+    }\n+\n+    krate\n }\n \n // For continuing compilation after a parsed crate has been\n@@ -220,8 +231,16 @@ pub fn phase_2_configure_and_expand(sess: Session,\n     krate = time(time_passes, \"prelude injection\", krate, |krate|\n                  front::std_inject::maybe_inject_prelude(sess, krate));\n \n-    time(time_passes, \"assinging node ids and indexing ast\", krate, |krate|\n-         front::assign_node_ids_and_map::assign_node_ids_and_map(sess, krate))\n+    let (krate, map) = time(time_passes, \"assinging node ids and indexing ast\", krate, |krate|\n+         front::assign_node_ids_and_map::assign_node_ids_and_map(sess, krate));\n+\n+    if sess.opts.debugging_opts & session::AST_JSON != 0 {\n+        let mut stdout = io::stdout();\n+        let mut json = json::PrettyEncoder::new(&mut stdout);\n+        krate.encode(&mut json);\n+    }\n+\n+    (krate, map)\n }\n \n pub struct CrateAnalysis {\n@@ -428,15 +447,15 @@ pub fn stop_after_phase_1(sess: Session) -> bool {\n         debug!(\"invoked with --parse-only, returning early from compile_input\");\n         return true;\n     }\n-    return false;\n+    return sess.opts.debugging_opts & session::AST_JSON_NOEXPAND != 0;\n }\n \n pub fn stop_after_phase_2(sess: Session) -> bool {\n     if sess.opts.no_analysis {\n         debug!(\"invoked with --no-analysis, returning early from compile_input\");\n         return true;\n     }\n-    return false;\n+    return sess.opts.debugging_opts & session::AST_JSON != 0;\n }\n \n pub fn stop_after_phase_5(sess: Session) -> bool {"}, {"sha": "d43a68e4f87fc4417ab0373ded4e14a8b5187a1e", "filename": "src/librustc/driver/session.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/34ffe3cc1c1c9855ecb47479761d812f64436c85/src%2Flibrustc%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34ffe3cc1c1c9855ecb47479761d812f64436c85/src%2Flibrustc%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fsession.rs?ref=34ffe3cc1c1c9855ecb47479761d812f64436c85", "patch": "@@ -65,7 +65,9 @@ debugging_opts!(\n         GC,\n         PRINT_LINK_ARGS,\n         PRINT_LLVM_PASSES,\n-        LTO\n+        LTO,\n+        AST_JSON,\n+        AST_JSON_NOEXPAND\n     ]\n     0\n )\n@@ -97,6 +99,8 @@ pub fn debugging_opts_map() -> ~[(&'static str, &'static str, u64)] {\n       \"Prints the llvm optimization passes being run\",\n       PRINT_LLVM_PASSES),\n      (\"lto\", \"Perform LLVM link-time optimizations\", LTO),\n+     (\"ast-json\", \"Print the AST as JSON and halt\", AST_JSON),\n+     (\"ast-json-noexpand\", \"Print the pre-expansion AST as JSON and halt\", AST_JSON_NOEXPAND),\n     ]\n }\n "}]}