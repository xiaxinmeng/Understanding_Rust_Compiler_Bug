{"sha": "262644d94a8391acc6cb806b62b8de6bc02123f5", "node_id": "C_kwDOAAsO6NoAKDI2MjY0NGQ5NGE4MzkxYWNjNmNiODA2YjYyYjhkZTZiYzAyMTIzZjU", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-07-23T17:43:21Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-12T15:18:40Z"}, "message": "And for closures", "tree": {"sha": "139c61a6a36c1ce36053f3ef9bec085973be67ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/139c61a6a36c1ce36053f3ef9bec085973be67ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/262644d94a8391acc6cb806b62b8de6bc02123f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/262644d94a8391acc6cb806b62b8de6bc02123f5", "html_url": "https://github.com/rust-lang/rust/commit/262644d94a8391acc6cb806b62b8de6bc02123f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/262644d94a8391acc6cb806b62b8de6bc02123f5/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20121fa781e89893ad658cb333a226b81c5543b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/20121fa781e89893ad658cb333a226b81c5543b2", "html_url": "https://github.com/rust-lang/rust/commit/20121fa781e89893ad658cb333a226b81c5543b2"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "0027792442d02282d878a92aba43d9fdc3fb4462", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/checks.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/262644d94a8391acc6cb806b62b8de6bc02123f5/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/262644d94a8391acc6cb806b62b8de6bc02123f5/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs?ref=262644d94a8391acc6cb806b62b8de6bc02123f5", "patch": "@@ -746,7 +746,13 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 format!(\"arguments to this {} are incorrect\", call_name),\n             );\n             // Call out where the function is defined\n-            self.label_fn_like(&mut err, fn_def_id, callee_ty, Some(expected_idx.as_usize()), is_method);\n+            self.label_fn_like(\n+                &mut err,\n+                fn_def_id,\n+                callee_ty,\n+                Some(expected_idx.as_usize()),\n+                is_method,\n+            );\n             err.emit();\n             return;\n         }\n@@ -1896,6 +1902,17 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n             let def_kind = self.tcx.def_kind(def_id);\n             err.span_note(spans, &format!(\"{} defined here\", def_kind.descr(def_id)));\n+        } else if let Some(hir::Node::Expr(e)) = self.tcx.hir().get_if_local(def_id)\n+            && let hir::ExprKind::Closure(hir::Closure { body, .. }) = &e.kind\n+        {\n+            let param = expected_idx\n+                .and_then(|expected_idx| self.tcx.hir().body(*body).params.get(expected_idx));\n+            let (kind, span) = if let Some(param) = param {\n+                (\"closure parameter\", param.span)\n+            } else {\n+                (\"closure\", self.tcx.def_span(def_id))\n+            };\n+            err.span_note(span, &format!(\"{} defined here\", kind));\n         } else {\n             let def_kind = self.tcx.def_kind(def_id);\n             err.span_note("}, {"sha": "c7d7d7d5f25d2061fbe59a0b18f75bdc4ad20094", "filename": "src/test/ui/unboxed-closures/unboxed-closures-type-mismatch.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/262644d94a8391acc6cb806b62b8de6bc02123f5/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-type-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/262644d94a8391acc6cb806b62b8de6bc02123f5/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-type-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-type-mismatch.stderr?ref=262644d94a8391acc6cb806b62b8de6bc02123f5", "patch": "@@ -6,11 +6,11 @@ LL |     let z = f(1_usize, 2);\n    |             |\n    |             arguments to this function are incorrect\n    |\n-note: closure defined here\n-  --> $DIR/unboxed-closures-type-mismatch.rs:4:17\n+note: closure parameter defined here\n+  --> $DIR/unboxed-closures-type-mismatch.rs:4:18\n    |\n LL |     let mut f = |x: isize, y: isize| -> isize { x + y };\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                  ^^^^^^^^^\n help: change the type of the numeric literal from `usize` to `isize`\n    |\n LL |     let z = f(1_isize, 2);"}]}