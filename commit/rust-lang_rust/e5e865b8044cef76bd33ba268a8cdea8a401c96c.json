{"sha": "e5e865b8044cef76bd33ba268a8cdea8a401c96c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1ZTg2NWI4MDQ0Y2VmNzZiZDMzYmEyNjhhOGNkZWE4YTQwMWM5NmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-05-30T19:41:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-05-30T19:41:39Z"}, "message": "auto merge of #14536 : zwarich/rust/issue-14498, r=luqmana\n\nMake check_for_assignment_to_restricted_or_frozen_location treat\r\nmutation through an owning pointer the same way it treats mutation\r\nthrough an &mut pointer, where mutability must be inherited from the\r\nbase path.\r\n\r\nI also included GC pointers in this check, as that is what the\r\ncorresponding code in gather_loans/restrictions.rs does, but I don't\r\nthink there is a way to test this with the current language.\r\n\r\nFixes #14498.", "tree": {"sha": "fa00c7d2eaee3d4a7f72992fd6562b0a8d6a72a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa00c7d2eaee3d4a7f72992fd6562b0a8d6a72a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5e865b8044cef76bd33ba268a8cdea8a401c96c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5e865b8044cef76bd33ba268a8cdea8a401c96c", "html_url": "https://github.com/rust-lang/rust/commit/e5e865b8044cef76bd33ba268a8cdea8a401c96c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5e865b8044cef76bd33ba268a8cdea8a401c96c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24e489f1e1326208aecabf390879c2320f212b7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/24e489f1e1326208aecabf390879c2320f212b7c", "html_url": "https://github.com/rust-lang/rust/commit/24e489f1e1326208aecabf390879c2320f212b7c"}, {"sha": "5aff0e7cec9a3833ea67477bca13efcb4d950db7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5aff0e7cec9a3833ea67477bca13efcb4d950db7", "html_url": "https://github.com/rust-lang/rust/commit/5aff0e7cec9a3833ea67477bca13efcb4d950db7"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "77fad454e6ec4126d04a2e2ef1ad48e0c98fef5a", "filename": "src/librustc/middle/borrowck/check_loans.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5e865b8044cef76bd33ba268a8cdea8a401c96c/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e865b8044cef76bd33ba268a8cdea8a401c96c/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs?ref=e5e865b8044cef76bd33ba268a8cdea8a401c96c", "patch": "@@ -641,6 +641,8 @@ impl<'a> CheckLoanCtxt<'a> {\n                     // with inherited mutability and with `&mut`\n                     // pointers.\n                     LpExtend(ref lp_base, mc::McInherited, _) |\n+                    LpExtend(ref lp_base, _, LpDeref(mc::OwnedPtr)) |\n+                    LpExtend(ref lp_base, _, LpDeref(mc::GcPtr)) |\n                     LpExtend(ref lp_base, _, LpDeref(mc::BorrowedPtr(ty::MutBorrow, _))) => {\n                         lp_base.clone()\n                     }"}, {"sha": "45dda5fee5a32921a1b0a6e46b4f79826c3e5912", "filename": "src/test/compile-fail/borrowck-issue-14498.rs", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/e5e865b8044cef76bd33ba268a8cdea8a401c96c/src%2Ftest%2Fcompile-fail%2Fborrowck-issue-14498.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e865b8044cef76bd33ba268a8cdea8a401c96c/src%2Ftest%2Fcompile-fail%2Fborrowck-issue-14498.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-issue-14498.rs?ref=e5e865b8044cef76bd33ba268a8cdea8a401c96c", "patch": "@@ -0,0 +1,63 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// This tests that we can't modify Box<&mut T> contents while they\n+// are borrowed.\n+\n+struct A { a: int }\n+struct B<'a> { a: Box<&'a mut int> }\n+\n+fn borrow_in_var_from_var() {\n+    let mut x: int = 1;\n+    let y = box &mut x;\n+    let p = &y;\n+    let q = &***p;\n+    **y = 2; //~ ERROR cannot assign to `**y` because it is borrowed\n+    drop(p);\n+    drop(q);\n+}\n+\n+fn borrow_in_var_from_field() {\n+    let mut x = A { a: 1 };\n+    let y = box &mut x.a;\n+    let p = &y;\n+    let q = &***p;\n+    **y = 2; //~ ERROR cannot assign to `**y` because it is borrowed\n+    drop(p);\n+    drop(q);\n+}\n+\n+fn borrow_in_field_from_var() {\n+    let mut x: int = 1;\n+    let y = B { a: box &mut x };\n+    let p = &y.a;\n+    let q = &***p;\n+    **y.a = 2; //~ ERROR cannot assign to `**y.a` because it is borrowed\n+    drop(p);\n+    drop(q);\n+}\n+\n+fn borrow_in_field_from_field() {\n+    let mut x = A { a: 1 };\n+    let y = B { a: box &mut x.a };\n+    let p = &y.a;\n+    let q = &***p;\n+    **y.a = 2; //~ ERROR cannot assign to `**y.a` because it is borrowed\n+    drop(p);\n+    drop(q);\n+}\n+\n+fn main() {\n+    borrow_in_var_from_var();\n+    borrow_in_var_from_field();\n+    borrow_in_field_from_var();\n+    borrow_in_field_from_field();\n+}\n+"}]}