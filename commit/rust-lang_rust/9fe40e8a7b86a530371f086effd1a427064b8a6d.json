{"sha": "9fe40e8a7b86a530371f086effd1a427064b8a6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmZTQwZThhN2I4NmE1MzAzNzFmMDg2ZWZmZDFhNDI3MDY0YjhhNmQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-10-01T22:34:18Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-10-01T22:35:04Z"}, "message": "libcore: Allow the command line arguments to be set on a per-task basis", "tree": {"sha": "c1a96b3d3eb6b88061144e99b3d92e50bcd9520d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1a96b3d3eb6b88061144e99b3d92e50bcd9520d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fe40e8a7b86a530371f086effd1a427064b8a6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fe40e8a7b86a530371f086effd1a427064b8a6d", "html_url": "https://github.com/rust-lang/rust/commit/9fe40e8a7b86a530371f086effd1a427064b8a6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fe40e8a7b86a530371f086effd1a427064b8a6d/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4a7df0cccc36ed00b46462050ec522eadc2a0fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4a7df0cccc36ed00b46462050ec522eadc2a0fc", "html_url": "https://github.com/rust-lang/rust/commit/a4a7df0cccc36ed00b46462050ec522eadc2a0fc"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "58332586fb7b8000396397ab8927068115f5c8f7", "filename": "src/libcore/os.rs", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/9fe40e8a7b86a530371f086effd1a427064b8a6d/src%2Flibcore%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fe40e8a7b86a530371f086effd1a427064b8a6d/src%2Flibcore%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fos.rs?ref=9fe40e8a7b86a530371f086effd1a427064b8a6d", "patch": "@@ -738,7 +738,7 @@ pub fn set_exit_status(code: int) {\n  * Returns a list of the command line arguments.\n  */\n #[cfg(target_os = \"macos\")]\n-pub fn args() -> ~[~str] {\n+fn real_args() -> ~[~str] {\n     unsafe {\n         let (argc, argv) = (*_NSGetArgc() as uint, *_NSGetArgv());\n         let mut args = ~[];\n@@ -749,6 +749,38 @@ pub fn args() -> ~[~str] {\n     }\n }\n \n+#[cfg(target_os = \"linux\")]\n+fn real_args() -> ~[~str] {\n+    fail    // TODO\n+}\n+\n+#[cfg(windows)]\n+fn real_args() -> ~[~str] {\n+    fail    // TODO\n+}\n+\n+struct OverriddenArgs {\n+    val: ~[~str]\n+}\n+\n+fn overridden_arg_key(+v: @OverriddenArgs) {}\n+\n+pub fn args() -> ~[~str] {\n+    unsafe {\n+        match task::local_data::local_data_get(overridden_arg_key) {\n+            None => real_args(),\n+            Some(args) => copy args.val\n+        }\n+    }\n+}\n+\n+pub fn set_args(+new_args: ~[~str]) {\n+    unsafe {\n+        let overridden_args = @OverriddenArgs { val: copy new_args };\n+        task::local_data::local_data_set(overridden_arg_key, overridden_args);\n+    }\n+}\n+\n #[cfg(target_os = \"macos\")]\n extern {\n     // These functions are in crt_externs.h."}]}