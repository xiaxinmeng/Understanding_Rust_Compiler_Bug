{"sha": "f1db60ca9513c1693974f0b27c55d21a39f438b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxZGI2MGNhOTUxM2MxNjkzOTc0ZjBiMjdjNTVkMjFhMzlmNDM4YjA=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-12-06T13:09:03Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-12-06T13:09:03Z"}, "message": "Fix rebase issues", "tree": {"sha": "a791c08d41d27b6da27636507a8bc403f108a2c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a791c08d41d27b6da27636507a8bc403f108a2c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1db60ca9513c1693974f0b27c55d21a39f438b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1db60ca9513c1693974f0b27c55d21a39f438b0", "html_url": "https://github.com/rust-lang/rust/commit/f1db60ca9513c1693974f0b27c55d21a39f438b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1db60ca9513c1693974f0b27c55d21a39f438b0/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "442514884dd8a41ac8967cad857323209c490340", "url": "https://api.github.com/repos/rust-lang/rust/commits/442514884dd8a41ac8967cad857323209c490340", "html_url": "https://github.com/rust-lang/rust/commit/442514884dd8a41ac8967cad857323209c490340"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "814c244ecbc2b6b5dd6ec97107912c8e59b52d84", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f1db60ca9513c1693974f0b27c55d21a39f438b0/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1db60ca9513c1693974f0b27c55d21a39f438b0/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=f1db60ca9513c1693974f0b27c55d21a39f438b0", "patch": "@@ -242,7 +242,7 @@ impl<'tcx> Body<'tcx> {\n     pub fn vars_iter<'a>(&'a self) -> impl Iterator<Item = Local> + 'a {\n         (self.arg_count + 1..self.local_decls.len()).filter_map(move |index| {\n             let local = Local::new(index);\n-            self.local_decls[local].is_user_variable().to_option(local)\n+            self.local_decls[local].is_user_variable().then_some(local)\n         })\n     }\n "}, {"sha": "42b72b64f8a3053ae209ae62294eb59ece03b520", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f1db60ca9513c1693974f0b27c55d21a39f438b0/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1db60ca9513c1693974f0b27c55d21a39f438b0/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=f1db60ca9513c1693974f0b27c55d21a39f438b0", "patch": "@@ -28,7 +28,6 @@ Rust MIR: a lowered representation of Rust. Also: an experiment!\n #![feature(associated_type_bounds)]\n #![feature(range_is_empty)]\n #![feature(stmt_expr_attributes)]\n-#![feature(bool_to_option)]\n #![feature(trait_alias)]\n #![feature(matches_macro)]\n "}, {"sha": "26081d93946640f9d39c118a6b97ab75a705eb80", "filename": "src/librustc_mir/transform/uninhabited_enum_branching.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1db60ca9513c1693974f0b27c55d21a39f438b0/src%2Flibrustc_mir%2Ftransform%2Funinhabited_enum_branching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1db60ca9513c1693974f0b27c55d21a39f438b0/src%2Flibrustc_mir%2Ftransform%2Funinhabited_enum_branching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Funinhabited_enum_branching.rs?ref=f1db60ca9513c1693974f0b27c55d21a39f438b0", "patch": "@@ -29,7 +29,7 @@ fn get_switched_on_type<'tcx>(\n     // Only bother checking blocks which terminate by switching on a local.\n     if let Some(local) = get_discriminant_local(&terminator.kind) {\n         let stmt_before_term = (block_data.statements.len() > 0)\n-            .then_with(|| &block_data.statements[block_data.statements.len() - 1].kind);\n+            .then(|| &block_data.statements[block_data.statements.len() - 1].kind);\n \n         if let Some(StatementKind::Assign(box (l, Rvalue::Discriminant(place)))) = stmt_before_term\n         {\n@@ -59,7 +59,7 @@ fn variant_discriminants<'tcx>(\n             .iter_enumerated()\n             .filter_map(|(idx, layout)| {\n                 (layout.abi != Abi::Uninhabited)\n-                    .then_with(|| ty.discriminant_for_variant(tcx, idx).unwrap().val)\n+                    .then(|| ty.discriminant_for_variant(tcx, idx).unwrap().val)\n             })\n             .collect(),\n     }"}, {"sha": "69050534ee60e8b47dad94163c0c07504ee7c8a6", "filename": "src/librustc_parse/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f1db60ca9513c1693974f0b27c55d21a39f438b0/src%2Flibrustc_parse%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1db60ca9513c1693974f0b27c55d21a39f438b0/src%2Flibrustc_parse%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Flib.rs?ref=f1db60ca9513c1693974f0b27c55d21a39f438b0", "patch": "@@ -1,5 +1,6 @@\n //! The main parser interface.\n \n+#![feature(bool_to_option)]\n #![feature(crate_visibility_modifier)]\n \n use syntax::ast;"}]}