{"sha": "ce8880d1d8b10cfaebc44449a37b6ad9fc628cb9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlODg4MGQxZDhiMTBjZmFlYmM0NDQ0OWEzN2I2YWQ5ZmM2MjhjYjk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-17T09:56:00Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-24T05:28:55Z"}, "message": "defatalize AttrProcMacro::expand", "tree": {"sha": "14cb991da08cd155816aa4a2b274c2365133bbb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14cb991da08cd155816aa4a2b274c2365133bbb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce8880d1d8b10cfaebc44449a37b6ad9fc628cb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce8880d1d8b10cfaebc44449a37b6ad9fc628cb9", "html_url": "https://github.com/rust-lang/rust/commit/ce8880d1d8b10cfaebc44449a37b6ad9fc628cb9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce8880d1d8b10cfaebc44449a37b6ad9fc628cb9/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35cca7421264371dd8962bf52d0fa5cc479e1279", "url": "https://api.github.com/repos/rust-lang/rust/commits/35cca7421264371dd8962bf52d0fa5cc479e1279", "html_url": "https://github.com/rust-lang/rust/commit/35cca7421264371dd8962bf52d0fa5cc479e1279"}], "stats": {"total": 34, "additions": 16, "deletions": 18}, "files": [{"sha": "4947730a4aa7bfd668abf9e48de221c33a79daed", "filename": "src/librustc_expand/base.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ce8880d1d8b10cfaebc44449a37b6ad9fc628cb9/src%2Flibrustc_expand%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce8880d1d8b10cfaebc44449a37b6ad9fc628cb9/src%2Flibrustc_expand%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fbase.rs?ref=ce8880d1d8b10cfaebc44449a37b6ad9fc628cb9", "patch": "@@ -326,7 +326,7 @@ pub trait AttrProcMacro {\n         span: Span,\n         annotation: TokenStream,\n         annotated: TokenStream,\n-    ) -> TokenStream;\n+    ) -> Result<TokenStream, ErrorReported>;\n }\n \n impl<F> AttrProcMacro for F\n@@ -339,9 +339,9 @@ where\n         _span: Span,\n         annotation: TokenStream,\n         annotated: TokenStream,\n-    ) -> TokenStream {\n+    ) -> Result<TokenStream, ErrorReported> {\n         // FIXME setup implicit context in TLS before calling self.\n-        (*self)(annotation, annotated)\n+        Ok((*self)(annotation, annotated))\n     }\n }\n "}, {"sha": "cbb695a815ac5622024702881810e68d4c5d1583", "filename": "src/librustc_expand/expand.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ce8880d1d8b10cfaebc44449a37b6ad9fc628cb9/src%2Flibrustc_expand%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce8880d1d8b10cfaebc44449a37b6ad9fc628cb9/src%2Flibrustc_expand%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fexpand.rs?ref=ce8880d1d8b10cfaebc44449a37b6ad9fc628cb9", "patch": "@@ -712,8 +712,11 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n                     if let MacArgs::Eq(..) = attr_item.args {\n                         self.cx.span_err(span, \"key-value macro attributes are not supported\");\n                     }\n-                    let tok_result =\n-                        expander.expand(self.cx, span, attr_item.args.inner_tokens(), tokens);\n+                    let inner_tokens = attr_item.args.inner_tokens();\n+                    let tok_result = match expander.expand(self.cx, span, inner_tokens, tokens) {\n+                        Err(_) => return ExpandResult::Ready(fragment_kind.dummy(span)),\n+                        Ok(ts) => ts,\n+                    };\n                     self.parse_ast_fragment(tok_result, fragment_kind, &attr_item.path, span)\n                 }\n                 SyntaxExtensionKind::LegacyAttr(expander) => {"}, {"sha": "40b5e63756be7777910a3f94e73ebdcfb4b5c8f0", "filename": "src/librustc_expand/proc_macro.rs", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ce8880d1d8b10cfaebc44449a37b6ad9fc628cb9/src%2Flibrustc_expand%2Fproc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce8880d1d8b10cfaebc44449a37b6ad9fc628cb9/src%2Flibrustc_expand%2Fproc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fproc_macro.rs?ref=ce8880d1d8b10cfaebc44449a37b6ad9fc628cb9", "patch": "@@ -45,21 +45,16 @@ impl base::AttrProcMacro for AttrProcMacro {\n         span: Span,\n         annotation: TokenStream,\n         annotated: TokenStream,\n-    ) -> TokenStream {\n+    ) -> Result<TokenStream, ErrorReported> {\n         let server = proc_macro_server::Rustc::new(ecx);\n-        match self.client.run(&EXEC_STRATEGY, server, annotation, annotated) {\n-            Ok(stream) => stream,\n-            Err(e) => {\n-                let msg = \"custom attribute panicked\";\n-                let mut err = ecx.struct_span_fatal(span, msg);\n-                if let Some(s) = e.as_str() {\n-                    err.help(&format!(\"message: {}\", s));\n-                }\n-\n-                err.emit();\n-                FatalError.raise();\n+        self.client.run(&EXEC_STRATEGY, server, annotation, annotated).map_err(|e| {\n+            let mut err = ecx.struct_span_err(span, \"custom attribute panicked\");\n+            if let Some(s) = e.as_str() {\n+                err.help(&format!(\"message: {}\", s));\n             }\n-        }\n+            err.emit();\n+            ErrorReported\n+        })\n     }\n }\n "}]}