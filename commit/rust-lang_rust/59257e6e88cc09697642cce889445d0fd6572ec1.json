{"sha": "59257e6e88cc09697642cce889445d0fd6572ec1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5MjU3ZTZlODhjYzA5Njk3NjQyY2NlODg5NDQ1ZDBmZDY1NzJlYzE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-23T06:06:27Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-23T06:06:27Z"}, "message": "make `./x.py bench` again", "tree": {"sha": "c6ef8fabf1ea34882b034764d1c6772ca90ac0fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6ef8fabf1ea34882b034764d1c6772ca90ac0fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59257e6e88cc09697642cce889445d0fd6572ec1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59257e6e88cc09697642cce889445d0fd6572ec1", "html_url": "https://github.com/rust-lang/rust/commit/59257e6e88cc09697642cce889445d0fd6572ec1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59257e6e88cc09697642cce889445d0fd6572ec1/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a449535bbc7912c4adc1bbf2ab2738d0442f212c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a449535bbc7912c4adc1bbf2ab2738d0442f212c", "html_url": "https://github.com/rust-lang/rust/commit/a449535bbc7912c4adc1bbf2ab2738d0442f212c"}], "stats": {"total": 128, "additions": 63, "deletions": 65}, "files": [{"sha": "2dcdf2b6fe9f71e60080c0e66cf07abaa2f408fe", "filename": "src/libcore/benches/num/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/59257e6e88cc09697642cce889445d0fd6572ec1/src%2Flibcore%2Fbenches%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59257e6e88cc09697642cce889445d0fd6572ec1/src%2Flibcore%2Fbenches%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fbenches%2Fnum%2Fmod.rs?ref=59257e6e88cc09697642cce889445d0fd6572ec1", "patch": "@@ -35,7 +35,7 @@ macro_rules! from_str_bench {\n                     .iter()\n                     .cycle()\n                     .take(5_000)\n-                    .filter_map(|s| <($t)>::from_str(s).ok())\n+                    .filter_map(|s| <$t>::from_str(s).ok())\n                     .max()\n             })\n         }\n@@ -51,7 +51,7 @@ macro_rules! from_str_radix_bench {\n                     .iter()\n                     .cycle()\n                     .take(5_000)\n-                    .filter_map(|s| <($t)>::from_str_radix(s, $radix).ok())\n+                    .filter_map(|s| <$t>::from_str_radix(s, $radix).ok())\n                     .max()\n             })\n         }"}, {"sha": "e3b36be5696b3ca1d44d1fa35b46ee2f57b4a85c", "filename": "src/librustc/benches/dispatch.rs", "status": "removed", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/a449535bbc7912c4adc1bbf2ab2738d0442f212c/src%2Flibrustc%2Fbenches%2Fdispatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a449535bbc7912c4adc1bbf2ab2738d0442f212c/src%2Flibrustc%2Fbenches%2Fdispatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fbenches%2Fdispatch.rs?ref=a449535bbc7912c4adc1bbf2ab2738d0442f212c", "patch": "@@ -1,34 +0,0 @@\n-use test::Bencher;\n-\n-// Static/dynamic method dispatch\n-\n-struct Struct {\n-    field: isize\n-}\n-\n-trait Trait {\n-    fn method(&self) -> isize;\n-}\n-\n-impl Trait for Struct {\n-    fn method(&self) -> isize {\n-        self.field\n-    }\n-}\n-\n-#[bench]\n-fn trait_vtable_method_call(b: &mut Bencher) {\n-    let s = Struct { field: 10 };\n-    let t = &s as &Trait;\n-    b.iter(|| {\n-        t.method()\n-    });\n-}\n-\n-#[bench]\n-fn trait_static_method_call(b: &mut Bencher) {\n-    let s = Struct { field: 10 };\n-    b.iter(|| {\n-        s.method()\n-    });\n-}"}, {"sha": "6b624028896ac15c8628e1c1d8135cbca02d5995", "filename": "src/librustc/benches/lib.rs", "status": "modified", "additions": 59, "deletions": 2, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/59257e6e88cc09697642cce889445d0fd6572ec1/src%2Flibrustc%2Fbenches%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59257e6e88cc09697642cce889445d0fd6572ec1/src%2Flibrustc%2Fbenches%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fbenches%2Flib.rs?ref=59257e6e88cc09697642cce889445d0fd6572ec1", "patch": "@@ -1,6 +1,63 @@\n+#![feature(slice_patterns)]\n #![feature(test)]\n \n extern crate test;\n \n-mod dispatch;\n-mod pattern;\n+use test::Bencher;\n+\n+// Static/dynamic method dispatch\n+\n+struct Struct {\n+    field: isize\n+}\n+\n+trait Trait {\n+    fn method(&self) -> isize;\n+}\n+\n+impl Trait for Struct {\n+    fn method(&self) -> isize {\n+        self.field\n+    }\n+}\n+\n+#[bench]\n+fn trait_vtable_method_call(b: &mut Bencher) {\n+    let s = Struct { field: 10 };\n+    let t = &s as &dyn Trait;\n+    b.iter(|| {\n+        t.method()\n+    });\n+}\n+\n+#[bench]\n+fn trait_static_method_call(b: &mut Bencher) {\n+    let s = Struct { field: 10 };\n+    b.iter(|| {\n+        s.method()\n+    });\n+}\n+\n+// Overhead of various match forms\n+\n+#[bench]\n+fn option_some(b: &mut Bencher) {\n+    let x = Some(10);\n+    b.iter(|| {\n+        match x {\n+            Some(y) => y,\n+            None => 11\n+        }\n+    });\n+}\n+\n+#[bench]\n+fn vec_pattern(b: &mut Bencher) {\n+    let x = [1,2,3,4,5,6];\n+    b.iter(|| {\n+        match x {\n+            [1,2,3,..] => 10,\n+            _ => 11,\n+        }\n+    });\n+}"}, {"sha": "fd8cc5b83fd5a85ce2cbdd18642c3dfba17a4226", "filename": "src/librustc/benches/pattern.rs", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a449535bbc7912c4adc1bbf2ab2738d0442f212c/src%2Flibrustc%2Fbenches%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a449535bbc7912c4adc1bbf2ab2738d0442f212c/src%2Flibrustc%2Fbenches%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fbenches%2Fpattern.rs?ref=a449535bbc7912c4adc1bbf2ab2738d0442f212c", "patch": "@@ -1,25 +0,0 @@\n-use test::Bencher;\n-\n-// Overhead of various match forms\n-\n-#[bench]\n-fn option_some(b: &mut Bencher) {\n-    let x = Some(10);\n-    b.iter(|| {\n-        match x {\n-            Some(y) => y,\n-            None => 11\n-        }\n-    });\n-}\n-\n-#[bench]\n-fn vec_pattern(b: &mut Bencher) {\n-    let x = [1,2,3,4,5,6];\n-    b.iter(|| {\n-        match x {\n-            [1,2,3,..] => 10,\n-            _ => 11,\n-        }\n-    });\n-}"}, {"sha": "e8457fe0e19eadfebcf2336d4dbd269e907589b7", "filename": "src/librustc_codegen_ssa/back/rpath/tests.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/59257e6e88cc09697642cce889445d0fd6572ec1/src%2Flibrustc_codegen_ssa%2Fback%2Frpath%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59257e6e88cc09697642cce889445d0fd6572ec1/src%2Flibrustc_codegen_ssa%2Fback%2Frpath%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Frpath%2Ftests.rs?ref=59257e6e88cc09697642cce889445d0fd6572ec1", "patch": "@@ -52,7 +52,7 @@ fn test_minimize2() {\n fn test_rpath_relative() {\n     if cfg!(target_os = \"macos\") {\n         let config = &mut RPathConfig {\n-            used_crates: Vec::new(),\n+            used_crates: &[],\n             has_rpath: true,\n             is_like_osx: true,\n             linker_is_gnu: false,\n@@ -64,7 +64,7 @@ fn test_rpath_relative() {\n         assert_eq!(res, \"@loader_path/../lib\");\n     } else {\n         let config = &mut RPathConfig {\n-            used_crates: Vec::new(),\n+            used_crates: &[],\n             out_filename: PathBuf::from(\"bin/rustc\"),\n             get_install_prefix_lib_path: &mut || panic!(),\n             has_rpath: true,"}]}