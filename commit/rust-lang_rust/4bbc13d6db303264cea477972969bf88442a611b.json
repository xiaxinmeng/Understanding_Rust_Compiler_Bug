{"sha": "4bbc13d6db303264cea477972969bf88442a611b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiYmMxM2Q2ZGIzMDMyNjRjZWE0Nzc5NzI5NjliZjg4NDQyYTYxMWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-24T00:04:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-24T00:04:34Z"}, "message": "auto merge of #6705 : brson/rust/issue-5192, r=catamorphism\n\nr? @catamorphism \r\n\r\nThis could probably refactored to more closely mirror the code for `@objects`, but I'm not inclined to do so.", "tree": {"sha": "8d1055ad5014fae5b21c37d31d84fb37d8b3d8e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d1055ad5014fae5b21c37d31d84fb37d8b3d8e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bbc13d6db303264cea477972969bf88442a611b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bbc13d6db303264cea477972969bf88442a611b", "html_url": "https://github.com/rust-lang/rust/commit/4bbc13d6db303264cea477972969bf88442a611b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bbc13d6db303264cea477972969bf88442a611b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d49d0f82d9acf434a4107515d79d01f297f32430", "url": "https://api.github.com/repos/rust-lang/rust/commits/d49d0f82d9acf434a4107515d79d01f297f32430", "html_url": "https://github.com/rust-lang/rust/commit/d49d0f82d9acf434a4107515d79d01f297f32430"}, {"sha": "d213443a67c8dbef562ad207c62308e57c230511", "url": "https://api.github.com/repos/rust-lang/rust/commits/d213443a67c8dbef562ad207c62308e57c230511", "html_url": "https://github.com/rust-lang/rust/commit/d213443a67c8dbef562ad207c62308e57c230511"}], "stats": {"total": 55, "additions": 41, "deletions": 14}, "files": [{"sha": "ed46ab0ce3797cc1165a1eb7db52f30e518dcd27", "filename": "src/librustc/middle/trans/glue.rs", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/4bbc13d6db303264cea477972969bf88442a611b/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bbc13d6db303264cea477972969bf88442a611b/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs?ref=4bbc13d6db303264cea477972969bf88442a611b", "patch": "@@ -546,20 +546,23 @@ pub fn make_drop_glue(bcx: block, v0: ValueRef, t: ty::t) {\n         decr_refcnt_maybe_free(bcx, llbox, ty::mk_opaque_box(ccx.tcx))\n       }\n       ty::ty_trait(_, _, ty::UniqTraitStore, _) => {\n-        let lluniquevalue = GEPi(bcx, v0, [0, abi::trt_field_box]);\n-        let llvtable = Load(bcx, GEPi(bcx, v0, [0, abi::trt_field_vtable]));\n-\n-        // Cast the vtable to a pointer to a pointer to a tydesc.\n-        let llvtable = PointerCast(bcx,\n-                                   llvtable,\n-                                   T_ptr(T_ptr(ccx.tydesc_type)));\n-        let lltydesc = Load(bcx, llvtable);\n-        call_tydesc_glue_full(bcx,\n-                              lluniquevalue,\n-                              lltydesc,\n-                              abi::tydesc_field_free_glue,\n-                              None);\n-        bcx\n+          let lluniquevalue = GEPi(bcx, v0, [0, abi::trt_field_box]);\n+          // Only drop the value when it is non-null\n+          do with_cond(bcx, IsNotNull(bcx, Load(bcx, lluniquevalue))) |bcx| {\n+              let llvtable = Load(bcx, GEPi(bcx, v0, [0, abi::trt_field_vtable]));\n+\n+              // Cast the vtable to a pointer to a pointer to a tydesc.\n+              let llvtable = PointerCast(bcx,\n+                                         llvtable,\n+                                         T_ptr(T_ptr(ccx.tydesc_type)));\n+              let lltydesc = Load(bcx, llvtable);\n+              call_tydesc_glue_full(bcx,\n+                                    lluniquevalue,\n+                                    lltydesc,\n+                                    abi::tydesc_field_free_glue,\n+                                    None);\n+              bcx\n+          }\n       }\n       ty::ty_opaque_closure_ptr(ck) => {\n         closure::make_opaque_cbox_drop_glue(bcx, ck, v0)"}, {"sha": "540de1652138b3b8e7663ba734f961db9f9f2e27", "filename": "src/test/run-pass/unique-object-move.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4bbc13d6db303264cea477972969bf88442a611b/src%2Ftest%2Frun-pass%2Funique-object-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bbc13d6db303264cea477972969bf88442a611b/src%2Ftest%2Frun-pass%2Funique-object-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-object-move.rs?ref=4bbc13d6db303264cea477972969bf88442a611b", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Issue #5192\n+\n+pub trait EventLoop { }\n+\n+pub struct UvEventLoop {\n+    uvio: int\n+}\n+\n+impl EventLoop for UvEventLoop { }\n+\n+pub fn main() {\n+    let loop_: ~EventLoop = ~UvEventLoop { uvio: 0 } as ~EventLoop;\n+    let loop2_ = loop_;\n+}\n\\ No newline at end of file"}]}