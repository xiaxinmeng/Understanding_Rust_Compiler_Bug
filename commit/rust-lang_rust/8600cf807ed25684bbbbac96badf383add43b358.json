{"sha": "8600cf807ed25684bbbbac96badf383add43b358", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2MDBjZjgwN2VkMjU2ODRiYmJiYWM5NmJhZGYzODNhZGQ0M2IzNTg=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-12-28T13:22:03Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-12-28T13:22:03Z"}, "message": "Add tests", "tree": {"sha": "760ad4cd602ce3f4301436baf1af9de39c199dfb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/760ad4cd602ce3f4301436baf1af9de39c199dfb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8600cf807ed25684bbbbac96badf383add43b358", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8600cf807ed25684bbbbac96badf383add43b358", "html_url": "https://github.com/rust-lang/rust/commit/8600cf807ed25684bbbbac96badf383add43b358", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8600cf807ed25684bbbbac96badf383add43b358/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4c3f753d23752a9fbb01bdf1cd92a8cb1f6681e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4c3f753d23752a9fbb01bdf1cd92a8cb1f6681e", "html_url": "https://github.com/rust-lang/rust/commit/e4c3f753d23752a9fbb01bdf1cd92a8cb1f6681e"}], "stats": {"total": 73, "additions": 71, "deletions": 2}, "files": [{"sha": "fcbb3ac146a48fc0283b37c2c3adb9019073ee6b", "filename": "crates/hir_def/src/import_map.rs", "status": "modified", "additions": 71, "deletions": 2, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/8600cf807ed25684bbbbac96badf383add43b358/crates%2Fhir_def%2Fsrc%2Fimport_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8600cf807ed25684bbbbac96badf383add43b358/crates%2Fhir_def%2Fsrc%2Fimport_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fimport_map.rs?ref=8600cf807ed25684bbbbac96badf383add43b358", "patch": "@@ -729,7 +729,7 @@ mod tests {\n     }\n \n     #[test]\n-    fn search() {\n+    fn search_mode() {\n         let ra_fixture = r#\"\n             //- /main.rs crate:main deps:dep\n             //- /dep.rs crate:dep deps:tdep\n@@ -772,7 +772,76 @@ mod tests {\n         check_search(\n             ra_fixture,\n             \"main\",\n-            Query::new(\"fmt\").name_only().search_mode(SearchMode::Equals),\n+            Query::new(\"fmt\").search_mode(SearchMode::Equals),\n+            expect![[r#\"\n+                dep::fmt (t)\n+                dep::Fmt (t)\n+                dep::Fmt (v)\n+                dep::Fmt (m)\n+                dep::fmt::Display (t)\n+            \"#]],\n+        );\n+\n+        check_search(\n+            ra_fixture,\n+            \"main\",\n+            Query::new(\"fmt\").search_mode(SearchMode::Contains),\n+            expect![[r#\"\n+                dep::fmt (t)\n+                dep::Fmt (t)\n+                dep::Fmt (v)\n+                dep::Fmt (m)\n+                dep::fmt::Display (t)\n+                dep::fmt::Display (t)\n+            \"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn name_only() {\n+        let ra_fixture = r#\"\n+            //- /main.rs crate:main deps:dep\n+            //- /dep.rs crate:dep deps:tdep\n+            use tdep::fmt as fmt_dep;\n+            pub mod fmt {\n+                pub trait Display {\n+                    fn fmt();\n+                }\n+            }\n+            #[macro_export]\n+            macro_rules! Fmt {\n+                () => {};\n+            }\n+            pub struct Fmt;\n+\n+            pub fn format() {}\n+            pub fn no() {}\n+\n+            //- /tdep.rs crate:tdep\n+            pub mod fmt {\n+                pub struct NotImportableFromMain;\n+            }\n+        \"#;\n+\n+        check_search(\n+            ra_fixture,\n+            \"main\",\n+            Query::new(\"fmt\"),\n+            expect![[r#\"\n+                dep::fmt (t)\n+                dep::Fmt (t)\n+                dep::Fmt (v)\n+                dep::Fmt (m)\n+                dep::fmt::Display (t)\n+                dep::fmt::Display (t)\n+            \"#]],\n+        );\n+\n+        // TODO kb where does this duplicate `dep::fmt::Display (t)` come from?\n+        check_search(\n+            ra_fixture,\n+            \"main\",\n+            Query::new(\"fmt\").name_only(),\n             expect![[r#\"\n                 dep::fmt (t)\n                 dep::Fmt (t)"}]}