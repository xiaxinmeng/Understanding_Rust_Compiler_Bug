{"sha": "af10a456c19c447ff2bff585537d52a8d532bd86", "node_id": "C_kwDOAAsO6NoAKGFmMTBhNDU2YzE5YzQ0N2ZmMmJmZjU4NTUzN2Q1MmE4ZDUzMmJkODY", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-07-01T23:47:26Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-07-07T19:15:12Z"}, "message": "Track implicit `Sized` obligations in type params\n\nSuggest adding a `?Sized` bound if appropriate on E0599 by inspecting\nthe HIR Generics. (Fix #98539)", "tree": {"sha": "dfb4e9c247c42c7c495430f03b9bdda1013e749f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfb4e9c247c42c7c495430f03b9bdda1013e749f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af10a456c19c447ff2bff585537d52a8d532bd86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af10a456c19c447ff2bff585537d52a8d532bd86", "html_url": "https://github.com/rust-lang/rust/commit/af10a456c19c447ff2bff585537d52a8d532bd86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af10a456c19c447ff2bff585537d52a8d532bd86/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5642acfe689ca704b8572ea8ca88e43aeb70a11", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5642acfe689ca704b8572ea8ca88e43aeb70a11", "html_url": "https://github.com/rust-lang/rust/commit/d5642acfe689ca704b8572ea8ca88e43aeb70a11"}], "stats": {"total": 337, "additions": 213, "deletions": 124}, "files": [{"sha": "7bf167426f7480cd5badf1b06051ecc2e1d1455d", "filename": "compiler/rustc_typeck/src/check/method/suggest.rs", "status": "modified", "additions": 39, "deletions": 12, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -348,9 +348,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         let type_param = generics.type_param(param_type, self.tcx);\n                         Some(self.tcx.def_span(type_param.def_id))\n                     }\n-                    ty::Adt(def, _) if def.did().is_local() => {\n-                        tcx.def_ident_span(def.did()).map(|span| span)\n-                    }\n+                    ty::Adt(def, _) if def.did().is_local() => Some(tcx.def_span(def.did())),\n                     _ => None,\n                 };\n \n@@ -621,12 +619,12 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     // Find all the requirements that come from a local `impl` block.\n                     let mut skip_list: FxHashSet<_> = Default::default();\n                     let mut spanned_predicates: FxHashMap<MultiSpan, _> = Default::default();\n-                    for (data, p, parent_p, impl_def_id, cause_span) in unsatisfied_predicates\n+                    for (data, p, parent_p, impl_def_id, cause) in unsatisfied_predicates\n                         .iter()\n                         .filter_map(|(p, parent, c)| c.as_ref().map(|c| (p, parent, c)))\n                         .filter_map(|(p, parent, c)| match c.code() {\n                             ObligationCauseCode::ImplDerivedObligation(ref data) => {\n-                                Some((&data.derived, p, parent, data.impl_def_id, data.span))\n+                                Some((&data.derived, p, parent, data.impl_def_id, data))\n                             }\n                             _ => None,\n                         })\n@@ -695,9 +693,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                     let _ = format_pred(*pred);\n                                 }\n                                 skip_list.insert(p);\n-                                let mut spans = if cause_span != *item_span {\n-                                    let mut spans: MultiSpan = cause_span.into();\n-                                    spans.push_span_label(cause_span, unsatisfied_msg);\n+                                let mut spans = if cause.span != *item_span {\n+                                    let mut spans: MultiSpan = cause.span.into();\n+                                    spans.push_span_label(cause.span, unsatisfied_msg);\n                                     spans\n                                 } else {\n                                     ident.span.into()\n@@ -709,7 +707,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n                             // Unmet obligation coming from an `impl`.\n                             Some(Node::Item(hir::Item {\n-                                kind: hir::ItemKind::Impl(hir::Impl { of_trait, self_ty, .. }),\n+                                kind:\n+                                    hir::ItemKind::Impl(hir::Impl {\n+                                        of_trait, self_ty, generics, ..\n+                                    }),\n                                 span: item_span,\n                                 ..\n                             })) if !matches!(\n@@ -725,14 +726,40 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                 Some(ExpnKind::Macro(MacroKind::Derive, _))\n                             ) =>\n                             {\n+                                let sized_pred =\n+                                    unsatisfied_predicates.iter().any(|(pred, _, _)| {\n+                                        match pred.kind().skip_binder() {\n+                                            ty::PredicateKind::Trait(pred) => {\n+                                                Some(pred.def_id())\n+                                                    == self.tcx.lang_items().sized_trait()\n+                                                    && pred.polarity == ty::ImplPolarity::Positive\n+                                            }\n+                                            _ => false,\n+                                        }\n+                                    });\n+                                for param in generics.params {\n+                                    if param.span == cause.span && sized_pred {\n+                                        let (sp, sugg) = match param.colon_span {\n+                                            Some(sp) => (sp.shrink_to_hi(), \" ?Sized +\"),\n+                                            None => (param.span.shrink_to_hi(), \": ?Sized\"),\n+                                        };\n+                                        err.span_suggestion_verbose(\n+                                            sp,\n+                                            \"consider relaxing the type parameter's implicit \\\n+                                             `Sized` bound\",\n+                                            sugg,\n+                                            Applicability::MachineApplicable,\n+                                        );\n+                                    }\n+                                }\n                                 if let Some(pred) = parent_p {\n                                     // Done to add the \"doesn't satisfy\" `span_label`.\n                                     let _ = format_pred(*pred);\n                                 }\n                                 skip_list.insert(p);\n-                                let mut spans = if cause_span != *item_span {\n-                                    let mut spans: MultiSpan = cause_span.into();\n-                                    spans.push_span_label(cause_span, unsatisfied_msg);\n+                                let mut spans = if cause.span != *item_span {\n+                                    let mut spans: MultiSpan = cause.span.into();\n+                                    spans.push_span_label(cause.span, unsatisfied_msg);\n                                     spans\n                                 } else {\n                                     let mut spans = Vec::with_capacity(2);"}, {"sha": "ebf3c5499a68ba429bbd417f49bb99c941fadc2b", "filename": "src/test/ui/associated-item/associated-item-enum.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fassociated-item%2Fassociated-item-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fassociated-item%2Fassociated-item-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-item%2Fassociated-item-enum.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no variant or associated item named `mispellable` found for enum `\n   --> $DIR/associated-item-enum.rs:17:11\n    |\n LL | enum Enum { Variant }\n-   |      ---- variant or associated item `mispellable` not found for this enum\n+   | --------- variant or associated item `mispellable` not found for this enum\n ...\n LL |     Enum::mispellable();\n    |           ^^^^^^^^^^^\n@@ -14,7 +14,7 @@ error[E0599]: no variant or associated item named `mispellable_trait` found for\n   --> $DIR/associated-item-enum.rs:18:11\n    |\n LL | enum Enum { Variant }\n-   |      ---- variant or associated item `mispellable_trait` not found for this enum\n+   | --------- variant or associated item `mispellable_trait` not found for this enum\n ...\n LL |     Enum::mispellable_trait();\n    |           ^^^^^^^^^^^^^^^^^\n@@ -26,7 +26,7 @@ error[E0599]: no variant or associated item named `MISPELLABLE` found for enum `\n   --> $DIR/associated-item-enum.rs:19:11\n    |\n LL | enum Enum { Variant }\n-   |      ---- variant or associated item `MISPELLABLE` not found for this enum\n+   | --------- variant or associated item `MISPELLABLE` not found for this enum\n ...\n LL |     Enum::MISPELLABLE;\n    |           ^^^^^^^^^^^"}, {"sha": "2e8723b2743a79062274a8c25f471193dcaec66a", "filename": "src/test/ui/async-await/pin-needed-to-poll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fasync-await%2Fpin-needed-to-poll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fasync-await%2Fpin-needed-to-poll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fpin-needed-to-poll.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `poll` found for struct `Sleep` in the current sco\n   --> $DIR/pin-needed-to-poll.rs:42:20\n    |\n LL | struct Sleep;\n-   |        ----- method `poll` not found for this struct\n+   | ------------ method `poll` not found for this struct\n ...\n LL |         self.sleep.poll(cx)\n    |                    ^^^^ method not found in `Sleep`"}, {"sha": "899ff4261ba3bef961b4ffe2bb1db3950f9706b1", "filename": "src/test/ui/bogus-tag.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fbogus-tag.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fbogus-tag.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbogus-tag.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no variant or associated item named `Hsl` found for enum `Color` i\n   --> $DIR/bogus-tag.rs:7:16\n    |\n LL | enum Color { Rgb(isize, isize, isize), Rgba(isize, isize, isize, isize), }\n-   |      ----- variant or associated item `Hsl` not found for this enum\n+   | ---------- variant or associated item `Hsl` not found for this enum\n ...\n LL |         Color::Hsl(h, s, l) => { println!(\"hsl\"); }\n    |                ^^^ variant or associated item not found in `Color`"}, {"sha": "1c9a6847ceb4f5c96f64bfdf7f19393f965e82e3", "filename": "src/test/ui/confuse-field-and-method/issue-18343.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fconfuse-field-and-method%2Fissue-18343.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fconfuse-field-and-method%2Fissue-18343.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconfuse-field-and-method%2Fissue-18343.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `closure` found for struct `Obj` in the current sc\n   --> $DIR/issue-18343.rs:7:7\n    |\n LL | struct Obj<F> where F: FnMut() -> u32 {\n-   |        --- method `closure` not found for this struct\n+   | ------------- method `closure` not found for this struct\n ...\n LL |     o.closure();\n    |       ^^^^^^^ field, not a method"}, {"sha": "440fbb27c0040ef1bea903cecd3856c8fee1d33f", "filename": "src/test/ui/confuse-field-and-method/issue-2392.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fconfuse-field-and-method%2Fissue-2392.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fconfuse-field-and-method%2Fissue-2392.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconfuse-field-and-method%2Fissue-2392.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `closure` found for struct `Obj` in the current sc\n   --> $DIR/issue-2392.rs:36:15\n    |\n LL | struct Obj<F> where F: FnOnce() -> u32 {\n-   |        --- method `closure` not found for this struct\n+   | ------------- method `closure` not found for this struct\n ...\n LL |     o_closure.closure();\n    |               ^^^^^^^ field, not a method\n@@ -16,7 +16,7 @@ error[E0599]: no method named `not_closure` found for struct `Obj` in the curren\n   --> $DIR/issue-2392.rs:38:15\n    |\n LL | struct Obj<F> where F: FnOnce() -> u32 {\n-   |        --- method `not_closure` not found for this struct\n+   | ------------- method `not_closure` not found for this struct\n ...\n LL |     o_closure.not_closure();\n    |               ^^^^^^^^^^^-- help: remove the arguments\n@@ -27,7 +27,7 @@ error[E0599]: no method named `closure` found for struct `Obj` in the current sc\n   --> $DIR/issue-2392.rs:42:12\n    |\n LL | struct Obj<F> where F: FnOnce() -> u32 {\n-   |        --- method `closure` not found for this struct\n+   | ------------- method `closure` not found for this struct\n ...\n LL |     o_func.closure();\n    |            ^^^^^^^ field, not a method\n@@ -41,7 +41,7 @@ error[E0599]: no method named `boxed_closure` found for struct `BoxedObj` in the\n   --> $DIR/issue-2392.rs:45:14\n    |\n LL | struct BoxedObj {\n-   |        -------- method `boxed_closure` not found for this struct\n+   | --------------- method `boxed_closure` not found for this struct\n ...\n LL |     boxed_fn.boxed_closure();\n    |              ^^^^^^^^^^^^^ field, not a method\n@@ -55,7 +55,7 @@ error[E0599]: no method named `boxed_closure` found for struct `BoxedObj` in the\n   --> $DIR/issue-2392.rs:48:19\n    |\n LL | struct BoxedObj {\n-   |        -------- method `boxed_closure` not found for this struct\n+   | --------------- method `boxed_closure` not found for this struct\n ...\n LL |     boxed_closure.boxed_closure();\n    |                   ^^^^^^^^^^^^^ field, not a method\n@@ -69,7 +69,7 @@ error[E0599]: no method named `closure` found for struct `Obj` in the current sc\n   --> $DIR/issue-2392.rs:53:12\n    |\n LL | struct Obj<F> where F: FnOnce() -> u32 {\n-   |        --- method `closure` not found for this struct\n+   | ------------- method `closure` not found for this struct\n ...\n LL |     w.wrap.closure();\n    |            ^^^^^^^ field, not a method\n@@ -83,7 +83,7 @@ error[E0599]: no method named `not_closure` found for struct `Obj` in the curren\n   --> $DIR/issue-2392.rs:55:12\n    |\n LL | struct Obj<F> where F: FnOnce() -> u32 {\n-   |        --- method `not_closure` not found for this struct\n+   | ------------- method `not_closure` not found for this struct\n ...\n LL |     w.wrap.not_closure();\n    |            ^^^^^^^^^^^-- help: remove the arguments\n@@ -94,7 +94,7 @@ error[E0599]: no method named `closure` found for struct `Obj` in the current sc\n   --> $DIR/issue-2392.rs:58:24\n    |\n LL | struct Obj<F> where F: FnOnce() -> u32 {\n-   |        --- method `closure` not found for this struct\n+   | ------------- method `closure` not found for this struct\n ...\n LL |     check_expression().closure();\n    |                        ^^^^^^^ field, not a method\n@@ -108,7 +108,7 @@ error[E0599]: no method named `f1` found for struct `FuncContainer` in the curre\n   --> $DIR/issue-2392.rs:64:31\n    |\n LL | struct FuncContainer {\n-   |        ------------- method `f1` not found for this struct\n+   | -------------------- method `f1` not found for this struct\n ...\n LL |             (*self.container).f1(1);\n    |                               ^^ field, not a method\n@@ -122,7 +122,7 @@ error[E0599]: no method named `f2` found for struct `FuncContainer` in the curre\n   --> $DIR/issue-2392.rs:65:31\n    |\n LL | struct FuncContainer {\n-   |        ------------- method `f2` not found for this struct\n+   | -------------------- method `f2` not found for this struct\n ...\n LL |             (*self.container).f2(1);\n    |                               ^^ field, not a method\n@@ -136,7 +136,7 @@ error[E0599]: no method named `f3` found for struct `FuncContainer` in the curre\n   --> $DIR/issue-2392.rs:66:31\n    |\n LL | struct FuncContainer {\n-   |        ------------- method `f3` not found for this struct\n+   | -------------------- method `f3` not found for this struct\n ...\n LL |             (*self.container).f3(1);\n    |                               ^^ field, not a method"}, {"sha": "4b96bce8d2e82d3b0a09f8f18db8b2af86169b91", "filename": "src/test/ui/confuse-field-and-method/issue-32128.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fconfuse-field-and-method%2Fissue-32128.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fconfuse-field-and-method%2Fissue-32128.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconfuse-field-and-method%2Fissue-32128.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `example` found for struct `Example` in the curren\n   --> $DIR/issue-32128.rs:12:10\n    |\n LL | struct Example {\n-   |        ------- method `example` not found for this struct\n+   | -------------- method `example` not found for this struct\n ...\n LL |     demo.example(1);\n    |          ^^^^^^^ field, not a method"}, {"sha": "783378f8db58d67a225100c9eb121febee2f3a75", "filename": "src/test/ui/confuse-field-and-method/private-field.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fconfuse-field-and-method%2Fprivate-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fconfuse-field-and-method%2Fprivate-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconfuse-field-and-method%2Fprivate-field.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `dog_age` found for struct `Dog` in the current sc\n   --> $DIR/private-field.rs:16:23\n    |\n LL |     pub struct Dog {\n-   |                --- method `dog_age` not found for this struct\n+   |     -------------- method `dog_age` not found for this struct\n ...\n LL |     let dog_age = dog.dog_age();\n    |                       ^^^^^^^ private field, not a method"}, {"sha": "77a3b77ad428b32b345f9edaeb0a263808a5d93e", "filename": "src/test/ui/const-generics/generic_const_exprs/issue-69654.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-69654.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-69654.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-69654.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -8,7 +8,7 @@ error[E0599]: the function or associated item `foo` exists for struct `Foo<{_: u\n   --> $DIR/issue-69654.rs:17:10\n    |\n LL | struct Foo<const N: usize> {}\n-   |        --- function or associated item `foo` not found for this struct\n+   | -------------------------- function or associated item `foo` not found for this struct\n ...\n LL |     Foo::foo();\n    |          ^^^ function or associated item cannot be called on `Foo<{_: usize}>` due to unsatisfied trait bounds"}, {"sha": "1b502642eb7d03f12f881017b5547aa13c8b51da", "filename": "src/test/ui/const-generics/generic_const_exprs/issue-80742.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-80742.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-80742.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-80742.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -16,7 +16,7 @@ error[E0599]: the function or associated item `new` exists for struct `Inline<dy\n   --> $DIR/issue-80742.rs:30:36\n    |\n LL | struct Inline<T>\n-   |        ------ function or associated item `new` not found for this struct\n+   | ---------------- function or associated item `new` not found for this struct\n ...\n LL |     let dst = Inline::<dyn Debug>::new(0);\n    |                                    ^^^ function or associated item cannot be called on `Inline<dyn Debug>` due to unsatisfied trait bounds"}, {"sha": "b1b359619dcfabb83144f4b2f563f4bef0f6d7b6", "filename": "src/test/ui/const-generics/invalid-const-arg-for-type-param.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fconst-generics%2Finvalid-const-arg-for-type-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fconst-generics%2Finvalid-const-arg-for-type-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Finvalid-const-arg-for-type-param.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -16,7 +16,7 @@ error[E0599]: no method named `f` found for struct `S` in the current scope\n   --> $DIR/invalid-const-arg-for-type-param.rs:9:7\n    |\n LL | struct S;\n-   |        - method `f` not found for this struct\n+   | -------- method `f` not found for this struct\n ...\n LL |     S.f::<0>();\n    |       ^ method not found in `S`"}, {"sha": "0874a70ce392e3cda3790ce66c3365d2089c39a5", "filename": "src/test/ui/consts/const-needs_drop-monomorphic.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fconsts%2Fconst-needs_drop-monomorphic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fconsts%2Fconst-needs_drop-monomorphic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-needs_drop-monomorphic.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no function or associated item named `assert` found for struct `Bo\n   --> $DIR/const-needs_drop-monomorphic.rs:11:46\n    |\n LL | struct Bool<const B: bool> {}\n-   |        ---- function or associated item `assert` not found for this struct\n+   | -------------------------- function or associated item `assert` not found for this struct\n ...\n LL |     Bool::<{ std::mem::needs_drop::<T>() }>::assert();\n    |                                              ^^^^^^ function or associated item cannot be called on `Bool<{ std::mem::needs_drop::<T>() }>` due to unsatisfied trait bounds"}, {"sha": "128087f1e375522297267296a093509774bb30e1", "filename": "src/test/ui/copy-a-resource.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fcopy-a-resource.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fcopy-a-resource.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcopy-a-resource.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `clone` found for struct `Foo` in the current scop\n   --> $DIR/copy-a-resource.rs:18:16\n    |\n LL | struct Foo {\n-   |        --- method `clone` not found for this struct\n+   | ---------- method `clone` not found for this struct\n ...\n LL |     let _y = x.clone();\n    |                ^^^^^ method not found in `Foo`"}, {"sha": "c4fddcf5f2468e509db54676801735e274c27d2a", "filename": "src/test/ui/derives/derive-assoc-type-not-impl.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fderives%2Fderive-assoc-type-not-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fderives%2Fderive-assoc-type-not-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderive-assoc-type-not-impl.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -3,8 +3,8 @@ error[E0599]: the method `clone` exists for struct `Bar<NotClone>`, but its trai\n    |\n LL | struct Bar<T: Foo> {\n    | ------------------\n-   | |      |\n-   | |      method `clone` not found for this struct\n+   | |\n+   | method `clone` not found for this struct\n    | doesn't satisfy `Bar<NotClone>: Clone`\n ...\n LL | struct NotClone;"}, {"sha": "fbd48336d9126532ee6eb55e115deb088bd22cba", "filename": "src/test/ui/derives/issue-91492.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fderives%2Fissue-91492.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fderives%2Fissue-91492.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fissue-91492.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -37,7 +37,7 @@ LL | pub struct NoDerives;\n    | -------------------- doesn't satisfy `NoDerives: Clone`\n ...\n LL | struct Object<T, A>(T, A);\n-   |        ------ method `use_clone` not found for this struct\n+   | ------------------- method `use_clone` not found for this struct\n ...\n LL |     foo.use_clone();\n    |         ^^^^^^^^^ method cannot be called on `Object<NoDerives, SomeDerives>` due to unsatisfied trait bounds"}, {"sha": "12be269565da1233aa52cadb950d9a8d4f78278e", "filename": "src/test/ui/derives/issue-91550.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fderives%2Fissue-91550.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fderives%2Fissue-91550.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fissue-91550.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -25,7 +25,7 @@ LL | pub struct NoDerives;\n    | -------------------- doesn't satisfy `NoDerives: Eq`\n LL |\n LL | struct Object<T>(T);\n-   |        ------ method `use_eq` not found for this struct\n+   | ---------------- method `use_eq` not found for this struct\n ...\n LL |     foo.use_eq();\n    |         ^^^^^^ method cannot be called on `Object<NoDerives>` due to unsatisfied trait bounds\n@@ -44,7 +44,7 @@ LL | pub struct NoDerives;\n    | -------------------- doesn't satisfy `NoDerives: Ord`\n LL |\n LL | struct Object<T>(T);\n-   |        ------ method `use_ord` not found for this struct\n+   | ---------------- method `use_ord` not found for this struct\n ...\n LL |     foo.use_ord();\n    |         ^^^^^^^ method cannot be called on `Object<NoDerives>` due to unsatisfied trait bounds\n@@ -66,7 +66,7 @@ LL | pub struct NoDerives;\n    | doesn't satisfy `NoDerives: PartialOrd`\n LL |\n LL | struct Object<T>(T);\n-   |        ------ method `use_ord_and_partial_ord` not found for this struct\n+   | ---------------- method `use_ord_and_partial_ord` not found for this struct\n ...\n LL |     foo.use_ord_and_partial_ord();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^ method cannot be called on `Object<NoDerives>` due to unsatisfied trait bounds"}, {"sha": "bdbfa4dd7136b375dff7a7a9431a2177b6452807", "filename": "src/test/ui/did_you_mean/issue-40006.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40006.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40006.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40006.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -88,7 +88,7 @@ error[E0599]: no method named `hello_method` found for struct `S` in the current\n   --> $DIR/issue-40006.rs:38:7\n    |\n LL | struct S;\n-   |        - method `hello_method` not found for this struct\n+   | -------- method `hello_method` not found for this struct\n ...\n LL |     S.hello_method();\n    |       ^^^^^^^^^^^^ method not found in `S`"}, {"sha": "1492670dc63354daadb422556d82cb0e9156295c", "filename": "src/test/ui/dont-suggest-private-trait-method.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fdont-suggest-private-trait-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fdont-suggest-private-trait-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdont-suggest-private-trait-method.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no function or associated item named `new` found for struct `T` in\n   --> $DIR/dont-suggest-private-trait-method.rs:4:8\n    |\n LL | struct T;\n-   |        - function or associated item `new` not found for this struct\n+   | -------- function or associated item `new` not found for this struct\n ...\n LL |     T::new();\n    |        ^^^ function or associated item not found in `T`"}, {"sha": "a1fb58f483f6df6e4a66e6f2948f1c01b4e56bda", "filename": "src/test/ui/error-codes/E0599.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Ferror-codes%2FE0599.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Ferror-codes%2FE0599.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0599.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no associated item named `NotEvenReal` found for struct `Foo` in t\n   --> $DIR/E0599.rs:4:20\n    |\n LL | struct Foo;\n-   |        --- associated item `NotEvenReal` not found for this struct\n+   | ---------- associated item `NotEvenReal` not found for this struct\n ...\n LL |     || if let Foo::NotEvenReal() = Foo {};\n    |                    ^^^^^^^^^^^ associated item not found in `Foo`"}, {"sha": "d9dc77ac8eb4032118bfc50301dddb49fd6205d6", "filename": "src/test/ui/generic-associated-types/method-unsatified-assoc-type-predicate.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fmethod-unsatified-assoc-type-predicate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fmethod-unsatified-assoc-type-predicate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fmethod-unsatified-assoc-type-predicate.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -3,8 +3,8 @@ error[E0599]: the method `f` exists for struct `S`, but its trait bounds were no\n    |\n LL | struct S;\n    | --------\n-   | |      |\n-   | |      method `f` not found for this struct\n+   | |\n+   | method `f` not found for this struct\n    | doesn't satisfy `<S as X>::Y<i32> = i32`\n    | doesn't satisfy `S: M`\n ..."}, {"sha": "77368f43a72c1edc883c67ce6705fb4e8abfb32b", "filename": "src/test/ui/hrtb/issue-30786.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fhrtb%2Fissue-30786.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fhrtb%2Fissue-30786.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhrtb%2Fissue-30786.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -3,8 +3,8 @@ error[E0599]: the method `filterx` exists for struct `Map<Repeat, [closure@$DIR/\n    |\n LL | pub struct Map<S, F> {\n    | --------------------\n-   | |          |\n-   | |          method `filterx` not found for this struct\n+   | |\n+   | method `filterx` not found for this struct\n    | doesn't satisfy `_: StreamExt`\n ...\n LL |     let filter = map.filterx(|x: &_| true);\n@@ -28,8 +28,8 @@ error[E0599]: the method `countx` exists for struct `Filter<Map<Repeat, for<'r>\n    |\n LL | pub struct Filter<S, F> {\n    | -----------------------\n-   | |          |\n-   | |          method `countx` not found for this struct\n+   | |\n+   | method `countx` not found for this struct\n    | doesn't satisfy `_: StreamExt`\n ...\n LL |     let count = filter.countx();"}, {"sha": "9150d957db76dc946b54d00eda84001a1f0a27c6", "filename": "src/test/ui/impl-trait/issues/issue-21659-show-relevant-trait-impls-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-21659-show-relevant-trait-impls-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-21659-show-relevant-trait-impls-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-21659-show-relevant-trait-impls-3.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `foo` found for struct `Bar` in the current scope\n   --> $DIR/issue-21659-show-relevant-trait-impls-3.rs:20:8\n    |\n LL | struct Bar;\n-   |        --- method `foo` not found for this struct\n+   | ---------- method `foo` not found for this struct\n ...\n LL |     f1.foo(1usize);\n    |        ^^^ method not found in `Bar`"}, {"sha": "34f4dc2cef37dd3348af6f125f195abb12ea746d", "filename": "src/test/ui/impl-trait/issues/issue-62742.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-62742.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-62742.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-62742.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -21,7 +21,7 @@ LL | pub struct RawImpl<T>(PhantomData<T>);\n    | --------------------- doesn't satisfy `RawImpl<()>: Raw<()>`\n ...\n LL | pub struct SafeImpl<T: ?Sized, A: Raw<T>>(PhantomData<(A, T)>);\n-   |            -------- function or associated item `foo` not found for this struct\n+   | ----------------------------------------- function or associated item `foo` not found for this struct\n    |\n    = note: the following trait bounds were not satisfied:\n            `RawImpl<()>: Raw<()>`"}, {"sha": "b727b2ca0cce313a0db163cb2e7ed1aaf4eee183", "filename": "src/test/ui/impl-trait/method-suggestion-no-duplication.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fimpl-trait%2Fmethod-suggestion-no-duplication.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fimpl-trait%2Fmethod-suggestion-no-duplication.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmethod-suggestion-no-duplication.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `is_empty` found for struct `Foo` in the current s\n   --> $DIR/method-suggestion-no-duplication.rs:7:15\n    |\n LL | struct Foo;\n-   |        --- method `is_empty` not found for this struct\n+   | ---------- method `is_empty` not found for this struct\n ...\n LL |     foo(|s| s.is_empty());\n    |               ^^^^^^^^ method not found in `Foo`"}, {"sha": "3d4ae11e5767039ab3659d58f60c79c32545ad86", "filename": "src/test/ui/impl-trait/no-method-suggested-traits.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -94,7 +94,7 @@ error[E0599]: no method named `method` found for struct `Foo` in the current sco\n   --> $DIR/no-method-suggested-traits.rs:40:9\n    |\n LL | struct Foo;\n-   |        --- method `method` not found for this struct\n+   | ---------- method `method` not found for this struct\n ...\n LL |     Foo.method();\n    |         ^^^^^^ method not found in `Foo`\n@@ -201,7 +201,7 @@ error[E0599]: no method named `method3` found for struct `Foo` in the current sc\n   --> $DIR/no-method-suggested-traits.rs:59:9\n    |\n LL | struct Foo;\n-   |        --- method `method3` not found for this struct\n+   | ---------- method `method3` not found for this struct\n ...\n LL |     Foo.method3();\n    |         ^^^^^^^ method not found in `Foo`\n@@ -224,7 +224,7 @@ error[E0599]: no method named `method3` found for enum `Bar` in the current scop\n   --> $DIR/no-method-suggested-traits.rs:63:12\n    |\n LL | enum Bar { X }\n-   |      --- method `method3` not found for this enum\n+   | -------- method `method3` not found for this enum\n ...\n LL |     Bar::X.method3();\n    |            ^^^^^^^ method not found in `Bar`"}, {"sha": "51b61e3a66bb40652e60f1565cf7163a17a7c622", "filename": "src/test/ui/infinite/infinite-autoderef.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Finfinite%2Finfinite-autoderef.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Finfinite%2Finfinite-autoderef.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finfinite%2Finfinite-autoderef.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -43,7 +43,7 @@ error[E0599]: no method named `bar` found for struct `Foo` in the current scope\n   --> $DIR/infinite-autoderef.rs:25:9\n    |\n LL | struct Foo;\n-   |        --- method `bar` not found for this struct\n+   | ---------- method `bar` not found for this struct\n ...\n LL |     Foo.bar();\n    |         ^^^ method not found in `Foo`"}, {"sha": "9e888ed758a11617f2f646fb84908012f3af5543", "filename": "src/test/ui/issues/issue-19692.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fissues%2Fissue-19692.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fissues%2Fissue-19692.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-19692.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `kaname` found for struct `Homura` in the current\n   --> $DIR/issue-19692.rs:4:40\n    |\n LL | struct Homura;\n-   |        ------ method `kaname` not found for this struct\n+   | ------------- method `kaname` not found for this struct\n ...\n LL |     let Some(ref madoka) = Some(homura.kaname());\n    |                                        ^^^^^^ method not found in `Homura`"}, {"sha": "1a0e87e15d6bcefaf25cf93bbda10ddd3c43906c", "filename": "src/test/ui/issues/issue-22933-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fissues%2Fissue-22933-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fissues%2Fissue-22933-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-22933-2.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no variant or associated item named `PIE` found for enum `Deliciou\n   --> $DIR/issue-22933-2.rs:4:55\n    |\n LL | enum Delicious {\n-   |      --------- variant or associated item `PIE` not found for this enum\n+   | -------------- variant or associated item `PIE` not found for this enum\n ...\n LL |     ApplePie = Delicious::Apple as isize | Delicious::PIE as isize,\n    |                                                       ^^^"}, {"sha": "d07d1a7caaf2477bd51adc013f8d1539e4c6f4bf", "filename": "src/test/ui/issues/issue-23173.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fissues%2Fissue-23173.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fissues%2Fissue-23173.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-23173.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no variant or associated item named `Homura` found for enum `Token\n   --> $DIR/issue-23173.rs:9:23\n    |\n LL | enum Token { LeftParen, RightParen, Plus, Minus, /* etc */ }\n-   |      ----- variant or associated item `Homura` not found for this enum\n+   | ---------- variant or associated item `Homura` not found for this enum\n ...\n LL |     use_token(&Token::Homura);\n    |                       ^^^^^^ variant or associated item not found in `Token`\n@@ -11,7 +11,7 @@ error[E0599]: no function or associated item named `method` found for struct `St\n   --> $DIR/issue-23173.rs:10:13\n    |\n LL | struct Struct {\n-   |        ------ function or associated item `method` not found for this struct\n+   | ------------- function or associated item `method` not found for this struct\n ...\n LL |     Struct::method();\n    |             ^^^^^^ function or associated item not found in `Struct`\n@@ -20,7 +20,7 @@ error[E0599]: no function or associated item named `method` found for struct `St\n   --> $DIR/issue-23173.rs:11:13\n    |\n LL | struct Struct {\n-   |        ------ function or associated item `method` not found for this struct\n+   | ------------- function or associated item `method` not found for this struct\n ...\n LL |     Struct::method;\n    |             ^^^^^^ function or associated item not found in `Struct`\n@@ -29,7 +29,7 @@ error[E0599]: no associated item named `Assoc` found for struct `Struct` in the\n   --> $DIR/issue-23173.rs:12:13\n    |\n LL | struct Struct {\n-   |        ------ associated item `Assoc` not found for this struct\n+   | ------------- associated item `Assoc` not found for this struct\n ...\n LL |     Struct::Assoc;\n    |             ^^^^^ associated item not found in `Struct`"}, {"sha": "5d3d8a4f808a8bd3910b2df6104bebdc442b6da7", "filename": "src/test/ui/issues/issue-23217.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fissues%2Fissue-23217.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fissues%2Fissue-23217.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-23217.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no variant or associated item named `A` found for enum `SomeEnum`\n   --> $DIR/issue-23217.rs:2:19\n    |\n LL | pub enum SomeEnum {\n-   |          -------- variant or associated item `A` not found for this enum\n+   | ----------------- variant or associated item `A` not found for this enum\n LL |     B = SomeEnum::A,\n    |                   ^\n    |                   |"}, {"sha": "b5a2b2f55a6d4905af0425b580efa1406101b0a9", "filename": "src/test/ui/issues/issue-2823.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fissues%2Fissue-2823.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fissues%2Fissue-2823.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-2823.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `clone` found for struct `C` in the current scope\n   --> $DIR/issue-2823.rs:13:16\n    |\n LL | struct C {\n-   |        - method `clone` not found for this struct\n+   | -------- method `clone` not found for this struct\n ...\n LL |     let _d = c.clone();\n    |                ^^^^^ method not found in `C`"}, {"sha": "2eb8a1c2653c8794f52c0368cb75f5b99feb02ba", "filename": "src/test/ui/issues/issue-28971.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fissues%2Fissue-28971.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fissues%2Fissue-28971.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28971.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no variant or associated item named `Baz` found for enum `Foo` in\n   --> $DIR/issue-28971.rs:7:18\n    |\n LL | enum Foo {\n-   |      --- variant or associated item `Baz` not found for this enum\n+   | -------- variant or associated item `Baz` not found for this enum\n ...\n LL |             Foo::Baz(..) => (),\n    |                  ^^^"}, {"sha": "6e7c7d05aa5b97923c0a22899ab9e2076b6dd273", "filename": "src/test/ui/issues/issue-41880.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fissues%2Fissue-41880.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fissues%2Fissue-41880.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-41880.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `iter` found for struct `Iterate` in the current s\n   --> $DIR/issue-41880.rs:27:24\n    |\n LL | pub struct Iterate<T, F> {\n-   |            ------- method `iter` not found for this struct\n+   | ------------------------ method `iter` not found for this struct\n ...\n LL |     println!(\"{:?}\", a.iter().take(10).collect::<Vec<usize>>());\n    |                        ^^^^ method not found in `Iterate<{integer}, [closure@$DIR/issue-41880.rs:26:24: 26:31]>`"}, {"sha": "b6b1f3a66c7855fd55f8b2a0c515d6550c9b0522", "filename": "src/test/ui/issues/issue-64430.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fissues%2Fissue-64430.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fissues%2Fissue-64430.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-64430.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `bar` found for struct `Foo` in the current scope\n   --> $DIR/issue-64430.rs:7:9\n    |\n LL | pub struct Foo;\n-   |            --- method `bar` not found for this struct\n+   | -------------- method `bar` not found for this struct\n ...\n LL |     Foo.bar()\n    |         ^^^ method not found in `Foo`"}, {"sha": "b8b0eb310cf3eade796c62c76f444dc4fed2c73a", "filename": "src/test/ui/issues/issue-7950.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fissues%2Fissue-7950.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fissues%2Fissue-7950.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-7950.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no function or associated item named `bar` found for struct `Foo`\n   --> $DIR/issue-7950.rs:6:10\n    |\n LL | struct Foo;\n-   |        --- function or associated item `bar` not found for this struct\n+   | ---------- function or associated item `bar` not found for this struct\n ...\n LL |     Foo::bar();\n    |          ^^^ function or associated item not found in `Foo`"}, {"sha": "690fe8fa7af1005d0e0e7eafd82ff8b405139ce1", "filename": "src/test/ui/methods/method-call-err-msg.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-err-msg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-err-msg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-err-msg.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -51,8 +51,8 @@ error[E0599]: `Foo` is not an iterator\n    |\n LL | pub struct Foo;\n    | --------------\n-   | |          |\n-   | |          method `take` not found for this struct\n+   | |\n+   | method `take` not found for this struct\n    | doesn't satisfy `Foo: Iterator`\n ...\n LL |      .take()"}, {"sha": "4cbda4048a815aa808d3dd82cc17c00519ab0973", "filename": "src/test/ui/methods/method-not-found-generic-arg-elision.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fmethods%2Fmethod-not-found-generic-arg-elision.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fmethods%2Fmethod-not-found-generic-arg-elision.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fmethod-not-found-generic-arg-elision.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `distance` found for struct `Point<i32>` in the cu\n   --> $DIR/method-not-found-generic-arg-elision.rs:82:23\n    |\n LL | struct Point<T> {\n-   |        ----- method `distance` not found for this struct\n+   | --------------- method `distance` not found for this struct\n ...\n LL |     let d = point_i32.distance();\n    |                       ^^^^^^^^ method not found in `Point<i32>`\n@@ -14,7 +14,7 @@ error[E0599]: no method named `other` found for struct `Point` in the current sc\n   --> $DIR/method-not-found-generic-arg-elision.rs:84:23\n    |\n LL | struct Point<T> {\n-   |        ----- method `other` not found for this struct\n+   | --------------- method `other` not found for this struct\n ...\n LL |     let d = point_i32.other();\n    |                       ^^^^^ method not found in `Point<i32>`\n@@ -29,7 +29,7 @@ error[E0599]: no method named `method` found for struct `Wrapper<bool>` in the c\n   --> $DIR/method-not-found-generic-arg-elision.rs:90:13\n    |\n LL | struct Wrapper<T>(T);\n-   |        ------- method `method` not found for this struct\n+   | ----------------- method `method` not found for this struct\n ...\n LL |     wrapper.method();\n    |             ^^^^^^ method not found in `Wrapper<bool>`\n@@ -45,7 +45,7 @@ error[E0599]: no method named `other` found for struct `Wrapper` in the current\n   --> $DIR/method-not-found-generic-arg-elision.rs:92:13\n    |\n LL | struct Wrapper<T>(T);\n-   |        ------- method `other` not found for this struct\n+   | ----------------- method `other` not found for this struct\n ...\n LL |     wrapper.other();\n    |             ^^^^^ method not found in `Wrapper<bool>`\n@@ -54,7 +54,7 @@ error[E0599]: no method named `method` found for struct `Wrapper2<'_, bool, 3_us\n   --> $DIR/method-not-found-generic-arg-elision.rs:96:13\n    |\n LL | struct Wrapper2<'a, T, const C: usize> {\n-   |        -------- method `method` not found for this struct\n+   | -------------------------------------- method `method` not found for this struct\n ...\n LL |     wrapper.method();\n    |             ^^^^^^ method not found in `Wrapper2<'_, bool, 3_usize>`\n@@ -68,7 +68,7 @@ error[E0599]: no method named `other` found for struct `Wrapper2` in the current\n   --> $DIR/method-not-found-generic-arg-elision.rs:98:13\n    |\n LL | struct Wrapper2<'a, T, const C: usize> {\n-   |        -------- method `other` not found for this struct\n+   | -------------------------------------- method `other` not found for this struct\n ...\n LL |     wrapper.other();\n    |             ^^^^^ method not found in `Wrapper2<'_, bool, 3_usize>`\n@@ -83,7 +83,7 @@ error[E0599]: the method `method` exists for struct `Struct<f64>`, but its trait\n   --> $DIR/method-not-found-generic-arg-elision.rs:104:7\n    |\n LL | struct Struct<T>{\n-   |        ------ method `method` not found for this struct\n+   | ---------------- method `method` not found for this struct\n ...\n LL |     s.method();\n    |       ^^^^^^ method cannot be called on `Struct<f64>` due to unsatisfied trait bounds"}, {"sha": "0c696163a26c5cba2737b6bf51ae504c1e84af26", "filename": "src/test/ui/noncopyable-class.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fnoncopyable-class.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fnoncopyable-class.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnoncopyable-class.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `clone` found for struct `Foo` in the current scop\n   --> $DIR/noncopyable-class.rs:34:16\n    |\n LL | struct Foo {\n-   |        --- method `clone` not found for this struct\n+   | ---------- method `clone` not found for this struct\n ...\n LL |     let _y = x.clone();\n    |                ^^^^^ method not found in `Foo`"}, {"sha": "2550dc3d321d838d02f92c52376d9c4a17a9de9c", "filename": "src/test/ui/parser/emoji-identifiers.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fparser%2Femoji-identifiers.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fparser%2Femoji-identifiers.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Femoji-identifiers.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -77,7 +77,7 @@ error[E0599]: no function or associated item named `full_of\u2728` found for struct\n   --> $DIR/emoji-identifiers.rs:9:8\n    |\n LL | struct \ud83d\udc40;\n-   |        -- function or associated item `full_of\u2728` not found for this struct\n+   | --------- function or associated item `full_of\u2728` not found for this struct\n ...\n LL |     \ud83d\udc40::full_of\u2728()\n    |         ^^^^^^^^^"}, {"sha": "b52720ae3d9de011bde3fab7f0c59141b92a2b04", "filename": "src/test/ui/rust-2018/uniform-paths/issue-87932.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fissue-87932.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fissue-87932.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fissue-87932.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no function or associated item named `deserialize` found for struc\n   --> $DIR/issue-87932.rs:13:8\n    |\n LL | pub struct A {}\n-   |            - function or associated item `deserialize` not found for this struct\n+   | ------------ function or associated item `deserialize` not found for this struct\n ...\n LL |     A::deserialize();\n    |        ^^^^^^^^^^^ function or associated item not found in `A`"}, {"sha": "3c7cccfc9a16ef017acba0e0b08010a8ccc7e302", "filename": "src/test/ui/self/point-at-arbitrary-self-type-method.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fself%2Fpoint-at-arbitrary-self-type-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fself%2Fpoint-at-arbitrary-self-type-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Fpoint-at-arbitrary-self-type-method.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `foo` found for struct `A` in the current scope\n   --> $DIR/point-at-arbitrary-self-type-method.rs:8:7\n    |\n LL | struct A;\n-   |        - method `foo` not found for this struct\n+   | -------- method `foo` not found for this struct\n ...\n LL |     fn foo(self: Box<Self>) {}\n    |        --- the method is available for `Box<A>` here"}, {"sha": "366c14f7616a37800d685c9ed35f374ef7944786", "filename": "src/test/ui/self/point-at-arbitrary-self-type-trait-method.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fself%2Fpoint-at-arbitrary-self-type-trait-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fself%2Fpoint-at-arbitrary-self-type-trait-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Fpoint-at-arbitrary-self-type-trait-method.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -6,7 +6,7 @@ LL | trait B { fn foo(self: Box<Self>); }\n    |              |\n    |              the method is available for `Box<A>` here\n LL | struct A;\n-   |        - method `foo` not found for this struct\n+   | -------- method `foo` not found for this struct\n ...\n LL |     A.foo()\n    |       ^^^ method not found in `A`"}, {"sha": "4f30edb3f89d3d5e663d0a24b7373f3b5ed8979e", "filename": "src/test/ui/span/issue-7575.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -42,7 +42,7 @@ error[E0599]: no method named `fff` found for struct `Myisize` in the current sc\n   --> $DIR/issue-7575.rs:62:30\n    |\n LL | struct Myisize(isize);\n-   |        ------- method `fff` not found for this struct\n+   | -------------- method `fff` not found for this struct\n ...\n LL |     u.f8(42) + u.f9(342) + m.fff(42)\n    |                            --^^^"}, {"sha": "d1004a690588701e812ddf3323ea9236defce5a2", "filename": "src/test/ui/specialization/defaultimpl/specialization-trait-not-implemented.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fspecialization-trait-not-implemented.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fspecialization-trait-not-implemented.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fspecialization-trait-not-implemented.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -13,8 +13,8 @@ error[E0599]: the method `foo_one` exists for struct `MyStruct`, but its trait b\n    |\n LL | struct MyStruct;\n    | ---------------\n-   | |      |\n-   | |      method `foo_one` not found for this struct\n+   | |\n+   | method `foo_one` not found for this struct\n    | doesn't satisfy `MyStruct: Foo`\n ...\n LL |     println!(\"{}\", MyStruct.foo_one());"}, {"sha": "7cc372f2422aebdd730376b951fe295834869466", "filename": "src/test/ui/suggestions/derive-trait-for-method-call.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fsuggestions%2Fderive-trait-for-method-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fsuggestions%2Fderive-trait-for-method-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fderive-trait-for-method-call.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -11,7 +11,7 @@ LL | enum CloneEnum {\n    | -------------- doesn't satisfy `CloneEnum: Default`\n ...\n LL | struct Foo<X, Y> (X, Y);\n-   |        --- method `test` not found for this struct\n+   | ---------------- method `test` not found for this struct\n ...\n LL |     let y = x.test();\n    |               ^^^^ method cannot be called on `Foo<Enum, CloneEnum>` due to unsatisfied trait bounds\n@@ -43,7 +43,7 @@ LL | struct CloneStruct {\n    | ------------------ doesn't satisfy `CloneStruct: Default`\n ...\n LL | struct Foo<X, Y> (X, Y);\n-   |        --- method `test` not found for this struct\n+   | ---------------- method `test` not found for this struct\n ...\n LL |     let y = x.test();\n    |               ^^^^ method cannot be called on `Foo<Struct, CloneStruct>` due to unsatisfied trait bounds\n@@ -65,7 +65,7 @@ error[E0599]: the method `test` exists for struct `Foo<Vec<Enum>, Instant>`, but\n   --> $DIR/derive-trait-for-method-call.rs:40:15\n    |\n LL | struct Foo<X, Y> (X, Y);\n-   |        --- method `test` not found for this struct\n+   | ---------------- method `test` not found for this struct\n ...\n LL |     let y = x.test();\n    |               ^^^^ method cannot be called on `Foo<Vec<Enum>, Instant>` due to unsatisfied trait bounds"}, {"sha": "4658ecb3a7a95752ea42e58c4693853e0e8585ad", "filename": "src/test/ui/suggestions/dont-wrap-ambiguous-receivers.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fsuggestions%2Fdont-wrap-ambiguous-receivers.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fsuggestions%2Fdont-wrap-ambiguous-receivers.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-wrap-ambiguous-receivers.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `pick` found for struct `Chaenomeles` in the curre\n   --> $DIR/dont-wrap-ambiguous-receivers.rs:18:25\n    |\n LL |     pub struct Chaenomeles;\n-   |                ----------- method `pick` not found for this struct\n+   |     ---------------------- method `pick` not found for this struct\n ...\n LL |     banana::Chaenomeles.pick()\n    |                         ^^^^ method not found in `Chaenomeles`"}, {"sha": "def16401750d5a61c508879aa7aec3b8ed4e477f", "filename": "src/test/ui/suggestions/field-has-method.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fsuggestions%2Ffield-has-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fsuggestions%2Ffield-has-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ffield-has-method.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `kind` found for struct `InferOk` in the current s\n   --> $DIR/field-has-method.rs:19:15\n    |\n LL | struct InferOk<T> {\n-   |        ------- method `kind` not found for this struct\n+   | ----------------- method `kind` not found for this struct\n ...\n LL |     let k = i.kind();\n    |               ^^^^ method not found in `InferOk<Ty>`"}, {"sha": "3fb418b1c0aac03b2219acdd070ce2d7462865e6", "filename": "src/test/ui/suggestions/suggest-assoc-fn-call-with-turbofish.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-assoc-fn-call-with-turbofish.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-assoc-fn-call-with-turbofish.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-assoc-fn-call-with-turbofish.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `default_hello` found for struct `GenericAssocMeth\n   --> $DIR/suggest-assoc-fn-call-with-turbofish.rs:9:7\n    |\n LL | struct GenericAssocMethod<T>(T);\n-   |        ------------------ method `default_hello` not found for this struct\n+   | ---------------------------- method `default_hello` not found for this struct\n ...\n LL |     x.default_hello();\n    |     --^^^^^^^^^^^^^"}, {"sha": "97d7e6696a88cb25958b1f5072755eb42b39204c", "filename": "src/test/ui/suggestions/suggest-methods.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-methods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-methods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-methods.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `bat` found for struct `Foo` in the current scope\n   --> $DIR/suggest-methods.rs:18:7\n    |\n LL | struct Foo;\n-   |        --- method `bat` not found for this struct\n+   | ---------- method `bat` not found for this struct\n ...\n LL |     f.bat(1.0);\n    |       ^^^ help: there is an associated function with a similar name: `bar`"}, {"sha": "0e2e41b85e2c6651e33cdbf64c872423fdecf430", "filename": "src/test/ui/suggestions/suggest-variants.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-variants.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-variants.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-variants.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -29,7 +29,7 @@ error[E0599]: no variant or associated item named `Squareee` found for enum `Sha\n   --> $DIR/suggest-variants.rs:15:12\n    |\n LL | enum Shape {\n-   |      ----- variant or associated item `Squareee` not found for this enum\n+   | ---------- variant or associated item `Squareee` not found for this enum\n ...\n LL |     Shape::Squareee;\n    |            ^^^^^^^^\n@@ -41,7 +41,7 @@ error[E0599]: no variant or associated item named `Circl` found for enum `Shape`\n   --> $DIR/suggest-variants.rs:16:12\n    |\n LL | enum Shape {\n-   |      ----- variant or associated item `Circl` not found for this enum\n+   | ---------- variant or associated item `Circl` not found for this enum\n ...\n LL |     Shape::Circl;\n    |            ^^^^^\n@@ -53,7 +53,7 @@ error[E0599]: no variant or associated item named `Rombus` found for enum `Shape\n   --> $DIR/suggest-variants.rs:17:12\n    |\n LL | enum Shape {\n-   |      ----- variant or associated item `Rombus` not found for this enum\n+   | ---------- variant or associated item `Rombus` not found for this enum\n ...\n LL |     Shape::Rombus;\n    |            ^^^^^^ variant or associated item not found in `Shape`"}, {"sha": "3b2749773a13423a328a024f97e0d9a2962e48be", "filename": "src/test/ui/suggestions/use-placement-typeck.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fsuggestions%2Fuse-placement-typeck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Fsuggestions%2Fuse-placement-typeck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fuse-placement-typeck.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -8,7 +8,7 @@ LL |         fn abc(&self) {}\n    |            --- the method is available for `S` here\n LL |     }\n LL |     pub struct S;\n-   |                - method `abc` not found for this struct\n+   |     ------------ method `abc` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is in scope\n help: the following trait is implemented but not in scope; perhaps add a `use` for it:"}, {"sha": "557d890882b5ecabae2f042dbfc811489189c18c", "filename": "src/test/ui/trait-bounds/impl-derived-implicit-sized-bound-2.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Ftrait-bounds%2Fimpl-derived-implicit-sized-bound-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Ftrait-bounds%2Fimpl-derived-implicit-sized-bound-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrait-bounds%2Fimpl-derived-implicit-sized-bound-2.rs?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -0,0 +1,33 @@\n+struct Victim<'a, T: Perpetrator + ?Sized> {\n+  value: u8,\n+  perp: &'a T,\n+}\n+\n+trait VictimTrait {\n+  type Ret;\n+  fn get(self) -> Self::Ret;\n+}\n+\n+// Actual fix is here\n+impl<'a, T: Perpetrator /*+ ?Sized*/> VictimTrait for Victim<'a, T> {\n+  type Ret = u8;\n+  fn get(self) -> Self::Ret {\n+    self.value\n+  }\n+}\n+\n+trait Perpetrator {\n+  fn getter<'a>(&'a self) -> Victim<'a, Self> {\n+    Victim {\n+      value: 0,\n+      perp: self,\n+    }\n+  }\n+\n+  fn trigger(&self) {\n+    self.getter().get();\n+    //~^ ERROR the method `get` exists for struct `Victim<'_, Self>`, but its trait bounds were not satisfied\n+  }\n+}\n+\n+fn main() {}"}, {"sha": "543ceac8e917876e9934c7d9e853af806f5ddcb6", "filename": "src/test/ui/trait-bounds/impl-derived-implicit-sized-bound-2.stderr", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Ftrait-bounds%2Fimpl-derived-implicit-sized-bound-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Ftrait-bounds%2Fimpl-derived-implicit-sized-bound-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrait-bounds%2Fimpl-derived-implicit-sized-bound-2.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -0,0 +1,31 @@\n+error[E0599]: the method `get` exists for struct `Victim<'_, Self>`, but its trait bounds were not satisfied\n+  --> $DIR/impl-derived-implicit-sized-bound-2.rs:28:19\n+   |\n+LL | struct Victim<'a, T: Perpetrator + ?Sized> {\n+   | ------------------------------------------\n+   | |\n+   | method `get` not found for this struct\n+   | doesn't satisfy `Victim<'_, Self>: VictimTrait`\n+...\n+LL |     self.getter().get();\n+   |                   ^^^ method cannot be called on `Victim<'_, Self>` due to unsatisfied trait bounds\n+   |\n+note: trait bound `Self: Sized` was not satisfied\n+  --> $DIR/impl-derived-implicit-sized-bound-2.rs:12:10\n+   |\n+LL | impl<'a, T: Perpetrator /*+ ?Sized*/> VictimTrait for Victim<'a, T> {\n+   |          ^                            -----------     -------------\n+   |          |\n+   |          unsatisfied trait bound introduced here\n+help: consider relaxing the type parameter's implicit `Sized` bound\n+   |\n+LL | impl<'a, T: ?Sized + Perpetrator /*+ ?Sized*/> VictimTrait for Victim<'a, T> {\n+   |             ++++++++\n+help: consider restricting the type parameter to satisfy the trait bound\n+   |\n+LL | struct Victim<'a, T: Perpetrator + ?Sized> where Self: Sized {\n+   |                                            +++++++++++++++++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0599`."}, {"sha": "f08d685836ec1a67aa47eff25ebf63e5b8c990c1", "filename": "src/test/ui/trait-bounds/impl-derived-implicit-sized-bound.stderr", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Ftrait-bounds%2Fimpl-derived-implicit-sized-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Ftrait-bounds%2Fimpl-derived-implicit-sized-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrait-bounds%2Fimpl-derived-implicit-sized-bound.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -1,20 +1,14 @@\n error[E0599]: the method `get` exists for struct `Victim<'_, Self>`, but its trait bounds were not satisfied\n   --> $DIR/impl-derived-implicit-sized-bound.rs:31:19\n    |\n-LL | / struct Victim<'a, T: Perpetrator + ?Sized>\n-LL | | where\n-LL | |   Self: Sized\n-LL | | {\n-LL | |   value: u8,\n-LL | |   perp: &'a T,\n-LL | | }\n-   | | -\n-   | | |\n-   | |_method `get` not found for this\n-   |   doesn't satisfy `Victim<'_, Self>: VictimTrait`\n+LL | struct Victim<'a, T: Perpetrator + ?Sized>\n+   | ------------------------------------------\n+   | |\n+   | method `get` not found for this struct\n+   | doesn't satisfy `Victim<'_, Self>: VictimTrait`\n ...\n-LL |       self.getter().get();\n-   |                     ^^^ method cannot be called on `Victim<'_, Self>` due to unsatisfied trait bounds\n+LL |     self.getter().get();\n+   |                   ^^^ method cannot be called on `Victim<'_, Self>` due to unsatisfied trait bounds\n    |\n note: trait bound `Self: Sized` was not satisfied\n   --> $DIR/impl-derived-implicit-sized-bound.rs:15:10\n@@ -23,6 +17,10 @@ LL | impl<'a, T: Perpetrator /*+ ?Sized*/> VictimTrait for Victim<'a, T> {\n    |          ^                            -----------     -------------\n    |          |\n    |          unsatisfied trait bound introduced here\n+help: consider relaxing the type parameter's implicit `Sized` bound\n+   |\n+LL | impl<'a, T: ?Sized + Perpetrator /*+ ?Sized*/> VictimTrait for Victim<'a, T> {\n+   |             ++++++++\n help: consider restricting the type parameter to satisfy the trait bound\n    |\n LL |   Self: Sized, Self: Sized"}, {"sha": "87ee08049300fd64b1487be99778c4b007172a33", "filename": "src/test/ui/traits/issue-3973.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Ftraits%2Fissue-3973.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Ftraits%2Fissue-3973.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-3973.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -11,7 +11,7 @@ error[E0599]: no function or associated item named `new` found for struct `Point\n   --> $DIR/issue-3973.rs:22:20\n    |\n LL | struct Point {\n-   |        ----- function or associated item `new` not found for this struct\n+   | ------------ function or associated item `new` not found for this struct\n ...\n LL |     let p = Point::new(0.0, 0.0);\n    |                    ^^^ function or associated item not found in `Point`"}, {"sha": "7f78b37ba841d1fcbf93ae6b590111e74733501f", "filename": "src/test/ui/traits/item-privacy.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Ftraits%2Fitem-privacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Ftraits%2Fitem-privacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fitem-privacy.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `a` found for struct `S` in the current scope\n   --> $DIR/item-privacy.rs:67:7\n    |\n LL | struct S;\n-   |        - method `a` not found for this struct\n+   | -------- method `a` not found for this struct\n ...\n LL |     S.a();\n    |       ^ method not found in `S`\n@@ -18,7 +18,7 @@ error[E0599]: no method named `b` found for struct `S` in the current scope\n   --> $DIR/item-privacy.rs:68:7\n    |\n LL | struct S;\n-   |        - method `b` not found for this struct\n+   | -------- method `b` not found for this struct\n ...\n LL |         fn b(&self) { }\n    |            - the method is available for `S` here\n@@ -45,7 +45,7 @@ error[E0599]: no function or associated item named `a` found for struct `S` in t\n   --> $DIR/item-privacy.rs:78:8\n    |\n LL | struct S;\n-   |        - function or associated item `a` not found for this struct\n+   | -------- function or associated item `a` not found for this struct\n ...\n LL |     S::a(&S);\n    |        ^ function or associated item not found in `S`\n@@ -61,7 +61,7 @@ error[E0599]: no function or associated item named `b` found for struct `S` in t\n   --> $DIR/item-privacy.rs:80:8\n    |\n LL | struct S;\n-   |        - function or associated item `b` not found for this struct\n+   | -------- function or associated item `b` not found for this struct\n ...\n LL |     S::b(&S);\n    |        ^ function or associated item not found in `S`\n@@ -85,7 +85,7 @@ error[E0599]: no associated item named `A` found for struct `S` in the current s\n   --> $DIR/item-privacy.rs:97:8\n    |\n LL | struct S;\n-   |        - associated item `A` not found for this struct\n+   | -------- associated item `A` not found for this struct\n ...\n LL |     S::A;\n    |        ^ associated item not found in `S`\n@@ -101,7 +101,7 @@ error[E0599]: no associated item named `B` found for struct `S` in the current s\n   --> $DIR/item-privacy.rs:98:8\n    |\n LL | struct S;\n-   |        - associated item `B` not found for this struct\n+   | -------- associated item `B` not found for this struct\n ...\n LL |     S::B;\n    |        ^ associated item not found in `S`"}, {"sha": "b29442d7b8fb24af0fd7c48bdee7830c00d8b353", "filename": "src/test/ui/traits/negative-impls/explicitly-unimplemented-error-message.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Ftraits%2Fnegative-impls%2Fexplicitly-unimplemented-error-message.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Ftraits%2Fnegative-impls%2Fexplicitly-unimplemented-error-message.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fnegative-impls%2Fexplicitly-unimplemented-error-message.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `clone` found for struct `Qux` in the current scop\n   --> $DIR/explicitly-unimplemented-error-message.rs:34:9\n    |\n LL | struct Qux;\n-   |        --- method `clone` not found for this struct\n+   | ---------- method `clone` not found for this struct\n ...\n LL |     Qux.clone();\n    |         ^^^^^ method not found in `Qux`\n@@ -23,7 +23,7 @@ error[E0599]: no method named `foo` found for struct `Qux` in the current scope\n   --> $DIR/explicitly-unimplemented-error-message.rs:44:9\n    |\n LL | struct Qux;\n-   |        --- method `foo` not found for this struct\n+   | ---------- method `foo` not found for this struct\n ...\n LL |     Qux.foo();\n    |         ^^^ method not found in `Qux`"}, {"sha": "a4d692f8497b0e9398328aa3c092a725c4f2ec5e", "filename": "src/test/ui/union/union-derive-clone.mirunsafeck.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Funion%2Funion-derive-clone.mirunsafeck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Funion%2Funion-derive-clone.mirunsafeck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-derive-clone.mirunsafeck.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -3,8 +3,8 @@ error[E0599]: the method `clone` exists for union `U5<CloneNoCopy>`, but its tra\n    |\n LL | union U5<T> {\n    | -----------\n-   | |     |\n-   | |     method `clone` not found for this union\n+   | |\n+   | method `clone` not found for this union\n    | doesn't satisfy `U5<CloneNoCopy>: Clone`\n ...\n LL | struct CloneNoCopy;"}, {"sha": "a4d692f8497b0e9398328aa3c092a725c4f2ec5e", "filename": "src/test/ui/union/union-derive-clone.thirunsafeck.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Funion%2Funion-derive-clone.thirunsafeck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af10a456c19c447ff2bff585537d52a8d532bd86/src%2Ftest%2Fui%2Funion%2Funion-derive-clone.thirunsafeck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-derive-clone.thirunsafeck.stderr?ref=af10a456c19c447ff2bff585537d52a8d532bd86", "patch": "@@ -3,8 +3,8 @@ error[E0599]: the method `clone` exists for union `U5<CloneNoCopy>`, but its tra\n    |\n LL | union U5<T> {\n    | -----------\n-   | |     |\n-   | |     method `clone` not found for this union\n+   | |\n+   | method `clone` not found for this union\n    | doesn't satisfy `U5<CloneNoCopy>: Clone`\n ...\n LL | struct CloneNoCopy;"}]}