{"sha": "7829d9dde3798f16b3db5841593ba1242930a587", "node_id": "C_kwDOAAsO6NoAKDc4MjlkOWRkZTM3OThmMTZiM2RiNTg0MTU5M2JhMTI0MjkzMGE1ODc", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-10-22T12:22:19Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-10-22T12:22:19Z"}, "message": "Document overlap check filter", "tree": {"sha": "db8793ceae4b1e64e929088e1f4561d8f920f80f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db8793ceae4b1e64e929088e1f4561d8f920f80f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7829d9dde3798f16b3db5841593ba1242930a587", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmFyrPsACgkQgTGiTgx5\n76+I7A/+OTRCbmai9q2UlNzTiEIYteDed/yYs+mq/YbeEeHVEOm2qbwjXsKEof1I\nsmyc4KIpDRBKV6CnOQ4DuPTkG4K80GtMT6DzG4ZbYHxa1JZATPXA5JLRgVhU6Uim\nHk+Y+WSl9YePTNFSBpqAljub+fMCcNlDbXI+4Yu3Sx6m+CGECofzg2KZiSNIBjkg\nxBgO77qRhGLZlUXrayHjv2J9obHhKMwY4Rhoi7TxIJSNuwjwgEV4QPcjXodB2gKX\nKfSZ7oLnAqHvcTidNoLZKo28I60Xv+bddV4nEni8KHakz0zW1YfGEfhT3j8T+B1V\nina4DvrkVkPbjlPZlYgPRZNWXBkdgDSzjq98yi4Byjbmwf4PqPnMXuyFhCQKbuHS\nhpiejAqoQgJv4efGUq0I5cBWsW9tfxt+pfkLNumws69AjwiTqk9g5M5L5qLzY0sR\nRgzzgkqNNkZDQTrdIffXbJC3oSB+Q0yFvGrGSkv1voTbs9pnvHm6xm+/Wn5JUtAM\ndMwjh6KBCBGnN1Bvfgucu775prxk8Wk2MeEILGQdhp6CydIoS5PcguysP8ctvNh2\n6ZyxMxr+YwN+P4wnPIJLZlKcw3gE3Gx6MJuCJSel+6G7r8raZKFFa7oGcGi2+OJ1\nnIhSVNrd6UUM3VUmqyaEf9JsLVslhyMyAKNXGavn982VwfaXftA=\n=Cc+o\n-----END PGP SIGNATURE-----", "payload": "tree db8793ceae4b1e64e929088e1f4561d8f920f80f\nparent 5a727538f8aeff650b48f7d23a12cef84b549e01\nauthor Santiago Pastorino <spastorino@gmail.com> 1634905339 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1634905339 -0300\n\nDocument overlap check filter\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7829d9dde3798f16b3db5841593ba1242930a587", "html_url": "https://github.com/rust-lang/rust/commit/7829d9dde3798f16b3db5841593ba1242930a587", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7829d9dde3798f16b3db5841593ba1242930a587/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a727538f8aeff650b48f7d23a12cef84b549e01", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a727538f8aeff650b48f7d23a12cef84b549e01", "html_url": "https://github.com/rust-lang/rust/commit/5a727538f8aeff650b48f7d23a12cef84b549e01"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "d422bd66b10acc5cc92720af523c6de88e099c4e", "filename": "compiler/rustc_trait_selection/src/traits/coherence.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7829d9dde3798f16b3db5841593ba1242930a587/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7829d9dde3798f16b3db5841593ba1242930a587/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs?ref=7829d9dde3798f16b3db5841593ba1242930a587", "patch": "@@ -185,7 +185,27 @@ fn overlap_within_probe(\n \n     debug!(\"overlap: unification check succeeded\");\n \n-    // Are any of the obligations unsatisfiable? If so, no overlap.\n+    // There's no overlap if obligations are unsatisfiable or if the obligation negated is\n+    // satisfied.\n+    //\n+    // For example, given these two impl headers:\n+    //\n+    // `impl<'a> From<&'a str> for Box<dyn Error>`\n+    // `impl<E> From<E> for Box<dyn Error> where E: Error`\n+    //\n+    // So we have:\n+    //\n+    // `Box<dyn Error>: From<&'?a str>`\n+    // `Box<dyn Error>: From<?E>`\n+    //\n+    // After equating the two headers:\n+    //\n+    // `Box<dyn Error> = Box<dyn Error>`\n+    // So, `?E = &'?a str` and then given the where clause `&'?a str: Error`.\n+    //\n+    // If the obligation `&'?a str: Error` holds, it means that there's overlap. If that doesn't\n+    // hold we need to check if `&'?a str: !Error` holds, if doesn't hold there's overlap because\n+    // at some point an impl for `&'?a str: Error` could be added.\n     let infcx = selcx.infcx();\n     let tcx = infcx.tcx;\n     let opt_failing_obligation = a_impl_header"}]}