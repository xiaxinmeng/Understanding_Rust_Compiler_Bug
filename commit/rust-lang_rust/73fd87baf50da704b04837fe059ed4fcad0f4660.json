{"sha": "73fd87baf50da704b04837fe059ed4fcad0f4660", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczZmQ4N2JhZjUwZGE3MDRiMDQ4MzdmZTA1OWVkNGZjYWQwZjQ2NjA=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2010-12-29T05:33:52Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-01-03T18:59:00Z"}, "message": "Don't attempt to wake tasks that aren't blocked.\n\nIt's possible for a supervised task to kill and wake its supervising\ntask then immediately try to wake it again if the supervising task\nhas joined the supervised. This is the easiest way to prevent that.", "tree": {"sha": "c3761f1e64cb4254cf75f1dbda58fd59c600cba7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3761f1e64cb4254cf75f1dbda58fd59c600cba7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73fd87baf50da704b04837fe059ed4fcad0f4660", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73fd87baf50da704b04837fe059ed4fcad0f4660", "html_url": "https://github.com/rust-lang/rust/commit/73fd87baf50da704b04837fe059ed4fcad0f4660", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73fd87baf50da704b04837fe059ed4fcad0f4660/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ec4325fe9fe5808d7abab544e3a9ce896093f51", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ec4325fe9fe5808d7abab544e3a9ce896093f51", "html_url": "https://github.com/rust-lang/rust/commit/2ec4325fe9fe5808d7abab544e3a9ce896093f51"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "1522fcccb1c2a963f72385a8c4dcc94634a0db73", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73fd87baf50da704b04837fe059ed4fcad0f4660/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/73fd87baf50da704b04837fe059ed4fcad0f4660/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=73fd87baf50da704b04837fe059ed4fcad0f4660", "patch": "@@ -420,7 +420,7 @@ rust_task::notify_tasks_waiting_to_join() {\n             delete waiting_task;\n         } else {\n             rust_task *task = waiting_task->referent();\n-            if (task->dead() == false) {\n+            if (task->blocked() == true) {\n                 task->wakeup(this);\n             }\n         }"}, {"sha": "558c168710693354a16195c13cd8496fa42e5400", "filename": "src/test/run-pass/task-killjoin.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/73fd87baf50da704b04837fe059ed4fcad0f4660/src%2Ftest%2Frun-pass%2Ftask-killjoin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73fd87baf50da704b04837fe059ed4fcad0f4660/src%2Ftest%2Frun-pass%2Ftask-killjoin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-killjoin.rs?ref=73fd87baf50da704b04837fe059ed4fcad0f4660", "patch": "@@ -0,0 +1,36 @@\n+// Create a task that is supervised by another task,\n+// join the supervised task from the supervising task,\n+// then fail the supervised task. The supervised task\n+// will kill the supervising task, waking it up. The\n+// supervising task no longer needs to be wakened when\n+// the supervised task exits.\n+\n+fn supervised() {\n+    // Yield to make sure the supervisor joins before we\n+    // fail. This is currently not needed because the supervisor\n+    // runs first, but I can imagine that changing.\n+    yield;\n+    fail;\n+}\n+\n+fn supervisor() {\n+    let task t = spawn \"supervised\" supervised();\n+    join t;\n+}\n+\n+fn main() {\n+    // Start the test in another domain so that\n+    // the process doesn't return a failure status as a result\n+    // of the main task being killed.\n+    let task dom2 = spawn thread \"supervisor\" supervisor();\n+    join dom2;\n+}\n+\n+// Local Variables:\n+// mode: rust;\n+// fill-column: 78;\n+// indent-tabs-mode: nil\n+// c-basic-offset: 4\n+// buffer-file-coding-system: utf-8-unix\n+// compile-command: \"make -k -C .. 2>&1 | sed -e 's/\\\\/x\\\\//x:\\\\//g'\";\n+// End:"}]}