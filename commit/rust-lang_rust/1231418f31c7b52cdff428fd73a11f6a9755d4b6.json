{"sha": "1231418f31c7b52cdff428fd73a11f6a9755d4b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyMzE0MThmMzFjN2I1MmNkZmY0MjhmZDczYTExZjZhOTc1NWQ0YjY=", "commit": {"author": {"name": "Timo Freiberg", "email": "timo.freiberg@gmail.com", "date": "2020-04-13T20:17:06Z"}, "committer": {"name": "Timo Freiberg", "email": "timo.freiberg@gmail.com", "date": "2020-04-13T20:17:06Z"}, "message": "Change add_function assist to use todo!()", "tree": {"sha": "77010c5a04fa3b55ac3f97cee84f1ff92c995bc7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77010c5a04fa3b55ac3f97cee84f1ff92c995bc7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1231418f31c7b52cdff428fd73a11f6a9755d4b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1231418f31c7b52cdff428fd73a11f6a9755d4b6", "html_url": "https://github.com/rust-lang/rust/commit/1231418f31c7b52cdff428fd73a11f6a9755d4b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1231418f31c7b52cdff428fd73a11f6a9755d4b6/comments", "author": {"login": "TimoFreiberg", "id": 5281645, "node_id": "MDQ6VXNlcjUyODE2NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5281645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimoFreiberg", "html_url": "https://github.com/TimoFreiberg", "followers_url": "https://api.github.com/users/TimoFreiberg/followers", "following_url": "https://api.github.com/users/TimoFreiberg/following{/other_user}", "gists_url": "https://api.github.com/users/TimoFreiberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimoFreiberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimoFreiberg/subscriptions", "organizations_url": "https://api.github.com/users/TimoFreiberg/orgs", "repos_url": "https://api.github.com/users/TimoFreiberg/repos", "events_url": "https://api.github.com/users/TimoFreiberg/events{/privacy}", "received_events_url": "https://api.github.com/users/TimoFreiberg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TimoFreiberg", "id": 5281645, "node_id": "MDQ6VXNlcjUyODE2NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5281645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimoFreiberg", "html_url": "https://github.com/TimoFreiberg", "followers_url": "https://api.github.com/users/TimoFreiberg/followers", "following_url": "https://api.github.com/users/TimoFreiberg/following{/other_user}", "gists_url": "https://api.github.com/users/TimoFreiberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimoFreiberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimoFreiberg/subscriptions", "organizations_url": "https://api.github.com/users/TimoFreiberg/orgs", "repos_url": "https://api.github.com/users/TimoFreiberg/repos", "events_url": "https://api.github.com/users/TimoFreiberg/events{/privacy}", "received_events_url": "https://api.github.com/users/TimoFreiberg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c82e7696e6f86cc0843c5aab9f09b5d6dd0d4bac", "url": "https://api.github.com/repos/rust-lang/rust/commits/c82e7696e6f86cc0843c5aab9f09b5d6dd0d4bac", "html_url": "https://github.com/rust-lang/rust/commit/c82e7696e6f86cc0843c5aab9f09b5d6dd0d4bac"}], "stats": {"total": 59, "additions": 30, "deletions": 29}, "files": [{"sha": "b39e60870e5d808fd06276f6606a6ee106917b6f", "filename": "crates/ra_assists/src/doc_tests/generated.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1231418f31c7b52cdff428fd73a11f6a9755d4b6/crates%2Fra_assists%2Fsrc%2Fdoc_tests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1231418f31c7b52cdff428fd73a11f6a9755d4b6/crates%2Fra_assists%2Fsrc%2Fdoc_tests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fdoc_tests%2Fgenerated.rs?ref=1231418f31c7b52cdff428fd73a11f6a9755d4b6", "patch": "@@ -78,7 +78,7 @@ fn foo() {\n }\n \n fn bar(arg: &str, baz: Baz) {\n-    unimplemented!()\n+    todo!()\n }\n \n \"#####,"}, {"sha": "ad4ab66edef025b3b39e4b608520e82e9d561b2b", "filename": "crates/ra_assists/src/handlers/add_function.rs", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/1231418f31c7b52cdff428fd73a11f6a9755d4b6/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1231418f31c7b52cdff428fd73a11f6a9755d4b6/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_function.rs?ref=1231418f31c7b52cdff428fd73a11f6a9755d4b6", "patch": "@@ -29,7 +29,7 @@ use rustc_hash::{FxHashMap, FxHashSet};\n // }\n //\n // fn bar(arg: &str, baz: Baz) {\n-//     unimplemented!()\n+//     todo!()\n // }\n //\n // ```\n@@ -80,7 +80,7 @@ impl FunctionBuilder {\n         Some(Self { append_fn_at, fn_name, type_params, params })\n     }\n     fn render(self) -> Option<FunctionTemplate> {\n-        let placeholder_expr = ast::make::expr_unimplemented();\n+        let placeholder_expr = ast::make::expr_todo();\n         let fn_body = ast::make::block_expr(vec![], Some(placeholder_expr));\n         let fn_def = ast::make::fn_def(self.fn_name, self.type_params, self.params, fn_body);\n         let fn_def = ast::make::add_newlines(2, fn_def);\n@@ -225,7 +225,7 @@ fn foo() {\n }\n \n fn bar() {\n-    <|>unimplemented!()\n+    <|>todo!()\n }\n \",\n         )\n@@ -252,7 +252,7 @@ impl Foo {\n }\n \n fn bar() {\n-    <|>unimplemented!()\n+    <|>todo!()\n }\n \",\n         )\n@@ -276,7 +276,7 @@ fn foo1() {\n }\n \n fn bar() {\n-    <|>unimplemented!()\n+    <|>todo!()\n }\n \n fn foo2() {}\n@@ -302,7 +302,7 @@ mod baz {\n     }\n \n     fn bar() {\n-        <|>unimplemented!()\n+        <|>todo!()\n     }\n }\n \",\n@@ -315,20 +315,20 @@ mod baz {\n             add_function,\n             r\"\n struct Baz;\n-fn baz() -> Baz { unimplemented!() }\n+fn baz() -> Baz { todo!() }\n fn foo() {\n     bar<|>(baz());\n }\n \",\n             r\"\n struct Baz;\n-fn baz() -> Baz { unimplemented!() }\n+fn baz() -> Baz { todo!() }\n fn foo() {\n     bar(baz());\n }\n \n fn bar(baz: Baz) {\n-    <|>unimplemented!()\n+    <|>todo!()\n }\n \",\n         );\n@@ -361,7 +361,7 @@ impl Baz {\n }\n \n fn bar(baz: Baz) {\n-    <|>unimplemented!()\n+    <|>todo!()\n }\n \",\n         )\n@@ -382,7 +382,7 @@ fn foo() {\n }\n \n fn bar(arg: &str) {\n-    <|>unimplemented!()\n+    <|>todo!()\n }\n \"#,\n         )\n@@ -403,7 +403,7 @@ fn foo() {\n }\n \n fn bar(arg: char) {\n-    <|>unimplemented!()\n+    <|>todo!()\n }\n \"#,\n         )\n@@ -424,7 +424,7 @@ fn foo() {\n }\n \n fn bar(arg: i32) {\n-    <|>unimplemented!()\n+    <|>todo!()\n }\n \",\n         )\n@@ -445,7 +445,7 @@ fn foo() {\n }\n \n fn bar(arg: u8) {\n-    <|>unimplemented!()\n+    <|>todo!()\n }\n \",\n         )\n@@ -470,7 +470,7 @@ fn foo() {\n }\n \n fn bar(x: u8) {\n-    <|>unimplemented!()\n+    <|>todo!()\n }\n \",\n         )\n@@ -493,7 +493,7 @@ fn foo() {\n }\n \n fn bar(worble: ()) {\n-    <|>unimplemented!()\n+    <|>todo!()\n }\n \",\n         )\n@@ -506,7 +506,7 @@ fn bar(worble: ()) {\n             r\"\n trait Foo {}\n fn foo() -> impl Foo {\n-    unimplemented!()\n+    todo!()\n }\n fn baz() {\n     <|>bar(foo())\n@@ -515,14 +515,14 @@ fn baz() {\n             r\"\n trait Foo {}\n fn foo() -> impl Foo {\n-    unimplemented!()\n+    todo!()\n }\n fn baz() {\n     bar(foo())\n }\n \n fn bar(foo: impl Foo) {\n-    <|>unimplemented!()\n+    <|>todo!()\n }\n \",\n         )\n@@ -556,7 +556,7 @@ mod Foo {\n     }\n \n     fn bar(baz: super::Baz::Bof) {\n-        <|>unimplemented!()\n+        <|>todo!()\n     }\n }\n \",\n@@ -580,7 +580,7 @@ fn foo<T>(t: T) {\n }\n \n fn bar<T>(t: T) {\n-    <|>unimplemented!()\n+    <|>todo!()\n }\n \",\n         )\n@@ -611,7 +611,7 @@ fn foo() {\n }\n \n fn bar(arg: fn() -> Baz) {\n-    <|>unimplemented!()\n+    <|>todo!()\n }\n \",\n         )\n@@ -636,7 +636,7 @@ fn foo() {\n }\n \n fn bar(closure: impl Fn(i64) -> i64) {\n-    <|>unimplemented!()\n+    <|>todo!()\n }\n \",\n         )\n@@ -657,7 +657,7 @@ fn foo() {\n }\n \n fn bar(baz: ()) {\n-    <|>unimplemented!()\n+    <|>todo!()\n }\n \",\n         )\n@@ -682,7 +682,7 @@ fn foo() {\n }\n \n fn bar(baz_1: Baz, baz_2: Baz) {\n-    <|>unimplemented!()\n+    <|>todo!()\n }\n \",\n         )\n@@ -707,7 +707,7 @@ fn foo() {\n }\n \n fn bar(baz_1: Baz, baz_2: Baz, arg_1: &str, arg_2: &str) {\n-    <|>unimplemented!()\n+    <|>todo!()\n }\n \"#,\n         )\n@@ -779,7 +779,7 @@ impl Foo {\n         self.bar();\n     }\n     fn bar(&self) {\n-        unimplemented!();\n+        todo!();\n     }\n }\n         \","}, {"sha": "6483ba4f3e35c37659a451e43ba75506f2c63bdb", "filename": "docs/user/assists.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1231418f31c7b52cdff428fd73a11f6a9755d4b6/docs%2Fuser%2Fassists.md", "raw_url": "https://github.com/rust-lang/rust/raw/1231418f31c7b52cdff428fd73a11f6a9755d4b6/docs%2Fuser%2Fassists.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fassists.md?ref=1231418f31c7b52cdff428fd73a11f6a9755d4b6", "patch": "@@ -77,7 +77,7 @@ fn foo() {\n }\n \n fn bar(arg: &str, baz: Baz) {\n-    unimplemented!()\n+    todo!()\n }\n \n ```"}, {"sha": "101ae19bd1cb04d0c6ee54e6806e797d27dd1b11", "filename": "xtask/tests/tidy-tests/main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1231418f31c7b52cdff428fd73a11f6a9755d4b6/xtask%2Ftests%2Ftidy-tests%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1231418f31c7b52cdff428fd73a11f6a9755d4b6/xtask%2Ftests%2Ftidy-tests%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Ftests%2Ftidy-tests%2Fmain.rs?ref=1231418f31c7b52cdff428fd73a11f6a9755d4b6", "patch": "@@ -26,6 +26,7 @@ fn check_todo(path: &Path, text: &str) {\n         // Some of our assists generate `todo!()` so those files are whitelisted.\n         \"doc_tests/generated.rs\",\n         \"handlers/add_missing_impl_members.rs\",\n+        \"handlers/add_function.rs\",\n         // To support generating `todo!()` in assists, we have `expr_todo()` in ast::make.\n         \"ast/make.rs\",\n     ];"}]}