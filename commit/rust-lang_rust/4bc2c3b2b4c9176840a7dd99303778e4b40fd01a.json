{"sha": "4bc2c3b2b4c9176840a7dd99303778e4b40fd01a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiYzJjM2IyYjRjOTE3Njg0MGE3ZGQ5OTMwMzc3OGU0YjQwZmQwMWE=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-04-01T14:31:41Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-04-02T15:17:22Z"}, "message": "middle: trans: reflect: remove dead code", "tree": {"sha": "9538433d47152d401ce3677aa55f71526a5cf810", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9538433d47152d401ce3677aa55f71526a5cf810"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bc2c3b2b4c9176840a7dd99303778e4b40fd01a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bc2c3b2b4c9176840a7dd99303778e4b40fd01a", "html_url": "https://github.com/rust-lang/rust/commit/4bc2c3b2b4c9176840a7dd99303778e4b40fd01a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bc2c3b2b4c9176840a7dd99303778e4b40fd01a/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32753ed8112c7fb16ffe3564c01e60db9c05bf0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/32753ed8112c7fb16ffe3564c01e60db9c05bf0a", "html_url": "https://github.com/rust-lang/rust/commit/32753ed8112c7fb16ffe3564c01e60db9c05bf0a"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "7ad9010829c7fc8755419cff13266789fdad25ce", "filename": "src/librustc/middle/trans/reflect.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4bc2c3b2b4c9176840a7dd99303778e4b40fd01a/src%2Flibrustc%2Fmiddle%2Ftrans%2Freflect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bc2c3b2b4c9176840a7dd99303778e4b40fd01a/src%2Flibrustc%2Fmiddle%2Ftrans%2Freflect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Freflect.rs?ref=4bc2c3b2b4c9176840a7dd99303778e4b40fd01a", "patch": "@@ -46,10 +46,6 @@ impl<'a> Reflector<'a> {\n         C_uint(self.bcx.ccx(), u)\n     }\n \n-    pub fn c_int(&mut self, i: int) -> ValueRef {\n-        C_int(self.bcx.ccx(), i)\n-    }\n-\n     pub fn c_bool(&mut self, b: bool) -> ValueRef {\n         C_bool(self.bcx.ccx(), b)\n     }"}]}