{"sha": "23336adf849bc975e157f4034ee968d7fc40dc37", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzMzM2YWRmODQ5YmM5NzVlMTU3ZjQwMzRlZTk2OGQ3ZmM0MGRjMzc=", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-08-25T05:10:45Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-08-25T05:10:45Z"}, "message": "Fix `match_as_ref` bad suggestion\n\nFixes #4437", "tree": {"sha": "33ca8b7a01a194e6acf1304b5aa92b52676ea4cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33ca8b7a01a194e6acf1304b5aa92b52676ea4cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23336adf849bc975e157f4034ee968d7fc40dc37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23336adf849bc975e157f4034ee968d7fc40dc37", "html_url": "https://github.com/rust-lang/rust/commit/23336adf849bc975e157f4034ee968d7fc40dc37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23336adf849bc975e157f4034ee968d7fc40dc37/comments", "author": null, "committer": null, "parents": [{"sha": "2bcb6155948e2f8b86db08152a5f54bd5af625e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bcb6155948e2f8b86db08152a5f54bd5af625e5", "html_url": "https://github.com/rust-lang/rust/commit/2bcb6155948e2f8b86db08152a5f54bd5af625e5"}], "stats": {"total": 79, "additions": 76, "deletions": 3}, "files": [{"sha": "2a65ea000db3de44b0f42f9863b652b31f96f477", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/23336adf849bc975e157f4034ee968d7fc40dc37/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23336adf849bc975e157f4034ee968d7fc40dc37/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=23336adf849bc975e157f4034ee968d7fc40dc37", "patch": "@@ -624,6 +624,24 @@ fn check_match_as_ref(cx: &LateContext<'_, '_>, ex: &Expr, arms: &[Arm], expr: &\n             } else {\n                 \"as_mut\"\n             };\n+\n+            let output_ty = cx.tables.expr_ty(expr);\n+            let input_ty = cx.tables.expr_ty(ex);\n+\n+            let cast = if_chain! {\n+                if let ty::Adt(_, substs) = input_ty.sty;\n+                let input_ty = substs.type_at(0);\n+                if let ty::Adt(_, substs) = output_ty.sty;\n+                let output_ty = substs.type_at(0);\n+                if let ty::Ref(_, output_ty, _) = output_ty.sty;\n+                if input_ty != output_ty;\n+                then {\n+                    \".map(|x| x as _)\"\n+                } else {\n+                    \"\"\n+                }\n+            };\n+\n             let mut applicability = Applicability::MachineApplicable;\n             span_lint_and_sugg(\n                 cx,\n@@ -632,9 +650,10 @@ fn check_match_as_ref(cx: &LateContext<'_, '_>, ex: &Expr, arms: &[Arm], expr: &\n                 &format!(\"use {}() instead\", suggestion),\n                 \"try this\",\n                 format!(\n-                    \"{}.{}()\",\n+                    \"{}.{}(){}\",\n                     snippet_with_applicability(cx, ex.span, \"_\", &mut applicability),\n-                    suggestion\n+                    suggestion,\n+                    cast,\n                 ),\n                 applicability,\n             )"}, {"sha": "c61eb9216643e14159ca5d6fb26b93764b05e264", "filename": "tests/ui/match_as_ref.fixed", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/23336adf849bc975e157f4034ee968d7fc40dc37/tests%2Fui%2Fmatch_as_ref.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/23336adf849bc975e157f4034ee968d7fc40dc37/tests%2Fui%2Fmatch_as_ref.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_as_ref.fixed?ref=23336adf849bc975e157f4034ee968d7fc40dc37", "patch": "@@ -11,4 +11,25 @@ fn match_as_ref() {\n     let borrow_mut: Option<&mut ()> = mut_owned.as_mut();\n }\n \n+mod issue4437 {\n+    use std::{error::Error, fmt, num::ParseIntError};\n+\n+    #[derive(Debug)]\n+    struct E {\n+        source: Option<ParseIntError>,\n+    }\n+\n+    impl Error for E {\n+        fn source(&self) -> Option<&(dyn Error + 'static)> {\n+            self.source.as_ref().map(|x| x as _)\n+        }\n+    }\n+\n+    impl fmt::Display for E {\n+        fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+            unimplemented!()\n+        }\n+    }\n+}\n+\n fn main() {}"}, {"sha": "2fbd0b255faae6d8c7f18a986620cef94aefdb49", "filename": "tests/ui/match_as_ref.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/23336adf849bc975e157f4034ee968d7fc40dc37/tests%2Fui%2Fmatch_as_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23336adf849bc975e157f4034ee968d7fc40dc37/tests%2Fui%2Fmatch_as_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_as_ref.rs?ref=23336adf849bc975e157f4034ee968d7fc40dc37", "patch": "@@ -17,4 +17,28 @@ fn match_as_ref() {\n     };\n }\n \n+mod issue4437 {\n+    use std::{error::Error, fmt, num::ParseIntError};\n+\n+    #[derive(Debug)]\n+    struct E {\n+        source: Option<ParseIntError>,\n+    }\n+\n+    impl Error for E {\n+        fn source(&self) -> Option<&(dyn Error + 'static)> {\n+            match self.source {\n+                Some(ref s) => Some(s),\n+                None => None,\n+            }\n+        }\n+    }\n+\n+    impl fmt::Display for E {\n+        fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+            unimplemented!()\n+        }\n+    }\n+}\n+\n fn main() {}"}, {"sha": "dd4739d1ff21d51038408c9e059f15c1347f6096", "filename": "tests/ui/match_as_ref.stderr", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/23336adf849bc975e157f4034ee968d7fc40dc37/tests%2Fui%2Fmatch_as_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23336adf849bc975e157f4034ee968d7fc40dc37/tests%2Fui%2Fmatch_as_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_as_ref.stderr?ref=23336adf849bc975e157f4034ee968d7fc40dc37", "patch": "@@ -20,5 +20,14 @@ LL | |         Some(ref mut v) => Some(v),\n LL | |     };\n    | |_____^ help: try this: `mut_owned.as_mut()`\n \n-error: aborting due to 2 previous errors\n+error: use as_ref() instead\n+  --> $DIR/match_as_ref.rs:30:13\n+   |\n+LL | /             match self.source {\n+LL | |                 Some(ref s) => Some(s),\n+LL | |                 None => None,\n+LL | |             }\n+   | |_____________^ help: try this: `self.source.as_ref().map(|x| x as _)`\n+\n+error: aborting due to 3 previous errors\n "}]}