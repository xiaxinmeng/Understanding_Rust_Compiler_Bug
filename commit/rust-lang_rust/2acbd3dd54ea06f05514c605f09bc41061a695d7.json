{"sha": "2acbd3dd54ea06f05514c605f09bc41061a695d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhY2JkM2RkNTRlYTA2ZjA1NTE0YzYwNWYwOWJjNDEwNjFhNjk1ZDc=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-11-14T05:16:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-14T05:16:19Z"}, "message": "Rollup merge of #66349 - euclio:def-site-builtins, r=petrochenkov\n\nexpand source_util macros with def-site context\n\ncc @petrochenkov\n\nSee https://internals.rust-lang.org/t/spans-from-built-in-macro-expansions-are-not-from-expansion/11276/2 for context.", "tree": {"sha": "d2ac37f5a5b138fa1cf211a4346e9be6dda50a64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2ac37f5a5b138fa1cf211a4346e9be6dda50a64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2acbd3dd54ea06f05514c605f09bc41061a695d7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdzOMjCRBK7hj4Ov3rIwAAdHIIAEFDVp4kBxuWLA/5MQuUqIs+\ns1DOZNhaPgrjRx8rj27xFxD2TGToRG65h1m560r7BqvkaJXM0R100hBeaGZXUk3o\n1IpIHuYJylhm9qwP45xs2Sms3EbEMt8gIRu1sq2bKvdIm+jyQN+w8CJmZpnnkhkh\neGH4gPWmY8fOOhbbcJ5Ut+v7rCmlzz5E9waJNWrVj25XRsMfqk9eGhbk2Kw7dSOo\nf2W9YiXLQt4NYOoaB+vhY5e2X4oU2ZtjHlI6qaTSQLBufTAScNaU+4/riaHjfQjx\nswRejVZq0Vxye/rN3PzuNXtgbIGhGP/qR/sfAfxp/X6YcPjWMCjca8lMzltpxZg=\n=ceQp\n-----END PGP SIGNATURE-----\n", "payload": "tree d2ac37f5a5b138fa1cf211a4346e9be6dda50a64\nparent 187e9118ccbd52786e96307a159467f927a81322\nparent fe4b709c0cc51dda3a9ed0cb5d10346509e9966d\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1573708579 +0900\ncommitter GitHub <noreply@github.com> 1573708579 +0900\n\nRollup merge of #66349 - euclio:def-site-builtins, r=petrochenkov\n\nexpand source_util macros with def-site context\n\ncc @petrochenkov\n\nSee https://internals.rust-lang.org/t/spans-from-built-in-macro-expansions-are-not-from-expansion/11276/2 for context.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2acbd3dd54ea06f05514c605f09bc41061a695d7", "html_url": "https://github.com/rust-lang/rust/commit/2acbd3dd54ea06f05514c605f09bc41061a695d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2acbd3dd54ea06f05514c605f09bc41061a695d7/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "187e9118ccbd52786e96307a159467f927a81322", "url": "https://api.github.com/repos/rust-lang/rust/commits/187e9118ccbd52786e96307a159467f927a81322", "html_url": "https://github.com/rust-lang/rust/commit/187e9118ccbd52786e96307a159467f927a81322"}, {"sha": "fe4b709c0cc51dda3a9ed0cb5d10346509e9966d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe4b709c0cc51dda3a9ed0cb5d10346509e9966d", "html_url": "https://github.com/rust-lang/rust/commit/fe4b709c0cc51dda3a9ed0cb5d10346509e9966d"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "3d27af2f210a5f259a8847275002851d3254ca43", "filename": "src/libsyntax_ext/source_util.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2acbd3dd54ea06f05514c605f09bc41061a695d7/src%2Flibsyntax_ext%2Fsource_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2acbd3dd54ea06f05514c605f09bc41061a695d7/src%2Flibsyntax_ext%2Fsource_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fsource_util.rs?ref=2acbd3dd54ea06f05514c605f09bc41061a695d7", "patch": "@@ -21,6 +21,7 @@ use rustc_data_structures::sync::Lrc;\n /// line!(): expands to the current line number\n pub fn expand_line(cx: &mut ExtCtxt<'_>, sp: Span, tts: TokenStream)\n                    -> Box<dyn base::MacResult+'static> {\n+    let sp = cx.with_def_site_ctxt(sp);\n     base::check_zero_tts(cx, sp, tts, \"line!\");\n \n     let topmost = cx.expansion_cause().unwrap_or(sp);\n@@ -32,6 +33,7 @@ pub fn expand_line(cx: &mut ExtCtxt<'_>, sp: Span, tts: TokenStream)\n /* column!(): expands to the current column number */\n pub fn expand_column(cx: &mut ExtCtxt<'_>, sp: Span, tts: TokenStream)\n                   -> Box<dyn base::MacResult+'static> {\n+    let sp = cx.with_def_site_ctxt(sp);\n     base::check_zero_tts(cx, sp, tts, \"column!\");\n \n     let topmost = cx.expansion_cause().unwrap_or(sp);\n@@ -45,6 +47,7 @@ pub fn expand_column(cx: &mut ExtCtxt<'_>, sp: Span, tts: TokenStream)\n /// out if we wanted.\n pub fn expand_file(cx: &mut ExtCtxt<'_>, sp: Span, tts: TokenStream)\n                    -> Box<dyn base::MacResult+'static> {\n+    let sp = cx.with_def_site_ctxt(sp);\n     base::check_zero_tts(cx, sp, tts, \"file!\");\n \n     let topmost = cx.expansion_cause().unwrap_or(sp);\n@@ -54,12 +57,14 @@ pub fn expand_file(cx: &mut ExtCtxt<'_>, sp: Span, tts: TokenStream)\n \n pub fn expand_stringify(cx: &mut ExtCtxt<'_>, sp: Span, tts: TokenStream)\n                         -> Box<dyn base::MacResult+'static> {\n+    let sp = cx.with_def_site_ctxt(sp);\n     let s = pprust::tts_to_string(tts);\n     base::MacEager::expr(cx.expr_str(sp, Symbol::intern(&s)))\n }\n \n pub fn expand_mod(cx: &mut ExtCtxt<'_>, sp: Span, tts: TokenStream)\n                   -> Box<dyn base::MacResult+'static> {\n+    let sp = cx.with_def_site_ctxt(sp);\n     base::check_zero_tts(cx, sp, tts, \"module_path!\");\n     let mod_path = &cx.current_expansion.module.mod_path;\n     let string = mod_path.iter().map(|x| x.to_string()).collect::<Vec<String>>().join(\"::\");\n@@ -72,6 +77,7 @@ pub fn expand_mod(cx: &mut ExtCtxt<'_>, sp: Span, tts: TokenStream)\n /// unhygienically.\n pub fn expand_include<'cx>(cx: &'cx mut ExtCtxt<'_>, sp: Span, tts: TokenStream)\n                            -> Box<dyn base::MacResult+'cx> {\n+    let sp = cx.with_def_site_ctxt(sp);\n     let file = match get_single_str_from_tts(cx, sp, tts, \"include!\") {\n         Some(f) => f,\n         None => return DummyResult::any(sp),\n@@ -125,6 +131,7 @@ pub fn expand_include<'cx>(cx: &'cx mut ExtCtxt<'_>, sp: Span, tts: TokenStream)\n // include_str! : read the given file, insert it as a literal string expr\n pub fn expand_include_str(cx: &mut ExtCtxt<'_>, sp: Span, tts: TokenStream)\n                           -> Box<dyn base::MacResult+'static> {\n+    let sp = cx.with_def_site_ctxt(sp);\n     let file = match get_single_str_from_tts(cx, sp, tts, \"include_str!\") {\n         Some(f) => f,\n         None => return DummyResult::any(sp)\n@@ -156,6 +163,7 @@ pub fn expand_include_str(cx: &mut ExtCtxt<'_>, sp: Span, tts: TokenStream)\n \n pub fn expand_include_bytes(cx: &mut ExtCtxt<'_>, sp: Span, tts: TokenStream)\n                             -> Box<dyn base::MacResult+'static> {\n+    let sp = cx.with_def_site_ctxt(sp);\n     let file = match get_single_str_from_tts(cx, sp, tts, \"include_bytes!\") {\n         Some(f) => f,\n         None => return DummyResult::any(sp)"}]}