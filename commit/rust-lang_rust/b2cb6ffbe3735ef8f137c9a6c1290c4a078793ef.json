{"sha": "b2cb6ffbe3735ef8f137c9a6c1290c4a078793ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyY2I2ZmZiZTM3MzVlZjhmMTM3YzlhNmMxMjkwYzRhMDc4NzkzZWY=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-12-12T00:23:28Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-12-12T00:23:28Z"}, "message": "clone_on_copy: show the type in the lint message\n\nchangelog: clone_on_copy: show the type in the lint message", "tree": {"sha": "64621a313f96266f4df7deed9c49936575a8f4d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64621a313f96266f4df7deed9c49936575a8f4d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2cb6ffbe3735ef8f137c9a6c1290c4a078793ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2cb6ffbe3735ef8f137c9a6c1290c4a078793ef", "html_url": "https://github.com/rust-lang/rust/commit/b2cb6ffbe3735ef8f137c9a6c1290c4a078793ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2cb6ffbe3735ef8f137c9a6c1290c4a078793ef/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "baf5f2da8b99c23bed127912f79532eb497b3e0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/baf5f2da8b99c23bed127912f79532eb497b3e0b", "html_url": "https://github.com/rust-lang/rust/commit/baf5f2da8b99c23bed127912f79532eb497b3e0b"}], "stats": {"total": 32, "additions": 19, "deletions": 13}, "files": [{"sha": "03eaee35fc4fff18c38cc19203aa05f47ed91605", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b2cb6ffbe3735ef8f137c9a6c1290c4a078793ef/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2cb6ffbe3735ef8f137c9a6c1290c4a078793ef/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=b2cb6ffbe3735ef8f137c9a6c1290c4a078793ef", "patch": "@@ -2174,11 +2174,17 @@ fn lint_clone_on_copy(cx: &LateContext<'_>, expr: &hir::Expr<'_>, arg: &hir::Exp\n         } else {\n             snip = None;\n         }\n-        span_lint_and_then(cx, CLONE_ON_COPY, expr.span, \"using `clone` on a `Copy` type\", |diag| {\n-            if let Some((text, snip)) = snip {\n-                diag.span_suggestion(expr.span, text, snip, Applicability::MachineApplicable);\n-            }\n-        });\n+        span_lint_and_then(\n+            cx,\n+            CLONE_ON_COPY,\n+            expr.span,\n+            &format!(\"using `clone` on type `{}` which implements the `Copy` trait\", ty),\n+            |diag| {\n+                if let Some((text, snip)) = snip {\n+                    diag.span_suggestion(expr.span, text, snip, Applicability::MachineApplicable);\n+                }\n+            },\n+        );\n     }\n }\n "}, {"sha": "14a700886a7bc1a4171bea3873ae0c053c9847aa", "filename": "tests/ui/clone_on_copy.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b2cb6ffbe3735ef8f137c9a6c1290c4a078793ef/tests%2Fui%2Fclone_on_copy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2cb6ffbe3735ef8f137c9a6c1290c4a078793ef/tests%2Fui%2Fclone_on_copy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fclone_on_copy.stderr?ref=b2cb6ffbe3735ef8f137c9a6c1290c4a078793ef", "patch": "@@ -1,30 +1,30 @@\n-error: using `clone` on a `Copy` type\n+error: using `clone` on type `i32` which implements the `Copy` trait\n   --> $DIR/clone_on_copy.rs:22:5\n    |\n LL |     42.clone();\n    |     ^^^^^^^^^^ help: try removing the `clone` call: `42`\n    |\n    = note: `-D clippy::clone-on-copy` implied by `-D warnings`\n \n-error: using `clone` on a `Copy` type\n+error: using `clone` on type `i32` which implements the `Copy` trait\n   --> $DIR/clone_on_copy.rs:26:5\n    |\n LL |     (&42).clone();\n    |     ^^^^^^^^^^^^^ help: try dereferencing it: `*(&42)`\n \n-error: using `clone` on a `Copy` type\n+error: using `clone` on type `i32` which implements the `Copy` trait\n   --> $DIR/clone_on_copy.rs:29:5\n    |\n LL |     rc.borrow().clone();\n    |     ^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*rc.borrow()`\n \n-error: using `clone` on a `Copy` type\n+error: using `clone` on type `char` which implements the `Copy` trait\n   --> $DIR/clone_on_copy.rs:35:14\n    |\n LL |     is_ascii('z'.clone());\n    |              ^^^^^^^^^^^ help: try removing the `clone` call: `'z'`\n \n-error: using `clone` on a `Copy` type\n+error: using `clone` on type `i32` which implements the `Copy` trait\n   --> $DIR/clone_on_copy.rs:39:14\n    |\n LL |     vec.push(42.clone());"}, {"sha": "bb2dd998f27150afc1b77eb1160e04ce1bd141d1", "filename": "tests/ui/unnecessary_clone.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b2cb6ffbe3735ef8f137c9a6c1290c4a078793ef/tests%2Fui%2Funnecessary_clone.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2cb6ffbe3735ef8f137c9a6c1290c4a078793ef/tests%2Fui%2Funnecessary_clone.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_clone.stderr?ref=b2cb6ffbe3735ef8f137c9a6c1290c4a078793ef", "patch": "@@ -30,15 +30,15 @@ error: using `.clone()` on a ref-counted pointer\n LL |     let _: Arc<dyn SomeTrait> = x.clone();\n    |                                 ^^^^^^^^^ help: try this: `Arc::<SomeImpl>::clone(&x)`\n \n-error: using `clone` on a `Copy` type\n+error: using `clone` on type `T` which implements the `Copy` trait\n   --> $DIR/unnecessary_clone.rs:40:5\n    |\n LL |     t.clone();\n    |     ^^^^^^^^^ help: try removing the `clone` call: `t`\n    |\n    = note: `-D clippy::clone-on-copy` implied by `-D warnings`\n \n-error: using `clone` on a `Copy` type\n+error: using `clone` on type `std::option::Option<T>` which implements the `Copy` trait\n   --> $DIR/unnecessary_clone.rs:42:5\n    |\n LL |     Some(t).clone();\n@@ -60,7 +60,7 @@ help: or try being explicit if you are sure, that you want to clone a reference\n LL |     let z: &Vec<_> = <&std::vec::Vec<i32>>::clone(y);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: using `clone` on a `Copy` type\n+error: using `clone` on type `many_derefs::E` which implements the `Copy` trait\n   --> $DIR/unnecessary_clone.rs:84:20\n    |\n LL |         let _: E = a.clone();"}]}