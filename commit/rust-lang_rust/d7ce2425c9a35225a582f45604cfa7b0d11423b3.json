{"sha": "d7ce2425c9a35225a582f45604cfa7b0d11423b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3Y2UyNDI1YzlhMzUyMjVhNTgyZjQ1NjA0Y2ZhN2IwZDExNDIzYjM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-27T00:08:10Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-27T00:08:10Z"}, "message": "Load structural values through pointer before passing structs as args.", "tree": {"sha": "e0cbb7ac219c929a515a9aa3cdf71ba2c0246995", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0cbb7ac219c929a515a9aa3cdf71ba2c0246995"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7ce2425c9a35225a582f45604cfa7b0d11423b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7ce2425c9a35225a582f45604cfa7b0d11423b3", "html_url": "https://github.com/rust-lang/rust/commit/d7ce2425c9a35225a582f45604cfa7b0d11423b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7ce2425c9a35225a582f45604cfa7b0d11423b3/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f56b0061ce058c0edd614cfdd5cbdb72efcfe08", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f56b0061ce058c0edd614cfdd5cbdb72efcfe08", "html_url": "https://github.com/rust-lang/rust/commit/9f56b0061ce058c0edd614cfdd5cbdb72efcfe08"}], "stats": {"total": 40, "additions": 22, "deletions": 18}, "files": [{"sha": "70d6d62f9b9cf49ade69e334767011629f4979a5", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 22, "deletions": 18, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/d7ce2425c9a35225a582f45604cfa7b0d11423b3/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7ce2425c9a35225a582f45604cfa7b0d11423b3/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=d7ce2425c9a35225a582f45604cfa7b0d11423b3", "patch": "@@ -1124,20 +1124,6 @@ fn trans_lval(@block_ctxt cx, @ast.expr e) -> tup(result, bool) {\n     fail;\n }\n \n-impure fn trans_exprs(@block_ctxt cx, &vec[@ast.expr] es)\n-    -> tup(@block_ctxt, vec[ValueRef]) {\n-    let vec[ValueRef] vs = vec();\n-    let @block_ctxt bcx = cx;\n-\n-    for (@ast.expr e in es) {\n-        auto res = trans_expr(bcx, e);\n-        vs += res.val;\n-        bcx = res.bcx;\n-    }\n-\n-    ret tup(bcx, vs);\n-}\n-\n impure fn trans_cast(@block_ctxt cx, @ast.expr e, &ast.ann ann) -> result {\n     auto e_res = trans_expr(cx, e);\n     auto llsrctype = val_ty(e_res.val);\n@@ -1169,15 +1155,33 @@ impure fn trans_cast(@block_ctxt cx, @ast.expr e, &ast.ann ann) -> result {\n     ret e_res;\n }\n \n+\n+impure fn trans_args(@block_ctxt cx, &vec[@ast.expr] es)\n+    -> tup(@block_ctxt, vec[ValueRef]) {\n+    let vec[ValueRef] vs = vec(cx.fcx.lltaskptr);\n+    let @block_ctxt bcx = cx;\n+\n+    for (@ast.expr e in es) {\n+        auto res = trans_expr(bcx, e);\n+        // Until here we've been treating structures by pointer;\n+        // we are now passing it as an arg, so need to load it.\n+        if (typeck.type_is_structural(typeck.expr_ty(e))) {\n+            res.val = res.bcx.build.Load(res.val);\n+        }\n+        vs += res.val;\n+        bcx = res.bcx;\n+    }\n+\n+    ret tup(bcx, vs);\n+}\n+\n impure fn trans_call(@block_ctxt cx, @ast.expr f,\n                      vec[@ast.expr] args) -> result {\n     auto f_res = trans_lval(cx, f);\n     check (! f_res._1);\n-    auto args_res = trans_exprs(f_res._0.bcx, args);\n-    auto llargs = vec(cx.fcx.lltaskptr);\n-    llargs += args_res._1;\n+    auto args_res = trans_args(f_res._0.bcx, args);\n     ret res(args_res._0,\n-            args_res._0.build.FastCall(f_res._0.val, llargs));\n+            args_res._0.build.FastCall(f_res._0.val, args_res._1));\n }\n \n impure fn trans_tup(@block_ctxt cx, vec[tup(bool, @ast.expr)] args,"}]}