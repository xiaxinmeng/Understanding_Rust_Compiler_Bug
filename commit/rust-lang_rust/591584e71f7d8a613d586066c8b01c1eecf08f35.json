{"sha": "591584e71f7d8a613d586066c8b01c1eecf08f35", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5MTU4NGU3MWY3ZDhhNjEzZDU4NjA2NmM4YjAxYzFlZWNmMDhmMzU=", "commit": {"author": {"name": "Mikail Bagishov", "email": "bagishov.mikail@yandex.ru", "date": "2020-05-26T20:48:36Z"}, "committer": {"name": "Mikail Bagishov", "email": "bagishov.mikail@yandex.ru", "date": "2020-05-26T21:57:07Z"}, "message": "Add tests for 'impl Default for [T; N]'", "tree": {"sha": "8434d56eecfdc5063f326c3f56e9c11b2c45314d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8434d56eecfdc5063f326c3f56e9c11b2c45314d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/591584e71f7d8a613d586066c8b01c1eecf08f35", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE2VP2zUMUCEfzAYinY89LH52SGkAFAl7NkLYACgkQY89LH52S\nGkAuigwAmhHDnnTXNaAga8b+upnHjwR6HCyCkqUvFvWLx3pSOA69EL2zva66DHT4\n/0hVrmfGJG4MCXSZ1afYrBD1ZhNOZqdUHf6TlgjqrGEW18wtSnvN9qrMN5AQeUzL\nRtktuvbfW1KuylyVJBf99EAAmzVG/dEq7ESXZJNmk128UYDbnpz/BnPzQwN3LsdB\n9B++LIW81hcgmnlqU070hk0+Jx9UVREfi1bVnpl4aNhzQLlv2p6ppPbPvgcvDMGj\nS7fNCIcevaEA4aJ2zQQ8COfa7DyMoA5W1TKrdaTMoYWYsi/KXs8IKnVia/J9Sc8g\n2QBIiF8TW05M0c2qsr3v7SaDlg8WXFPwipUXHHsQGuXNmWGCwYQ2OYO6NVZRKMrp\nMR3HibnWiAPRuJMgxCnIRt70frJN7ai9KWxc3m+Jh7rH3Jw2++3hikHlxHfxETn5\nUsY249lgAIf0QF1GgbV9Q9R84kax9RGZW9ifjMbR7YaPmZTi1kjpFGcSCZ40xexK\n+NR1RmXh\n=tbyy\n-----END PGP SIGNATURE-----", "payload": "tree 8434d56eecfdc5063f326c3f56e9c11b2c45314d\nparent aeca4d6428c52cbf2c8d1f28657b0bdf92e4ea7c\nauthor Mikail Bagishov <bagishov.mikail@yandex.ru> 1590526116 +0300\ncommitter Mikail Bagishov <bagishov.mikail@yandex.ru> 1590530227 +0300\n\nAdd tests for 'impl Default for [T; N]'\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/591584e71f7d8a613d586066c8b01c1eecf08f35", "html_url": "https://github.com/rust-lang/rust/commit/591584e71f7d8a613d586066c8b01c1eecf08f35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/591584e71f7d8a613d586066c8b01c1eecf08f35/comments", "author": {"login": "MikailBag", "id": 11889433, "node_id": "MDQ6VXNlcjExODg5NDMz", "avatar_url": "https://avatars.githubusercontent.com/u/11889433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MikailBag", "html_url": "https://github.com/MikailBag", "followers_url": "https://api.github.com/users/MikailBag/followers", "following_url": "https://api.github.com/users/MikailBag/following{/other_user}", "gists_url": "https://api.github.com/users/MikailBag/gists{/gist_id}", "starred_url": "https://api.github.com/users/MikailBag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MikailBag/subscriptions", "organizations_url": "https://api.github.com/users/MikailBag/orgs", "repos_url": "https://api.github.com/users/MikailBag/repos", "events_url": "https://api.github.com/users/MikailBag/events{/privacy}", "received_events_url": "https://api.github.com/users/MikailBag/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MikailBag", "id": 11889433, "node_id": "MDQ6VXNlcjExODg5NDMz", "avatar_url": "https://avatars.githubusercontent.com/u/11889433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MikailBag", "html_url": "https://github.com/MikailBag", "followers_url": "https://api.github.com/users/MikailBag/followers", "following_url": "https://api.github.com/users/MikailBag/following{/other_user}", "gists_url": "https://api.github.com/users/MikailBag/gists{/gist_id}", "starred_url": "https://api.github.com/users/MikailBag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MikailBag/subscriptions", "organizations_url": "https://api.github.com/users/MikailBag/orgs", "repos_url": "https://api.github.com/users/MikailBag/repos", "events_url": "https://api.github.com/users/MikailBag/events{/privacy}", "received_events_url": "https://api.github.com/users/MikailBag/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aeca4d6428c52cbf2c8d1f28657b0bdf92e4ea7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/aeca4d6428c52cbf2c8d1f28657b0bdf92e4ea7c", "html_url": "https://github.com/rust-lang/rust/commit/aeca4d6428c52cbf2c8d1f28657b0bdf92e4ea7c"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "41855a9a8cbab27ad50ce41077f5fab856830f7a", "filename": "src/libcore/tests/array.rs", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/591584e71f7d8a613d586066c8b01c1eecf08f35/src%2Flibcore%2Ftests%2Farray.rs", "raw_url": "https://github.com/rust-lang/rust/raw/591584e71f7d8a613d586066c8b01c1eecf08f35/src%2Flibcore%2Ftests%2Farray.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Farray.rs?ref=591584e71f7d8a613d586066c8b01c1eecf08f35", "patch": "@@ -241,3 +241,44 @@ fn iterator_drops() {\n     }\n     assert_eq!(i.get(), 5);\n }\n+\n+#[test]\n+fn array_default_impl_avoids_leaks_on_panic() {\n+    use core::sync::atomic::{AtomicUsize, Ordering::Relaxed};\n+    static COUNTER: AtomicUsize = AtomicUsize::new(0);\n+    #[derive(Debug)]\n+    struct Bomb(usize);\n+\n+    impl Default for Bomb {\n+        fn default() -> Bomb {\n+            if COUNTER.load(Relaxed) == 3 {\n+                panic!(\"bomb limit exceeded\");\n+            }\n+\n+            COUNTER.fetch_add(1, Relaxed);\n+            Bomb(COUNTER.load(Relaxed))\n+        }\n+    }\n+\n+    impl Drop for Bomb {\n+        fn drop(&mut self) {\n+            COUNTER.fetch_sub(1, Relaxed);\n+        }\n+    }\n+\n+    let res = std::panic::catch_unwind(|| <[Bomb; 5]>::default());\n+    let panic_msg = match res {\n+        Ok(_) => unreachable!(),\n+        Err(p) => p.downcast::<&'static str>().unwrap(),\n+    };\n+    assert_eq!(*panic_msg, \"bomb limit exceeded\");\n+    // check that all bombs are successfully dropped\n+    assert_eq!(COUNTER.load(Relaxed), 0);\n+}\n+\n+#[test]\n+fn empty_array_is_always_default() {\n+    struct DoesNotImplDefault;\n+\n+    let _arr = <[DoesNotImplDefault; 0]>::default();\n+}"}]}