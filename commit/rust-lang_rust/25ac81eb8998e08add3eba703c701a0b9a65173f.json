{"sha": "25ac81eb8998e08add3eba703c701a0b9a65173f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1YWM4MWViODk5OGUwOGFkZDNlYmE3MDNjNzAxYTBiOWE2NTE3M2Y=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-11T08:11:33Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-14T00:24:08Z"}, "message": "syntax: Preserve attributes in #[deriving]\n\nNow that the #[deriving] attribute is removed, the raw_pointers_deriving lint\nwas broken. This commit restores the lint by preserving lint attributes\nacross #[deriving] to the implementations and using #[automatically_derived] as\nthe trigger for activating the lint.", "tree": {"sha": "94f9c8b673f614d4c7764eb2ea8da577cbd02850", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94f9c8b673f614d4c7764eb2ea8da577cbd02850"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25ac81eb8998e08add3eba703c701a0b9a65173f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25ac81eb8998e08add3eba703c701a0b9a65173f", "html_url": "https://github.com/rust-lang/rust/commit/25ac81eb8998e08add3eba703c701a0b9a65173f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25ac81eb8998e08add3eba703c701a0b9a65173f/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f912005ef34c8adfc2b0827f2d1e353e1508d3d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f912005ef34c8adfc2b0827f2d1e353e1508d3d0", "html_url": "https://github.com/rust-lang/rust/commit/f912005ef34c8adfc2b0827f2d1e353e1508d3d0"}], "stats": {"total": 36, "additions": 25, "deletions": 11}, "files": [{"sha": "6df4da89402199b3f50864a2a12b2faa21ca93ba", "filename": "src/libsyntax/ext/deriving/generic.rs", "status": "modified", "additions": 25, "deletions": 11, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/25ac81eb8998e08add3eba703c701a0b9a65173f/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25ac81eb8998e08add3eba703c701a0b9a65173f/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs?ref=25ac81eb8998e08add3eba703c701a0b9a65173f", "patch": "@@ -182,6 +182,7 @@ use std::cell::RefCell;\n use ast;\n use ast::{P, EnumDef, Expr, Ident, Generics, StructDef};\n use ast_util;\n+use attr::AttrMetaMethods;\n use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n use codemap;\n@@ -330,21 +331,34 @@ impl<'a> TraitDef<'a> {\n                   _mitem: @ast::MetaItem,\n                   item: @ast::Item,\n                   push: |@ast::Item|) {\n-        match item.node {\n+        let newitem = match item.node {\n             ast::ItemStruct(struct_def, ref generics) => {\n-                push(self.expand_struct_def(cx,\n-                                            struct_def,\n-                                            item.ident,\n-                                            generics));\n+                self.expand_struct_def(cx,\n+                                       struct_def,\n+                                       item.ident,\n+                                       generics)\n             }\n             ast::ItemEnum(ref enum_def, ref generics) => {\n-                push(self.expand_enum_def(cx,\n-                                          enum_def,\n-                                          item.ident,\n-                                          generics));\n+                self.expand_enum_def(cx,\n+                                     enum_def,\n+                                     item.ident,\n+                                     generics)\n             }\n-            _ => ()\n-        }\n+            _ => return\n+        };\n+        // Keep the lint attributes of the previous item to control how the\n+        // generated implementations are linted\n+        let mut attrs = newitem.attrs.clone();\n+        attrs.extend(item.attrs.iter().filter(|a| {\n+            match a.name().get() {\n+                \"allow\" | \"warn\" | \"deny\" | \"forbid\" => true,\n+                _ => false,\n+            }\n+        }).map(|a| a.clone()));\n+        push(@ast::Item {\n+            attrs: attrs,\n+            ..(*newitem).clone()\n+        })\n     }\n \n     /**"}]}