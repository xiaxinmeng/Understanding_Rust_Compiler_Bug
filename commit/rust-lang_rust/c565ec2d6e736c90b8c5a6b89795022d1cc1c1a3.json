{"sha": "c565ec2d6e736c90b8c5a6b89795022d1cc1c1a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1NjVlYzJkNmU3MzZjOTBiOGM1YTZiODk3OTUwMjJkMWNjMWMxYTM=", "commit": {"author": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-02-23T11:05:45Z"}, "committer": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-02-23T11:05:45Z"}, "message": "Add name_range field to FileSymbol\n\nThis contains the syntax range of the name itself, allowing NavigationTarget to\nproperly set the focus_range. This should make it so that when using symbol\nbased navigation, we should always focus on the name, instead of the full range.", "tree": {"sha": "929e56ebef10379842a9cf223d237c94ddc70ea6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/929e56ebef10379842a9cf223d237c94ddc70ea6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c565ec2d6e736c90b8c5a6b89795022d1cc1c1a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c565ec2d6e736c90b8c5a6b89795022d1cc1c1a3", "html_url": "https://github.com/rust-lang/rust/commit/c565ec2d6e736c90b8c5a6b89795022d1cc1c1a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c565ec2d6e736c90b8c5a6b89795022d1cc1c1a3/comments", "author": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7046b162756b0fa1b6e6e2223ffbfdf6f41ca6bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/7046b162756b0fa1b6e6e2223ffbfdf6f41ca6bc", "html_url": "https://github.com/rust-lang/rust/commit/7046b162756b0fa1b6e6e2223ffbfdf6f41ca6bc"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "ce5ae0363193337a10d72c67e525f1cbdbdd6149", "filename": "crates/ra_ide_api/src/navigation_target.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c565ec2d6e736c90b8c5a6b89795022d1cc1c1a3/crates%2Fra_ide_api%2Fsrc%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c565ec2d6e736c90b8c5a6b89795022d1cc1c1a3/crates%2Fra_ide_api%2Fsrc%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fnavigation_target.rs?ref=c565ec2d6e736c90b8c5a6b89795022d1cc1c1a3", "patch": "@@ -67,7 +67,7 @@ impl NavigationTarget {\n             name: symbol.name.clone(),\n             kind: symbol.ptr.kind(),\n             full_range: symbol.ptr.range(),\n-            focus_range: None,\n+            focus_range: symbol.name_range,\n             container_name: symbol.container_name.clone(),\n         }\n     }"}, {"sha": "93bdf05d8fca696391973262522083457654ff76", "filename": "crates/ra_ide_api/src/symbol_index.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c565ec2d6e736c90b8c5a6b89795022d1cc1c1a3/crates%2Fra_ide_api%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c565ec2d6e736c90b8c5a6b89795022d1cc1c1a3/crates%2Fra_ide_api%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsymbol_index.rs?ref=c565ec2d6e736c90b8c5a6b89795022d1cc1c1a3", "patch": "@@ -33,6 +33,7 @@ use ra_syntax::{\n     SyntaxKind::{self, *},\n     ast::{self, NameOwner},\n     WalkEvent,\n+    TextRange,\n };\n use ra_db::{\n     SourceRootId, SourceDatabase,\n@@ -70,7 +71,7 @@ fn file_symbols(db: &impl SymbolsDatabase, file_id: FileId) -> Arc<SymbolIndex>\n         let node = find_covering_node(source_file.syntax(), text_range);\n         let ptr = SyntaxNodePtr::new(node);\n         // TODO: Should we get container name for macro symbols?\n-        symbols.push(FileSymbol { file_id, name, ptr, container_name: None })\n+        symbols.push(FileSymbol { file_id, name, ptr, name_range: None, container_name: None })\n     }\n \n     Arc::new(SymbolIndex::new(symbols))\n@@ -207,6 +208,7 @@ pub(crate) struct FileSymbol {\n     pub(crate) file_id: FileId,\n     pub(crate) name: SmolStr,\n     pub(crate) ptr: SyntaxNodePtr,\n+    pub(crate) name_range: Option<TextRange>,\n     pub(crate) container_name: Option<SmolStr>,\n }\n \n@@ -236,12 +238,14 @@ fn source_file_to_file_symbols(source_file: &SourceFile, file_id: FileId) -> Vec\n     symbols\n }\n \n-fn to_symbol(node: &SyntaxNode) -> Option<(SmolStr, SyntaxNodePtr)> {\n-    fn decl<N: NameOwner>(node: &N) -> Option<(SmolStr, SyntaxNodePtr)> {\n-        let name = node.name()?.text().clone();\n+fn to_symbol(node: &SyntaxNode) -> Option<(SmolStr, SyntaxNodePtr, TextRange)> {\n+    fn decl<N: NameOwner>(node: &N) -> Option<(SmolStr, SyntaxNodePtr, TextRange)> {\n+        let name = node.name()?;\n+        let name_range = name.syntax().range();\n+        let name = name.text().clone();\n         let ptr = SyntaxNodePtr::new(node.syntax());\n \n-        Some((name, ptr))\n+        Some((name, ptr, name_range))\n     }\n     visitor()\n         .visit(decl::<ast::FnDef>)\n@@ -256,5 +260,11 @@ fn to_symbol(node: &SyntaxNode) -> Option<(SmolStr, SyntaxNodePtr)> {\n }\n \n fn to_file_symbol(node: &SyntaxNode, file_id: FileId) -> Option<FileSymbol> {\n-    to_symbol(node).map(move |(name, ptr)| FileSymbol { name, ptr, file_id, container_name: None })\n+    to_symbol(node).map(move |(name, ptr, name_range)| FileSymbol {\n+        name,\n+        ptr,\n+        file_id,\n+        name_range: Some(name_range),\n+        container_name: None,\n+    })\n }"}]}