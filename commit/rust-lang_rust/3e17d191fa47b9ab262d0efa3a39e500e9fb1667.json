{"sha": "3e17d191fa47b9ab262d0efa3a39e500e9fb1667", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlMTdkMTkxZmE0N2I5YWIyNjJkMGVmYTNhMzllNTAwZTlmYjE2Njc=", "commit": {"author": {"name": "Sebastian Hahn", "email": "sebastian@torproject.org", "date": "2020-02-17T17:55:41Z"}, "committer": {"name": "Sebastian Hahn", "email": "sebastian@torproject.org", "date": "2020-02-18T22:57:48Z"}, "message": "Revert \"Remove `checked_add` in `Layout::repeat`\"\n\nThis fixes a a segfault in safe code, a stable regression. Reported in\n\\#69225.\n\nThis reverts commit a983e0590a43ed8b0f60417828efd4e79b51f494.\n\nAlso adds a test for the expected behaviour.", "tree": {"sha": "6836e41cf732613d926f82d381398bcbc14348e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6836e41cf732613d926f82d381398bcbc14348e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e17d191fa47b9ab262d0efa3a39e500e9fb1667", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e17d191fa47b9ab262d0efa3a39e500e9fb1667", "html_url": "https://github.com/rust-lang/rust/commit/3e17d191fa47b9ab262d0efa3a39e500e9fb1667", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e17d191fa47b9ab262d0efa3a39e500e9fb1667/comments", "author": {"login": "shahn", "id": 128636, "node_id": "MDQ6VXNlcjEyODYzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/128636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shahn", "html_url": "https://github.com/shahn", "followers_url": "https://api.github.com/users/shahn/followers", "following_url": "https://api.github.com/users/shahn/following{/other_user}", "gists_url": "https://api.github.com/users/shahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/shahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shahn/subscriptions", "organizations_url": "https://api.github.com/users/shahn/orgs", "repos_url": "https://api.github.com/users/shahn/repos", "events_url": "https://api.github.com/users/shahn/events{/privacy}", "received_events_url": "https://api.github.com/users/shahn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "shahn", "id": 128636, "node_id": "MDQ6VXNlcjEyODYzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/128636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shahn", "html_url": "https://github.com/shahn", "followers_url": "https://api.github.com/users/shahn/followers", "following_url": "https://api.github.com/users/shahn/following{/other_user}", "gists_url": "https://api.github.com/users/shahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/shahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shahn/subscriptions", "organizations_url": "https://api.github.com/users/shahn/orgs", "repos_url": "https://api.github.com/users/shahn/repos", "events_url": "https://api.github.com/users/shahn/events{/privacy}", "received_events_url": "https://api.github.com/users/shahn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0176a9eef845e7421b7e2f7ef015333a41a7c027", "url": "https://api.github.com/repos/rust-lang/rust/commits/0176a9eef845e7421b7e2f7ef015333a41a7c027", "html_url": "https://github.com/rust-lang/rust/commit/0176a9eef845e7421b7e2f7ef015333a41a7c027"}], "stats": {"total": 43, "additions": 38, "deletions": 5}, "files": [{"sha": "a04e75bc7ce7c6d32ab0644ffba781203006b11b", "filename": "src/libcore/alloc.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3e17d191fa47b9ab262d0efa3a39e500e9fb1667/src%2Flibcore%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e17d191fa47b9ab262d0efa3a39e500e9fb1667/src%2Flibcore%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Falloc.rs?ref=3e17d191fa47b9ab262d0efa3a39e500e9fb1667", "patch": "@@ -241,11 +241,13 @@ impl Layout {\n     #[unstable(feature = \"alloc_layout_extra\", issue = \"55724\")]\n     #[inline]\n     pub fn repeat(&self, n: usize) -> Result<(Self, usize), LayoutErr> {\n-        // This cannot overflow. Quoting from the invariant of Layout:\n-        // > `size`, when rounded up to the nearest multiple of `align`,\n-        // > must not overflow (i.e., the rounded value must be less than\n-        // > `usize::MAX`)\n-        let padded_size = self.size() + self.padding_needed_for(self.align());\n+        // Warning, removing the checked_add here led to segfaults in #67174. Further\n+        // analysis in #69225 seems to indicate that this is an LTO-related\n+        // miscompilation, so #67174 might be able to be reapplied in the future.\n+        let padded_size = self\n+            .size()\n+            .checked_add(self.padding_needed_for(self.align()))\n+            .ok_or(LayoutErr { private: () })?;\n         let alloc_size = padded_size.checked_mul(n).ok_or(LayoutErr { private: () })?;\n \n         unsafe {"}, {"sha": "7f43e4d1a51f8ad2320bee28f66a0685ca15d9c4", "filename": "src/test/ui/issues/issue-69225-layout-repeated-checked-add.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/3e17d191fa47b9ab262d0efa3a39e500e9fb1667/src%2Ftest%2Fui%2Fissues%2Fissue-69225-layout-repeated-checked-add.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e17d191fa47b9ab262d0efa3a39e500e9fb1667/src%2Ftest%2Fui%2Fissues%2Fissue-69225-layout-repeated-checked-add.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-69225-layout-repeated-checked-add.rs?ref=3e17d191fa47b9ab262d0efa3a39e500e9fb1667", "patch": "@@ -0,0 +1,31 @@\n+// Ensure we appropriately error instead of overflowing a calculation when creating a new Alloc\n+// Layout\n+\n+// run-fail\n+// compile-flags: -C opt-level=3\n+// error-pattern: index out of bounds: the len is 0 but the index is 16777216\n+// ignore-wasm no panic or subprocess support\n+// ignore-emscripten no panic or subprocess support\n+\n+fn do_test(x: usize) {\n+    let arr = vec![vec![0u8; 3]];\n+\n+    let mut z = Vec::new();\n+    for arr_ref in arr {\n+        for y in 0..x {\n+            for _ in 0..1 {\n+                z.extend(std::iter::repeat(0).take(x));\n+                let a = y * x;\n+                let b = (y + 1) * x - 1;\n+                let slice = &arr_ref[a..b];\n+                eprintln!(\"{} {} {} {}\", a, b, arr_ref.len(), slice.len());\n+                eprintln!(\"{:?}\", slice[1 << 24]);\n+            }\n+        }\n+    }\n+}\n+\n+fn main() {\n+    do_test(1);\n+    do_test(2);\n+}"}]}