{"sha": "f2253dad24ad541618c939f363688d4e90fca72a", "node_id": "C_kwDOAAsO6NoAKGYyMjUzZGFkMjRhZDU0MTYxOGM5MzlmMzYzNjg4ZDRlOTBmY2E3MmE", "commit": {"author": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "me@fmease.dev", "date": "2023-02-19T21:54:47Z"}, "committer": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "me@fmease.dev", "date": "2023-02-19T21:54:47Z"}, "message": "Add some FIXMEs for follow-up PRs", "tree": {"sha": "460d446a57b8e7887a643d5d31338cc6374ff0c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/460d446a57b8e7887a643d5d31338cc6374ff0c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2253dad24ad541618c939f363688d4e90fca72a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEXSQFaHGAjVoD5I3F0XoHIV9o5xMFAmPymqcACgkQ0XoHIV9o\n5xNotw//c79jVXC7pxEpUOwED9lBob+hNbd3aUDuLHDE6u6DTG41ZOs/Dh+5MQcK\nKDYq0oL+CStOWHhY/TFrIMXy89NVSEbX6nml2+rKZfPadI5dYxWeBs1s8RZtYttJ\nW3ILLQSgBXNYf+lLlOjpJ1Gue8qoV6GPhBXwSYsri7eiqG/LzQzDsdpgn4UxkoDk\nwjmgwWgzEio8OusElH9rihlYpA1jVq8mh3ptgwC6JReIRrzcbaYkjs7KAMSYcop3\nDGqSHrUDXZ4ue3aHRUQC6qerY4xuthtZHGS8tGj9I1vhXDxuckPFpSGSmSucYzW4\nnvDdFOXemWDJabF9mVxdsJ9EZl7FAXTWAHEF2WA0ohR2HEQ68JnRlClRWu2VIVtS\nhLy330u9ywyMzpdbRthcrYhgtFi4iwp4hL1gtOXYjKpEZkeMybrCYO6VjES/YzJR\n7gqV6KbvE3TfxbJHeT6IMduPdSzsvgXnTU6WYhHchiKDkCvYJyW9IXH0VkIGBP2C\nX9ePdywRY24SLDUt2BrS3m5gB+sy2tRBRcM2DE63Jq2EElahYdepCGAjTB9CG2tT\nUljTKDx068I5WArDmlooGEtOVoyzbmyRXOl14DjdijUd7oOAYxpNaWuRGIYrS6B2\nnpzV0JD1vDw0WWzEUpjZttBMfhA6gnNYxTX3Fcx+iAl/hxvKPRk=\n=VwK+\n-----END PGP SIGNATURE-----", "payload": "tree 460d446a57b8e7887a643d5d31338cc6374ff0c8\nparent 00b976a1381b301a74b4f97f041de9a6cc58dba1\nauthor Le\u00f3n Orell Valerian Liehr <me@fmease.dev> 1676843687 +0100\ncommitter Le\u00f3n Orell Valerian Liehr <me@fmease.dev> 1676843687 +0100\n\nAdd some FIXMEs for follow-up PRs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2253dad24ad541618c939f363688d4e90fca72a", "html_url": "https://github.com/rust-lang/rust/commit/f2253dad24ad541618c939f363688d4e90fca72a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2253dad24ad541618c939f363688d4e90fca72a/comments", "author": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00b976a1381b301a74b4f97f041de9a6cc58dba1", "url": "https://api.github.com/repos/rust-lang/rust/commits/00b976a1381b301a74b4f97f041de9a6cc58dba1", "html_url": "https://github.com/rust-lang/rust/commit/00b976a1381b301a74b4f97f041de9a6cc58dba1"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "a9c2886b41448a4ae764d066863120096d1fb665", "filename": "compiler/rustc_hir_analysis/src/astconv/errors.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f2253dad24ad541618c939f363688d4e90fca72a/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2253dad24ad541618c939f363688d4e90fca72a/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Ferrors.rs?ref=f2253dad24ad541618c939f363688d4e90fca72a", "patch": "@@ -291,6 +291,12 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n         fulfillment_errors: Vec<FulfillmentError<'tcx>>,\n         span: Span,\n     ) -> ErrorGuaranteed {\n+        // FIXME(fmease): This was copied in parts from an old version of `rustc_hir_typeck::method::suggest`.\n+        // Either\n+        // * update this code by applying changes similar to #106702 or by taking a\n+        //   Vec<(DefId, (DefId, DefId), Option<Vec<FulfillmentError<'tcx>>>)> or\n+        // * deduplicate this code across the two crates.\n+\n         let tcx = self.tcx();\n \n         let adt_did = self_ty.ty_adt_def().map(|def| def.did());\n@@ -338,7 +344,6 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n \n         let mut bound_spans = Vec::new();\n \n-        // FIXME(fmease): Copied from `rustc_hir_typeck::method::probe`. Deduplicate.\n         let mut bound_span_label = |self_ty: Ty<'_>, obligation: &str, quiet: &str| {\n             let msg = format!(\n                 \"doesn't satisfy `{}`\",\n@@ -367,7 +372,6 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n             }\n         };\n \n-        // FIXME(fmease): Copied from `rustc_hir_typeck::method::probe`. Deduplicate.\n         let format_pred = |pred: ty::Predicate<'tcx>| {\n             let bound_predicate = pred.kind();\n             match bound_predicate.skip_binder() {"}, {"sha": "716b4fc6ae36f75473c50fbcfec8253cf1ec2091", "filename": "compiler/rustc_hir_analysis/src/astconv/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f2253dad24ad541618c939f363688d4e90fca72a/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2253dad24ad541618c939f363688d4e90fca72a/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs?ref=f2253dad24ad541618c939f363688d4e90fca72a", "patch": "@@ -2284,8 +2284,9 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n         if let Some((assoc_item, def_scope, impl_substs)) = applicable_candidates.pop() {\n             self.check_assoc_ty(assoc_item, name, def_scope, block, span);\n \n-            // FIXME(inherent_associated_types): To fully *confirm* the *probed* candidate,\n-            // we still need to register region obligations for regionck to prove/disprove.\n+            // FIXME(inherent_associated_types): To fully *confirm* the *probed* candidate, we still\n+            // need to relate the Self-type with fresh item substs & register region obligations for\n+            // regionck to prove/disprove.\n \n             let item_substs =\n                 self.create_substs_for_associated_item(span, assoc_item, segment, impl_substs);"}]}