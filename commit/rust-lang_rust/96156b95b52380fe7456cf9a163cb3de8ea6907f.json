{"sha": "96156b95b52380fe7456cf9a163cb3de8ea6907f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2MTU2Yjk1YjUyMzgwZmU3NDU2Y2Y5YTE2M2NiM2RlOGVhNjkwN2Y=", "commit": {"author": {"name": "Emil Lauridsen", "email": "mine809@gmail.com", "date": "2019-12-29T18:14:18Z"}, "committer": {"name": "Emil Lauridsen", "email": "mine809@gmail.com", "date": "2019-12-29T18:14:18Z"}, "message": "Resolve macro call site in more cases", "tree": {"sha": "84b5f08a378b58e120dc19e80598781e8520c929", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84b5f08a378b58e120dc19e80598781e8520c929"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96156b95b52380fe7456cf9a163cb3de8ea6907f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96156b95b52380fe7456cf9a163cb3de8ea6907f", "html_url": "https://github.com/rust-lang/rust/commit/96156b95b52380fe7456cf9a163cb3de8ea6907f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96156b95b52380fe7456cf9a163cb3de8ea6907f/comments", "author": {"login": "kiljacken", "id": 209321, "node_id": "MDQ6VXNlcjIwOTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/209321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiljacken", "html_url": "https://github.com/kiljacken", "followers_url": "https://api.github.com/users/kiljacken/followers", "following_url": "https://api.github.com/users/kiljacken/following{/other_user}", "gists_url": "https://api.github.com/users/kiljacken/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiljacken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiljacken/subscriptions", "organizations_url": "https://api.github.com/users/kiljacken/orgs", "repos_url": "https://api.github.com/users/kiljacken/repos", "events_url": "https://api.github.com/users/kiljacken/events{/privacy}", "received_events_url": "https://api.github.com/users/kiljacken/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kiljacken", "id": 209321, "node_id": "MDQ6VXNlcjIwOTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/209321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiljacken", "html_url": "https://github.com/kiljacken", "followers_url": "https://api.github.com/users/kiljacken/followers", "following_url": "https://api.github.com/users/kiljacken/following{/other_user}", "gists_url": "https://api.github.com/users/kiljacken/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiljacken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiljacken/subscriptions", "organizations_url": "https://api.github.com/users/kiljacken/orgs", "repos_url": "https://api.github.com/users/kiljacken/repos", "events_url": "https://api.github.com/users/kiljacken/events{/privacy}", "received_events_url": "https://api.github.com/users/kiljacken/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b30de4ed49be362ed8fd71ac367c90554441b079", "url": "https://api.github.com/repos/rust-lang/rust/commits/b30de4ed49be362ed8fd71ac367c90554441b079", "html_url": "https://github.com/rust-lang/rust/commit/b30de4ed49be362ed8fd71ac367c90554441b079"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "eedfea02bac41a190da16832f0fcbebecbf4a867", "filename": "crates/ra_cargo_watch/src/conv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/96156b95b52380fe7456cf9a163cb3de8ea6907f/crates%2Fra_cargo_watch%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96156b95b52380fe7456cf9a163cb3de8ea6907f/crates%2Fra_cargo_watch%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cargo_watch%2Fsrc%2Fconv.rs?ref=96156b95b52380fe7456cf9a163cb3de8ea6907f", "patch": "@@ -48,7 +48,7 @@ fn map_macro_span_to_location(\n \n /// Converts a Rust span to a LSP location\n fn map_span_to_location(span: &DiagnosticSpan, workspace_root: &PathBuf) -> Location {\n-    if is_from_macro(&span.file_name) && span.expansion.is_some() {\n+    if span.expansion.is_some() {\n         let expansion = span.expansion.as_ref().unwrap();\n         if let Some(macro_range) = map_macro_span_to_location(&expansion, workspace_root) {\n             return macro_range;"}]}