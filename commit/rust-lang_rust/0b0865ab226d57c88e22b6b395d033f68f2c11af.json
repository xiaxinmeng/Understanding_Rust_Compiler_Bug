{"sha": "0b0865ab226d57c88e22b6b395d033f68f2c11af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiMDg2NWFiMjI2ZDU3Yzg4ZTIyYjZiMzk1ZDAzM2Y2OGYyYzExYWY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-14T12:01:54Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-14T12:01:54Z"}, "message": "Generaize annotation extraction", "tree": {"sha": "cd0b31593a7b2b38f408a9f044ac89a02d3bee1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd0b31593a7b2b38f408a9f044ac89a02d3bee1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b0865ab226d57c88e22b6b395d033f68f2c11af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b0865ab226d57c88e22b6b395d033f68f2c11af", "html_url": "https://github.com/rust-lang/rust/commit/0b0865ab226d57c88e22b6b395d033f68f2c11af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b0865ab226d57c88e22b6b395d033f68f2c11af/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83271f9b9977267492a59c4264fbd7dff9f7ea02", "url": "https://api.github.com/repos/rust-lang/rust/commits/83271f9b9977267492a59c4264fbd7dff9f7ea02", "html_url": "https://github.com/rust-lang/rust/commit/83271f9b9977267492a59c4264fbd7dff9f7ea02"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "4c89ed87b0038160e3be8df207042c7cbda5cdab", "filename": "crates/test_utils/src/lib.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0b0865ab226d57c88e22b6b395d033f68f2c11af/crates%2Ftest_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b0865ab226d57c88e22b6b395d033f68f2c11af/crates%2Ftest_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest_utils%2Fsrc%2Flib.rs?ref=0b0865ab226d57c88e22b6b395d033f68f2c11af", "patch": "@@ -180,7 +180,7 @@ pub fn extract_annotations(text: &str) -> Vec<(TextRange, String)> {\n     let mut prev_line_start: Option<TextSize> = None;\n     let mut line_start: TextSize = 0.into();\n     for line in lines_with_ends(text) {\n-        if let Some(idx) = line.find(\"//^\") {\n+        if let Some(idx) = line.find(\"//\") {\n             let offset = prev_line_start.unwrap() + TextSize::of(&line[..idx + \"//\".len()]);\n             for (line_range, text) in extract_line_annotations(&line[idx + \"//\".len()..]) {\n                 res.push((line_range + offset, text))\n@@ -195,7 +195,15 @@ pub fn extract_annotations(text: &str) -> Vec<(TextRange, String)> {\n fn extract_line_annotations(mut line: &str) -> Vec<(TextRange, String)> {\n     let mut res = Vec::new();\n     let mut offset: TextSize = 0.into();\n-    while !line.is_empty() {\n+    loop {\n+        match line.find('^') {\n+            Some(idx) => {\n+                offset += TextSize::try_from(idx).unwrap();\n+                line = &line[idx..];\n+            }\n+            None => break,\n+        };\n+\n         let len = line.chars().take_while(|&it| it == '^').count();\n         assert!(len > 0);\n         let range = TextRange::at(offset, len.try_into().unwrap());"}]}