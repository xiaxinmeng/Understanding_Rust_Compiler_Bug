{"sha": "495e271883188ece09b80ae7f405e8062853f2d3", "node_id": "C_kwDOAAsO6NoAKDQ5NWUyNzE4ODMxODhlY2UwOWI4MGFlN2Y0MDVlODA2Mjg1M2YyZDM", "commit": {"author": {"name": "Xiretza", "email": "xiretza@xiretza.xyz", "date": "2022-08-25T08:58:53Z"}, "committer": {"name": "Xiretza", "email": "xiretza@xiretza.xyz", "date": "2022-09-27T18:29:18Z"}, "message": "Migrate rustc_session::expr_parentheses_needed to Subdiagnostic struct", "tree": {"sha": "47f14cb1269768f73edc64fb9b1547f97ee6adba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47f14cb1269768f73edc64fb9b1547f97ee6adba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/495e271883188ece09b80ae7f405e8062853f2d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/495e271883188ece09b80ae7f405e8062853f2d3", "html_url": "https://github.com/rust-lang/rust/commit/495e271883188ece09b80ae7f405e8062853f2d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/495e271883188ece09b80ae7f405e8062853f2d3/comments", "author": {"login": "Xiretza", "id": 3107142, "node_id": "MDQ6VXNlcjMxMDcxNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3107142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xiretza", "html_url": "https://github.com/Xiretza", "followers_url": "https://api.github.com/users/Xiretza/followers", "following_url": "https://api.github.com/users/Xiretza/following{/other_user}", "gists_url": "https://api.github.com/users/Xiretza/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xiretza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xiretza/subscriptions", "organizations_url": "https://api.github.com/users/Xiretza/orgs", "repos_url": "https://api.github.com/users/Xiretza/repos", "events_url": "https://api.github.com/users/Xiretza/events{/privacy}", "received_events_url": "https://api.github.com/users/Xiretza/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xiretza", "id": 3107142, "node_id": "MDQ6VXNlcjMxMDcxNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3107142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xiretza", "html_url": "https://github.com/Xiretza", "followers_url": "https://api.github.com/users/Xiretza/followers", "following_url": "https://api.github.com/users/Xiretza/following{/other_user}", "gists_url": "https://api.github.com/users/Xiretza/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xiretza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xiretza/subscriptions", "organizations_url": "https://api.github.com/users/Xiretza/orgs", "repos_url": "https://api.github.com/users/Xiretza/repos", "events_url": "https://api.github.com/users/Xiretza/events{/privacy}", "received_events_url": "https://api.github.com/users/Xiretza/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57ee5cf5a93923dae9c98bffb11545fc3a31368d", "url": "https://api.github.com/repos/rust-lang/rust/commits/57ee5cf5a93923dae9c98bffb11545fc3a31368d", "html_url": "https://github.com/rust-lang/rust/commit/57ee5cf5a93923dae9c98bffb11545fc3a31368d"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "3ea9429a23ab1799641a52afabb8e484f37eb562", "filename": "compiler/rustc_error_messages/locales/en-US/session.ftl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/495e271883188ece09b80ae7f405e8062853f2d3/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fsession.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/495e271883188ece09b80ae7f405e8062853f2d3/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fsession.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fsession.ftl?ref=495e271883188ece09b80ae7f405e8062853f2d3", "patch": "@@ -66,3 +66,5 @@ session_crate_name_invalid = crate names cannot start with a `-`, but `{$s}` has\n session_crate_name_empty = crate name must not be empty\n \n session_invalid_character_in_create_name = invalid character `{$character}` in crate name: `{$crate_name}`\n+\n+session_expr_parentheses_needed = parentheses are required to parse this as an expression"}, {"sha": "b5962f76b7f4a54d467040610e72e191f243ad93", "filename": "compiler/rustc_session/src/errors.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/495e271883188ece09b80ae7f405e8062853f2d3/compiler%2Frustc_session%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/495e271883188ece09b80ae7f405e8062853f2d3/compiler%2Frustc_session%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Ferrors.rs?ref=495e271883188ece09b80ae7f405e8062853f2d3", "patch": "@@ -219,3 +219,18 @@ impl IntoDiagnostic<'_> for InvalidCharacterInCrateName<'_> {\n         diag\n     }\n }\n+\n+#[derive(Subdiagnostic)]\n+#[multipart_suggestion(session::expr_parentheses_needed, applicability = \"machine-applicable\")]\n+pub struct ExprParenthesesNeeded {\n+    #[suggestion_part(code = \"(\")]\n+    pub left: Span,\n+    #[suggestion_part(code = \")\")]\n+    pub right: Span,\n+}\n+\n+impl ExprParenthesesNeeded {\n+    pub fn surrounding(s: Span) -> Self {\n+        ExprParenthesesNeeded { left: s.shrink_to_lo(), right: s.shrink_to_hi() }\n+    }\n+}"}, {"sha": "a278a7b5509ae7084680b7db05a7e932e49bf020", "filename": "compiler/rustc_session/src/parse.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/495e271883188ece09b80ae7f405e8062853f2d3/compiler%2Frustc_session%2Fsrc%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/495e271883188ece09b80ae7f405e8062853f2d3/compiler%2Frustc_session%2Fsrc%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fparse.rs?ref=495e271883188ece09b80ae7f405e8062853f2d3", "patch": "@@ -2,7 +2,9 @@\n //! It also serves as an input to the parser itself.\n \n use crate::config::CheckCfg;\n-use crate::errors::{FeatureDiagnosticForIssue, FeatureDiagnosticHelp, FeatureGateError};\n+use crate::errors::{\n+    ExprParenthesesNeeded, FeatureDiagnosticForIssue, FeatureDiagnosticHelp, FeatureGateError,\n+};\n use crate::lint::{\n     builtin::UNSTABLE_SYNTAX_PRE_EXPANSION, BufferedEarlyLint, BuiltinLintDiagnostics, Lint, LintId,\n };\n@@ -11,7 +13,7 @@ use rustc_data_structures::fx::{FxHashMap, FxHashSet, FxIndexSet};\n use rustc_data_structures::sync::{Lock, Lrc};\n use rustc_errors::{emitter::SilentEmitter, ColorConfig, Handler};\n use rustc_errors::{\n-    fallback_fluent_bundle, Applicability, Diagnostic, DiagnosticBuilder, DiagnosticId,\n+    fallback_fluent_bundle, AddToDiagnostic, Diagnostic, DiagnosticBuilder, DiagnosticId,\n     DiagnosticMessage, EmissionGuarantee, ErrorGuaranteed, IntoDiagnostic, MultiSpan, StashKey,\n };\n use rustc_feature::{find_feature_issue, GateIssue, UnstableFeatures};\n@@ -325,11 +327,7 @@ impl ParseSess {\n     /// Extend an error with a suggestion to wrap an expression with parentheses to allow the\n     /// parser to continue parsing the following operation as part of the same expression.\n     pub fn expr_parentheses_needed(&self, err: &mut Diagnostic, span: Span) {\n-        err.multipart_suggestion(\n-            \"parentheses are required to parse this as an expression\",\n-            vec![(span.shrink_to_lo(), \"(\".to_string()), (span.shrink_to_hi(), \")\".to_string())],\n-            Applicability::MachineApplicable,\n-        );\n+        ExprParenthesesNeeded::surrounding(span).add_to_diagnostic(err);\n     }\n \n     pub fn save_proc_macro_span(&self, span: Span) -> usize {"}]}