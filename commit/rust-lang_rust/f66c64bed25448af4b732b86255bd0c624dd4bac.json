{"sha": "f66c64bed25448af4b732b86255bd0c624dd4bac", "node_id": "C_kwDOAAsO6NoAKGY2NmM2NGJlZDI1NDQ4YWY0YjczMmI4NjI1NWJkMGM2MjRkZDRiYWM", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-25T15:52:29Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-25T15:52:29Z"}, "message": "remove a FIXME that is not actually a bug", "tree": {"sha": "51976b08d8b1f92e8bd15be33f4514ca3be5fd35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51976b08d8b1f92e8bd15be33f4514ca3be5fd35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f66c64bed25448af4b732b86255bd0c624dd4bac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f66c64bed25448af4b732b86255bd0c624dd4bac", "html_url": "https://github.com/rust-lang/rust/commit/f66c64bed25448af4b732b86255bd0c624dd4bac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f66c64bed25448af4b732b86255bd0c624dd4bac/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1226c43b6f6bae61b9225efca3f09cf712f5864", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1226c43b6f6bae61b9225efca3f09cf712f5864", "html_url": "https://github.com/rust-lang/rust/commit/a1226c43b6f6bae61b9225efca3f09cf712f5864"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "6be1e672f85f0caa4301475407d61f018e66ba21", "filename": "src/shims/unix/linux/sync.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f66c64bed25448af4b732b86255bd0c624dd4bac/src%2Fshims%2Funix%2Flinux%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f66c64bed25448af4b732b86255bd0c624dd4bac/src%2Fshims%2Funix%2Flinux%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Funix%2Flinux%2Fsync.rs?ref=f66c64bed25448af4b732b86255bd0c624dd4bac", "patch": "@@ -172,7 +172,6 @@ pub fn futex<'tcx>(\n             this.atomic_fence(&[], AtomicFenceOp::SeqCst)?;\n             // Read an `i32` through the pointer, regardless of any wrapper types.\n             // It's not uncommon for `addr` to be passed as another type than `*mut i32`, such as `*const AtomicI32`.\n-            // FIXME: this fails if `addr` is not a pointer type.\n             let futex_val = this\n                 .read_scalar_at_offset_atomic(\n                     &addr.into(),"}]}