{"sha": "5605ed85363345f3def5da6b1ead2ac0b803bfe7", "node_id": "C_kwDOAAsO6NoAKDU2MDVlZDg1MzYzMzQ1ZjNkZWY1ZGE2YjFlYWQyYWMwYjgwM2JmZTc", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-19T08:26:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-19T08:26:55Z"}, "message": "Auto merge of #103180 - ferrocene:pa-qemu-user-mode, r=Mark-Simulacrum\n\nHandle core dumps output in QEMU user mode\n\nIn addition to the whole-system emulation/virtualization, QEMU also supports user-mode emulation, where the emulation happens as a normal process inside the parent system. This allows running most tests by simply spawning remote-test-server inside user-mode emulation.\n\nUnfortunately, QEMU always writes its own message in addition to the system one when a core dump happens, which breaks a few tests which match on the exact output of the system.\n\nThis PR changes those tests to strip the (possible) QEMU output before checking if the output is expected.", "tree": {"sha": "f7b44b99a3feb7715f1531ab2cca7cf3534ab487", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7b44b99a3feb7715f1531ab2cca7cf3534ab487"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5605ed85363345f3def5da6b1ead2ac0b803bfe7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5605ed85363345f3def5da6b1ead2ac0b803bfe7", "html_url": "https://github.com/rust-lang/rust/commit/5605ed85363345f3def5da6b1ead2ac0b803bfe7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5605ed85363345f3def5da6b1ead2ac0b803bfe7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84365fff0a99fbf6deab383bd9a8152202b6779b", "url": "https://api.github.com/repos/rust-lang/rust/commits/84365fff0a99fbf6deab383bd9a8152202b6779b", "html_url": "https://github.com/rust-lang/rust/commit/84365fff0a99fbf6deab383bd9a8152202b6779b"}, {"sha": "77bf2b9694952dab8e7d7e8c0bfcb05ee74239c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/77bf2b9694952dab8e7d7e8c0bfcb05ee74239c3", "html_url": "https://github.com/rust-lang/rust/commit/77bf2b9694952dab8e7d7e8c0bfcb05ee74239c3"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "8be09500f4e4ed0ab22a588430abb58f6409a8fe", "filename": "src/test/ui/alloc-error/default-alloc-error-hook.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5605ed85363345f3def5da6b1ead2ac0b803bfe7/src%2Ftest%2Fui%2Falloc-error%2Fdefault-alloc-error-hook.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5605ed85363345f3def5da6b1ead2ac0b803bfe7/src%2Ftest%2Fui%2Falloc-error%2Fdefault-alloc-error-hook.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Falloc-error%2Fdefault-alloc-error-hook.rs?ref=5605ed85363345f3def5da6b1ead2ac0b803bfe7", "patch": "@@ -15,5 +15,14 @@ fn main() {\n     let me = env::current_exe().unwrap();\n     let output = Command::new(&me).arg(\"next\").output().unwrap();\n     assert!(!output.status.success(), \"{:?} is a success\", output.status);\n-    assert_eq!(str::from_utf8(&output.stderr).unwrap(), \"memory allocation of 42 bytes failed\\n\");\n+\n+    let mut stderr = str::from_utf8(&output.stderr).unwrap();\n+\n+    // When running inside QEMU user-mode emulation, there will be an extra message printed by QEMU\n+    // in the stderr whenever a core dump happens. Remove it before the check.\n+    stderr = stderr\n+        .strip_suffix(\"qemu: uncaught target signal 6 (Aborted) - core dumped\\n\")\n+        .unwrap_or(stderr);\n+\n+    assert_eq!(stderr, \"memory allocation of 42 bytes failed\\n\");\n }"}, {"sha": "755d3df42deed55e3e653c40aa1ee4d2b91b3d48", "filename": "src/test/ui/runtime/rt-explody-panic-payloads.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5605ed85363345f3def5da6b1ead2ac0b803bfe7/src%2Ftest%2Fui%2Fruntime%2Frt-explody-panic-payloads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5605ed85363345f3def5da6b1ead2ac0b803bfe7/src%2Ftest%2Fui%2Fruntime%2Frt-explody-panic-payloads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fruntime%2Frt-explody-panic-payloads.rs?ref=5605ed85363345f3def5da6b1ead2ac0b803bfe7", "patch": "@@ -22,7 +22,12 @@ fn main() {\n     }.expect(\"running the command should have succeeded\");\n     println!(\"{:#?}\", output);\n     let stderr = std::str::from_utf8(&output.stderr);\n-    assert!(stderr.map(|v| {\n-        v.ends_with(\"fatal runtime error: drop of the panic payload panicked\\n\")\n-    }).unwrap_or(false));\n+    assert!(stderr\n+        .map(|v| {\n+            // When running inside QEMU user-mode emulation, there will be an extra message printed\n+            // by QEMU in the stderr whenever a core dump happens. Remove it before the check.\n+            v.strip_suffix(\"qemu: uncaught target signal 6 (Aborted) - core dumped\\n\").unwrap_or(v)\n+        })\n+        .map(|v| { v.ends_with(\"fatal runtime error: drop of the panic payload panicked\\n\") })\n+        .unwrap_or(false));\n }"}]}