{"sha": "1b7163358f9750fec725d1840d1fe23f7dd93ebc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiNzE2MzM1OGY5NzUwZmVjNzI1ZDE4NDBkMWZlMjNmN2RkOTNlYmM=", "commit": {"author": {"name": "Ray Clanan", "email": "rclanan@utopianconcept.com", "date": "2014-10-18T15:49:33Z"}, "committer": {"name": "Ray Clanan", "email": "rclanan@utopianconcept.com", "date": "2014-10-18T15:49:33Z"}, "message": "Mark lt as inline in PartialOrd", "tree": {"sha": "4303045f60ee8c01f229896d750fef771236f41f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4303045f60ee8c01f229896d750fef771236f41f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b7163358f9750fec725d1840d1fe23f7dd93ebc", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b7163358f9750fec725d1840d1fe23f7dd93ebc", "html_url": "https://github.com/rust-lang/rust/commit/1b7163358f9750fec725d1840d1fe23f7dd93ebc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b7163358f9750fec725d1840d1fe23f7dd93ebc/comments", "author": {"login": "rclanan", "id": 115944, "node_id": "MDQ6VXNlcjExNTk0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/115944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rclanan", "html_url": "https://github.com/rclanan", "followers_url": "https://api.github.com/users/rclanan/followers", "following_url": "https://api.github.com/users/rclanan/following{/other_user}", "gists_url": "https://api.github.com/users/rclanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/rclanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rclanan/subscriptions", "organizations_url": "https://api.github.com/users/rclanan/orgs", "repos_url": "https://api.github.com/users/rclanan/repos", "events_url": "https://api.github.com/users/rclanan/events{/privacy}", "received_events_url": "https://api.github.com/users/rclanan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rclanan", "id": 115944, "node_id": "MDQ6VXNlcjExNTk0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/115944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rclanan", "html_url": "https://github.com/rclanan", "followers_url": "https://api.github.com/users/rclanan/followers", "following_url": "https://api.github.com/users/rclanan/following{/other_user}", "gists_url": "https://api.github.com/users/rclanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/rclanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rclanan/subscriptions", "organizations_url": "https://api.github.com/users/rclanan/orgs", "repos_url": "https://api.github.com/users/rclanan/repos", "events_url": "https://api.github.com/users/rclanan/events{/privacy}", "received_events_url": "https://api.github.com/users/rclanan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4480caf2a4999e2b7249049e7bfb6eb13a60e6b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/4480caf2a4999e2b7249049e7bfb6eb13a60e6b5", "html_url": "https://github.com/rust-lang/rust/commit/4480caf2a4999e2b7249049e7bfb6eb13a60e6b5"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "9542b28e981e1a05a41530ba11ab46b7a7a52883", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1b7163358f9750fec725d1840d1fe23f7dd93ebc/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b7163358f9750fec725d1840d1fe23f7dd93ebc/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=1b7163358f9750fec725d1840d1fe23f7dd93ebc", "patch": "@@ -209,6 +209,7 @@ pub trait PartialOrd: PartialEq {\n     fn partial_cmp(&self, other: &Self) -> Option<Ordering>;\n \n     /// This method tests less than (for `self` and `other`) and is used by the `<` operator.\n+    #[inline]\n     fn lt(&self, other: &Self) -> bool {\n         match self.partial_cmp(other) {\n             Some(Less) => true,"}]}