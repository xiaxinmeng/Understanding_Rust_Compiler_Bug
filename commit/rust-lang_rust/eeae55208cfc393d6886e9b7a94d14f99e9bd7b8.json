{"sha": "eeae55208cfc393d6886e9b7a94d14f99e9bd7b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlYWU1NTIwOGNmYzM5M2Q2ODg2ZTliN2E5NGQxNGY5OWU5YmQ3Yjg=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-10-18T18:53:27Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-10-18T21:26:06Z"}, "message": "Revert \"Simplify str::to_managed\"\n\nThis reverts commit ac50046a111a1ef6fb58b7e5f368ff6b9b55f89c.", "tree": {"sha": "caf0024349e641d23d732aa408ede89593f75d8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/caf0024349e641d23d732aa408ede89593f75d8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eeae55208cfc393d6886e9b7a94d14f99e9bd7b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eeae55208cfc393d6886e9b7a94d14f99e9bd7b8", "html_url": "https://github.com/rust-lang/rust/commit/eeae55208cfc393d6886e9b7a94d14f99e9bd7b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eeae55208cfc393d6886e9b7a94d14f99e9bd7b8/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7dda88905630dff5d819ab5089ace9875df2217d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7dda88905630dff5d819ab5089ace9875df2217d", "html_url": "https://github.com/rust-lang/rust/commit/7dda88905630dff5d819ab5089ace9875df2217d"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "3da41ac6abc87220b230b3aada8e99995cef0d3e", "filename": "src/libcore/str.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eeae55208cfc393d6886e9b7a94d14f99e9bd7b8/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eeae55208cfc393d6886e9b7a94d14f99e9bd7b8/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=eeae55208cfc393d6886e9b7a94d14f99e9bd7b8", "patch": "@@ -2262,8 +2262,9 @@ impl &str: StrSlice {\n \n     #[inline]\n     pure fn to_managed() -> @str {\n-        let bytes = as_bytes_slice(self);\n-        let v = at_vec::from_fn(bytes.len(), |i| bytes[i]);\n+        let v = at_vec::from_fn(self.len() + 1, |i| {\n+            if i == self.len() { 0 } else { self[i] }\n+        });\n         unsafe { ::cast::transmute(v) }\n     }\n "}]}