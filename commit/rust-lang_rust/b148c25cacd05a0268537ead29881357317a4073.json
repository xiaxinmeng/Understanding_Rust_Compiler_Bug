{"sha": "b148c25cacd05a0268537ead29881357317a4073", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxNDhjMjVjYWNkMDVhMDI2ODUzN2VhZDI5ODgxMzU3MzE3YTQwNzM=", "commit": {"author": {"name": "tyler", "email": "tyler@brainiumstudios.com", "date": "2019-06-19T18:50:23Z"}, "committer": {"name": "tyler", "email": "tyler@brainiumstudios.com", "date": "2019-06-19T18:50:23Z"}, "message": "fix compile-fail test for targets without thread locals", "tree": {"sha": "8fb245299c96991c0e69b4e6a88e7d7aa17f5936", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fb245299c96991c0e69b4e6a88e7d7aa17f5936"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b148c25cacd05a0268537ead29881357317a4073", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b148c25cacd05a0268537ead29881357317a4073", "html_url": "https://github.com/rust-lang/rust/commit/b148c25cacd05a0268537ead29881357317a4073", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b148c25cacd05a0268537ead29881357317a4073/comments", "author": {"login": "mtak-", "id": 6643140, "node_id": "MDQ6VXNlcjY2NDMxNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6643140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtak-", "html_url": "https://github.com/mtak-", "followers_url": "https://api.github.com/users/mtak-/followers", "following_url": "https://api.github.com/users/mtak-/following{/other_user}", "gists_url": "https://api.github.com/users/mtak-/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtak-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtak-/subscriptions", "organizations_url": "https://api.github.com/users/mtak-/orgs", "repos_url": "https://api.github.com/users/mtak-/repos", "events_url": "https://api.github.com/users/mtak-/events{/privacy}", "received_events_url": "https://api.github.com/users/mtak-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mtak-", "id": 6643140, "node_id": "MDQ6VXNlcjY2NDMxNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6643140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtak-", "html_url": "https://github.com/mtak-", "followers_url": "https://api.github.com/users/mtak-/followers", "following_url": "https://api.github.com/users/mtak-/following{/other_user}", "gists_url": "https://api.github.com/users/mtak-/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtak-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtak-/subscriptions", "organizations_url": "https://api.github.com/users/mtak-/orgs", "repos_url": "https://api.github.com/users/mtak-/repos", "events_url": "https://api.github.com/users/mtak-/events{/privacy}", "received_events_url": "https://api.github.com/users/mtak-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c3796172ba2d41f15294e116cd8d993f026b7c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c3796172ba2d41f15294e116cd8d993f026b7c2", "html_url": "https://github.com/rust-lang/rust/commit/2c3796172ba2d41f15294e116cd8d993f026b7c2"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "dae27c4785f15b6fd024476ebbe0221647d72f4b", "filename": "src/test/compile-fail/issue-43733-2.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b148c25cacd05a0268537ead29881357317a4073/src%2Ftest%2Fcompile-fail%2Fissue-43733-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b148c25cacd05a0268537ead29881357317a4073/src%2Ftest%2Fcompile-fail%2Fissue-43733-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-43733-2.rs?ref=b148c25cacd05a0268537ead29881357317a4073", "patch": "@@ -5,15 +5,15 @@\n #[cfg(not(target_thread_local))]\n struct Key<T> {\n     _data: std::cell::UnsafeCell<Option<T>>,\n-    _flag: std::cell::Cell<bool>,\n+    _flag: std::cell::Cell<()>,\n }\n \n #[cfg(not(target_thread_local))]\n impl<T> Key<T> {\n     const fn new() -> Self {\n         Key {\n             _data: std::cell::UnsafeCell::new(None),\n-            _flag: std::cell::Cell::new(false),\n+            _flag: std::cell::Cell::new(()),\n         }\n     }\n }\n@@ -23,7 +23,6 @@ use std::thread::__FastLocalKeyInner as Key;\n \n static __KEY: Key<()> = Key::new();\n //~^ ERROR `std::cell::UnsafeCell<std::option::Option<()>>` cannot be shared between threads\n-//~| ERROR `std::cell::Cell<std::thread::local::fast::DtorState>` cannot be shared between threads\n-// safely [E0277]\n+//~| ERROR cannot be shared between threads safely [E0277]\n \n fn main() {}"}]}