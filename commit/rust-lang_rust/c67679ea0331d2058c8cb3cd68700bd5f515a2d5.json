{"sha": "c67679ea0331d2058c8cb3cd68700bd5f515a2d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2NzY3OWVhMDMzMWQyMDU4YzhjYjNjZDY4NzAwYmQ1ZjUxNWEyZDU=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-03-08T09:58:23Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-03-15T07:59:29Z"}, "message": "Write out the AST for all externally-reachable generics", "tree": {"sha": "e24c00a93b68504c7b37bdbe786edc099cf89bfe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e24c00a93b68504c7b37bdbe786edc099cf89bfe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c67679ea0331d2058c8cb3cd68700bd5f515a2d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c67679ea0331d2058c8cb3cd68700bd5f515a2d5", "html_url": "https://github.com/rust-lang/rust/commit/c67679ea0331d2058c8cb3cd68700bd5f515a2d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c67679ea0331d2058c8cb3cd68700bd5f515a2d5/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2e4872e2c111a3c6a3b0e797ae9c53e3a6768a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2e4872e2c111a3c6a3b0e797ae9c53e3a6768a2", "html_url": "https://github.com/rust-lang/rust/commit/b2e4872e2c111a3c6a3b0e797ae9c53e3a6768a2"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "9a9075a65ba6d792ab2b91a952e9ea3b7174db36", "filename": "src/rustc/metadata/encoder.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c67679ea0331d2058c8cb3cd68700bd5f515a2d5/src%2Frustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c67679ea0331d2058c8cb3cd68700bd5f515a2d5/src%2Frustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Fencoder.rs?ref=c67679ea0331d2058c8cb3cd68700bd5f515a2d5", "patch": "@@ -80,7 +80,8 @@ fn encode_module_item_paths(ebml_w: ebml::writer, ecx: @encode_ctxt,\n                             module: _mod, path: [str], &index: [entry<str>]) {\n     // FIXME factor out add_to_index/start/encode_name/encode_def_id/end ops\n     for it: @item in module.items {\n-        if !ecx.reachable.contains_key(it.id) { cont; }\n+        if !ecx.reachable.contains_key(it.id) ||\n+           !ast_util::is_exported(it.ident, module) { cont; }\n         alt it.node {\n           item_const(_, _) {\n             add_to_index(ebml_w, path, index, it.ident);\n@@ -362,7 +363,7 @@ fn encode_info_for_item(ecx: @encode_ctxt, ebml_w: ebml::writer, item: @item,\n         encode_type(ecx, ebml_w, node_id_to_type(tcx, item.id));\n         encode_symbol(ecx, ebml_w, item.id);\n         encode_path(ebml_w, path, ast_map::path_name(item.ident));\n-        if should_inline(item.attrs) {\n+        if tps.len() > 0u || should_inline(item.attrs) {\n             astencode::encode_inlined_item(ecx, ebml_w, path, ii_item(item));\n         }\n         ebml_w.end_tag();"}]}