{"sha": "406343492c9f1741fcc3eafbb13efa42691fe0db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwNjM0MzQ5MmM5ZjE3NDFmY2MzZWFmYmIxM2VmYTQyNjkxZmUwZGI=", "commit": {"author": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2019-03-07T12:36:35Z"}, "committer": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2019-03-16T21:41:13Z"}, "message": "Simplify calculation of missing functions\n\nAsymptotically computing a set difference is faster but in the average\ncase we won't have more than ~10 functions. Also prefer not using hash\nsets as these may yield nondeterministic results.", "tree": {"sha": "35c39ba637ff82c1da154fe3c1ab2d3edafddc1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35c39ba637ff82c1da154fe3c1ab2d3edafddc1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/406343492c9f1741fcc3eafbb13efa42691fe0db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/406343492c9f1741fcc3eafbb13efa42691fe0db", "html_url": "https://github.com/rust-lang/rust/commit/406343492c9f1741fcc3eafbb13efa42691fe0db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/406343492c9f1741fcc3eafbb13efa42691fe0db/comments", "author": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "713975b1c1584bb141dfca84818bf5a7ca91a8ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/713975b1c1584bb141dfca84818bf5a7ca91a8ee", "html_url": "https://github.com/rust-lang/rust/commit/713975b1c1584bb141dfca84818bf5a7ca91a8ee"}], "stats": {"total": 11, "additions": 2, "deletions": 9}, "files": [{"sha": "97af6362c7ff269770cbf2d7691d215507aeb6c5", "filename": "crates/ra_assists/src/add_missing_impl_members.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/406343492c9f1741fcc3eafbb13efa42691fe0db/crates%2Fra_assists%2Fsrc%2Fadd_missing_impl_members.rs", "raw_url": "https://github.com/rust-lang/rust/raw/406343492c9f1741fcc3eafbb13efa42691fe0db/crates%2Fra_assists%2Fsrc%2Fadd_missing_impl_members.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fadd_missing_impl_members.rs?ref=406343492c9f1741fcc3eafbb13efa42691fe0db", "patch": "@@ -1,5 +1,3 @@\n-use std::collections::HashSet;\n-\n use crate::{Assist, AssistId, AssistCtx};\n \n use hir::Resolver;\n@@ -69,14 +67,9 @@ pub(crate) fn add_missing_impl_members(mut ctx: AssistCtx<impl HirDatabase>) ->\n     let trait_fns = trait_items.map(ImplItem::kind).filter_map(fn_def_opt).collect::<Vec<_>>();\n     let impl_fns = impl_items.map(ImplItem::kind).filter_map(fn_def_opt).collect::<Vec<_>>();\n \n-    let trait_fn_names = trait_fns.iter().cloned().filter_map(def_name).collect::<HashSet<_>>();\n-    let impl_fn_names = impl_fns.iter().cloned().filter_map(def_name).collect::<HashSet<_>>();\n-\n-    let missing_fn_names = trait_fn_names.difference(&impl_fn_names).collect::<HashSet<_>>();\n     let missing_fns: Vec<_> = trait_fns\n-        .iter()\n-        .cloned()\n-        .filter(|t| def_name(t).map(|n| missing_fn_names.contains(&n)).unwrap_or(false))\n+        .into_iter()\n+        .filter(|t| impl_fns.iter().all(|i| def_name(i) != def_name(t)))\n         .collect();\n     if missing_fns.is_empty() {\n         return None;"}]}