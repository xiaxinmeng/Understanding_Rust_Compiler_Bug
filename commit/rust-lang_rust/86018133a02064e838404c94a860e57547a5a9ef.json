{"sha": "86018133a02064e838404c94a860e57547a5a9ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2MDE4MTMzYTAyMDY0ZTgzODQwNGM5NGE4NjBlNTc1NDdhNWE5ZWY=", "commit": {"author": {"name": "St\u00e9phane Campinas", "email": "stephane.campinas@gmail.com", "date": "2018-07-14T17:17:07Z"}, "committer": {"name": "St\u00e9phane Campinas", "email": "stephane.campinas@gmail.com", "date": "2018-07-14T17:33:26Z"}, "message": "removed unused max_width argument of rewrite_string function", "tree": {"sha": "5d3b8db3e07b76d259dfd8a367589b4ca8f6f5a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d3b8db3e07b76d259dfd8a367589b4ca8f6f5a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86018133a02064e838404c94a860e57547a5a9ef", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEipi5pnt+pUplKNfibVYg2QghATMFAltKM+YACgkQbVYg2Qgh\nATPQTQgAn3Q7/9R04VkEwDrdkmigdQC/U8ynKLAVuxBVke5x/widBYQ3iVDV1uNT\nHsqRwUzUiquAUAhrxQ687xKZNlUC3zRQ2KmvnSUrZxUFXC757frgsTJCmJYlMXWo\nToydunWWDtJ1qf9bi3arftsb/L1qktDIdISP+tkltq58w9pucTTRsfsIjcdN9WwJ\nmikWlN80wfyqdTpEMY8vnpfG1NBObQKk1DUDd2oznLQUsBUNI/oltnb92Hg3mlrv\naCayGknI68aN4PwJwh7kFxbS2lWWfUxE5W/uz0YFWAYt480A4xjD015nHCY60kpa\nmAQHHRd64D1OlVApCV6iJ8ARYVnF0Q==\n=0ACU\n-----END PGP SIGNATURE-----", "payload": "tree 5d3b8db3e07b76d259dfd8a367589b4ca8f6f5a8\nparent 472a2ed0f6f75cc33f42a72beaf1827c13b713d1\nauthor St\u00e9phane Campinas <stephane.campinas@gmail.com> 1531588627 +0200\ncommitter St\u00e9phane Campinas <stephane.campinas@gmail.com> 1531589606 +0200\n\nremoved unused max_width argument of rewrite_string function\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86018133a02064e838404c94a860e57547a5a9ef", "html_url": "https://github.com/rust-lang/rust/commit/86018133a02064e838404c94a860e57547a5a9ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86018133a02064e838404c94a860e57547a5a9ef/comments", "author": {"login": "scampi", "id": 795879, "node_id": "MDQ6VXNlcjc5NTg3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/795879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scampi", "html_url": "https://github.com/scampi", "followers_url": "https://api.github.com/users/scampi/followers", "following_url": "https://api.github.com/users/scampi/following{/other_user}", "gists_url": "https://api.github.com/users/scampi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scampi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scampi/subscriptions", "organizations_url": "https://api.github.com/users/scampi/orgs", "repos_url": "https://api.github.com/users/scampi/repos", "events_url": "https://api.github.com/users/scampi/events{/privacy}", "received_events_url": "https://api.github.com/users/scampi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scampi", "id": 795879, "node_id": "MDQ6VXNlcjc5NTg3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/795879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scampi", "html_url": "https://github.com/scampi", "followers_url": "https://api.github.com/users/scampi/followers", "following_url": "https://api.github.com/users/scampi/following{/other_user}", "gists_url": "https://api.github.com/users/scampi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scampi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scampi/subscriptions", "organizations_url": "https://api.github.com/users/scampi/orgs", "repos_url": "https://api.github.com/users/scampi/repos", "events_url": "https://api.github.com/users/scampi/events{/privacy}", "received_events_url": "https://api.github.com/users/scampi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "472a2ed0f6f75cc33f42a72beaf1827c13b713d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/472a2ed0f6f75cc33f42a72beaf1827c13b713d1", "html_url": "https://github.com/rust-lang/rust/commit/472a2ed0f6f75cc33f42a72beaf1827c13b713d1"}], "stats": {"total": 15, "additions": 5, "deletions": 10}, "files": [{"sha": "53e496bf45748be45f6dbf368a954b7fc903b53c", "filename": "src/comment.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/86018133a02064e838404c94a860e57547a5a9ef/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86018133a02064e838404c94a860e57547a5a9ef/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=86018133a02064e838404c94a860e57547a5a9ef", "patch": "@@ -438,7 +438,7 @@ fn rewrite_comment_inner(\n         }\n \n         if config.wrap_comments() && line.len() > fmt.shape.width && !has_url(line) {\n-            match rewrite_string(line, &fmt, Some(max_chars)) {\n+            match rewrite_string(line, &fmt) {\n                 Some(ref s) => {\n                     is_prev_line_multi_line = s.contains('\\n');\n                     result.push_str(s);\n@@ -449,7 +449,7 @@ fn rewrite_comment_inner(\n                     result.pop();\n                     result.push_str(&comment_line_separator);\n                     fmt.shape = Shape::legacy(max_chars, fmt_indent);\n-                    match rewrite_string(line, &fmt, Some(max_chars)) {\n+                    match rewrite_string(line, &fmt) {\n                         Some(ref s) => {\n                             is_prev_line_multi_line = s.contains('\\n');\n                             result.push_str(s);"}, {"sha": "6e1af266e9bfe8e9dfb95470a6fc1e3edef01c5a", "filename": "src/expr.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/86018133a02064e838404c94a860e57547a5a9ef/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86018133a02064e838404c94a860e57547a5a9ef/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=86018133a02064e838404c94a860e57547a5a9ef", "patch": "@@ -1229,7 +1229,6 @@ fn rewrite_string_lit(context: &RewriteContext, span: Span, shape: Shape) -> Opt\n     rewrite_string(\n         str_lit,\n         &StringFormat::new(shape.visual_indent(0), context.config),\n-        None,\n     )\n }\n "}, {"sha": "fd7ac89013a32cba04c94a37bd7cbd2a1bc0df62", "filename": "src/string.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/86018133a02064e838404c94a860e57547a5a9ef/src%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86018133a02064e838404c94a860e57547a5a9ef/src%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstring.rs?ref=86018133a02064e838404c94a860e57547a5a9ef", "patch": "@@ -51,7 +51,7 @@ impl<'a> StringFormat<'a> {\n             self.shape\n                 .width\n                 .checked_sub(self.opener.len() + self.line_end.len() + 1)?\n-                + 1;\n+                + 1,\n         )\n     }\n \n@@ -63,11 +63,7 @@ impl<'a> StringFormat<'a> {\n     }\n }\n \n-pub fn rewrite_string<'a>(\n-    orig: &str,\n-    fmt: &StringFormat<'a>,\n-    max_width: Option<usize>,\n-) -> Option<String> {\n+pub fn rewrite_string<'a>(orig: &str, fmt: &StringFormat<'a>) -> Option<String> {\n     let max_chars_with_indent = fmt.max_chars_with_indent()?;\n     let max_chars_without_indent = fmt.max_chars_without_indent()?;\n     let indent = fmt.shape.indent.to_string_with_newline(fmt.config);\n@@ -235,7 +231,7 @@ mod test {\n     fn issue343() {\n         let config = Default::default();\n         let fmt = StringFormat::new(Shape::legacy(2, Indent::empty()), &config);\n-        rewrite_string(\"eq_\", &fmt, None);\n+        rewrite_string(\"eq_\", &fmt);\n     }\n \n     #[test]"}]}