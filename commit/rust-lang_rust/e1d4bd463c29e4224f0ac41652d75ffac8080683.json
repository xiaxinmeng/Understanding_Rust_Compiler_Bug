{"sha": "e1d4bd463c29e4224f0ac41652d75ffac8080683", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxZDRiZDQ2M2MyOWU0MjI0ZjBhYzQxNjUyZDc1ZmZhYzgwODA2ODM=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-07-26T01:00:29Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-07-26T01:00:29Z"}, "message": "3x faster typechecking", "tree": {"sha": "1a8680e798b76201d7317fca8dff7667101cea76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a8680e798b76201d7317fca8dff7667101cea76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1d4bd463c29e4224f0ac41652d75ffac8080683", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1d4bd463c29e4224f0ac41652d75ffac8080683", "html_url": "https://github.com/rust-lang/rust/commit/e1d4bd463c29e4224f0ac41652d75ffac8080683", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1d4bd463c29e4224f0ac41652d75ffac8080683/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3aee39a6ec910bde6ae9a5423b11aaaad4a1b089", "url": "https://api.github.com/repos/rust-lang/rust/commits/3aee39a6ec910bde6ae9a5423b11aaaad4a1b089", "html_url": "https://github.com/rust-lang/rust/commit/3aee39a6ec910bde6ae9a5423b11aaaad4a1b089"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "02948f58fc4d60be1ca3b406a87cbfe76eda7648", "filename": "src/libstd/smallintmap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1d4bd463c29e4224f0ac41652d75ffac8080683/src%2Flibstd%2Fsmallintmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d4bd463c29e4224f0ac41652d75ffac8080683/src%2Flibstd%2Fsmallintmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsmallintmap.rs?ref=e1d4bd463c29e4224f0ac41652d75ffac8080683", "patch": "@@ -27,7 +27,7 @@ fn mk<T: copy>() -> smallintmap<T> {\n  */\n #[inline(always)]\n fn insert<T: copy>(self: smallintmap<T>, key: uint, val: T) {\n-    //#error(\"inserting key %?\", key);\n+    //io::println(#fmt(\"%?\", key));\n     self.v.grow_set_elt(key, none, some(val));\n }\n "}, {"sha": "0b78fd1a5054fe5bb3a7aa8027be2133daea390c", "filename": "src/rustc/middle/typeck/check.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e1d4bd463c29e4224f0ac41652d75ffac8080683/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d4bd463c29e4224f0ac41652d75ffac8080683/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs?ref=e1d4bd463c29e4224f0ac41652d75ffac8080683", "patch": "@@ -109,7 +109,7 @@ type fn_ctxt_ =\n \n      in_scope_regions: isr_alist,\n \n-     node_types: smallintmap::smallintmap<ty::t>,\n+     node_types: hashmap<ast::node_id, ty::t>,\n      node_type_substs: hashmap<ast::node_id, ty::substs>,\n \n      ccx: @crate_ctxt};\n@@ -132,7 +132,7 @@ fn blank_fn_ctxt(ccx: @crate_ctxt, rty: ty::t,\n                mut region_lb: region_bnd,\n                mut region_ub: region_bnd,\n                in_scope_regions: @nil,\n-               node_types: smallintmap::mk(),\n+               node_types: map::int_hash(),\n                node_type_substs: map::int_hash(),\n                ccx: ccx})\n }\n@@ -218,7 +218,7 @@ fn check_fn(ccx: @crate_ctxt,\n             {infcx: infer::new_infer_ctxt(tcx),\n              locals: int_hash(),\n              purity: decl.purity,\n-             node_types: smallintmap::mk(),\n+             node_types: map::int_hash(),\n              node_type_substs: map::int_hash()}\n           }\n           some(fcx) {\n@@ -490,7 +490,7 @@ impl methods for @fn_ctxt {\n     fn write_ty(node_id: ast::node_id, ty: ty::t) {\n         #debug[\"write_ty(%d, %s) in fcx %s\",\n                node_id, ty_to_str(self.tcx(), ty), self.tag()];\n-        self.node_types.insert(node_id as uint, ty);\n+        self.node_types.insert(node_id, ty);\n     }\n     fn write_substs(node_id: ast::node_id, +substs: ty::substs) {\n         if !ty::substs_is_noop(substs) {\n@@ -515,7 +515,7 @@ impl methods for @fn_ctxt {\n     }\n \n     fn expr_ty(ex: @ast::expr) -> ty::t {\n-        alt self.node_types.find(ex.id as uint) {\n+        alt self.node_types.find(ex.id) {\n           some(t) { t }\n           none {\n             self.tcx().sess.bug(#fmt[\"no type for expr %d (%s) in fcx %s\",\n@@ -524,7 +524,7 @@ impl methods for @fn_ctxt {\n         }\n     }\n     fn node_ty(id: ast::node_id) -> ty::t {\n-        alt self.node_types.find(id as uint) {\n+        alt self.node_types.find(id) {\n           some(t) { t }\n           none {\n             self.tcx().sess.bug("}, {"sha": "f97ff61dbf4d5b4f22289222cf8c2bfc6bfa64cd", "filename": "src/rustc/middle/typeck/check/writeback.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1d4bd463c29e4224f0ac41652d75ffac8080683/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d4bd463c29e4224f0ac41652d75ffac8080683/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fwriteback.rs?ref=e1d4bd463c29e4224f0ac41652d75ffac8080683", "patch": "@@ -59,7 +59,7 @@ fn resolve_type_vars_for_node(wbcx: wb_ctxt, sp: span, id: ast::node_id)\n fn maybe_resolve_type_vars_for_node(wbcx: wb_ctxt, sp: span,\n                                     id: ast::node_id)\n     -> option<ty::t> {\n-    if wbcx.fcx.node_types.contains_key(id as uint) {\n+    if wbcx.fcx.node_types.contains_key(id) {\n         resolve_type_vars_for_node(wbcx, sp, id)\n     } else {\n         none"}]}