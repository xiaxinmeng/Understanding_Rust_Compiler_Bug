{"sha": "2cace6aa5d1db3e95d1d1fe8c2c9c432e8ae7c3d", "node_id": "C_kwDOAAsO6NoAKDJjYWNlNmFhNWQxZGIzZTk1ZDFkMWZlOGMyYzljNDMyZThhZTdjM2Q", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-22T10:03:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-22T10:03:50Z"}, "message": "Rollup merge of #105769 - lyming2007:issue-105177-fix, r=eholk\n\nadd function to tell the identical errors for ambiguity_errors\n\nif 2 errors of the kind and ident and span of the ident, b1, b2 and misc1 misc2 are the same we call these 2 ambiguity errors identical\nprevent identical ambiguity error from pushing into vector of ambiguity_errors this will fix #105177", "tree": {"sha": "ae2e8882a652871e06815e76dfd396f8a043ae5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae2e8882a652871e06815e76dfd396f8a043ae5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cace6aa5d1db3e95d1d1fe8c2c9c432e8ae7c3d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjpCuGCRBK7hj4Ov3rIwAAmpIIABZxtLOTOI6S7QHHEya+2wuJ\n4ad7zHZtgzPNWV0jPXm3vZURvQEdtFFsc7mgWc1Ktjhe3OMeyN25n1gWmceXXa3G\nuqJdsKWyjSwQezA0+oBMxPSzrO+TeAHTb7tf2m4Co5P5sKCnxq3ihx8EJ11pJuWc\nJ+fuZ1F77mYnpvuMtRAcASQqr6BXG0CNH8cI4B25bFnqjFPqTzRT4i0ajnUbhzn9\n+qk33hZKTUhIfq+1JPs420+5fQwupkE999sXDol0A8Ew1RAqerDDCcAf3Drdmyjg\nEvGy4qwu12GMOAQpORjUjSQpkVAmtJ7/7lw6Uq07nmRPE4ieOp6hqiPrtQJzip0=\n=Kfsv\n-----END PGP SIGNATURE-----\n", "payload": "tree ae2e8882a652871e06815e76dfd396f8a043ae5b\nparent 0adf9e046bfa2739784c4269a6191ae6e0958ef6\nparent f20f86ec4e9d7d545cd00e401a77f2268e26553b\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1671703430 +0100\ncommitter GitHub <noreply@github.com> 1671703430 +0100\n\nRollup merge of #105769 - lyming2007:issue-105177-fix, r=eholk\n\nadd function to tell the identical errors for ambiguity_errors\n\nif 2 errors of the kind and ident and span of the ident, b1, b2 and misc1 misc2 are the same we call these 2 ambiguity errors identical\nprevent identical ambiguity error from pushing into vector of ambiguity_errors this will fix #105177\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cace6aa5d1db3e95d1d1fe8c2c9c432e8ae7c3d", "html_url": "https://github.com/rust-lang/rust/commit/2cace6aa5d1db3e95d1d1fe8c2c9c432e8ae7c3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cace6aa5d1db3e95d1d1fe8c2c9c432e8ae7c3d/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0adf9e046bfa2739784c4269a6191ae6e0958ef6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0adf9e046bfa2739784c4269a6191ae6e0958ef6", "html_url": "https://github.com/rust-lang/rust/commit/0adf9e046bfa2739784c4269a6191ae6e0958ef6"}, {"sha": "f20f86ec4e9d7d545cd00e401a77f2268e26553b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f20f86ec4e9d7d545cd00e401a77f2268e26553b", "html_url": "https://github.com/rust-lang/rust/commit/f20f86ec4e9d7d545cd00e401a77f2268e26553b"}], "stats": {"total": 88, "additions": 32, "deletions": 56}, "files": [{"sha": "2182b73693774638c46a5f91f3f51fdaaf109956", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/2cace6aa5d1db3e95d1d1fe8c2c9c432e8ae7c3d/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cace6aa5d1db3e95d1d1fe8c2c9c432e8ae7c3d/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=2cace6aa5d1db3e95d1d1fe8c2c9c432e8ae7c3d", "patch": "@@ -1686,21 +1686,43 @@ impl<'a> Resolver<'a> {\n             .or_insert_with(|| self.arenas.alloc_name_resolution())\n     }\n \n+    /// Test if AmbiguityError ambi is any identical to any one inside ambiguity_errors\n+    fn matches_previous_ambiguity_error(&mut self, ambi: &AmbiguityError<'_>) -> bool {\n+        for ambiguity_error in &self.ambiguity_errors {\n+            // if the span location and ident as well as its span are the same\n+            if ambiguity_error.kind == ambi.kind\n+                && ambiguity_error.ident == ambi.ident\n+                && ambiguity_error.ident.span == ambi.ident.span\n+                && ambiguity_error.b1.span == ambi.b1.span\n+                && ambiguity_error.b2.span == ambi.b2.span\n+                && ambiguity_error.misc1 == ambi.misc1\n+                && ambiguity_error.misc2 == ambi.misc2\n+            {\n+                return true;\n+            }\n+        }\n+        false\n+    }\n+\n     fn record_use(\n         &mut self,\n         ident: Ident,\n         used_binding: &'a NameBinding<'a>,\n         is_lexical_scope: bool,\n     ) {\n         if let Some((b2, kind)) = used_binding.ambiguity {\n-            self.ambiguity_errors.push(AmbiguityError {\n+            let ambiguity_error = AmbiguityError {\n                 kind,\n                 ident,\n                 b1: used_binding,\n                 b2,\n                 misc1: AmbiguityErrorMisc::None,\n                 misc2: AmbiguityErrorMisc::None,\n-            });\n+            };\n+            if !self.matches_previous_ambiguity_error(&ambiguity_error) {\n+                // avoid dumplicated span information to be emitt out\n+                self.ambiguity_errors.push(ambiguity_error);\n+            }\n         }\n         if let NameBindingKind::Import { import, binding, ref used } = used_binding.kind {\n             // Avoid marking `extern crate` items that refer to a name from extern prelude,"}, {"sha": "29e9b8ec841f54661233112fcbb236606490a9df", "filename": "src/test/ui/imports/local-modularized-tricky-fail-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2cace6aa5d1db3e95d1d1fe8c2c9c432e8ae7c3d/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cace6aa5d1db3e95d1d1fe8c2c9c432e8ae7c3d/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.rs?ref=2cace6aa5d1db3e95d1d1fe8c2c9c432e8ae7c3d", "patch": "@@ -26,7 +26,6 @@ mod inner1 {\n }\n \n exported!(); //~ ERROR `exported` is ambiguous\n-             //~| ERROR `exported` is ambiguous\n \n mod inner2 {\n     define_exported!();"}, {"sha": "20eadaaaa56b8732012505ffba5928e771275fd2", "filename": "src/test/ui/imports/local-modularized-tricky-fail-1.stderr", "status": "modified", "additions": 3, "deletions": 28, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/2cace6aa5d1db3e95d1d1fe8c2c9c432e8ae7c3d/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2cace6aa5d1db3e95d1d1fe8c2c9c432e8ae7c3d/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.stderr?ref=2cace6aa5d1db3e95d1d1fe8c2c9c432e8ae7c3d", "patch": "@@ -23,33 +23,8 @@ LL | use inner1::*;\n    = help: consider adding an explicit import of `exported` to disambiguate\n    = note: this error originates in the macro `define_exported` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0659]: `exported` is ambiguous\n-  --> $DIR/local-modularized-tricky-fail-1.rs:28:1\n-   |\n-LL | exported!();\n-   | ^^^^^^^^ ambiguous name\n-   |\n-   = note: ambiguous because of a conflict between a name from a glob import and a macro-expanded name in the same module during import or macro resolution\n-note: `exported` could refer to the macro defined here\n-  --> $DIR/local-modularized-tricky-fail-1.rs:5:5\n-   |\n-LL | /     macro_rules! exported {\n-LL | |         () => ()\n-LL | |     }\n-   | |_____^\n-...\n-LL |       define_exported!();\n-   |       ------------------ in this macro invocation\n-note: `exported` could also refer to the macro imported here\n-  --> $DIR/local-modularized-tricky-fail-1.rs:22:5\n-   |\n-LL | use inner1::*;\n-   |     ^^^^^^^^^\n-   = help: consider adding an explicit import of `exported` to disambiguate\n-   = note: this error originates in the macro `define_exported` (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n error[E0659]: `panic` is ambiguous\n-  --> $DIR/local-modularized-tricky-fail-1.rs:36:5\n+  --> $DIR/local-modularized-tricky-fail-1.rs:35:5\n    |\n LL |     panic!();\n    |     ^^^^^ ambiguous name\n@@ -70,7 +45,7 @@ LL |       define_panic!();\n    = note: this error originates in the macro `define_panic` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0659]: `include` is ambiguous\n-  --> $DIR/local-modularized-tricky-fail-1.rs:47:1\n+  --> $DIR/local-modularized-tricky-fail-1.rs:46:1\n    |\n LL | include!();\n    | ^^^^^^^ ambiguous name\n@@ -90,6 +65,6 @@ LL |       define_include!();\n    = help: use `crate::include` to refer to this macro unambiguously\n    = note: this error originates in the macro `define_include` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0659`."}, {"sha": "f2a22ad620b1111004fe4893436494d2b13fe7a8", "filename": "src/test/ui/imports/macros.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2cace6aa5d1db3e95d1d1fe8c2c9c432e8ae7c3d/src%2Ftest%2Fui%2Fimports%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cace6aa5d1db3e95d1d1fe8c2c9c432e8ae7c3d/src%2Ftest%2Fui%2Fimports%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fmacros.rs?ref=2cace6aa5d1db3e95d1d1fe8c2c9c432e8ae7c3d", "patch": "@@ -14,7 +14,6 @@ mod m1 {\n mod m2 {\n     use two_macros::*;\n     m! { //~ ERROR ambiguous\n-         //~| ERROR ambiguous\n         use foo::m;\n     }\n }"}, {"sha": "e34e5359b48faac1832a308ff7d61e036de5a1bb", "filename": "src/test/ui/imports/macros.stderr", "status": "modified", "additions": 5, "deletions": 24, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/2cace6aa5d1db3e95d1d1fe8c2c9c432e8ae7c3d/src%2Ftest%2Fui%2Fimports%2Fmacros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2cace6aa5d1db3e95d1d1fe8c2c9c432e8ae7c3d/src%2Ftest%2Fui%2Fimports%2Fmacros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fmacros.stderr?ref=2cace6aa5d1db3e95d1d1fe8c2c9c432e8ae7c3d", "patch": "@@ -6,7 +6,7 @@ LL |     m! {\n    |\n    = note: ambiguous because of a conflict between a name from a glob import and a macro-expanded name in the same module during import or macro resolution\n note: `m` could refer to the macro imported here\n-  --> $DIR/macros.rs:18:13\n+  --> $DIR/macros.rs:17:13\n    |\n LL |         use foo::m;\n    |             ^^^^^^\n@@ -18,43 +18,24 @@ LL |     use two_macros::*;\n    = help: consider adding an explicit import of `m` to disambiguate\n \n error[E0659]: `m` is ambiguous\n-  --> $DIR/macros.rs:16:5\n-   |\n-LL |     m! {\n-   |     ^ ambiguous name\n-   |\n-   = note: ambiguous because of a conflict between a name from a glob import and a macro-expanded name in the same module during import or macro resolution\n-note: `m` could refer to the macro imported here\n-  --> $DIR/macros.rs:18:13\n-   |\n-LL |         use foo::m;\n-   |             ^^^^^^\n-note: `m` could also refer to the macro imported here\n-  --> $DIR/macros.rs:15:9\n-   |\n-LL |     use two_macros::*;\n-   |         ^^^^^^^^^^^^^\n-   = help: consider adding an explicit import of `m` to disambiguate\n-\n-error[E0659]: `m` is ambiguous\n-  --> $DIR/macros.rs:30:9\n+  --> $DIR/macros.rs:29:9\n    |\n LL |         m! {\n    |         ^ ambiguous name\n    |\n    = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n note: `m` could refer to the macro imported here\n-  --> $DIR/macros.rs:31:17\n+  --> $DIR/macros.rs:30:17\n    |\n LL |             use two_macros::n as m;\n    |                 ^^^^^^^^^^^^^^^^^^\n note: `m` could also refer to the macro imported here\n-  --> $DIR/macros.rs:23:9\n+  --> $DIR/macros.rs:22:9\n    |\n LL |     use two_macros::m;\n    |         ^^^^^^^^^^^^^\n    = help: use `self::m` to refer to this macro unambiguously\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0659`."}]}