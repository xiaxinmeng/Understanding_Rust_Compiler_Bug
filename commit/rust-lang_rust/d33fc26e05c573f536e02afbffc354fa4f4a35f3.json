{"sha": "d33fc26e05c573f536e02afbffc354fa4f4a35f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzM2ZjMjZlMDVjNTczZjUzNmUwMmFmYmZmYzM1NGZhNGY0YTM1ZjM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-18T16:42:49Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-18T16:42:49Z"}, "message": "Touch up docs", "tree": {"sha": "b4d08c438076e3dbbc2b4d8ea64fb3f821a3377d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4d08c438076e3dbbc2b4d8ea64fb3f821a3377d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d33fc26e05c573f536e02afbffc354fa4f4a35f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d33fc26e05c573f536e02afbffc354fa4f4a35f3", "html_url": "https://github.com/rust-lang/rust/commit/d33fc26e05c573f536e02afbffc354fa4f4a35f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d33fc26e05c573f536e02afbffc354fa4f4a35f3/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04715cbe1caf92e55d393a352a12454ba958845e", "url": "https://api.github.com/repos/rust-lang/rust/commits/04715cbe1caf92e55d393a352a12454ba958845e", "html_url": "https://github.com/rust-lang/rust/commit/04715cbe1caf92e55d393a352a12454ba958845e"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "3fb0955d18a0ce8f65f58a469490d408313b8c9d", "filename": "crates/ra_hir_def/src/path.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d33fc26e05c573f536e02afbffc354fa4f4a35f3/crates%2Fra_hir_def%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d33fc26e05c573f536e02afbffc354fa4f4a35f3/crates%2Fra_hir_def%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fpath.rs?ref=d33fc26e05c573f536e02afbffc354fa4f4a35f3", "patch": "@@ -82,7 +82,8 @@ impl ModPath {\n \n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct Path {\n-    /// Type based path like `<T>::foo`\n+    /// Type based path like `<T>::foo`.\n+    /// Note that paths like `<Type as Trait>::foo` are desugard to `Trait::<Self=Type>::foo`.\n     type_anchor: Option<Box<TypeRef>>,\n     mod_path: ModPath,\n     /// Invariant: the same len as self.path.segments"}]}