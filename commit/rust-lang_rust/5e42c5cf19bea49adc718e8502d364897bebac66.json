{"sha": "5e42c5cf19bea49adc718e8502d364897bebac66", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlNDJjNWNmMTliZWE0OWFkYzcxOGU4NTAyZDM2NDg5N2JlYmFjNjY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-29T06:00:58Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-29T07:20:05Z"}, "message": "core: Add str::reserve_at_least", "tree": {"sha": "8ce86d3c8da54e279a6a245dd650be6f3c673d8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ce86d3c8da54e279a6a245dd650be6f3c673d8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e42c5cf19bea49adc718e8502d364897bebac66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e42c5cf19bea49adc718e8502d364897bebac66", "html_url": "https://github.com/rust-lang/rust/commit/5e42c5cf19bea49adc718e8502d364897bebac66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e42c5cf19bea49adc718e8502d364897bebac66/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3d7823381cd2d3d89ba4ca85a709df6622180ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3d7823381cd2d3d89ba4ca85a709df6622180ab", "html_url": "https://github.com/rust-lang/rust/commit/b3d7823381cd2d3d89ba4ca85a709df6622180ab"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "5c8cf71dc6d4247e737eff846760672d1f05b754", "filename": "src/libcore/str.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5e42c5cf19bea49adc718e8502d364897bebac66/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e42c5cf19bea49adc718e8502d364897bebac66/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=5e42c5cf19bea49adc718e8502d364897bebac66", "patch": "@@ -93,6 +93,7 @@ export\n    is_char_boundary,\n    char_at,\n    reserve,\n+   reserve_at_least,\n \n    unsafe;\n \n@@ -1505,6 +1506,30 @@ fn reserve(&s: str, n: uint) {\n     rustrt::str_reserve_shared(s, n);\n }\n \n+#[doc = \"\n+Reserves capacity for at least `n` bytes in the given string, not including\n+the null terminator.\n+\n+Assuming single-byte characters, the resulting string will be large\n+enough to hold a string of length `n`. To account for the null terminator,\n+the underlying buffer will have the size `n` + 1.\n+\n+This function will over-allocate in order to amortize the allocation costs\n+in scenarios where the caller may need to repeatedly reserve additional\n+space.\n+\n+If the capacity for `s` is already equal to or greater than the requested\n+capacity, then no action is taken.\n+\n+# Arguments\n+\n+* s - A string\n+* n - The number of bytes to reserve space for\n+\"]\n+fn reserve_at_least(&s: str, n: uint) unsafe {\n+    reserve(s, uint::next_power_of_two(n + 1u) - 1u)\n+}\n+\n #[doc = \"Unsafe operations\"]\n mod unsafe {\n    export"}]}