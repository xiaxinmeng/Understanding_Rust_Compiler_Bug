{"sha": "3f43996aa5b9163195039b45fa74a3c4635a90cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmNDM5OTZhYTViOTE2MzE5NTAzOWI0NWZhNzRhM2M0NjM1YTkwY2Q=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-08-28T15:54:32Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-08-31T16:22:35Z"}, "message": "Rustup to *1.13.0-nightly (eac41469d 2016-08-30)*", "tree": {"sha": "f64cd0a43da06a69f0709a23dfeb34bf17f42d01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f64cd0a43da06a69f0709a23dfeb34bf17f42d01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f43996aa5b9163195039b45fa74a3c4635a90cd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJXxwRMAAoJEF5CfHlMukXoU/AP/0dpFSiGBHcnDfC6K8C2H4Ia\nc5mUL2zLtGOJCPZoM8h5Hg6OUxEyyciYVM/8vfhztsp1J9Xr2wZrc2Gv4M1jZpYg\nGP6Vzvh8z41wCCJXMmrqHd0v3UX3WkbZieeqPTKjCvIYqJI0W46lUOmX0vukO8bL\ntLi4/XW28hooFA6/9GyRv2fgrBAwDRLLAB6/VfmvLf8nXS+yZ/I6mpElZXmsXAOM\nY4t9zOm8QaDinmZ0WXrtD1LhbGU2ztrd24Ha/jSBICxl5mh2Zh8BY4zxiyzpD/Hr\nLBEX2mjjCB4CAN2hZA7Cp9+3y+r5lVVTyUkAamCoO3+mrsdqTrHOiutXeKGqm/qG\nEOvXaqjf5rJBgl/vmVzhuapaLlHf4wR+bvVtZ+e2GHkDiFibYg12Eb9gv0ZlwM3P\nVkPzJHn0boIcozIitTTnNi7YanMprd/y5k2xcaqPjEN+8OkXyGKlYphsurL5EVqX\n7DwDoXqaoh0vDpsYXTe20a1iCFrL/hhfmcaJ5viaTluxR9FBh3f6WLp3nA+R6D49\n9E8tMk85BhiPloRcBDfuSv8NLuMyvM7vZQV9frMC/XR8Ig798jjPjqLezRB5zxWA\nT2TgT9JKsNvAlFW7OSi+/C68WXDXYN/8MXX1Tmf7VGxn6J6AR6FjmNflrKI5c9J5\nnyCku+RtsozHXHLAL8Hx\n=f7I/\n-----END PGP SIGNATURE-----", "payload": "tree f64cd0a43da06a69f0709a23dfeb34bf17f42d01\nparent b38a86a145b510663e8b57f0a6df64f3c969cf1f\nauthor mcarton <cartonmartin+git@gmail.com> 1472399672 +0200\ncommitter mcarton <cartonmartin+git@gmail.com> 1472660555 +0200\n\nRustup to *1.13.0-nightly (eac41469d 2016-08-30)*\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f43996aa5b9163195039b45fa74a3c4635a90cd", "html_url": "https://github.com/rust-lang/rust/commit/3f43996aa5b9163195039b45fa74a3c4635a90cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f43996aa5b9163195039b45fa74a3c4635a90cd/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b38a86a145b510663e8b57f0a6df64f3c969cf1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b38a86a145b510663e8b57f0a6df64f3c969cf1f", "html_url": "https://github.com/rust-lang/rust/commit/b38a86a145b510663e8b57f0a6df64f3c969cf1f"}], "stats": {"total": 52, "additions": 30, "deletions": 22}, "files": [{"sha": "7a36049178b006381a47f4d33bea18ce4eef3fbb", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 22, "deletions": 15, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/3f43996aa5b9163195039b45fa74a3c4635a90cd/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f43996aa5b9163195039b45fa74a3c4635a90cd/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=3f43996aa5b9163195039b45fa74a3c4635a90cd", "patch": "@@ -4,7 +4,7 @@ use reexport::*;\n use rustc::lint::*;\n use rustc::hir::*;\n use semver::Version;\n-use syntax::ast::{Attribute, Lit, LitKind, MetaItemKind};\n+use syntax::ast::{Attribute, Lit, LitKind, MetaItemKind, NestedMetaItem, NestedMetaItemKind};\n use syntax::codemap::Span;\n use utils::{in_macro, match_path, span_lint, span_lint_and_then, snippet_opt};\n use utils::paths;\n@@ -89,11 +89,13 @@ impl LateLintPass for AttrPass {\n                 return;\n             }\n             for item in items {\n-                if let MetaItemKind::NameValue(ref name, ref lit) = item.node {\n-                    if name == &\"since\" {\n-                        check_semver(cx, item.span, lit);\n-                    }\n-                }\n+                if_let_chain! {[\n+                    let NestedMetaItemKind::MetaItem(ref mi) = item.node,\n+                    let MetaItemKind::NameValue(ref name, ref lit) = mi.node,\n+                    name == &\"since\",\n+                ], {\n+                    check_semver(cx, item.span, lit);\n+                }}\n             }\n         }\n     }\n@@ -111,11 +113,9 @@ impl LateLintPass for AttrPass {\n                             \"allow\" | \"warn\" | \"deny\" | \"forbid\" => {\n                                 // whitelist `unused_imports`\n                                 for lint in lint_list {\n-                                    if let MetaItemKind::Word(ref word) = lint.node {\n-                                        if word == \"unused_imports\" {\n-                                            if let ItemUse(_) = item.node {\n-                                                return;\n-                                            }\n+                                    if is_word(lint, \"unused_imports\") {\n+                                        if let ItemUse(_) = item.node {\n+                                            return;\n                                         }\n                                     }\n                                 }\n@@ -214,10 +214,7 @@ fn check_attrs(cx: &LateContext, span: Span, name: &Name, attrs: &[Attribute]) {\n             if values.len() != 1 || inline != &\"inline\" {\n                 continue;\n             }\n-            if let MetaItemKind::Word(ref always) = values[0].node {\n-                if always != &\"always\" {\n-                    continue;\n-                }\n+            if is_word(&values[0], \"always\") {\n                 span_lint(cx,\n                           INLINE_ALWAYS,\n                           attr.span,\n@@ -239,3 +236,13 @@ fn check_semver(cx: &LateContext, span: Span, lit: &Lit) {\n               span,\n               \"the since field must contain a semver-compliant version\");\n }\n+\n+fn is_word(nmi: &NestedMetaItem, expected: &str) -> bool {\n+    if let NestedMetaItemKind::MetaItem(ref mi) = nmi.node {\n+        if let MetaItemKind::Word(ref word) = mi.node {\n+            return word == expected;\n+        }\n+    }\n+\n+    false\n+}"}, {"sha": "454f591756bb5d878f171636f7c9e229d6f5b7a3", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3f43996aa5b9163195039b45fa74a3c4635a90cd/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f43996aa5b9163195039b45fa74a3c4635a90cd/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=3f43996aa5b9163195039b45fa74a3c4635a90cd", "patch": "@@ -21,7 +21,7 @@ use rustc::hir;\n use rustc::lint::*;\n use rustc::ty;\n use syntax::ast;\n-use syntax::attr::{self, AttrMetaMethods};\n+use syntax::attr;\n use syntax::codemap::Span;\n use utils::in_macro;\n \n@@ -99,7 +99,7 @@ impl LateLintPass for MissingDoc {\n         let doc_hidden = self.doc_hidden() || attrs.iter().any(|attr| {\n             attr.check_name(\"doc\") && match attr.meta_item_list() {\n                 None => false,\n-                Some(l) => attr::contains_name(&l[..], \"hidden\"),\n+                Some(l) => attr::list_contains_name(&l[..], \"hidden\"),\n             }\n         });\n         self.doc_hidden_stack.push(doc_hidden);\n@@ -123,6 +123,7 @@ impl LateLintPass for MissingDoc {\n             hir::ItemStruct(..) => \"a struct\",\n             hir::ItemTrait(..) => \"a trait\",\n             hir::ItemTy(..) => \"a type alias\",\n+            hir::ItemUnion(..) => \"a union\",\n             hir::ItemDefaultImpl(..) |\n             hir::ItemExternCrate(..) |\n             hir::ItemForeignMod(..) |"}, {"sha": "488ca5c8a62bda88f9faff6c7d72face032b25d2", "filename": "clippy_lints/src/unsafe_removed_from_name.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3f43996aa5b9163195039b45fa74a3c4635a90cd/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f43996aa5b9163195039b45fa74a3c4635a90cd/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs?ref=3f43996aa5b9163195039b45fa74a3c4635a90cd", "patch": "@@ -51,8 +51,8 @@ impl LateLintPass for UnsafeNameRemoval {\n                 ViewPath_::ViewPathList(_, ref path_list_items) => {\n                     for path_list_item in path_list_items.iter() {\n                         let plid = path_list_item.node;\n-                        if let (Some(name), Some(rename)) = (plid.name(), plid.rename()) {\n-                            unsafe_to_safe_check(name, rename, cx, &item.span);\n+                        if let Some(rename) = plid.rename {\n+                            unsafe_to_safe_check(plid.name, rename, cx, &item.span);\n                         };\n                     }\n                 }"}, {"sha": "f9a93ed3f6ee1fef1c83b0a83f852c8b94f3c145", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3f43996aa5b9163195039b45fa74a3c4635a90cd/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f43996aa5b9163195039b45fa74a3c4635a90cd/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=3f43996aa5b9163195039b45fa74a3c4635a90cd", "patch": "@@ -4,13 +4,13 @@\n \n use std::{fmt, fs, io};\n use std::io::Read;\n-use syntax::{ast, codemap, ptr};\n+use syntax::{ast, codemap};\n use syntax::parse::token;\n use toml;\n \n /// Get the configuration file from arguments.\n-pub fn file(args: &[ptr::P<ast::MetaItem>]) -> Result<Option<token::InternedString>, (&'static str, codemap::Span)> {\n-    for arg in args {\n+pub fn file(args: &[codemap::Spanned<ast::NestedMetaItemKind>]) -> Result<Option<token::InternedString>, (&'static str, codemap::Span)> {\n+    for arg in args.iter().filter_map(|a| a.meta_item()) {\n         match arg.node {\n             ast::MetaItemKind::Word(ref name) |\n             ast::MetaItemKind::List(ref name, _) => {"}]}