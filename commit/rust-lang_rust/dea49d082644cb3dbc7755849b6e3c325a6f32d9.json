{"sha": "dea49d082644cb3dbc7755849b6e3c325a6f32d9", "node_id": "C_kwDOAAsO6NoAKGRlYTQ5ZDA4MjY0NGNiM2RiYzc3NTU4NDliNmUzYzMyNWE2ZjMyZDk", "commit": {"author": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2022-11-11T10:50:26Z"}, "committer": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2022-11-11T11:31:37Z"}, "message": "fix: check visibility of each segment in path resolution", "tree": {"sha": "3e8bd4e2e0b0624114bd713206c62c17e8dd608f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e8bd4e2e0b0624114bd713206c62c17e8dd608f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dea49d082644cb3dbc7755849b6e3c325a6f32d9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEkSbsQIURluxz4rzf4laYqTBYYXEFAmNuMpkACgkQ4laYqTBY\nYXHAIA//eUorCxR3h4krb8TCeLrXLf7JkD6IIeyDk2WBzo5dtyDZsjDo4fX1yano\n0g8A9ie4Ucrv9zI8Hl0DQrLCOzbal5VrbLh1S2RQF4N3ni0HkoxVhfqIoQQle1VE\n4SwnmjR62EmLD1OF28vsFw8wd3TD1GJwrsaMJrFYHAjmPd8p878rUvGGakwwo10Y\nCksUxOoQMyhaL7iJUjm3ON4nFP2xDoMPFukDrgpRs7/1NluYyPQY8X1aeoJZMntz\nwFKahSffNeH2z7qrzPo4pXBq+wfEraYZ7iM6m+4dqDKT58YXD2vxUUxoPR3yp07J\nkHazVSV/VNUEytLmQmGPAQE61PtFnZoRg+vHtc0PvxnsT0p0Idz9wwzDrIdT2VNx\narWdZ+8RQahS2zAxWjAW42QMC572RNO00xdi00nWf8qks6d80V66qAuGc7zAWRS+\nhWGV6TpctLnBOgQn7SX9NnAI2kAMlZ/CwVYqbmPCa9UUpwa+4EZVa3vr0kox6nqq\nqHRrSLFRKMnX+TqhMLLRbsq6DZQS8+WOTlfzBwYaWk2rV9N+pKC289JHsuQUuXu5\nhxTLFr8n1SUhNCjBTwyAARuY4UDhFl72moikZXjPP4/XsZm3TdncTTuG62fmYJzg\n2712wgF5BeRNfzNPkNG3nTaAN3SqHHzlwVD85NYMrYK4J3GC9lU=\n=OuGv\n-----END PGP SIGNATURE-----", "payload": "tree 3e8bd4e2e0b0624114bd713206c62c17e8dd608f\nparent 599142c34abad1442994947bd1200ce0bc973c54\nauthor Ryo Yoshida <low.ryoshida@gmail.com> 1668163826 +0900\ncommitter Ryo Yoshida <low.ryoshida@gmail.com> 1668166297 +0900\n\nfix: check visibility of each segment in path resolution\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dea49d082644cb3dbc7755849b6e3c325a6f32d9", "html_url": "https://github.com/rust-lang/rust/commit/dea49d082644cb3dbc7755849b6e3c325a6f32d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dea49d082644cb3dbc7755849b6e3c325a6f32d9/comments", "author": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "599142c34abad1442994947bd1200ce0bc973c54", "url": "https://api.github.com/repos/rust-lang/rust/commits/599142c34abad1442994947bd1200ce0bc973c54", "html_url": "https://github.com/rust-lang/rust/commit/599142c34abad1442994947bd1200ce0bc973c54"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "b0dd01f9dbea288784cceef395338852ef4ed859", "filename": "crates/hir-def/src/nameres/collector.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dea49d082644cb3dbc7755849b6e3c325a6f32d9/crates%2Fhir-def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dea49d082644cb3dbc7755849b6e3c325a6f32d9/crates%2Fhir-def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fnameres%2Fcollector.rs?ref=dea49d082644cb3dbc7755849b6e3c325a6f32d9", "patch": "@@ -212,6 +212,7 @@ impl Import {\n \n #[derive(Debug, Eq, PartialEq)]\n struct ImportDirective {\n+    /// The module this import directive is in.\n     module_id: LocalModuleId,\n     import: Import,\n     status: PartialResolvedImport,\n@@ -963,8 +964,10 @@ impl DefCollector<'_> {\n \n     fn update(\n         &mut self,\n+        // The module for which `resolutions` have been resolve\n         module_id: LocalModuleId,\n         resolutions: &[(Option<Name>, PerNs)],\n+        // Visibility this import will have\n         vis: Visibility,\n         import_type: ImportType,\n     ) {\n@@ -974,6 +977,7 @@ impl DefCollector<'_> {\n \n     fn update_recursive(\n         &mut self,\n+        // The module for which `resolutions` have been resolve\n         module_id: LocalModuleId,\n         resolutions: &[(Option<Name>, PerNs)],\n         // All resolutions are imported with this visibility; the visibilities in"}, {"sha": "20d39ec6cb92e2c86b2a1c48d43de2ca627f73e1", "filename": "crates/hir-def/src/nameres/path_resolution.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dea49d082644cb3dbc7755849b6e3c325a6f32d9/crates%2Fhir-def%2Fsrc%2Fnameres%2Fpath_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dea49d082644cb3dbc7755849b6e3c325a6f32d9/crates%2Fhir-def%2Fsrc%2Fnameres%2Fpath_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fnameres%2Fpath_resolution.rs?ref=dea49d082644cb3dbc7755849b6e3c325a6f32d9", "patch": "@@ -73,7 +73,10 @@ impl DefMap {\n     pub(crate) fn resolve_visibility(\n         &self,\n         db: &dyn DefDatabase,\n+        // module to import to\n         original_module: LocalModuleId,\n+        // pub(path)\n+        //     ^^^^ this\n         visibility: &RawVisibility,\n     ) -> Option<Visibility> {\n         let mut vis = match visibility {\n@@ -115,6 +118,7 @@ impl DefMap {\n         &self,\n         db: &dyn DefDatabase,\n         mode: ResolveMode,\n+        // module to import to\n         mut original_module: LocalModuleId,\n         path: &ModPath,\n         shadow: BuiltinShadowMode,\n@@ -361,6 +365,9 @@ impl DefMap {\n                     );\n                 }\n             };\n+\n+            curr_per_ns = curr_per_ns\n+                .filter_visibility(|vis| vis.is_visible_from_def_map(db, self, original_module));\n         }\n \n         ResolvePathResult::with(curr_per_ns, ReachedFixedPoint::Yes, None, Some(self.krate))"}, {"sha": "84d14e3b926bb247093848c99d5bd35cce56ecea", "filename": "crates/hir-def/src/nameres/tests/globs.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/dea49d082644cb3dbc7755849b6e3c325a6f32d9/crates%2Fhir-def%2Fsrc%2Fnameres%2Ftests%2Fglobs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dea49d082644cb3dbc7755849b6e3c325a6f32d9/crates%2Fhir-def%2Fsrc%2Fnameres%2Ftests%2Fglobs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fnameres%2Ftests%2Fglobs.rs?ref=dea49d082644cb3dbc7755849b6e3c325a6f32d9", "patch": "@@ -336,3 +336,33 @@ mod d {\n         \"#]],\n     );\n }\n+\n+#[test]\n+fn glob_name_collision_check_visibility() {\n+    check(\n+        r#\"\n+mod event {\n+    mod serenity {\n+        pub fn Event() {}\n+    }\n+    use serenity::*;\n+\n+    pub struct Event {}\n+}\n+\n+use event::Event;\n+        \"#,\n+        expect![[r#\"\n+            crate\n+            Event: t\n+            event: t\n+\n+            crate::event\n+            Event: t v\n+            serenity: t\n+\n+            crate::event::serenity\n+            Event: v\n+        \"#]],\n+    );\n+}"}]}