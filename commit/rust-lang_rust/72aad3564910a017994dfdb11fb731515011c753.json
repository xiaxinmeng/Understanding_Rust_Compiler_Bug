{"sha": "72aad3564910a017994dfdb11fb731515011c753", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyYWFkMzU2NDkxMGEwMTc5OTRkZmRiMTFmYjczMTUxNTAxMWM3NTM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-07-27T10:31:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-27T10:31:56Z"}, "message": "Rollup merge of #74750 - oli-obk:logging_and_test_cleanups, r=JohnTitor\n\nClean up some uses of logging in ui tests\n\nThe removed test can't possibly trigger anything today as we don't have logging in libstd.\n\nThe `exec-env` flag was mistakenly used for adding env vars to rustc invocations both in test and in the test suite and there were some accidental renames from RUST_LOG to RUSTC_LOG that I reverted.", "tree": {"sha": "2ed20aba6bbdaf099fa99419b651272ef0b6e79f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ed20aba6bbdaf099fa99419b651272ef0b6e79f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72aad3564910a017994dfdb11fb731515011c753", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfHq0dCRBK7hj4Ov3rIwAAdHIIAK7gfGOXdd1qK9C4QImcKr8z\nhp8ooLmkOV2rLEWlvH7AsRdEmhBzQCCmIwlUgWx3CciWz3Xj2PKwlFMPoAK1uTBL\nnCiSWPmLd3n0QbC/9Ns6W4sJSraUEOFilb1rMB6ef8MhwxQJFdTEbExZ2EkAtWrd\nc0NMVo+QtQMsnC9xZ4hbKVpPOSon8BU+Bs3d1mMevbcX5tS4zQJMLvDmb7RwJEb2\nr066JikB+3m1xlI+6A+9KWX3XZwemI5+RjB4qU/STk8zuqXHrEWwhgNwbSN75Nb0\nw6pAz8Iwd7T0165qNkETG/NS+FFHa3xi3TIpmpBMLesw0ItTS3wSQFTEvy84dho=\n=z5to\n-----END PGP SIGNATURE-----\n", "payload": "tree 2ed20aba6bbdaf099fa99419b651272ef0b6e79f\nparent ba3c245227a83e9470de17f777f967b4d20fd8f3\nparent 86ac65c88706bea36f6527f226c31ba8d81aac94\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1595845916 +0900\ncommitter GitHub <noreply@github.com> 1595845916 +0900\n\nRollup merge of #74750 - oli-obk:logging_and_test_cleanups, r=JohnTitor\n\nClean up some uses of logging in ui tests\n\nThe removed test can't possibly trigger anything today as we don't have logging in libstd.\n\nThe `exec-env` flag was mistakenly used for adding env vars to rustc invocations both in test and in the test suite and there were some accidental renames from RUST_LOG to RUSTC_LOG that I reverted.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72aad3564910a017994dfdb11fb731515011c753", "html_url": "https://github.com/rust-lang/rust/commit/72aad3564910a017994dfdb11fb731515011c753", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72aad3564910a017994dfdb11fb731515011c753/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba3c245227a83e9470de17f777f967b4d20fd8f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba3c245227a83e9470de17f777f967b4d20fd8f3", "html_url": "https://github.com/rust-lang/rust/commit/ba3c245227a83e9470de17f777f967b4d20fd8f3"}, {"sha": "86ac65c88706bea36f6527f226c31ba8d81aac94", "url": "https://api.github.com/repos/rust-lang/rust/commits/86ac65c88706bea36f6527f226c31ba8d81aac94", "html_url": "https://github.com/rust-lang/rust/commit/86ac65c88706bea36f6527f226c31ba8d81aac94"}], "stats": {"total": 42, "additions": 13, "deletions": 29}, "files": [{"sha": "f46eeb7a020d8f9ef0464d821d3db2a2fd285de8", "filename": "src/test/ui/binding/func-arg-ref-pattern.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/72aad3564910a017994dfdb11fb731515011c753/src%2Ftest%2Fui%2Fbinding%2Ffunc-arg-ref-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72aad3564910a017994dfdb11fb731515011c753/src%2Ftest%2Fui%2Fbinding%2Ffunc-arg-ref-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbinding%2Ffunc-arg-ref-pattern.rs?ref=72aad3564910a017994dfdb11fb731515011c753", "patch": "@@ -1,5 +1,4 @@\n // run-pass\n-// exec-env:RUST_POISON_ON_FREE=1\n \n // Test argument patterns where we create refs to the inside of\n // boxes. Make sure that we don't free the box as we match the"}, {"sha": "56ec629c61360532c7ce65445b9094745acdbe4f", "filename": "src/test/ui/issues/issue-18075.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72aad3564910a017994dfdb11fb731515011c753/src%2Ftest%2Fui%2Fissues%2Fissue-18075.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72aad3564910a017994dfdb11fb731515011c753/src%2Ftest%2Fui%2Fissues%2Fissue-18075.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-18075.rs?ref=72aad3564910a017994dfdb11fb731515011c753", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// exec-env:RUSTC_LOG=rustc::middle=debug\n+// rustc-env:RUSTC_LOG=rustc::middle=debug\n \n fn main() {\n     let b = 1isize;"}, {"sha": "ab568fd01efc5811d8f9e257fa7df387e180ec37", "filename": "src/test/ui/issues/issue-34932.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/72aad3564910a017994dfdb11fb731515011c753/src%2Ftest%2Fui%2Fissues%2Fissue-34932.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72aad3564910a017994dfdb11fb731515011c753/src%2Ftest%2Fui%2Fissues%2Fissue-34932.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-34932.rs?ref=72aad3564910a017994dfdb11fb731515011c753", "patch": "@@ -1,6 +1,5 @@\n // run-pass\n // compile-flags:--test\n-// rustc-env:RUSTC_BOOTSTRAP_KEY=\n #![cfg(any())] // This test should be configured away\n #![feature(rustc_attrs)] // Test that this is allowed on stable/beta\n #![feature(iter_arith_traits)] // Test that this is not unused"}, {"sha": "6d16819ceb0f0624980167819513982b378a99ac", "filename": "src/test/ui/logging-only-prints-once.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/72aad3564910a017994dfdb11fb731515011c753/src%2Ftest%2Fui%2Flogging-only-prints-once.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72aad3564910a017994dfdb11fb731515011c753/src%2Ftest%2Fui%2Flogging-only-prints-once.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flogging-only-prints-once.rs?ref=72aad3564910a017994dfdb11fb731515011c753", "patch": "@@ -1,7 +1,6 @@\n // run-pass\n // ignore-windows\n // ignore-emscripten no threads support\n-// exec-env:RUSTC_LOG=debug\n \n use std::cell::Cell;\n use std::fmt;\n@@ -19,10 +18,13 @@ impl fmt::Debug for Foo {\n }\n \n pub fn main() {\n-    thread::spawn(move|| {\n+    thread::spawn(move || {\n         let mut f = Foo(Cell::new(0));\n         println!(\"{:?}\", f);\n         let Foo(ref mut f) = f;\n         assert_eq!(f.get(), 1);\n-    }).join().ok().unwrap();\n+    })\n+    .join()\n+    .ok()\n+    .unwrap();\n }"}, {"sha": "540d2b4f58a90f175d9bfe700aa93843a10c5be7", "filename": "src/test/ui/logging_before_rt_started.rs", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ba3c245227a83e9470de17f777f967b4d20fd8f3/src%2Ftest%2Fui%2Flogging_before_rt_started.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba3c245227a83e9470de17f777f967b4d20fd8f3/src%2Ftest%2Fui%2Flogging_before_rt_started.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flogging_before_rt_started.rs?ref=ba3c245227a83e9470de17f777f967b4d20fd8f3", "patch": "@@ -1,12 +0,0 @@\n-// run-pass\n-// exec-env:RUSTC_LOG=std::ptr\n-\n-// In issue #9487, it was realized that std::ptr was invoking the logging\n-// infrastructure, and when std::ptr was used during runtime initialization,\n-// this caused some serious problems. The problems have since been fixed, but\n-// this test will trigger \"output during runtime initialization\" to make sure\n-// that the bug isn't re-introduced.\n-\n-// pretty-expanded FIXME #23616\n-\n-pub fn main() {}"}, {"sha": "3b1992d90b7c5966ee8932701b534d615954b1a4", "filename": "src/test/ui/mismatched_types/const-fn-in-trait.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72aad3564910a017994dfdb11fb731515011c753/src%2Ftest%2Fui%2Fmismatched_types%2Fconst-fn-in-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72aad3564910a017994dfdb11fb731515011c753/src%2Ftest%2Fui%2Fmismatched_types%2Fconst-fn-in-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fconst-fn-in-trait.rs?ref=72aad3564910a017994dfdb11fb731515011c753", "patch": "@@ -1,5 +1,3 @@\n-// rustc-env:RUST_NEW_ERROR_FORMAT\n-\n #![feature(const_fn)]\n \n trait Foo {"}, {"sha": "450981a9183a220cd45744eed319c0643b9aacc5", "filename": "src/test/ui/mismatched_types/const-fn-in-trait.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72aad3564910a017994dfdb11fb731515011c753/src%2Ftest%2Fui%2Fmismatched_types%2Fconst-fn-in-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72aad3564910a017994dfdb11fb731515011c753/src%2Ftest%2Fui%2Fmismatched_types%2Fconst-fn-in-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fconst-fn-in-trait.stderr?ref=72aad3564910a017994dfdb11fb731515011c753", "patch": "@@ -1,11 +1,11 @@\n error[E0379]: functions in traits cannot be declared const\n-  --> $DIR/const-fn-in-trait.rs:7:5\n+  --> $DIR/const-fn-in-trait.rs:5:5\n    |\n LL |     const fn g();\n    |     ^^^^^ functions in traits cannot be const\n \n error[E0379]: functions in traits cannot be declared const\n-  --> $DIR/const-fn-in-trait.rs:11:5\n+  --> $DIR/const-fn-in-trait.rs:9:5\n    |\n LL |     const fn f() -> u32 { 22 }\n    |     ^^^^^ functions in traits cannot be const"}, {"sha": "ba206b8608f6c51b0fabd3d480c19440104b45e3", "filename": "src/test/ui/mismatched_types/trait-impl-fn-incompatibility.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72aad3564910a017994dfdb11fb731515011c753/src%2Ftest%2Fui%2Fmismatched_types%2Ftrait-impl-fn-incompatibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72aad3564910a017994dfdb11fb731515011c753/src%2Ftest%2Fui%2Fmismatched_types%2Ftrait-impl-fn-incompatibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Ftrait-impl-fn-incompatibility.rs?ref=72aad3564910a017994dfdb11fb731515011c753", "patch": "@@ -1,5 +1,3 @@\n-// rustc-env:RUST_NEW_ERROR_FORMAT\n-\n trait Foo {\n     fn foo(x: u16);\n     fn bar(&mut self, bar: &mut Bar);"}, {"sha": "5735120f7104a189e029b2f2bc184d0683a1386d", "filename": "src/test/ui/mismatched_types/trait-impl-fn-incompatibility.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72aad3564910a017994dfdb11fb731515011c753/src%2Ftest%2Fui%2Fmismatched_types%2Ftrait-impl-fn-incompatibility.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72aad3564910a017994dfdb11fb731515011c753/src%2Ftest%2Fui%2Fmismatched_types%2Ftrait-impl-fn-incompatibility.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Ftrait-impl-fn-incompatibility.stderr?ref=72aad3564910a017994dfdb11fb731515011c753", "patch": "@@ -1,5 +1,5 @@\n error[E0053]: method `foo` has an incompatible type for trait\n-  --> $DIR/trait-impl-fn-incompatibility.rs:11:15\n+  --> $DIR/trait-impl-fn-incompatibility.rs:9:15\n    |\n LL |     fn foo(x: u16);\n    |               --- type in trait\n@@ -11,7 +11,7 @@ LL |     fn foo(x: i16) { }\n               found fn pointer `fn(i16)`\n \n error[E0053]: method `bar` has an incompatible type for trait\n-  --> $DIR/trait-impl-fn-incompatibility.rs:12:28\n+  --> $DIR/trait-impl-fn-incompatibility.rs:10:28\n    |\n LL |     fn bar(&mut self, bar: &mut Bar);\n    |                            -------- type in trait"}, {"sha": "9d3487ffb29566685bb24f06c43eeac9c9d6db57", "filename": "src/test/ui/threads-sendsync/spawning-with-debug.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72aad3564910a017994dfdb11fb731515011c753/src%2Ftest%2Fui%2Fthreads-sendsync%2Fspawning-with-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72aad3564910a017994dfdb11fb731515011c753/src%2Ftest%2Fui%2Fthreads-sendsync%2Fspawning-with-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fthreads-sendsync%2Fspawning-with-debug.rs?ref=72aad3564910a017994dfdb11fb731515011c753", "patch": "@@ -2,7 +2,7 @@\n #![allow(unused_must_use)]\n #![allow(unused_mut)]\n // ignore-windows\n-// exec-env:RUSTC_LOG=debug\n+// exec-env:RUST_LOG=debug\n // ignore-emscripten no threads support\n \n // regression test for issue #10405, make sure we don't call println! too soon.\n@@ -11,5 +11,5 @@ use std::thread::Builder;\n \n pub fn main() {\n     let mut t = Builder::new();\n-    t.spawn(move|| ());\n+    t.spawn(move || ());\n }"}, {"sha": "653e1f13c4b486f8d10176096d134a662cb6f726", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72aad3564910a017994dfdb11fb731515011c753/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72aad3564910a017994dfdb11fb731515011c753/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=72aad3564910a017994dfdb11fb731515011c753", "patch": "@@ -623,7 +623,7 @@ impl<'test> TestCx<'test> {\n             .arg(\"-L\")\n             .arg(&aux_dir)\n             .args(&self.props.compile_flags)\n-            .envs(self.props.exec_env.clone());\n+            .envs(self.props.rustc_env.clone());\n         self.maybe_add_external_args(\n             &mut rustc,\n             self.split_maybe_args(&self.config.target_rustcflags),"}]}