{"sha": "765133ac2e3f74b89417782f71d1aa505579523b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NTEzM2FjMmUzZjc0Yjg5NDE3NzgyZjcxZDFhYTUwNTU3OTUyM2I=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-11-23T20:34:17Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-11-28T17:59:56Z"}, "message": "rustc_metadata: Privatize `CrateMetadata::dep_kind`", "tree": {"sha": "75de36b24277135aa0d1fc460ad8e75961f5c63e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75de36b24277135aa0d1fc460ad8e75961f5c63e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/765133ac2e3f74b89417782f71d1aa505579523b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/765133ac2e3f74b89417782f71d1aa505579523b", "html_url": "https://github.com/rust-lang/rust/commit/765133ac2e3f74b89417782f71d1aa505579523b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/765133ac2e3f74b89417782f71d1aa505579523b/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32aa58c96bf7d61c03838f9ec75f3e4d26974832", "url": "https://api.github.com/repos/rust-lang/rust/commits/32aa58c96bf7d61c03838f9ec75f3e4d26974832", "html_url": "https://github.com/rust-lang/rust/commit/32aa58c96bf7d61c03838f9ec75f3e4d26974832"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "f160c45b3155a304e64ba01644a7b137d5e7e9ae", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/765133ac2e3f74b89417782f71d1aa505579523b/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/765133ac2e3f74b89417782f71d1aa505579523b/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=765133ac2e3f74b89417782f71d1aa505579523b", "patch": "@@ -50,7 +50,7 @@ fn dump_crates(cstore: &CStore) {\n         info!(\"  name: {}\", data.root.name);\n         info!(\"  cnum: {}\", cnum);\n         info!(\"  hash: {}\", data.root.hash);\n-        info!(\"  reqd: {:?}\", *data.dep_kind.lock());\n+        info!(\"  reqd: {:?}\", data.dep_kind());\n         let CrateSource { dylib, rlib, rmeta } = data.source();\n         dylib.as_ref().map(|dl| info!(\"  dylib: {}\", dl.0.display()));\n         rlib.as_ref().map(|rl|  info!(\"   rlib: {}\", rl.0.display()));\n@@ -353,9 +353,7 @@ impl<'a> CrateLoader<'a> {\n                 if data.root.is_proc_macro_crate() {\n                     dep_kind = DepKind::UnexportedMacrosOnly;\n                 }\n-                data.dep_kind.with_lock(|data_dep_kind| {\n-                    *data_dep_kind = cmp::max(*data_dep_kind, dep_kind);\n-                });\n+                data.update_dep_kind(|data_dep_kind| cmp::max(data_dep_kind, dep_kind));\n                 Ok(cnum)\n             }\n             (LoadResult::Loaded(library), host_library) => {\n@@ -503,7 +501,7 @@ impl<'a> CrateLoader<'a> {\n                 // #![panic_runtime] crate.\n                 self.inject_dependency_if(cnum, \"a panic runtime\",\n                                           &|data| data.root.needs_panic_runtime);\n-                runtime_found = runtime_found || *data.dep_kind.lock() == DepKind::Explicit;\n+                runtime_found = runtime_found || data.dep_kind() == DepKind::Explicit;\n             }\n         });\n "}, {"sha": "3004af39435b836a1d31766eaa35bd7d21988009", "filename": "src/librustc_metadata/rmeta/decoder.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/765133ac2e3f74b89417782f71d1aa505579523b/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/765133ac2e3f74b89417782f71d1aa505579523b/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs?ref=765133ac2e3f74b89417782f71d1aa505579523b", "patch": "@@ -99,7 +99,7 @@ crate struct CrateMetadata {\n     /// Same ID set as `cnum_map` plus maybe some injected crates like panic runtime.\n     dependencies: Lock<Vec<CrateNum>>,\n     /// How to link (or not link) this crate to the currently compiled crate.\n-    crate dep_kind: Lock<DepKind>,\n+    dep_kind: Lock<DepKind>,\n     /// Filesystem location of this crate.\n     source: CrateSource,\n     /// Whether or not this crate should be consider a private dependency\n@@ -1538,6 +1538,14 @@ impl<'a, 'tcx> CrateMetadata {\n     crate fn source(&self) -> &CrateSource {\n         &self.source\n     }\n+\n+    crate fn dep_kind(&self) -> DepKind {\n+        *self.dep_kind.lock()\n+    }\n+\n+    crate fn update_dep_kind(&self, f: impl FnOnce(DepKind) -> DepKind) {\n+        self.dep_kind.with_lock(|dep_kind| *dep_kind = f(*dep_kind))\n+    }\n }\n \n // Cannot be implemented on 'ProcMacro', as libproc_macro"}]}