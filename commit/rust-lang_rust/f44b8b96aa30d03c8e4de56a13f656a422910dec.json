{"sha": "f44b8b96aa30d03c8e4de56a13f656a422910dec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0NGI4Yjk2YWEzMGQwM2M4ZTRkZTU2YTEzZjY1NmE0MjI5MTBkZWM=", "commit": {"author": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-06-24T12:52:18Z"}, "committer": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-06-24T13:00:05Z"}, "message": "Document the Self keyword", "tree": {"sha": "c824a9aad4e7f2ed82f3436a86a0e1aac4148058", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c824a9aad4e7f2ed82f3436a86a0e1aac4148058"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f44b8b96aa30d03c8e4de56a13f656a422910dec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f44b8b96aa30d03c8e4de56a13f656a422910dec", "html_url": "https://github.com/rust-lang/rust/commit/f44b8b96aa30d03c8e4de56a13f656a422910dec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f44b8b96aa30d03c8e4de56a13f656a422910dec/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c90ae8404b6b83bc3cba35840ddf7edd500cc86", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c90ae8404b6b83bc3cba35840ddf7edd500cc86", "html_url": "https://github.com/rust-lang/rust/commit/3c90ae8404b6b83bc3cba35840ddf7edd500cc86"}], "stats": {"total": 59, "additions": 57, "deletions": 2}, "files": [{"sha": "74b78375934896838984673f761f8a2efb6ffadf", "filename": "src/libstd/keyword_docs.rs", "status": "modified", "additions": 57, "deletions": 2, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f44b8b96aa30d03c8e4de56a13f656a422910dec/src%2Flibstd%2Fkeyword_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f44b8b96aa30d03c8e4de56a13f656a422910dec/src%2Flibstd%2Fkeyword_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fkeyword_docs.rs?ref=f44b8b96aa30d03c8e4de56a13f656a422910dec", "patch": "@@ -1019,11 +1019,66 @@ mod self_keyword {}\n /// The implementing type within a [`trait`] or [`impl`] block, or the current type within a type\n /// definition.\n ///\n-/// The documentation for this keyword is [not yet complete]. Pull requests welcome!\n+/// Within a type definition:\n+///\n+/// ```\n+/// # #![allow(dead_code)]\n+/// struct Node {\n+///     elem: i32,\n+///     // `Self` is a `Node` here.\n+///     next: Option<Box<Self>>,\n+/// }\n+/// ```\n+///\n+/// In an [`impl`] block:\n+///\n+/// ```\n+/// struct Foo(i32);\n+///\n+/// impl Foo {\n+///     fn new() -> Self {\n+///         Self(0)\n+///     }\n+/// }\n+///\n+/// assert_eq!(Foo::new().0, Foo(0).0);\n+/// ```\n+///\n+/// Generic parameters are implicit with `Self`:\n+///\n+/// ```\n+/// # #![allow(dead_code)]\n+/// struct Wrap<T> {\n+///     elem: T,\n+/// }\n+///\n+/// impl<T> Wrap<T> {\n+///     fn new(elem: T) -> Self {\n+///         Self { elem }\n+///     }\n+/// }\n+/// ```\n+///\n+/// In a [`trait`] definition and related [`impl`] block:\n+///\n+/// ```\n+/// trait Example {\n+///     fn example() -> Self;\n+/// }\n+///\n+/// struct Foo(i32);\n+///\n+/// impl Example for Foo {\n+///     fn example() -> Self {\n+///         Self(42)\n+///     }\n+/// }\n+///\n+/// assert_eq!(Foo::example().0, Foo(42).0);\n+/// ```\n ///\n /// [`impl`]: keyword.impl.html\n /// [`trait`]: keyword.trait.html\n-/// [not yet complete]: https://github.com/rust-lang/rust/issues/34601\n mod self_upper_keyword {}\n \n #[doc(keyword = \"static\")]"}]}