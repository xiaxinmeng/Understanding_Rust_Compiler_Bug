{"sha": "3a423c3feb9b4827ff8b3dd1e18307df700320f2", "node_id": "C_kwDOAAsO6NoAKDNhNDIzYzNmZWI5YjQ4MjdmZjhiM2RkMWUxODMwN2RmNzAwMzIwZjI", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-24T21:12:30Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-25T16:43:14Z"}, "message": "Manually add inlined frames in the interpreter stacktrace.", "tree": {"sha": "b63ae25df0e764dae8d2eefd2e287c6dcfdbcaac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b63ae25df0e764dae8d2eefd2e287c6dcfdbcaac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a423c3feb9b4827ff8b3dd1e18307df700320f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a423c3feb9b4827ff8b3dd1e18307df700320f2", "html_url": "https://github.com/rust-lang/rust/commit/3a423c3feb9b4827ff8b3dd1e18307df700320f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a423c3feb9b4827ff8b3dd1e18307df700320f2/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0919ec3eccfc06534dcf392b91b616a70d0bf8b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/0919ec3eccfc06534dcf392b91b616a70d0bf8b1", "html_url": "https://github.com/rust-lang/rust/commit/0919ec3eccfc06534dcf392b91b616a70d0bf8b1"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "7e94578003ebfc13159f14c17f5e949348041a3c", "filename": "compiler/rustc_const_eval/src/interpret/eval_context.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3a423c3feb9b4827ff8b3dd1e18307df700320f2/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a423c3feb9b4827ff8b3dd1e18307df700320f2/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs?ref=3a423c3feb9b4827ff8b3dd1e18307df700320f2", "patch": "@@ -949,7 +949,20 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         // This deliberately does *not* honor `requires_caller_location` since it is used for much\n         // more than just panics.\n         for frame in stack.iter().rev() {\n-            let span = frame.current_span();\n+            let span = match frame.loc {\n+                Left(loc) => {\n+                    // If the stacktrace passes through MIR-inlined source scopes, add them.\n+                    let mir::SourceInfo { mut span, scope } = *frame.body.source_info(loc);\n+                    let mut scope_data = &frame.body.source_scopes[scope];\n+                    while let Some((instance, call_span)) = scope_data.inlined {\n+                        frames.push(FrameInfo { span, instance });\n+                        span = call_span;\n+                        scope_data = &frame.body.source_scopes[scope_data.parent_scope.unwrap()];\n+                    }\n+                    span\n+                }\n+                Right(span) => span,\n+            };\n             frames.push(FrameInfo { span, instance: frame.instance });\n         }\n         trace!(\"generate stacktrace: {:#?}\", frames);"}, {"sha": "b9199cff079e79096a03ab5bd28478be56e94dcc", "filename": "src/tools/miri/tests/fail/terminate-terminator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a423c3feb9b4827ff8b3dd1e18307df700320f2/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fterminate-terminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a423c3feb9b4827ff8b3dd1e18307df700320f2/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fterminate-terminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fterminate-terminator.rs?ref=3a423c3feb9b4827ff8b3dd1e18307df700320f2", "patch": "@@ -12,13 +12,13 @@ impl Drop for Foo {\n \n #[inline(always)]\n fn has_cleanup() {\n+    //~^ ERROR: panic in a function that cannot unwind\n     let _f = Foo;\n     panic!();\n }\n \n extern \"C\" fn panic_abort() {\n     has_cleanup();\n-    //~^ ERROR: panic in a function that cannot unwind\n }\n \n fn main() {"}, {"sha": "d73e23a53d0d9d74230d9d6bbca9e57beba2b0f5", "filename": "src/tools/miri/tests/fail/terminate-terminator.stderr", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3a423c3feb9b4827ff8b3dd1e18307df700320f2/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fterminate-terminator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3a423c3feb9b4827ff8b3dd1e18307df700320f2/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fterminate-terminator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fterminate-terminator.stderr?ref=3a423c3feb9b4827ff8b3dd1e18307df700320f2", "patch": "@@ -6,15 +6,18 @@ error: abnormal termination: panic in a function that cannot unwind\n   --> $DIR/terminate-terminator.rs:LL:CC\n    |\n LL | / fn has_cleanup() {\n+LL | |\n LL | |     let _f = Foo;\n LL | |     panic!();\n LL | | }\n    | |_^ panic in a function that cannot unwind\n-...\n-LL |       has_cleanup();\n-   |       ------------- in this inlined function call\n    |\n-   = note: inside `panic_abort` at $DIR/terminate-terminator.rs:LL:CC\n+   = note: inside `has_cleanup` at $DIR/terminate-terminator.rs:LL:CC\n+note: inside `panic_abort`\n+  --> $DIR/terminate-terminator.rs:LL:CC\n+   |\n+LL |     has_cleanup();\n+   |     ^^^^^^^^^^^^^\n note: inside `main`\n   --> $DIR/terminate-terminator.rs:LL:CC\n    |"}]}