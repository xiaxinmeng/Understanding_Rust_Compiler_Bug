{"sha": "2656303c83c6949f4c0b8cb8058095dd48eee5da", "node_id": "C_kwDOAAsO6NoAKDI2NTYzMDNjODNjNjk0OWY0YzBiOGNiODA1ODA5NWRkNDhlZWU1ZGE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-11T14:26:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-11T14:26:15Z"}, "message": "Auto merge of #13606 - Veykril:trait-alias, r=Veykril\n\nfix: Add trait alias grammar to rust.ungram\n\nWe already parse them, but the grammar was never updated to reflect that", "tree": {"sha": "6eeae43daa4c7cf53cdaf9478650401cf5e1a2d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6eeae43daa4c7cf53cdaf9478650401cf5e1a2d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2656303c83c6949f4c0b8cb8058095dd48eee5da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2656303c83c6949f4c0b8cb8058095dd48eee5da", "html_url": "https://github.com/rust-lang/rust/commit/2656303c83c6949f4c0b8cb8058095dd48eee5da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2656303c83c6949f4c0b8cb8058095dd48eee5da/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3531e8ce6dc0dcdd156c9baa2db73f0ec615429", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3531e8ce6dc0dcdd156c9baa2db73f0ec615429", "html_url": "https://github.com/rust-lang/rust/commit/d3531e8ce6dc0dcdd156c9baa2db73f0ec615429"}, {"sha": "6674bd898ed0e85fd61dba2b018144477ef6347c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6674bd898ed0e85fd61dba2b018144477ef6347c", "html_url": "https://github.com/rust-lang/rust/commit/6674bd898ed0e85fd61dba2b018144477ef6347c"}], "stats": {"total": 59, "additions": 37, "deletions": 22}, "files": [{"sha": "9c76969086485b2aecafdd7a36f436c4802d8136", "filename": "crates/hir-def/src/data.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2656303c83c6949f4c0b8cb8058095dd48eee5da/crates%2Fhir-def%2Fsrc%2Fdata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2656303c83c6949f4c0b8cb8058095dd48eee5da/crates%2Fhir-def%2Fsrc%2Fdata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fdata.rs?ref=2656303c83c6949f4c0b8cb8058095dd48eee5da", "patch": "@@ -236,11 +236,19 @@ impl TraitData {\n             .by_key(\"rustc_skip_array_during_method_dispatch\")\n             .exists();\n \n-        let mut collector =\n-            AssocItemCollector::new(db, module_id, tree_id.file_id(), ItemContainerId::TraitId(tr));\n-        collector.collect(&item_tree, tree_id.tree_id(), &tr_def.items);\n-        let (items, attribute_calls, diagnostics) = collector.finish();\n-\n+        let (items, attribute_calls, diagnostics) = match &tr_def.items {\n+            Some(items) => {\n+                let mut collector = AssocItemCollector::new(\n+                    db,\n+                    module_id,\n+                    tree_id.file_id(),\n+                    ItemContainerId::TraitId(tr),\n+                );\n+                collector.collect(&item_tree, tree_id.tree_id(), items);\n+                collector.finish()\n+            }\n+            None => Default::default(),\n+        };\n         (\n             Arc::new(TraitData {\n                 name,"}, {"sha": "0aa531eff71f6f5e02e12f003c947e25c1dddf5e", "filename": "crates/hir-def/src/item_tree.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2656303c83c6949f4c0b8cb8058095dd48eee5da/crates%2Fhir-def%2Fsrc%2Fitem_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2656303c83c6949f4c0b8cb8058095dd48eee5da/crates%2Fhir-def%2Fsrc%2Fitem_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fitem_tree.rs?ref=2656303c83c6949f4c0b8cb8058095dd48eee5da", "patch": "@@ -666,7 +666,8 @@ pub struct Trait {\n     pub generic_params: Interned<GenericParams>,\n     pub is_auto: bool,\n     pub is_unsafe: bool,\n-    pub items: Box<[AssocItem]>,\n+    /// This is [`None`] if this Trait is a trait alias.\n+    pub items: Option<Box<[AssocItem]>>,\n     pub ast_id: FileAstId<ast::Trait>,\n }\n "}, {"sha": "b25274bccc9a4aa6dbe507dc946376af735ab181", "filename": "crates/hir-def/src/item_tree/lower.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2656303c83c6949f4c0b8cb8058095dd48eee5da/crates%2Fhir-def%2Fsrc%2Fitem_tree%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2656303c83c6949f4c0b8cb8058095dd48eee5da/crates%2Fhir-def%2Fsrc%2Fitem_tree%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fitem_tree%2Flower.rs?ref=2656303c83c6949f4c0b8cb8058095dd48eee5da", "patch": "@@ -451,15 +451,7 @@ impl<'a> Ctx<'a> {\n                 .collect()\n         });\n         let ast_id = self.source_ast_id_map.ast_id(trait_def);\n-        let res = Trait {\n-            name,\n-            visibility,\n-            generic_params,\n-            is_auto,\n-            is_unsafe,\n-            items: items.unwrap_or_default(),\n-            ast_id,\n-        };\n+        let res = Trait { name, visibility, generic_params, is_auto, is_unsafe, items, ast_id };\n         Some(id(self.data().traits.alloc(res)))\n     }\n "}, {"sha": "48c40df22ff5f2ff319405cbb352739af61aafb1", "filename": "crates/hir-def/src/item_tree/pretty.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2656303c83c6949f4c0b8cb8058095dd48eee5da/crates%2Fhir-def%2Fsrc%2Fitem_tree%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2656303c83c6949f4c0b8cb8058095dd48eee5da/crates%2Fhir-def%2Fsrc%2Fitem_tree%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fitem_tree%2Fpretty.rs?ref=2656303c83c6949f4c0b8cb8058095dd48eee5da", "patch": "@@ -375,12 +375,21 @@ impl<'a> Printer<'a> {\n                 }\n                 w!(self, \"trait {}\", name);\n                 self.print_generic_params(generic_params);\n-                self.print_where_clause_and_opening_brace(generic_params);\n-                self.indented(|this| {\n-                    for item in &**items {\n-                        this.print_mod_item((*item).into());\n+                match items {\n+                    Some(items) => {\n+                        self.print_where_clause_and_opening_brace(generic_params);\n+                        self.indented(|this| {\n+                            for item in &**items {\n+                                this.print_mod_item((*item).into());\n+                            }\n+                        });\n                     }\n-                });\n+                    None => {\n+                        w!(self, \" = \");\n+                        // FIXME: Print the aliased traits\n+                        self.print_where_clause_and_opening_brace(generic_params);\n+                    }\n+                }\n                 wln!(self, \"}}\");\n             }\n             ModItem::Impl(it) => {"}, {"sha": "0a0cb0290d6cb5b0a55bc683a8fb8292f64fae63", "filename": "crates/syntax/rust.ungram", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2656303c83c6949f4c0b8cb8058095dd48eee5da/crates%2Fsyntax%2Frust.ungram", "raw_url": "https://github.com/rust-lang/rust/raw/2656303c83c6949f4c0b8cb8058095dd48eee5da/crates%2Fsyntax%2Frust.ungram", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Frust.ungram?ref=2656303c83c6949f4c0b8cb8058095dd48eee5da", "patch": "@@ -239,8 +239,11 @@ Static =\n Trait =\n   Attr* Visibility?\n   'unsafe'? 'auto'?\n-  'trait' Name GenericParamList? (':' TypeBoundList?)? WhereClause?\n-  AssocItemList\n+  'trait' Name GenericParamList?\n+  (\n+    (':' TypeBoundList?)? WhereClause? AssocItemList\n+    | '=' TypeBoundList? WhereClause? ';'\n+  )\n \n AssocItemList =\n   '{' Attr* AssocItem* '}'"}, {"sha": "2ea715f47fb23753089a3be6e96ac55425697d52", "filename": "crates/syntax/src/ast/generated/nodes.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2656303c83c6949f4c0b8cb8058095dd48eee5da/crates%2Fsyntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2656303c83c6949f4c0b8cb8058095dd48eee5da/crates%2Fsyntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs?ref=2656303c83c6949f4c0b8cb8058095dd48eee5da", "patch": "@@ -407,6 +407,8 @@ impl Trait {\n     pub fn auto_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![auto]) }\n     pub fn trait_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![trait]) }\n     pub fn assoc_item_list(&self) -> Option<AssocItemList> { support::child(&self.syntax) }\n+    pub fn eq_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![=]) }\n+    pub fn semicolon_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![;]) }\n }\n \n #[derive(Debug, Clone, PartialEq, Eq, Hash)]"}]}