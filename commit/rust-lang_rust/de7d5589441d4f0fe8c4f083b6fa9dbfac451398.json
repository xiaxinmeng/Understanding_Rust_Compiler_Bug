{"sha": "de7d5589441d4f0fe8c4f083b6fa9dbfac451398", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlN2Q1NTg5NDQxZDRmMGZlOGM0ZjA4M2I2ZmE5ZGJmYWM0NTEzOTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-03-26T15:58:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-03-26T15:58:20Z"}, "message": "auto merge of #5553 : pnkfelix/rust/doc-fixes-for-0.6-incoming, r=sanxiyn", "tree": {"sha": "b44a54e85f3dab2c6764cf4d313b98768bbaeb25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b44a54e85f3dab2c6764cf4d313b98768bbaeb25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de7d5589441d4f0fe8c4f083b6fa9dbfac451398", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de7d5589441d4f0fe8c4f083b6fa9dbfac451398", "html_url": "https://github.com/rust-lang/rust/commit/de7d5589441d4f0fe8c4f083b6fa9dbfac451398", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de7d5589441d4f0fe8c4f083b6fa9dbfac451398/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74fb263f7a8d385635e0861593ce6d72d0e5ec10", "url": "https://api.github.com/repos/rust-lang/rust/commits/74fb263f7a8d385635e0861593ce6d72d0e5ec10", "html_url": "https://github.com/rust-lang/rust/commit/74fb263f7a8d385635e0861593ce6d72d0e5ec10"}, {"sha": "e1dccf9a7362d0537b92f6c642a00e3c716c7b60", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1dccf9a7362d0537b92f6c642a00e3c716c7b60", "html_url": "https://github.com/rust-lang/rust/commit/e1dccf9a7362d0537b92f6c642a00e3c716c7b60"}], "stats": {"total": 45, "additions": 38, "deletions": 7}, "files": [{"sha": "3847b0b9755837ab3da0bff1a6df3c5e7bc9663b", "filename": "doc/rust.md", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/de7d5589441d4f0fe8c4f083b6fa9dbfac451398/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/de7d5589441d4f0fe8c4f083b6fa9dbfac451398/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=de7d5589441d4f0fe8c4f083b6fa9dbfac451398", "patch": "@@ -1671,6 +1671,10 @@ vec_elems : [expr [',' expr]*] | [expr ',' \"..\" expr]\n A [_vector_](#vector-types) _expression_ is written by enclosing zero or\n more comma-separated expressions of uniform type in square brackets.\n \n+In the `[expr ',' \"..\" expr]` form, the expression after the `\"..\"`\n+must be a constant expression that can be evaluated at compile time, such\n+as a [literal](#literals) or a [static item](#static-items).\n+\n ~~~~\n [1, 2, 3, 4];\n [\"a\", \"b\", \"c\", \"d\"];\n@@ -2156,6 +2160,19 @@ do f |j| {\n }\n ~~~~\n \n+In this example, both calls to the (binary) function `k` are equivalent:\n+\n+~~~~\n+# fn k(x:int, f: &fn(int)) { }\n+# fn l(i: int) { }\n+\n+k(3, |j| l(j));\n+\n+do k(3) |j| {\n+   l(j);\n+}\n+~~~~\n+\n \n ### For expressions\n \n@@ -2184,7 +2201,7 @@ and early boolean-valued returns from the `block` function,\n such that the meaning of `break` and `loop` is preserved in a primitive loop\n when rewritten as a `for` loop controlled by a higher order function.\n \n-An example a for loop:\n+An example of a for loop over the contents of a vector:\n \n ~~~~\n # type foo = int;\n@@ -2198,6 +2215,14 @@ for v.each |e| {\n }\n ~~~~\n \n+An example of a for loop over a series of integers:\n+\n+~~~~\n+# fn bar(b:uint) { }\n+for uint::range(0, 256) |i| {\n+    bar(i);\n+}\n+~~~~\n \n ### If expressions\n \n@@ -2474,6 +2499,7 @@ fail_unless!(b != \"world\");\n \n The vector type constructor represents a homogeneous array of values of a given type.\n A vector has a fixed size.\n+(Operations like `vec::push` operate solely on owned vectors.)\n A vector type can be annotated with a _definite_ size,\n written with a trailing asterisk and integer literal, such as `[int * 10]`.\n Such a definite-sized vector type is a first-class type, since its size is known statically.\n@@ -2484,6 +2510,10 @@ such as `&[T]`, `@[T]` or `~[T]`.\n The kind of a vector type depends on the kind of its element type,\n as with other simple structural types.\n \n+Expressions producing vectors of definite size cannot be evaluated in a\n+context expecting a vector of indefinite size; one must copy the\n+definite-sized vector contents into a distinct vector of indefinite size.\n+\n An example of a vector type and its use:\n \n ~~~~"}, {"sha": "58a514dc0eeebb4eb93dbc0f914e9aed39280ba9", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/de7d5589441d4f0fe8c4f083b6fa9dbfac451398/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de7d5589441d4f0fe8c4f083b6fa9dbfac451398/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=de7d5589441d4f0fe8c4f083b6fa9dbfac451398", "patch": "@@ -284,7 +284,8 @@ pub fn build_sized_opt<A,B: Buildable<A>>(size: Option<uint>,\n \n // Functions that combine iteration and building\n \n-/// Applies a function to each element of an iterable and returns the results.\n+/// Applies a function to each element of an iterable and returns the results\n+/// in a sequence built via `BU`.  See also `map_to_vec`.\n #[inline(always)]\n pub fn map<T,IT: BaseIter<T>,U,BU: Buildable<U>>(v: &IT, f: &fn(&T) -> U)\n     -> BU {"}, {"sha": "5c976756d137d2afc9f377cfbe46965b58d0be90", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/de7d5589441d4f0fe8c4f083b6fa9dbfac451398/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de7d5589441d4f0fe8c4f083b6fa9dbfac451398/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=de7d5589441d4f0fe8c4f083b6fa9dbfac451398", "patch": "@@ -172,12 +172,12 @@ pub fn with_capacity<T>(capacity: uint) -> ~[T] {\n /**\n  * Builds a vector by calling a provided function with an argument\n  * function that pushes an element to the back of a vector.\n- * This version takes an initial size for the vector.\n+ * This version takes an initial capacity for the vector.\n  *\n  * # Arguments\n  *\n  * * size - An initial size of the vector to reserve\n- * * builder - A function that will construct the vector. It recieves\n+ * * builder - A function that will construct the vector. It receives\n  *             as an argument a function that will push an element\n  *             onto the vector being constructed.\n  */\n@@ -194,7 +194,7 @@ pub fn build_sized<A>(size: uint, builder: &fn(push: &fn(v: A))) -> ~[A] {\n  *\n  * # Arguments\n  *\n- * * builder - A function that will construct the vector. It recieves\n+ * * builder - A function that will construct the vector. It receives\n  *             as an argument a function that will push an element\n  *             onto the vector being constructed.\n  */"}, {"sha": "9ac35aa444877a09b99166f76b7b361a73af4c3f", "filename": "src/librustc/README.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/de7d5589441d4f0fe8c4f083b6fa9dbfac451398/src%2Flibrustc%2FREADME.txt", "raw_url": "https://github.com/rust-lang/rust/raw/de7d5589441d4f0fe8c4f083b6fa9dbfac451398/src%2Flibrustc%2FREADME.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2FREADME.txt?ref=de7d5589441d4f0fe8c4f083b6fa9dbfac451398", "patch": "@@ -32,8 +32,8 @@ lib/      - bindings to LLVM\n The files concerned purely with syntax -- that is, the AST, parser,\n pretty-printer, lexer, macro expander, and utilities for traversing\n ASTs -- are in a separate crate called \"syntax\", whose files are in\n-./../libsyntax if the parent directory of front/, middle/, back/, and\n-so on is . .\n+./../libsyntax, where . is the current directory (that is, the parent\n+directory of front/, middle/, back/, and so on).\n \n The entry-point for the compiler is main() in driver/rustc.rs, and\n this file sequences the various parts together."}]}