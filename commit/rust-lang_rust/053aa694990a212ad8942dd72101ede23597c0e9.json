{"sha": "053aa694990a212ad8942dd72101ede23597c0e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1M2FhNjk0OTkwYTIxMmFkODk0MmRkNzIxMDFlZGUyMzU5N2MwZTk=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-05-02T07:09:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-02T07:09:15Z"}, "message": "Merge pull request #720 from RalfJung/rustup\n\nfix for latest Rust", "tree": {"sha": "0f5101b88305a72f3616ec9d717e115f48d92e1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f5101b88305a72f3616ec9d717e115f48d92e1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/053aa694990a212ad8942dd72101ede23597c0e9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcypebCRBK7hj4Ov3rIwAAdHIIAHNKmiuyWVPB+SVzHTHifXJS\nPTuDBZdExaJPfq9oi8MYf6/sYVA0IdL8Op5l/aUr86X8wIOXBuV6UjOYl0dO0eM+\n3MoLcBWWaQI15bhkhyLJg96oAq2gsxAMrXoGrDKsun+I4AbSUTzUubqeQEPaS/Ju\nR2Pi3uCc0JIAvSDfGI42thHCGMKKX2N4YwKAHIXdiSEgKQRMQQXMZTl6iq6zsY+L\nlbsioyVxx6wOa4ddqNOuyKj9ByZ2KcifLcCFCyKlJu6Qc24a9fqO5T8jIXtCYSxu\ntPBssiTj+kVQ10dacXg4GxDDEUxn+x64uOjsgPZ8OhCGWcyEhSUof4uVf3Q5vDw=\n=VF7/\n-----END PGP SIGNATURE-----\n", "payload": "tree 0f5101b88305a72f3616ec9d717e115f48d92e1a\nparent 41d1602c90b9232a9836179ed69c2d99a14a736d\nparent b08bf47606bbba0a966d6a722d85c740b315fcec\nauthor Oliver Scherer <github35764891676564198441@oli-obk.de> 1556780955 +0200\ncommitter GitHub <noreply@github.com> 1556780955 +0200\n\nMerge pull request #720 from RalfJung/rustup\n\nfix for latest Rust"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/053aa694990a212ad8942dd72101ede23597c0e9", "html_url": "https://github.com/rust-lang/rust/commit/053aa694990a212ad8942dd72101ede23597c0e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/053aa694990a212ad8942dd72101ede23597c0e9/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41d1602c90b9232a9836179ed69c2d99a14a736d", "url": "https://api.github.com/repos/rust-lang/rust/commits/41d1602c90b9232a9836179ed69c2d99a14a736d", "html_url": "https://github.com/rust-lang/rust/commit/41d1602c90b9232a9836179ed69c2d99a14a736d"}, {"sha": "b08bf47606bbba0a966d6a722d85c740b315fcec", "url": "https://api.github.com/repos/rust-lang/rust/commits/b08bf47606bbba0a966d6a722d85c740b315fcec", "html_url": "https://github.com/rust-lang/rust/commit/b08bf47606bbba0a966d6a722d85c740b315fcec"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "49e9739a2eb18e85469ac55c33b16927e6fa252b", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/053aa694990a212ad8942dd72101ede23597c0e9/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/053aa694990a212ad8942dd72101ede23597c0e9/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=053aa694990a212ad8942dd72101ede23597c0e9", "patch": "@@ -1 +1 @@\n-fe0a415b4ba3310c2263f07e0253e2434310299c\n+7c71bc3208031b1307573de45a3b3e18fa45787a"}, {"sha": "8fb6d04aa07ef0d447ae304321e6436e492ff945", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/053aa694990a212ad8942dd72101ede23597c0e9/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/053aa694990a212ad8942dd72101ede23597c0e9/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=053aa694990a212ad8942dd72101ede23597c0e9", "patch": "@@ -133,7 +133,11 @@ fn xargo_version() -> Option<(u32, u32, u32)> {\n         (split.next().expect(\"malformed `xargo --version` output: empty\"),\n          split.next().expect(\"malformed `xargo --version` output: not at least two words\"))\n     };\n-    if name != \"xargo\" {\n+    if name == \"xargo\" {\n+        // This is the upstream version which is currently broken, we need our fork.\n+        return None;\n+    }\n+    if name != \"xargo-rj\" {\n         panic!(\"malformed `xargo --version` output: application name is not `xargo`\");\n     }\n     let mut version_pieces = version.split('.');\n@@ -183,11 +187,11 @@ fn setup(ask_user: bool) {\n     let xargo = xargo_version();\n     if xargo.map_or(true, |v| v < (0, 3, 13)) {\n         if ask_user {\n-            ask(\"It seems you do not have a recent enough xargo installed. I will run `cargo install xargo -f`. Proceed?\");\n+            ask(\"It seems you do not have a recent enough xargo installed. I will run `cargo install --git https://github.com/RalfJung/xargo -f`. Proceed?\");\n         } else {\n-            println!(\"Installing xargo: `cargo install xargo -f`\");\n+            println!(\"Installing xargo: `cargo install --git https://github.com/RalfJung/xargo -f`\");\n         }\n-        if !Command::new(\"cargo\").args(&[\"install\", \"xargo\", \"-f\"]).status().unwrap().success() {\n+        if !Command::new(\"cargo\").args(&[\"install\", \"--git\", \"https://github.com/RalfJung/xargo\", \"-f\"]).status().unwrap().success() {\n             show_error(format!(\"Failed to install xargo\"));\n         }\n     }"}, {"sha": "8a0ac875f54d62ada8ce3e0c44e643efb7259c8d", "filename": "tests/run-pass/async-fn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/053aa694990a212ad8942dd72101ede23597c0e9/tests%2Frun-pass%2Fasync-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/053aa694990a212ad8942dd72101ede23597c0e9/tests%2Frun-pass%2Fasync-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fasync-fn.rs?ref=053aa694990a212ad8942dd72101ede23597c0e9", "patch": "@@ -1,7 +1,6 @@\n #![feature(\n     async_await,\n     await_macro,\n-    futures_api,\n )]\n \n use std::{future::Future, pin::Pin, task::Poll, ptr};"}, {"sha": "55037f55bf048d7924fe9671ad3c8cf4d4d80cc9", "filename": "tests/run-pass/hashmap.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/053aa694990a212ad8942dd72101ede23597c0e9/tests%2Frun-pass%2Fhashmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/053aa694990a212ad8942dd72101ede23597c0e9/tests%2Frun-pass%2Fhashmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fhashmap.rs?ref=053aa694990a212ad8942dd72101ede23597c0e9", "patch": "@@ -7,13 +7,10 @@ fn test_map<S: BuildHasher>(mut map: HashMap<i32, i32, S>) {\n     map.insert(0, 0);\n     assert_eq!(map.values().fold(0, |x, y| x+y), 0);\n \n-    let table_base = map.get(&0).unwrap() as *const _;\n-\n-    let num = 22; // large enough to trigger a resize\n+    let num = 25;\n     for i in 1..num {\n         map.insert(i, i);\n     }\n-    assert!(table_base != map.get(&0).unwrap() as *const _); // make sure relocation happened\n     assert_eq!(map.values().fold(0, |x, y| x+y), num*(num-1)/2); // check the right things are in the table now\n \n     // Inserting again replaces the existing entries"}]}