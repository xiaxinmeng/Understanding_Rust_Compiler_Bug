{"sha": "e8c87935e0004ff784ad361a5bac39d7677c3f4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4Yzg3OTM1ZTAwMDRmZjc4NGFkMzYxYTViYWMzOWQ3Njc3YzNmNGY=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-01-13T04:39:51Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-01-13T05:20:26Z"}, "message": "Include `..` suggestion if fields are all wildcards", "tree": {"sha": "28f56651a645677f5fd94998b561767b653a2e19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28f56651a645677f5fd94998b561767b653a2e19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8c87935e0004ff784ad361a5bac39d7677c3f4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8c87935e0004ff784ad361a5bac39d7677c3f4f", "html_url": "https://github.com/rust-lang/rust/commit/e8c87935e0004ff784ad361a5bac39d7677c3f4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8c87935e0004ff784ad361a5bac39d7677c3f4f/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7307a71f5e1893f7bd69ff160ce38dc97b5d195", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7307a71f5e1893f7bd69ff160ce38dc97b5d195", "html_url": "https://github.com/rust-lang/rust/commit/d7307a71f5e1893f7bd69ff160ce38dc97b5d195"}], "stats": {"total": 43, "additions": 35, "deletions": 8}, "files": [{"sha": "ecc6e8599ad01d2ccd7e8084fe69b9477f658441", "filename": "compiler/rustc_typeck/src/check/pat.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e8c87935e0004ff784ad361a5bac39d7677c3f4f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8c87935e0004ff784ad361a5bac39d7677c3f4f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs?ref=e8c87935e0004ff784ad361a5bac39d7677c3f4f", "patch": "@@ -1068,8 +1068,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 Applicability::MaybeIncorrect,\n             );\n \n-            // Only suggest `..` if more than one field is missing.\n-            if fields.len() - subpats.len() > 1 {\n+            // Only suggest `..` if more than one field is missing\n+            // or the pattern consists of all wildcards.\n+            if fields.len() - subpats.len() > 1 || all_wildcards {\n                 if subpats.is_empty() || all_wildcards {\n                     err.span_suggestion_verbose(\n                         all_fields_span,"}, {"sha": "c270593cac741883fcc242d2961983adb4849b88", "filename": "src/test/ui/destructuring-assignment/tuple_struct_destructure_fail.stderr", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e8c87935e0004ff784ad361a5bac39d7677c3f4f/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure_fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e8c87935e0004ff784ad361a5bac39d7677c3f4f/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure_fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure_fail.stderr?ref=e8c87935e0004ff784ad361a5bac39d7677c3f4f", "patch": "@@ -36,6 +36,10 @@ help: use `_` to explicitly ignore each field\n    |\n LL |     TupleStruct(_, _) = TupleStruct(1, 2);\n    |                  ^^^\n+help: use `..` to ignore all fields\n+   |\n+LL |     TupleStruct(..) = TupleStruct(1, 2);\n+   |                 ^^\n \n error[E0023]: this pattern has 3 fields, but the corresponding tuple variant has 2 fields\n   --> $DIR/tuple_struct_destructure_fail.rs:34:5\n@@ -59,6 +63,10 @@ help: use `_` to explicitly ignore each field\n    |\n LL |     Enum::SingleVariant(_, _) = Enum::SingleVariant(1, 2);\n    |                          ^^^\n+help: use `..` to ignore all fields\n+   |\n+LL |     Enum::SingleVariant(..) = Enum::SingleVariant(1, 2);\n+   |                         ^^\n \n error[E0070]: invalid left-hand side of assignment\n   --> $DIR/tuple_struct_destructure_fail.rs:40:12"}, {"sha": "9bdbf0bf9f40dfced6ed3e35aea1a6591fb913c0", "filename": "src/test/ui/issues/issue-67037-pat-tup-scrut-ty-diff-less-fields.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8c87935e0004ff784ad361a5bac39d7677c3f4f/src%2Ftest%2Fui%2Fissues%2Fissue-67037-pat-tup-scrut-ty-diff-less-fields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e8c87935e0004ff784ad361a5bac39d7677c3f4f/src%2Ftest%2Fui%2Fissues%2Fissue-67037-pat-tup-scrut-ty-diff-less-fields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-67037-pat-tup-scrut-ty-diff-less-fields.stderr?ref=e8c87935e0004ff784ad361a5bac39d7677c3f4f", "patch": "@@ -22,6 +22,10 @@ help: use `_` to explicitly ignore each field\n    |\n LL |     let P(_) = U {};\n    |           ^\n+help: use `..` to ignore all fields\n+   |\n+LL |     let P(..) = U {};\n+   |           ^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "37839482b31a2ef3aabae9fb356661db531c0241", "filename": "src/test/ui/match/match-pattern-field-mismatch.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8c87935e0004ff784ad361a5bac39d7677c3f4f/src%2Ftest%2Fui%2Fmatch%2Fmatch-pattern-field-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e8c87935e0004ff784ad361a5bac39d7677c3f4f/src%2Ftest%2Fui%2Fmatch%2Fmatch-pattern-field-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-pattern-field-mismatch.stderr?ref=e8c87935e0004ff784ad361a5bac39d7677c3f4f", "patch": "@@ -11,6 +11,10 @@ help: use `_` to explicitly ignore each field\n    |\n LL |           Color::Rgb(_, _, _) => { }\n    |                          ^^^\n+help: use `..` to ignore all fields\n+   |\n+LL |           Color::Rgb(..) => { }\n+   |                      ^^\n \n error: aborting due to previous error\n "}, {"sha": "ed852a47bb4ee1752ea520fe2c24be41c796b7a8", "filename": "src/test/ui/pattern/pat-tuple-underfield.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8c87935e0004ff784ad361a5bac39d7677c3f4f/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8c87935e0004ff784ad361a5bac39d7677c3f4f/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.rs?ref=e8c87935e0004ff784ad361a5bac39d7677c3f4f", "patch": "@@ -14,6 +14,7 @@ fn main() {\n         S(_) => {}\n         //~^ ERROR this pattern has 1 field, but the corresponding tuple struct has 2 fields\n         //~| HELP use `_` to explicitly ignore each field\n+        //~| HELP use `..` to ignore all fields\n     }\n     match S(0, 1.0) {\n         S() => {}\n@@ -31,6 +32,7 @@ fn main() {\n         E::S(_) => {}\n         //~^ ERROR this pattern has 1 field, but the corresponding tuple variant has 2 fields\n         //~| HELP use `_` to explicitly ignore each field\n+        //~| HELP use `..` to ignore all fields\n     }\n     match E::S(0, 1.0) {\n         E::S() => {}"}, {"sha": "76323d9a7bf56cba5ce792cbb2929dec11830858", "filename": "src/test/ui/pattern/pat-tuple-underfield.stderr", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e8c87935e0004ff784ad361a5bac39d7677c3f4f/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e8c87935e0004ff784ad361a5bac39d7677c3f4f/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr?ref=e8c87935e0004ff784ad361a5bac39d7677c3f4f", "patch": "@@ -1,5 +1,5 @@\n error[E0532]: expected unit struct, unit variant or constant, found tuple variant `E::S`\n-  --> $DIR/pat-tuple-underfield.rs:42:9\n+  --> $DIR/pat-tuple-underfield.rs:44:9\n    |\n LL |     S(i32, f32),\n    |     ----------- `E::S` defined here\n@@ -34,9 +34,13 @@ help: use `_` to explicitly ignore each field\n    |\n LL |         S(_, _) => {}\n    |            ^^^\n+help: use `..` to ignore all fields\n+   |\n+LL |         S(..) => {}\n+   |           ^^\n \n error[E0023]: this pattern has 0 fields, but the corresponding tuple struct has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:19:9\n+  --> $DIR/pat-tuple-underfield.rs:20:9\n    |\n LL | struct S(i32, f32);\n    | ------------------- tuple struct defined here\n@@ -54,7 +58,7 @@ LL |         S(..) => {}\n    |           ^^\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:26:9\n+  --> $DIR/pat-tuple-underfield.rs:27:9\n    |\n LL |     S(i32, f32),\n    |     ----------- tuple variant defined here\n@@ -68,7 +72,7 @@ LL |         E::S(x, _) => {}\n    |               ^^^\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:31:9\n+  --> $DIR/pat-tuple-underfield.rs:32:9\n    |\n LL |     S(i32, f32),\n    |     ----------- tuple variant defined here\n@@ -80,9 +84,13 @@ help: use `_` to explicitly ignore each field\n    |\n LL |         E::S(_, _) => {}\n    |               ^^^\n+help: use `..` to ignore all fields\n+   |\n+LL |         E::S(..) => {}\n+   |              ^^\n \n error[E0023]: this pattern has 0 fields, but the corresponding tuple variant has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:36:9\n+  --> $DIR/pat-tuple-underfield.rs:38:9\n    |\n LL |     S(i32, f32),\n    |     ----------- tuple variant defined here\n@@ -100,7 +108,7 @@ LL |         E::S(..) => {}\n    |              ^^\n \n error[E0023]: this pattern has 2 fields, but the corresponding tuple struct has 4 fields\n-  --> $DIR/pat-tuple-underfield.rs:48:9\n+  --> $DIR/pat-tuple-underfield.rs:50:9\n    |\n LL | struct Point4(i32, i32, i32, i32);\n    | ---------------------------------- tuple struct defined here"}]}