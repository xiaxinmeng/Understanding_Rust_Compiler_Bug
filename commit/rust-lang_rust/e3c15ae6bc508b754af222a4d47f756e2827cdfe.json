{"sha": "e3c15ae6bc508b754af222a4d47f756e2827cdfe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzYzE1YWU2YmM1MDhiNzU0YWYyMjJhNGQ0N2Y3NTZlMjgyN2NkZmU=", "commit": {"author": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2020-03-07T00:00:46Z"}, "committer": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2020-03-16T00:58:09Z"}, "message": "update comment", "tree": {"sha": "8b3193e3378ca37aa0f33e667f0465b0ec3c5f45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b3193e3378ca37aa0f33e667f0465b0ec3c5f45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3c15ae6bc508b754af222a4d47f756e2827cdfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3c15ae6bc508b754af222a4d47f756e2827cdfe", "html_url": "https://github.com/rust-lang/rust/commit/e3c15ae6bc508b754af222a4d47f756e2827cdfe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3c15ae6bc508b754af222a4d47f756e2827cdfe/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bd8ce2e506ed4c9a1a2214e7a6e9ead36e92631", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bd8ce2e506ed4c9a1a2214e7a6e9ead36e92631", "html_url": "https://github.com/rust-lang/rust/commit/7bd8ce2e506ed4c9a1a2214e7a6e9ead36e92631"}], "stats": {"total": 8, "additions": 2, "deletions": 6}, "files": [{"sha": "55ed07a97d168e232ed08ebca9ee70792ed2e7bd", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e3c15ae6bc508b754af222a4d47f756e2827cdfe/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3c15ae6bc508b754af222a4d47f756e2827cdfe/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=e3c15ae6bc508b754af222a4d47f756e2827cdfe", "patch": "@@ -542,11 +542,7 @@ impl<'hir> Map<'hir> {\n     /// Retrieves the `Node` corresponding to `id`, returning `None` if cannot be found.\n     pub fn find(&self, hir_id: HirId) -> Option<Node<'hir>> {\n         let node = self.get_entry(hir_id).node;\n-        if let Node::Crate(..) = node {\n-            None\n-        } else {\n-            Some(node)\n-        }\n+        if let Node::Crate(..) = node { None } else { Some(node) }\n     }\n \n     /// Similar to `get_parent`; returns the parent HIR Id, or just `hir_id` if there"}, {"sha": "5fee6920ddfe03acfd94b27499691c47ca13337f", "filename": "src/librustc_hir/hir.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3c15ae6bc508b754af222a4d47f756e2827cdfe/src%2Flibrustc_hir%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3c15ae6bc508b754af222a4d47f756e2827cdfe/src%2Flibrustc_hir%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Fhir.rs?ref=e3c15ae6bc508b754af222a4d47f756e2827cdfe", "patch": "@@ -1901,7 +1901,7 @@ pub enum ImplItemKind<'hir> {\n     /// An associated constant of the given type, set to the constant result\n     /// of the expression.\n     Const(&'hir Ty<'hir>, BodyId),\n-    /// A method implementation with the given signature and body.\n+    /// An associated function implementation with the given signature and body.\n     Fn(FnSig<'hir>, BodyId),\n     /// An associated type.\n     TyAlias(&'hir Ty<'hir>),"}]}