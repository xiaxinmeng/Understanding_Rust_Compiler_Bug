{"sha": "1804131b6da1765678c1b6881dcd1b4f4ca00bc4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4MDQxMzFiNmRhMTc2NTY3OGMxYjY4ODFkY2QxYjRmNGNhMDBiYzQ=", "commit": {"author": {"name": "Mark-Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-17T19:56:33Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-21T03:03:30Z"}, "message": "Remove Ref::clone for MirContext mir", "tree": {"sha": "a0eda6a11440af6aede75d038ef40b0fecf6b38f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0eda6a11440af6aede75d038ef40b0fecf6b38f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1804131b6da1765678c1b6881dcd1b4f4ca00bc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1804131b6da1765678c1b6881dcd1b4f4ca00bc4", "html_url": "https://github.com/rust-lang/rust/commit/1804131b6da1765678c1b6881dcd1b4f4ca00bc4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1804131b6da1765678c1b6881dcd1b4f4ca00bc4/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "937001a1f8a05a07b16233bcfdf53d9d3381e45c", "url": "https://api.github.com/repos/rust-lang/rust/commits/937001a1f8a05a07b16233bcfdf53d9d3381e45c", "html_url": "https://github.com/rust-lang/rust/commit/937001a1f8a05a07b16233bcfdf53d9d3381e45c"}], "stats": {"total": 21, "additions": 8, "deletions": 13}, "files": [{"sha": "48f8c2efe86b5f68b94ef8034772ab022f5ac3b2", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1804131b6da1765678c1b6881dcd1b4f4ca00bc4/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1804131b6da1765678c1b6881dcd1b4f4ca00bc4/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=1804131b6da1765678c1b6881dcd1b4f4ca00bc4", "patch": "@@ -696,7 +696,8 @@ pub fn trans_instance<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>, instance: Instance\n \n     let fcx = FunctionContext::new(ccx, lldecl, fn_ty, Some((instance, &sig, abi)), true);\n \n-    mir::trans_mir(&fcx, ccx.tcx().item_mir(instance.def));\n+    let mir = ccx.tcx().item_mir(instance.def);\n+    mir::trans_mir(&fcx, &mir);\n }\n \n pub fn trans_ctor_shim<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>,"}, {"sha": "0f20ed285b60e6ba747a4b801ac8f36cb130627d", "filename": "src/librustc_trans/debuginfo/create_scope_map.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1804131b6da1765678c1b6881dcd1b4f4ca00bc4/src%2Flibrustc_trans%2Fdebuginfo%2Fcreate_scope_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1804131b6da1765678c1b6881dcd1b4f4ca00bc4/src%2Flibrustc_trans%2Fdebuginfo%2Fcreate_scope_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fcreate_scope_map.rs?ref=1804131b6da1765678c1b6881dcd1b4f4ca00bc4", "patch": "@@ -19,7 +19,6 @@ use rustc::mir::{Mir, VisibilityScope};\n \n use libc::c_uint;\n use std::ptr;\n-use std::cell::Ref;\n \n use syntax_pos::Pos;\n \n@@ -47,7 +46,7 @@ impl MirDebugScope {\n /// If debuginfo is disabled, the returned vector is empty.\n pub fn create_mir_scopes<'tcx>(\n     fcx: &FunctionContext,\n-    mir: Ref<'tcx, Mir<'tcx>>,\n+    mir: &'tcx Mir<'tcx>,\n ) -> IndexVec<VisibilityScope, MirDebugScope> {\n     let null_scope = MirDebugScope {\n         scope_metadata: ptr::null_mut(),"}, {"sha": "4d78170f845aa7e22e06cbad392e70d7ccebe342", "filename": "src/librustc_trans/mir/block.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1804131b6da1765678c1b6881dcd1b4f4ca00bc4/src%2Flibrustc_trans%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1804131b6da1765678c1b6881dcd1b4f4ca00bc4/src%2Flibrustc_trans%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fblock.rs?ref=1804131b6da1765678c1b6881dcd1b4f4ca00bc4", "patch": "@@ -38,14 +38,13 @@ use super::lvalue::{LvalueRef};\n use super::operand::OperandRef;\n use super::operand::OperandValue::{Pair, Ref, Immediate};\n \n-use std::cell::Ref as CellRef;\n use std::ptr;\n \n impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n     pub fn trans_block(&mut self, bb: mir::BasicBlock,\n         funclets: &IndexVec<mir::BasicBlock, Option<Funclet>>) {\n         let mut bcx = self.build_block(bb);\n-        let data = &CellRef::clone(&self.mir)[bb];\n+        let data = &self.mir[bb];\n \n         debug!(\"trans_block({:?}={:?})\", bb, data);\n "}, {"sha": "158e14c17aa60f6d2deca220078941e259d6e877", "filename": "src/librustc_trans/mir/mod.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1804131b6da1765678c1b6881dcd1b4f4ca00bc4/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1804131b6da1765678c1b6881dcd1b4f4ca00bc4/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fmod.rs?ref=1804131b6da1765678c1b6881dcd1b4f4ca00bc4", "patch": "@@ -24,7 +24,6 @@ use type_of;\n use syntax_pos::{DUMMY_SP, NO_EXPANSION, COMMAND_LINE_EXPN, BytePos, Span};\n use syntax::symbol::keywords;\n \n-use std::cell::Ref;\n use std::iter;\n \n use basic_block::BasicBlock;\n@@ -41,7 +40,7 @@ use self::operand::{OperandRef, OperandValue};\n \n /// Master context for translating MIR.\n pub struct MirContext<'bcx, 'tcx:'bcx> {\n-    mir: Ref<'tcx, mir::Mir<'tcx>>,\n+    mir: &'bcx mir::Mir<'tcx>,\n \n     /// Function context\n     fcx: &'bcx common::FunctionContext<'bcx, 'tcx>,\n@@ -179,10 +178,7 @@ impl<'tcx> LocalRef<'tcx> {\n \n ///////////////////////////////////////////////////////////////////////////\n \n-pub fn trans_mir<'blk, 'tcx: 'blk>(\n-    fcx: &'blk FunctionContext<'blk, 'tcx>,\n-    mir: Ref<'tcx, Mir<'tcx>>\n-) {\n+pub fn trans_mir<'blk, 'tcx: 'blk>(fcx: &'blk FunctionContext<'blk, 'tcx>, mir: &'blk Mir<'tcx>) {\n     let bcx = fcx.get_entry_block();\n \n     // Analyze the temps to determine which must be lvalues\n@@ -201,10 +197,10 @@ pub fn trans_mir<'blk, 'tcx: 'blk>(\n         }).collect();\n \n     // Compute debuginfo scopes from MIR scopes.\n-    let scopes = debuginfo::create_mir_scopes(fcx, Ref::clone(&mir));\n+    let scopes = debuginfo::create_mir_scopes(fcx, mir);\n \n     let mut mircx = MirContext {\n-        mir: Ref::clone(&mir),\n+        mir: mir,\n         fcx: fcx,\n         llpersonalityslot: None,\n         blocks: block_bcxs,"}]}