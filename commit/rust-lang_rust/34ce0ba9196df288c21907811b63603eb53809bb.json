{"sha": "34ce0ba9196df288c21907811b63603eb53809bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0Y2UwYmE5MTk2ZGYyODhjMjE5MDc4MTFiNjM2MDNlYjUzODA5YmI=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-12-11T18:26:06Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-12-13T18:39:15Z"}, "message": "Use better name for local containing required feature gates", "tree": {"sha": "73f8ebfa28c1196a84cb55ba019edba28b08a682", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73f8ebfa28c1196a84cb55ba019edba28b08a682"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34ce0ba9196df288c21907811b63603eb53809bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34ce0ba9196df288c21907811b63603eb53809bb", "html_url": "https://github.com/rust-lang/rust/commit/34ce0ba9196df288c21907811b63603eb53809bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34ce0ba9196df288c21907811b63603eb53809bb/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80581be2c00ae9c9b24dea1c5a1465f6863564f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/80581be2c00ae9c9b24dea1c5a1465f6863564f3", "html_url": "https://github.com/rust-lang/rust/commit/80581be2c00ae9c9b24dea1c5a1465f6863564f3"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "725a742382e02d9e5466fbfabcc595ab4f86cd2f", "filename": "src/librustc_passes/check_const.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/34ce0ba9196df288c21907811b63603eb53809bb/src%2Flibrustc_passes%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34ce0ba9196df288c21907811b63603eb53809bb/src%2Flibrustc_passes%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fcheck_const.rs?ref=34ce0ba9196df288c21907811b63603eb53809bb", "patch": "@@ -134,8 +134,8 @@ impl<'tcx> CheckConstVisitor<'tcx> {\n     /// Emits an error when an unsupported expression is found in a const context.\n     fn const_check_violated(&self, expr: NonConstExpr, span: Span) {\n         let features = self.tcx.features();\n-        let gates = expr.required_feature_gates();\n-        match gates {\n+        let required_gates = expr.required_feature_gates();\n+        match required_gates {\n             // Don't emit an error if the user has enabled the requisite feature gates.\n             Some(gates) if gates.iter().all(|&g| features.enabled(g)) => return,\n \n@@ -154,8 +154,8 @@ impl<'tcx> CheckConstVisitor<'tcx> {\n             .expect(\"`const_check_violated` may only be called inside a const context\");\n         let msg = format!(\"`{}` is not allowed in a `{}`\", expr.name(), const_kind);\n \n-        let gates = gates.unwrap_or(&[]);\n-        let missing_gates: Vec<_> = gates\n+        let required_gates = required_gates.unwrap_or(&[]);\n+        let missing_gates: Vec<_> = required_gates\n             .iter()\n             .copied()\n             .filter(|&g| !features.enabled(g))\n@@ -166,7 +166,7 @@ impl<'tcx> CheckConstVisitor<'tcx> {\n \n             // If the user enabled `#![feature(const_loop)]` but not `#![feature(const_if_match)]`,\n             // explain why their `while` loop is being rejected.\n-            &[gate @ sym::const_if_match] if gates.contains(&sym::const_loop) => {\n+            &[gate @ sym::const_if_match] if required_gates.contains(&sym::const_loop) => {\n                 feature_err(&self.tcx.sess.parse_sess, gate, span, &msg)\n                     .note(\"`#![feature(const_loop)]` alone is not sufficient, \\\n                            since this loop expression contains an implicit conditional\")"}]}