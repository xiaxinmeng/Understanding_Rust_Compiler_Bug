{"sha": "de2940ff6301f23fd721e0d6f38b23ae2e3a9746", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlMjk0MGZmNjMwMWYyM2ZkNzIxZTBkNmYzOGIyM2FlMmUzYTk3NDY=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2020-11-06T01:46:03Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2020-11-06T02:16:56Z"}, "message": "rustc_expand: use collect_bang helper instead of manual reimplementation", "tree": {"sha": "f7d763dc15f6ad0a74e00d9e77f4878ae76a863d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7d763dc15f6ad0a74e00d9e77f4878ae76a863d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de2940ff6301f23fd721e0d6f38b23ae2e3a9746", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de2940ff6301f23fd721e0d6f38b23ae2e3a9746", "html_url": "https://github.com/rust-lang/rust/commit/de2940ff6301f23fd721e0d6f38b23ae2e3a9746", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de2940ff6301f23fd721e0d6f38b23ae2e3a9746/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7801d6c7cc19ab22bdebcc8efa894a564c53469", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7801d6c7cc19ab22bdebcc8efa894a564c53469", "html_url": "https://github.com/rust-lang/rust/commit/f7801d6c7cc19ab22bdebcc8efa894a564c53469"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "f6959591b56602b2bf52959b048166f97b1056a1", "filename": "compiler/rustc_expand/src/expand.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/de2940ff6301f23fd721e0d6f38b23ae2e3a9746/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de2940ff6301f23fd721e0d6f38b23ae2e3a9746/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs?ref=de2940ff6301f23fd721e0d6f38b23ae2e3a9746", "patch": "@@ -1436,9 +1436,9 @@ impl<'a, 'b> MutVisitor for InvocationCollector<'a, 'b> {\n                 item.attrs = attrs;\n                 self.check_attributes(&item.attrs);\n                 item.and_then(|item| match item.kind {\n-                    ItemKind::MacCall(mac) => self\n-                        .collect(AstFragmentKind::Items, InvocationKind::Bang { mac, span })\n-                        .make_items(),\n+                    ItemKind::MacCall(mac) => {\n+                        self.collect_bang(mac, span, AstFragmentKind::Items).make_items()\n+                    }\n                     _ => unreachable!(),\n                 })\n             }"}]}