{"sha": "7179be87899ff7730abccca598e987544132ca67", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxNzliZTg3ODk5ZmY3NzMwYWJjY2NhNTk4ZTk4NzU0NDEzMmNhNjc=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2021-02-14T13:56:35Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2021-02-20T22:19:30Z"}, "message": "Don't apply semicolon in expressions from macros yet\n\nstd_detect is still using this and as it's in a submodule updating it will be a\npain. We can catch this either after a stdarch submodule bump or just on the\nnext cycle.", "tree": {"sha": "158bb875acd4895c6a5daf9130bf5846d78d3abc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/158bb875acd4895c6a5daf9130bf5846d78d3abc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7179be87899ff7730abccca598e987544132ca67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7179be87899ff7730abccca598e987544132ca67", "html_url": "https://github.com/rust-lang/rust/commit/7179be87899ff7730abccca598e987544132ca67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7179be87899ff7730abccca598e987544132ca67/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37332758543182005740e8e6ef2312bbc82576b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/37332758543182005740e8e6ef2312bbc82576b6", "html_url": "https://github.com/rust-lang/rust/commit/37332758543182005740e8e6ef2312bbc82576b6"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "a438e920b7bc600978c667c3217e8353cb978989", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7179be87899ff7730abccca598e987544132ca67/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/7179be87899ff7730abccca598e987544132ca67/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=7179be87899ff7730abccca598e987544132ca67", "patch": "@@ -877,7 +877,8 @@ def build_bootstrap(self):\n         target_linker = self.get_toml(\"linker\", build_section)\n         if target_linker is not None:\n             env[\"RUSTFLAGS\"] += \" -C linker=\" + target_linker\n-        env[\"RUSTFLAGS\"] += \" -Wrust_2018_idioms -Wunused_lifetimes -Wsemicolon_in_expressions_from_macros\"\n+        # cfg(bootstrap): Add `-Wsemicolon_in_expressions_from_macros` after the next beta bump\n+        env[\"RUSTFLAGS\"] += \" -Wrust_2018_idioms -Wunused_lifetimes\"\n         if self.get_toml(\"deny-warnings\", \"rust\") != \"false\":\n             env[\"RUSTFLAGS\"] += \" -Dwarnings\"\n "}, {"sha": "a9099981e644a83f425a65dfd65622e6f4dd9319", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7179be87899ff7730abccca598e987544132ca67/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7179be87899ff7730abccca598e987544132ca67/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=7179be87899ff7730abccca598e987544132ca67", "patch": "@@ -1279,7 +1279,12 @@ impl<'a> Builder<'a> {\n             // some code doesn't go through this `rustc` wrapper.\n             lint_flags.push(\"-Wrust_2018_idioms\");\n             lint_flags.push(\"-Wunused_lifetimes\");\n-            lint_flags.push(\"-Wsemicolon_in_expressions_from_macros\");\n+            // cfg(bootstrap): unconditionally enable this warning after the next beta bump\n+            // This is currently disabled for the stage1 libstd, since build scripts\n+            // will end up using the bootstrap compiler (which doesn't yet support this lint)\n+            if compiler.stage != 0 && mode != Mode::Std {\n+                lint_flags.push(\"-Wsemicolon_in_expressions_from_macros\");\n+            }\n \n             if self.config.deny_warnings {\n                 lint_flags.push(\"-Dwarnings\");"}]}