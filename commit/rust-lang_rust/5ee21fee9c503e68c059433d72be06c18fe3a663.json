{"sha": "5ee21fee9c503e68c059433d72be06c18fe3a663", "node_id": "C_kwDOAAsO6NoAKDVlZTIxZmVlOWM1MDNlNjhjMDU5NDMzZDcyYmUwNmMxOGZlM2E2NjM", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-02-01T12:35:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-01T12:35:52Z"}, "message": "Merge #11391\n\n11391: minor: Add some debug traces for cfg fetching r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "e622cec88fb39c0cfd9a718382d45dd162ae318e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e622cec88fb39c0cfd9a718382d45dd162ae318e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ee21fee9c503e68c059433d72be06c18fe3a663", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh+SkoCRBK7hj4Ov3rIwAAdXQIAEgWSvPwBj/KBpZpY/QpVUA1\nmVDzqPSxHn0t/OdmIf8vepsU8JXIpr6Gk5Jmm9+C2ikSOwy3R72tTvABBdwVk+Pz\n9k90/mLyHT80XOiP1hc8C01y5JYmTKWQsgxbhHWixIYlcg3KWvWKPqrTAknAYAbQ\nSpK6Z8WnFOdLwUrJ4xvc7s0lII4ElGuWzZYcNzmqFs+coS8nqfYii6MS/VEOJWJe\nkDKEInN+qqDjbCKj8l6dcb2jJd1r9Ye9HyJZU/zZeJ+RQhtMmFigFQe7itUFrXW2\n3Y9pa7dTJgWFCmVYAK00EcxDR+Nc2bM6r8sjOB9cqEuVuLrGMEI9aQYaQMDFYvI=\n=JU92\n-----END PGP SIGNATURE-----\n", "payload": "tree e622cec88fb39c0cfd9a718382d45dd162ae318e\nparent 9b88956bd574b9c1d180cb5851f349c5af809d23\nparent dbd5a70ea3b806c94fcbb37bb68decf63a9fe968\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1643718952 +0000\ncommitter GitHub <noreply@github.com> 1643718952 +0000\n\nMerge #11391\n\n11391: minor: Add some debug traces for cfg fetching r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ee21fee9c503e68c059433d72be06c18fe3a663", "html_url": "https://github.com/rust-lang/rust/commit/5ee21fee9c503e68c059433d72be06c18fe3a663", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ee21fee9c503e68c059433d72be06c18fe3a663/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b88956bd574b9c1d180cb5851f349c5af809d23", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b88956bd574b9c1d180cb5851f349c5af809d23", "html_url": "https://github.com/rust-lang/rust/commit/9b88956bd574b9c1d180cb5851f349c5af809d23"}, {"sha": "dbd5a70ea3b806c94fcbb37bb68decf63a9fe968", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbd5a70ea3b806c94fcbb37bb68decf63a9fe968", "html_url": "https://github.com/rust-lang/rust/commit/dbd5a70ea3b806c94fcbb37bb68decf63a9fe968"}], "stats": {"total": 69, "additions": 43, "deletions": 26}, "files": [{"sha": "f3dd8f51333be447b350e4baf402c0272c7e15b7", "filename": "crates/project_model/src/cfg_flag.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5ee21fee9c503e68c059433d72be06c18fe3a663/crates%2Fproject_model%2Fsrc%2Fcfg_flag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ee21fee9c503e68c059433d72be06c18fe3a663/crates%2Fproject_model%2Fsrc%2Fcfg_flag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fcfg_flag.rs?ref=5ee21fee9c503e68c059433d72be06c18fe3a663", "patch": "@@ -1,7 +1,7 @@\n //! Parsing of CfgFlags as command line arguments, as in\n //!\n //! rustc main.rs --cfg foo --cfg 'feature=\"bar\"'\n-use std::str::FromStr;\n+use std::{fmt, str::FromStr};\n \n use cfg::CfgOptions;\n \n@@ -48,3 +48,16 @@ impl Extend<CfgFlag> for CfgOptions {\n         }\n     }\n }\n+\n+impl fmt::Display for CfgFlag {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        match self {\n+            CfgFlag::Atom(atom) => f.write_str(atom),\n+            CfgFlag::KeyValue { key, value } => {\n+                f.write_str(key)?;\n+                f.write_str(\"=\")?;\n+                f.write_str(value)\n+            }\n+        }\n+    }\n+}"}, {"sha": "17e244d0649eddf073a9bf65e39fade35226ae4f", "filename": "crates/project_model/src/rustc_cfg.rs", "status": "modified", "additions": 29, "deletions": 25, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/5ee21fee9c503e68c059433d72be06c18fe3a663/crates%2Fproject_model%2Fsrc%2Frustc_cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ee21fee9c503e68c059433d72be06c18fe3a663/crates%2Fproject_model%2Fsrc%2Frustc_cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Frustc_cfg.rs?ref=5ee21fee9c503e68c059433d72be06c18fe3a663", "patch": "@@ -19,38 +19,42 @@ pub(crate) fn get(cargo_toml: Option<&ManifestPath>, target: Option<&str>) -> Ve\n     }\n \n     match get_rust_cfgs(cargo_toml, target) {\n-        Ok(rustc_cfgs) => res.extend(rustc_cfgs.lines().map(|it| it.parse().unwrap())),\n-        Err(e) => tracing::error!(\"failed to get rustc cfgs: {:#}\", e),\n+        Ok(rustc_cfgs) => {\n+            tracing::debug!(\n+                \"rustc cfgs found: {:?}\",\n+                rustc_cfgs\n+                    .lines()\n+                    .map(|it| it.parse::<CfgFlag>().map(|it| it.to_string()))\n+                    .collect::<Vec<_>>()\n+            );\n+            res.extend(rustc_cfgs.lines().filter_map(|it| it.parse().ok()));\n+        }\n+        Err(e) => tracing::error!(\"failed to get rustc cfgs: {e:?}\"),\n     }\n \n     res\n }\n \n fn get_rust_cfgs(cargo_toml: Option<&ManifestPath>, target: Option<&str>) -> Result<String> {\n-    let cargo_rust_cfgs = match cargo_toml {\n-        Some(cargo_toml) => {\n-            let mut cargo_config = Command::new(toolchain::cargo());\n-            cargo_config\n-                .current_dir(cargo_toml.parent())\n-                .args(&[\"-Z\", \"unstable-options\", \"rustc\", \"--print\", \"cfg\"])\n-                .env(\"RUSTC_BOOTSTRAP\", \"1\");\n-            if let Some(target) = target {\n-                cargo_config.args(&[\"--target\", target]);\n-            }\n-            utf8_stdout(cargo_config).ok()\n+    if let Some(cargo_toml) = cargo_toml {\n+        let mut cargo_config = Command::new(toolchain::cargo());\n+        cargo_config\n+            .current_dir(cargo_toml.parent())\n+            .args(&[\"-Z\", \"unstable-options\", \"rustc\", \"--print\", \"cfg\"])\n+            .env(\"RUSTC_BOOTSTRAP\", \"1\");\n+        if let Some(target) = target {\n+            cargo_config.args(&[\"--target\", target]);\n         }\n-        None => None,\n-    };\n-    match cargo_rust_cfgs {\n-        Some(stdout) => Ok(stdout),\n-        None => {\n-            // using unstable cargo features failed, fall back to using plain rustc\n-            let mut cmd = Command::new(toolchain::rustc());\n-            cmd.args(&[\"--print\", \"cfg\", \"-O\"]);\n-            if let Some(target) = target {\n-                cmd.args(&[\"--target\", target]);\n-            }\n-            utf8_stdout(cmd)\n+        match utf8_stdout(cargo_config) {\n+            Ok(it) => return Ok(it),\n+            Err(e) => tracing::debug!(\"{e:?}: falling back to querying rustc for cfgs\"),\n         }\n     }\n+    // using unstable cargo features failed, fall back to using plain rustc\n+    let mut cmd = Command::new(toolchain::rustc());\n+    cmd.args(&[\"--print\", \"cfg\", \"-O\"]);\n+    if let Some(target) = target {\n+        cmd.args(&[\"--target\", target]);\n+    }\n+    utf8_stdout(cmd)\n }"}]}