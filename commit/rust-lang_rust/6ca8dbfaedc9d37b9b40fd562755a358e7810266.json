{"sha": "6ca8dbfaedc9d37b9b40fd562755a358e7810266", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjYThkYmZhZWRjOWQzN2I5YjQwZmQ1NjI3NTVhMzU4ZTc4MTAyNjY=", "commit": {"author": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-16T22:40:20Z"}, "committer": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-16T22:40:20Z"}, "message": "Make a new compatible_borrow_kinds helper function\n\nMove the `incompatible` helper function from analyze_restrictions_on_use\nto the file scope and invert its meaning to account for future uses.", "tree": {"sha": "4c7348982e768bd2b67d9fdd93a69c610249831b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c7348982e768bd2b67d9fdd93a69c610249831b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ca8dbfaedc9d37b9b40fd562755a358e7810266", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ca8dbfaedc9d37b9b40fd562755a358e7810266", "html_url": "https://github.com/rust-lang/rust/commit/6ca8dbfaedc9d37b9b40fd562755a358e7810266", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ca8dbfaedc9d37b9b40fd562755a358e7810266/comments", "author": null, "committer": null, "parents": [{"sha": "d2ca7465aa0b589b9a3e84423f5073da33bf0bb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2ca7465aa0b589b9a3e84423f5073da33bf0bb3", "html_url": "https://github.com/rust-lang/rust/commit/d2ca7465aa0b589b9a3e84423f5073da33bf0bb3"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "9061d2d38d3b0f4ac8f2c84aeda08e7d83e50bd7", "filename": "src/librustc/middle/borrowck/check_loans.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6ca8dbfaedc9d37b9b40fd562755a358e7810266/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ca8dbfaedc9d37b9b40fd562755a358e7810266/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs?ref=6ca8dbfaedc9d37b9b40fd562755a358e7810266", "patch": "@@ -155,6 +155,12 @@ enum UseError {\n     UseWhileBorrowed(/*loan*/Rc<LoanPath>, /*loan*/Span)\n }\n \n+fn compatible_borrow_kinds(borrow_kind1: ty::BorrowKind,\n+                           borrow_kind2: ty::BorrowKind)\n+                           -> bool {\n+    borrow_kind1 == ty::ImmBorrow && borrow_kind2 == ty::ImmBorrow\n+}\n+\n impl<'a> CheckLoanCtxt<'a> {\n     pub fn tcx(&self) -> &'a ty::ctxt { self.bccx.tcx }\n \n@@ -542,7 +548,7 @@ impl<'a> CheckLoanCtxt<'a> {\n         //     let y = a;          // Conflicts with restriction\n \n         self.each_in_scope_restriction(expr_id, use_path, |loan| {\n-            if incompatible(loan.kind, borrow_kind) {\n+            if !compatible_borrow_kinds(loan.kind, borrow_kind) {\n                 ret = UseWhileBorrowed(loan.loan_path.clone(), loan.span);\n                 false\n             } else {\n@@ -566,7 +572,7 @@ impl<'a> CheckLoanCtxt<'a> {\n         loop {\n             self.each_in_scope_loan(expr_id, |loan| {\n                 if *loan.loan_path == *loan_path &&\n-                   incompatible(loan.kind, borrow_kind) {\n+                   !compatible_borrow_kinds(loan.kind, borrow_kind) {\n                     ret = UseWhileBorrowed(loan.loan_path.clone(), loan.span);\n                     false\n                 } else {\n@@ -585,12 +591,6 @@ impl<'a> CheckLoanCtxt<'a> {\n         }\n \n         return ret;\n-\n-        fn incompatible(borrow_kind1: ty::BorrowKind,\n-                        borrow_kind2: ty::BorrowKind)\n-                        -> bool {\n-            borrow_kind1 != ty::ImmBorrow || borrow_kind2 != ty::ImmBorrow\n-        }\n     }\n \n     fn check_if_path_is_moved(&self,"}]}