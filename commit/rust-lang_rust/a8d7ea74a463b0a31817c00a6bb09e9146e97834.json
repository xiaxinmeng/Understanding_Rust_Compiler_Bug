{"sha": "a8d7ea74a463b0a31817c00a6bb09e9146e97834", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4ZDdlYTc0YTQ2M2IwYTMxODE3YzAwYTZiYjA5ZTkxNDZlOTc4MzQ=", "commit": {"author": {"name": "Artem Varaksa", "email": "aymfst@gmail.com", "date": "2019-08-21T10:17:59Z"}, "committer": {"name": "Artem Varaksa", "email": "aymfst@gmail.com", "date": "2019-08-21T10:17:59Z"}, "message": "improve diagnostics: break/continue wrong context", "tree": {"sha": "21a0f265f1f8edfee7cdcc70e7c1ca211920b4b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21a0f265f1f8edfee7cdcc70e7c1ca211920b4b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8d7ea74a463b0a31817c00a6bb09e9146e97834", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8d7ea74a463b0a31817c00a6bb09e9146e97834", "html_url": "https://github.com/rust-lang/rust/commit/a8d7ea74a463b0a31817c00a6bb09e9146e97834", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8d7ea74a463b0a31817c00a6bb09e9146e97834/comments", "author": {"login": "u32i64", "id": 19972511, "node_id": "MDQ6VXNlcjE5OTcyNTEx", "avatar_url": "https://avatars.githubusercontent.com/u/19972511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/u32i64", "html_url": "https://github.com/u32i64", "followers_url": "https://api.github.com/users/u32i64/followers", "following_url": "https://api.github.com/users/u32i64/following{/other_user}", "gists_url": "https://api.github.com/users/u32i64/gists{/gist_id}", "starred_url": "https://api.github.com/users/u32i64/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/u32i64/subscriptions", "organizations_url": "https://api.github.com/users/u32i64/orgs", "repos_url": "https://api.github.com/users/u32i64/repos", "events_url": "https://api.github.com/users/u32i64/events{/privacy}", "received_events_url": "https://api.github.com/users/u32i64/received_events", "type": "User", "site_admin": false}, "committer": {"login": "u32i64", "id": 19972511, "node_id": "MDQ6VXNlcjE5OTcyNTEx", "avatar_url": "https://avatars.githubusercontent.com/u/19972511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/u32i64", "html_url": "https://github.com/u32i64", "followers_url": "https://api.github.com/users/u32i64/followers", "following_url": "https://api.github.com/users/u32i64/following{/other_user}", "gists_url": "https://api.github.com/users/u32i64/gists{/gist_id}", "starred_url": "https://api.github.com/users/u32i64/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/u32i64/subscriptions", "organizations_url": "https://api.github.com/users/u32i64/orgs", "repos_url": "https://api.github.com/users/u32i64/repos", "events_url": "https://api.github.com/users/u32i64/events{/privacy}", "received_events_url": "https://api.github.com/users/u32i64/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bea0372a1a7a31b81f28cc4d9a83a2dc9a79d008", "url": "https://api.github.com/repos/rust-lang/rust/commits/bea0372a1a7a31b81f28cc4d9a83a2dc9a79d008", "html_url": "https://github.com/rust-lang/rust/commit/bea0372a1a7a31b81f28cc4d9a83a2dc9a79d008"}], "stats": {"total": 132, "additions": 73, "deletions": 59}, "files": [{"sha": "a30cd8a627fe3e32d0e67a3dbd4e8296b236c86c", "filename": "src/librustc_passes/error_codes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8d7ea74a463b0a31817c00a6bb09e9146e97834/src%2Flibrustc_passes%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8d7ea74a463b0a31817c00a6bb09e9146e97834/src%2Flibrustc_passes%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Ferror_codes.rs?ref=a8d7ea74a463b0a31817c00a6bb09e9146e97834", "patch": "@@ -131,7 +131,7 @@ be taken. Erroneous code example:\n \n ```compile_fail,E0268\n fn some_func() {\n-    break; // error: `break` outside of loop\n+    break; // error: `break` outside of a loop\n }\n ```\n "}, {"sha": "4549ac8c668c57e144c8095e75536fcfd127ab4b", "filename": "src/librustc_passes/loops.rs", "status": "modified", "additions": 18, "deletions": 19, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/a8d7ea74a463b0a31817c00a6bb09e9146e97834/src%2Flibrustc_passes%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8d7ea74a463b0a31817c00a6bb09e9146e97834/src%2Flibrustc_passes%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Floops.rs?ref=a8d7ea74a463b0a31817c00a6bb09e9146e97834", "patch": "@@ -16,8 +16,8 @@ use errors::Applicability;\n enum Context {\n     Normal,\n     Loop(hir::LoopSource),\n-    Closure,\n-    AsyncClosure,\n+    Closure(Span),\n+    AsyncClosure(Span),\n     LabeledBlock,\n     AnonConst,\n }\n@@ -58,11 +58,11 @@ impl<'a, 'hir> Visitor<'hir> for CheckLoopVisitor<'a, 'hir> {\n             hir::ExprKind::Loop(ref b, _, source) => {\n                 self.with_context(Loop(source), |v| v.visit_block(&b));\n             }\n-            hir::ExprKind::Closure(_, ref function_decl, b, _, movability) => {\n+            hir::ExprKind::Closure(_, ref function_decl, b, span, movability) => {\n                 let cx = if let Some(GeneratorMovability::Static) = movability {\n-                    AsyncClosure\n+                    AsyncClosure(span)\n                 } else {\n-                    Closure\n+                    Closure(span)\n                 };\n                 self.visit_fn_decl(&function_decl);\n                 self.with_context(cx, |v| v.visit_nested_body(b));\n@@ -170,23 +170,22 @@ impl<'a, 'hir> CheckLoopVisitor<'a, 'hir> {\n     }\n \n     fn require_break_cx(&self, name: &str, span: Span) {\n-        match self.cx {\n-            LabeledBlock | Loop(_) => {}\n-            Closure => {\n-                struct_span_err!(self.sess, span, E0267, \"`{}` inside of a closure\", name)\n-                .span_label(span, \"cannot break inside of a closure\")\n+        let err_inside_of = |article, r#type, closure_span| {\n+            struct_span_err!(self.sess, span, E0267, \"`{}` inside of {} {}\", name, article, r#type)\n+                .span_label(span, format!(\"cannot `{}` inside of {} {}\", name, article, r#type))\n+                .span_label(closure_span, &format!(\"enclosing {}\", r#type))\n                 .emit();\n-            }\n-            AsyncClosure => {\n-                struct_span_err!(self.sess, span, E0267, \"`{}` inside of an async block\", name)\n-                    .span_label(span, \"cannot break inside of an async block\")\n-                    .emit();\n-            }\n+        };\n+\n+        match self.cx {\n+            LabeledBlock | Loop(_) => {},\n+            Closure(closure_span) => err_inside_of(\"a\", \"closure\", closure_span),\n+            AsyncClosure(closure_span) => err_inside_of(\"an\", \"`async` block\", closure_span),\n             Normal | AnonConst => {\n-                struct_span_err!(self.sess, span, E0268, \"`{}` outside of loop\", name)\n-                .span_label(span, \"cannot break outside of a loop\")\n+                struct_span_err!(self.sess, span, E0268, \"`{}` outside of a loop\", name)\n+                .span_label(span, format!(\"cannot `{}` outside of a loop\", name))\n                 .emit();\n-            }\n+            },\n         }\n     }\n "}, {"sha": "45f529bafe7286889592c8fb6d4339e21fdaea38", "filename": "src/test/ui/array-break-length.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a8d7ea74a463b0a31817c00a6bb09e9146e97834/src%2Ftest%2Fui%2Farray-break-length.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8d7ea74a463b0a31817c00a6bb09e9146e97834/src%2Ftest%2Fui%2Farray-break-length.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Farray-break-length.stderr?ref=a8d7ea74a463b0a31817c00a6bb09e9146e97834", "patch": "@@ -1,14 +1,14 @@\n-error[E0268]: `break` outside of loop\n+error[E0268]: `break` outside of a loop\n   --> $DIR/array-break-length.rs:3:17\n    |\n LL |         |_: [_; break]| {}\n-   |                 ^^^^^ cannot break outside of a loop\n+   |                 ^^^^^ cannot `break` outside of a loop\n \n-error[E0268]: `continue` outside of loop\n+error[E0268]: `continue` outside of a loop\n   --> $DIR/array-break-length.rs:8:17\n    |\n LL |         |_: [_; continue]| {}\n-   |                 ^^^^^^^^ cannot break outside of a loop\n+   |                 ^^^^^^^^ cannot `continue` outside of a loop\n \n error[E0308]: mismatched types\n   --> $DIR/array-break-length.rs:3:9"}, {"sha": "b33c8afe6b86469ec3b01fd0e096d2bc88705ecc", "filename": "src/test/ui/async-await/async-block-control-flow-static-semantics.stderr", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a8d7ea74a463b0a31817c00a6bb09e9146e97834/src%2Ftest%2Fui%2Fasync-await%2Fasync-block-control-flow-static-semantics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8d7ea74a463b0a31817c00a6bb09e9146e97834/src%2Ftest%2Fui%2Fasync-await%2Fasync-block-control-flow-static-semantics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-block-control-flow-static-semantics.stderr?ref=a8d7ea74a463b0a31817c00a6bb09e9146e97834", "patch": "@@ -1,14 +1,22 @@\n error[E0267]: `break` inside of an async block\n   --> $DIR/async-block-control-flow-static-semantics.rs:33:9\n    |\n-LL |         break 0u8;\n-   |         ^^^^^^^^^ cannot break inside of an async block\n+LL |       async {\n+   |  ___________-\n+LL | |         break 0u8;\n+   | |         ^^^^^^^^^ cannot `break` inside of an `async` block\n+LL | |     };\n+   | |_____- enclosing `async` block\n \n error[E0267]: `break` inside of an async block\n   --> $DIR/async-block-control-flow-static-semantics.rs:40:13\n    |\n-LL |             break 0u8;\n-   |             ^^^^^^^^^ cannot break inside of an async block\n+LL |           async {\n+   |  _______________-\n+LL | |             break 0u8;\n+   | |             ^^^^^^^^^ cannot `break` inside of an `async` block\n+LL | |         };\n+   | |_________- enclosing `async` block\n \n error[E0308]: mismatched types\n   --> $DIR/async-block-control-flow-static-semantics.rs:13:43"}, {"sha": "8b686356055a34bef3b4abad3ecad33e9af76a8c", "filename": "src/test/ui/break-outside-loop.stderr", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a8d7ea74a463b0a31817c00a6bb09e9146e97834/src%2Ftest%2Fui%2Fbreak-outside-loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8d7ea74a463b0a31817c00a6bb09e9146e97834/src%2Ftest%2Fui%2Fbreak-outside-loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbreak-outside-loop.stderr?ref=a8d7ea74a463b0a31817c00a6bb09e9146e97834", "patch": "@@ -1,32 +1,37 @@\n-error[E0268]: `break` outside of loop\n+error[E0268]: `break` outside of a loop\n   --> $DIR/break-outside-loop.rs:10:15\n    |\n LL |     let pth = break;\n-   |               ^^^^^ cannot break outside of a loop\n+   |               ^^^^^ cannot `break` outside of a loop\n \n-error[E0268]: `continue` outside of loop\n+error[E0268]: `continue` outside of a loop\n   --> $DIR/break-outside-loop.rs:11:17\n    |\n LL |     if cond() { continue }\n-   |                 ^^^^^^^^ cannot break outside of a loop\n+   |                 ^^^^^^^^ cannot `continue` outside of a loop\n \n error[E0267]: `break` inside of a closure\n   --> $DIR/break-outside-loop.rs:17:25\n    |\n+LL |         foo(|| {\n+   |             -- enclosing closure\n LL |             if cond() { break }\n-   |                         ^^^^^ cannot break inside of a closure\n+   |                         ^^^^^ cannot `break` inside of a closure\n \n error[E0267]: `continue` inside of a closure\n   --> $DIR/break-outside-loop.rs:18:25\n    |\n+LL |         foo(|| {\n+   |             -- enclosing closure\n+LL |             if cond() { break }\n LL |             if cond() { continue }\n-   |                         ^^^^^^^^ cannot break inside of a closure\n+   |                         ^^^^^^^^ cannot `continue` inside of a closure\n \n-error[E0268]: `break` outside of loop\n+error[E0268]: `break` outside of a loop\n   --> $DIR/break-outside-loop.rs:24:25\n    |\n LL |     let unconstrained = break;\n-   |                         ^^^^^ cannot break outside of a loop\n+   |                         ^^^^^ cannot `break` outside of a loop\n \n error: aborting due to 5 previous errors\n "}, {"sha": "18da4a94e6f05853d794fe555adf6b88196c98c9", "filename": "src/test/ui/closures/closure-array-break-length.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a8d7ea74a463b0a31817c00a6bb09e9146e97834/src%2Ftest%2Fui%2Fclosures%2Fclosure-array-break-length.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8d7ea74a463b0a31817c00a6bb09e9146e97834/src%2Ftest%2Fui%2Fclosures%2Fclosure-array-break-length.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-array-break-length.stderr?ref=a8d7ea74a463b0a31817c00a6bb09e9146e97834", "patch": "@@ -1,20 +1,20 @@\n-error[E0268]: `continue` outside of loop\n+error[E0268]: `continue` outside of a loop\n   --> $DIR/closure-array-break-length.rs:2:13\n    |\n LL |     |_: [_; continue]| {};\n-   |             ^^^^^^^^ cannot break outside of a loop\n+   |             ^^^^^^^^ cannot `continue` outside of a loop\n \n-error[E0268]: `continue` outside of loop\n+error[E0268]: `continue` outside of a loop\n   --> $DIR/closure-array-break-length.rs:4:19\n    |\n LL |     while |_: [_; continue]| {} {}\n-   |                   ^^^^^^^^ cannot break outside of a loop\n+   |                   ^^^^^^^^ cannot `continue` outside of a loop\n \n-error[E0268]: `break` outside of loop\n+error[E0268]: `break` outside of a loop\n   --> $DIR/closure-array-break-length.rs:7:19\n    |\n LL |     while |_: [_; break]| {} {}\n-   |                   ^^^^^ cannot break outside of a loop\n+   |                   ^^^^^ cannot `break` outside of a loop\n \n error[E0308]: mismatched types\n   --> $DIR/closure-array-break-length.rs:4:11"}, {"sha": "1f8657373efecb36fc7933a8b70213b597e2be28", "filename": "src/test/ui/error-codes/E0267.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a8d7ea74a463b0a31817c00a6bb09e9146e97834/src%2Ftest%2Fui%2Ferror-codes%2FE0267.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8d7ea74a463b0a31817c00a6bb09e9146e97834/src%2Ftest%2Fui%2Ferror-codes%2FE0267.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0267.stderr?ref=a8d7ea74a463b0a31817c00a6bb09e9146e97834", "patch": "@@ -2,7 +2,9 @@ error[E0267]: `break` inside of a closure\n   --> $DIR/E0267.rs:2:18\n    |\n LL |     let w = || { break; };\n-   |                  ^^^^^ cannot break inside of a closure\n+   |             --   ^^^^^ cannot `break` inside of a closure\n+   |             |\n+   |             enclosing closure\n \n error: aborting due to previous error\n "}, {"sha": "c926f9e4874944722b4a7a82a67c1206ef29ff01", "filename": "src/test/ui/error-codes/E0268.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a8d7ea74a463b0a31817c00a6bb09e9146e97834/src%2Ftest%2Fui%2Ferror-codes%2FE0268.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8d7ea74a463b0a31817c00a6bb09e9146e97834/src%2Ftest%2Fui%2Ferror-codes%2FE0268.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0268.stderr?ref=a8d7ea74a463b0a31817c00a6bb09e9146e97834", "patch": "@@ -1,8 +1,8 @@\n-error[E0268]: `break` outside of loop\n+error[E0268]: `break` outside of a loop\n   --> $DIR/E0268.rs:2:5\n    |\n LL |     break;\n-   |     ^^^^^ cannot break outside of a loop\n+   |     ^^^^^ cannot `break` outside of a loop\n \n error: aborting due to previous error\n "}, {"sha": "42ed838d7c0371eb8490aa43ec99231b7eee6e9f", "filename": "src/test/ui/issues/issue-28105.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a8d7ea74a463b0a31817c00a6bb09e9146e97834/src%2Ftest%2Fui%2Fissues%2Fissue-28105.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8d7ea74a463b0a31817c00a6bb09e9146e97834/src%2Ftest%2Fui%2Fissues%2Fissue-28105.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28105.stderr?ref=a8d7ea74a463b0a31817c00a6bb09e9146e97834", "patch": "@@ -1,14 +1,14 @@\n-error[E0268]: `continue` outside of loop\n+error[E0268]: `continue` outside of a loop\n   --> $DIR/issue-28105.rs:4:5\n    |\n LL |     continue\n-   |     ^^^^^^^^ cannot break outside of a loop\n+   |     ^^^^^^^^ cannot `continue` outside of a loop\n \n-error[E0268]: `break` outside of loop\n+error[E0268]: `break` outside of a loop\n   --> $DIR/issue-28105.rs:6:5\n    |\n LL |     break\n-   |     ^^^^^ cannot break outside of a loop\n+   |     ^^^^^ cannot `break` outside of a loop\n \n error: aborting due to 2 previous errors\n "}, {"sha": "c729c05ff229e2cdc3523a08593dba8d336b286f", "filename": "src/test/ui/issues/issue-43162.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a8d7ea74a463b0a31817c00a6bb09e9146e97834/src%2Ftest%2Fui%2Fissues%2Fissue-43162.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8d7ea74a463b0a31817c00a6bb09e9146e97834/src%2Ftest%2Fui%2Fissues%2Fissue-43162.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-43162.stderr?ref=a8d7ea74a463b0a31817c00a6bb09e9146e97834", "patch": "@@ -1,14 +1,14 @@\n-error[E0268]: `break` outside of loop\n+error[E0268]: `break` outside of a loop\n   --> $DIR/issue-43162.rs:3:5\n    |\n LL |     break true;\n-   |     ^^^^^^^^^^ cannot break outside of a loop\n+   |     ^^^^^^^^^^ cannot `break` outside of a loop\n \n-error[E0268]: `break` outside of loop\n+error[E0268]: `break` outside of a loop\n   --> $DIR/issue-43162.rs:7:5\n    |\n LL |     break {};\n-   |     ^^^^^^^^ cannot break outside of a loop\n+   |     ^^^^^^^^ cannot `break` outside of a loop\n \n error[E0308]: mismatched types\n   --> $DIR/issue-43162.rs:1:13"}, {"sha": "9fea1411080f503bd7f824e09fa689d103f78abf", "filename": "src/test/ui/issues/issue-50576.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a8d7ea74a463b0a31817c00a6bb09e9146e97834/src%2Ftest%2Fui%2Fissues%2Fissue-50576.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8d7ea74a463b0a31817c00a6bb09e9146e97834/src%2Ftest%2Fui%2Fissues%2Fissue-50576.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-50576.stderr?ref=a8d7ea74a463b0a31817c00a6bb09e9146e97834", "patch": "@@ -4,17 +4,17 @@ error[E0426]: use of undeclared label `'L`\n LL |     |bool: [u8; break 'L]| 0;\n    |                       ^^ undeclared label `'L`\n \n-error[E0268]: `break` outside of loop\n+error[E0268]: `break` outside of a loop\n   --> $DIR/issue-50576.rs:2:17\n    |\n LL |     |bool: [u8; break 'L]| 0;\n-   |                 ^^^^^^^^ cannot break outside of a loop\n+   |                 ^^^^^^^^ cannot `break` outside of a loop\n \n-error[E0268]: `break` outside of loop\n+error[E0268]: `break` outside of a loop\n   --> $DIR/issue-50576.rs:5:16\n    |\n LL |     Vec::<[u8; break]>::new();\n-   |                ^^^^^ cannot break outside of a loop\n+   |                ^^^^^ cannot `break` outside of a loop\n \n error: aborting due to 3 previous errors\n "}, {"sha": "35d6fc49cedc88b92df918fd3c2bd2b70d5bd300", "filename": "src/test/ui/issues/issue-50581.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a8d7ea74a463b0a31817c00a6bb09e9146e97834/src%2Ftest%2Fui%2Fissues%2Fissue-50581.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8d7ea74a463b0a31817c00a6bb09e9146e97834/src%2Ftest%2Fui%2Fissues%2Fissue-50581.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-50581.stderr?ref=a8d7ea74a463b0a31817c00a6bb09e9146e97834", "patch": "@@ -1,8 +1,8 @@\n-error[E0268]: `break` outside of loop\n+error[E0268]: `break` outside of a loop\n   --> $DIR/issue-50581.rs:2:14\n    |\n LL |     |_: [u8; break]| ();\n-   |              ^^^^^ cannot break outside of a loop\n+   |              ^^^^^ cannot `break` outside of a loop\n \n error: aborting due to previous error\n "}]}