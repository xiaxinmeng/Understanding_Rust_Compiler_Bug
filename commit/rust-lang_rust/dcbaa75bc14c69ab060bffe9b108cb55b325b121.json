{"sha": "dcbaa75bc14c69ab060bffe9b108cb55b325b121", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjYmFhNzViYzE0YzY5YWIwNjBiZmZlOWIxMDhjYjU1YjMyNWIxMjE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-16T19:26:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-16T19:26:18Z"}, "message": "Merge #9928\n\n9928: internal: Highlight function exit points on `fn` keyword r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "3d978b9fbebcf49e1d7d2d2e92044b4f01eb949e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d978b9fbebcf49e1d7d2d2e92044b4f01eb949e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcbaa75bc14c69ab060bffe9b108cb55b325b121", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhGrvaCRBK7hj4Ov3rIwAAODEIAIAvbZQjCrpSXKuWrbFwyBo+\nwANQLT9DMeN1IzhcxAFgH3cUHErb7rxrP/xdWhZQTsC6JFjCnxmVYjLJ9OfmM80U\nQsEbCkR4vLz8ml/jN6xKcZ/rkRDUKRg4HF6HImE28XOnI/T+ZiCCLBMUp0JRM/cF\n58eJO6uGtPo33b+Yh7dC1gjRpy40osh03xjlHsazGUC3Zm/u32WwLeQJUGZLiz3Q\n+63lqHTjDA88k4RpjNIuw/6uM25EiMnWkOghFRd+qFfU/0trd17hlQa+PCTF3keI\nmftN2DuhuzdCJRdfA4TySmdvinaO04j0Sjy2P/r0ey9ST4OywEciKM4xiS8HnyM=\n=WDFZ\n-----END PGP SIGNATURE-----\n", "payload": "tree 3d978b9fbebcf49e1d7d2d2e92044b4f01eb949e\nparent 067bae3247f8c5b8467f6f7bbba3f46f32d3ed9d\nparent 40455db088eafa7280001e3faae2f50ed9a2c485\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1629141978 +0000\ncommitter GitHub <noreply@github.com> 1629141978 +0000\n\nMerge #9928\n\n9928: internal: Highlight function exit points on `fn` keyword r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcbaa75bc14c69ab060bffe9b108cb55b325b121", "html_url": "https://github.com/rust-lang/rust/commit/dcbaa75bc14c69ab060bffe9b108cb55b325b121", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcbaa75bc14c69ab060bffe9b108cb55b325b121/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "067bae3247f8c5b8467f6f7bbba3f46f32d3ed9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/067bae3247f8c5b8467f6f7bbba3f46f32d3ed9d", "html_url": "https://github.com/rust-lang/rust/commit/067bae3247f8c5b8467f6f7bbba3f46f32d3ed9d"}, {"sha": "40455db088eafa7280001e3faae2f50ed9a2c485", "url": "https://api.github.com/repos/rust-lang/rust/commits/40455db088eafa7280001e3faae2f50ed9a2c485", "html_url": "https://github.com/rust-lang/rust/commit/40455db088eafa7280001e3faae2f50ed9a2c485"}], "stats": {"total": 39, "additions": 28, "deletions": 11}, "files": [{"sha": "6fba65660bc37a292078c915684d4c496c0d2e14", "filename": "crates/ide/src/highlight_related.rs", "status": "modified", "additions": 28, "deletions": 11, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/dcbaa75bc14c69ab060bffe9b108cb55b325b121/crates%2Fide%2Fsrc%2Fhighlight_related.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcbaa75bc14c69ab060bffe9b108cb55b325b121/crates%2Fide%2Fsrc%2Fhighlight_related.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhighlight_related.rs?ref=dcbaa75bc14c69ab060bffe9b108cb55b325b121", "patch": "@@ -31,8 +31,10 @@ pub struct HighlightRelatedConfig {\n // Highlights constructs related to the thing under the cursor:\n // - if on an identifier, highlights all references to that identifier in the current file\n // - if on an `async` or `await token, highlights all yield points for that async context\n-// - if on a `return` token, `?` character or `->` return type arrow, highlights all exit points for that context\n+// - if on a `return` or `fn` keyword, `?` character or `->` return type arrow, highlights all exit points for that context\n // - if on a `break`, `loop`, `while` or `for` token, highlights all break points for that loop or block context\n+//\n+// Note: `?` and `->` do not currently trigger this behavior in the VSCode editor.\n pub(crate) fn highlight_related(\n     sema: &Semantics<RootDatabase>,\n     config: HighlightRelatedConfig,\n@@ -42,20 +44,16 @@ pub(crate) fn highlight_related(\n     let syntax = sema.parse(position.file_id).syntax().clone();\n \n     let token = pick_best_token(syntax.token_at_offset(position.offset), |kind| match kind {\n-        T![?] => 2, // prefer `?` when the cursor is sandwiched like `await$0?`\n-        T![await]\n-        | T![async]\n-        | T![return]\n-        | T![break]\n-        | T![loop]\n-        | T![for]\n-        | T![while]\n-        | T![->] => 1,\n+        T![?] => 3, // prefer `?` when the cursor is sandwiched like in `await$0?`\n+        T![->] => 2,\n+        kind if kind.is_keyword() => 1,\n         _ => 0,\n     })?;\n \n     match token.kind() {\n-        T![return] | T![?] | T![->] if config.exit_points => highlight_exit_points(sema, token),\n+        T![fn] | T![return] | T![?] | T![->] if config.exit_points => {\n+            highlight_exit_points(sema, token)\n+        }\n         T![await] | T![async] if config.yield_points => highlight_yield_points(token),\n         T![break] | T![loop] | T![for] | T![while] if config.break_points => {\n             highlight_break_points(token)\n@@ -474,6 +472,25 @@ fn foo() ->$0 u32 {\n         );\n     }\n \n+    #[test]\n+    fn test_hl_exit_points3() {\n+        check(\n+            r#\"\n+fn$0 foo() -> u32 {\n+    if true {\n+        return 0;\n+     // ^^^^^^\n+    }\n+\n+    0?;\n+  // ^\n+    0xDEAD_BEEF\n+ // ^^^^^^^^^^^\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn test_hl_prefer_ref_over_tail_exit() {\n         check("}]}