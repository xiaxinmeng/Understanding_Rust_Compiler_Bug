{"sha": "afa72b5dd6b75ed4577a4e73c1525dcd58d93b51", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmYTcyYjVkZDZiNzVlZDQ1NzdhNGU3M2MxNTI1ZGNkNThkOTNiNTE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-09-28T16:08:59Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-09-30T21:04:09Z"}, "message": "Don't build any native compiler-builtin components for emscripten", "tree": {"sha": "6baafb803b4fb5392aeecc448b1b79a19dc771fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6baafb803b4fb5392aeecc448b1b79a19dc771fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afa72b5dd6b75ed4577a4e73c1525dcd58d93b51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afa72b5dd6b75ed4577a4e73c1525dcd58d93b51", "html_url": "https://github.com/rust-lang/rust/commit/afa72b5dd6b75ed4577a4e73c1525dcd58d93b51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afa72b5dd6b75ed4577a4e73c1525dcd58d93b51/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f5e73be1bf439a9881600ad4cdfd5865391eaef", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f5e73be1bf439a9881600ad4cdfd5865391eaef", "html_url": "https://github.com/rust-lang/rust/commit/4f5e73be1bf439a9881600ad4cdfd5865391eaef"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "c4e6399c2c36d270fc65fed47663379bf92bacff", "filename": "src/bootstrap/sanity.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/afa72b5dd6b75ed4577a4e73c1525dcd58d93b51/src%2Fbootstrap%2Fsanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afa72b5dd6b75ed4577a4e73c1525dcd58d93b51/src%2Fbootstrap%2Fsanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsanity.rs?ref=afa72b5dd6b75ed4577a4e73c1525dcd58d93b51", "patch": "@@ -95,6 +95,13 @@ pub fn check(build: &mut Build) {\n     // We're gonna build some custom C code here and there, host triples\n     // also build some C++ shims for LLVM so we need a C++ compiler.\n     for target in build.config.target.iter() {\n+        // On emscripten we don't actually need the C compiler to just\n+        // build the target artifacts, only for testing. For the sake\n+        // of easier bot configuration, just skip detection.\n+        if target.contains(\"emscripten\") {\n+            continue;\n+        }\n+\n         need_cmd(build.cc(target).as_ref());\n         if let Some(ar) = build.ar(target) {\n             need_cmd(ar.as_ref());"}, {"sha": "acbd39bb1630c483c3a25064c8780eb95c118728", "filename": "src/libcompiler_builtins/build.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/afa72b5dd6b75ed4577a4e73c1525dcd58d93b51/src%2Flibcompiler_builtins%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afa72b5dd6b75ed4577a4e73c1525dcd58d93b51/src%2Flibcompiler_builtins%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcompiler_builtins%2Fbuild.rs?ref=afa72b5dd6b75ed4577a4e73c1525dcd58d93b51", "patch": "@@ -73,6 +73,12 @@ impl Sources {\n \n fn main() {\n     let target = env::var(\"TARGET\").expect(\"TARGET was not set\");\n+\n+    // Emscripten's runtime includes all the builtins\n+    if target.contains(\"emscripten\") {\n+        return;\n+    }\n+\n     let cfg = &mut gcc::Config::new();\n \n     if target.contains(\"msvc\") {"}]}