{"sha": "03b089d2208167d113cb7bb81f2de48b78785658", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzYjA4OWQyMjA4MTY3ZDExM2NiN2JiODFmMmRlNDhiNzg3ODU2NTg=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-02-15T06:36:48Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-02-15T06:36:48Z"}, "message": "Rollup merge of #48210 - jacob-hughes:clarify_sized_trait_in_api_docs, r=QuietMisdreavus\n\nClarified why `Sized` bound not implicit on trait's implicit `Self` type.\n\nThis part of the documentation was a little confusing to me on first read. I've added a couple lines for further explanation. Hopefully this makes things a bit clearer for new readers.", "tree": {"sha": "ab2e38fb82c8a5fc5db186d93946c4787d2dff78", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab2e38fb82c8a5fc5db186d93946c4787d2dff78"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03b089d2208167d113cb7bb81f2de48b78785658", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlqFKr0ACgkQ/vbIBR0O\nATwsJhAAi6Pp63NTnP42KdLYD+oUC/rDjf6FQV7FGLUk3Oe/oX0ltHyuTJy00MlZ\n3nvjRv9TDjg6q81yafGb3NqG/zag8zonqJ6+HI4hNBxsLDOsc3k34fwTH6sOqsRS\n38+fTYmgL+0+DQTPGbjLPFFKvZ8HsXAlBBk9Wuj4E/vMbp74r//qk40TJ93i5mxF\n5zGeN0Kv2DV1SPftTw8kuafFe9l9ojMmbDXnPLor2WIaFJuYeOcZ1j0KyUxY4VzE\nhxnN7SKG3uip/HAecP4E7+UWQEtzFjdBrbEcuG0//C4JBlS+rjuuCdfTNSgWd6qS\nBxvTj9FxLrqOOUkUqpGs/+6UbV+jbdMAW5N2jNhuXx727XpV5mf8KrlTe47CJdzV\nJp5bzflPZk3wY6w+5CC8NYzl7FLa8C5IoSOkiGB57aHRUE8JWH2p5p6uy/SuU0YU\no/rrzO4/MUg04x/sUgZHdS5Io4+LRRnCqxHL8nvIH3UlVBy1j5PjVGIW4ZsThGAA\n5/B90DSb0ehRkKn2GjcugWjvGEbrzTfba8/abVkBhKnrBZoku6+5zh+fP+nrM3m3\nCH3zmQUlT9CG3ZT2gapKwm37egQIUuECj0yQCRDR6DE1u21j9y6KaPtTLydvrPma\nhGQ0JuO5z29XPfilpaB7QlpG6bWXG7djestKgFYY9++XW+IavrU=\n=mME2\n-----END PGP SIGNATURE-----", "payload": "tree ab2e38fb82c8a5fc5db186d93946c4787d2dff78\nparent ce89c3de760a402fcffb63c6914e4d8314a69250\nparent 38064a9a7ce6b5050ca1d629aef22f17f2548d07\nauthor kennytm <kennytm@gmail.com> 1518676608 +0800\ncommitter kennytm <kennytm@gmail.com> 1518676608 +0800\n\nRollup merge of #48210 - jacob-hughes:clarify_sized_trait_in_api_docs, r=QuietMisdreavus\n\nClarified why `Sized` bound not implicit on trait's implicit `Self` type.\n\nThis part of the documentation was a little confusing to me on first read. I've added a couple lines for further explanation. Hopefully this makes things a bit clearer for new readers.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03b089d2208167d113cb7bb81f2de48b78785658", "html_url": "https://github.com/rust-lang/rust/commit/03b089d2208167d113cb7bb81f2de48b78785658", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03b089d2208167d113cb7bb81f2de48b78785658/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce89c3de760a402fcffb63c6914e4d8314a69250", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce89c3de760a402fcffb63c6914e4d8314a69250", "html_url": "https://github.com/rust-lang/rust/commit/ce89c3de760a402fcffb63c6914e4d8314a69250"}, {"sha": "38064a9a7ce6b5050ca1d629aef22f17f2548d07", "url": "https://api.github.com/repos/rust-lang/rust/commits/38064a9a7ce6b5050ca1d629aef22f17f2548d07", "html_url": "https://github.com/rust-lang/rust/commit/38064a9a7ce6b5050ca1d629aef22f17f2548d07"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "98e0f71eb935679b9ca97b4aab715b7c534305e2", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/03b089d2208167d113cb7bb81f2de48b78785658/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03b089d2208167d113cb7bb81f2de48b78785658/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=03b089d2208167d113cb7bb81f2de48b78785658", "patch": "@@ -63,9 +63,13 @@ impl<T: ?Sized> !Send for *mut T { }\n /// struct BarUse(Bar<[i32]>); // OK\n /// ```\n ///\n-/// The one exception is the implicit `Self` type of a trait, which does not\n-/// get an implicit `Sized` bound. This is because a `Sized` bound prevents\n-/// the trait from being used to form a [trait object]:\n+/// The one exception is the implicit `Self` type of a trait. A trait does not\n+/// have an implicit `Sized` bound as this is incompatible with [trait object]s\n+/// where, by definition, the trait needs to work with all possible implementors,\n+/// and thus could be any size.\n+///\n+/// Although Rust will let you bind `Sized` to a trait, you won't\n+/// be able to use it to form a trait object later:\n ///\n /// ```\n /// # #![allow(unused_variables)]"}]}