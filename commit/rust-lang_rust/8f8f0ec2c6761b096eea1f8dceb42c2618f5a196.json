{"sha": "8f8f0ec2c6761b096eea1f8dceb42c2618f5a196", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmOGYwZWMyYzY3NjFiMDk2ZWVhMWY4ZGNlYjQyYzI2MThmNWExOTY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-02-21T00:58:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-02-21T00:58:34Z"}, "message": "auto merge of #5043 : brson/rust/swap, r=brson\n\nr?", "tree": {"sha": "34ff06ab322c6cd89332b3b1dd4b5e3270e9ac4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34ff06ab322c6cd89332b3b1dd4b5e3270e9ac4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f8f0ec2c6761b096eea1f8dceb42c2618f5a196", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f8f0ec2c6761b096eea1f8dceb42c2618f5a196", "html_url": "https://github.com/rust-lang/rust/commit/8f8f0ec2c6761b096eea1f8dceb42c2618f5a196", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f8f0ec2c6761b096eea1f8dceb42c2618f5a196/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62f2b4943a223ff7dc168d8fed5ebc50f34150db", "url": "https://api.github.com/repos/rust-lang/rust/commits/62f2b4943a223ff7dc168d8fed5ebc50f34150db", "html_url": "https://github.com/rust-lang/rust/commit/62f2b4943a223ff7dc168d8fed5ebc50f34150db"}, {"sha": "423843e54bdbd6e32a0a75b7502904458e20c480", "url": "https://api.github.com/repos/rust-lang/rust/commits/423843e54bdbd6e32a0a75b7502904458e20c480", "html_url": "https://github.com/rust-lang/rust/commit/423843e54bdbd6e32a0a75b7502904458e20c480"}], "stats": {"total": 71, "additions": 67, "deletions": 4}, "files": [{"sha": "5b57ccc9ad430f9af984af1756e030f25335d25a", "filename": "src/librustc/middle/trans/expr.rs", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/8f8f0ec2c6761b096eea1f8dceb42c2618f5a196/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f8f0ec2c6761b096eea1f8dceb42c2618f5a196/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=8f8f0ec2c6761b096eea1f8dceb42c2618f5a196", "patch": "@@ -491,11 +491,29 @@ fn trans_rvalue_stmt_unadjusted(bcx: block, expr: @ast::expr) -> block {\n         ast::expr_swap(dst, src) => {\n             let dst_datum = unpack_datum!(bcx, trans_lvalue(bcx, dst));\n             let src_datum = unpack_datum!(bcx, trans_lvalue(bcx, src));\n-            let scratch = scratch_datum(bcx, dst_datum.ty, false);\n \n-            let bcx = dst_datum.move_to_datum(bcx, INIT, scratch);\n-            let bcx = src_datum.move_to_datum(bcx, INIT, dst_datum);\n-            return scratch.move_to_datum(bcx, INIT, src_datum);\n+            // If the source and destination are the same, then don't swap.\n+            // Avoids performing an overlapping memcpy\n+            let dst_datum_ref = dst_datum.to_ref_llval(bcx);\n+            let src_datum_ref = src_datum.to_ref_llval(bcx);\n+            let cmp = ICmp(bcx, lib::llvm::IntEQ,\n+                           src_datum_ref,\n+                           dst_datum_ref);\n+\n+            let swap_cx = base::sub_block(bcx, ~\"swap\");\n+            let next_cx = base::sub_block(bcx, ~\"next\");\n+\n+            CondBr(bcx, cmp, next_cx.llbb, swap_cx.llbb);\n+\n+            let scratch = scratch_datum(swap_cx, dst_datum.ty, false);\n+\n+            let swap_cx = dst_datum.move_to_datum(swap_cx, INIT, scratch);\n+            let swap_cx = src_datum.move_to_datum(swap_cx, INIT, dst_datum);\n+            let swap_cx = scratch.move_to_datum(swap_cx, INIT, src_datum);\n+\n+            Br(swap_cx, next_cx.llbb);\n+\n+            return next_cx;\n         }\n         ast::expr_assign_op(op, dst, src) => {\n             return trans_assign_op(bcx, expr, op, dst, src);"}, {"sha": "90b2ceef71a76eb20253848566e6d0d354c58cd1", "filename": "src/test/run-pass/swap-overlapping.rs", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/8f8f0ec2c6761b096eea1f8dceb42c2618f5a196/src%2Ftest%2Frun-pass%2Fswap-overlapping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f8f0ec2c6761b096eea1f8dceb42c2618f5a196/src%2Ftest%2Frun-pass%2Fswap-overlapping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fswap-overlapping.rs?ref=8f8f0ec2c6761b096eea1f8dceb42c2618f5a196", "patch": "@@ -0,0 +1,45 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Issue #5041 - avoid overlapping memcpy when src and dest of a swap are the same\n+\n+pub fn main() {\n+    let mut test = TestDescAndFn {\n+        desc: TestDesc {\n+            name: DynTestName(~\"test\"),\n+            should_fail: false\n+        },\n+        testfn: DynTestFn(|| ()),\n+    };\n+    do_swap(&mut test);\n+}\n+\n+fn do_swap(test: &mut TestDescAndFn) {\n+    *test <-> *test;\n+}\n+\n+pub enum TestName {\n+    DynTestName(~str)\n+}\n+\n+pub enum TestFn {\n+    DynTestFn(~fn()),\n+    DynBenchFn(~fn(&mut int))\n+}\n+\n+pub struct TestDesc {\n+    name: TestName,\n+    should_fail: bool\n+}\n+\n+pub struct TestDescAndFn {\n+    desc: TestDesc,\n+    testfn: TestFn,\n+}"}]}