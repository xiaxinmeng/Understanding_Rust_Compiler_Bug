{"sha": "6db2d5989fa69be20615d6cab24afda65bac58fe", "node_id": "C_kwDOAAsO6NoAKDZkYjJkNTk4OWZhNjliZTIwNjE1ZDZjYWIyNGFmZGE2NWJhYzU4ZmU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-22T05:33:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-22T05:33:18Z"}, "message": "Auto merge of #109119 - lcnr:trait-system-cleanup, r=compiler-errors\n\na general type system cleanup\n\nremoves the helper functions `traits::fully_solve_X` as they add more complexity then they are worth. It's confusing which of these helpers should be used in which context.\n\nchanges the way we deal with overflow to always add depth in `evaluate_predicates_recursively`. It may make sense to actually fully transition to not have `recursion_depth` on obligations but that's probably a bit too much for this PR.\n\nalso removes some other small - and imo unnecessary - helpers.\n\nr? types", "tree": {"sha": "bca7daf947962f32fa5db32e83ac159d517827c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bca7daf947962f32fa5db32e83ac159d517827c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6db2d5989fa69be20615d6cab24afda65bac58fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6db2d5989fa69be20615d6cab24afda65bac58fe", "html_url": "https://github.com/rust-lang/rust/commit/6db2d5989fa69be20615d6cab24afda65bac58fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6db2d5989fa69be20615d6cab24afda65bac58fe/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f62887968779b050d44d4029254187d8936cd3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f62887968779b050d44d4029254187d8936cd3c", "html_url": "https://github.com/rust-lang/rust/commit/6f62887968779b050d44d4029254187d8936cd3c"}, {"sha": "5810f1fe3c74e62bbbc32a31b90f7ec48f14bc27", "url": "https://api.github.com/repos/rust-lang/rust/commits/5810f1fe3c74e62bbbc32a31b90f7ec48f14bc27", "html_url": "https://github.com/rust-lang/rust/commit/5810f1fe3c74e62bbbc32a31b90f7ec48f14bc27"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "ed0bd58c770c7566ca2847cc00fe9162fa73977c", "filename": "clippy_lints/src/future_not_send.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6db2d5989fa69be20615d6cab24afda65bac58fe/clippy_lints%2Fsrc%2Ffuture_not_send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6db2d5989fa69be20615d6cab24afda65bac58fe/clippy_lints%2Fsrc%2Ffuture_not_send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffuture_not_send.rs?ref=6db2d5989fa69be20615d6cab24afda65bac58fe", "patch": "@@ -9,7 +9,7 @@ use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::def_id::LocalDefId;\n use rustc_span::{sym, Span};\n use rustc_trait_selection::traits::error_reporting::suggestions::TypeErrCtxtExt;\n-use rustc_trait_selection::traits::{self, FulfillmentError};\n+use rustc_trait_selection::traits::{self, FulfillmentError, ObligationCtxt};\n \n declare_clippy_lint! {\n     /// ### What it does\n@@ -79,8 +79,10 @@ impl<'tcx> LateLintPass<'tcx> for FutureNotSend {\n                 let send_trait = cx.tcx.get_diagnostic_item(sym::Send).unwrap();\n                 let span = decl.output.span();\n                 let infcx = cx.tcx.infer_ctxt().build();\n+                let ocx = ObligationCtxt::new(&infcx);\n                 let cause = traits::ObligationCause::misc(span, fn_def_id);\n-                let send_errors = traits::fully_solve_bound(&infcx, cause, cx.param_env, ret_ty, send_trait);\n+                ocx.register_bound(cause, cx.param_env, ret_ty, send_trait);\n+                let send_errors = ocx.select_all_or_error();\n                 if !send_errors.is_empty() {\n                     span_lint_and_then(\n                         cx,"}]}