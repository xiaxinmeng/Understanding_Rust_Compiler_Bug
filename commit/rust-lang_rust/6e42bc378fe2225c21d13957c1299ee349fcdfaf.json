{"sha": "6e42bc378fe2225c21d13957c1299ee349fcdfaf", "node_id": "C_kwDOAAsO6NoAKDZlNDJiYzM3OGZlMjIyNWMyMWQxMzk1N2MxMjk5ZWUzNDlmY2RmYWY", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-01-13T06:25:53Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-01-13T06:25:53Z"}, "message": "Fix formatting\n\nThis code is sufficiently complex -- I'm guessing due to the very long\n`match` guards -- that rustfmt doesn't format it.", "tree": {"sha": "ea672501f6e75cded9990df24b3917908292c74d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea672501f6e75cded9990df24b3917908292c74d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e42bc378fe2225c21d13957c1299ee349fcdfaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e42bc378fe2225c21d13957c1299ee349fcdfaf", "html_url": "https://github.com/rust-lang/rust/commit/6e42bc378fe2225c21d13957c1299ee349fcdfaf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e42bc378fe2225c21d13957c1299ee349fcdfaf/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "935a99a4d1abfb517dfadf11fa29500348cc2b1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/935a99a4d1abfb517dfadf11fa29500348cc2b1c", "html_url": "https://github.com/rust-lang/rust/commit/935a99a4d1abfb517dfadf11fa29500348cc2b1c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "c7bb66f339c1467ed76556c8ff96304b7943ca1a", "filename": "compiler/rustc_typeck/src/check/op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e42bc378fe2225c21d13957c1299ee349fcdfaf/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e42bc378fe2225c21d13957c1299ee349fcdfaf/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fop.rs?ref=6e42bc378fe2225c21d13957c1299ee349fcdfaf", "patch": "@@ -571,7 +571,7 @@ This requires ownership of the string on the left.\";\n                 if let IsAssign::No = is_assign { // Do not supply this message if `&str += &str`\n                     err.span_label(op.span, \"`+` cannot be used to concatenate two `&str` strings\");\n                     err.note(str_concat_note);\n-                    if let hir::ExprKind::AddrOf(_,_,lhs_inner_expr) = lhs_expr.kind {\n+                    if let hir::ExprKind::AddrOf(_, _, lhs_inner_expr) = lhs_expr.kind {\n                         err.span_suggestion(\n                             lhs_expr.span.until(lhs_inner_expr.span),\n                             rm_borrow_msg,"}]}