{"sha": "c776443981d08ccad32ca536554a86a3a46c89b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3NzY0NDM5ODFkMDhjY2FkMzJjYTUzNjU1NGE4NmEzYTQ2Yzg5YjI=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-08T04:07:28Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-08T04:07:28Z"}, "message": "Remove unused lifetime", "tree": {"sha": "926d2d281e17280ae8521b3ec27736a71797de1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/926d2d281e17280ae8521b3ec27736a71797de1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c776443981d08ccad32ca536554a86a3a46c89b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c776443981d08ccad32ca536554a86a3a46c89b2", "html_url": "https://github.com/rust-lang/rust/commit/c776443981d08ccad32ca536554a86a3a46c89b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c776443981d08ccad32ca536554a86a3a46c89b2/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6d8d86e9443a01f9afb7d61eeffb3e5891be92a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6d8d86e9443a01f9afb7d61eeffb3e5891be92a", "html_url": "https://github.com/rust-lang/rust/commit/d6d8d86e9443a01f9afb7d61eeffb3e5891be92a"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "758253a2eda8331f4e4547833c456b8ccf7bead5", "filename": "src/visitor.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c776443981d08ccad32ca536554a86a3a46c89b2/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c776443981d08ccad32ca536554a86a3a46c89b2/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=c776443981d08ccad32ca536554a86a3a46c89b2", "patch": "@@ -55,8 +55,8 @@ pub struct SnippetProvider<'a> {\n     start_pos: usize,\n }\n \n-impl<'b, 'a: 'b> SnippetProvider<'a> {\n-    pub fn span_to_snippet(&'b self, span: Span) -> Option<&'a str> {\n+impl<'a> SnippetProvider<'a> {\n+    pub fn span_to_snippet(&self, span: Span) -> Option<&str> {\n         let start_index = span.lo().to_usize().checked_sub(self.start_pos)?;\n         let end_index = span.hi().to_usize().checked_sub(self.start_pos)?;\n         Some(&self.big_snippet[start_index..end_index])"}]}