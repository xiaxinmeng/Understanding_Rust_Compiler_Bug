{"sha": "62e3daee3f0f239625de5c7fe54d38e624a3eaa5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyZTNkYWVlM2YwZjIzOTYyNWRlNWM3ZmU1NGQzOGU2MjRhM2VhYTU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-11T09:36:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-11T09:36:29Z"}, "message": "Rollup merge of #69859 - contrun:fix-62456, r=matthewjasper\n\nfix #62456\n\ncloses https://github.com/rust-lang/rust/issues/62456", "tree": {"sha": "b55775ba0ff64c0896af3255abe9551ac665d35e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b55775ba0ff64c0896af3255abe9551ac665d35e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62e3daee3f0f239625de5c7fe54d38e624a3eaa5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeaLEdCRBK7hj4Ov3rIwAAdHIIAIHRncPZE60ZhtE1Tm44ZX7u\nnGmnDUe+99vg1q6c9wAcF5p50rUYRc9DGFkY65jTPiN14L51Fhbk7xCcIJomc3rd\n7U37ULMbXzsAhzvV/LIjqMkLGYnof5Zd37+Z9Ipm3rkbB1OYrMgAi3vvsJ9FjHtu\nOAFgJulBfvvjYSFl7fItw/xrDdGzIUrE1baathLHg76DBnLYCacdniIbMMvTSwSm\nw2tUGC1I79r9k6Fo+HgH4c62BrdLQV4og/JDVwD3n4+iYjpup5y+sL+kiGs4frY6\nCIK21egmNoZSNxqvJWEVbGNZFfEb1pTjpD7i9dhg86qTLebvfvR1MFFPLacds34=\n=4d3i\n-----END PGP SIGNATURE-----\n", "payload": "tree b55775ba0ff64c0896af3255abe9551ac665d35e\nparent dfbbd5d6ead535de08ff8d10e320194ac7585457\nparent 0a0c850d732666b1205a6f567c38e05239c65848\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1583919389 +0100\ncommitter GitHub <noreply@github.com> 1583919389 +0100\n\nRollup merge of #69859 - contrun:fix-62456, r=matthewjasper\n\nfix #62456\n\ncloses https://github.com/rust-lang/rust/issues/62456\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62e3daee3f0f239625de5c7fe54d38e624a3eaa5", "html_url": "https://github.com/rust-lang/rust/commit/62e3daee3f0f239625de5c7fe54d38e624a3eaa5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62e3daee3f0f239625de5c7fe54d38e624a3eaa5/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfbbd5d6ead535de08ff8d10e320194ac7585457", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfbbd5d6ead535de08ff8d10e320194ac7585457", "html_url": "https://github.com/rust-lang/rust/commit/dfbbd5d6ead535de08ff8d10e320194ac7585457"}, {"sha": "0a0c850d732666b1205a6f567c38e05239c65848", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a0c850d732666b1205a6f567c38e05239c65848", "html_url": "https://github.com/rust-lang/rust/commit/0a0c850d732666b1205a6f567c38e05239c65848"}], "stats": {"total": 52, "additions": 46, "deletions": 6}, "files": [{"sha": "859a219c95a21d151f46ee7a9a70a72c69dee168", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/62e3daee3f0f239625de5c7fe54d38e624a3eaa5/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62e3daee3f0f239625de5c7fe54d38e624a3eaa5/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=62e3daee3f0f239625de5c7fe54d38e624a3eaa5", "patch": "@@ -18,6 +18,7 @@ use crate::type_error_struct;\n use crate::util::common::ErrorReported;\n \n use rustc::middle::lang_items;\n+use rustc::mir::interpret::ErrorHandled;\n use rustc::ty;\n use rustc::ty::adjustment::{Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoBorrowMutability};\n use rustc::ty::Ty;\n@@ -1039,11 +1040,18 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         };\n \n         if element_ty.references_error() {\n-            tcx.types.err\n-        } else if let Ok(count) = count {\n-            tcx.mk_ty(ty::Array(t, count))\n-        } else {\n-            tcx.types.err\n+            return tcx.types.err;\n+        }\n+        match count {\n+            Ok(count) => tcx.mk_ty(ty::Array(t, count)),\n+            Err(ErrorHandled::TooGeneric) => {\n+                self.tcx.sess.span_err(\n+                    tcx.def_span(count_def_id),\n+                    \"array lengths can't depend on generic parameters\",\n+                );\n+                tcx.types.err\n+            }\n+            Err(ErrorHandled::Reported) => tcx.types.err,\n         }\n     }\n "}, {"sha": "c5e6fe9104bc979ab5342426b2110f1a2884ed59", "filename": "src/test/ui/const-generics/issues/issue-62456.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/62e3daee3f0f239625de5c7fe54d38e624a3eaa5/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62456.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62e3daee3f0f239625de5c7fe54d38e624a3eaa5/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62456.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62456.rs?ref=62e3daee3f0f239625de5c7fe54d38e624a3eaa5", "patch": "@@ -0,0 +1,9 @@\n+#![feature(const_generics)]\n+//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+\n+fn foo<const N: usize>() {\n+    let _ = [0u64; N + 1];\n+    //~^ ERROR array lengths can't depend on generic parameters\n+}\n+\n+fn main() {}"}, {"sha": "9cdccf8407c9bf6fae0bb6ffc53ac1d4cc3e6f14", "filename": "src/test/ui/const-generics/issues/issue-62456.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/62e3daee3f0f239625de5c7fe54d38e624a3eaa5/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62456.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/62e3daee3f0f239625de5c7fe54d38e624a3eaa5/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62456.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62456.stderr?ref=62e3daee3f0f239625de5c7fe54d38e624a3eaa5", "patch": "@@ -0,0 +1,16 @@\n+warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+  --> $DIR/issue-62456.rs:1:12\n+   |\n+LL | #![feature(const_generics)]\n+   |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+error: array lengths can't depend on generic parameters\n+  --> $DIR/issue-62456.rs:5:20\n+   |\n+LL |     let _ = [0u64; N + 1];\n+   |                    ^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "d060f26fb2a08aaa971ad3005ba767878a2b6871", "filename": "src/test/ui/issues/issue-69602-type-err-during-codegen-ice.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62e3daee3f0f239625de5c7fe54d38e624a3eaa5/src%2Ftest%2Fui%2Fissues%2Fissue-69602-type-err-during-codegen-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62e3daee3f0f239625de5c7fe54d38e624a3eaa5/src%2Ftest%2Fui%2Fissues%2Fissue-69602-type-err-during-codegen-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-69602-type-err-during-codegen-ice.rs?ref=62e3daee3f0f239625de5c7fe54d38e624a3eaa5", "patch": "@@ -19,4 +19,5 @@ impl TraitB for B { //~ ERROR not all trait items implemented, missing: `MyA`\n \n fn main() {\n     let _ = [0; B::VALUE];\n+    //~^ ERROR array lengths can't depend on generic parameters\n }"}, {"sha": "c6b2b4d27a208f72d3c8fc33d1fbfa18ead7386c", "filename": "src/test/ui/issues/issue-69602-type-err-during-codegen-ice.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/62e3daee3f0f239625de5c7fe54d38e624a3eaa5/src%2Ftest%2Fui%2Fissues%2Fissue-69602-type-err-during-codegen-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/62e3daee3f0f239625de5c7fe54d38e624a3eaa5/src%2Ftest%2Fui%2Fissues%2Fissue-69602-type-err-during-codegen-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-69602-type-err-during-codegen-ice.stderr?ref=62e3daee3f0f239625de5c7fe54d38e624a3eaa5", "patch": "@@ -13,7 +13,13 @@ LL |     type MyA: TraitA;\n LL | impl TraitB for B {\n    | ^^^^^^^^^^^^^^^^^ missing `MyA` in implementation\n \n-error: aborting due to 2 previous errors\n+error: array lengths can't depend on generic parameters\n+  --> $DIR/issue-69602-type-err-during-codegen-ice.rs:21:17\n+   |\n+LL |     let _ = [0; B::VALUE];\n+   |                 ^^^^^^^^\n+\n+error: aborting due to 3 previous errors\n \n Some errors have detailed explanations: E0046, E0437.\n For more information about an error, try `rustc --explain E0046`."}]}