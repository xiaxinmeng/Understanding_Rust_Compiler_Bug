{"sha": "cd0c54abb9801e26c9e6e83ad8c99a39a9656922", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkMGM1NGFiYjk4MDFlMjZjOWU2ZTgzYWQ4Yzk5YTM5YTk2NTY5MjI=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-01-21T11:04:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-21T11:04:48Z"}, "message": "Rollup merge of #81178 - tmiasko:no-landing-pads, r=oli-obk\n\nVisit only terminators when removing landing pads\n\nNo functional changes intended", "tree": {"sha": "201d5e04bd6515a370352df690525b039b333fc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/201d5e04bd6515a370352df690525b039b333fc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd0c54abb9801e26c9e6e83ad8c99a39a9656922", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgCV/RCRBK7hj4Ov3rIwAAdHIIACz3OlRwJfxKWWpLP8rqRXQf\nt3ZT4+lFZ/8l0TKrcxazdQG6xCU7bxDGw6jrjRWwdafH9wWPXpfqt1CumxrPnzSL\nWWW0vpyLurvz2FEcIiAp7ctH/X5Ve2hFtBmVkhUeVmtXvqXdmsNHMVSuP326MlvK\nhLqpTBO7xCd8j5UdC9awAJN6iCCW8NM1CupKU7e/18/FySjm68cu2CTvTjcX1e87\nm+Fqu4+HKnFcw72ksnyeqTzp/KIAwE+n0velsGOuEZkib80FuQmfy8XkiHt9aIat\nmSB2GCTyV3GiRHdxcf65HWzeXpsC1iyEg2zTP80v+eIeddQuOyDVJx3Ilc9xRx0=\n=lf5o\n-----END PGP SIGNATURE-----\n", "payload": "tree 201d5e04bd6515a370352df690525b039b333fc5\nparent a77c1d836aa669c7faed616d6b53e81cbe65f055\nparent 96e9562a7eec294be3e8c8543dbf10c83b7d25ae\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1611227088 +0900\ncommitter GitHub <noreply@github.com> 1611227088 +0900\n\nRollup merge of #81178 - tmiasko:no-landing-pads, r=oli-obk\n\nVisit only terminators when removing landing pads\n\nNo functional changes intended\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd0c54abb9801e26c9e6e83ad8c99a39a9656922", "html_url": "https://github.com/rust-lang/rust/commit/cd0c54abb9801e26c9e6e83ad8c99a39a9656922", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd0c54abb9801e26c9e6e83ad8c99a39a9656922/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a77c1d836aa669c7faed616d6b53e81cbe65f055", "url": "https://api.github.com/repos/rust-lang/rust/commits/a77c1d836aa669c7faed616d6b53e81cbe65f055", "html_url": "https://github.com/rust-lang/rust/commit/a77c1d836aa669c7faed616d6b53e81cbe65f055"}, {"sha": "96e9562a7eec294be3e8c8543dbf10c83b7d25ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/96e9562a7eec294be3e8c8543dbf10c83b7d25ae", "html_url": "https://github.com/rust-lang/rust/commit/96e9562a7eec294be3e8c8543dbf10c83b7d25ae"}], "stats": {"total": 33, "additions": 9, "deletions": 24}, "files": [{"sha": "6aaf27bdcb5f15cb730b2799a0c67d5282d6483d", "filename": "compiler/rustc_mir/src/shim.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd0c54abb9801e26c9e6e83ad8c99a39a9656922/compiler%2Frustc_mir%2Fsrc%2Fshim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd0c54abb9801e26c9e6e83ad8c99a39a9656922/compiler%2Frustc_mir%2Fsrc%2Fshim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fshim.rs?ref=cd0c54abb9801e26c9e6e83ad8c99a39a9656922", "patch": "@@ -81,7 +81,7 @@ fn make_shim<'tcx>(tcx: TyCtxt<'tcx>, instance: ty::InstanceDef<'tcx>) -> Body<'\n         MirPhase::Const,\n         &[&[\n             &add_moves_for_packed_drops::AddMovesForPackedDrops,\n-            &no_landing_pads::NoLandingPads::new(tcx),\n+            &no_landing_pads::NoLandingPads,\n             &remove_noop_landing_pads::RemoveNoopLandingPads,\n             &simplify::SimplifyCfg::new(\"make_shim\"),\n             &add_call_guards::CriticalCallEdges,"}, {"sha": "e509c35de40b8af2077e9ac85c734d9df6634b09", "filename": "compiler/rustc_mir/src/transform/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cd0c54abb9801e26c9e6e83ad8c99a39a9656922/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd0c54abb9801e26c9e6e83ad8c99a39a9656922/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs?ref=cd0c54abb9801e26c9e6e83ad8c99a39a9656922", "patch": "@@ -433,15 +433,15 @@ fn run_post_borrowck_cleanup_passes<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tc\n \n     let post_borrowck_cleanup: &[&dyn MirPass<'tcx>] = &[\n         // Remove all things only needed by analysis\n-        &no_landing_pads::NoLandingPads::new(tcx),\n+        &no_landing_pads::NoLandingPads,\n         &simplify_branches::SimplifyBranches::new(\"initial\"),\n         &remove_noop_landing_pads::RemoveNoopLandingPads,\n         &cleanup_post_borrowck::CleanupNonCodegenStatements,\n         &simplify::SimplifyCfg::new(\"early-opt\"),\n         // These next passes must be executed together\n         &add_call_guards::CriticalCallEdges,\n         &elaborate_drops::ElaborateDrops,\n-        &no_landing_pads::NoLandingPads::new(tcx),\n+        &no_landing_pads::NoLandingPads,\n         // AddMovesForPackedDrops needs to run after drop\n         // elaboration.\n         &add_moves_for_packed_drops::AddMovesForPackedDrops,"}, {"sha": "5479f0cc5861d3ee8b5cbbd463c2297f7e565658", "filename": "compiler/rustc_mir/src/transform/no_landing_pads.rs", "status": "modified", "additions": 6, "deletions": 21, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/cd0c54abb9801e26c9e6e83ad8c99a39a9656922/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fno_landing_pads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd0c54abb9801e26c9e6e83ad8c99a39a9656922/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fno_landing_pads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fno_landing_pads.rs?ref=cd0c54abb9801e26c9e6e83ad8c99a39a9656922", "patch": "@@ -2,42 +2,27 @@\n //! specified.\n \n use crate::transform::MirPass;\n-use rustc_middle::mir::visit::MutVisitor;\n use rustc_middle::mir::*;\n use rustc_middle::ty::TyCtxt;\n use rustc_target::spec::PanicStrategy;\n \n-pub struct NoLandingPads<'tcx> {\n-    tcx: TyCtxt<'tcx>,\n-}\n-\n-impl<'tcx> NoLandingPads<'tcx> {\n-    pub fn new(tcx: TyCtxt<'tcx>) -> Self {\n-        NoLandingPads { tcx }\n-    }\n-}\n+pub struct NoLandingPads;\n \n-impl<'tcx> MirPass<'tcx> for NoLandingPads<'tcx> {\n+impl<'tcx> MirPass<'tcx> for NoLandingPads {\n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n         no_landing_pads(tcx, body)\n     }\n }\n \n pub fn no_landing_pads<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n-    if tcx.sess.panic_strategy() == PanicStrategy::Abort {\n-        NoLandingPads::new(tcx).visit_body(body);\n-    }\n-}\n-\n-impl<'tcx> MutVisitor<'tcx> for NoLandingPads<'tcx> {\n-    fn tcx(&self) -> TyCtxt<'tcx> {\n-        self.tcx\n+    if tcx.sess.panic_strategy() != PanicStrategy::Abort {\n+        return;\n     }\n \n-    fn visit_terminator(&mut self, terminator: &mut Terminator<'tcx>, location: Location) {\n+    for block in body.basic_blocks_mut() {\n+        let terminator = block.terminator_mut();\n         if let Some(unwind) = terminator.kind.unwind_mut() {\n             unwind.take();\n         }\n-        self.super_terminator(terminator, location);\n     }\n }"}]}