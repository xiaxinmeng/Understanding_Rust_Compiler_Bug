{"sha": "bbcb77ea6fc08df598b20267afd6a44018b21f5b", "node_id": "C_kwDOAAsO6NoAKGJiY2I3N2VhNmZjMDhkZjU5OGIyMDI2N2FmZDZhNDQwMThiMjFmNWI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-03T13:58:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-03T13:58:36Z"}, "message": "Auto merge of #13456 - emilio:scip-local-symbol, r=Veykril\n\nscip: Generate symbols for local crates.\n\nConsider something like:\n\n```\n// a.rs\npub struct Foo { .. } // Foo is \"local 1\"\n\nfn something() {\n    crate::b::Bar::new() // Bar is \"local 1\", but of \"b.rs\"\n}\n\n// b.rs\npub struct Bar { .. } // \"local 1\"\n```\n\nWithout this there's no way to disambiguate whether \"local 1\" references \"Bar\" or \"Foo\".", "tree": {"sha": "92f159de17be5fd44e22cae42dd0eb019ff927a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92f159de17be5fd44e22cae42dd0eb019ff927a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbcb77ea6fc08df598b20267afd6a44018b21f5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbcb77ea6fc08df598b20267afd6a44018b21f5b", "html_url": "https://github.com/rust-lang/rust/commit/bbcb77ea6fc08df598b20267afd6a44018b21f5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbcb77ea6fc08df598b20267afd6a44018b21f5b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3a68712a94a74fd5bb52a779012170c9e975058", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3a68712a94a74fd5bb52a779012170c9e975058", "html_url": "https://github.com/rust-lang/rust/commit/f3a68712a94a74fd5bb52a779012170c9e975058"}, {"sha": "8039a07a5e13fa0690b56f3c6074e5581a4fd4c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/8039a07a5e13fa0690b56f3c6074e5581a4fd4c5", "html_url": "https://github.com/rust-lang/rust/commit/8039a07a5e13fa0690b56f3c6074e5581a4fd4c5"}], "stats": {"total": 74, "additions": 56, "deletions": 18}, "files": [{"sha": "07d117aff10bd8fa9bbdc3dff5ee5aaed8e38153", "filename": "crates/ide/src/moniker.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/bbcb77ea6fc08df598b20267afd6a44018b21f5b/crates%2Fide%2Fsrc%2Fmoniker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbcb77ea6fc08df598b20267afd6a44018b21f5b/crates%2Fide%2Fsrc%2Fmoniker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fmoniker.rs?ref=bbcb77ea6fc08df598b20267afd6a44018b21f5b", "patch": "@@ -73,8 +73,8 @@ impl MonikerResult {\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct PackageInformation {\n     pub name: String,\n-    pub repo: String,\n-    pub version: String,\n+    pub repo: Option<String>,\n+    pub version: Option<String>,\n }\n \n pub(crate) fn crate_for_file(db: &RootDatabase, file_id: FileId) -> Option<Crate> {\n@@ -256,18 +256,18 @@ pub(crate) fn def_to_moniker(\n             let (name, repo, version) = match krate.origin(db) {\n                 CrateOrigin::CratesIo { repo, name } => (\n                     name.unwrap_or(krate.display_name(db)?.canonical_name().to_string()),\n-                    repo?,\n-                    krate.version(db)?,\n+                    repo,\n+                    krate.version(db),\n                 ),\n                 CrateOrigin::Lang(lang) => (\n                     krate.display_name(db)?.canonical_name().to_string(),\n-                    \"https://github.com/rust-lang/rust/\".to_string(),\n-                    match lang {\n+                    Some(\"https://github.com/rust-lang/rust/\".to_string()),\n+                    Some(match lang {\n                         LangCrateOrigin::Other => {\n                             \"https://github.com/rust-lang/rust/library/\".into()\n                         }\n                         lang => format!(\"https://github.com/rust-lang/rust/library/{lang}\",),\n-                    },\n+                    }),\n                 ),\n             };\n             PackageInformation { name, repo, version }\n@@ -315,7 +315,7 @@ pub mod module {\n }\n \"#,\n             \"foo::module::func\",\n-            r#\"PackageInformation { name: \"foo\", repo: \"https://a.b/foo.git\", version: \"0.1.0\" }\"#,\n+            r#\"PackageInformation { name: \"foo\", repo: Some(\"https://a.b/foo.git\"), version: Some(\"0.1.0\") }\"#,\n             MonikerKind::Import,\n         );\n         check_moniker(\n@@ -331,7 +331,7 @@ pub mod module {\n }\n \"#,\n             \"foo::module::func\",\n-            r#\"PackageInformation { name: \"foo\", repo: \"https://a.b/foo.git\", version: \"0.1.0\" }\"#,\n+            r#\"PackageInformation { name: \"foo\", repo: Some(\"https://a.b/foo.git\"), version: Some(\"0.1.0\") }\"#,\n             MonikerKind::Export,\n         );\n     }\n@@ -348,7 +348,7 @@ pub mod module {\n }\n \"#,\n             \"foo::module::MyTrait::func\",\n-            r#\"PackageInformation { name: \"foo\", repo: \"https://a.b/foo.git\", version: \"0.1.0\" }\"#,\n+            r#\"PackageInformation { name: \"foo\", repo: Some(\"https://a.b/foo.git\"), version: Some(\"0.1.0\") }\"#,\n             MonikerKind::Export,\n         );\n     }\n@@ -365,7 +365,7 @@ pub mod module {\n }\n \"#,\n             \"foo::module::MyTrait::MY_CONST\",\n-            r#\"PackageInformation { name: \"foo\", repo: \"https://a.b/foo.git\", version: \"0.1.0\" }\"#,\n+            r#\"PackageInformation { name: \"foo\", repo: Some(\"https://a.b/foo.git\"), version: Some(\"0.1.0\") }\"#,\n             MonikerKind::Export,\n         );\n     }\n@@ -382,7 +382,7 @@ pub mod module {\n }\n \"#,\n             \"foo::module::MyTrait::MyType\",\n-            r#\"PackageInformation { name: \"foo\", repo: \"https://a.b/foo.git\", version: \"0.1.0\" }\"#,\n+            r#\"PackageInformation { name: \"foo\", repo: Some(\"https://a.b/foo.git\"), version: Some(\"0.1.0\") }\"#,\n             MonikerKind::Export,\n         );\n     }\n@@ -405,7 +405,7 @@ pub mod module {\n }\n \"#,\n             \"foo::module::MyStruct::MyTrait::func\",\n-            r#\"PackageInformation { name: \"foo\", repo: \"https://a.b/foo.git\", version: \"0.1.0\" }\"#,\n+            r#\"PackageInformation { name: \"foo\", repo: Some(\"https://a.b/foo.git\"), version: Some(\"0.1.0\") }\"#,\n             MonikerKind::Export,\n         );\n     }\n@@ -425,7 +425,7 @@ pub struct St {\n }\n \"#,\n             \"foo::St::a\",\n-            r#\"PackageInformation { name: \"foo\", repo: \"https://a.b/foo.git\", version: \"0.1.0\" }\"#,\n+            r#\"PackageInformation { name: \"foo\", repo: Some(\"https://a.b/foo.git\"), version: Some(\"0.1.0\") }\"#,\n             MonikerKind::Import,\n         );\n     }"}, {"sha": "c74ddabb17770392dbb576059d61231285d7f3bb", "filename": "crates/rust-analyzer/src/cli/lsif.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bbcb77ea6fc08df598b20267afd6a44018b21f5b/crates%2Frust-analyzer%2Fsrc%2Fcli%2Flsif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbcb77ea6fc08df598b20267afd6a44018b21f5b/crates%2Frust-analyzer%2Fsrc%2Fcli%2Flsif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Flsif.rs?ref=bbcb77ea6fc08df598b20267afd6a44018b21f5b", "patch": "@@ -106,12 +106,12 @@ impl LsifManager<'_> {\n                 manager: \"cargo\".to_string(),\n                 uri: None,\n                 content: None,\n-                repository: Some(lsif::Repository {\n-                    url: pi.repo,\n+                repository: pi.repo.map(|url| lsif::Repository {\n+                    url,\n                     r#type: \"git\".to_string(),\n                     commit_id: None,\n                 }),\n-                version: Some(pi.version),\n+                version: pi.version,\n             }));\n         self.package_map.insert(package_information, result_set_id);\n         result_set_id"}, {"sha": "ca7ba896b67cfc8bbbce7dca755bc520e3998beb", "filename": "crates/rust-analyzer/src/cli/scip.rs", "status": "modified", "additions": 39, "deletions": 1, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/bbcb77ea6fc08df598b20267afd6a44018b21f5b/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fscip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbcb77ea6fc08df598b20267afd6a44018b21f5b/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fscip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fscip.rs?ref=bbcb77ea6fc08df598b20267afd6a44018b21f5b", "patch": "@@ -231,7 +231,7 @@ fn token_to_symbol(token: &TokenStaticData) -> Option<scip_types::Symbol> {\n         package: Some(scip_types::Package {\n             manager: \"cargo\".to_string(),\n             name: package_name,\n-            version,\n+            version: version.unwrap_or_else(|| \".\".to_string()),\n             ..Default::default()\n         })\n         .into(),\n@@ -415,4 +415,42 @@ pub mod module {\n             \"\",\n         );\n     }\n+\n+    #[test]\n+    fn global_symbol_for_pub_struct() {\n+        check_symbol(\n+            r#\"\n+    //- /lib.rs crate:main\n+    mod foo;\n+\n+    fn main() {\n+        let _bar = foo::Bar { i: 0 };\n+    }\n+    //- /foo.rs\n+    pub struct Bar$0 {\n+        pub i: i32,\n+    }\n+    \"#,\n+            \"rust-analyzer cargo main . foo/Bar#\",\n+        );\n+    }\n+\n+    #[test]\n+    fn global_symbol_for_pub_struct_reference() {\n+        check_symbol(\n+            r#\"\n+    //- /lib.rs crate:main\n+    mod foo;\n+\n+    fn main() {\n+        let _bar = foo::Bar$0 { i: 0 };\n+    }\n+    //- /foo.rs\n+    pub struct Bar {\n+        pub i: i32,\n+    }\n+    \"#,\n+            \"rust-analyzer cargo main . foo/Bar#\",\n+        );\n+    }\n }"}]}