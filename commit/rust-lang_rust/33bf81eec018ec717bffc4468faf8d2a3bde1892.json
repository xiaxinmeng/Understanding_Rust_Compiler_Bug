{"sha": "33bf81eec018ec717bffc4468faf8d2a3bde1892", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzYmY4MWVlYzAxOGVjNzE3YmZmYzQ0NjhmYWY4ZDJhM2JkZTE4OTI=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-02-03T12:57:03Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-02-11T14:08:17Z"}, "message": "Ease the transition to requiring features by just warning if there's no feature list\n\nwhile we could make this change (it's all unstable after all), there are crates.io crates that use the feature and that the compiler depends upon. We can instead roll out this feature while still supporting the old way.", "tree": {"sha": "da20ccfafa6310898226f49b7b8c5844a47ea831", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da20ccfafa6310898226f49b7b8c5844a47ea831"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33bf81eec018ec717bffc4468faf8d2a3bde1892", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33bf81eec018ec717bffc4468faf8d2a3bde1892", "html_url": "https://github.com/rust-lang/rust/commit/33bf81eec018ec717bffc4468faf8d2a3bde1892", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33bf81eec018ec717bffc4468faf8d2a3bde1892/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3c212c5527f901fcb44d59d031695248762c340", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3c212c5527f901fcb44d59d031695248762c340", "html_url": "https://github.com/rust-lang/rust/commit/d3c212c5527f901fcb44d59d031695248762c340"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "a79f3271fcb180da46f69e3080ce77c834005e70", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/33bf81eec018ec717bffc4468faf8d2a3bde1892/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33bf81eec018ec717bffc4468faf8d2a3bde1892/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=33bf81eec018ec717bffc4468faf8d2a3bde1892", "patch": "@@ -379,14 +379,20 @@ pub fn compile(\n         let allow_internal_unstable = attr::find_by_name(&def.attrs, \"allow_internal_unstable\")\n             .map_or(Vec::new(), |attr| attr\n                 .meta_item_list()\n-                .unwrap_or_else(|| sess.span_diagnostic.span_bug(\n-                    attr.span, \"allow_internal_unstable expects list of feature names\",\n-                ))\n-                .iter()\n-                .map(|it| it.name().unwrap_or_else(|| sess.span_diagnostic.span_bug(\n-                    it.span, \"allow internal unstable expects feature names\",\n-                )))\n-                .collect()\n+                .map(|list| list.iter()\n+                    .map(|it| it.name().unwrap_or_else(|| sess.span_diagnostic.span_bug(\n+                        it.span, \"allow internal unstable expects feature names\",\n+                    )))\n+                    .collect()\n+                )\n+                .unwrap_or_else(|| {\n+                    sess.span_diagnostic.span_warn(\n+                        attr.span, \"allow_internal_unstable expects list of feature names. In the \\\n+                        future this will become a hard error. Please use `allow_internal_unstable(\\\n+                        foo, bar)` to only allow the `foo` and `bar` features\",\n+                    );\n+                    vec![Symbol::intern(\"allow_internal_unstable_backcompat_hack\")]\n+                })\n             );\n         let allow_internal_unsafe = attr::contains_name(&def.attrs, \"allow_internal_unsafe\");\n         let mut local_inner_macros = false;"}, {"sha": "08f1473200c1eedcb32631a0c48224f641d00382", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/33bf81eec018ec717bffc4468faf8d2a3bde1892/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33bf81eec018ec717bffc4468faf8d2a3bde1892/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=33bf81eec018ec717bffc4468faf8d2a3bde1892", "patch": "@@ -1091,7 +1091,8 @@ pub const BUILTIN_ATTRIBUTES: &[(&str, AttributeType, AttributeTemplate, Attribu\n                                               stable\",\n                                              cfg_fn!(profiler_runtime))),\n \n-    (\"allow_internal_unstable\", Normal, template!(List: \"feat1, feat2\"), Gated(Stability::Unstable,\n+    (\"allow_internal_unstable\", Normal, template!(Word, List: \"feat1, feat2\"),\n+                                              Gated(Stability::Unstable,\n                                               \"allow_internal_unstable\",\n                                               EXPLAIN_ALLOW_INTERNAL_UNSTABLE,\n                                               cfg_fn!(allow_internal_unstable))),"}, {"sha": "87c4d02fa4f3aa797787c873b41a1f456f66a0e9", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/33bf81eec018ec717bffc4468faf8d2a3bde1892/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33bf81eec018ec717bffc4468faf8d2a3bde1892/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=33bf81eec018ec717bffc4468faf8d2a3bde1892", "patch": "@@ -387,7 +387,10 @@ impl Span {\n     /// `#[allow_internal_unstable]`).\n     pub fn allows_unstable(&self, feature: &str) -> bool {\n         match self.ctxt().outer().expn_info() {\n-            Some(info) => info.allow_internal_unstable.iter().any(|&f| f == feature),\n+            Some(info) => info\n+                .allow_internal_unstable\n+                .iter()\n+                .any(|&f| f == feature || f == \"allow_internal_unstable_backcompat_hack\"),\n             None => false,\n         }\n     }"}]}