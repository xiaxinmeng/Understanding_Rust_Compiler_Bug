{"sha": "4ebd5536b4db64fcf4ae4f54437162db4f37afe9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlYmQ1NTM2YjRkYjY0ZmNmNGFlNGY1NDQzNzE2MmRiNGYzN2FmZTk=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-31T08:49:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-31T08:49:32Z"}, "message": "Rollup merge of #77099 - tspiteri:exp_m1-examples, r=m-ou-se\n\nmake exp_m1 and ln_1p examples more representative of use\n\nWith this PR, the examples for `exp_m1` would fail if `x.exp() - 1.0` is used instead of `x.exp_m1()`, and the examples for `ln_1p` would fail if `(x + 1.0).ln()` is used instead of `x.ln_1p()`.", "tree": {"sha": "2d8bc3d19d8df9b97ce63f59d0ad6143729006e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d8bc3d19d8df9b97ce63f59d0ad6143729006e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ebd5536b4db64fcf4ae4f54437162db4f37afe9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfnSUdCRBK7hj4Ov3rIwAAdHIIAGWdg9c+NiVwUBMMHlbFzT4/\nTzgANjF4c2RO7p1j2EePGSIEZKfXAQ1XOfZCXK86Aeoq6BpJCpCSAJPs5Yh8326P\npT0YtpY2/+xo2UrdpYk2Cgt2QdkduZnE53GZd0BjaDDcAx1IAxpUm0ws+0hQ2CdO\nsPv/Xh0DH1rhYvisj9l62sB2DkyNWWCprfcCywnnOlJGdMf+ICEwMT4ajjjZvDvw\nQHpyTyStROK+8C3Th3z3LQhetMUIp0Wekl741VA1u67zs2HXx7Q7muIU+wYyCRSD\nQwNtIvaMbCbtcn7HfWy0S9PK2u74nZ9WMgoxsb0TX+k7PDr0bzv6Y8MI/qyr0Ss=\n=GdZI\n-----END PGP SIGNATURE-----\n", "payload": "tree 2d8bc3d19d8df9b97ce63f59d0ad6143729006e2\nparent 76b8b00b4ff09b958e9ebcaa851f5dcb7b827f8a\nparent 50d3ddcb0cbc36f782fa5939d1ef24422f6902d4\nauthor Mara Bos <m-ou.se@m-ou.se> 1604134172 +0100\ncommitter GitHub <noreply@github.com> 1604134172 +0100\n\nRollup merge of #77099 - tspiteri:exp_m1-examples, r=m-ou-se\n\nmake exp_m1 and ln_1p examples more representative of use\n\nWith this PR, the examples for `exp_m1` would fail if `x.exp() - 1.0` is used instead of `x.exp_m1()`, and the examples for `ln_1p` would fail if `(x + 1.0).ln()` is used instead of `x.ln_1p()`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ebd5536b4db64fcf4ae4f54437162db4f37afe9", "html_url": "https://github.com/rust-lang/rust/commit/4ebd5536b4db64fcf4ae4f54437162db4f37afe9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ebd5536b4db64fcf4ae4f54437162db4f37afe9/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76b8b00b4ff09b958e9ebcaa851f5dcb7b827f8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/76b8b00b4ff09b958e9ebcaa851f5dcb7b827f8a", "html_url": "https://github.com/rust-lang/rust/commit/76b8b00b4ff09b958e9ebcaa851f5dcb7b827f8a"}, {"sha": "50d3ddcb0cbc36f782fa5939d1ef24422f6902d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/50d3ddcb0cbc36f782fa5939d1ef24422f6902d4", "html_url": "https://github.com/rust-lang/rust/commit/50d3ddcb0cbc36f782fa5939d1ef24422f6902d4"}], "stats": {"total": 36, "additions": 20, "deletions": 16}, "files": [{"sha": "2a54b117ff4f8eab5bd2be2d4ca340d27f795a4f", "filename": "library/std/src/f32.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4ebd5536b4db64fcf4ae4f54437162db4f37afe9/library%2Fstd%2Fsrc%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ebd5536b4db64fcf4ae4f54437162db4f37afe9/library%2Fstd%2Fsrc%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ff32.rs?ref=4ebd5536b4db64fcf4ae4f54437162db4f37afe9", "patch": "@@ -719,12 +719,13 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// let x = 6.0f32;\n+    /// let x = 1e-8_f32;\n     ///\n-    /// // e^(ln(6)) - 1\n-    /// let abs_difference = (x.ln().exp_m1() - 5.0).abs();\n+    /// // for very small x, e^x is approximately 1 + x + x^2 / 2\n+    /// let approx = x + x * x / 2.0;\n+    /// let abs_difference = (x.exp_m1() - approx).abs();\n     ///\n-    /// assert!(abs_difference <= f32::EPSILON);\n+    /// assert!(abs_difference < 1e-10);\n     /// ```\n     #[must_use = \"method returns a new number and does not mutate the original value\"]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -739,12 +740,13 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// let x = std::f32::consts::E - 1.0;\n+    /// let x = 1e-8_f32;\n     ///\n-    /// // ln(1 + (e - 1)) == ln(e) == 1\n-    /// let abs_difference = (x.ln_1p() - 1.0).abs();\n+    /// // for very small x, ln(1 + x) is approximately x - x^2 / 2\n+    /// let approx = x - x * x / 2.0;\n+    /// let abs_difference = (x.ln_1p() - approx).abs();\n     ///\n-    /// assert!(abs_difference <= f32::EPSILON);\n+    /// assert!(abs_difference < 1e-10);\n     /// ```\n     #[must_use = \"method returns a new number and does not mutate the original value\"]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "363d1a0047613134669dfb8f3de7745c45d4d43d", "filename": "library/std/src/f64.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4ebd5536b4db64fcf4ae4f54437162db4f37afe9/library%2Fstd%2Fsrc%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ebd5536b4db64fcf4ae4f54437162db4f37afe9/library%2Fstd%2Fsrc%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ff64.rs?ref=4ebd5536b4db64fcf4ae4f54437162db4f37afe9", "patch": "@@ -721,12 +721,13 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// let x = 7.0_f64;\n+    /// let x = 1e-16_f64;\n     ///\n-    /// // e^(ln(7)) - 1\n-    /// let abs_difference = (x.ln().exp_m1() - 6.0).abs();\n+    /// // for very small x, e^x is approximately 1 + x + x^2 / 2\n+    /// let approx = x + x * x / 2.0;\n+    /// let abs_difference = (x.exp_m1() - approx).abs();\n     ///\n-    /// assert!(abs_difference < 1e-10);\n+    /// assert!(abs_difference < 1e-20);\n     /// ```\n     #[must_use = \"method returns a new number and does not mutate the original value\"]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -741,12 +742,13 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// let x = std::f64::consts::E - 1.0;\n+    /// let x = 1e-16_f64;\n     ///\n-    /// // ln(1 + (e - 1)) == ln(e) == 1\n-    /// let abs_difference = (x.ln_1p() - 1.0).abs();\n+    /// // for very small x, ln(1 + x) is approximately x - x^2 / 2\n+    /// let approx = x - x * x / 2.0;\n+    /// let abs_difference = (x.ln_1p() - approx).abs();\n     ///\n-    /// assert!(abs_difference < 1e-10);\n+    /// assert!(abs_difference < 1e-20);\n     /// ```\n     #[must_use = \"method returns a new number and does not mutate the original value\"]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}