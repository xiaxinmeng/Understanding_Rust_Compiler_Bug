{"sha": "1e005af31b078f584f7adbdebc505ba0cca52706", "node_id": "C_kwDOAAsO6NoAKDFlMDA1YWYzMWIwNzhmNTg0ZjdhZGJkZWJjNTA1YmEwY2NhNTI3MDY", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-08-28T08:34:19Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-08-28T08:34:19Z"}, "message": "Remove Attrs type alias", "tree": {"sha": "5daa24157140cd81565f57b7adc44395510a8a44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5daa24157140cd81565f57b7adc44395510a8a44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e005af31b078f584f7adbdebc505ba0cca52706", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e005af31b078f584f7adbdebc505ba0cca52706", "html_url": "https://github.com/rust-lang/rust/commit/1e005af31b078f584f7adbdebc505ba0cca52706", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e005af31b078f584f7adbdebc505ba0cca52706/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c07a8b4e09f356c7468b69c50cac7fc5b5000b8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c07a8b4e09f356c7468b69c50cac7fc5b5000b8a", "html_url": "https://github.com/rust-lang/rust/commit/c07a8b4e09f356c7468b69c50cac7fc5b5000b8a"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "31b805f2ed7edf919a82ff6d41b064158010b6c6", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1e005af31b078f584f7adbdebc505ba0cca52706/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e005af31b078f584f7adbdebc505ba0cca52706/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=1e005af31b078f584f7adbdebc505ba0cca52706", "patch": "@@ -24,8 +24,6 @@ use crate::clean::{\n use crate::core::DocContext;\n use crate::formats::item_type::ItemType;\n \n-type Attrs<'hir> = &'hir [ast::Attribute];\n-\n /// Attempt to inline a definition into this AST.\n ///\n /// This function will fetch the definition specified, and if it is\n@@ -46,7 +44,7 @@ pub(crate) fn try_inline(\n     import_def_id: Option<DefId>,\n     res: Res,\n     name: Symbol,\n-    attrs: Option<Attrs<'_>>,\n+    attrs: Option<&[ast::Attribute]>,\n     visited: &mut FxHashSet<DefId>,\n ) -> Option<Vec<clean::Item>> {\n     let did = res.opt_def_id()?;\n@@ -172,7 +170,7 @@ pub(crate) fn try_inline_glob(\n     }\n }\n \n-pub(crate) fn load_attrs<'hir>(cx: &DocContext<'hir>, did: DefId) -> Attrs<'hir> {\n+pub(crate) fn load_attrs<'hir>(cx: &DocContext<'hir>, did: DefId) -> &'hir [ast::Attribute] {\n     cx.tcx.get_attrs_unchecked(did)\n }\n \n@@ -287,7 +285,7 @@ pub(crate) fn build_impls(\n     cx: &mut DocContext<'_>,\n     parent_module: Option<DefId>,\n     did: DefId,\n-    attrs: Option<Attrs<'_>>,\n+    attrs: Option<&[ast::Attribute]>,\n     ret: &mut Vec<clean::Item>,\n ) {\n     let _prof_timer = cx.tcx.sess.prof.generic_activity(\"build_inherent_impls\");\n@@ -303,8 +301,8 @@ pub(crate) fn build_impls(\n pub(crate) fn merge_attrs(\n     cx: &mut DocContext<'_>,\n     parent_module: Option<DefId>,\n-    old_attrs: Attrs<'_>,\n-    new_attrs: Option<Attrs<'_>>,\n+    old_attrs: &[ast::Attribute],\n+    new_attrs: Option<&[ast::Attribute]>,\n ) -> (clean::Attributes, Option<Arc<clean::cfg::Cfg>>) {\n     // NOTE: If we have additional attributes (from a re-export),\n     // always insert them first. This ensure that re-export\n@@ -331,7 +329,7 @@ pub(crate) fn build_impl(\n     cx: &mut DocContext<'_>,\n     parent_module: Option<DefId>,\n     did: DefId,\n-    attrs: Option<Attrs<'_>>,\n+    attrs: Option<&[ast::Attribute]>,\n     ret: &mut Vec<clean::Item>,\n ) {\n     if !cx.inlined.insert(did.into()) {"}]}