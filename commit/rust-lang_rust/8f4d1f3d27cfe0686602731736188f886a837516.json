{"sha": "8f4d1f3d27cfe0686602731736188f886a837516", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmNGQxZjNkMjdjZmUwNjg2NjAyNzMxNzM2MTg4Zjg4NmE4Mzc1MTY=", "commit": {"author": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-01-24T04:59:18Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-01-24T06:28:25Z"}, "message": "Added str::from_bytes (which is UTF-8 safe)", "tree": {"sha": "55e7e0bec57026017df642a701450a1295403680", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55e7e0bec57026017df642a701450a1295403680"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f4d1f3d27cfe0686602731736188f886a837516", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f4d1f3d27cfe0686602731736188f886a837516", "html_url": "https://github.com/rust-lang/rust/commit/8f4d1f3d27cfe0686602731736188f886a837516", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f4d1f3d27cfe0686602731736188f886a837516/comments", "author": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7608a06b339485949ae03f05b7fd0ff4f25bfa41", "url": "https://api.github.com/repos/rust-lang/rust/commits/7608a06b339485949ae03f05b7fd0ff4f25bfa41", "html_url": "https://github.com/rust-lang/rust/commit/7608a06b339485949ae03f05b7fd0ff4f25bfa41"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "391e44125d6cec9bba9f85cfe773645efa619f1a", "filename": "src/libcore/str.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/8f4d1f3d27cfe0686602731736188f886a837516/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f4d1f3d27cfe0686602731736188f886a837516/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=8f4d1f3d27cfe0686602731736188f886a837516", "patch": "@@ -13,6 +13,7 @@ export eq, lteq, hash, is_empty, is_not_empty, is_whitespace, byte_len,\n        push_char, is_utf8, from_chars, to_chars, char_len, char_len_range,\n        char_at, bytes, is_ascii, shift_byte, pop_byte,\n        unsafe_from_byte, unsafe_from_bytes, from_char, char_range_at,\n+       from_bytes,\n        from_cstr, sbuf, as_buf, push_byte, utf8_char_width, safe_slice,\n        contains, iter_chars, chars_iter, bytes_iter, words_iter, lines_iter,\n        loop_chars, loop_chars_sub, escape, any, all, map, windowed;\n@@ -191,6 +192,19 @@ fn unsafe_from_bytes(v: [const u8]) -> str unsafe {\n     ret scopy;\n }\n \n+/*\n+Function: from_bytes\n+\n+Safely convert a vector of bytes to a UTF-8 string, or error\n+*/\n+fn from_bytes(vv: [u8]) -> result::t<str, str> {\n+   if is_utf8(vv) {\n+      ret result::ok(unsafe_from_bytes(vv));\n+   } else {\n+      ret result::err(\"vector doesn't contain valid UTF-8\");\n+   }\n+}\n+\n /*\n Function: unsafe_from_byte\n \n@@ -1594,6 +1608,23 @@ mod tests {\n         assert (b == \"AAAAAAA\");\n     }\n \n+    #[test]\n+    fn test_from_bytes() {\n+        let ss = \"\u0e28\u0e44\u0e17\u0e22\u4e2d\u534eVi\u1ec7t Nam\";\n+        let bb = [0xe0_u8, 0xb8_u8, 0xa8_u8,\n+                  0xe0_u8, 0xb9_u8, 0x84_u8,\n+                  0xe0_u8, 0xb8_u8, 0x97_u8,\n+                  0xe0_u8, 0xb8_u8, 0xa2_u8,\n+                  0xe4_u8, 0xb8_u8, 0xad_u8,\n+                  0xe5_u8, 0x8d_u8, 0x8e_u8,\n+                  0x56_u8, 0x69_u8, 0xe1_u8,\n+                  0xbb_u8, 0x87_u8, 0x74_u8,\n+                  0x20_u8, 0x4e_u8, 0x61_u8,\n+                  0x6d_u8];\n+\n+         assert ss == result::get(from_bytes(bb));\n+    }\n+\n     #[test]\n     fn test_from_cstr() unsafe {\n         let a = [65u8, 65u8, 65u8, 65u8, 65u8, 65u8, 65u8, 0u8];"}]}