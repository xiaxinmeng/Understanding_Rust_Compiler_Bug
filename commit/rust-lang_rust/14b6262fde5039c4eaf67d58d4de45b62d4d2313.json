{"sha": "14b6262fde5039c4eaf67d58d4de45b62d4d2313", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0YjYyNjJmZGU1MDM5YzRlYWY2N2Q1OGQ0ZGU0NWI2MmQ0ZDIzMTM=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-03T10:45:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-03T10:45:45Z"}, "message": "Rollup merge of #48569 - Phlosioneer:x-py-help-optimization, r=petrochenkov\n\nImprove --help performance for x.py\n\nSince compiling the bootstrap command doesn't require any submodules,\nwe can skip updating submodules when a --help command is passed in.\nOn my machine, this saves 1 minute if the submodules are already\ndownloaded, and 10 minutes if run on a clean repo.\n\nThis commit also adds a message before compiling/downloading anything\nwhen a --help command is passed in, to tell the user WHY --help\ntakes so long to complete. It also points the user to the bootstrap\nREADME.md for faster help.\n\nFinally, this fixes one warning message that still referenced using\nmake instead of x.py, even though x.py is now the standard way of\nbuilding rust.\n\nCloses #37305", "tree": {"sha": "ad96e31a15f2991b218c4216bb6effbdddf7a4a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad96e31a15f2991b218c4216bb6effbdddf7a4a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14b6262fde5039c4eaf67d58d4de45b62d4d2313", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJamnzZCRBK7hj4Ov3rIwAAdHIIAKv2MLP+3RcQqUwVnKCY77OV\nylkZ9q9kwdBSegYSQfMC4OaSocmv/5bOSzrcLmNPkaUdFyH9XGOJRz2IhSWYGOrv\nVxC4XHTt7YLBu0zoqO5pgXqxhgwvEjCdern8BqDsYJ4eXverdxeZbKlzcF1iFsdM\nMzBmNtZm3N+6xUe3cj91s3TcZq2bAMW/QVHucZ+MjMwDGZ58CFFj7MU8ZuD27IjR\nqb5XqeiHoyB6NRGPDBJRc2dxikMF1OaCXw1GHQcWaTucdrdzhPeveImqRVYwOuy4\nq/aaqGWFMB5YnGOHjh97aIVufiXKbeWxPkBXTUrBHEPxCzD8JeuddLBYzD6wb3U=\n=0Y6v\n-----END PGP SIGNATURE-----\n", "payload": "tree ad96e31a15f2991b218c4216bb6effbdddf7a4a3\nparent ae6fe8f283503277504fa60171224d5035549988\nparent 2269ff521fe2a945e462d5156799011c5fce2966\nauthor kennytm <kennytm@gmail.com> 1520073945 +0800\ncommitter GitHub <noreply@github.com> 1520073945 +0800\n\nRollup merge of #48569 - Phlosioneer:x-py-help-optimization, r=petrochenkov\n\nImprove --help performance for x.py\n\nSince compiling the bootstrap command doesn't require any submodules,\nwe can skip updating submodules when a --help command is passed in.\nOn my machine, this saves 1 minute if the submodules are already\ndownloaded, and 10 minutes if run on a clean repo.\n\nThis commit also adds a message before compiling/downloading anything\nwhen a --help command is passed in, to tell the user WHY --help\ntakes so long to complete. It also points the user to the bootstrap\nREADME.md for faster help.\n\nFinally, this fixes one warning message that still referenced using\nmake instead of x.py, even though x.py is now the standard way of\nbuilding rust.\n\nCloses #37305\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14b6262fde5039c4eaf67d58d4de45b62d4d2313", "html_url": "https://github.com/rust-lang/rust/commit/14b6262fde5039c4eaf67d58d4de45b62d4d2313", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14b6262fde5039c4eaf67d58d4de45b62d4d2313/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae6fe8f283503277504fa60171224d5035549988", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae6fe8f283503277504fa60171224d5035549988", "html_url": "https://github.com/rust-lang/rust/commit/ae6fe8f283503277504fa60171224d5035549988"}, {"sha": "2269ff521fe2a945e462d5156799011c5fce2966", "url": "https://api.github.com/repos/rust-lang/rust/commits/2269ff521fe2a945e462d5156799011c5fce2966", "html_url": "https://github.com/rust-lang/rust/commit/2269ff521fe2a945e462d5156799011c5fce2966"}], "stats": {"total": 40, "additions": 15, "deletions": 25}, "files": [{"sha": "cc5ee53affc66a4db7dd4564098abde5c49afb62", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 15, "deletions": 25, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/14b6262fde5039c4eaf67d58d4de45b62d4d2313/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/14b6262fde5039c4eaf67d58d4de45b62d4d2313/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=14b6262fde5039c4eaf67d58d4de45b62d4d2313", "patch": "@@ -314,7 +314,6 @@ def __init__(self):\n         self.build_dir = os.path.join(os.getcwd(), \"build\")\n         self.clean = False\n         self.config_toml = ''\n-        self.printed = False\n         self.rust_root = os.path.abspath(os.path.join(__file__, '../../..'))\n         self.use_locked_deps = ''\n         self.use_vendored_sources = ''\n@@ -336,7 +335,6 @@ def download_stage0(self):\n         if self.rustc().startswith(self.bin_root()) and \\\n                 (not os.path.exists(self.rustc()) or\n                  self.program_out_of_date(self.rustc_stamp())):\n-            self.print_what_bootstrap_means()\n             if os.path.exists(self.bin_root()):\n                 shutil.rmtree(self.bin_root())\n             filename = \"rust-std-{}-{}.tar.gz\".format(\n@@ -354,7 +352,6 @@ def download_stage0(self):\n         if self.cargo().startswith(self.bin_root()) and \\\n                 (not os.path.exists(self.cargo()) or\n                  self.program_out_of_date(self.cargo_stamp())):\n-            self.print_what_bootstrap_means()\n             filename = \"cargo-{}-{}.tar.gz\".format(cargo_channel, self.build)\n             self._download_stage0_helper(filename, \"cargo\")\n             self.fix_executable(\"{}/bin/cargo\".format(self.bin_root()))\n@@ -555,23 +552,6 @@ def exe_suffix():\n             return '.exe'\n         return ''\n \n-    def print_what_bootstrap_means(self):\n-        \"\"\"Prints more information about the build system\"\"\"\n-        if hasattr(self, 'printed'):\n-            return\n-        self.printed = True\n-        if os.path.exists(self.bootstrap_binary()):\n-            return\n-        if '--help' not in sys.argv or len(sys.argv) == 1:\n-            return\n-\n-        print('info: the build system for Rust is written in Rust, so this')\n-        print('      script is now going to download a stage0 rust compiler')\n-        print('      and then compile the build system itself')\n-        print('')\n-        print('info: in the meantime you can read more about rustbuild at')\n-        print('      src/bootstrap/README.md before the download finishes')\n-\n     def bootstrap_binary(self):\n         \"\"\"Return the path of the boostrap binary\n \n@@ -585,7 +565,6 @@ def bootstrap_binary(self):\n \n     def build_bootstrap(self):\n         \"\"\"Build bootstrap\"\"\"\n-        self.print_what_bootstrap_means()\n         build_dir = os.path.join(self.build_dir, \"bootstrap\")\n         if self.clean and os.path.exists(build_dir):\n             shutil.rmtree(build_dir)\n@@ -670,8 +649,16 @@ def set_dev_environment(self):\n         self._download_url = 'https://dev-static.rust-lang.org'\n \n \n-def bootstrap():\n+def bootstrap(help_triggered):\n     \"\"\"Configure, fetch, build and run the initial bootstrap\"\"\"\n+\n+    # If the user is asking for help, let them know that the whole download-and-build\n+    # process has to happen before anything is printed out.\n+    if help_triggered:\n+        print(\"info: Downloading and building bootstrap before processing --help\")\n+        print(\"      command. See src/bootstrap/README.md for help with common\")\n+        print(\"      commands.\")\n+\n     parser = argparse.ArgumentParser(description='Build rust')\n     parser.add_argument('--config')\n     parser.add_argument('--build')\n@@ -708,7 +695,7 @@ def bootstrap():\n             print('      and so in order to preserve your $HOME this will now')\n             print('      use vendored sources by default. Note that if this')\n             print('      does not work you should run a normal build first')\n-            print('      before running a command like `sudo make install`')\n+            print('      before running a command like `sudo ./x.py install`')\n \n     if build.use_vendored_sources:\n         if not os.path.exists('.cargo'):\n@@ -734,7 +721,10 @@ def bootstrap():\n     if 'dev' in data:\n         build.set_dev_environment()\n \n-    build.update_submodules()\n+    # No help text depends on submodules. This check saves ~1 minute of git commands, even if\n+    # all the submodules are present and downloaded!\n+    if not help_triggered:\n+        build.update_submodules()\n \n     # Fetch/build the bootstrap\n     build.build = args.build or build.build_triple()\n@@ -760,7 +750,7 @@ def main():\n     help_triggered = (\n         '-h' in sys.argv) or ('--help' in sys.argv) or (len(sys.argv) == 1)\n     try:\n-        bootstrap()\n+        bootstrap(help_triggered)\n         if not help_triggered:\n             print(\"Build completed successfully in {}\".format(\n                 format_build_time(time() - start_time)))"}]}