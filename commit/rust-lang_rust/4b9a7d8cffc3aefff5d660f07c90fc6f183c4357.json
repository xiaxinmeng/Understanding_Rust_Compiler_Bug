{"sha": "4b9a7d8cffc3aefff5d660f07c90fc6f183c4357", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiOWE3ZDhjZmZjM2FlZmZmNWQ2NjBmMDdjOTBmYzZmMTgzYzQzNTc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-04T11:29:15Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-06T08:24:26Z"}, "message": "fix error message details", "tree": {"sha": "ceb5c49fd60ab8dc57e74f2376ea51f213492aef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ceb5c49fd60ab8dc57e74f2376ea51f213492aef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b9a7d8cffc3aefff5d660f07c90fc6f183c4357", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b9a7d8cffc3aefff5d660f07c90fc6f183c4357", "html_url": "https://github.com/rust-lang/rust/commit/4b9a7d8cffc3aefff5d660f07c90fc6f183c4357", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b9a7d8cffc3aefff5d660f07c90fc6f183c4357/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f8cb476eabe3b809907890e69fbf3003a8bb8dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f8cb476eabe3b809907890e69fbf3003a8bb8dc", "html_url": "https://github.com/rust-lang/rust/commit/1f8cb476eabe3b809907890e69fbf3003a8bb8dc"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "dea5f1539b3e2c450c3ce144406f2ff41d90b119", "filename": "src/operator.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4b9a7d8cffc3aefff5d660f07c90fc6f183c4357/src%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b9a7d8cffc3aefff5d660f07c90fc6f183c4357/src%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foperator.rs?ref=4b9a7d8cffc3aefff5d660f07c90fc6f183c4357", "patch": "@@ -1,6 +1,6 @@\n use std::convert::TryFrom;\n \n-use rustc::ty::{Ty, layout::{Size, Align, LayoutOf}};\n+use rustc::ty::{Ty, layout::{Size, LayoutOf}};\n use rustc::mir;\n \n use crate::*;\n@@ -110,14 +110,15 @@ impl<'mir, 'tcx> EvalContextExt<'tcx> for super::MiriEvalContext<'mir, 'tcx> {\n         let offset = offset\n             .checked_mul(pointee_size)\n             .ok_or_else(|| err_panic!(Overflow(mir::BinOp::Mul)))?;\n-        // We do this forst, to rule out overflows.\n+        // We do this first, to rule out overflows.\n         let offset_ptr = ptr.ptr_signed_offset(offset, self)?;\n         // What we need to check is that starting at `ptr`,\n         // we could do an access of size `offset`. Alignment does not matter.\n-        self.memory.check_ptr_access(\n+        self.memory.check_ptr_access_align(\n             ptr,\n             Size::from_bytes(u64::try_from(offset).unwrap()),\n-            Align::from_bytes(1).unwrap(),\n+            None,\n+            CheckInAllocMsg::InboundsTest,\n         )?;\n         // That's it!\n         Ok(offset_ptr)"}]}