{"sha": "e1aa45b64d29ef03511c4fbd359ee42c6bb342ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxYWE0NWI2NGQyOWVmMDM1MTFjNGZiZDM1OWVlNDJjNmJiMzQyYmE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-06-09T12:47:01Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-06-09T12:47:01Z"}, "message": "Use explicit drop impl", "tree": {"sha": "ed1bdfe3253c16b952439b8a7475c2f472e29c92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed1bdfe3253c16b952439b8a7475c2f472e29c92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1aa45b64d29ef03511c4fbd359ee42c6bb342ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1aa45b64d29ef03511c4fbd359ee42c6bb342ba", "html_url": "https://github.com/rust-lang/rust/commit/e1aa45b64d29ef03511c4fbd359ee42c6bb342ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1aa45b64d29ef03511c4fbd359ee42c6bb342ba/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bf839e87086d1d636b22a938845bd5c33a39ca1", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bf839e87086d1d636b22a938845bd5c33a39ca1", "html_url": "https://github.com/rust-lang/rust/commit/2bf839e87086d1d636b22a938845bd5c33a39ca1"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "6bd8fc9e5eee908d11069c3fc55be5be588a278b", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e1aa45b64d29ef03511c4fbd359ee42c6bb342ba/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1aa45b64d29ef03511c4fbd359ee42c6bb342ba/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=e1aa45b64d29ef03511c4fbd359ee42c6bb342ba", "patch": "@@ -93,17 +93,22 @@ mod boxed_resolver {\n \n     pub struct BoxedResolver(Pin<Box<BoxedResolverInner>>);\n \n-    // Note: Drop order is important to prevent dangling references. Resolver must be dropped first,\n-    // then resolver_arenas and finally session.\n-    // The drop order is defined to be from top to bottom in RFC1857, so there is no need for\n-    // ManuallyDrop for as long as the fields are not reordered.\n     struct BoxedResolverInner {\n-        resolver: Option<Resolver<'static>>,\n-        resolver_arenas: ResolverArenas<'static>,\n         session: Lrc<Session>,\n+        resolver_arenas: Option<ResolverArenas<'static>>,\n+        resolver: Option<Resolver<'static>>,\n         _pin: PhantomPinned,\n     }\n \n+    // Note: Drop order is important to prevent dangling references. Resolver must be dropped first,\n+    // then resolver_arenas and finally session.\n+    impl Drop for BoxedResolverInner {\n+        fn drop(&mut self) {\n+            self.resolver.take();\n+            self.resolver_arenas.take();\n+        }\n+    }\n+\n     impl BoxedResolver {\n         pub(super) fn new<F>(session: Lrc<Session>, make_resolver: F) -> Result<(ast::Crate, Self)>\n         where\n@@ -114,15 +119,15 @@ mod boxed_resolver {\n         {\n             let mut boxed_resolver = Box::new(BoxedResolverInner {\n                 session,\n-                resolver_arenas: Resolver::arenas(),\n+                resolver_arenas: Some(Resolver::arenas()),\n                 resolver: None,\n                 _pin: PhantomPinned,\n             });\n             unsafe {\n                 let (crate_, resolver) = make_resolver(\n                     std::mem::transmute::<&Session, &Session>(&boxed_resolver.session),\n                     std::mem::transmute::<&ResolverArenas<'_>, &ResolverArenas<'_>>(\n-                        &boxed_resolver.resolver_arenas,\n+                        boxed_resolver.resolver_arenas.as_ref().unwrap(),\n                     ),\n                 )?;\n                 boxed_resolver.resolver ="}]}