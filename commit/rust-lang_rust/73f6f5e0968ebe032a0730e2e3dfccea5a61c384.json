{"sha": "73f6f5e0968ebe032a0730e2e3dfccea5a61c384", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczZjZmNWUwOTY4ZWJlMDMyYTA3MzBlMmUzZGZjY2VhNWE2MWMzODQ=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-04-03T14:46:35Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-04-03T17:57:45Z"}, "message": "Sort enum suggestions", "tree": {"sha": "787a4eb946ff6b27724ee42f3ac23774b8b55841", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/787a4eb946ff6b27724ee42f3ac23774b8b55841"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73f6f5e0968ebe032a0730e2e3dfccea5a61c384", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73f6f5e0968ebe032a0730e2e3dfccea5a61c384", "html_url": "https://github.com/rust-lang/rust/commit/73f6f5e0968ebe032a0730e2e3dfccea5a61c384", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73f6f5e0968ebe032a0730e2e3dfccea5a61c384/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b946ecd02018d1671c990057d7136176df60da35", "url": "https://api.github.com/repos/rust-lang/rust/commits/b946ecd02018d1671c990057d7136176df60da35", "html_url": "https://github.com/rust-lang/rust/commit/b946ecd02018d1671c990057d7136176df60da35"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "e191fadc01bebafff32fa1ad1f7ad30f53fcaa5e", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/73f6f5e0968ebe032a0730e2e3dfccea5a61c384/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73f6f5e0968ebe032a0730e2e3dfccea5a61c384/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=73f6f5e0968ebe032a0730e2e3dfccea5a61c384", "patch": "@@ -2273,15 +2273,17 @@ impl<'a> Resolver<'a> {\n                 show_candidates(&mut err, &candidates, def.is_some());\n             } else if is_expected(Def::Enum(DefId::local(CRATE_DEF_INDEX))) {\n                 let enum_candidates = this.lookup_import_candidates(name, ns, is_enum_variant);\n-                for suggestion in enum_candidates {\n-                    let (variant_path, enum_path) = import_candidate_to_paths(&suggestion);\n+                let mut enum_candidates = enum_candidates.iter()\n+                    .map(|suggestion| import_candidate_to_paths(&suggestion)).collect::<Vec<_>>();\n+                enum_candidates.sort();\n+                for (sp, variant_path, enum_path) in enum_candidates {\n                     let msg = format!(\"there is an enum variant `{}`, did you mean to use `{}`?\",\n                                       variant_path,\n                                       enum_path);\n-                    if suggestion.path.span == DUMMY_SP {\n+                    if sp == DUMMY_SP {\n                         err.help(&msg);\n                     } else {\n-                        err.span_help(suggestion.path.span, &msg);\n+                        err.span_help(sp, &msg);\n                     }\n                 }\n             }\n@@ -3437,7 +3439,7 @@ fn path_names_to_string(path: &Path) -> String {\n }\n \n /// Get the path for an enum and the variant from an `ImportSuggestion` for an enum variant.\n-fn import_candidate_to_paths(suggestion: &ImportSuggestion) -> (String, String) {\n+fn import_candidate_to_paths(suggestion: &ImportSuggestion) -> (Span, String, String) {\n     let variant_path = &suggestion.path;\n     let variant_path_string = path_names_to_string(variant_path);\n \n@@ -3448,7 +3450,7 @@ fn import_candidate_to_paths(suggestion: &ImportSuggestion) -> (String, String)\n     };\n     let enum_path_string = path_names_to_string(&enum_path);\n \n-    (variant_path_string, enum_path_string)\n+    (suggestion.path.span, variant_path_string, enum_path_string)\n }\n \n "}, {"sha": "3d615785b25fa0828b606ea5686d80a26f9e5572", "filename": "src/test/ui/did_you_mean/issue-35675.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73f6f5e0968ebe032a0730e2e3dfccea5a61c384/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-35675.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/73f6f5e0968ebe032a0730e2e3dfccea5a61c384/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-35675.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-35675.stderr?ref=73f6f5e0968ebe032a0730e2e3dfccea5a61c384", "patch": "@@ -46,8 +46,8 @@ error[E0573]: expected type, found variant `Ok`\n 24 | fn foo() -> Ok {\n    |             ^^ not a type\n    |\n-   = help: there is an enum variant `std::result::Result::Ok`, did you mean to use `std::result::Result`?\n    = help: there is an enum variant `std::prelude::v1::Ok`, did you mean to use `std::prelude::v1`?\n+   = help: there is an enum variant `std::prelude::v1::Result::Ok`, did you mean to use `std::prelude::v1::Result`?\n \n error[E0412]: cannot find type `Variant3` in this scope\n   --> $DIR/issue-35675.rs:28:13\n@@ -67,8 +67,8 @@ error[E0573]: expected type, found variant `Some`\n 31 | fn qux() -> Some {\n    |             ^^^^ not a type\n    |\n-   = help: there is an enum variant `std::prelude::v1::Some`, did you mean to use `std::prelude::v1`?\n    = help: there is an enum variant `std::prelude::v1::Option::Some`, did you mean to use `std::prelude::v1::Option`?\n+   = help: there is an enum variant `std::prelude::v1::Some`, did you mean to use `std::prelude::v1`?\n \n error: aborting due to 7 previous errors\n "}]}