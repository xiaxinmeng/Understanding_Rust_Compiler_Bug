{"sha": "4e2822c5c28bb342e5862ba7cc0b90b865c68be1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlMjgyMmM1YzI4YmIzNDJlNTg2MmJhN2NjMGI5MGI4NjVjNjhiZTE=", "commit": {"author": {"name": "Marcin Fatyga", "email": "marcinf@google.com", "date": "2016-10-27T21:31:10Z"}, "committer": {"name": "Marcin Fatyga", "email": "marcinf@google.com", "date": "2016-10-27T21:31:10Z"}, "message": "Rename ordering chaining functions.", "tree": {"sha": "a6b5d883a7860bd27802043b9487d4039de8f5fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6b5d883a7860bd27802043b9487d4039de8f5fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e2822c5c28bb342e5862ba7cc0b90b865c68be1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e2822c5c28bb342e5862ba7cc0b90b865c68be1", "html_url": "https://github.com/rust-lang/rust/commit/4e2822c5c28bb342e5862ba7cc0b90b865c68be1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e2822c5c28bb342e5862ba7cc0b90b865c68be1/comments", "author": {"login": "rednum", "id": 754852, "node_id": "MDQ6VXNlcjc1NDg1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/754852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rednum", "html_url": "https://github.com/rednum", "followers_url": "https://api.github.com/users/rednum/followers", "following_url": "https://api.github.com/users/rednum/following{/other_user}", "gists_url": "https://api.github.com/users/rednum/gists{/gist_id}", "starred_url": "https://api.github.com/users/rednum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rednum/subscriptions", "organizations_url": "https://api.github.com/users/rednum/orgs", "repos_url": "https://api.github.com/users/rednum/repos", "events_url": "https://api.github.com/users/rednum/events{/privacy}", "received_events_url": "https://api.github.com/users/rednum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rednum", "id": 754852, "node_id": "MDQ6VXNlcjc1NDg1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/754852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rednum", "html_url": "https://github.com/rednum", "followers_url": "https://api.github.com/users/rednum/followers", "following_url": "https://api.github.com/users/rednum/following{/other_user}", "gists_url": "https://api.github.com/users/rednum/gists{/gist_id}", "starred_url": "https://api.github.com/users/rednum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rednum/subscriptions", "organizations_url": "https://api.github.com/users/rednum/orgs", "repos_url": "https://api.github.com/users/rednum/repos", "events_url": "https://api.github.com/users/rednum/events{/privacy}", "received_events_url": "https://api.github.com/users/rednum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "634715a736236ba797036d76aed872ff03277fd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/634715a736236ba797036d76aed872ff03277fd7", "html_url": "https://github.com/rust-lang/rust/commit/634715a736236ba797036d76aed872ff03277fd7"}], "stats": {"total": 64, "additions": 32, "deletions": 32}, "files": [{"sha": "31920fcb0f8c41c6b269dddaec18b43973927031", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4e2822c5c28bb342e5862ba7cc0b90b865c68be1/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e2822c5c28bb342e5862ba7cc0b90b865c68be1/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=4e2822c5c28bb342e5862ba7cc0b90b865c68be1", "patch": "@@ -256,26 +256,26 @@ impl Ordering {\n     ///\n     /// use std::cmp::Ordering;\n     ///\n-    /// let result = Ordering::Equal.or(Ordering::Less);\n+    /// let result = Ordering::Equal.then(Ordering::Less);\n     /// assert_eq!(result, Ordering::Less);\n     ///\n-    /// let result = Ordering::Less.or(Ordering::Equal);\n+    /// let result = Ordering::Less.then(Ordering::Equal);\n     /// assert_eq!(result, Ordering::Less);\n     ///\n-    /// let result = Ordering::Less.or(Ordering::Greater);\n+    /// let result = Ordering::Less.then(Ordering::Greater);\n     /// assert_eq!(result, Ordering::Less);\n     ///\n-    /// let result = Ordering::Equal.or(Ordering::Equal);\n+    /// let result = Ordering::Equal.then(Ordering::Equal);\n     /// assert_eq!(result, Ordering::Equal);\n     ///\n     /// let x: (i64, i64, i64) = (1, 2, 7);\n     /// let y: (i64, i64, i64) = (1, 5, 3);\n-    /// let result = x.0.cmp(&y.0).or(x.1.cmp(&y.1)).or(x.2.cmp(&y.2));\n+    /// let result = x.0.cmp(&y.0).then(x.1.cmp(&y.1)).then(x.2.cmp(&y.2));\n     ///\n     /// assert_eq!(result, Ordering::Less);\n     /// ```\n     #[unstable(feature = \"ordering_chaining\", issue = \"37053\")]\n-    pub fn or(self, other: Ordering) -> Ordering {\n+    pub fn then(self, other: Ordering) -> Ordering {\n         match self {\n             Equal => other,\n             _ => self,\n@@ -294,26 +294,26 @@ impl Ordering {\n     ///\n     /// use std::cmp::Ordering;\n     ///\n-    /// let result = Ordering::Equal.or_else(|| Ordering::Less);\n+    /// let result = Ordering::Equal.then_with(|| Ordering::Less);\n     /// assert_eq!(result, Ordering::Less);\n     ///\n-    /// let result = Ordering::Less.or_else(|| Ordering::Equal);\n+    /// let result = Ordering::Less.then_with(|| Ordering::Equal);\n     /// assert_eq!(result, Ordering::Less);\n     ///\n-    /// let result = Ordering::Less.or_else(|| Ordering::Greater);\n+    /// let result = Ordering::Less.then_with(|| Ordering::Greater);\n     /// assert_eq!(result, Ordering::Less);\n     ///\n-    /// let result = Ordering::Equal.or_else(|| Ordering::Equal);\n+    /// let result = Ordering::Equal.then_with(|| Ordering::Equal);\n     /// assert_eq!(result, Ordering::Equal);\n     ///\n     /// let x: (i64, i64, i64) = (1, 2, 7);\n     /// let y: (i64, i64, i64)  = (1, 5, 3);\n-    /// let result = x.0.cmp(&y.0).or_else(|| x.1.cmp(&y.1)).or_else(|| x.2.cmp(&y.2));\n+    /// let result = x.0.cmp(&y.0).then_with(|| x.1.cmp(&y.1)).then_with(|| x.2.cmp(&y.2));\n     ///\n     /// assert_eq!(result, Ordering::Less);\n     /// ```\n     #[unstable(feature = \"ordering_chaining\", issue = \"37053\")]\n-    pub fn or_else<F: FnOnce() -> Ordering>(self, f: F) -> Ordering {\n+    pub fn then_with<F: FnOnce() -> Ordering>(self, f: F) -> Ordering {\n         match self {\n             Equal => f(),\n             _ => self,"}, {"sha": "e3c65ad8b33c019378ad6e53cbcbdb3295f0ec71", "filename": "src/libcoretest/cmp.rs", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/4e2822c5c28bb342e5862ba7cc0b90b865c68be1/src%2Flibcoretest%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e2822c5c28bb342e5862ba7cc0b90b865c68be1/src%2Flibcoretest%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fcmp.rs?ref=4e2822c5c28bb342e5862ba7cc0b90b865c68be1", "patch": "@@ -42,29 +42,29 @@ fn test_ordering_order() {\n }\n \n #[test]\n-fn test_ordering_or() {\n-    assert_eq!(Equal.or(Less), Less);\n-    assert_eq!(Equal.or(Equal), Equal);\n-    assert_eq!(Equal.or(Greater), Greater);\n-    assert_eq!(Less.or(Less), Less);\n-    assert_eq!(Less.or(Equal), Less);\n-    assert_eq!(Less.or(Greater), Less);\n-    assert_eq!(Greater.or(Less), Greater);\n-    assert_eq!(Greater.or(Equal), Greater);\n-    assert_eq!(Greater.or(Greater), Greater);\n+fn test_ordering_then() {\n+    assert_eq!(Equal.then(Less), Less);\n+    assert_eq!(Equal.then(Equal), Equal);\n+    assert_eq!(Equal.then(Greater), Greater);\n+    assert_eq!(Less.then(Less), Less);\n+    assert_eq!(Less.then(Equal), Less);\n+    assert_eq!(Less.then(Greater), Less);\n+    assert_eq!(Greater.then(Less), Greater);\n+    assert_eq!(Greater.then(Equal), Greater);\n+    assert_eq!(Greater.then(Greater), Greater);\n }\n \n #[test]\n-fn test_ordering_or_else() {\n-    assert_eq!(Equal.or_else(|| Less), Less);\n-    assert_eq!(Equal.or_else(|| Equal), Equal);\n-    assert_eq!(Equal.or_else(|| Greater), Greater);\n-    assert_eq!(Less.or_else(|| Less), Less);\n-    assert_eq!(Less.or_else(|| Equal), Less);\n-    assert_eq!(Less.or_else(|| Greater), Less);\n-    assert_eq!(Greater.or_else(|| Less), Greater);\n-    assert_eq!(Greater.or_else(|| Equal), Greater);\n-    assert_eq!(Greater.or_else(|| Greater), Greater);\n+fn test_ordering_then_with() {\n+    assert_eq!(Equal.then_with(|| Less), Less);\n+    assert_eq!(Equal.then_with(|| Equal), Equal);\n+    assert_eq!(Equal.then_with(|| Greater), Greater);\n+    assert_eq!(Less.then_with(|| Less), Less);\n+    assert_eq!(Less.then_with(|| Equal), Less);\n+    assert_eq!(Less.then_with(|| Greater), Less);\n+    assert_eq!(Greater.then_with(|| Less), Greater);\n+    assert_eq!(Greater.then_with(|| Equal), Greater);\n+    assert_eq!(Greater.then_with(|| Greater), Greater);\n }\n \n #[test]"}]}