{"sha": "ef2c404e01108a7bd7465bd23d40ff989848bffd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmMmM0MDRlMDExMDhhN2JkNzQ2NWJkMjNkNDBmZjk4OTg0OGJmZmQ=", "commit": {"author": {"name": "Michael Arntzenius", "email": "daekharel@gmail.com", "date": "2012-11-29T03:55:51Z"}, "committer": {"name": "Michael Arntzenius", "email": "daekharel@gmail.com", "date": "2012-12-02T22:48:32Z"}, "message": "libcore/to_bytes.rs: fix IterBytes instances for pairs, triples to not cause ICE when used", "tree": {"sha": "82fb84a9c2e927d3e2e46c4646b903422c6428fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82fb84a9c2e927d3e2e46c4646b903422c6428fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef2c404e01108a7bd7465bd23d40ff989848bffd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef2c404e01108a7bd7465bd23d40ff989848bffd", "html_url": "https://github.com/rust-lang/rust/commit/ef2c404e01108a7bd7465bd23d40ff989848bffd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef2c404e01108a7bd7465bd23d40ff989848bffd/comments", "author": {"login": "rntz", "id": 16143, "node_id": "MDQ6VXNlcjE2MTQz", "avatar_url": "https://avatars.githubusercontent.com/u/16143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rntz", "html_url": "https://github.com/rntz", "followers_url": "https://api.github.com/users/rntz/followers", "following_url": "https://api.github.com/users/rntz/following{/other_user}", "gists_url": "https://api.github.com/users/rntz/gists{/gist_id}", "starred_url": "https://api.github.com/users/rntz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rntz/subscriptions", "organizations_url": "https://api.github.com/users/rntz/orgs", "repos_url": "https://api.github.com/users/rntz/repos", "events_url": "https://api.github.com/users/rntz/events{/privacy}", "received_events_url": "https://api.github.com/users/rntz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rntz", "id": 16143, "node_id": "MDQ6VXNlcjE2MTQz", "avatar_url": "https://avatars.githubusercontent.com/u/16143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rntz", "html_url": "https://github.com/rntz", "followers_url": "https://api.github.com/users/rntz/followers", "following_url": "https://api.github.com/users/rntz/following{/other_user}", "gists_url": "https://api.github.com/users/rntz/gists{/gist_id}", "starred_url": "https://api.github.com/users/rntz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rntz/subscriptions", "organizations_url": "https://api.github.com/users/rntz/orgs", "repos_url": "https://api.github.com/users/rntz/repos", "events_url": "https://api.github.com/users/rntz/events{/privacy}", "received_events_url": "https://api.github.com/users/rntz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d718bc292d342a99580ec971dc7e873e5fc6e5c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d718bc292d342a99580ec971dc7e873e5fc6e5c4", "html_url": "https://github.com/rust-lang/rust/commit/d718bc292d342a99580ec971dc7e873e5fc6e5c4"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "238b4342a6371f29f040f8f18cefae2ef4ebfbd4", "filename": "src/libcore/to_bytes.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ef2c404e01108a7bd7465bd23d40ff989848bffd/src%2Flibcore%2Fto_bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef2c404e01108a7bd7465bd23d40ff989848bffd/src%2Flibcore%2Fto_bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fto_bytes.rs?ref=ef2c404e01108a7bd7465bd23d40ff989848bffd", "patch": "@@ -194,19 +194,25 @@ impl<A: IterBytes> &[A]: IterBytes {\n impl<A: IterBytes, B: IterBytes> (A,B): IterBytes {\n   #[inline(always)]\n   pure fn iter_bytes(lsb0: bool, f: Cb) {\n-    let &(ref a, ref b) = &self;\n-    a.iter_bytes(lsb0, f);\n-    b.iter_bytes(lsb0, f);\n+    match self {\n+      (ref a, ref b) => {\n+        a.iter_bytes(lsb0, f);\n+        b.iter_bytes(lsb0, f);\n+      }\n+    }\n   }\n }\n \n impl<A: IterBytes, B: IterBytes, C: IterBytes> (A,B,C): IterBytes {\n   #[inline(always)]\n   pure fn iter_bytes(lsb0: bool, f: Cb) {\n-    let &(ref a, ref b, ref c) = &self;\n-    a.iter_bytes(lsb0, f);\n-    b.iter_bytes(lsb0, f);\n-    c.iter_bytes(lsb0, f);\n+    match self {\n+      (ref a, ref b, ref c) => {\n+        a.iter_bytes(lsb0, f);\n+        b.iter_bytes(lsb0, f);\n+        c.iter_bytes(lsb0, f);\n+      }\n+    }\n   }\n }\n "}]}