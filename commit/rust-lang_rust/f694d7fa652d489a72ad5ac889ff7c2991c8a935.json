{"sha": "f694d7fa652d489a72ad5ac889ff7c2991c8a935", "node_id": "C_kwDOAAsO6NoAKGY2OTRkN2ZhNjUyZDQ4OWE3MmFkNWFjODg5ZmY3YzI5OTFjOGE5MzU", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2021-12-15T20:16:41Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2021-12-15T21:32:05Z"}, "message": "Refactor release workflow", "tree": {"sha": "ed38a0e30c93a8517292a2e4b3518135c71bc8dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed38a0e30c93a8517292a2e4b3518135c71bc8dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f694d7fa652d489a72ad5ac889ff7c2991c8a935", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f694d7fa652d489a72ad5ac889ff7c2991c8a935", "html_url": "https://github.com/rust-lang/rust/commit/f694d7fa652d489a72ad5ac889ff7c2991c8a935", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f694d7fa652d489a72ad5ac889ff7c2991c8a935/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b75d4d3dbe703093be18c64d28f11d9f6e29dd62", "url": "https://api.github.com/repos/rust-lang/rust/commits/b75d4d3dbe703093be18c64d28f11d9f6e29dd62", "html_url": "https://github.com/rust-lang/rust/commit/b75d4d3dbe703093be18c64d28f11d9f6e29dd62"}], "stats": {"total": 458, "additions": 171, "deletions": 287}, "files": [{"sha": "5fec099566d8e6ef709ff8f5cf1dc3695d41ce85", "filename": ".github/workflows/release.yaml", "status": "modified", "additions": 171, "deletions": 287, "changes": 458, "blob_url": "https://github.com/rust-lang/rust/blob/f694d7fa652d489a72ad5ac889ff7c2991c8a935/.github%2Fworkflows%2Frelease.yaml", "raw_url": "https://github.com/rust-lang/rust/raw/f694d7fa652d489a72ad5ac889ff7c2991c8a935/.github%2Fworkflows%2Frelease.yaml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Frelease.yaml?ref=f694d7fa652d489a72ad5ac889ff7c2991c8a935", "patch": "@@ -1,14 +1,14 @@\n name: release\n on:\n   schedule:\n-  - cron: '0 0 * * *' # midnight UTC\n-  \n+    - cron: \"0 0 * * *\" # midnight UTC\n+\n   workflow_dispatch:\n \n   push:\n     branches:\n-    - release\n-    - trigger-nightly\n+      - release\n+      - trigger-nightly\n \n env:\n   CARGO_INCREMENTAL: 0\n@@ -18,148 +18,98 @@ env:\n   FETCH_DEPTH: 0 # pull in the tags for the version string\n \n jobs:\n-  dist-x86_64-pc-windows-msvc:\n-    name: dist (x86_64-pc-windows-msvc)\n-    runs-on: windows-latest\n-    env:\n-      RA_TARGET: x86_64-pc-windows-msvc\n-\n-    steps:\n-    - name: Checkout repository\n-      uses: actions/checkout@v2\n-      with:\n-        fetch-depth: ${{ env.FETCH_DEPTH }}\n-\n-    # We need to disable the existing toolchain to avoid updating rust-docs\n-    # which takes a long time. The fastest way to do this is to rename the\n-    # existing folder, as deleting it takes about as much time as not doing\n-    # anything and just updating rust-docs.\n-    - name: Rename existing rust toolchain\n-      run: Rename-Item C:\\Users\\runneradmin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc C:\\Users\\runneradmin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc.old\n-\n-    - name: Install Rust toolchain\n-      uses: actions-rs/toolchain@v1\n-      with:\n-        toolchain: stable\n-        profile: minimal\n-        override: true\n-\n-    - name: Dist\n-      run: cargo xtask dist\n+  dist:\n+    strategy:\n+      matrix:\n+        include:\n+          - os: windows-latest\n+            target: x86_64-pc-windows-msvc\n+          - os: windows-latest\n+            target: aarch64-pc-windows-msvc\n+          - os: ubuntu-20.04\n+            target: x86_64-unknown-linux-gnu\n+          - os: ubuntu-20.04\n+            target: aarch64-unknown-linux-gnu\n+            cross_linker: aarch64-linux-gnu-gcc\n+          - os: macos-11\n+            target: x86_64-apple-darwin\n+          - os: macos-11\n+            target: aarch64-apple-darwin\n+\n+    name: dist (${{ matrix.target }})\n+    runs-on: ${{ matrix.os }}\n \n-    - name: Upload artifacts\n-      uses: actions/upload-artifact@v1\n-      with:\n-        name: dist-x86_64-pc-windows-msvc\n-        path: ./dist\n-\n-  dist-aarch64-pc-windows-msvc:\n-    name: dist (aarch64-pc-windows-msvc)\n-    runs-on: windows-latest\n     env:\n-      RA_TARGET: aarch64-pc-windows-msvc\n+      RA_TARGET: ${{ matrix.target }}\n+      CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: ${{ matrix.cross_linker }}\n \n     steps:\n-    - name: Checkout repository\n-      uses: actions/checkout@v2\n-      with:\n-        fetch-depth: ${{ env.FETCH_DEPTH }}\n-\n-    - name: Rename existing rust toolchain\n-      run: Rename-Item C:\\Users\\runneradmin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc C:\\Users\\runneradmin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc.old\n-\n-    - name: Install Rust toolchain\n-      uses: actions-rs/toolchain@v1\n-      with:\n-        toolchain: stable\n-        target: aarch64-pc-windows-msvc\n-        profile: minimal\n-        override: true\n-\n-    - name: Dist\n-      run: cargo xtask dist\n-\n-    - name: Upload artifacts\n-      uses: actions/upload-artifact@v1\n-      with:\n-        name: dist-aarch64-pc-windows-msvc\n-        path: ./dist\n-\n-  dist-x86_64-unknown-linux-gnu:\n-    name: dist (x86_64-unknown-linux-gnu)\n-    runs-on: ubuntu-20.04\n-    env:\n-      RA_TARGET: x86_64-unknown-linux-gnu\n-\n-    steps:\n-    - name: Checkout repository\n-      uses: actions/checkout@v2\n-      with:\n-        fetch-depth: ${{ env.FETCH_DEPTH }}\n-\n-    - name: Install Rust toolchain\n-      uses: actions-rs/toolchain@v1\n-      with:\n-        toolchain: stable\n-        profile: minimal\n-        override: true\n-        components: rust-src\n-\n-    - name: Install Nodejs\n-      uses: actions/setup-node@v1\n-      with:\n-        node-version: 14.x\n-\n-    - name: Dist\n-      run: cargo xtask dist --client-patch-version $GITHUB_RUN_NUMBER\n-\n-    - name: Run analysis-stats on rust-analyzer\n-      run: target/${{ env.RA_TARGET }}/release/rust-analyzer analysis-stats .\n-\n-    - name: Run analysis-stats on rust std library\n-      run: target/${{ env.RA_TARGET }}/release/rust-analyzer analysis-stats --with-deps $(rustc --print sysroot)/lib/rustlib/src/rust/library/std\n-\n-    - name: Upload artifacts\n-      uses: actions/upload-artifact@v1\n-      with:\n-        name: dist-x86_64-unknown-linux-gnu\n-        path: ./dist\n-\n-  dist-aarch64-unknown-linux-gnu:\n-    name: dist (aarch64-unknown-linux-gnu)\n-    runs-on: ubuntu-20.04\n-    env:\n-      RA_TARGET: aarch64-unknown-linux-gnu\n-      CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc\n-\n-    steps:\n-    - name: Checkout repository\n-      uses: actions/checkout@v2\n-      with:\n-        fetch-depth: ${{ env.FETCH_DEPTH }}\n-\n-    - name: Install Rust toolchain\n-      uses: actions-rs/toolchain@v1\n-      with:\n-        toolchain: stable\n-        target: aarch64-unknown-linux-gnu\n-        profile: minimal\n-        override: true\n-\n-    - name: Update apt repositories\n-      run: sudo apt-get update\n-\n-    - name: Install target toolchain\n-      run: sudo apt-get install gcc-aarch64-linux-gnu\n-\n-    - name: Dist\n-      run: cargo xtask dist\n-\n-    - name: Upload artifacts\n-      uses: actions/upload-artifact@v1\n-      with:\n-        name: dist-aarch64-unknown-linux-gnu\n-        path: ./dist\n+      - name: Checkout repository\n+        uses: actions/checkout@v2\n+        with:\n+          fetch-depth: ${{ env.FETCH_DEPTH }}\n+\n+      # We need to disable the existing toolchain to avoid updating rust-docs\n+      # which takes a long time. The fastest way to do this is to rename the\n+      # existing folder, as deleting it takes about as much time as not doing\n+      # anything and just updating rust-docs.\n+      - name: Rename existing Rust toolchain\n+        if: matrix.os == 'windows-latest'\n+        run: Rename-Item C:\\Users\\runneradmin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc C:\\Users\\runneradmin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc.old\n+\n+      - name: Install Rust toolchain\n+        uses: actions-rs/toolchain@v1\n+        with:\n+          toolchain: stable\n+          target: ${{ matrix.target }}\n+          profile: minimal\n+          override: true\n+\n+      - name: Install Rust library source\n+        if: matrix.target == 'x86_64-unknown-linux-gnu'\n+        uses: actions-rs/toolchain@v1\n+        with:\n+          toolchain: stable\n+          target: ${{ matrix.target }}\n+          profile: minimal\n+          override: true\n+          components: rust-src\n+\n+      - name: Install Node.js\n+        if: matrix.target == 'x86_64-unknown-linux-gnu'\n+        uses: actions/setup-node@v1\n+        with:\n+          node-version: 14.x\n+\n+      - name: Update apt repositories\n+        if: matrix.target == 'aarch64-unknown-linux-gnu'\n+        run: sudo apt-get update\n+\n+      - name: Install target toolchain\n+        if: matrix.target == 'aarch64-unknown-linux-gnu'\n+        run: sudo apt-get install gcc-aarch64-linux-gnu\n+\n+      - name: Dist (generic)\n+        if: matrix.target != 'x86_64-unknown-linux-gnu'\n+        run: cargo xtask dist\n+\n+      - name: Dist (Linux)\n+        if: matrix.target == 'x86_64-unknown-linux-gnu'\n+        run: cargo xtask dist --client-patch-version $GITHUB_RUN_NUMBER\n+\n+      - name: Run analysis-stats on rust-analyzer\n+        if: matrix.target == 'x86_64-unknown-linux-gnu'\n+        run: target/${{ matrix.target }}/release/rust-analyzer analysis-stats .\n+\n+      - name: Run analysis-stats on rust std library\n+        if: matrix.target == 'x86_64-unknown-linux-gnu'\n+        run: target/${{ matrix.target }}/release/rust-analyzer analysis-stats --with-deps $(rustc --print sysroot)/lib/rustlib/src/rust/library/std\n+\n+      - name: Upload artifacts\n+        uses: actions/upload-artifact@v1\n+        with:\n+          name: dist-${{ matrix.target }}\n+          path: ./dist\n \n   dist-x86_64-unknown-linux-musl:\n     name: dist (x86_64-unknown-linux-musl)\n@@ -171,158 +121,92 @@ jobs:\n     container:\n       image: rust:alpine\n       volumes:\n-      - /usr/local/cargo/registry\n-\n-    steps:\n-    - name: Install dependencies\n-      run: apk add --no-cache git clang lld musl-dev\n-\n-    - name: Checkout repository\n-      uses: actions/checkout@v2\n-      with:\n-        fetch-depth: ${{ env.FETCH_DEPTH }}\n-\n-    - name: Dist\n-      run: cargo xtask dist\n-\n-    - name: Upload artifacts\n-      uses: actions/upload-artifact@v1\n-      with:\n-        name: dist-x86_64-unknown-linux-musl\n-        path: ./dist\n-\n-  dist-x86_64-apple-darwin:\n-    name: dist (x86_64-apple-darwin)\n-    runs-on: macos-latest\n-    env:\n-      RA_TARGET: x86_64-apple-darwin\n-#      SELECT_XCODE: /Applications/Xcode_12.2.app\n+        - /usr/local/cargo/registry\n \n     steps:\n-# use the default (12.5.1 as of today)\n-#    - name: Select XCode version\n-#      run: sudo xcode-select -s \"${SELECT_XCODE}\"\n+      - name: Install dependencies\n+        run: apk add --no-cache git clang lld musl-dev\n \n-    - name: Checkout repository\n-      uses: actions/checkout@v2\n-      with:\n-        fetch-depth: ${{ env.FETCH_DEPTH }}\n+      - name: Checkout repository\n+        uses: actions/checkout@v2\n+        with:\n+          fetch-depth: ${{ env.FETCH_DEPTH }}\n \n-    - name: Install Rust toolchain\n-      uses: actions-rs/toolchain@v1\n-      with:\n-        toolchain: stable\n-        profile: minimal\n-        override: true\n+      - name: Dist\n+        run: cargo xtask dist\n \n-    - name: Dist\n-      run: cargo xtask dist\n-\n-    - name: Upload artifacts\n-      uses: actions/upload-artifact@v1\n-      with:\n-        name: dist-x86_64-apple-darwin\n-        path: ./dist\n-\n-  dist-aarch64-apple-darwin:\n-    name: dist (aarch64-apple-darwin)\n-    runs-on: macos-latest\n-    env:\n-      RA_TARGET: aarch64-apple-darwin\n-#      SELECT_XCODE: /Applications/Xcode_12.2.app\n-\n-    steps:\n-#    - name: Select XCode version\n-#      run: sudo xcode-select -s \"${SELECT_XCODE}\"\n-\n-    - name: Checkout repository\n-      uses: actions/checkout@v2\n-      with:\n-        fetch-depth: ${{ env.FETCH_DEPTH }}\n-\n-    - name: Install Rust toolchain\n-      uses: actions-rs/toolchain@v1\n-      with:\n-        toolchain: stable\n-        target: aarch64-apple-darwin\n-        profile: minimal\n-        override: true\n-\n-    - name: Dist\n-      run: SDKROOT=$(xcrun -sdk macosx11.0 --show-sdk-path) MACOSX_DEPLOYMENT_TARGET=$(xcrun -sdk macosx11.0 --show-sdk-platform-version) cargo xtask dist\n-\n-    - name: Upload artifacts\n-      uses: actions/upload-artifact@v1\n-      with:\n-        name: dist-aarch64-apple-darwin\n-        path: ./dist\n+      - name: Upload artifacts\n+        uses: actions/upload-artifact@v1\n+        with:\n+          name: dist-x86_64-unknown-linux-musl\n+          path: ./dist\n \n   publish:\n     name: publish\n     runs-on: ubuntu-latest\n-    needs: ['dist-x86_64-pc-windows-msvc', 'dist-aarch64-pc-windows-msvc', 'dist-x86_64-unknown-linux-gnu', 'dist-x86_64-unknown-linux-musl', 'dist-aarch64-unknown-linux-gnu', 'dist-x86_64-apple-darwin', 'dist-aarch64-apple-darwin']\n+    needs: [\"dist\", \"dist-x86_64-unknown-linux-musl\"]\n     steps:\n-    - name: Install Nodejs\n-      uses: actions/setup-node@v1\n-      with:\n-        node-version: 14.x\n-\n-    - run: echo \"TAG=$(date --iso -u)\" >> $GITHUB_ENV\n-      if: github.ref == 'refs/heads/release'\n-    - run: echo \"TAG=nightly\" >> $GITHUB_ENV\n-      if: github.ref != 'refs/heads/release'\n-    - run: 'echo \"TAG: $TAG\"'\n-\n-    - name: Checkout repository\n-      uses: actions/checkout@v2\n-      with:\n-        fetch-depth: ${{ env.FETCH_DEPTH }}\n-\n-    - run: echo \"HEAD_SHA=$(git rev-parse HEAD)\" >> $GITHUB_ENV\n-    - run: 'echo \"HEAD_SHA: $HEAD_SHA\"'\n-\n-    - uses: actions/download-artifact@v1\n-      with:\n-        name: dist-aarch64-apple-darwin\n-        path: dist\n-    - uses: actions/download-artifact@v1\n-      with:\n-        name: dist-x86_64-apple-darwin\n-        path: dist\n-    - uses: actions/download-artifact@v1\n-      with:\n-        name: dist-x86_64-unknown-linux-gnu\n-        path: dist\n-    - uses: actions/download-artifact@v1\n-      with:\n-        name: dist-x86_64-unknown-linux-musl\n-        path: dist\n-    - uses: actions/download-artifact@v1\n-      with:\n-        name: dist-aarch64-unknown-linux-gnu\n-        path: dist\n-    - uses: actions/download-artifact@v1\n-      with:\n-        name: dist-x86_64-pc-windows-msvc\n-        path: dist\n-    - uses: actions/download-artifact@v1\n-      with:\n-        name: dist-aarch64-pc-windows-msvc\n-        path: dist\n-    - run: ls -al ./dist\n-\n-    - name: Publish Release\n-      uses: ./.github/actions/github-release\n-      with:\n-        files: \"dist/*\"\n-        name: ${{ env.TAG }}\n-        token: ${{ secrets.GITHUB_TOKEN }}\n-\n-    - run: npm ci\n-      working-directory: ./editors/code\n-\n-    - name: Publish Extension\n-      if: github.ref == 'refs/heads/release'\n-      working-directory: ./editors/code\n-      # token from https://dev.azure.com/rust-analyzer/\n-      run: npx vsce publish --pat ${{ secrets.MARKETPLACE_TOKEN }} --packagePath ../../dist/rust-analyzer.vsix\n+      - name: Install Nodejs\n+        uses: actions/setup-node@v1\n+        with:\n+          node-version: 14.x\n+\n+      - run: echo \"TAG=$(date --iso -u)\" >> $GITHUB_ENV\n+        if: github.ref == 'refs/heads/release'\n+      - run: echo \"TAG=nightly\" >> $GITHUB_ENV\n+        if: github.ref != 'refs/heads/release'\n+      - run: 'echo \"TAG: $TAG\"'\n+\n+      - name: Checkout repository\n+        uses: actions/checkout@v2\n+        with:\n+          fetch-depth: ${{ env.FETCH_DEPTH }}\n+\n+      - run: echo \"HEAD_SHA=$(git rev-parse HEAD)\" >> $GITHUB_ENV\n+      - run: 'echo \"HEAD_SHA: $HEAD_SHA\"'\n+\n+      - uses: actions/download-artifact@v1\n+        with:\n+          name: dist-aarch64-apple-darwin\n+          path: dist\n+      - uses: actions/download-artifact@v1\n+        with:\n+          name: dist-x86_64-apple-darwin\n+          path: dist\n+      - uses: actions/download-artifact@v1\n+        with:\n+          name: dist-x86_64-unknown-linux-gnu\n+          path: dist\n+      - uses: actions/download-artifact@v1\n+        with:\n+          name: dist-x86_64-unknown-linux-musl\n+          path: dist\n+      - uses: actions/download-artifact@v1\n+        with:\n+          name: dist-aarch64-unknown-linux-gnu\n+          path: dist\n+      - uses: actions/download-artifact@v1\n+        with:\n+          name: dist-x86_64-pc-windows-msvc\n+          path: dist\n+      - uses: actions/download-artifact@v1\n+        with:\n+          name: dist-aarch64-pc-windows-msvc\n+          path: dist\n+      - run: ls -al ./dist\n+\n+      - name: Publish Release\n+        uses: ./.github/actions/github-release\n+        with:\n+          files: \"dist/*\"\n+          name: ${{ env.TAG }}\n+          token: ${{ secrets.GITHUB_TOKEN }}\n+\n+      - run: npm ci\n+        working-directory: ./editors/code\n+\n+      - name: Publish Extension\n+        if: github.ref == 'refs/heads/release'\n+        working-directory: ./editors/code\n+        # token from https://dev.azure.com/rust-analyzer/\n+        run: npx vsce publish --pat ${{ secrets.MARKETPLACE_TOKEN }} --packagePath ../../dist/rust-analyzer.vsix"}]}