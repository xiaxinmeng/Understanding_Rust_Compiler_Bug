{"sha": "00e6b5d26c82d5faff066c24418a0eb5741efcd1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwZTZiNWQyNmM4MmQ1ZmFmZjA2NmMyNDQxOGEwZWI1NzQxZWZjZDE=", "commit": {"author": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2019-01-28T20:03:56Z"}, "committer": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2019-01-28T20:03:56Z"}, "message": "Parse and validate attributes in blocks", "tree": {"sha": "82ad741bab4f820850ba6f13e2b760cc840f43fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82ad741bab4f820850ba6f13e2b760cc840f43fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00e6b5d26c82d5faff066c24418a0eb5741efcd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00e6b5d26c82d5faff066c24418a0eb5741efcd1", "html_url": "https://github.com/rust-lang/rust/commit/00e6b5d26c82d5faff066c24418a0eb5741efcd1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00e6b5d26c82d5faff066c24418a0eb5741efcd1/comments", "author": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "137b1ccb715fe795cdf6c528bef6f8df3387f158", "url": "https://api.github.com/repos/rust-lang/rust/commits/137b1ccb715fe795cdf6c528bef6f8df3387f158", "html_url": "https://github.com/rust-lang/rust/commit/137b1ccb715fe795cdf6c528bef6f8df3387f158"}], "stats": {"total": 352, "additions": 352, "deletions": 0}, "files": [{"sha": "ce559882bdcc5cb10aab853ffefc997cc067ad91", "filename": "crates/ra_syntax/src/ast/generated.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e6b5d26c82d5faff066c24418a0eb5741efcd1/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e6b5d26c82d5faff066c24418a0eb5741efcd1/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs?ref=00e6b5d26c82d5faff066c24418a0eb5741efcd1", "patch": "@@ -272,6 +272,7 @@ impl ToOwned for Block {\n }\n \n \n+impl ast::AttrsOwner for Block {}\n impl Block {\n     pub fn statements(&self) -> impl Iterator<Item = &Stmt> {\n         super::children(self)"}, {"sha": "f4841241f1b7b86c0206ba2c28a62cf7ecf7690d", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/00e6b5d26c82d5faff066c24418a0eb5741efcd1/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/00e6b5d26c82d5faff066c24418a0eb5741efcd1/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=00e6b5d26c82d5faff066c24418a0eb5741efcd1", "patch": "@@ -571,6 +571,9 @@ Grammar(\n             options: [ \"Expr\" ],\n             collections: [\n                 [\"statements\", \"Stmt\"],\n+            ],\n+            traits: [\n+                \"AttrsOwner\",\n             ]\n         ),\n         \"ParamList\": ("}, {"sha": "6b88c568536602d282ff0526e811eb3634156ad3", "filename": "crates/ra_syntax/src/grammar/expressions.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00e6b5d26c82d5faff066c24418a0eb5741efcd1/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e6b5d26c82d5faff066c24418a0eb5741efcd1/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=00e6b5d26c82d5faff066c24418a0eb5741efcd1", "patch": "@@ -42,6 +42,8 @@ pub(crate) fn block(p: &mut Parser) {\n     }\n     let m = p.start();\n     p.bump();\n+    // This is checked by a validator\n+    attributes::inner_attributes(p);\n \n     while !p.at(EOF) && !p.at(R_CURLY) {\n         match p.current() {"}, {"sha": "ac6cc3dd613e032759d1be764d5a40272e296acb", "filename": "crates/ra_syntax/src/validation.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00e6b5d26c82d5faff066c24418a0eb5741efcd1/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e6b5d26c82d5faff066c24418a0eb5741efcd1/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs?ref=00e6b5d26c82d5faff066c24418a0eb5741efcd1", "patch": "@@ -2,6 +2,7 @@ mod byte;\n mod byte_string;\n mod char;\n mod string;\n+mod block;\n \n use crate::{\n     SourceFile, yellow::SyntaxError, AstNode,\n@@ -17,6 +18,7 @@ pub(crate) fn validate(file: &SourceFile) -> Vec<SyntaxError> {\n             .visit::<ast::ByteString, _>(self::byte_string::validate_byte_string_node)\n             .visit::<ast::Char, _>(self::char::validate_char_node)\n             .visit::<ast::String, _>(self::string::validate_string_node)\n+            .visit::<ast::Block, _>(self::block::validate_block_node)\n             .accept(node);\n     }\n     errors"}, {"sha": "9e1949124ffe9420e8d4193c6a41ac89f2c8bb7b", "filename": "crates/ra_syntax/src/validation/block.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/00e6b5d26c82d5faff066c24418a0eb5741efcd1/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e6b5d26c82d5faff066c24418a0eb5741efcd1/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fblock.rs?ref=00e6b5d26c82d5faff066c24418a0eb5741efcd1", "patch": "@@ -0,0 +1,24 @@\n+use crate::{SyntaxKind::*,\n+    ast::{self, AttrsOwner, AstNode},\n+    yellow::{\n+        SyntaxError,\n+        SyntaxErrorKind::*,\n+    },\n+};\n+\n+pub(crate) fn validate_block_node(node: &ast::Block, errors: &mut Vec<SyntaxError>) {\n+    if let Some(parent) = node.syntax().parent() {\n+        match parent.kind() {\n+            FN_DEF => return,\n+            BLOCK_EXPR => match parent.parent().map(|v| v.kind()) {\n+                Some(EXPR_STMT) | Some(BLOCK) => return,\n+                _ => {}\n+            },\n+            _ => {}\n+        }\n+    }\n+    errors.extend(\n+        node.attrs()\n+            .map(|attr| SyntaxError::new(InvalidBlockAttr, attr.syntax().range())),\n+    )\n+}"}, {"sha": "c52c44cc3871be30cc808abe8dd2706e82620e99", "filename": "crates/ra_syntax/src/yellow/syntax_error.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/00e6b5d26c82d5faff066c24418a0eb5741efcd1/crates%2Fra_syntax%2Fsrc%2Fyellow%2Fsyntax_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e6b5d26c82d5faff066c24418a0eb5741efcd1/crates%2Fra_syntax%2Fsrc%2Fyellow%2Fsyntax_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fyellow%2Fsyntax_error.rs?ref=00e6b5d26c82d5faff066c24418a0eb5741efcd1", "patch": "@@ -94,6 +94,7 @@ pub enum SyntaxErrorKind {\n     UnicodeEscapeOutOfRange,\n     UnclosedString,\n     InvalidSuffix,\n+    InvalidBlockAttr,\n }\n \n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n@@ -136,6 +137,9 @@ impl fmt::Display for SyntaxErrorKind {\n             UnicodeEscapeOutOfRange => write!(f, \"Unicode escape code should be at most 0x10FFFF\"),\n             UnclosedString => write!(f, \"Unclosed string literal\"),\n             InvalidSuffix => write!(f, \"Invalid literal suffix\"),\n+            InvalidBlockAttr => {\n+                write!(f, \"A block in this position cannot accept inner attributes\")\n+            }\n             ParseError(msg) => write!(f, \"{}\", msg.0),\n         }\n     }"}, {"sha": "6a04f2d0aaeca093741fd1a382060886f21b39ea", "filename": "crates/ra_syntax/tests/data/parser/err/0031_block_inner_attrs.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/00e6b5d26c82d5faff066c24418a0eb5741efcd1/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0031_block_inner_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e6b5d26c82d5faff066c24418a0eb5741efcd1/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0031_block_inner_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0031_block_inner_attrs.rs?ref=00e6b5d26c82d5faff066c24418a0eb5741efcd1", "patch": "@@ -0,0 +1,15 @@\n+fn block() {\n+    let inner = {\n+        #![doc(\"Inner attributes not allowed here\")]\n+        //! Nor are ModuleDoc comments\n+    };\n+    if true {\n+        #![doc(\"Nor here\")]\n+        #![doc(\"We error on each attr\")]\n+        //! Nor are ModuleDoc comments\n+    }\n+    while true {\n+        #![doc(\"Nor here\")]\n+        //! Nor are ModuleDoc comments\n+    }\n+}"}, {"sha": "086aa79acdd29d38ff2a2add73e1b4b739e3232f", "filename": "crates/ra_syntax/tests/data/parser/err/0031_block_inner_attrs.txt", "status": "added", "additions": 114, "deletions": 0, "changes": 114, "blob_url": "https://github.com/rust-lang/rust/blob/00e6b5d26c82d5faff066c24418a0eb5741efcd1/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0031_block_inner_attrs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/00e6b5d26c82d5faff066c24418a0eb5741efcd1/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0031_block_inner_attrs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0031_block_inner_attrs.txt?ref=00e6b5d26c82d5faff066c24418a0eb5741efcd1", "patch": "@@ -0,0 +1,114 @@\n+SOURCE_FILE@[0; 350)\n+  FN_DEF@[0; 349)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    NAME@[3; 8)\n+      IDENT@[3; 8) \"block\"\n+    PARAM_LIST@[8; 10)\n+      L_PAREN@[8; 9)\n+      R_PAREN@[9; 10)\n+    WHITESPACE@[10; 11)\n+    BLOCK@[11; 349)\n+      L_CURLY@[11; 12)\n+      WHITESPACE@[12; 17)\n+      LET_STMT@[17; 129)\n+        LET_KW@[17; 20)\n+        WHITESPACE@[20; 21)\n+        BIND_PAT@[21; 26)\n+          NAME@[21; 26)\n+            IDENT@[21; 26) \"inner\"\n+        WHITESPACE@[26; 27)\n+        EQ@[27; 28)\n+        WHITESPACE@[28; 29)\n+        BLOCK_EXPR@[29; 128)\n+          BLOCK@[29; 128)\n+            L_CURLY@[29; 30)\n+            WHITESPACE@[30; 39)\n+            err: `A block in this position cannot accept inner attributes`\n+            ATTR@[39; 83)\n+              POUND@[39; 40)\n+              EXCL@[40; 41)\n+              TOKEN_TREE@[41; 83)\n+                L_BRACK@[41; 42)\n+                IDENT@[42; 45) \"doc\"\n+                TOKEN_TREE@[45; 82)\n+                  L_PAREN@[45; 46)\n+                  STRING@[46; 81)\n+                  R_PAREN@[81; 82)\n+                R_BRACK@[82; 83)\n+            WHITESPACE@[83; 92)\n+            COMMENT@[92; 122)\n+            WHITESPACE@[122; 127)\n+            R_CURLY@[127; 128)\n+        SEMI@[128; 129)\n+      WHITESPACE@[129; 134)\n+      EXPR_STMT@[134; 257)\n+        IF_EXPR@[134; 257)\n+          IF_KW@[134; 136)\n+          WHITESPACE@[136; 137)\n+          CONDITION@[137; 141)\n+            LITERAL@[137; 141)\n+              TRUE_KW@[137; 141)\n+          WHITESPACE@[141; 142)\n+          BLOCK@[142; 257)\n+            L_CURLY@[142; 143)\n+            WHITESPACE@[143; 152)\n+            err: `A block in this position cannot accept inner attributes`\n+            ATTR@[152; 171)\n+              POUND@[152; 153)\n+              EXCL@[153; 154)\n+              TOKEN_TREE@[154; 171)\n+                L_BRACK@[154; 155)\n+                IDENT@[155; 158) \"doc\"\n+                TOKEN_TREE@[158; 170)\n+                  L_PAREN@[158; 159)\n+                  STRING@[159; 169)\n+                  R_PAREN@[169; 170)\n+                R_BRACK@[170; 171)\n+            WHITESPACE@[171; 180)\n+            err: `A block in this position cannot accept inner attributes`\n+            ATTR@[180; 212)\n+              POUND@[180; 181)\n+              EXCL@[181; 182)\n+              TOKEN_TREE@[182; 212)\n+                L_BRACK@[182; 183)\n+                IDENT@[183; 186) \"doc\"\n+                TOKEN_TREE@[186; 211)\n+                  L_PAREN@[186; 187)\n+                  STRING@[187; 210)\n+                  R_PAREN@[210; 211)\n+                R_BRACK@[211; 212)\n+            WHITESPACE@[212; 221)\n+            COMMENT@[221; 251)\n+            WHITESPACE@[251; 256)\n+            R_CURLY@[256; 257)\n+      WHITESPACE@[257; 262)\n+      WHILE_EXPR@[262; 347)\n+        WHILE_KW@[262; 267)\n+        WHITESPACE@[267; 268)\n+        CONDITION@[268; 272)\n+          LITERAL@[268; 272)\n+            TRUE_KW@[268; 272)\n+        WHITESPACE@[272; 273)\n+        BLOCK@[273; 347)\n+          L_CURLY@[273; 274)\n+          WHITESPACE@[274; 283)\n+          err: `A block in this position cannot accept inner attributes`\n+          ATTR@[283; 302)\n+            POUND@[283; 284)\n+            EXCL@[284; 285)\n+            TOKEN_TREE@[285; 302)\n+              L_BRACK@[285; 286)\n+              IDENT@[286; 289) \"doc\"\n+              TOKEN_TREE@[289; 301)\n+                L_PAREN@[289; 290)\n+                STRING@[290; 300)\n+                R_PAREN@[300; 301)\n+              R_BRACK@[301; 302)\n+          WHITESPACE@[302; 311)\n+          COMMENT@[311; 341)\n+          WHITESPACE@[341; 346)\n+          R_CURLY@[346; 347)\n+      WHITESPACE@[347; 348)\n+      R_CURLY@[348; 349)\n+  WHITESPACE@[349; 350)"}, {"sha": "88df8138edc7e372edc748c261f57a1cebee032a", "filename": "crates/ra_syntax/tests/data/parser/ok/0045_block_inner_attrs.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/00e6b5d26c82d5faff066c24418a0eb5741efcd1/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0045_block_inner_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e6b5d26c82d5faff066c24418a0eb5741efcd1/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0045_block_inner_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0045_block_inner_attrs.rs?ref=00e6b5d26c82d5faff066c24418a0eb5741efcd1", "patch": "@@ -0,0 +1,20 @@\n+fn block() {\n+    #![doc(\"Inner attributes allowed here\")]\n+    //! As are ModuleDoc style comments\n+    {\n+        #![doc(\"Inner attributes are allowed in blocks used as statements\")]\n+        #![doc(\"Being validated is not affected by duplcates\")]\n+        //! As are ModuleDoc style comments\n+    };\n+    {\n+        #![doc(\"Inner attributes are allowed in blocks when they are the last statement of another block\")]\n+        //! As are ModuleDoc style comments\n+    }\n+}\n+\n+// https://github.com/rust-analyzer/rust-analyzer/issues/689\n+impl Whatever {\n+    fn salsa_event(&self, event_fn: impl Fn() -> Event<Self>) {\n+        #![allow(unused_variables)] // this is  `inner_attr` of the block\n+    }\n+}"}, {"sha": "a1ba645ef695fea9324bfbe14912856cd466c8f8", "filename": "crates/ra_syntax/tests/data/parser/ok/0045_block_inner_attrs.txt", "status": "added", "additions": 167, "deletions": 0, "changes": 167, "blob_url": "https://github.com/rust-lang/rust/blob/00e6b5d26c82d5faff066c24418a0eb5741efcd1/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0045_block_inner_attrs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/00e6b5d26c82d5faff066c24418a0eb5741efcd1/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0045_block_inner_attrs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0045_block_inner_attrs.txt?ref=00e6b5d26c82d5faff066c24418a0eb5741efcd1", "patch": "@@ -0,0 +1,167 @@\n+SOURCE_FILE@[0; 686)\n+  FN_DEF@[0; 461)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    NAME@[3; 8)\n+      IDENT@[3; 8) \"block\"\n+    PARAM_LIST@[8; 10)\n+      L_PAREN@[8; 9)\n+      R_PAREN@[9; 10)\n+    WHITESPACE@[10; 11)\n+    BLOCK@[11; 461)\n+      L_CURLY@[11; 12)\n+      WHITESPACE@[12; 17)\n+      ATTR@[17; 57)\n+        POUND@[17; 18)\n+        EXCL@[18; 19)\n+        TOKEN_TREE@[19; 57)\n+          L_BRACK@[19; 20)\n+          IDENT@[20; 23) \"doc\"\n+          TOKEN_TREE@[23; 56)\n+            L_PAREN@[23; 24)\n+            STRING@[24; 55)\n+            R_PAREN@[55; 56)\n+          R_BRACK@[56; 57)\n+      WHITESPACE@[57; 62)\n+      COMMENT@[62; 97)\n+      WHITESPACE@[97; 102)\n+      EXPR_STMT@[102; 295)\n+        BLOCK_EXPR@[102; 294)\n+          BLOCK@[102; 294)\n+            L_CURLY@[102; 103)\n+            WHITESPACE@[103; 112)\n+            ATTR@[112; 180)\n+              POUND@[112; 113)\n+              EXCL@[113; 114)\n+              TOKEN_TREE@[114; 180)\n+                L_BRACK@[114; 115)\n+                IDENT@[115; 118) \"doc\"\n+                TOKEN_TREE@[118; 179)\n+                  L_PAREN@[118; 119)\n+                  STRING@[119; 178)\n+                  R_PAREN@[178; 179)\n+                R_BRACK@[179; 180)\n+            WHITESPACE@[180; 189)\n+            ATTR@[189; 244)\n+              POUND@[189; 190)\n+              EXCL@[190; 191)\n+              TOKEN_TREE@[191; 244)\n+                L_BRACK@[191; 192)\n+                IDENT@[192; 195) \"doc\"\n+                TOKEN_TREE@[195; 243)\n+                  L_PAREN@[195; 196)\n+                  STRING@[196; 242)\n+                  R_PAREN@[242; 243)\n+                R_BRACK@[243; 244)\n+            WHITESPACE@[244; 253)\n+            COMMENT@[253; 288)\n+            WHITESPACE@[288; 293)\n+            R_CURLY@[293; 294)\n+        SEMI@[294; 295)\n+      WHITESPACE@[295; 300)\n+      BLOCK_EXPR@[300; 459)\n+        BLOCK@[300; 459)\n+          L_CURLY@[300; 301)\n+          WHITESPACE@[301; 310)\n+          ATTR@[310; 409)\n+            POUND@[310; 311)\n+            EXCL@[311; 312)\n+            TOKEN_TREE@[312; 409)\n+              L_BRACK@[312; 313)\n+              IDENT@[313; 316) \"doc\"\n+              TOKEN_TREE@[316; 408)\n+                L_PAREN@[316; 317)\n+                STRING@[317; 407)\n+                R_PAREN@[407; 408)\n+              R_BRACK@[408; 409)\n+          WHITESPACE@[409; 418)\n+          COMMENT@[418; 453)\n+          WHITESPACE@[453; 458)\n+          R_CURLY@[458; 459)\n+      WHITESPACE@[459; 460)\n+      R_CURLY@[460; 461)\n+  WHITESPACE@[461; 463)\n+  COMMENT@[463; 523)\n+  WHITESPACE@[523; 524)\n+  IMPL_BLOCK@[524; 685)\n+    IMPL_KW@[524; 528)\n+    WHITESPACE@[528; 529)\n+    PATH_TYPE@[529; 537)\n+      PATH@[529; 537)\n+        PATH_SEGMENT@[529; 537)\n+          NAME_REF@[529; 537)\n+            IDENT@[529; 537) \"Whatever\"\n+    WHITESPACE@[537; 538)\n+    ITEM_LIST@[538; 685)\n+      L_CURLY@[538; 539)\n+      WHITESPACE@[539; 544)\n+      FN_DEF@[544; 683)\n+        FN_KW@[544; 546)\n+        WHITESPACE@[546; 547)\n+        NAME@[547; 558)\n+          IDENT@[547; 558) \"salsa_event\"\n+        PARAM_LIST@[558; 601)\n+          L_PAREN@[558; 559)\n+          SELF_PARAM@[559; 564)\n+            AMP@[559; 560)\n+            SELF_KW@[560; 564)\n+          COMMA@[564; 565)\n+          WHITESPACE@[565; 566)\n+          PARAM@[566; 600)\n+            BIND_PAT@[566; 574)\n+              NAME@[566; 574)\n+                IDENT@[566; 574) \"event_fn\"\n+            COLON@[574; 575)\n+            WHITESPACE@[575; 576)\n+            IMPL_TRAIT_TYPE@[576; 600)\n+              IMPL_KW@[576; 580)\n+              WHITESPACE@[580; 581)\n+              PATH_TYPE@[581; 600)\n+                PATH@[581; 600)\n+                  PATH_SEGMENT@[581; 600)\n+                    NAME_REF@[581; 583)\n+                      IDENT@[581; 583) \"Fn\"\n+                    PARAM_LIST@[583; 585)\n+                      L_PAREN@[583; 584)\n+                      R_PAREN@[584; 585)\n+                    WHITESPACE@[585; 586)\n+                    RET_TYPE@[586; 600)\n+                      THIN_ARROW@[586; 588)\n+                      WHITESPACE@[588; 589)\n+                      PATH_TYPE@[589; 600)\n+                        PATH@[589; 600)\n+                          PATH_SEGMENT@[589; 600)\n+                            NAME_REF@[589; 594)\n+                              IDENT@[589; 594) \"Event\"\n+                            TYPE_ARG_LIST@[594; 600)\n+                              L_ANGLE@[594; 595)\n+                              TYPE_ARG@[595; 599)\n+                                PATH_TYPE@[595; 599)\n+                                  PATH@[595; 599)\n+                                    PATH_SEGMENT@[595; 599)\n+                                      NAME_REF@[595; 599)\n+                                        IDENT@[595; 599) \"Self\"\n+                              R_ANGLE@[599; 600)\n+          R_PAREN@[600; 601)\n+        WHITESPACE@[601; 602)\n+        BLOCK@[602; 683)\n+          L_CURLY@[602; 603)\n+          WHITESPACE@[603; 612)\n+          ATTR@[612; 639)\n+            POUND@[612; 613)\n+            EXCL@[613; 614)\n+            TOKEN_TREE@[614; 639)\n+              L_BRACK@[614; 615)\n+              IDENT@[615; 620) \"allow\"\n+              TOKEN_TREE@[620; 638)\n+                L_PAREN@[620; 621)\n+                IDENT@[621; 637) \"unused_variables\"\n+                R_PAREN@[637; 638)\n+              R_BRACK@[638; 639)\n+          WHITESPACE@[639; 640)\n+          COMMENT@[640; 677)\n+          WHITESPACE@[677; 682)\n+          R_CURLY@[682; 683)\n+      WHITESPACE@[683; 684)\n+      R_CURLY@[684; 685)\n+  WHITESPACE@[685; 686)"}]}