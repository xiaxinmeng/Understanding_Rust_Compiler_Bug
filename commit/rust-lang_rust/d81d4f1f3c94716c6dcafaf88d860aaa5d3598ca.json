{"sha": "d81d4f1f3c94716c6dcafaf88d860aaa5d3598ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4MWQ0ZjFmM2M5NDcxNmM2ZGNhZmFmODhkODYwYWFhNWQzNTk4Y2E=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-12T02:22:53Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-12T02:22:53Z"}, "message": "manual: remove as many ~\"\" literals as possible.", "tree": {"sha": "81a371250ec28f25c9722cb90a6599b6bd632581", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81a371250ec28f25c9722cb90a6599b6bd632581"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d81d4f1f3c94716c6dcafaf88d860aaa5d3598ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d81d4f1f3c94716c6dcafaf88d860aaa5d3598ca", "html_url": "https://github.com/rust-lang/rust/commit/d81d4f1f3c94716c6dcafaf88d860aaa5d3598ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d81d4f1f3c94716c6dcafaf88d860aaa5d3598ca/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b1a401bb73299640eaec28937228538d916887a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b1a401bb73299640eaec28937228538d916887a", "html_url": "https://github.com/rust-lang/rust/commit/0b1a401bb73299640eaec28937228538d916887a"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "d7cba190479111b951bcc2cb5bc92a4b3555137e", "filename": "doc/rust.md", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/d81d4f1f3c94716c6dcafaf88d860aaa5d3598ca/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/d81d4f1f3c94716c6dcafaf88d860aaa5d3598ca/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=d81d4f1f3c94716c6dcafaf88d860aaa5d3598ca", "patch": "@@ -859,8 +859,8 @@ fn main() {\n     log(info, Some(1.0));\n \n     // Equivalent to 'log(core::info,\n-    //                    core::str::to_upper(core::str::slice(~\"foo\", 0u, 1u)));'\n-    log(info, to_upper(slice(~\"foo\", 0u, 1u)));\n+    //                    core::str::to_upper(core::str::slice(\"foo\", 0u, 1u)));'\n+    log(info, to_upper(slice(\"foo\", 0u, 1u)));\n }\n ~~~~\n \n@@ -1050,14 +1050,14 @@ were declared without the `!` annotation, the following code would not\n typecheck:\n \n ~~~~\n-# fn my_err(s: ~str) -> ! { fail }\n+# fn my_err(s: &str) -> ! { fail }\n \n fn f(i: int) -> int {\n    if i == 42 {\n      return 42;\n    }\n    else {\n-     my_err(~\"Bad number!\");\n+     my_err(\"Bad number!\");\n    }\n }\n ~~~~\n@@ -1502,7 +1502,7 @@ string, boolean value, or the nil value.\n \n ~~~~~~~~ {.literals}\n ();        // nil type\n-~\"hello\";  // string type\n+\"hello\";   // string type\n '5';       // character type\n 5;         // integer type\n ~~~~~~~~\n@@ -1520,7 +1520,7 @@ values.\n \n ~~~~~~~~ {.tuple}\n (0f, 4.5f);\n-(~\"a\", 4u, true);\n+(\"a\", 4u, true);\n ~~~~~~~~\n \n ### Record expressions\n@@ -1539,8 +1539,8 @@ written before its name.\n \n ~~~~\n {x: 10f, y: 20f};\n-{name: ~\"Joe\", age: 35u, score: 100_000};\n-{ident: ~\"X\", mut count: 0u};\n+{name: \"Joe\", age: 35u, score: 100_000};\n+{ident: \"X\", mut count: 0u};\n ~~~~\n \n The order of the fields in a record expression is significant, and\n@@ -1609,7 +1609,7 @@ When no mutability is specified, the vector is immutable.\n \n ~~~~\n ~[1, 2, 3, 4];\n-~[~\"a\", ~\"b\", ~\"c\", ~\"d\"];\n+~[\"a\", \"b\", \"c\", \"d\"];\n ~[mut 0u8, 0u8, 0u8, 0u8];\n ~~~~\n \n@@ -1633,7 +1633,7 @@ task in a _failing state_.\n \n (~[1, 2, 3, 4])[0];\n (~[mut 'x', 'y'])[1] = 'z';\n-(~[~\"a\", ~\"b\"])[10]; // fails\n+(~[\"a\", \"b\"])[10]; // fails\n \n # }\n ~~~~\n@@ -2034,7 +2034,7 @@ An example:\n let mut i = 0;\n \n while i < 10 {\n-    io::println(~\"hello\\n\");\n+    io::println(\"hello\\n\");\n     i = i + 1;\n }\n ~~~~\n@@ -2281,9 +2281,9 @@ range of values may be specified with `..`. For example:\n # let x = 2;\n \n let message = match x {\n-  0 | 1  => ~\"not many\",\n-  2 .. 9 => ~\"a few\",\n-  _      => ~\"lots\"\n+  0 | 1  => \"not many\",\n+  2 .. 9 => \"a few\",\n+  _      => \"lots\"\n };\n ~~~~\n \n@@ -2366,7 +2366,7 @@ The following examples all produce the same output, logged at the `error`\n logging level:\n \n ~~~~\n-# let filename = ~\"bulbasaur\";\n+# let filename = \"bulbasaur\";\n \n // Full version, logging a value.\n log(core::error, ~\"file not found: \" + filename);"}]}