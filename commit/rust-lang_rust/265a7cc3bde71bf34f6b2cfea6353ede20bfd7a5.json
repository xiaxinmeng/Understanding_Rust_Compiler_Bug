{"sha": "265a7cc3bde71bf34f6b2cfea6353ede20bfd7a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2NWE3Y2MzYmRlNzFiZjM0ZjZiMmNmZWE2MzUzZWRlMjBiZmQ3YTU=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2015-04-21T12:51:28Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2015-04-21T12:51:28Z"}, "message": "Add a `write_char` method to `std::fmt::Write`\n\nas accepted in [RFC 526](https://github.com/rust-lang/rfcs/blob/master/text/0526-fmt-text-writer.md).", "tree": {"sha": "4be7c92a6247ea3f29af2deb219c12b321275dca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4be7c92a6247ea3f29af2deb219c12b321275dca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/265a7cc3bde71bf34f6b2cfea6353ede20bfd7a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/265a7cc3bde71bf34f6b2cfea6353ede20bfd7a5", "html_url": "https://github.com/rust-lang/rust/commit/265a7cc3bde71bf34f6b2cfea6353ede20bfd7a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/265a7cc3bde71bf34f6b2cfea6353ede20bfd7a5/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3860240b0e124f38483ea4bd070b61d362871ece", "url": "https://api.github.com/repos/rust-lang/rust/commits/3860240b0e124f38483ea4bd070b61d362871ece", "html_url": "https://github.com/rust-lang/rust/commit/3860240b0e124f38483ea4bd070b61d362871ece"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "11d32dbd94a9b9c41abbb5f8086d906b95763f7d", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/265a7cc3bde71bf34f6b2cfea6353ede20bfd7a5/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/265a7cc3bde71bf34f6b2cfea6353ede20bfd7a5/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=265a7cc3bde71bf34f6b2cfea6353ede20bfd7a5", "patch": "@@ -1084,4 +1084,10 @@ impl fmt::Write for String {\n         self.push_str(s);\n         Ok(())\n     }\n+\n+    #[inline]\n+    fn write_char(&mut self, c: char) -> fmt::Result {\n+        self.push(c);\n+        Ok(())\n+    }\n }"}, {"sha": "85226444e8413ceb9376855297a9f2b98f369baa", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/265a7cc3bde71bf34f6b2cfea6353ede20bfd7a5/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/265a7cc3bde71bf34f6b2cfea6353ede20bfd7a5/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=265a7cc3bde71bf34f6b2cfea6353ede20bfd7a5", "patch": "@@ -83,6 +83,23 @@ pub trait Write {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn write_str(&mut self, s: &str) -> Result;\n \n+    /// Writes a `char` into this writer, returning whether the write succeeded.\n+    ///\n+    /// A single `char` may be encoded as more than one byte.\n+    /// This method can only succeed if the entire byte sequence was successfully\n+    /// written, and this method will not return until all data has been\n+    /// written or an error occurs.\n+    ///\n+    /// # Errors\n+    ///\n+    /// This function will return an instance of `FormatError` on error.\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    fn write_char(&mut self, c: char) -> Result {\n+        let mut utf_8 = [0u8; 4];\n+        let bytes_written = c.encode_utf8(&mut utf_8).unwrap_or(0);\n+        self.write_str(unsafe { mem::transmute(&utf_8[..bytes_written]) })\n+    }\n+\n     /// Glue for usage of the `write!` macro with implementers of this trait.\n     ///\n     /// This method should generally not be invoked manually, but rather through"}]}