{"sha": "74d6826858bab734766048a670820d9961c70448", "node_id": "C_kwDOAAsO6NoAKDc0ZDY4MjY4NThiYWI3MzQ3NjYwNDhhNjcwODIwZDk5NjFjNzA0NDg", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-05-22T19:19:54Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-05-24T11:02:38Z"}, "message": "expand: Change how `#![cfg(FALSE)]` behaves on crate root", "tree": {"sha": "560a0a2c844146fc612bdb8622fbd88e5192d714", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/560a0a2c844146fc612bdb8622fbd88e5192d714"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74d6826858bab734766048a670820d9961c70448", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74d6826858bab734766048a670820d9961c70448", "html_url": "https://github.com/rust-lang/rust/commit/74d6826858bab734766048a670820d9961c70448", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74d6826858bab734766048a670820d9961c70448/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54129fa1132afa50afb4159673132c654244571d", "url": "https://api.github.com/repos/rust-lang/rust/commits/54129fa1132afa50afb4159673132c654244571d", "html_url": "https://github.com/rust-lang/rust/commit/54129fa1132afa50afb4159673132c654244571d"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "bab3bbc2329a95f8ff1bdb2614f43906c37ddd79", "filename": "crates/hir-def/src/attr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/74d6826858bab734766048a670820d9961c70448/crates%2Fhir-def%2Fsrc%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74d6826858bab734766048a670820d9961c70448/crates%2Fhir-def%2Fsrc%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fattr.rs?ref=74d6826858bab734766048a670820d9961c70448", "patch": "@@ -202,6 +202,7 @@ impl Attrs {\n             None => Some(first),\n         }\n     }\n+\n     pub(crate) fn is_cfg_enabled(&self, cfg_options: &CfgOptions) -> bool {\n         match self.cfg() {\n             None => true,"}, {"sha": "a528d238e377b291b6c77453454072003f804a57", "filename": "crates/hir-def/src/nameres/collector.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/74d6826858bab734766048a670820d9961c70448/crates%2Fhir-def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74d6826858bab734766048a670820d9961c70448/crates%2Fhir-def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fnameres%2Fcollector.rs?ref=74d6826858bab734766048a670820d9961c70448", "patch": "@@ -290,16 +290,16 @@ impl DefCollector<'_> {\n         let module_id = self.def_map.root;\n \n         let attrs = item_tree.top_level_attrs(self.db, self.def_map.krate);\n-        if let Some(cfg) = attrs.cfg() {\n-            if self.cfg_options.check(&cfg) == Some(false) {\n-                return;\n-            }\n-        }\n \n         self.inject_prelude(&attrs);\n \n         // Process other crate-level attributes.\n         for attr in &*attrs {\n+            if let Some(cfg) = attr.cfg() {\n+                if self.cfg_options.check(&cfg) == Some(false) {\n+                    return;\n+                }\n+            }\n             let attr_name = match attr.path.as_ident() {\n                 Some(name) => name,\n                 None => continue,"}, {"sha": "0c369a18bb9cc29f5cd18e43dc68b5597d1a0ae5", "filename": "crates/hir-expand/src/attrs.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/74d6826858bab734766048a670820d9961c70448/crates%2Fhir-expand%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74d6826858bab734766048a670820d9961c70448/crates%2Fhir-expand%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-expand%2Fsrc%2Fattrs.rs?ref=74d6826858bab734766048a670820d9961c70448", "patch": "@@ -309,6 +309,14 @@ impl Attr {\n \n         Some(paths)\n     }\n+\n+    pub fn cfg(&self) -> Option<CfgExpr> {\n+        if *self.path.as_ident()? == crate::name![cfg] {\n+            self.token_tree_value().map(CfgExpr::parse)\n+        } else {\n+            None\n+        }\n+    }\n }\n \n pub fn collect_attrs("}]}