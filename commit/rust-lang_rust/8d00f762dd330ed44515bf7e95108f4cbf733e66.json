{"sha": "8d00f762dd330ed44515bf7e95108f4cbf733e66", "node_id": "C_kwDOAAsO6NoAKDhkMDBmNzYyZGQzMzBlZDQ0NTE1YmY3ZTk1MTA4ZjRjYmY3MzNlNjY", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-15T14:39:25Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-05-15T14:20:31Z"}, "message": "Unnest a variable in prep for the next commit which needs access to the place", "tree": {"sha": "1aac63efc9c5aa454046417ed888d64308cffa1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1aac63efc9c5aa454046417ed888d64308cffa1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d00f762dd330ed44515bf7e95108f4cbf733e66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d00f762dd330ed44515bf7e95108f4cbf733e66", "html_url": "https://github.com/rust-lang/rust/commit/8d00f762dd330ed44515bf7e95108f4cbf733e66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d00f762dd330ed44515bf7e95108f4cbf733e66/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8006510ab0f69ee75e9c3f7e8bff3776886dae51", "url": "https://api.github.com/repos/rust-lang/rust/commits/8006510ab0f69ee75e9c3f7e8bff3776886dae51", "html_url": "https://github.com/rust-lang/rust/commit/8006510ab0f69ee75e9c3f7e8bff3776886dae51"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "e28a39220e0eecfababbe8f639cd88b546b985cb", "filename": "compiler/rustc_mir_build/src/build/matches/test.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8d00f762dd330ed44515bf7e95108f4cbf733e66/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d00f762dd330ed44515bf7e95108f4cbf733e66/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Ftest.rs?ref=8d00f762dd330ed44515bf7e95108f4cbf733e66", "patch": "@@ -387,11 +387,10 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n         make_target_blocks: impl FnOnce(&mut Self) -> Vec<BasicBlock>,\n         source_info: SourceInfo,\n         value: ConstantKind<'tcx>,\n-        place: Place<'tcx>,\n+        mut val: Place<'tcx>,\n         mut ty: Ty<'tcx>,\n     ) {\n         let mut expect = self.literal_operand(source_info.span, value);\n-        let mut val = Operand::Copy(place);\n \n         // If we're using `b\"...\"` as a pattern, we need to insert an\n         // unsizing coercion, as the byte string has the type `&[u8; N]`.\n@@ -421,9 +420,13 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                         block,\n                         source_info,\n                         temp,\n-                        Rvalue::Cast(CastKind::Pointer(PointerCast::Unsize), val, ty),\n+                        Rvalue::Cast(\n+                            CastKind::Pointer(PointerCast::Unsize),\n+                            Operand::Copy(val),\n+                            ty,\n+                        ),\n                     );\n-                    val = Operand::Move(temp);\n+                    val = temp;\n                 }\n                 if opt_ref_test_ty.is_some() {\n                     let slice = self.temp(ty, source_info.span);\n@@ -463,7 +466,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n \n                     literal: method,\n                 })),\n-                args: vec![val, expect],\n+                args: vec![Operand::Copy(val), expect],\n                 destination: eq_result,\n                 target: Some(eq_block),\n                 unwind: UnwindAction::Continue,"}]}