{"sha": "b3146549abf25818fecfc7555f35358a948e27ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzMTQ2NTQ5YWJmMjU4MThmZWNmYzc1NTVmMzUzNThhOTQ4ZTI3YWQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-31T06:38:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-31T06:38:46Z"}, "message": "Auto merge of #63991 - Centril:unique-improper-ctype, r=rkruppe\n\n`improper_ctypes`: guard against accidental change to `Unique<T>`\n\nr? @eddyb", "tree": {"sha": "6450cdd8e6938281b1d93300dd630b7b6c07292b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6450cdd8e6938281b1d93300dd630b7b6c07292b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3146549abf25818fecfc7555f35358a948e27ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3146549abf25818fecfc7555f35358a948e27ad", "html_url": "https://github.com/rust-lang/rust/commit/b3146549abf25818fecfc7555f35358a948e27ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3146549abf25818fecfc7555f35358a948e27ad/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d851b33181b1404856cb1d8b20d261adda54ffb", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d851b33181b1404856cb1d8b20d261adda54ffb", "html_url": "https://github.com/rust-lang/rust/commit/2d851b33181b1404856cb1d8b20d261adda54ffb"}, {"sha": "960ecdce7c5b7638cdb2585088caa666928c2d37", "url": "https://api.github.com/repos/rust-lang/rust/commits/960ecdce7c5b7638cdb2585088caa666928c2d37", "html_url": "https://github.com/rust-lang/rust/commit/960ecdce7c5b7638cdb2585088caa666928c2d37"}], "stats": {"total": 36, "additions": 23, "deletions": 13}, "files": [{"sha": "e1f4b0b34ebaa1a0f6538369db63e4e84cd9c02d", "filename": "src/test/ui/lint/lint-ctypes-enum.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3146549abf25818fecfc7555f35358a948e27ad/src%2Ftest%2Fui%2Flint%2Flint-ctypes-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3146549abf25818fecfc7555f35358a948e27ad/src%2Ftest%2Fui%2Flint%2Flint-ctypes-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-ctypes-enum.rs?ref=b3146549abf25818fecfc7555f35358a948e27ad", "patch": "@@ -1,4 +1,5 @@\n #![feature(transparent_enums, transparent_unions)]\n+#![feature(ptr_internals)]\n #![deny(improper_ctypes)]\n #![allow(dead_code)]\n \n@@ -44,6 +45,7 @@ extern {\n    fn option_ref(x: Option<&'static u8>);\n    fn option_fn(x: Option<extern \"C\" fn()>);\n    fn nonnull(x: Option<std::ptr::NonNull<u8>>);\n+   fn unique(x: Option<std::ptr::Unique<u8>>); //~ ERROR enum has no representation hint\n    fn nonzero_u8(x: Option<num::NonZeroU8>);\n    fn nonzero_u16(x: Option<num::NonZeroU16>);\n    fn nonzero_u32(x: Option<num::NonZeroU32>);"}, {"sha": "20e438606642c81f343cbb164c83e904d0f21c4f", "filename": "src/test/ui/lint/lint-ctypes-enum.stderr", "status": "modified", "additions": 21, "deletions": 13, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/b3146549abf25818fecfc7555f35358a948e27ad/src%2Ftest%2Fui%2Flint%2Flint-ctypes-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b3146549abf25818fecfc7555f35358a948e27ad/src%2Ftest%2Fui%2Flint%2Flint-ctypes-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-ctypes-enum.stderr?ref=b3146549abf25818fecfc7555f35358a948e27ad", "patch": "@@ -1,82 +1,90 @@\n error: `extern` block uses type `U` which is not FFI-safe: enum has no representation hint\n-  --> $DIR/lint-ctypes-enum.rs:38:13\n+  --> $DIR/lint-ctypes-enum.rs:39:13\n    |\n LL |    fn uf(x: U);\n    |             ^\n    |\n note: lint level defined here\n-  --> $DIR/lint-ctypes-enum.rs:2:9\n+  --> $DIR/lint-ctypes-enum.rs:3:9\n    |\n LL | #![deny(improper_ctypes)]\n    |         ^^^^^^^^^^^^^^^\n    = help: consider adding a `#[repr(C)]`, `#[repr(transparent)]`, or integer `#[repr(...)]` attribute to this enum\n note: type defined here\n-  --> $DIR/lint-ctypes-enum.rs:8:1\n+  --> $DIR/lint-ctypes-enum.rs:9:1\n    |\n LL | enum U { A }\n    | ^^^^^^^^^^^^\n \n error: `extern` block uses type `B` which is not FFI-safe: enum has no representation hint\n-  --> $DIR/lint-ctypes-enum.rs:39:13\n+  --> $DIR/lint-ctypes-enum.rs:40:13\n    |\n LL |    fn bf(x: B);\n    |             ^\n    |\n    = help: consider adding a `#[repr(C)]`, `#[repr(transparent)]`, or integer `#[repr(...)]` attribute to this enum\n note: type defined here\n-  --> $DIR/lint-ctypes-enum.rs:9:1\n+  --> $DIR/lint-ctypes-enum.rs:10:1\n    |\n LL | enum B { C, D }\n    | ^^^^^^^^^^^^^^^\n \n error: `extern` block uses type `T` which is not FFI-safe: enum has no representation hint\n-  --> $DIR/lint-ctypes-enum.rs:40:13\n+  --> $DIR/lint-ctypes-enum.rs:41:13\n    |\n LL |    fn tf(x: T);\n    |             ^\n    |\n    = help: consider adding a `#[repr(C)]`, `#[repr(transparent)]`, or integer `#[repr(...)]` attribute to this enum\n note: type defined here\n-  --> $DIR/lint-ctypes-enum.rs:10:1\n+  --> $DIR/lint-ctypes-enum.rs:11:1\n    |\n LL | enum T { E, F, G }\n    | ^^^^^^^^^^^^^^^^^^\n \n+error: `extern` block uses type `std::option::Option<std::ptr::Unique<u8>>` which is not FFI-safe: enum has no representation hint\n+  --> $DIR/lint-ctypes-enum.rs:48:17\n+   |\n+LL |    fn unique(x: Option<std::ptr::Unique<u8>>);\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider adding a `#[repr(C)]`, `#[repr(transparent)]`, or integer `#[repr(...)]` attribute to this enum\n+\n error: `extern` block uses type `u128` which is not FFI-safe: 128-bit integers don't currently have a known stable ABI\n-  --> $DIR/lint-ctypes-enum.rs:51:23\n+  --> $DIR/lint-ctypes-enum.rs:53:23\n    |\n LL |    fn nonzero_u128(x: Option<num::NonZeroU128>);\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `extern` block uses type `i128` which is not FFI-safe: 128-bit integers don't currently have a known stable ABI\n-  --> $DIR/lint-ctypes-enum.rs:58:23\n+  --> $DIR/lint-ctypes-enum.rs:60:23\n    |\n LL |    fn nonzero_i128(x: Option<num::NonZeroI128>);\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `extern` block uses type `std::option::Option<TransparentUnion<std::num::NonZeroU8>>` which is not FFI-safe: enum has no representation hint\n-  --> $DIR/lint-ctypes-enum.rs:63:28\n+  --> $DIR/lint-ctypes-enum.rs:65:28\n    |\n LL |    fn transparent_union(x: Option<TransparentUnion<num::NonZeroU8>>);\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider adding a `#[repr(C)]`, `#[repr(transparent)]`, or integer `#[repr(...)]` attribute to this enum\n \n error: `extern` block uses type `std::option::Option<Rust<std::num::NonZeroU8>>` which is not FFI-safe: enum has no representation hint\n-  --> $DIR/lint-ctypes-enum.rs:65:20\n+  --> $DIR/lint-ctypes-enum.rs:67:20\n    |\n LL |    fn repr_rust(x: Option<Rust<num::NonZeroU8>>);\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider adding a `#[repr(C)]`, `#[repr(transparent)]`, or integer `#[repr(...)]` attribute to this enum\n \n error: `extern` block uses type `std::result::Result<(), std::num::NonZeroI32>` which is not FFI-safe: enum has no representation hint\n-  --> $DIR/lint-ctypes-enum.rs:66:20\n+  --> $DIR/lint-ctypes-enum.rs:68:20\n    |\n LL |    fn no_result(x: Result<(), num::NonZeroI32>);\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider adding a `#[repr(C)]`, `#[repr(transparent)]`, or integer `#[repr(...)]` attribute to this enum\n \n-error: aborting due to 8 previous errors\n+error: aborting due to 9 previous errors\n "}]}