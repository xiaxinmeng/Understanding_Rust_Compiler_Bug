{"sha": "b3b65a1bf6790af0bbaf6dba2e6a688ecd6e9387", "node_id": "C_kwDOAAsO6NoAKGIzYjY1YTFiZjY3OTBhZjBiYmFmNmRiYTJlNmE2ODhlY2Q2ZTkzODc", "commit": {"author": {"name": "hotate29", "email": "hotate_oc@yahoo.co.jp", "date": "2021-12-14T12:27:55Z"}, "committer": {"name": "hotate29", "email": "hotate_oc@yahoo.co.jp", "date": "2021-12-24T15:29:24Z"}, "message": "Add test", "tree": {"sha": "9186241704bda11b2c45b0afd05fc086fdde03f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9186241704bda11b2c45b0afd05fc086fdde03f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3b65a1bf6790af0bbaf6dba2e6a688ecd6e9387", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEaFZ9ibIIMdUY9nqJ23IOcqY4C1oFAmHF51kACgkQ23IOcqY4\nC1qUohAAvEfIlQ6BIOx0XfB/MbqAVtzuaKBLrJ3DJPchfyKFQxYFXQbnYUnoKg2C\nVbsIjvd5CdrYLEaAIVJhxgwhP567GqA7+bM7hliOISLd/urDN/k8Zciii2jsXBQW\nKEW9xO3vrbmYNNtB9VI1uIFIJpliI1JdkXzu2gxx9S0l0Km5GOI++UUFy6+RMsV1\nka9D9WSW+aPh/n8QbTeESFxCvvkTcw19XfNGbNZnUSZ1unMev7pwJzGG4xYrWfD6\nFQx00mjmtoPXDTwpriB9YmARkl+3NuW5ZFbhmKqMBmANDm5Z6Ice3Llm6Z12nJaM\nHWJqgulujZ7pbdQqCk4ynIM3kD3q+mwVn3IrseGqIfe1UG3I5ZvWFMRV+/Jpol+Q\nK23ccI8XxbQ9c89wIfOHi3Kfib1IHnm8LUVH3gbfm9KnNyDaLcNcPeOJo0d7OIaP\n1jlDaN9pq8oEGieUxDo8NxHN0pjpc/7+3dZW9VwTyS7TzSLD8xCF3nk8v8VMSAf/\n2lBixW/n4k8R/c3vwMJVVXsbKs7jIrhr36Oa3sTAwRgfz1qT2+COpLV3c6cF0xd3\nVKDfYPCDnyOsqx/UkPL7fE2iC5hiAAr1LsMlNO6TWkoQSjLZSdsDgee5nbW88M7X\nZj9kow/ZtxMINhnithCrW29DvytZ1wqPy2lSPsTZbslOvRe2e6g=\n=z2Du\n-----END PGP SIGNATURE-----", "payload": "tree 9186241704bda11b2c45b0afd05fc086fdde03f6\nparent 13ad14b22d77b2b9041c77cb70262db700fe1b02\nauthor hotate29 <hotate_oc@yahoo.co.jp> 1639484875 +0900\ncommitter hotate29 <hotate_oc@yahoo.co.jp> 1640359764 +0900\n\nAdd test\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3b65a1bf6790af0bbaf6dba2e6a688ecd6e9387", "html_url": "https://github.com/rust-lang/rust/commit/b3b65a1bf6790af0bbaf6dba2e6a688ecd6e9387", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3b65a1bf6790af0bbaf6dba2e6a688ecd6e9387/comments", "author": {"login": "hotate29", "id": 44938840, "node_id": "MDQ6VXNlcjQ0OTM4ODQw", "avatar_url": "https://avatars.githubusercontent.com/u/44938840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hotate29", "html_url": "https://github.com/hotate29", "followers_url": "https://api.github.com/users/hotate29/followers", "following_url": "https://api.github.com/users/hotate29/following{/other_user}", "gists_url": "https://api.github.com/users/hotate29/gists{/gist_id}", "starred_url": "https://api.github.com/users/hotate29/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hotate29/subscriptions", "organizations_url": "https://api.github.com/users/hotate29/orgs", "repos_url": "https://api.github.com/users/hotate29/repos", "events_url": "https://api.github.com/users/hotate29/events{/privacy}", "received_events_url": "https://api.github.com/users/hotate29/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hotate29", "id": 44938840, "node_id": "MDQ6VXNlcjQ0OTM4ODQw", "avatar_url": "https://avatars.githubusercontent.com/u/44938840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hotate29", "html_url": "https://github.com/hotate29", "followers_url": "https://api.github.com/users/hotate29/followers", "following_url": "https://api.github.com/users/hotate29/following{/other_user}", "gists_url": "https://api.github.com/users/hotate29/gists{/gist_id}", "starred_url": "https://api.github.com/users/hotate29/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hotate29/subscriptions", "organizations_url": "https://api.github.com/users/hotate29/orgs", "repos_url": "https://api.github.com/users/hotate29/repos", "events_url": "https://api.github.com/users/hotate29/events{/privacy}", "received_events_url": "https://api.github.com/users/hotate29/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13ad14b22d77b2b9041c77cb70262db700fe1b02", "url": "https://api.github.com/repos/rust-lang/rust/commits/13ad14b22d77b2b9041c77cb70262db700fe1b02", "html_url": "https://github.com/rust-lang/rust/commit/13ad14b22d77b2b9041c77cb70262db700fe1b02"}], "stats": {"total": 161, "additions": 148, "deletions": 13}, "files": [{"sha": "8989872cbceeab28b52738bcf7c0371b6bb0ea05", "filename": "clippy_utils/src/sugg.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/b3b65a1bf6790af0bbaf6dba2e6a688ecd6e9387/clippy_utils%2Fsrc%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3b65a1bf6790af0bbaf6dba2e6a688ecd6e9387/clippy_utils%2Fsrc%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fsugg.rs?ref=b3b65a1bf6790af0bbaf6dba2e6a688ecd6e9387", "patch": "@@ -1040,4 +1040,37 @@ mod test {\n         let sugg = Sugg::BinOp(AssocOp::Add, \"(1 + 1) + (1 + 1)\".into());\n         assert_eq!(\"((1 + 1) + (1 + 1))\", sugg.maybe_par().to_string());\n     }\n+    #[test]\n+    fn not_op() {\n+        use AssocOp::{Add, Equal, Greater, GreaterEqual, LAnd, LOr, Less, LessEqual, NotEqual};\n+\n+        // Invert the comparison operator.\n+        let sugg = Sugg::BinOp(Equal, \"1 == 1\".into());\n+        assert_eq!(\"1 != 1\", (!sugg).to_string());\n+\n+        let sugg = Sugg::BinOp(NotEqual, \"1 != 1\".into());\n+        assert_eq!(\"1 == 1\", (!sugg).to_string());\n+\n+        let sugg = Sugg::BinOp(Less, \"1 < 1\".into());\n+        assert_eq!(\"1 >= 1\", (!sugg).to_string());\n+\n+        let sugg = Sugg::BinOp(LessEqual, \"1 <= 1\".into());\n+        assert_eq!(\"1 > 1\", (!sugg).to_string());\n+\n+        let sugg = Sugg::BinOp(Greater, \"1 > 1\".into());\n+        assert_eq!(\"1 <= 1\", (!sugg).to_string());\n+\n+        let sugg = Sugg::BinOp(GreaterEqual, \"1 >= 1\".into());\n+        assert_eq!(\"1 < 1\", (!sugg).to_string());\n+\n+        // Other operators are inverted like !(..).\n+        let sugg = Sugg::BinOp(Add, \"1 + 1\".into());\n+        assert_eq!(\"!(1 + 1)\", (!sugg).to_string());\n+\n+        let sugg = Sugg::BinOp(LAnd, \"1 && 1\".into());\n+        assert_eq!(\"!(1 && 1)\", (!sugg).to_string());\n+\n+        let sugg = Sugg::BinOp(LOr, \"1 || 1\".into());\n+        assert_eq!(\"!(1 || 1)\", (!sugg).to_string());\n+    }\n }"}, {"sha": "89dc13fd5b13d20077cfeecb305ea35fa20dcc2f", "filename": "tests/ui/needless_bool/fixable.fixed", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b3b65a1bf6790af0bbaf6dba2e6a688ecd6e9387/tests%2Fui%2Fneedless_bool%2Ffixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/b3b65a1bf6790af0bbaf6dba2e6a688ecd6e9387/tests%2Fui%2Fneedless_bool%2Ffixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_bool%2Ffixable.fixed?ref=b3b65a1bf6790af0bbaf6dba2e6a688ecd6e9387", "patch": "@@ -41,6 +41,15 @@ fn main() {\n     x;\n     !x;\n     !(x && y);\n+    let a = 0;\n+    let b = 1;\n+\n+    a != b;\n+    a == b;\n+    a >= b;\n+    a > b;\n+    a <= b;\n+    a < b;\n     if x {\n         x\n     } else {"}, {"sha": "c11d9472e8d066fa643c7472d4e2fa024c75eb7d", "filename": "tests/ui/needless_bool/fixable.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/b3b65a1bf6790af0bbaf6dba2e6a688ecd6e9387/tests%2Fui%2Fneedless_bool%2Ffixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3b65a1bf6790af0bbaf6dba2e6a688ecd6e9387/tests%2Fui%2Fneedless_bool%2Ffixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_bool%2Ffixable.rs?ref=b3b65a1bf6790af0bbaf6dba2e6a688ecd6e9387", "patch": "@@ -53,6 +53,39 @@ fn main() {\n     } else {\n         true\n     };\n+    let a = 0;\n+    let b = 1;\n+\n+    if a == b {\n+        false\n+    } else {\n+        true\n+    };\n+    if a != b {\n+        false\n+    } else {\n+        true\n+    };\n+    if a < b {\n+        false\n+    } else {\n+        true\n+    };\n+    if a <= b {\n+        false\n+    } else {\n+        true\n+    };\n+    if a > b {\n+        false\n+    } else {\n+        true\n+    };\n+    if a >= b {\n+        false\n+    } else {\n+        true\n+    };\n     if x {\n         x\n     } else {"}, {"sha": "d2c48376f76622d0fe3528a76e92c45165261f31", "filename": "tests/ui/needless_bool/fixable.stderr", "status": "modified", "additions": 73, "deletions": 13, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/b3b65a1bf6790af0bbaf6dba2e6a688ecd6e9387/tests%2Fui%2Fneedless_bool%2Ffixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b3b65a1bf6790af0bbaf6dba2e6a688ecd6e9387/tests%2Fui%2Fneedless_bool%2Ffixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_bool%2Ffixable.stderr?ref=b3b65a1bf6790af0bbaf6dba2e6a688ecd6e9387", "patch": "@@ -31,7 +31,67 @@ LL | |     };\n    | |_____^ help: you can reduce it to: `!(x && y)`\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/fixable.rs:72:5\n+  --> $DIR/fixable.rs:59:5\n+   |\n+LL | /     if a == b {\n+LL | |         false\n+LL | |     } else {\n+LL | |         true\n+LL | |     };\n+   | |_____^ help: you can reduce it to: `a != b`\n+\n+error: this if-then-else expression returns a bool literal\n+  --> $DIR/fixable.rs:64:5\n+   |\n+LL | /     if a != b {\n+LL | |         false\n+LL | |     } else {\n+LL | |         true\n+LL | |     };\n+   | |_____^ help: you can reduce it to: `a == b`\n+\n+error: this if-then-else expression returns a bool literal\n+  --> $DIR/fixable.rs:69:5\n+   |\n+LL | /     if a < b {\n+LL | |         false\n+LL | |     } else {\n+LL | |         true\n+LL | |     };\n+   | |_____^ help: you can reduce it to: `a >= b`\n+\n+error: this if-then-else expression returns a bool literal\n+  --> $DIR/fixable.rs:74:5\n+   |\n+LL | /     if a <= b {\n+LL | |         false\n+LL | |     } else {\n+LL | |         true\n+LL | |     };\n+   | |_____^ help: you can reduce it to: `a > b`\n+\n+error: this if-then-else expression returns a bool literal\n+  --> $DIR/fixable.rs:79:5\n+   |\n+LL | /     if a > b {\n+LL | |         false\n+LL | |     } else {\n+LL | |         true\n+LL | |     };\n+   | |_____^ help: you can reduce it to: `a <= b`\n+\n+error: this if-then-else expression returns a bool literal\n+  --> $DIR/fixable.rs:84:5\n+   |\n+LL | /     if a >= b {\n+LL | |         false\n+LL | |     } else {\n+LL | |         true\n+LL | |     };\n+   | |_____^ help: you can reduce it to: `a < b`\n+\n+error: this if-then-else expression returns a bool literal\n+  --> $DIR/fixable.rs:105:5\n    |\n LL | /     if x {\n LL | |         return true;\n@@ -41,7 +101,7 @@ LL | |     };\n    | |_____^ help: you can reduce it to: `return x`\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/fixable.rs:80:5\n+  --> $DIR/fixable.rs:113:5\n    |\n LL | /     if x {\n LL | |         return false;\n@@ -51,7 +111,7 @@ LL | |     };\n    | |_____^ help: you can reduce it to: `return !x`\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/fixable.rs:88:5\n+  --> $DIR/fixable.rs:121:5\n    |\n LL | /     if x && y {\n LL | |         return true;\n@@ -61,7 +121,7 @@ LL | |     };\n    | |_____^ help: you can reduce it to: `return x && y`\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/fixable.rs:96:5\n+  --> $DIR/fixable.rs:129:5\n    |\n LL | /     if x && y {\n LL | |         return false;\n@@ -71,33 +131,33 @@ LL | |     };\n    | |_____^ help: you can reduce it to: `return !(x && y)`\n \n error: equality checks against true are unnecessary\n-  --> $DIR/fixable.rs:104:8\n+  --> $DIR/fixable.rs:137:8\n    |\n LL |     if x == true {};\n    |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n    |\n    = note: `-D clippy::bool-comparison` implied by `-D warnings`\n \n error: equality checks against false can be replaced by a negation\n-  --> $DIR/fixable.rs:108:8\n+  --> $DIR/fixable.rs:141:8\n    |\n LL |     if x == false {};\n    |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: equality checks against true are unnecessary\n-  --> $DIR/fixable.rs:118:8\n+  --> $DIR/fixable.rs:151:8\n    |\n LL |     if x == true {};\n    |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: equality checks against false can be replaced by a negation\n-  --> $DIR/fixable.rs:119:8\n+  --> $DIR/fixable.rs:152:8\n    |\n LL |     if x == false {};\n    |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/fixable.rs:128:12\n+  --> $DIR/fixable.rs:161:12\n    |\n LL |       } else if returns_bool() {\n    |  ____________^\n@@ -108,7 +168,7 @@ LL | |     };\n    | |_____^ help: you can reduce it to: `{ !returns_bool() }`\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/fixable.rs:141:5\n+  --> $DIR/fixable.rs:174:5\n    |\n LL | /     if unsafe { no(4) } & 1 != 0 {\n LL | |         true\n@@ -118,16 +178,16 @@ LL | |     };\n    | |_____^ help: you can reduce it to: `(unsafe { no(4) } & 1 != 0)`\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/fixable.rs:146:30\n+  --> $DIR/fixable.rs:179:30\n    |\n LL |     let _brackets_unneeded = if unsafe { no(4) } & 1 != 0 { true } else { false };\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to: `unsafe { no(4) } & 1 != 0`\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/fixable.rs:149:9\n+  --> $DIR/fixable.rs:182:9\n    |\n LL |         if unsafe { no(4) } & 1 != 0 { true } else { false }\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to: `(unsafe { no(4) } & 1 != 0)`\n \n-error: aborting due to 15 previous errors\n+error: aborting due to 21 previous errors\n "}]}