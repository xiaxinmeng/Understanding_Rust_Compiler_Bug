{"sha": "69a997bef25e47ce0884a69a52a4120b0fe1b9c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5YTk5N2JlZjI1ZTQ3Y2UwODg0YTY5YTUyYTQxMjBiMGZlMWI5YzE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-01-01T17:41:10Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-01-22T09:21:52Z"}, "message": "update const_err description", "tree": {"sha": "76833aee168597b819c3e31563e51a820c5dd4c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76833aee168597b819c3e31563e51a820c5dd4c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69a997bef25e47ce0884a69a52a4120b0fe1b9c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69a997bef25e47ce0884a69a52a4120b0fe1b9c1", "html_url": "https://github.com/rust-lang/rust/commit/69a997bef25e47ce0884a69a52a4120b0fe1b9c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69a997bef25e47ce0884a69a52a4120b0fe1b9c1/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5be27b7a70926c8ae4ae2a35f9984f6e04042849", "url": "https://api.github.com/repos/rust-lang/rust/commits/5be27b7a70926c8ae4ae2a35f9984f6e04042849", "html_url": "https://github.com/rust-lang/rust/commit/5be27b7a70926c8ae4ae2a35f9984f6e04042849"}], "stats": {"total": 33, "additions": 7, "deletions": 26}, "files": [{"sha": "658372ac336a8ab34db0f9d508e82e63eb325bf6", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 7, "deletions": 26, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/69a997bef25e47ce0884a69a52a4120b0fe1b9c1/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69a997bef25e47ce0884a69a52a4120b0fe1b9c1/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=69a997bef25e47ce0884a69a52a4120b0fe1b9c1", "patch": "@@ -238,41 +238,22 @@ declare_lint! {\n     ///\n     /// ```rust,compile_fail\n     /// #![allow(unconditional_panic)]\n-    /// let x: &'static i32 = &(1 / 0);\n+    /// const C: i32 = 1/0;\n     /// ```\n     ///\n     /// {{produces}}\n     ///\n     /// ### Explanation\n     ///\n-    /// This lint detects code that is very likely incorrect. If this lint is\n-    /// allowed, then the code will not be evaluated at compile-time, and\n-    /// instead continue to generate code to evaluate at runtime, which may\n-    /// panic during runtime.\n+    /// This lint detects constants that fail to evaluate. Allowing the lint will accept the\n+    /// constant declaration, but any use of this constant will still lead to a hard error. This is\n+    /// a future incompatibility lint; the plan is to eventually entirely forbid even declaring\n+    /// constants that cannot be evaluated.  See [issue #71800] for more details.\n     ///\n-    /// Note that this lint may trigger in either inside or outside of a\n-    /// [const context]. Outside of a [const context], the compiler can\n-    /// sometimes evaluate an expression at compile-time in order to generate\n-    /// more efficient code. As the compiler becomes better at doing this, it\n-    /// needs to decide what to do when it encounters code that it knows for\n-    /// certain will panic or is otherwise incorrect. Making this a hard error\n-    /// would prevent existing code that exhibited this behavior from\n-    /// compiling, breaking backwards-compatibility. However, this is almost\n-    /// certainly incorrect code, so this is a deny-by-default lint. For more\n-    /// details, see [RFC 1229] and [issue #28238].\n-    ///\n-    /// Note that there are several other more specific lints associated with\n-    /// compile-time evaluation, such as [`arithmetic_overflow`],\n-    /// [`unconditional_panic`].\n-    ///\n-    /// [const context]: https://doc.rust-lang.org/reference/const_eval.html#const-context\n-    /// [RFC 1229]: https://github.com/rust-lang/rfcs/blob/master/text/1229-compile-time-asserts.md\n-    /// [issue #28238]: https://github.com/rust-lang/rust/issues/28238\n-    /// [`arithmetic_overflow`]: deny-by-default.html#arithmetic-overflow\n-    /// [`unconditional_panic`]: deny-by-default.html#unconditional-panic\n+    /// [issue #71800]: https://github.com/rust-lang/rust/issues/71800\n     pub CONST_ERR,\n     Deny,\n-    \"constant evaluation detected erroneous expression\",\n+    \"constant evaluation encountered erroneous expression\",\n     report_in_external_macro\n }\n "}]}