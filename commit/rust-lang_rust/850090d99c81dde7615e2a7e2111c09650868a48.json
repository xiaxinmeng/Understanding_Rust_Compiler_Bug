{"sha": "850090d99c81dde7615e2a7e2111c09650868a48", "node_id": "C_kwDOAAsO6NoAKDg1MDA5MGQ5OWM4MWRkZTc2MTVlMmE3ZTIxMTFjMDk2NTA4NjhhNDg", "commit": {"author": {"name": "Thom Chiovoloni", "email": "thom@shift.click", "date": "2022-09-05T15:37:20Z"}, "committer": {"name": "Thom Chiovoloni", "email": "thom@shift.click", "date": "2022-09-05T15:39:11Z"}, "message": "Avoid UB in the Windows filesystem code in... bootstrap?", "tree": {"sha": "9e1ba432550f8f7f53d7ef604ae7994aaa7a04ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e1ba432550f8f7f53d7ef604ae7994aaa7a04ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/850090d99c81dde7615e2a7e2111c09650868a48", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQQszICQ1r0Zqrp7OLPXcz0dendfCgUCYxYYHwAKCRDXcz0dendf\nCmVZAPwMj0KoN1lEu1CHevmt4LY2XaNzXoWwmypufppBJHe9SwD/aNlURQPP8i2M\npuxq4MkmT0wI8HDdZOebQzgMyx9K3Aw=\n=X3dZ\n-----END PGP SIGNATURE-----", "payload": "tree 9e1ba432550f8f7f53d7ef604ae7994aaa7a04ad\nparent 6e4a9ab650b135ae0ff761e4a37d96c8bcaf7b3d\nauthor Thom Chiovoloni <thom@shift.click> 1662392240 -0700\ncommitter Thom Chiovoloni <thom@shift.click> 1662392351 -0700\n\nAvoid UB in the Windows filesystem code in... bootstrap?\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/850090d99c81dde7615e2a7e2111c09650868a48", "html_url": "https://github.com/rust-lang/rust/commit/850090d99c81dde7615e2a7e2111c09650868a48", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/850090d99c81dde7615e2a7e2111c09650868a48/comments", "author": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e4a9ab650b135ae0ff761e4a37d96c8bcaf7b3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e4a9ab650b135ae0ff761e4a37d96c8bcaf7b3d", "html_url": "https://github.com/rust-lang/rust/commit/6e4a9ab650b135ae0ff761e4a37d96c8bcaf7b3d"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "95e711737738a4e661fe1f86c0b7edfb09e3241c", "filename": "src/bootstrap/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/850090d99c81dde7615e2a7e2111c09650868a48/src%2Fbootstrap%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/850090d99c81dde7615e2a7e2111c09650868a48/src%2Fbootstrap%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCargo.toml?ref=850090d99c81dde7615e2a7e2111c09650868a48", "patch": "@@ -67,6 +67,7 @@ features = [\n     \"psapi\",\n     \"impl-default\",\n     \"timezoneapi\",\n+    \"winbase\",\n ]\n \n [dev-dependencies]"}, {"sha": "0ebabbd5ca5c04599f065a52f7654a93e6232fcc", "filename": "src/bootstrap/util.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/850090d99c81dde7615e2a7e2111c09650868a48/src%2Fbootstrap%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/850090d99c81dde7615e2a7e2111c09650868a48/src%2Fbootstrap%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Futil.rs?ref=850090d99c81dde7615e2a7e2111c09650868a48", "patch": "@@ -197,9 +197,11 @@ pub fn symlink_dir(config: &Config, src: &Path, dest: &Path) -> io::Result<()> {\n                 ptr::null_mut(),\n             );\n \n-            let mut data = [0u8; MAXIMUM_REPARSE_DATA_BUFFER_SIZE as usize];\n-            let db = data.as_mut_ptr() as *mut REPARSE_MOUNTPOINT_DATA_BUFFER;\n-            let buf = &mut (*db).ReparseTarget as *mut u16;\n+            #[repr(C, align(8))]\n+            struct Align8<T>(T);\n+            let mut data = Align8([0u8; MAXIMUM_REPARSE_DATA_BUFFER_SIZE as usize]);\n+            let db = data.0.as_mut_ptr() as *mut REPARSE_MOUNTPOINT_DATA_BUFFER;\n+            let buf = core::ptr::addr_of_mut!((*db).ReparseTarget) as *mut u16;\n             let mut i = 0;\n             // FIXME: this conversion is very hacky\n             let v = br\"\\??\\\";\n@@ -219,7 +221,7 @@ pub fn symlink_dir(config: &Config, src: &Path, dest: &Path) -> io::Result<()> {\n             let res = DeviceIoControl(\n                 h as *mut _,\n                 FSCTL_SET_REPARSE_POINT,\n-                data.as_ptr() as *mut _,\n+                db.cast(),\n                 (*db).ReparseDataLength + 8,\n                 ptr::null_mut(),\n                 0,"}]}