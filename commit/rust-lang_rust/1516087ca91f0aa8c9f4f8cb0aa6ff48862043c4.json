{"sha": "1516087ca91f0aa8c9f4f8cb0aa6ff48862043c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1MTYwODdjYTkxZjBhYThjOWY0ZjhjYjBhYTZmZjQ4ODYyMDQzYzQ=", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@gmail.com", "date": "2019-04-29T20:57:29Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gmail.com", "date": "2019-05-07T15:09:39Z"}, "message": "add negative tests for OS X LLVM target changes", "tree": {"sha": "d69fa2c6a07f398c7b0a8de1a1ecca752db1c765", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d69fa2c6a07f398c7b0a8de1a1ecca752db1c765"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1516087ca91f0aa8c9f4f8cb0aa6ff48862043c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1516087ca91f0aa8c9f4f8cb0aa6ff48862043c4", "html_url": "https://github.com/rust-lang/rust/commit/1516087ca91f0aa8c9f4f8cb0aa6ff48862043c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1516087ca91f0aa8c9f4f8cb0aa6ff48862043c4/comments", "author": {"login": "froydnj", "id": 151096, "node_id": "MDQ6VXNlcjE1MTA5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/151096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froydnj", "html_url": "https://github.com/froydnj", "followers_url": "https://api.github.com/users/froydnj/followers", "following_url": "https://api.github.com/users/froydnj/following{/other_user}", "gists_url": "https://api.github.com/users/froydnj/gists{/gist_id}", "starred_url": "https://api.github.com/users/froydnj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froydnj/subscriptions", "organizations_url": "https://api.github.com/users/froydnj/orgs", "repos_url": "https://api.github.com/users/froydnj/repos", "events_url": "https://api.github.com/users/froydnj/events{/privacy}", "received_events_url": "https://api.github.com/users/froydnj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "froydnj", "id": 151096, "node_id": "MDQ6VXNlcjE1MTA5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/151096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froydnj", "html_url": "https://github.com/froydnj", "followers_url": "https://api.github.com/users/froydnj/followers", "following_url": "https://api.github.com/users/froydnj/following{/other_user}", "gists_url": "https://api.github.com/users/froydnj/gists{/gist_id}", "starred_url": "https://api.github.com/users/froydnj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froydnj/subscriptions", "organizations_url": "https://api.github.com/users/froydnj/orgs", "repos_url": "https://api.github.com/users/froydnj/repos", "events_url": "https://api.github.com/users/froydnj/events{/privacy}", "received_events_url": "https://api.github.com/users/froydnj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "758dc9af504e2fe75813bd362619231ecc727898", "url": "https://api.github.com/repos/rust-lang/rust/commits/758dc9af504e2fe75813bd362619231ecc727898", "html_url": "https://github.com/rust-lang/rust/commit/758dc9af504e2fe75813bd362619231ecc727898"}], "stats": {"total": 63, "additions": 63, "deletions": 0}, "files": [{"sha": "eb826590523b73cd2bf14b1842cc8ba5ba56c885", "filename": "src/test/codegen/i686-no-macosx-deployment-target.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/1516087ca91f0aa8c9f4f8cb0aa6ff48862043c4/src%2Ftest%2Fcodegen%2Fi686-no-macosx-deployment-target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1516087ca91f0aa8c9f4f8cb0aa6ff48862043c4/src%2Ftest%2Fcodegen%2Fi686-no-macosx-deployment-target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fi686-no-macosx-deployment-target.rs?ref=1516087ca91f0aa8c9f4f8cb0aa6ff48862043c4", "patch": "@@ -0,0 +1,26 @@\n+//\n+// Checks that we leave the target alone MACOSX_DEPLOYMENT_TARGET is unset.\n+// See issue #60235.\n+\n+// compile-flags: -O --target=i686-apple-darwin --crate-type=rlib\n+// unset-rustc-env:MACOSX_DEPLOYMENT_TARGET\n+#![feature(no_core, lang_items)]\n+#![no_core]\n+\n+#[lang=\"sized\"]\n+trait Sized { }\n+#[lang=\"freeze\"]\n+trait Freeze { }\n+#[lang=\"copy\"]\n+trait Copy { }\n+\n+#[repr(C)]\n+pub struct Bool {\n+    b: bool,\n+}\n+\n+// CHECK: target triple = \"i686-apple-darwin\"\n+#[no_mangle]\n+pub extern \"C\" fn structbool() -> Bool {\n+    Bool { b: true }\n+}"}, {"sha": "58a11d1095bbe0a79b72471427c15c0f798c9e4e", "filename": "src/test/codegen/x86_64-no-macosx-deployment-target.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/1516087ca91f0aa8c9f4f8cb0aa6ff48862043c4/src%2Ftest%2Fcodegen%2Fx86_64-no-macosx-deployment-target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1516087ca91f0aa8c9f4f8cb0aa6ff48862043c4/src%2Ftest%2Fcodegen%2Fx86_64-no-macosx-deployment-target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fx86_64-no-macosx-deployment-target.rs?ref=1516087ca91f0aa8c9f4f8cb0aa6ff48862043c4", "patch": "@@ -0,0 +1,26 @@\n+//\n+// Checks that we leave the target alone when MACOSX_DEPLOYMENT_TARGET is unset.\n+// See issue #60235.\n+\n+// compile-flags: -O --target=x86_64-apple-darwin --crate-type=rlib\n+// unset-rustc-env:MACOSX_DEPLOYMENT_TARGET\n+#![feature(no_core, lang_items)]\n+#![no_core]\n+\n+#[lang=\"sized\"]\n+trait Sized { }\n+#[lang=\"freeze\"]\n+trait Freeze { }\n+#[lang=\"copy\"]\n+trait Copy { }\n+\n+#[repr(C)]\n+pub struct Bool {\n+    b: bool,\n+}\n+\n+// CHECK: target triple = \"x86_64-apple-darwin\"\n+#[no_mangle]\n+pub extern \"C\" fn structbool() -> Bool {\n+    Bool { b: true }\n+}"}, {"sha": "54e9b76a21ee07920fff3862cb9b5166f38528cb", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1516087ca91f0aa8c9f4f8cb0aa6ff48862043c4/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1516087ca91f0aa8c9f4f8cb0aa6ff48862043c4/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=1516087ca91f0aa8c9f4f8cb0aa6ff48862043c4", "patch": "@@ -305,6 +305,9 @@ pub struct TestProps {\n     pub extern_private: Vec<String>,\n     // Environment settings to use for compiling\n     pub rustc_env: Vec<(String, String)>,\n+    // Environment variables to unset prior to compiling.\n+    // Variables are unset before applying 'rustc_env'.\n+    pub unset_rustc_env: Vec<String>,\n     // Environment settings to use during execution\n     pub exec_env: Vec<(String, String)>,\n     // Lines to check if they appear in the expected debugger output\n@@ -373,6 +376,7 @@ impl TestProps {\n             extern_private: vec![],\n             revisions: vec![],\n             rustc_env: vec![],\n+            unset_rustc_env: vec![],\n             exec_env: vec![],\n             check_lines: vec![],\n             build_aux_docs: false,\n@@ -499,6 +503,10 @@ impl TestProps {\n                 self.rustc_env.push(ee);\n             }\n \n+            if let Some(ev) = config.parse_name_value_directive(ln, \"unset-rustc-env\") {\n+                self.unset_rustc_env.push(ev);\n+            }\n+\n             if let Some(cl) = config.parse_check_line(ln) {\n                 self.check_lines.push(cl);\n             }"}, {"sha": "d3e39867a311fddc602e6f2cae3e5cae7989b874", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1516087ca91f0aa8c9f4f8cb0aa6ff48862043c4/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1516087ca91f0aa8c9f4f8cb0aa6ff48862043c4/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=1516087ca91f0aa8c9f4f8cb0aa6ff48862043c4", "patch": "@@ -1692,6 +1692,9 @@ impl<'test> TestCx<'test> {\n             add_extern_priv(&private_lib, true);\n         }\n \n+        self.props.unset_rustc_env.clone()\n+            .iter()\n+            .fold(&mut rustc, |rustc, v| rustc.env_remove(v));\n         rustc.envs(self.props.rustc_env.clone());\n         self.compose_and_run(\n             rustc,"}]}