{"sha": "30a4eab380a5452da5f66045962449e58be4c718", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwYTRlYWIzODBhNTQ1MmRhNWY2NjA0NTk2MjQ0OWU1OGJlNGM3MTg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-22T23:04:27Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-22T23:06:25Z"}, "message": "Autoderef indexes and fields of unique boxes\n\nIssue #409", "tree": {"sha": "073c589e851989d911c397b13771e6e6a7b4fd84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/073c589e851989d911c397b13771e6e6a7b4fd84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30a4eab380a5452da5f66045962449e58be4c718", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30a4eab380a5452da5f66045962449e58be4c718", "html_url": "https://github.com/rust-lang/rust/commit/30a4eab380a5452da5f66045962449e58be4c718", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30a4eab380a5452da5f66045962449e58be4c718/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dff4986f9e6efab331acf68963253c2da1a1f2ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/dff4986f9e6efab331acf68963253c2da1a1f2ff", "html_url": "https://github.com/rust-lang/rust/commit/dff4986f9e6efab331acf68963253c2da1a1f2ff"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "3d2dd1bbe563469c001790a01fc47e1ff30def74", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/30a4eab380a5452da5f66045962449e58be4c718/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30a4eab380a5452da5f66045962449e58be4c718/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=30a4eab380a5452da5f66045962449e58be4c718", "patch": "@@ -2305,7 +2305,12 @@ fn autoderef(cx: @block_ctxt, v: ValueRef, t: ty::t) -> result_t {\n                 v1 = PointerCast(cx, body, T_ptr(llty));\n             } else { v1 = body; }\n           }\n-          ty::ty_uniq(t) { fail \"autoderef uniq unimplemented\"; }\n+          ty::ty_uniq(_) {\n+            check trans_uniq::type_is_unique_box(cx, t1);\n+            let derefed = trans_uniq::autoderef(cx, v1, t1);\n+            t1 = derefed.t;\n+            v1 = derefed.v;\n+          }\n           ty::ty_res(did, inner, tps) {\n             t1 = ty::substitute_type_params(ccx.tcx, tps, inner);\n             v1 = GEP(cx, v1, [C_int(0), C_int(1)]);"}, {"sha": "2003f6a55aabf7d481965550aa275e243cb3ef15", "filename": "src/comp/middle/trans_uniq.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/30a4eab380a5452da5f66045962449e58be4c718/src%2Fcomp%2Fmiddle%2Ftrans_uniq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30a4eab380a5452da5f66045962449e58be4c718/src%2Fcomp%2Fmiddle%2Ftrans_uniq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_uniq.rs?ref=30a4eab380a5452da5f66045962449e58be4c718", "patch": "@@ -15,7 +15,7 @@ import trans::{\n     new_sub_block_ctxt\n };\n \n-export trans_uniq, make_free_glue, type_is_unique_box, copy_val;\n+export trans_uniq, make_free_glue, type_is_unique_box, copy_val, autoderef;\n \n pure fn type_is_unique_box(bcx: @block_ctxt, ty: ty::t) -> bool {\n     unchecked {\n@@ -100,4 +100,11 @@ fn copy_val(cx: @block_ctxt, dst: ValueRef, src: ValueRef,\n     let bcx = trans::copy_val(bcx, INIT, dst, src, content_ty);\n     Store(bcx, src, llptr);\n     ret bcx;\n+}\n+\n+fn autoderef(bcx: @block_ctxt, v: ValueRef, t: ty::t)\n+    : type_is_unique_box(bcx, t) -> {v: ValueRef, t: ty::t} {\n+\n+    let content_ty = content_ty(bcx, t);\n+    ret {v: v, t: content_ty};\n }\n\\ No newline at end of file"}, {"sha": "7d7936b6cf17d91f126100b7e35968b0e7e0d5c0", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/30a4eab380a5452da5f66045962449e58be4c718/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30a4eab380a5452da5f66045962449e58be4c718/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=30a4eab380a5452da5f66045962449e58be4c718", "patch": "@@ -845,7 +845,7 @@ fn do_autoderef(fcx: @fn_ctxt, sp: span, t: ty::t) -> ty::t {\n     let t1 = t;\n     while true {\n         alt structure_of(fcx, sp, t1) {\n-          ty::ty_box(inner) {\n+          ty::ty_box(inner) | ty::ty_uniq(inner) {\n             alt ty::struct(fcx.ccx.tcx, t1) {\n               ty::ty_var(v1) {\n                 if ty::occurs_check_fails(fcx.ccx.tcx, some(sp), v1,"}, {"sha": "2bfbdf45d6487a385b0ad075aa6b1e1524770efe", "filename": "src/test/run-pass/unique-autoderef-field.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/30a4eab380a5452da5f66045962449e58be4c718/src%2Ftest%2Frun-pass%2Funique-autoderef-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30a4eab380a5452da5f66045962449e58be4c718/src%2Ftest%2Frun-pass%2Funique-autoderef-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-autoderef-field.rs?ref=30a4eab380a5452da5f66045962449e58be4c718", "patch": "@@ -0,0 +1,6 @@\n+fn main() {\n+    let i = ~{\n+        j: 100\n+    };\n+    assert i.j == 100;\n+}\n\\ No newline at end of file"}, {"sha": "6b978fc1506e9e428b8b2c1bcdae5d344b3020f9", "filename": "src/test/run-pass/unique-autoderef-index.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/30a4eab380a5452da5f66045962449e58be4c718/src%2Ftest%2Frun-pass%2Funique-autoderef-index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30a4eab380a5452da5f66045962449e58be4c718/src%2Ftest%2Frun-pass%2Funique-autoderef-index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-autoderef-index.rs?ref=30a4eab380a5452da5f66045962449e58be4c718", "patch": "@@ -0,0 +1,4 @@\n+fn main() {\n+    let i = ~[100];\n+    assert i[0] == 100;\n+}\n\\ No newline at end of file"}]}