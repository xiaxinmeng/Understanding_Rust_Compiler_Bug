{"sha": "5b72632c98a6e45dfe2c1aaddad1b05f5259a914", "node_id": "C_kwDOAAsO6NoAKDViNzI2MzJjOThhNmU0NWRmZTJjMWFhZGRhZDFiMDVmNTI1OWE5MTQ", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-05-20T19:03:24Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-05-20T19:03:24Z"}, "message": "move  to sus and fix dogfood", "tree": {"sha": "b94cbdc09eac548aa10d37abac4b54d7c522f3cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b94cbdc09eac548aa10d37abac4b54d7c522f3cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b72632c98a6e45dfe2c1aaddad1b05f5259a914", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEsfZNmu/fmIv8KDcv/Ny/Ka9k1gEFAmKH5fwACgkQ/Ny/Ka9k\n1gHJ3RAAivvGHEb2intMS49N5bwepPigUOs4SRY5I+2j7wwGPltSlo+YOZjwBQkx\n1u9gX9JOqmII+BFPRSiI95XB7ph23Ml0g/Ntazn0Dwigj2cratrV0pxYfuW8pXFv\n7/u+krZQqYymFckGfZKKp/Mau5kS2LjsXdm0gLRQF/cBnlf6iNzGmdiAc5owQ370\nPYXSKVslEGFmGvSuIA2iwn423Wuh702EOFFdTY4MtPnWVo/MphwmQgA5a1gJdyIi\nblpqKa0LZe6QntjWGr3hmnYrWheOjZW5V6ArbAIORKR+PIO4q0VdpfnTlfho5Kkd\nhjsebVTAQXdM/i+fH5mY30PerDTVCf1Vku70JAa3VlZaa5rQFPxLEcanp4juMcfh\nAoMjbkcH9sA4shdyInR+Z9v2UAN+9qZ5J+MhYrQrQ4bb074LPvZszHTM4dEZ1+8V\nj3JojKmvB61h8/9gVOqSZ2u4Eo4K9cR0VgqzOIVGOKqUIu3o/gE1k9FyaP8JBn0m\nwElvycX1FGu/DBMA5T0plARge9AifzkfgDMZkN1Ll2iexLjbfJBArPE6q26j2oXg\nmlZnKgLDZT4XOvXirW3ZjydCQqfzGfFaBRBQKBxKOgnRJurn3iVtkdaUl8jNFPYr\n93Czm9/WJtlUOu8pM9l7/O00eXVIePsgssCraZJVBYo+nLx+r6E=\n=jbt6\n-----END PGP SIGNATURE-----", "payload": "tree b94cbdc09eac548aa10d37abac4b54d7c522f3cc\nparent 4e6cf0036e5e7afdc4fe86cccc99482ff4cf71bf\nauthor xFrednet <xFrednet@gmail.com> 1653073404 +0200\ncommitter xFrednet <xFrednet@gmail.com> 1653073404 +0200\n\nmove  to sus and fix dogfood\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b72632c98a6e45dfe2c1aaddad1b05f5259a914", "html_url": "https://github.com/rust-lang/rust/commit/5b72632c98a6e45dfe2c1aaddad1b05f5259a914", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b72632c98a6e45dfe2c1aaddad1b05f5259a914/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e6cf0036e5e7afdc4fe86cccc99482ff4cf71bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e6cf0036e5e7afdc4fe86cccc99482ff4cf71bf", "html_url": "https://github.com/rust-lang/rust/commit/4e6cf0036e5e7afdc4fe86cccc99482ff4cf71bf"}], "stats": {"total": 29, "additions": 14, "deletions": 15}, "files": [{"sha": "be5c478900facbb8551c7f4532c28631d25b2bc8", "filename": "clippy_lints/src/lib.register_all.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5b72632c98a6e45dfe2c1aaddad1b05f5259a914/clippy_lints%2Fsrc%2Flib.register_all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b72632c98a6e45dfe2c1aaddad1b05f5259a914/clippy_lints%2Fsrc%2Flib.register_all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_all.rs?ref=5b72632c98a6e45dfe2c1aaddad1b05f5259a914", "patch": "@@ -278,6 +278,7 @@ store.register_group(true, \"clippy::all\", Some(\"clippy_all\"), vec![\n     LintId::of(self_assignment::SELF_ASSIGNMENT),\n     LintId::of(self_named_constructors::SELF_NAMED_CONSTRUCTORS),\n     LintId::of(serde_api::SERDE_API_MISUSE),\n+    LintId::of(significant_drop_in_scrutinee::SIGNIFICANT_DROP_IN_SCRUTINEE),\n     LintId::of(single_component_path_imports::SINGLE_COMPONENT_PATH_IMPORTS),\n     LintId::of(size_of_in_element_count::SIZE_OF_IN_ELEMENT_COUNT),\n     LintId::of(slow_vector_initialization::SLOW_VECTOR_INITIALIZATION),"}, {"sha": "ec187563b3f645a1c3c50d774cc8f2e26bf0d2ab", "filename": "clippy_lints/src/lib.register_nursery.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5b72632c98a6e45dfe2c1aaddad1b05f5259a914/clippy_lints%2Fsrc%2Flib.register_nursery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b72632c98a6e45dfe2c1aaddad1b05f5259a914/clippy_lints%2Fsrc%2Flib.register_nursery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_nursery.rs?ref=5b72632c98a6e45dfe2c1aaddad1b05f5259a914", "patch": "@@ -25,7 +25,6 @@ store.register_group(true, \"clippy::nursery\", Some(\"clippy_nursery\"), vec![\n     LintId::of(path_buf_push_overwrite::PATH_BUF_PUSH_OVERWRITE),\n     LintId::of(redundant_pub_crate::REDUNDANT_PUB_CRATE),\n     LintId::of(regex::TRIVIAL_REGEX),\n-    LintId::of(significant_drop_in_scrutinee::SIGNIFICANT_DROP_IN_SCRUTINEE),\n     LintId::of(strings::STRING_LIT_AS_BYTES),\n     LintId::of(suspicious_operation_groupings::SUSPICIOUS_OPERATION_GROUPINGS),\n     LintId::of(trailing_empty_array::TRAILING_EMPTY_ARRAY),"}, {"sha": "2de49f1624a4264e8074a1ea453f7af251cb1680", "filename": "clippy_lints/src/lib.register_suspicious.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5b72632c98a6e45dfe2c1aaddad1b05f5259a914/clippy_lints%2Fsrc%2Flib.register_suspicious.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b72632c98a6e45dfe2c1aaddad1b05f5259a914/clippy_lints%2Fsrc%2Flib.register_suspicious.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_suspicious.rs?ref=5b72632c98a6e45dfe2c1aaddad1b05f5259a914", "patch": "@@ -27,6 +27,7 @@ store.register_group(true, \"clippy::suspicious\", Some(\"clippy_suspicious\"), vec!\n     LintId::of(mut_key::MUTABLE_KEY_TYPE),\n     LintId::of(octal_escapes::OCTAL_ESCAPES),\n     LintId::of(rc_clone_in_vec_init::RC_CLONE_IN_VEC_INIT),\n+    LintId::of(significant_drop_in_scrutinee::SIGNIFICANT_DROP_IN_SCRUTINEE),\n     LintId::of(suspicious_trait_impl::SUSPICIOUS_ARITHMETIC_IMPL),\n     LintId::of(suspicious_trait_impl::SUSPICIOUS_OP_ASSIGN_IMPL),\n ])"}, {"sha": "4cebfd7a93f7e2e054f851219d7ffaa662fc472b", "filename": "clippy_lints/src/significant_drop_in_scrutinee.rs", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/5b72632c98a6e45dfe2c1aaddad1b05f5259a914/clippy_lints%2Fsrc%2Fsignificant_drop_in_scrutinee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b72632c98a6e45dfe2c1aaddad1b05f5259a914/clippy_lints%2Fsrc%2Fsignificant_drop_in_scrutinee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsignificant_drop_in_scrutinee.rs?ref=5b72632c98a6e45dfe2c1aaddad1b05f5259a914", "patch": "@@ -83,7 +83,7 @@ declare_clippy_lint! {\n     /// ```\n     #[clippy::version = \"1.60.0\"]\n     pub SIGNIFICANT_DROP_IN_SCRUTINEE,\n-    nursery,\n+    suspicious,\n     \"warns when a temporary of a type with a drop with a significant side-effect might have a surprising lifetime\"\n }\n \n@@ -99,7 +99,7 @@ impl<'tcx> LateLintPass<'tcx> for SignificantDropInScrutinee {\n                     found.found_span,\n                     \"temporary with significant drop in match scrutinee\",\n                     |diag| set_diagnostic(diag, cx, expr, found),\n-                )\n+                );\n             }\n         }\n     }\n@@ -148,8 +148,8 @@ fn set_diagnostic<'tcx>(diag: &mut Diagnostic, cx: &LateContext<'tcx>, expr: &'t\n     );\n }\n \n-/// If the expression is an ExprKind::Match, check if the scrutinee has a significant drop that may\n-/// have a surprising lifetime.\n+/// If the expression is an `ExprKind::Match`, check if the scrutinee has a significant drop that\n+/// may have a surprising lifetime.\n fn has_significant_drop_in_scrutinee<'tcx, 'a>(\n     cx: &'a LateContext<'tcx>,\n     expr: &'tcx Expr<'tcx>,\n@@ -171,6 +171,7 @@ struct SigDropHelper<'a, 'tcx> {\n     special_handling_for_binary_op: bool,\n }\n \n+#[expect(clippy::enum_variant_names)]\n #[derive(Debug, PartialEq, Eq, Clone, Copy)]\n enum LintSuggestion {\n     MoveOnly,\n@@ -213,7 +214,7 @@ impl<'a, 'tcx> SigDropHelper<'a, 'tcx> {\n     }\n \n     /// This will try to set the current suggestion (so it can be moved into the suggestions vec\n-    /// later). If allow_move_and_clone is false, the suggestion *won't* be set -- this gives us\n+    /// later). If `allow_move_and_clone` is false, the suggestion *won't* be set -- this gives us\n     /// an opportunity to look for another type in the chain that will be trivially copyable.\n     /// However, if we are at the the end of the chain, we want to accept whatever is there. (The\n     /// suggestion won't actually be output, but the diagnostic message will be output, so the user\n@@ -313,10 +314,10 @@ impl<'a, 'tcx> SigDropHelper<'a, 'tcx> {\n                 }\n                 false\n             },\n-            rustc_middle::ty::Array(ty, _) => self.has_sig_drop_attr(cx, *ty),\n-            rustc_middle::ty::RawPtr(TypeAndMut { ty, .. }) => self.has_sig_drop_attr(cx, *ty),\n-            rustc_middle::ty::Ref(_, ty, _) => self.has_sig_drop_attr(cx, *ty),\n-            rustc_middle::ty::Slice(ty) => self.has_sig_drop_attr(cx, *ty),\n+            rustc_middle::ty::Array(ty, _)\n+            | rustc_middle::ty::RawPtr(TypeAndMut { ty, .. })\n+            | rustc_middle::ty::Ref(_, ty, _)\n+            | rustc_middle::ty::Slice(ty) => self.has_sig_drop_attr(cx, *ty),\n             _ => false,\n         }\n     }\n@@ -332,15 +333,12 @@ impl<'a, 'tcx> Visitor<'tcx> for SigDropHelper<'a, 'tcx> {\n \n         match ex.kind {\n             ExprKind::MethodCall(_, [ref expr, ..], _) => {\n-                self.visit_expr(expr)\n+                self.visit_expr(expr);\n             }\n             ExprKind::Binary(_, left, right) => {\n                 self.visit_exprs_for_binary_ops(left, right, false, ex.span);\n             }\n-            ExprKind::Assign(left, right, _) => {\n-                self.visit_exprs_for_binary_ops(left, right, true, ex.span);\n-            }\n-            ExprKind::AssignOp(_, left, right) => {\n+            ExprKind::Assign(left, right, _) | ExprKind::AssignOp(_, left, right) => {\n                 self.visit_exprs_for_binary_ops(left, right, true, ex.span);\n             }\n             ExprKind::Tup(exprs) => {"}]}