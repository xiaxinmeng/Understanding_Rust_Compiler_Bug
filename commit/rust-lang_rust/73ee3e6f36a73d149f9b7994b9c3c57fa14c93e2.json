{"sha": "73ee3e6f36a73d149f9b7994b9c3c57fa14c93e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczZWUzZTZmMzZhNzNkMTQ5ZjliNzk5NGI5YzNjNTdmYTE0YzkzZTI=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-03-31T13:38:43Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-03-31T15:35:00Z"}, "message": "whitelist more non-expressive-name false positives", "tree": {"sha": "a14687302ca38562ab8952d92e6d2e8ef96fc91a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a14687302ca38562ab8952d92e6d2e8ef96fc91a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73ee3e6f36a73d149f9b7994b9c3c57fa14c93e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73ee3e6f36a73d149f9b7994b9c3c57fa14c93e2", "html_url": "https://github.com/rust-lang/rust/commit/73ee3e6f36a73d149f9b7994b9c3c57fa14c93e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73ee3e6f36a73d149f9b7994b9c3c57fa14c93e2/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62bc6423a928794c87a790df03ad1eec323918a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/62bc6423a928794c87a790df03ad1eec323918a7", "html_url": "https://github.com/rust-lang/rust/commit/62bc6423a928794c87a790df03ad1eec323918a7"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "36fcc292bfc0333e4c67cbd50f60eb51039a3eb9", "filename": "src/non_expressive_names.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/73ee3e6f36a73d149f9b7994b9c3c57fa14c93e2/src%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73ee3e6f36a73d149f9b7994b9c3c57fa14c93e2/src%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fnon_expressive_names.rs?ref=73ee3e6f36a73d149f9b7994b9c3c57fa14c93e2", "patch": "@@ -60,6 +60,8 @@ struct SimilarNamesLocalVisitor<'a, 'b: 'a> {\n const WHITELIST: &'static [&'static [&'static str]] = &[\n     &[\"parsed\", \"parser\"],\n     &[\"lhs\", \"rhs\"],\n+    &[\"tx\", \"rx\"],\n+    &[\"set\", \"get\"],\n ];\n \n struct SimilarNamesNameVisitor<'a, 'b: 'a, 'c: 'b>(&'a mut SimilarNamesLocalVisitor<'b, 'c>);\n@@ -88,13 +90,11 @@ fn whitelisted(interned_name: &str, list: &[&str]) -> bool {\n     }\n     for name in list {\n         // name_*\n-        let allow_start = name.chars().chain(Some('_'));\n-        if interned_name.chars().zip(allow_start).all(|(l, r)| l == r) {\n+        if interned_name.chars().zip(name.chars()).all(|(l, r)| l == r) {\n             return true;\n         }\n         // *_name\n-        let allow_end = Some('_').into_iter().chain(name.chars());\n-        if interned_name.chars().rev().zip(allow_end.rev()).all(|(l, r)| l == r) {\n+        if interned_name.chars().rev().zip(name.chars().rev()).all(|(l, r)| l == r) {\n             return true;\n         }\n     }"}, {"sha": "b756253e6ad54f152143dcd5d00757b3bdb1e27b", "filename": "tests/compile-fail/non_expressive_names.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/73ee3e6f36a73d149f9b7994b9c3c57fa14c93e2/tests%2Fcompile-fail%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73ee3e6f36a73d149f9b7994b9c3c57fa14c93e2/tests%2Fcompile-fail%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fnon_expressive_names.rs?ref=73ee3e6f36a73d149f9b7994b9c3c57fa14c93e2", "patch": "@@ -11,7 +11,6 @@\n //~| NOTE: lint level defined here\n //~| NOTE: lint level defined here\n //~| NOTE: lint level defined here\n-//~| NOTE: lint level defined here\n #![allow(unused)]\n \n fn main() {\n@@ -45,9 +44,8 @@ fn main() {\n     let bla_rhs: i32;\n     let bla_lhs: i32;\n \n-    let blubrhs: i32; //~ NOTE: existing binding defined here\n-    let blublhs: i32; //~ ERROR: name is too similar\n-    //~| HELP: for further information visit\n+    let blubrhs: i32;\n+    let blublhs: i32;\n \n     let blubx: i32; //~ NOTE: existing binding defined here\n     let bluby: i32; //~ ERROR: name is too similar\n@@ -83,6 +81,13 @@ fn main() {\n     let parsee: i32; //~ ERROR: name is too similar\n     //~| HELP: for further information visit\n     //~| HELP: separate the discriminating character by an underscore like: `parse_e`\n+\n+    let setter: i32;\n+    let getter: i32;\n+    let tx1: i32;\n+    let rx1: i32;\n+    let tx_cake: i32;\n+    let rx_cake: i32;\n }\n \n #[derive(Clone, Debug)]"}]}