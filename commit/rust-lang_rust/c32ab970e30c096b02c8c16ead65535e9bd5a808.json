{"sha": "c32ab970e30c096b02c8c16ead65535e9bd5a808", "node_id": "C_kwDOAAsO6NoAKGMzMmFiOTcwZTMwYzA5NmIwMmM4YzE2ZWFkNjU1MzVlOWJkNWE4MDg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-19T14:52:26Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-19T14:52:26Z"}, "message": "Auto merge of #13065 - RalfJung:override-command-docs, r=Veykril\n\ndocument interaction of checkOnSave.overrideCommand and multiple linked projects\n\nCc https://github.com/rust-lang/rust-analyzer/issues/10793\n\nr? `@Veykril`", "tree": {"sha": "ee6f10609f974856e1063c69d2d4921e61e3c218", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee6f10609f974856e1063c69d2d4921e61e3c218"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c32ab970e30c096b02c8c16ead65535e9bd5a808", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c32ab970e30c096b02c8c16ead65535e9bd5a808", "html_url": "https://github.com/rust-lang/rust/commit/c32ab970e30c096b02c8c16ead65535e9bd5a808", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c32ab970e30c096b02c8c16ead65535e9bd5a808/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f02ea03b0934095a142e904dd587e32bcf5f437", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f02ea03b0934095a142e904dd587e32bcf5f437", "html_url": "https://github.com/rust-lang/rust/commit/2f02ea03b0934095a142e904dd587e32bcf5f437"}, {"sha": "c5455d1af3aee9fa73d10fd8e7043098472fe070", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5455d1af3aee9fa73d10fd8e7043098472fe070", "html_url": "https://github.com/rust-lang/rust/commit/c5455d1af3aee9fa73d10fd8e7043098472fe070"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "6649f42b4ef9e6cade85b71105ecda9b535dda32", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c32ab970e30c096b02c8c16ead65535e9bd5a808/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c32ab970e30c096b02c8c16ead65535e9bd5a808/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=c32ab970e30c096b02c8c16ead65535e9bd5a808", "patch": "@@ -45,7 +45,8 @@ mod patch_old_style;\n //  - foo_command = overrides the subcommand, foo_overrideCommand allows full overwriting, extra args only applies for foo_command\n \n // Defines the server-side configuration of the rust-analyzer. We generate\n-// *parts* of VS Code's `package.json` config from this.\n+// *parts* of VS Code's `package.json` config from this. Run `cargo test` to\n+// re-generate that file.\n //\n // However, editor specific config, which the server doesn't know about, should\n // be specified directly in `package.json`.\n@@ -120,6 +121,10 @@ config_data! {\n         /// Cargo, you might also want to change\n         /// `#rust-analyzer.cargo.buildScripts.overrideCommand#`.\n         ///\n+        /// If there are multiple linked projects, this command is invoked for\n+        /// each of them, with the working directory being the project root\n+        /// (i.e., the folder containing the `Cargo.toml`).\n+        ///\n         /// An example command would be:\n         ///\n         /// ```bash"}, {"sha": "751ec79af0fd4f2bcb644017d6209eaecde5e4fb", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c32ab970e30c096b02c8c16ead65535e9bd5a808/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/c32ab970e30c096b02c8c16ead65535e9bd5a808/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=c32ab970e30c096b02c8c16ead65535e9bd5a808", "patch": "@@ -118,6 +118,10 @@ If you're changing this because you're using some tool wrapping\n Cargo, you might also want to change\n `#rust-analyzer.cargo.buildScripts.overrideCommand#`.\n \n+If there are multiple linked projects, this command is invoked for\n+each of them, with the working directory being the project root\n+(i.e., the folder containing the `Cargo.toml`).\n+\n An example command would be:\n \n ```bash"}, {"sha": "67eabc313c832b75478a5d303e57104f21df50a8", "filename": "editors/code/package.json", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c32ab970e30c096b02c8c16ead65535e9bd5a808/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/c32ab970e30c096b02c8c16ead65535e9bd5a808/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=c32ab970e30c096b02c8c16ead65535e9bd5a808", "patch": "@@ -547,7 +547,7 @@\n                     ]\n                 },\n                 \"rust-analyzer.checkOnSave.overrideCommand\": {\n-                    \"markdownDescription\": \"Override the command rust-analyzer uses instead of `cargo check` for\\ndiagnostics on save. The command is required to output json and\\nshould therefor include `--message-format=json` or a similar option.\\n\\nIf you're changing this because you're using some tool wrapping\\nCargo, you might also want to change\\n`#rust-analyzer.cargo.buildScripts.overrideCommand#`.\\n\\nAn example command would be:\\n\\n```bash\\ncargo check --workspace --message-format=json --all-targets\\n```\\n.\",\n+                    \"markdownDescription\": \"Override the command rust-analyzer uses instead of `cargo check` for\\ndiagnostics on save. The command is required to output json and\\nshould therefor include `--message-format=json` or a similar option.\\n\\nIf you're changing this because you're using some tool wrapping\\nCargo, you might also want to change\\n`#rust-analyzer.cargo.buildScripts.overrideCommand#`.\\n\\nIf there are multiple linked projects, this command is invoked for\\neach of them, with the working directory being the project root\\n(i.e., the folder containing the `Cargo.toml`).\\n\\nAn example command would be:\\n\\n```bash\\ncargo check --workspace --message-format=json --all-targets\\n```\\n.\",\n                     \"default\": null,\n                     \"type\": [\n                         \"null\","}]}