{"sha": "1c78ad937b4da9dd872b0a865025f3e2e885f90d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjNzhhZDkzN2I0ZGE5ZGQ4NzJiMGE4NjUwMjVmM2UyZTg4NWY5MGQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-01-15T09:12:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-01-15T09:12:47Z"}, "message": "auto merge of #20990 : estsauver/rust/playpen_20732, r=alexcrichton\n\nIn #20732, that all links in some modules point to the same code\r\nexamples was reported. The ID's generated for documents in\r\nlibrustdoc are not all unique, which means the code rendered as\r\ntext is not being properly selected.\r\n\r\nThis change makes the link to the code section that is next to\r\nthe current link.", "tree": {"sha": "76258aac7cab804c75fbf31905b9e876086828a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76258aac7cab804c75fbf31905b9e876086828a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c78ad937b4da9dd872b0a865025f3e2e885f90d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c78ad937b4da9dd872b0a865025f3e2e885f90d", "html_url": "https://github.com/rust-lang/rust/commit/1c78ad937b4da9dd872b0a865025f3e2e885f90d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c78ad937b4da9dd872b0a865025f3e2e885f90d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c96037ec1676b420002a06ea337865f95abbf2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c96037ec1676b420002a06ea337865f95abbf2c", "html_url": "https://github.com/rust-lang/rust/commit/0c96037ec1676b420002a06ea337865f95abbf2c"}, {"sha": "2a320f21d0e5f943b9cd02bb7882531bfb7ef0b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a320f21d0e5f943b9cd02bb7882531bfb7ef0b9", "html_url": "https://github.com/rust-lang/rust/commit/2a320f21d0e5f943b9cd02bb7882531bfb7ef0b9"}], "stats": {"total": 29, "additions": 9, "deletions": 20}, "files": [{"sha": "0dbd13b4616bb36bf91f6d8ed1dde08202eb5cbd", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 8, "deletions": 17, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/1c78ad937b4da9dd872b0a865025f3e2e885f90d/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c78ad937b4da9dd872b0a865025f3e2e885f90d/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=1c78ad937b4da9dd872b0a865025f3e2e885f90d", "patch": "@@ -30,7 +30,7 @@\n use libc;\n use std::ascii::AsciiExt;\n use std::ffi::CString;\n-use std::cell::{RefCell, Cell};\n+use std::cell::RefCell;\n use std::collections::HashMap;\n use std::fmt;\n use std::slice;\n@@ -155,7 +155,6 @@ fn stripped_filtered_line<'a>(s: &'a str) -> Option<&'a str> {\n thread_local!(static USED_HEADER_MAP: RefCell<HashMap<String, uint>> = {\n     RefCell::new(HashMap::new())\n });\n-thread_local!(static TEST_IDX: Cell<uint> = Cell::new(0));\n \n thread_local!(pub static PLAYGROUND_KRATE: RefCell<Option<Option<String>>> = {\n     RefCell::new(None)\n@@ -195,26 +194,19 @@ pub fn render(w: &mut fmt::Formatter, s: &str, print_toc: bool) -> fmt::Result {\n             if rendered { return }\n             PLAYGROUND_KRATE.with(|krate| {\n                 let mut s = String::new();\n-                let id = krate.borrow().as_ref().map(|krate| {\n-                    let idx = TEST_IDX.with(|slot| {\n-                        let i = slot.get();\n-                        slot.set(i + 1);\n-                        i\n-                    });\n-\n+                krate.borrow().as_ref().map(|krate| {\n                     let test = origtext.lines().map(|l| {\n                         stripped_filtered_line(l).unwrap_or(l)\n                     }).collect::<Vec<&str>>().connect(\"\\n\");\n                     let krate = krate.as_ref().map(|s| s.as_slice());\n                     let test = test::maketest(test.as_slice(), krate, false, false);\n-                    s.push_str(format!(\"<span id='rust-example-raw-{}' \\\n-                                         class='rusttest'>{}</span>\",\n-                                       idx, Escape(test.as_slice())).as_slice());\n-                    format!(\"rust-example-rendered-{}\", idx)\n+                    s.push_str(format!(\"<span class='rusttest'>{}</span>\",\n+                                         Escape(test.as_slice())).as_slice());\n                 });\n-                let id = id.as_ref().map(|a| a.as_slice());\n-                s.push_str(highlight::highlight(text.as_slice(), None, id)\n-                                     .as_slice());\n+                s.push_str(highlight::highlight(text.as_slice(),\n+                                                None,\n+                                                Some(\"rust-example-rendered\"))\n+                             .as_slice());\n                 let output = CString::from_vec(s.into_bytes());\n                 hoedown_buffer_puts(ob, output.as_ptr());\n             })\n@@ -432,7 +424,6 @@ impl LangString {\n /// previous state (if any).\n pub fn reset_headers() {\n     USED_HEADER_MAP.with(|s| s.borrow_mut().clear());\n-    TEST_IDX.with(|s| s.set(0));\n }\n \n impl<'a> fmt::String for Markdown<'a> {"}, {"sha": "687f764f02077a10cc0df749585984d9e08030b7", "filename": "src/librustdoc/html/static/playpen.js", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1c78ad937b4da9dd872b0a865025f3e2e885f90d/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fplaypen.js", "raw_url": "https://github.com/rust-lang/rust/raw/1c78ad937b4da9dd872b0a865025f3e2e885f90d/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fplaypen.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fplaypen.js?ref=1c78ad937b4da9dd872b0a865025f3e2e885f90d", "patch": "@@ -14,10 +14,8 @@\n (function() {\n     if (window.playgroundUrl) {\n         $('pre.rust').hover(function() {\n-            if (!$(this).attr('id')) { return; }\n-            var id = '#' + $(this).attr('id').replace('rendered', 'raw');\n             var a = $('<a>').text('\u21f1').attr('class', 'test-arrow');\n-            var code = $(id).text();\n+            var code = $(this).siblings(\".rusttest\").text();\n             a.attr('href', window.playgroundUrl + '?code=' +\n                            encodeURIComponent(code));\n             a.attr('target', '_blank');"}]}