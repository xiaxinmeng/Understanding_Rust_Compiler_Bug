{"sha": "30959bc16f8bdbb95bff66537021d6b01281a99d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwOTU5YmMxNmY4YmRiYjk1YmZmNjY1MzcwMjFkNmIwMTI4MWE5OWQ=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-07T23:25:42Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-07T23:25:42Z"}, "message": "Cargo fmt", "tree": {"sha": "39dd2692538efaf773334c5691f80b2ea080e912", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39dd2692538efaf773334c5691f80b2ea080e912"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30959bc16f8bdbb95bff66537021d6b01281a99d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30959bc16f8bdbb95bff66537021d6b01281a99d", "html_url": "https://github.com/rust-lang/rust/commit/30959bc16f8bdbb95bff66537021d6b01281a99d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30959bc16f8bdbb95bff66537021d6b01281a99d/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a314158675731b0abf93a69417b5baae611059f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a314158675731b0abf93a69417b5baae611059f", "html_url": "https://github.com/rust-lang/rust/commit/6a314158675731b0abf93a69417b5baae611059f"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "dc3abd88ffd89619f2fe7ccc377eb12d63c13f03", "filename": "src/items.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/30959bc16f8bdbb95bff66537021d6b01281a99d/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30959bc16f8bdbb95bff66537021d6b01281a99d/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=30959bc16f8bdbb95bff66537021d6b01281a99d", "patch": "@@ -2142,7 +2142,9 @@ fn rewrite_args(\n     generics_str_contains_newline: bool,\n ) -> Option<String> {\n     let mut arg_item_strs = args.iter()\n-        .map(|arg| arg.rewrite(context, Shape::legacy(multi_line_budget, arg_indent)))\n+        .map(|arg| {\n+            arg.rewrite(context, Shape::legacy(multi_line_budget, arg_indent))\n+        })\n         .collect::<Option<Vec<_>>>()?;\n \n     // Account for sugary self.\n@@ -2841,15 +2843,17 @@ impl Rewrite for ast::ForeignItem {\n         let span = mk_sp(self.span.lo(), self.span.hi() - BytePos(1));\n \n         let item_str = match self.node {\n-            ast::ForeignItemKind::Fn(ref fn_decl, ref generics) => rewrite_fn_base(\n-                context,\n-                shape.indent,\n-                self.ident,\n-                &FnSig::new(fn_decl, generics, self.vis.clone()),\n-                span,\n-                false,\n-                false,\n-            ).map(|(s, _)| format!(\"{};\", s)),\n+            ast::ForeignItemKind::Fn(ref fn_decl, ref generics) => {\n+                rewrite_fn_base(\n+                    context,\n+                    shape.indent,\n+                    self.ident,\n+                    &FnSig::new(fn_decl, generics, self.vis.clone()),\n+                    span,\n+                    false,\n+                    false,\n+                ).map(|(s, _)| format!(\"{};\", s))\n+            }\n             ast::ForeignItemKind::Static(ref ty, is_mutable) => {\n                 // FIXME(#21): we're dropping potential comments in between the\n                 // function keywords here."}]}