{"sha": "16faef2218ec5c3621079f04e6b093a5bb1b44c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2ZmFlZjIyMThlYzVjMzYyMTA3OWYwNGU2YjA5M2E1YmIxYjQ0YzI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-04T14:55:33Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-04T14:55:33Z"}, "message": "Fix buggy while and do-while translation in rustc. Add test.", "tree": {"sha": "9278653ee3a42409e7f27ab5c52282ff1512d500", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9278653ee3a42409e7f27ab5c52282ff1512d500"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16faef2218ec5c3621079f04e6b093a5bb1b44c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16faef2218ec5c3621079f04e6b093a5bb1b44c2", "html_url": "https://github.com/rust-lang/rust/commit/16faef2218ec5c3621079f04e6b093a5bb1b44c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16faef2218ec5c3621079f04e6b093a5bb1b44c2/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "896570a3a9fe5c5e4a457f7cfea5917eb547d5ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/896570a3a9fe5c5e4a457f7cfea5917eb547d5ce", "html_url": "https://github.com/rust-lang/rust/commit/896570a3a9fe5c5e4a457f7cfea5917eb547d5ce"}], "stats": {"total": 47, "additions": 35, "deletions": 12}, "files": [{"sha": "33cb0a0d55cc3d959860d6f68e5e3417150e3f2c", "filename": "src/Makefile", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/16faef2218ec5c3621079f04e6b093a5bb1b44c2/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/16faef2218ec5c3621079f04e6b093a5bb1b44c2/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=16faef2218ec5c3621079f04e6b093a5bb1b44c2", "patch": "@@ -447,8 +447,9 @@ TEST_XFAILS_X86 :=  $(TASK_XFAILS) \\\n                     test/run-pass/mlist-cycle.rs \\\n                     test/run-pass/obj-as.rs \\\n                     test/run-pass/task-comm.rs \\\n-                    test/run-pass/vec-slice.rs \\\n                     test/run-pass/task-comm-3.rs \\\n+                    test/run-pass/vec-slice.rs \\\n+                    test/run-pass/while-and-do-while.rs \\\n                     test/run-fail/task-comm-14.rs \\\n                     test/compile-fail/bad-recv.rs \\\n                     test/compile-fail/bad-send.rs \\"}, {"sha": "d42f7b4582c58b1dd2c7e151f811ea76e9fc269b", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/16faef2218ec5c3621079f04e6b093a5bb1b44c2/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16faef2218ec5c3621079f04e6b093a5bb1b44c2/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=16faef2218ec5c3621079f04e6b093a5bb1b44c2", "patch": "@@ -636,6 +636,7 @@ impure fn parse_do_while_expr(parser p) -> @ast.expr {\n     expect (p, token.LPAREN);\n     auto cond = parse_expr(p);\n     expect(p, token.RPAREN);\n+    expect(p, token.SEMI);\n     hi = cond.span;\n     ret @spanned(lo, hi, ast.expr_do_while(body, cond, ast.ann_none));\n }"}, {"sha": "1783925e1a64bbeae3344fa4f9ea0f95fe4de3b1", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/16faef2218ec5c3621079f04e6b093a5bb1b44c2/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16faef2218ec5c3621079f04e6b093a5bb1b44c2/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=16faef2218ec5c3621079f04e6b093a5bb1b44c2", "patch": "@@ -660,13 +660,15 @@ impure fn trans_while(@block_ctxt cx, &ast.expr cond,\n     auto body_cx = new_empty_block_ctxt(cx.fcx);\n     auto next_cx = new_extension_block_ctxt(cx);\n \n-    cx.build.Br(cond_cx.llbb);\n-    auto cond_res = trans_expr(cond_cx, cond);\n-    cond_cx.build.CondBr(cond_res.val,\n-                         body_cx.llbb,\n-                         next_cx.llbb);\n     auto body_res = trans_block(body_cx, body);\n-    body_cx.build.Br(cond_cx.llbb);\n+    auto cond_res = trans_expr(cond_cx, cond);\n+\n+    body_res.bcx.build.Br(cond_cx.llbb);\n+    cond_res.bcx.build.CondBr(cond_res.val,\n+                              body_cx.llbb,\n+                              next_cx.llbb);\n+\n+    cx.build.Br(cond_cx.llbb);\n     ret res(next_cx, C_nil());\n }\n \n@@ -676,12 +678,13 @@ impure fn trans_do_while(@block_ctxt cx, &ast.block body,\n     auto body_cx = new_empty_block_ctxt(cx.fcx);\n     auto next_cx = new_extension_block_ctxt(cx);\n \n-    cx.build.Br(body_cx.llbb);\n     auto body_res = trans_block(body_cx, body);\n-    auto cond_res = trans_expr(body_cx, cond);\n-    body_cx.build.CondBr(cond_res.val,\n-                         body_cx.llbb,\n-                         next_cx.llbb);\n+    auto cond_res = trans_expr(body_res.bcx, cond);\n+\n+    cond_res.bcx.build.CondBr(cond_res.val,\n+                              body_cx.llbb,\n+                              next_cx.llbb);\n+    cx.build.Br(body_cx.llbb);\n     ret res(next_cx, body_res.val);\n }\n \n@@ -759,6 +762,10 @@ impure fn trans_expr(@block_ctxt cx, &ast.expr e) -> result {\n             ret trans_while(cx, *cond, body);\n         }\n \n+        case (ast.expr_do_while(?body, ?cond, _)) {\n+            ret trans_do_while(cx, body, *cond);\n+        }\n+\n         case (ast.expr_block(?blk, _)) {\n             auto sub_cx = new_empty_block_ctxt(cx.fcx);\n             auto next_cx = new_extension_block_ctxt(cx);"}, {"sha": "ebf7809929b2c43d117180c7202111db9bd596cf", "filename": "src/test/run-pass/while-and-do-while.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/16faef2218ec5c3621079f04e6b093a5bb1b44c2/src%2Ftest%2Frun-pass%2Fwhile-and-do-while.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16faef2218ec5c3621079f04e6b093a5bb1b44c2/src%2Ftest%2Frun-pass%2Fwhile-and-do-while.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fwhile-and-do-while.rs?ref=16faef2218ec5c3621079f04e6b093a5bb1b44c2", "patch": "@@ -0,0 +1,14 @@\n+fn main() {\n+  let int x = 10;\n+  let int y = 0;\n+  while(y < x) {\n+    log y;\n+    log \"hello\";\n+    y = y + 1;\n+  }\n+  do {\n+    log \"goodbye\";\n+    x = x - 1;\n+    log x;\n+  } while (x > 0);\n+}\n\\ No newline at end of file"}]}