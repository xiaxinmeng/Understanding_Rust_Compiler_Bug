{"sha": "0ac465924e6ae4380b25c38cbc14f425796fa2af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhYzQ2NTkyNGU2YWU0MzgwYjI1YzM4Y2JjMTRmNDI1Nzk2ZmEyYWY=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-01-26T15:33:05Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-01-26T15:33:05Z"}, "message": "Add line numbers and columns to error messages spanning multiple files\n\nIf an error message is emitted that spans several files, only the\nprimary file currently has line and column data attached. This is\nuseful information, even in files other than the one in which the error\noccurs. We can often work out which line and column the error\ncorresponds to in other files \u2014 in this case it is helpful to add them\n(in the case of ambiguity, the first relevant line/column is picked,\nwhich is still helpful than none).", "tree": {"sha": "35390718704319a4b6e9dc7a66c5eb47ee9de0d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35390718704319a4b6e9dc7a66c5eb47ee9de0d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ac465924e6ae4380b25c38cbc14f425796fa2af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ac465924e6ae4380b25c38cbc14f425796fa2af", "html_url": "https://github.com/rust-lang/rust/commit/0ac465924e6ae4380b25c38cbc14f425796fa2af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ac465924e6ae4380b25c38cbc14f425796fa2af/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0dcecff90c45ad5d4eb60859e22bb3f1b03842a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0dcecff90c45ad5d4eb60859e22bb3f1b03842a", "html_url": "https://github.com/rust-lang/rust/commit/a0dcecff90c45ad5d4eb60859e22bb3f1b03842a"}], "stats": {"total": 65, "additions": 62, "deletions": 3}, "files": [{"sha": "a9f228ca729b1dba7b13a0ee75cce5c196eba1b7", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0ac465924e6ae4380b25c38cbc14f425796fa2af/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ac465924e6ae4380b25c38cbc14f425796fa2af/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=0ac465924e6ae4380b25c38cbc14f425796fa2af", "patch": "@@ -1013,8 +1013,19 @@ impl EmitterWriter {\n \n                 // Then, the secondary file indicator\n                 buffer.prepend(buffer_msg_line_offset + 1, \"::: \", Style::LineNumber);\n+                let loc = if let Some(first_line) = annotated_file.lines.first() {\n+                    let col = if let Some(first_annotation) = first_line.annotations.first() {\n+                        format!(\":{}\", first_annotation.start_col + 1)\n+                    } else { \"\".to_string() };\n+                    format!(\"{}:{}{}\",\n+                            annotated_file.file.name,\n+                            cm.doctest_offset_line(first_line.line_index),\n+                            col)\n+                } else {\n+                    annotated_file.file.name.to_string()\n+                };\n                 buffer.append(buffer_msg_line_offset + 1,\n-                              &annotated_file.file.name.to_string(),\n+                              &loc,\n                               Style::LineAndColumn);\n                 for _ in 0..max_line_num_len {\n                     buffer.prepend(buffer_msg_line_offset + 1, \" \", Style::NoStyle);"}, {"sha": "6035f33c822cee1eedf6b87ad412c1b4d9f87fb8", "filename": "src/librustc_errors/snippet.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0ac465924e6ae4380b25c38cbc14f425796fa2af/src%2Flibrustc_errors%2Fsnippet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ac465924e6ae4380b25c38cbc14f425796fa2af/src%2Flibrustc_errors%2Fsnippet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fsnippet.rs?ref=0ac465924e6ae4380b25c38cbc14f425796fa2af", "patch": "@@ -27,7 +27,8 @@ pub struct FileInfo {\n \n     /// The \"primary file\", if any, gets a `-->` marker instead of\n     /// `>>>`, and has a line-number/column printed and not just a\n-    /// filename.  It appears first in the listing. It is known to\n+    /// filename (other files are not guaranteed to have line numbers\n+    /// or columns). It appears first in the listing. It is known to\n     /// contain at least one primary span, though primary spans (which\n     /// are designated with `^^^`) may also occur in other files.\n     primary_span: Option<Span>,"}, {"sha": "8eae79a21a9832c2946df3deea3cf662c7f6904a", "filename": "src/test/ui/cross-file-errors/main.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0ac465924e6ae4380b25c38cbc14f425796fa2af/src%2Ftest%2Fui%2Fcross-file-errors%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ac465924e6ae4380b25c38cbc14f425796fa2af/src%2Ftest%2Fui%2Fcross-file-errors%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcross-file-errors%2Fmain.rs?ref=0ac465924e6ae4380b25c38cbc14f425796fa2af", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[macro_use]\n+mod underscore;\n+\n+fn main() {\n+    underscore!();\n+}"}, {"sha": "a1cdae10edfcdf631b98b172c665d6395f20d28d", "filename": "src/test/ui/cross-file-errors/main.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0ac465924e6ae4380b25c38cbc14f425796fa2af/src%2Ftest%2Fui%2Fcross-file-errors%2Fmain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0ac465924e6ae4380b25c38cbc14f425796fa2af/src%2Ftest%2Fui%2Fcross-file-errors%2Fmain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcross-file-errors%2Fmain.stderr?ref=0ac465924e6ae4380b25c38cbc14f425796fa2af", "patch": "@@ -0,0 +1,11 @@\n+error: expected expression, found `_`\n+  --> $DIR/underscore.rs:18:9\n+   |\n+18 |         _\n+   |         ^\n+   | \n+  ::: $DIR/main.rs:15:5\n+   |\n+15 |     underscore!();\n+   |     -------------- in this macro invocation\n+"}, {"sha": "312b3b8f4ddd5b8823248cd9a5cf7ee248533a8a", "filename": "src/test/ui/cross-file-errors/underscore.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0ac465924e6ae4380b25c38cbc14f425796fa2af/src%2Ftest%2Fui%2Fcross-file-errors%2Funderscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ac465924e6ae4380b25c38cbc14f425796fa2af/src%2Ftest%2Fui%2Fcross-file-errors%2Funderscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcross-file-errors%2Funderscore.rs?ref=0ac465924e6ae4380b25c38cbc14f425796fa2af", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// We want this file only so we can test cross-file error\n+// messages, but we don't want it in an external crate.\n+// ignore-test\n+#![crate_type = \"lib\"]\n+\n+macro_rules! underscore {\n+    () => (\n+        _\n+    )\n+}"}, {"sha": "abf62a060b83b388f77c00a8c6f3d355891ebb27", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ac465924e6ae4380b25c38cbc14f425796fa2af/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ac465924e6ae4380b25c38cbc14f425796fa2af/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=0ac465924e6ae4380b25c38cbc14f425796fa2af", "patch": "@@ -1402,7 +1402,7 @@ impl<'test> TestCx<'test> {\n     }\n \n     /// For each `aux-build: foo/bar` annotation, we check to find the\n-    /// file in a `aux` directory relative to the test itself.\n+    /// file in a `auxiliary` directory relative to the test itself.\n     fn compute_aux_test_paths(&self, rel_ab: &str) -> TestPaths {\n         let test_ab = self.testpaths\n             .file"}]}