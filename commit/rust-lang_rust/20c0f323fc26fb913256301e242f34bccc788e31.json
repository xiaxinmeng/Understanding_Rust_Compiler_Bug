{"sha": "20c0f323fc26fb913256301e242f34bccc788e31", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwYzBmMzIzZmMyNmZiOTEzMjU2MzAxZTI0MmYzNGJjY2M3ODhlMzE=", "commit": {"author": {"name": "Tobias Schottdorf", "email": "tobias.schottdorf@gmail.com", "date": "2017-03-12T05:24:11Z"}, "committer": {"name": "Tobias Schottdorf", "email": "tobias.schottdorf@gmail.com", "date": "2017-03-14T15:06:50Z"}, "message": "Use `&&` instead of `&`\n\nIt does not seem valuable to always evaluate the right-hand side here.", "tree": {"sha": "9e9d2bba94157cf6152d81224d2de78d9ef3dcd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e9d2bba94157cf6152d81224d2de78d9ef3dcd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20c0f323fc26fb913256301e242f34bccc788e31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20c0f323fc26fb913256301e242f34bccc788e31", "html_url": "https://github.com/rust-lang/rust/commit/20c0f323fc26fb913256301e242f34bccc788e31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20c0f323fc26fb913256301e242f34bccc788e31/comments", "author": {"login": "tbg", "id": 5076964, "node_id": "MDQ6VXNlcjUwNzY5NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5076964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbg", "html_url": "https://github.com/tbg", "followers_url": "https://api.github.com/users/tbg/followers", "following_url": "https://api.github.com/users/tbg/following{/other_user}", "gists_url": "https://api.github.com/users/tbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbg/subscriptions", "organizations_url": "https://api.github.com/users/tbg/orgs", "repos_url": "https://api.github.com/users/tbg/repos", "events_url": "https://api.github.com/users/tbg/events{/privacy}", "received_events_url": "https://api.github.com/users/tbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbg", "id": 5076964, "node_id": "MDQ6VXNlcjUwNzY5NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5076964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbg", "html_url": "https://github.com/tbg", "followers_url": "https://api.github.com/users/tbg/followers", "following_url": "https://api.github.com/users/tbg/following{/other_user}", "gists_url": "https://api.github.com/users/tbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbg/subscriptions", "organizations_url": "https://api.github.com/users/tbg/orgs", "repos_url": "https://api.github.com/users/tbg/repos", "events_url": "https://api.github.com/users/tbg/events{/privacy}", "received_events_url": "https://api.github.com/users/tbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b43c744318b76934cdbcc0c8a4fdbc7d0091bbd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/b43c744318b76934cdbcc0c8a4fdbc7d0091bbd8", "html_url": "https://github.com/rust-lang/rust/commit/b43c744318b76934cdbcc0c8a4fdbc7d0091bbd8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "a1deda0ab3ec1c8e238f244ab71950a1346e8f6b", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20c0f323fc26fb913256301e242f34bccc788e31/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20c0f323fc26fb913256301e242f34bccc788e31/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=20c0f323fc26fb913256301e242f34bccc788e31", "patch": "@@ -846,7 +846,7 @@ impl<'a, 'gcx, 'tcx> MemCategorizationContext<'a, 'gcx, 'tcx> {\n         // When the corresponding feature isn't toggled, only promote `[T; 0]`.\n         let promotable = match expr_ty.sty {\n             ty::TyArray(_, 0) => true,\n-            _ => promotable & self.tcx().sess.features.borrow().rvalue_static_promotion,\n+            _ => promotable && self.tcx().sess.features.borrow().rvalue_static_promotion,\n         };\n \n         // Compute maximum lifetime of this rvalue. This is 'static if"}]}