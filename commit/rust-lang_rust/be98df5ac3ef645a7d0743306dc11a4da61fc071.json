{"sha": "be98df5ac3ef645a7d0743306dc11a4da61fc071", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlOThkZjVhYzNlZjY0NWE3ZDA3NDMzMDZkYzExYTRkYTYxZmMwNzE=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-04-18T09:47:39Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-04-18T09:47:39Z"}, "message": "Don't lint debug_assert!(false)", "tree": {"sha": "5ac921355ae0a7f925eb8e0d6712f74265e2d2ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ac921355ae0a7f925eb8e0d6712f74265e2d2ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be98df5ac3ef645a7d0743306dc11a4da61fc071", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEdgbJzPSa+gJi9jP1Acg2tkD/37EFAly4R7sACgkQAcg2tkD/\n37HETBAAyuEy2fQlNlcAdBNgfoVCgmvx/majEji/m+4pKMIwVLnlfHEWA2qUB9U4\nwSeq1SGAFIQIM0y25w+XqgDBQxYQf7Hz9D367emKp8nLDWnVN1M5ehY6mgzWb9iX\neAiwBjV7nG/EzDsLsU/m2/1i2UwtQNfymqkWEgso4+0xCWKn+AYMgiovIBuS5MxN\nVllinhj50xuiAOnhmw5RmrvWx1/x+RPxzO6b+ImH66xv2UQ/SzmP6z/irha/1qDT\no/jSRVfYWMfPX9Z3Sjgp5qJnuMDHx6nDFe7qQRL1/W1rqjwK0zULs5wW6DutIjnW\nIqTQ1VbYrJU9VojMQmqN/lj+KufFzowYrxrroElzNReouyhxBxPOZ5fFCIIHUWOs\nrPNbRKjy+rFgcn27T33a1H3bGqL5YQhjvq/xpqyVYDP2NVHVxMhKE3qFgrAOgfdI\n0gq3MFNMDwCTaq9rKT0o7mBs7SkyITqJObqN9ao0NkBqDwh9hA9/IVGx4FGxOhk/\n6UkWd11NXl4/C344MxTtr982kLpj8reMJzocY9iTJcTiTYsJh1HaswUWBDANGfeI\ns1ULfD4Z7S84A/DL/eN9zvQHAHgRwfnBTaUVKxSsx3mYlbEFpW1RhaJu0O9GNk4Y\nqZsf1DAzwlV6jLQRTgW1lcxNB1po+4JmYtYqwH/b4nLakvdBwS4=\n=15kM\n-----END PGP SIGNATURE-----", "payload": "tree 5ac921355ae0a7f925eb8e0d6712f74265e2d2ec\nparent b834dbb2d5924c947c3cbe47c863ea5b7470e567\nauthor flip1995 <hello@philkrones.com> 1555580859 +0200\ncommitter flip1995 <hello@philkrones.com> 1555580859 +0200\n\nDon't lint debug_assert!(false)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be98df5ac3ef645a7d0743306dc11a4da61fc071", "html_url": "https://github.com/rust-lang/rust/commit/be98df5ac3ef645a7d0743306dc11a4da61fc071", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be98df5ac3ef645a7d0743306dc11a4da61fc071/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b834dbb2d5924c947c3cbe47c863ea5b7470e567", "url": "https://api.github.com/repos/rust-lang/rust/commits/b834dbb2d5924c947c3cbe47c863ea5b7470e567", "html_url": "https://github.com/rust-lang/rust/commit/b834dbb2d5924c947c3cbe47c863ea5b7470e567"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "d342e0cd02a67aa4c2279480d8dc194bbb7a957e", "filename": "clippy_lints/src/assertions_on_constants.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/be98df5ac3ef645a7d0743306dc11a4da61fc071/clippy_lints%2Fsrc%2Fassertions_on_constants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be98df5ac3ef645a7d0743306dc11a4da61fc071/clippy_lints%2Fsrc%2Fassertions_on_constants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassertions_on_constants.rs?ref=be98df5ac3ef645a7d0743306dc11a4da61fc071", "patch": "@@ -33,10 +33,15 @@ declare_lint_pass!(AssertionsOnConstants => [ASSERTIONS_ON_CONSTANTS]);\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AssertionsOnConstants {\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, e: &'tcx Expr) {\n+        let mut is_debug_assert = false;\n         if_chain! {\n             if let Some(assert_span) = is_direct_expn_of(e.span, \"assert\");\n             if !in_macro(assert_span)\n-                || is_direct_expn_of(assert_span, \"debug_assert\").map_or(false, |span| !in_macro(span));\n+                || is_direct_expn_of(assert_span, \"debug_assert\").map_or(false, |span| {\n+                    is_debug_assert = true;\n+                    // Check that `debug_assert!` itself is not inside a macro\n+                    !in_macro(span)\n+                });\n             if let ExprKind::Unary(_, ref lit) = e.node;\n             then {\n                 if let ExprKind::Lit(ref inner) = lit.node {\n@@ -46,7 +51,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AssertionsOnConstants {\n                                 \"assert!(true) will be optimized out by the compiler\",\n                                 \"remove it\");\n                         },\n-                        LitKind::Bool(false) => {\n+                        LitKind::Bool(false) if !is_debug_assert => {\n                             span_help_and_lint(\n                                 cx, ASSERTIONS_ON_CONSTANTS, e.span,\n                                 \"assert!(false) should probably be replaced\",\n@@ -61,7 +66,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AssertionsOnConstants {\n                                 \"assert!(const: true) will be optimized out by the compiler\",\n                                 \"remove it\");\n                         },\n-                        Constant::Bool(false) => {\n+                        Constant::Bool(false) if !is_debug_assert => {\n                             span_help_and_lint(cx, ASSERTIONS_ON_CONSTANTS, e.span,\n                                 \"assert!(const: false) should probably be replaced\",\n                                 \"use panic!() or unreachable!()\");"}]}