{"sha": "366d3d75449851c7a10e9432bcdbe89515f8d49b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2NmQzZDc1NDQ5ODUxYzdhMTBlOTQzMmJjZGJlODk1MTVmOGQ0OWI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-09-17T20:27:26Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-09-17T20:27:26Z"}, "message": "minor: cleanup", "tree": {"sha": "0b70308547596b3846537d5ddcfb1cbe7fbb2acf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b70308547596b3846537d5ddcfb1cbe7fbb2acf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/366d3d75449851c7a10e9432bcdbe89515f8d49b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/366d3d75449851c7a10e9432bcdbe89515f8d49b", "html_url": "https://github.com/rust-lang/rust/commit/366d3d75449851c7a10e9432bcdbe89515f8d49b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/366d3d75449851c7a10e9432bcdbe89515f8d49b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4badd2faf8092870a0ecc920856b169eefc5f15c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4badd2faf8092870a0ecc920856b169eefc5f15c", "html_url": "https://github.com/rust-lang/rust/commit/4badd2faf8092870a0ecc920856b169eefc5f15c"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "bca1b7b2aa40397f0836c33876139f530604ac5a", "filename": "crates/parser/src/grammar.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/366d3d75449851c7a10e9432bcdbe89515f8d49b/crates%2Fparser%2Fsrc%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/366d3d75449851c7a10e9432bcdbe89515f8d49b/crates%2Fparser%2Fsrc%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar.rs?ref=366d3d75449851c7a10e9432bcdbe89515f8d49b", "patch": "@@ -166,7 +166,7 @@ fn opt_visibility(p: &mut Parser) -> bool {\n                     // struct B(pub (super::A));\n                     // struct B(pub (crate::A,));\n                     T![crate] | T![self] | T![super] | T![ident] if p.nth(2) != T![:] => {\n-                        p.bump_any();\n+                        p.bump(T!['(']);\n                         let path_m = p.start();\n                         let path_segment_m = p.start();\n                         let name_ref_m = p.start();\n@@ -180,8 +180,8 @@ fn opt_visibility(p: &mut Parser) -> bool {\n                     // pub(in super::A) struct S;\n                     // pub(in crate) struct S;\n                     T![in] => {\n-                        p.bump_any();\n-                        p.bump_any();\n+                        p.bump(T!['(']);\n+                        p.bump(T![in]);\n                         paths::use_path(p);\n                         p.expect(T![')']);\n                     }"}]}