{"sha": "0cbcf9274933af28998c2141e82f30246e380dc3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjYmNmOTI3NDkzM2FmMjg5OThjMjE0MWU4MmYzMDI0NmUzODBkYzM=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-05-27T19:03:39Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-05-27T19:21:37Z"}, "message": "Use annotations on blocks\n\nPreviously, block_ty returned the type of the terminating\nexpression of the block (or nil if said expression was absent).\nI changed check_expr to write the type of that expression into\nthe annotation for the block itself, so now block_ty can use the\nblock's annotation.", "tree": {"sha": "21f02da0ecab1ae9a6a13cb35ad1ece9499c8b7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21f02da0ecab1ae9a6a13cb35ad1ece9499c8b7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0cbcf9274933af28998c2141e82f30246e380dc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0cbcf9274933af28998c2141e82f30246e380dc3", "html_url": "https://github.com/rust-lang/rust/commit/0cbcf9274933af28998c2141e82f30246e380dc3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0cbcf9274933af28998c2141e82f30246e380dc3/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7a42c24bedaf15ebb61acb007ad863aeac76076", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7a42c24bedaf15ebb61acb007ad863aeac76076", "html_url": "https://github.com/rust-lang/rust/commit/a7a42c24bedaf15ebb61acb007ad863aeac76076"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "508b2d90a63e226ace7419b215152179beae1888", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0cbcf9274933af28998c2141e82f30246e380dc3/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cbcf9274933af28998c2141e82f30246e380dc3/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=0cbcf9274933af28998c2141e82f30246e380dc3", "patch": "@@ -1716,10 +1716,7 @@ fn stmt_ty(&ctxt cx, &@ast::stmt s) -> t {\n }\n \n fn block_ty(&ctxt cx, &ast::block b) -> t {\n-    alt (b.node.expr) {\n-        case (some[@ast::expr](?e)) { ret expr_ty(cx, e); }\n-        case (none[@ast::expr])     { ret mk_nil(cx); }\n-    }\n+    ret ann_to_type(cx.node_types, b.node.a);\n }\n \n // Returns the type of a pattern as a monotype. Like @expr_ty, this function"}, {"sha": "635a9b5b4047d42ce045adb0680ad293820fc897", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0cbcf9274933af28998c2141e82f30246e380dc3/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cbcf9274933af28998c2141e82f30246e380dc3/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=0cbcf9274933af28998c2141e82f30246e380dc3", "patch": "@@ -1376,6 +1376,7 @@ mod pushdown {\n                 auto t = demand::autoderef(scx, e.span, expected,\n                     ann_to_type(scx.fcx.ccx.tcx.node_types, ann), adk);\n                 write::ty_only_fixup(scx, ann.id, t);\n+                pushdown_block(scx, t, bloc);\n             }\n             case (ast::expr_assign(?lhs_0, ?rhs_0, ?ann)) {\n                 auto t = demand::autoderef(scx, e.span, expected,\n@@ -1517,14 +1518,13 @@ mod pushdown {\n         alt (bloc.node.expr) {\n             case (some[@ast::expr](?e_0)) {\n                 pushdown_expr(scx, expected, e_0);\n-                write::nil_ty(scx.fcx.ccx.tcx, bloc.node.a.id);\n             }\n             case (none[@ast::expr]) {\n-                demand::simple(scx, bloc.span, expected,\n-                               ty::mk_nil(scx.fcx.ccx.tcx));\n-                write::nil_ty(scx.fcx.ccx.tcx, bloc.node.a.id);\n+                /* empty */\n             }\n         }\n+        demand::simple(scx, bloc.span, expected,\n+          ann_to_type(scx.fcx.ccx.tcx.node_types, bloc.node.a));\n     }\n }\n \n@@ -2746,15 +2746,17 @@ fn check_block(&@stmt_ctxt scx, &ast::block block) {\n     for (@ast::stmt s in block.node.stmts) { check_stmt(scx.fcx, s); }\n \n     alt (block.node.expr) {\n-        case (none[@ast::expr]) { /* empty */ }\n+        case (none[@ast::expr]) {\n+            write::nil_ty(scx.fcx.ccx.tcx, block.node.a.id);\n+        }\n         case (some[@ast::expr](?e)) {\n             check_expr(scx, e);\n             auto ety = expr_ty(scx.fcx.ccx.tcx, e);\n             pushdown::pushdown_expr(scx, ety, e);\n+            write::ty_only_fixup(scx, block.node.a.id, ety);\n         }\n     }\n \n-    write::nil_ty(scx.fcx.ccx.tcx, block.node.a.id);\n }\n \n fn check_const(&@crate_ctxt ccx, &span sp, &@ast::expr e, &ast::ann ann) {"}]}