{"sha": "7081c79b7eed2c5b36674526d00c604b647027a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwODFjNzliN2VlZDJjNWIzNjY3NDUyNmQwMGM2MDRiNjQ3MDI3YTM=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-04-20T17:07:46Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-12-18T20:09:11Z"}, "message": "Add mir opt test for AddressOf", "tree": {"sha": "011182a0e7460f3906dd1b064afe8b51525484ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/011182a0e7460f3906dd1b064afe8b51525484ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7081c79b7eed2c5b36674526d00c604b647027a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7081c79b7eed2c5b36674526d00c604b647027a3", "html_url": "https://github.com/rust-lang/rust/commit/7081c79b7eed2c5b36674526d00c604b647027a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7081c79b7eed2c5b36674526d00c604b647027a3/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fb797ca753dfc5586ac277d5af4facab8c7c22f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fb797ca753dfc5586ac277d5af4facab8c7c22f", "html_url": "https://github.com/rust-lang/rust/commit/5fb797ca753dfc5586ac277d5af4facab8c7c22f"}], "stats": {"total": 112, "additions": 112, "deletions": 0}, "files": [{"sha": "bbd1ca68a8672d3747838f66fdd65c5568ccb312", "filename": "src/test/mir-opt/address-of.rs", "status": "added", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/rust-lang/rust/blob/7081c79b7eed2c5b36674526d00c604b647027a3/src%2Ftest%2Fmir-opt%2Faddress-of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7081c79b7eed2c5b36674526d00c604b647027a3/src%2Ftest%2Fmir-opt%2Faddress-of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Faddress-of.rs?ref=7081c79b7eed2c5b36674526d00c604b647027a3", "patch": "@@ -0,0 +1,112 @@\n+fn address_of_reborrow() {\n+    let y = &[0; 10];\n+    let mut z = &mut [0; 10];\n+\n+    y as *const _;\n+    y as *const [i32; 10];\n+    y as *const dyn Send;\n+    y as *const [i32];\n+    y as *const i32;            // This is a cast, not a coercion\n+\n+    let p: *const _ = y;\n+    let p: *const [i32; 10] = y;\n+    let p: *const dyn Send = y;\n+    let p: *const [i32] = y;\n+\n+    z as *const _;\n+    z as *const [i32; 10];\n+    z as *const dyn Send;\n+    z as *const [i32];\n+\n+    let p: *const _ = z;\n+    let p: *const [i32; 10] = z;\n+    let p: *const dyn Send = z;\n+    let p: *const [i32] = z;\n+\n+    z as *mut _;\n+    z as *mut [i32; 10];\n+    z as *mut dyn Send;\n+    z as *mut [i32];\n+\n+    let p: *mut _ = z;\n+    let p: *mut [i32; 10] = z;\n+    let p: *mut dyn Send = z;\n+    let p: *mut [i32] = z;\n+}\n+\n+// The normal borrows here should be preserved\n+fn borrow_and_cast(mut x: i32) {\n+    let p = &x as *const i32;\n+    let q = &mut x as *const i32;\n+    let r = &mut x as *mut i32;\n+}\n+\n+fn main() {}\n+\n+// START rustc.address_of_reborrow.SimplifyCfg-initial.after.mir\n+// bb0: {\n+//  ...\n+//  _5 = &raw const (*_1); // & to *const casts\n+//  ...\n+//  _7 = &raw const (*_1);\n+//  ...\n+//  _11 = &raw const (*_1);\n+//  ...\n+//  _14 = &raw const (*_1);\n+//  ...\n+//  _16 = &raw const (*_1);\n+//  ...\n+//  _17 = &raw const (*_1); // & to *const coercions\n+//  ...\n+//  _18 = &raw const (*_1);\n+//  ...\n+//  _20 = &raw const (*_1);\n+//  ...\n+//  _22 = &raw const (*_1);\n+// ...\n+//  _24 = &raw const (*_2); // &mut to *const casts\n+// ...\n+//  _26 = &raw const (*_2);\n+// ...\n+//  _30 = &raw const (*_2);\n+// ...\n+//  _33 = &raw const (*_2);\n+// ...\n+//  _34 = &raw const (*_2); // &mut to *const coercions\n+// ...\n+//  _35 = &raw const (*_2);\n+// ...\n+//  _37 = &raw const (*_2);\n+// ...\n+//  _39 = &raw const (*_2);\n+// ...\n+//  _41 = &raw mut (*_2); // &mut to *mut casts\n+// ...\n+//  _43 = &raw mut (*_2);\n+// ...\n+//  _47 = &raw mut (*_2);\n+// ...\n+//  _50 = &raw mut (*_2);\n+// ...\n+//  _51 = &raw mut (*_2); // &mut to *mut coercions\n+// ...\n+//  _52 = &raw mut (*_2);\n+// ...\n+//  _54 = &raw mut (*_2);\n+// ...\n+//  _56 = &raw mut (*_2);\n+// ...\n+// }\n+// END rustc.address_of_reborrow.SimplifyCfg-initial.after.mir\n+\n+// START rustc.borrow_and_cast.EraseRegions.after.mir\n+// bb0: {\n+//  ...\n+//  _4 = &_1;\n+//  ...\n+//  _7 = &mut _1;\n+//  ...\n+//  _10 = &mut _1;\n+//  ...\n+// }\n+// END rustc.borrow_and_cast.EraseRegions.after.mir"}]}