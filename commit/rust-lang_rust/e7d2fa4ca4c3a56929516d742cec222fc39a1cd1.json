{"sha": "e7d2fa4ca4c3a56929516d742cec222fc39a1cd1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3ZDJmYTRjYTRjM2E1NjkyOTUxNmQ3NDJjZWMyMjJmYzM5YTFjZDE=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-11-12T07:36:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-12T07:36:03Z"}, "message": "Rollup merge of #66230 - Axelderan:remove-vestigial-comments, r=alexcrichton\n\nremove vestigial comments referring to defunct numeric trait hierarchy\n\nI've been poking around the numeric trait hierarchy and also some of the actual numeric type implementations.\n\nThis is a small change but a matter of effective communication.  I looked for other related references and saw none.", "tree": {"sha": "53279668f3791ad6afcc924669090162d42b231e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53279668f3791ad6afcc924669090162d42b231e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7d2fa4ca4c3a56929516d742cec222fc39a1cd1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdymDjCRBK7hj4Ov3rIwAAdHIIAKU7HFYbAq5HRYE2nl0qamlI\nHHxGo+czNoEDRx6UwrDTcaV/6X26H1mxLDjCjPKPMZ5Zk7FMLUQzrL2i2laD1LRw\n1WUZ0pz+zok4Jsq+O1lk1usmqepMZMnm4R1ga5ru9YAXVmkdvISFbUhtOiSrRCqo\nLSML8LeXObT9K4ikdNyNQ/zC36nFKfYEsnyhP6luUigUjic5Hx62CrzIVDIso8Jz\nWFq20KK2L9ftfS4Vm72L7/5+j30H3G4c7MtvSAdcjZtYWOZQ7nq/CY9xO0rvq4aW\nNIXG0zLJNS54NidNKkeyZG6U+grm7YvJ0b02Y6835CPYxZIZoZPPf/CLr+W8Tdg=\n=Tysh\n-----END PGP SIGNATURE-----\n", "payload": "tree 53279668f3791ad6afcc924669090162d42b231e\nparent b850620d389a6f1690630e7d182583adede67f3a\nparent 619f057daee5c10bf4d22dec7d12083558199697\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1573544163 +0900\ncommitter GitHub <noreply@github.com> 1573544163 +0900\n\nRollup merge of #66230 - Axelderan:remove-vestigial-comments, r=alexcrichton\n\nremove vestigial comments referring to defunct numeric trait hierarchy\n\nI've been poking around the numeric trait hierarchy and also some of the actual numeric type implementations.\n\nThis is a small change but a matter of effective communication.  I looked for other related references and saw none.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7d2fa4ca4c3a56929516d742cec222fc39a1cd1", "html_url": "https://github.com/rust-lang/rust/commit/e7d2fa4ca4c3a56929516d742cec222fc39a1cd1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7d2fa4ca4c3a56929516d742cec222fc39a1cd1/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b850620d389a6f1690630e7d182583adede67f3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b850620d389a6f1690630e7d182583adede67f3a", "html_url": "https://github.com/rust-lang/rust/commit/b850620d389a6f1690630e7d182583adede67f3a"}, {"sha": "619f057daee5c10bf4d22dec7d12083558199697", "url": "https://api.github.com/repos/rust-lang/rust/commits/619f057daee5c10bf4d22dec7d12083558199697", "html_url": "https://github.com/rust-lang/rust/commit/619f057daee5c10bf4d22dec7d12083558199697"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "b5d61a3fd4e786ca6b9beea4791407aa56bef29f", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7d2fa4ca4c3a56929516d742cec222fc39a1cd1/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7d2fa4ca4c3a56929516d742cec222fc39a1cd1/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=e7d2fa4ca4c3a56929516d742cec222fc39a1cd1", "patch": "@@ -235,7 +235,6 @@ depending on the target pointer size.\n \"}\n }\n \n-// `Int` + `SignedInt` implemented for signed integers\n macro_rules! int_impl {\n     ($SelfT:ty, $ActualT:ident, $UnsignedT:ty, $BITS:expr, $Min:expr, $Max:expr, $Feature:expr,\n      $EndFeature:expr, $rot:expr, $rot_op:expr, $rot_result:expr, $swap_op:expr, $swapped:expr,\n@@ -2303,7 +2302,6 @@ impl isize {\n          usize_isize_to_xe_bytes_doc!(), usize_isize_from_xe_bytes_doc!() }\n }\n \n-// `Int` + `UnsignedInt` implemented for unsigned integers\n macro_rules! uint_impl {\n     ($SelfT:ty, $ActualT:ty, $BITS:expr, $MaxV:expr, $Feature:expr, $EndFeature:expr,\n         $rot:expr, $rot_op:expr, $rot_result:expr, $swap_op:expr, $swapped:expr,"}]}