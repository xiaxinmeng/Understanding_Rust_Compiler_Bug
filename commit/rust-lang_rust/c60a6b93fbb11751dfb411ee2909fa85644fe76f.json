{"sha": "c60a6b93fbb11751dfb411ee2909fa85644fe76f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2MGE2YjkzZmJiMTE3NTFkZmI0MTFlZTI5MDlmYTg1NjQ0ZmU3NmY=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-07-27T00:04:52Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-07-27T00:06:09Z"}, "message": "Remove superfluous rets (purely style)", "tree": {"sha": "44d38c69503ac361f83badbc09437f0ff7c97c45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44d38c69503ac361f83badbc09437f0ff7c97c45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c60a6b93fbb11751dfb411ee2909fa85644fe76f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c60a6b93fbb11751dfb411ee2909fa85644fe76f", "html_url": "https://github.com/rust-lang/rust/commit/c60a6b93fbb11751dfb411ee2909fa85644fe76f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c60a6b93fbb11751dfb411ee2909fa85644fe76f/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74d60a619a21e7992e58d7544d69c4e1219dd6b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/74d60a619a21e7992e58d7544d69c4e1219dd6b1", "html_url": "https://github.com/rust-lang/rust/commit/74d60a619a21e7992e58d7544d69c4e1219dd6b1"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "492ea83c4a1658a846a46efd487bae5c09972ea1", "filename": "src/libcore/io.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c60a6b93fbb11751dfb411ee2909fa85644fe76f/src%2Flibcore%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c60a6b93fbb11751dfb411ee2909fa85644fe76f/src%2Flibcore%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fio.rs?ref=c60a6b93fbb11751dfb411ee2909fa85644fe76f", "patch": "@@ -371,10 +371,8 @@ impl of writer for *libc::FILE {\n     fn flush() -> int { libc::fflush(self) as int }\n     fn get_type() -> writer_type {\n         let fd = libc::fileno(self);\n-        if libc::isatty(fd) == 0 {\n-            ret file;\n-        }\n-        ret screen;\n+        if libc::isatty(fd) == 0 { file   }\n+        else                     { screen }\n     }\n }\n \n@@ -661,7 +659,7 @@ impl of writer for mem_buffer {\n     }\n     fn tell() -> uint { self.pos }\n     fn flush() -> int { 0 }\n-    fn get_type() -> writer_type { ret file }\n+    fn get_type() -> writer_type { file }\n }\n \n fn mem_buffer() -> mem_buffer {"}]}