{"sha": "6943b38e4fd75dfd3c6ff80b96060ec9a39e01e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5NDNiMzhlNGZkNzVkZmQzYzZmZjgwYjk2MDYwZWM5YTM5ZTAxZTk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-10T21:39:15Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-14T19:24:09Z"}, "message": "rustc: Add crust functions to the AST", "tree": {"sha": "68375cf27e462c6c3e9e1ae102bee7060f3345ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68375cf27e462c6c3e9e1ae102bee7060f3345ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6943b38e4fd75dfd3c6ff80b96060ec9a39e01e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6943b38e4fd75dfd3c6ff80b96060ec9a39e01e9", "html_url": "https://github.com/rust-lang/rust/commit/6943b38e4fd75dfd3c6ff80b96060ec9a39e01e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6943b38e4fd75dfd3c6ff80b96060ec9a39e01e9/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acabd821d2c3503c087b2ce2bd784c14f48cb407", "url": "https://api.github.com/repos/rust-lang/rust/commits/acabd821d2c3503c087b2ce2bd784c14f48cb407", "html_url": "https://github.com/rust-lang/rust/commit/acabd821d2c3503c087b2ce2bd784c14f48cb407"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "96f283c592233eab202a5ca6f488cce0d53d391a", "filename": "src/comp/metadata/encoder.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6943b38e4fd75dfd3c6ff80b96060ec9a39e01e9/src%2Fcomp%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6943b38e4fd75dfd3c6ff80b96060ec9a39e01e9/src%2Fcomp%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fencoder.rs?ref=6943b38e4fd75dfd3c6ff80b96060ec9a39e01e9", "patch": "@@ -312,7 +312,12 @@ fn encode_info_for_mod(ecx: @encode_ctxt, ebml_w: ebml::writer, md: _mod,\n }\n \n fn purity_fn_family(p: purity) -> char {\n-    alt p { unsafe_fn { 'u' } pure_fn { 'p' } impure_fn { 'f' } }\n+    alt p {\n+      unsafe_fn { 'u' }\n+      pure_fn { 'p' }\n+      impure_fn { 'f' }\n+      crust_fn { 'c' }\n+    }\n }\n \n fn encode_info_for_item(ecx: @encode_ctxt, ebml_w: ebml::writer, item: @item,"}, {"sha": "57b0333ada9b9b935bf1257f08428e38c10d4b74", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6943b38e4fd75dfd3c6ff80b96060ec9a39e01e9/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6943b38e4fd75dfd3c6ff80b96060ec9a39e01e9/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=6943b38e4fd75dfd3c6ff80b96060ec9a39e01e9", "patch": "@@ -1535,7 +1535,7 @@ fn require_unsafe(sess: session, f_purity: ast::purity, sp: span) {\n fn require_impure(sess: session, f_purity: ast::purity, sp: span) {\n     alt f_purity {\n       ast::unsafe_fn { ret; }\n-      ast::impure_fn { ret; }\n+      ast::impure_fn | ast::crust_fn { ret; }\n       ast::pure_fn {\n         sess.span_err(sp, \"Found impure expression in pure function decl\");\n       }\n@@ -1568,7 +1568,7 @@ fn require_pure_call(ccx: @crate_ctxt, caller_purity: ast::purity,\n       }\n     };\n     alt (caller_purity, callee_purity) {\n-      (ast::impure_fn, ast::unsafe_fn) {\n+      (ast::impure_fn, ast::unsafe_fn) | (ast::crust_fn, ast::unsafe_fn) {\n         ccx.tcx.sess.span_err(sp, \"safe function calls function marked \\\n                                    unsafe\");\n       }"}, {"sha": "2ab7059a2a461c3de41ad2addaaa22a5ff9d356c", "filename": "src/comp/syntax/ast.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6943b38e4fd75dfd3c6ff80b96060ec9a39e01e9/src%2Fcomp%2Fsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6943b38e4fd75dfd3c6ff80b96060ec9a39e01e9/src%2Fcomp%2Fsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fast.rs?ref=6943b38e4fd75dfd3c6ff80b96060ec9a39e01e9", "patch": "@@ -407,6 +407,7 @@ enum purity {\n     pure_fn, // declared with \"pure fn\"\n     unsafe_fn, // declared with \"unsafe fn\"\n     impure_fn, // declared with \"fn\"\n+    crust_fn, // declared with \"crust fn\"\n }\n \n enum ret_style {"}, {"sha": "b0ed7ceed005a6531a797b4eae8f83074c48db60", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6943b38e4fd75dfd3c6ff80b96060ec9a39e01e9/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6943b38e4fd75dfd3c6ff80b96060ec9a39e01e9/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=6943b38e4fd75dfd3c6ff80b96060ec9a39e01e9", "patch": "@@ -1199,6 +1199,7 @@ fn print_fn(s: ps, decl: ast::fn_decl, name: ast::ident,\n       ast::impure_fn { head(s, \"fn\"); }\n       ast::unsafe_fn { head(s, \"unsafe fn\"); }\n       ast::pure_fn { head(s, \"pure fn\"); }\n+      ast::crust_fn { head(s, \"crust fn\"); }\n     }\n     word(s.s, name);\n     print_type_params(s, typarams);"}]}