{"sha": "96c8f2b0c1846756e617f1f1fc1372c506e24248", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2YzhmMmIwYzE4NDY3NTZlNjE3ZjFmMWZjMTM3MmM1MDZlMjQyNDg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-11-20T16:02:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-11-20T16:02:03Z"}, "message": "auto merge of #19071 : huonw/rust/col2column, r=nikomatsakis\n\nThis macro is very rarely used, so there is no need (and it is better)\r\nfor it to avoid the abbreviation.\r\n\r\nCloses rust-lang/rfcs#467.", "tree": {"sha": "7aa5bc11c6c1f7ba90254432ba54c6fc6cf08980", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7aa5bc11c6c1f7ba90254432ba54c6fc6cf08980"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96c8f2b0c1846756e617f1f1fc1372c506e24248", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96c8f2b0c1846756e617f1f1fc1372c506e24248", "html_url": "https://github.com/rust-lang/rust/commit/96c8f2b0c1846756e617f1f1fc1372c506e24248", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96c8f2b0c1846756e617f1f1fc1372c506e24248/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "394269d16e3752a23ffa273e68f8aaefd2a510c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/394269d16e3752a23ffa273e68f8aaefd2a510c4", "html_url": "https://github.com/rust-lang/rust/commit/394269d16e3752a23ffa273e68f8aaefd2a510c4"}, {"sha": "3f3b2d6b7ef68d3a3817804fa4dba849a74e6878", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f3b2d6b7ef68d3a3817804fa4dba849a74e6878", "html_url": "https://github.com/rust-lang/rust/commit/3f3b2d6b7ef68d3a3817804fa4dba849a74e6878"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "18c109d92a0116c72fc7d716dc22b5f3d4a50262", "filename": "src/libstd/macros.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/96c8f2b0c1846756e617f1f1fc1372c506e24248/src%2Flibstd%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96c8f2b0c1846756e617f1f1fc1372c506e24248/src%2Flibstd%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmacros.rs?ref=96c8f2b0c1846756e617f1f1fc1372c506e24248", "patch": "@@ -557,17 +557,17 @@ pub mod builtin {\n     /// A macro which expands to the column number on which it was invoked.\n     ///\n     /// The expanded expression has type `uint`, and the returned column is not\n-    /// the invocation of the `col!()` macro itself, but rather the first macro\n-    /// invocation leading up to the invocation of the `col!()` macro.\n+    /// the invocation of the `column!()` macro itself, but rather the first macro\n+    /// invocation leading up to the invocation of the `column!()` macro.\n     ///\n     /// # Example\n     ///\n     /// ```\n-    /// let current_col = col!();\n+    /// let current_col = column!();\n     /// println!(\"defined on column: {}\", current_col);\n     /// ```\n     #[macro_export]\n-    macro_rules! col( () => ({ /* compiler built-in */ }) )\n+    macro_rules! column( () => ({ /* compiler built-in */ }) )\n \n     /// A macro which expands to the file name from which it was invoked.\n     ///"}, {"sha": "1cbc2b98c93a822cdcf4dc1552e19503fe8f32a6", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/96c8f2b0c1846756e617f1f1fc1372c506e24248/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96c8f2b0c1846756e617f1f1fc1372c506e24248/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=96c8f2b0c1846756e617f1f1fc1372c506e24248", "patch": "@@ -413,9 +413,9 @@ fn initial_syntax_expander_table(ecfg: &expand::ExpansionConfig) -> SyntaxEnv {\n     syntax_expanders.insert(intern(\"line\"),\n                             builtin_normal_expander(\n                                     ext::source_util::expand_line));\n-    syntax_expanders.insert(intern(\"col\"),\n+    syntax_expanders.insert(intern(\"column\"),\n                             builtin_normal_expander(\n-                                    ext::source_util::expand_col));\n+                                    ext::source_util::expand_column));\n     syntax_expanders.insert(intern(\"file\"),\n                             builtin_normal_expander(\n                                     ext::source_util::expand_file));"}, {"sha": "570231940aac6c07c9e21c57ac0cc612dbca6002", "filename": "src/libsyntax/ext/source_util.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/96c8f2b0c1846756e617f1f1fc1372c506e24248/src%2Flibsyntax%2Fext%2Fsource_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96c8f2b0c1846756e617f1f1fc1372c506e24248/src%2Flibsyntax%2Fext%2Fsource_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fsource_util.rs?ref=96c8f2b0c1846756e617f1f1fc1372c506e24248", "patch": "@@ -38,10 +38,10 @@ pub fn expand_line(cx: &mut ExtCtxt, sp: Span, tts: &[ast::TokenTree])\n     base::MacExpr::new(cx.expr_uint(topmost, loc.line))\n }\n \n-/* col!(): expands to the current column number */\n-pub fn expand_col(cx: &mut ExtCtxt, sp: Span, tts: &[ast::TokenTree])\n+/* column!(): expands to the current column number */\n+pub fn expand_column(cx: &mut ExtCtxt, sp: Span, tts: &[ast::TokenTree])\n                   -> Box<base::MacResult+'static> {\n-    base::check_zero_tts(cx, sp, tts, \"col!\");\n+    base::check_zero_tts(cx, sp, tts, \"column!\");\n \n     let topmost = cx.original_span_in_file();\n     let loc = cx.codemap().lookup_char_pos(topmost.lo);"}, {"sha": "2761d0cbcceb261ccadd7f75085fee19e6f9db7d", "filename": "src/test/run-pass/syntax-extension-source-utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/96c8f2b0c1846756e617f1f1fc1372c506e24248/src%2Ftest%2Frun-pass%2Fsyntax-extension-source-utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96c8f2b0c1846756e617f1f1fc1372c506e24248/src%2Ftest%2Frun-pass%2Fsyntax-extension-source-utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-extension-source-utils.rs?ref=96c8f2b0c1846756e617f1f1fc1372c506e24248", "patch": "@@ -25,7 +25,7 @@ macro_rules! indirect_line( () => ( line!() ) )\n \n pub fn main() {\n     assert_eq!(line!(), 27);\n-    //assert!((col!() == 11));\n+    //assert!((column!() == 11));\n     assert_eq!(indirect_line!(), 29);\n     assert!((file!().ends_with(\"syntax-extension-source-utils.rs\")));\n     assert_eq!(stringify!((2*3) + 5).to_string(), \"( 2 * 3 ) + 5\".to_string());"}]}