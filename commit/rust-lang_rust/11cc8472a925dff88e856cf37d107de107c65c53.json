{"sha": "11cc8472a925dff88e856cf37d107de107c65c53", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExY2M4NDcyYTkyNWRmZjg4ZTg1NmNmMzdkMTA3ZGUxMDdjNjVjNTM=", "commit": {"author": {"name": "Oliver S\u0336c\u0336h\u0336n\u0336e\u0336i\u0336d\u0336e\u0336r Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-10-02T12:54:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-10-02T12:54:36Z"}, "message": "Merge pull request #3245 from JoshMcguigan/wrong_self_convention-1530\n\nCorrect false positive in wrong_self_convention lint for to_mut", "tree": {"sha": "cb9f8b7f0efb6297f8d8af033f0ca28a05387566", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb9f8b7f0efb6297f8d8af033f0ca28a05387566"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11cc8472a925dff88e856cf37d107de107c65c53", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbs2qMCRBK7hj4Ov3rIwAAdHIIAGq9RYaYfy877Y/2uxrgoOiK\nYtp1oh+N3R7igaO+z+6Id3Ol0qStSPvgjjrhgyRYPYIUOSgmrrztDak9aC0pfaFF\nwArMLzyyGGayhsKXtZ+ph21PLt6KItWbcIIQVtwdJhaV0ftg6m5JJWWaDNW/Dhuk\nPCW0jYAOHEJuiLwbXbqfsyMVe2FFU0apjHwfKU3yDPC1rnj3ZMoV4av++mhrwE+T\n6OZ8Z/jQ8zBSzoDsp5EcXBw8e1JPsILSHyaI5QP3euzXsSvd50S/ZWkZ+H+xBoCV\nJZI24N3VCbzoFLivGWT8dV/PJbJewMUjTVQpeF16kBinMsntLdHFHduSZxu90PI=\n=mtzH\n-----END PGP SIGNATURE-----\n", "payload": "tree cb9f8b7f0efb6297f8d8af033f0ca28a05387566\nparent 902aca70bda2716d08f4e08ae12084803f8bee78\nparent f142098474fbe4d46bd20227ae318adf168302dc\nauthor Oliver S\u0336c\u0336h\u0336n\u0336e\u0336i\u0336d\u0336e\u0336r Scherer <github35764891676564198441@oli-obk.de> 1538484876 +0200\ncommitter GitHub <noreply@github.com> 1538484876 +0200\n\nMerge pull request #3245 from JoshMcguigan/wrong_self_convention-1530\n\nCorrect false positive in wrong_self_convention lint for to_mut"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11cc8472a925dff88e856cf37d107de107c65c53", "html_url": "https://github.com/rust-lang/rust/commit/11cc8472a925dff88e856cf37d107de107c65c53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11cc8472a925dff88e856cf37d107de107c65c53/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "902aca70bda2716d08f4e08ae12084803f8bee78", "url": "https://api.github.com/repos/rust-lang/rust/commits/902aca70bda2716d08f4e08ae12084803f8bee78", "html_url": "https://github.com/rust-lang/rust/commit/902aca70bda2716d08f4e08ae12084803f8bee78"}, {"sha": "f142098474fbe4d46bd20227ae318adf168302dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/f142098474fbe4d46bd20227ae318adf168302dc", "html_url": "https://github.com/rust-lang/rust/commit/f142098474fbe4d46bd20227ae318adf168302dc"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "e0d858bd270ad453fa482ae8c0fa01c3301f1656", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/11cc8472a925dff88e856cf37d107de107c65c53/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11cc8472a925dff88e856cf37d107de107c65c53/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=11cc8472a925dff88e856cf37d107de107c65c53", "patch": "@@ -882,12 +882,10 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                 let ty = cx.tcx.type_of(def_id);\n                 let is_copy = is_copy(cx, ty);\n                 for &(ref conv, self_kinds) in &CONVENTIONS {\n-                    if_chain! {\n-                        if conv.check(&name.as_str());\n+                    if conv.check(&name.as_str()) {\n                         if !self_kinds\n-                            .iter()\n-                            .any(|k| k.matches(cx, first_arg_ty, first_arg, self_ty, is_copy, &implitem.generics));\n-                        then {\n+                                .iter()\n+                                .any(|k| k.matches(cx, first_arg_ty, first_arg, self_ty, is_copy, &implitem.generics)) {\n                             let lint = if item.vis.node.is_pub() {\n                                 WRONG_PUB_SELF_CONVENTION\n                             } else {\n@@ -904,6 +902,9 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                                                           .collect::<Vec<_>>()\n                                                           .join(\" or \")));\n                         }\n+\n+                        // Only check the first convention to match (CONVENTIONS should be listed from most to least specific)\n+                        break;\n                     }\n                 }\n \n@@ -1183,8 +1184,8 @@ fn lint_clone_on_copy(cx: &LateContext<'_, '_>, expr: &hir::Expr, arg: &hir::Exp\n                         Applicability::MaybeIncorrect,\n                     );\n                     db.span_suggestion_with_applicability(\n-                        expr.span, \n-                        \"or try being explicit about what type to clone\", \n+                        expr.span,\n+                        \"or try being explicit about what type to clone\",\n                         explicit,\n                         Applicability::MaybeIncorrect,\n                     );\n@@ -2067,12 +2068,13 @@ enum Convention {\n }\n \n #[rustfmt::skip]\n-const CONVENTIONS: [(Convention, &[SelfKind]); 6] = [\n+const CONVENTIONS: [(Convention, &[SelfKind]); 7] = [\n     (Convention::Eq(\"new\"), &[SelfKind::No]),\n     (Convention::StartsWith(\"as_\"), &[SelfKind::Ref, SelfKind::RefMut]),\n     (Convention::StartsWith(\"from_\"), &[SelfKind::No]),\n     (Convention::StartsWith(\"into_\"), &[SelfKind::Value]),\n     (Convention::StartsWith(\"is_\"), &[SelfKind::Ref, SelfKind::No]),\n+    (Convention::Eq(\"to_mut\"), &[SelfKind::RefMut]),\n     (Convention::StartsWith(\"to_\"), &[SelfKind::Ref]),\n ];\n "}, {"sha": "2fb33d08619ac3d49aa31c34a25c54c16e2ecbfb", "filename": "tests/ui/wrong_self_convention.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11cc8472a925dff88e856cf37d107de107c65c53/tests%2Fui%2Fwrong_self_convention.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11cc8472a925dff88e856cf37d107de107c65c53/tests%2Fui%2Fwrong_self_convention.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrong_self_convention.rs?ref=11cc8472a925dff88e856cf37d107de107c65c53", "patch": "@@ -59,4 +59,5 @@ impl Bar {\n     fn is_(self) {}\n     fn to_(self) {}\n     fn from_(self) {}\n+    fn to_mut(&mut self) {}\n }"}]}