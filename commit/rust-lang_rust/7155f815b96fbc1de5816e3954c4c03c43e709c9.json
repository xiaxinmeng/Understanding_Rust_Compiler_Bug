{"sha": "7155f815b96fbc1de5816e3954c4c03c43e709c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxNTVmODE1Yjk2ZmJjMWRlNTgxNmUzOTU0YzRjMDNjNDNlNzA5Yzk=", "commit": {"author": {"name": "cynecx", "email": "me@cynecx.net", "date": "2021-03-24T22:03:30Z"}, "committer": {"name": "cynecx", "email": "me@cynecx.net", "date": "2021-03-24T22:03:38Z"}, "message": "hir_ty: don't call write_field_resolution when field candidate isn't visible", "tree": {"sha": "a5f97cab5b73ff0c9895d4d957f2a7bfc7026cb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5f97cab5b73ff0c9895d4d957f2a7bfc7026cb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7155f815b96fbc1de5816e3954c4c03c43e709c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7155f815b96fbc1de5816e3954c4c03c43e709c9", "html_url": "https://github.com/rust-lang/rust/commit/7155f815b96fbc1de5816e3954c4c03c43e709c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7155f815b96fbc1de5816e3954c4c03c43e709c9/comments", "author": {"login": "cynecx", "id": 5961244, "node_id": "MDQ6VXNlcjU5NjEyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5961244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cynecx", "html_url": "https://github.com/cynecx", "followers_url": "https://api.github.com/users/cynecx/followers", "following_url": "https://api.github.com/users/cynecx/following{/other_user}", "gists_url": "https://api.github.com/users/cynecx/gists{/gist_id}", "starred_url": "https://api.github.com/users/cynecx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cynecx/subscriptions", "organizations_url": "https://api.github.com/users/cynecx/orgs", "repos_url": "https://api.github.com/users/cynecx/repos", "events_url": "https://api.github.com/users/cynecx/events{/privacy}", "received_events_url": "https://api.github.com/users/cynecx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cynecx", "id": 5961244, "node_id": "MDQ6VXNlcjU5NjEyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5961244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cynecx", "html_url": "https://github.com/cynecx", "followers_url": "https://api.github.com/users/cynecx/followers", "following_url": "https://api.github.com/users/cynecx/following{/other_user}", "gists_url": "https://api.github.com/users/cynecx/gists{/gist_id}", "starred_url": "https://api.github.com/users/cynecx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cynecx/subscriptions", "organizations_url": "https://api.github.com/users/cynecx/orgs", "repos_url": "https://api.github.com/users/cynecx/repos", "events_url": "https://api.github.com/users/cynecx/events{/privacy}", "received_events_url": "https://api.github.com/users/cynecx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96c88680b2d680f42809f838e79213e087d1fa1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/96c88680b2d680f42809f838e79213e087d1fa1c", "html_url": "https://github.com/rust-lang/rust/commit/96c88680b2d680f42809f838e79213e087d1fa1c"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "46d713a7b1d7140deb4791e88b03d1bdd2dedff8", "filename": "crates/hir_ty/src/infer/expr.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7155f815b96fbc1de5816e3954c4c03c43e709c9/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7155f815b96fbc1de5816e3954c4c03c43e709c9/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs?ref=7155f815b96fbc1de5816e3954c4c03c43e709c9", "patch": "@@ -459,9 +459,8 @@ impl<'a> InferenceContext<'a> {\n                         TyKind::Adt(AdtId(hir_def::AdtId::StructId(s)), parameters) => {\n                             let local_id = self.db.struct_data(*s).variant_data.field(name)?;\n                             let field = FieldId { parent: (*s).into(), local_id };\n-                            let is_visible_in_ctx = is_visible(&field);\n-                            self.write_field_resolution(tgt_expr, field);\n-                            if is_visible_in_ctx {\n+                            if is_visible(&field) {\n+                                self.write_field_resolution(tgt_expr, field);\n                                 Some(\n                                     self.db.field_types((*s).into())[field.local_id]\n                                         .clone()\n@@ -474,9 +473,8 @@ impl<'a> InferenceContext<'a> {\n                         TyKind::Adt(AdtId(hir_def::AdtId::UnionId(u)), parameters) => {\n                             let local_id = self.db.union_data(*u).variant_data.field(name)?;\n                             let field = FieldId { parent: (*u).into(), local_id };\n-                            let is_visible_in_ctx = is_visible(&field);\n-                            self.write_field_resolution(tgt_expr, field);\n-                            if is_visible_in_ctx {\n+                            if is_visible(&field) {\n+                                self.write_field_resolution(tgt_expr, field);\n                                 Some(\n                                     self.db.field_types((*u).into())[field.local_id]\n                                         .clone()"}]}