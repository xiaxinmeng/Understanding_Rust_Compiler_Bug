{"sha": "2ac63801d2d5b7b681041cac28f6f7571b39f95e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhYzYzODAxZDJkNWI3YjY4MTA0MWNhYzI4ZjZmNzU3MWIzOWY5NWU=", "commit": {"author": {"name": "Haitao Li", "email": "lihaitao@gmail.com", "date": "2011-11-23T15:24:56Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-11-23T20:11:18Z"}, "message": "doc: Build keywords multitable automatically\n\nKeywords are now listed in a plain text file. They're sorted in\ncolumn-major order and rendered as a texinfo multitable in rust.texi.\n\nFixes issue #1216.", "tree": {"sha": "dd2b868e59580bbcd8d71c083adad457fa211d66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd2b868e59580bbcd8d71c083adad457fa211d66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ac63801d2d5b7b681041cac28f6f7571b39f95e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ac63801d2d5b7b681041cac28f6f7571b39f95e", "html_url": "https://github.com/rust-lang/rust/commit/2ac63801d2d5b7b681041cac28f6f7571b39f95e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ac63801d2d5b7b681041cac28f6f7571b39f95e/comments", "author": {"login": "lht", "id": 19508, "node_id": "MDQ6VXNlcjE5NTA4", "avatar_url": "https://avatars.githubusercontent.com/u/19508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lht", "html_url": "https://github.com/lht", "followers_url": "https://api.github.com/users/lht/followers", "following_url": "https://api.github.com/users/lht/following{/other_user}", "gists_url": "https://api.github.com/users/lht/gists{/gist_id}", "starred_url": "https://api.github.com/users/lht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lht/subscriptions", "organizations_url": "https://api.github.com/users/lht/orgs", "repos_url": "https://api.github.com/users/lht/repos", "events_url": "https://api.github.com/users/lht/events{/privacy}", "received_events_url": "https://api.github.com/users/lht/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e98286b5944c27cde4a5a268ff4ca926b40b8e76", "url": "https://api.github.com/repos/rust-lang/rust/commits/e98286b5944c27cde4a5a268ff4ca926b40b8e76", "html_url": "https://github.com/rust-lang/rust/commit/e98286b5944c27cde4a5a268ff4ca926b40b8e76"}], "stats": {"total": 198, "additions": 130, "deletions": 68}, "files": [{"sha": "c01bc2c8ee498344f9800b240562c8f2fee35b1a", "filename": "doc/keywords.txt", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2ac63801d2d5b7b681041cac28f6f7571b39f95e/doc%2Fkeywords.txt", "raw_url": "https://github.com/rust-lang/rust/raw/2ac63801d2d5b7b681041cac28f6f7571b39f95e/doc%2Fkeywords.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fkeywords.txt?ref=2ac63801d2d5b7b681041cac28f6f7571b39f95e", "patch": "@@ -0,0 +1,20 @@\n+## Add Rust keywords here. Lines start with '#' are ignored\n+\n+alt any as assert\n+be bind block bool break\n+char check claim const cont\n+do\n+else export\n+f32 f64 fail false float fn for\n+i16 i32 i64 i8 if import in int\n+lambda let log\n+mod mutable\n+native note\n+obj  \n+prove pure\n+resource ret\n+self str syntax\n+tag true type\n+u16 u32 u64 u8 uint unchecked unsafe use\n+vec\n+when while with"}, {"sha": "86cdee2b4dbf82501dba070391433ecf2f23e9cd", "filename": "doc/rust.texi", "status": "modified", "additions": 1, "deletions": 66, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/2ac63801d2d5b7b681041cac28f6f7571b39f95e/doc%2Frust.texi", "raw_url": "https://github.com/rust-lang/rust/raw/2ac63801d2d5b7b681041cac28f6f7571b39f95e/doc%2Frust.texi", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.texi?ref=2ac63801d2d5b7b681041cac28f6f7571b39f95e", "patch": "@@ -615,72 +615,7 @@ The keywords are:\n \n @sp 2\n \n-@multitable @columnfractions .15 .15 .15 .15 .15\n-@item @code{alt}\n-@tab @code{const}\n-@tab @code{i32}\n-@tab @code{note}\n-@tab @code{u32}\n-@item @code{any}\n-@tab @code{cont}\n-@tab @code{i64}\n-@tab @code{obj}\n-@tab @code{u64}\n-@item @code{as}\n-@tab @code{do}\n-@tab @code{i8}\n-@tab @code{prove}\n-@tab @code{u8}\n-@item @code{assert}\n-@tab @code{else}\n-@tab @code{if}\n-@tab @code{pure}\n-@tab @code{uint}\n-@item @code{}\n-@tab @code{export}\n-@tab @code{import}\n-@tab @code{resource}\n-@tab @code{unchecked}\n-@item @code{be}\n-@tab @code{f32}\n-@tab @code{in}\n-@tab @code{ret}\n-@tab @code{unsafe}\n-@item @code{bind}\n-@tab @code{f64}\n-@tab @code{int}\n-@tab @code{self}\n-@tab @code{use}\n-@item @code{block}\n-@tab @code{fail}\n-@tab @code{lambda}\n-@tab @code{str}\n-@tab @code{vec}\n-@item @code{bool}\n-@tab @code{false}\n-@tab @code{let}\n-@tab @code{syntax}\n-@tab @code{when}\n-@item @code{break}\n-@tab @code{float}\n-@tab @code{log}\n-@tab @code{tag}\n-@tab @code{while}\n-@item @code{char}\n-@tab @code{fn}\n-@tab @code{mod}\n-@tab @code{true}\n-@tab @code{with}\n-@item @code{check}\n-@tab @code{for}\n-@tab @code{mutable}\n-@tab @code{type}\n-@tab @code{}\n-@item @code{claim}\n-@tab @code{i16}\n-@tab @code{native}\n-@tab @code{u16}\n-@end multitable\n+@include keywords.texi\n \n @node       Ref.Lex.Res\n @subsection Ref.Lex.Res"}, {"sha": "62f67bbf1059dc5ff87bccfb16cf43b9c3378282", "filename": "mk/docs.mk", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2ac63801d2d5b7b681041cac28f6f7571b39f95e/mk%2Fdocs.mk", "raw_url": "https://github.com/rust-lang/rust/raw/2ac63801d2d5b7b681041cac28f6f7571b39f95e/mk%2Fdocs.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdocs.mk?ref=2ac63801d2d5b7b681041cac28f6f7571b39f95e", "patch": "@@ -4,20 +4,24 @@\n \n docs: $(DOCS)\n \n+doc/keywords.texi: $(S)doc/keywords.txt $(S)src/etc/gen-keywords-table.py\n+\t@$(call E, gen-keywords-table: $@)\n+\t$(Q)$(S)src/etc/gen-keywords-table.py\n+\n doc/version.texi: $(MKFILES) rust.texi\n \t@$(call E, version-stamp: $@)\n \t$(Q)echo \"@macro gitversion\" >$@\n \t$(Q)echo \"$(CFG_VERSION)\" >>$@\n \t$(Q)echo \"@end macro\" >>$@\n \n-doc/%.pdf: %.texi doc/version.texi\n+doc/%.pdf: %.texi doc/version.texi doc/keywords.texi\n \t@$(call E, texi2pdf: $@)\n \t@# LC_COLLATE=C works around a bug in texi2dvi; see\n \t@# https://bugzilla.redhat.com/show_bug.cgi?id=583011 and\n \t@# https://github.com/graydon/rust/issues/1134\n \t$(Q)LC_COLLATE=C texi2pdf --silent --batch -I doc -o $@ --clean $<\n \n-doc/%.html: %.texi doc/version.texi\n+doc/%.html: %.texi doc/version.texi doc/keywords.texi\n \t@$(call E, makeinfo: $@)\n \t$(Q)makeinfo -I doc --html --ifhtml --force --no-split --output=$@ $<\n "}, {"sha": "ea7417e83f8da8b487c778d1b7f97a5375dfbaf0", "filename": "src/etc/gen-keywords-table.py", "status": "added", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/rust-lang/rust/blob/2ac63801d2d5b7b681041cac28f6f7571b39f95e/src%2Fetc%2Fgen-keywords-table.py", "raw_url": "https://github.com/rust-lang/rust/raw/2ac63801d2d5b7b681041cac28f6f7571b39f95e/src%2Fetc%2Fgen-keywords-table.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgen-keywords-table.py?ref=2ac63801d2d5b7b681041cac28f6f7571b39f95e", "patch": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env python\n+\n+import sys\n+import os.path\n+\n+def scrub(b):\n+  if sys.version_info >= (3,) and type(b) == bytes:\n+    return b.decode('ascii')\n+  else:\n+    return b\n+\n+src_dir = scrub(os.getenv(\"CFG_SRC_DIR\"))\n+if not src_dir:\n+  raise Exception(\"missing env var CFG_SRC_DIR\")\n+\n+\n+def get_keywords():\n+  keywords_file = os.path.join(src_dir, \"doc\", \"keywords.txt\")\n+  keywords = []\n+  for line in open(keywords_file).readlines():\n+    if not line or line.startswith('#'):\n+      continue\n+    for kw in line.split():\n+      if kw.isalnum():\n+        keywords.append(kw)\n+  return keywords\n+\n+\n+def sort(keywords, ncols):\n+  \"\"\"Sort keywords in a column-major ordered table.\n+\n+  Args:\n+    keywords: List of keywords\n+    ncols: Number of columns to be sorted\n+  \"\"\"\n+  ## sort and remove duplicates\n+  keywords = sorted(list(set(keywords)))\n+  sz = len(keywords)\n+\n+  if sz % ncols > 0:\n+    nrows = sz / ncols + 1\n+  else:\n+    nrows = sz / ncols\n+\n+  result = []\n+  max = ncols * nrows\n+  for i in xrange(0, max):\n+    result.append(\"\")\n+\n+  for i in xrange(1, sz+1):\n+    if i % nrows == 0:\n+      extra = 0\n+    else:\n+      extra = 1\n+    pos = (((i + (nrows - 1)) % nrows) * ncols) + \\\n+          (i / nrows + extra)\n+    result[pos - 1] = keywords[i - 1]\n+\n+  return rows(result, ncols)\n+\n+\n+def rows(keywords, ncols):\n+  \"\"\"Split input list of keywords into rows.\n+\n+  Each contains ncols or ncols-1 elements.\n+\n+  Args:\n+    keywords: List of keywords sorted in column-major order\n+    ncols: Number of columns\n+  \"\"\"\n+  sz = len(keywords)\n+  result = []\n+  i = 0\n+  while i < sz:\n+    if i + ncols < sz:\n+      se = i + ncols\n+    else:\n+      se = sz\n+    result.append(keywords[i:se])\n+    i = se\n+  return result\n+\n+\n+def table(rows):\n+  \"\"\"Render rows in a texinfo multitable.\"\"\"\n+  result = [\"@multitable @columnfractions .15 .15 .15 .15 .15\\n\"]\n+  for row in rows:\n+    result += [\"@item @code{\" + row[0] + \"}\\n\"];\n+    for e in row[1:]:\n+      result += [\"@tab @code{\" + e + \"}\\n\"];\n+  result += [\"@end multitable\\n\"];\n+  return result\n+\n+\n+def main(oargs):\n+  keywords = get_keywords()\n+  out_file = open(os.path.join(\"doc\", \"keywords.texi\"), 'w')\n+  for line in table(sort(keywords, 5)):\n+    out_file.write(line)\n+  out_file.close()\n+\n+if __name__ == '__main__':\n+  main(sys.argv[1:])"}]}