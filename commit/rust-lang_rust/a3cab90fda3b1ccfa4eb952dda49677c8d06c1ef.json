{"sha": "a3cab90fda3b1ccfa4eb952dda49677c8d06c1ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzY2FiOTBmZGEzYjFjY2ZhNGViOTUyZGRhNDk2NzdjOGQwNmMxZWY=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-10-20T12:44:31Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-10-20T12:44:31Z"}, "message": "Document TrustedLen\u2019s contract", "tree": {"sha": "f7011f188ba1613fa7ded9c90145cfb6bc5c0774", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7011f188ba1613fa7ded9c90145cfb6bc5c0774"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3cab90fda3b1ccfa4eb952dda49677c8d06c1ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3cab90fda3b1ccfa4eb952dda49677c8d06c1ef", "html_url": "https://github.com/rust-lang/rust/commit/a3cab90fda3b1ccfa4eb952dda49677c8d06c1ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3cab90fda3b1ccfa4eb952dda49677c8d06c1ef/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69b9400b796f545226415feae36b9ea4f8cc70c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/69b9400b796f545226415feae36b9ea4f8cc70c0", "html_url": "https://github.com/rust-lang/rust/commit/69b9400b796f545226415feae36b9ea4f8cc70c0"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "a56a864f6180d4c26e4d59fad6674af4647ba42b", "filename": "src/libcore/iter/traits.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a3cab90fda3b1ccfa4eb952dda49677c8d06c1ef/src%2Flibcore%2Fiter%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3cab90fda3b1ccfa4eb952dda49677c8d06c1ef/src%2Flibcore%2Fiter%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Ftraits.rs?ref=a3cab90fda3b1ccfa4eb952dda49677c8d06c1ef", "patch": "@@ -666,7 +666,19 @@ pub trait FusedIterator: Iterator {}\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<'a, I: FusedIterator + ?Sized> FusedIterator for &'a mut I {}\n \n-/// An iterator that has correct length\n+/// An iterator that reports an accurate length using size_hint.\n+///\n+/// The iterator reports a size hint where it is either exact\n+/// (lower bound is equal to upper bound), or the upper bound is `None`.\n+/// The upper bound must only be `None` if the actual iterator length is\n+/// larger than `usize::MAX`.\n+///\n+/// The iterator must produce exactly the number of elements it reported.\n+///\n+/// # Safety\n+///\n+/// This trait must only be implemented when the contract is upheld.\n+/// Consumers of this trait must inspect `.size_hint()`\u2019s upper bound.\n #[unstable(feature = \"trusted_len\", issue = \"0\")]\n pub unsafe trait TrustedLen : Iterator {}\n "}]}