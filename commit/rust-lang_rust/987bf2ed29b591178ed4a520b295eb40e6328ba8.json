{"sha": "987bf2ed29b591178ed4a520b295eb40e6328ba8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4N2JmMmVkMjliNTkxMTc4ZWQ0YTUyMGIyOTVlYjQwZTYzMjhiYTg=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-12-11T21:29:40Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-12-13T21:11:22Z"}, "message": "Split on words instead", "tree": {"sha": "f9923a71313982127800e772e156ffca99f2bad9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9923a71313982127800e772e156ffca99f2bad9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/987bf2ed29b591178ed4a520b295eb40e6328ba8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/987bf2ed29b591178ed4a520b295eb40e6328ba8", "html_url": "https://github.com/rust-lang/rust/commit/987bf2ed29b591178ed4a520b295eb40e6328ba8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/987bf2ed29b591178ed4a520b295eb40e6328ba8/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24031466b7f690c708c30164ab3b07bcc82b7f89", "url": "https://api.github.com/repos/rust-lang/rust/commits/24031466b7f690c708c30164ab3b07bcc82b7f89", "html_url": "https://github.com/rust-lang/rust/commit/24031466b7f690c708c30164ab3b07bcc82b7f89"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "536ea39d29805818278ff9f57729442300ce308c", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/987bf2ed29b591178ed4a520b295eb40e6328ba8/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/987bf2ed29b591178ed4a520b295eb40e6328ba8/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=987bf2ed29b591178ed4a520b295eb40e6328ba8", "patch": "@@ -806,6 +806,10 @@ impl<'a> fmt::Display for MarkdownSummaryLine<'a> {\n }\n \n pub fn plain_summary_line(md: &str) -> String {\n+    plain_summary_line_full(md, false)\n+}\n+\n+pub fn plain_summary_line_full(md: &str, limit_length: bool) -> String {\n     struct ParserWrapper<'a> {\n         inner: Parser<'a>,\n         is_in: isize,\n@@ -852,8 +856,18 @@ pub fn plain_summary_line(md: &str) -> String {\n             s.push_str(&t);\n         }\n     }\n-    if s.len() > 60 {\n-        s.chars().take(60).collect::<String>()\n+    if limit_length && s.chars().count() > 60 {\n+        let mut len = 0;\n+        let mut ret = s.split_whitespace()\n+                       .take_while(|p| {\n+                           // + 1 for the added character after the word.\n+                           len += p.chars().count() + 1;\n+                           len < 60\n+                       })\n+                       .collect::<Vec<_>>()\n+                       .join(\" \");\n+        ret.push('\u2026');\n+        ret\n     } else {\n         s\n     }"}, {"sha": "00ef5e92aa8851788a9f28f86bf217eb3cb0f80e", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/987bf2ed29b591178ed4a520b295eb40e6328ba8/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/987bf2ed29b591178ed4a520b295eb40e6328ba8/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=987bf2ed29b591178ed4a520b295eb40e6328ba8", "patch": "@@ -698,7 +698,7 @@ fn build_index(krate: &clean::Crate, cache: &mut Cache) -> String {\n                 ty: item.type_(),\n                 name: item.name.clone().unwrap(),\n                 path: fqp[..fqp.len() - 1].join(\"::\"),\n-                desc: plain_summary_line(item.doc_value()),\n+                desc: plain_summary_line_short(item.doc_value()),\n                 parent: Some(did),\n                 parent_idx: None,\n                 search_type: get_index_search_type(&item),\n@@ -736,7 +736,7 @@ fn build_index(krate: &clean::Crate, cache: &mut Cache) -> String {\n     }\n \n     let crate_doc = krate.module.as_ref().map(|module| {\n-        plain_summary_line(module.doc_value())\n+        plain_summary_line_short(module.doc_value())\n     }).unwrap_or(String::new());\n \n     let mut crate_data = BTreeMap::new();\n@@ -1487,7 +1487,7 @@ impl DocFolder for Cache {\n                             ty: item.type_(),\n                             name: s.to_string(),\n                             path: path.join(\"::\"),\n-                            desc: plain_summary_line(item.doc_value()),\n+                            desc: plain_summary_line_short(item.doc_value()),\n                             parent,\n                             parent_idx: None,\n                             search_type: get_index_search_type(&item),\n@@ -1679,7 +1679,7 @@ impl<'a> Cache {\n                                 ty: item.type_(),\n                                 name: item_name.to_string(),\n                                 path: path.clone(),\n-                                desc: plain_summary_line(item.doc_value()),\n+                                desc: plain_summary_line_short(item.doc_value()),\n                                 parent: None,\n                                 parent_idx: None,\n                                 search_type: get_index_search_type(&item),\n@@ -2396,7 +2396,13 @@ fn shorter<'a>(s: Option<&'a str>) -> String {\n #[inline]\n fn plain_summary_line(s: Option<&str>) -> String {\n     let line = shorter(s).replace(\"\\n\", \" \");\n-    markdown::plain_summary_line(&line[..])\n+    markdown::plain_summary_line_full(&line[..], false)\n+}\n+\n+#[inline]\n+fn plain_summary_line_short(s: Option<&str>) -> String {\n+    let line = shorter(s).replace(\"\\n\", \" \");\n+    markdown::plain_summary_line_full(&line[..], true)\n }\n \n fn document(w: &mut fmt::Formatter, cx: &Context, item: &clean::Item) -> fmt::Result {"}]}