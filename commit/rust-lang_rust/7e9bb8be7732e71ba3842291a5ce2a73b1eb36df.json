{"sha": "7e9bb8be7732e71ba3842291a5ce2a73b1eb36df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlOWJiOGJlNzczMmU3MWJhMzg0MjI5MWE1Y2UyYTczYjFlYjM2ZGY=", "commit": {"author": {"name": "Jason Thompson", "email": "jason@jthompson.ca", "date": "2014-06-30T18:53:04Z"}, "committer": {"name": "Jason Thompson", "email": "jason@jthompson.ca", "date": "2014-07-01T14:31:32Z"}, "message": "Add examples for from_utf8_owned, from_char, from_chars, from_byte", "tree": {"sha": "ca0eb7ffb807935857951c37a13191a019b1426d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca0eb7ffb807935857951c37a13191a019b1426d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e9bb8be7732e71ba3842291a5ce2a73b1eb36df", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e9bb8be7732e71ba3842291a5ce2a73b1eb36df", "html_url": "https://github.com/rust-lang/rust/commit/7e9bb8be7732e71ba3842291a5ce2a73b1eb36df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e9bb8be7732e71ba3842291a5ce2a73b1eb36df/comments", "author": {"login": "jasonthompson", "id": 563927, "node_id": "MDQ6VXNlcjU2MzkyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/563927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonthompson", "html_url": "https://github.com/jasonthompson", "followers_url": "https://api.github.com/users/jasonthompson/followers", "following_url": "https://api.github.com/users/jasonthompson/following{/other_user}", "gists_url": "https://api.github.com/users/jasonthompson/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonthompson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonthompson/subscriptions", "organizations_url": "https://api.github.com/users/jasonthompson/orgs", "repos_url": "https://api.github.com/users/jasonthompson/repos", "events_url": "https://api.github.com/users/jasonthompson/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonthompson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jasonthompson", "id": 563927, "node_id": "MDQ6VXNlcjU2MzkyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/563927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonthompson", "html_url": "https://github.com/jasonthompson", "followers_url": "https://api.github.com/users/jasonthompson/followers", "following_url": "https://api.github.com/users/jasonthompson/following{/other_user}", "gists_url": "https://api.github.com/users/jasonthompson/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonthompson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonthompson/subscriptions", "organizations_url": "https://api.github.com/users/jasonthompson/orgs", "repos_url": "https://api.github.com/users/jasonthompson/repos", "events_url": "https://api.github.com/users/jasonthompson/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonthompson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ab7b6652ec916e37a2110bb2f579c7dc38b4560", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ab7b6652ec916e37a2110bb2f579c7dc38b4560", "html_url": "https://github.com/rust-lang/rust/commit/6ab7b6652ec916e37a2110bb2f579c7dc38b4560"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "aa2b38cfa9ddc5543a3f17f5f5b15ebfe25e80f5", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/7e9bb8be7732e71ba3842291a5ce2a73b1eb36df/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e9bb8be7732e71ba3842291a5ce2a73b1eb36df/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=7e9bb8be7732e71ba3842291a5ce2a73b1eb36df", "patch": "@@ -97,6 +97,15 @@ Section: Creating a string\n ///\n /// Returns `Err` with the original vector if the vector contains invalid\n /// UTF-8.\n+///\n+/// # Example\n+///\n+/// ```rust\n+/// use std::str;\n+/// let hello_vec = vec![104, 101, 108, 108, 111];\n+/// let string = str::from_utf8_owned(hello_vec);\n+/// assert_eq!(string, Ok(\"hello\".to_string()));\n+/// ```\n pub fn from_utf8_owned(vv: Vec<u8>) -> Result<String, Vec<u8>> {\n     String::from_utf8(vv)\n }\n@@ -111,22 +120,39 @@ pub fn from_utf8_owned(vv: Vec<u8>) -> Result<String, Vec<u8>> {\n ///\n /// ```rust\n /// use std::str;\n-/// let string = str::from_byte(66u8);\n-/// assert_eq!(string.as_slice(), \"B\");\n+/// let string = str::from_byte(104);\n+/// assert_eq!(string.as_slice(), \"h\");\n /// ```\n pub fn from_byte(b: u8) -> String {\n     assert!(b < 128u8);\n     String::from_char(1, b as char)\n }\n \n /// Convert a char to a string\n+///\n+/// # Example\n+///\n+/// ```rust\n+/// use std::str;\n+/// let string = str::from_char('b');\n+/// assert_eq!(string.as_slice(), \"b\");\n+/// ```\n pub fn from_char(ch: char) -> String {\n     let mut buf = String::new();\n     buf.push_char(ch);\n     buf\n }\n \n /// Convert a vector of chars to a string\n+///\n+/// # Example\n+///\n+/// ```rust\n+/// use std::str;\n+/// let chars = ['h', 'e', 'l', 'l', 'o'];\n+/// let string = str::from_chars(chars);\n+/// assert_eq!(string.as_slice(), \"hello\");\n+/// ```\n pub fn from_chars(chs: &[char]) -> String {\n     chs.iter().map(|c| *c).collect()\n }"}]}