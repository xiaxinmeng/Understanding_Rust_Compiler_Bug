{"sha": "24cd863a3815f7ae7828c9f161a0b3f863218106", "node_id": "C_kwDOAAsO6NoAKDI0Y2Q4NjNhMzgxNWY3YWU3ODI4YzlmMTYxYTBiM2Y4NjMyMTgxMDY", "commit": {"author": {"name": "Arthur Carcano", "email": "arthur.carcano@ocamlpro.com", "date": "2022-12-09T14:04:36Z"}, "committer": {"name": "Arthur Carcano", "email": "arthur.carcano@ocamlpro.com", "date": "2022-12-09T14:04:36Z"}, "message": "Replace hand-made masking by call to masked() method in FileType", "tree": {"sha": "9da8e5f3b295daae596e40bb3986936951ca7264", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9da8e5f3b295daae596e40bb3986936951ca7264"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24cd863a3815f7ae7828c9f161a0b3f863218106", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24cd863a3815f7ae7828c9f161a0b3f863218106", "html_url": "https://github.com/rust-lang/rust/commit/24cd863a3815f7ae7828c9f161a0b3f863218106", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24cd863a3815f7ae7828c9f161a0b3f863218106/comments", "author": {"login": "krtab", "id": 53921575, "node_id": "MDQ6VXNlcjUzOTIxNTc1", "avatar_url": "https://avatars.githubusercontent.com/u/53921575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krtab", "html_url": "https://github.com/krtab", "followers_url": "https://api.github.com/users/krtab/followers", "following_url": "https://api.github.com/users/krtab/following{/other_user}", "gists_url": "https://api.github.com/users/krtab/gists{/gist_id}", "starred_url": "https://api.github.com/users/krtab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krtab/subscriptions", "organizations_url": "https://api.github.com/users/krtab/orgs", "repos_url": "https://api.github.com/users/krtab/repos", "events_url": "https://api.github.com/users/krtab/events{/privacy}", "received_events_url": "https://api.github.com/users/krtab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "krtab", "id": 53921575, "node_id": "MDQ6VXNlcjUzOTIxNTc1", "avatar_url": "https://avatars.githubusercontent.com/u/53921575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krtab", "html_url": "https://github.com/krtab", "followers_url": "https://api.github.com/users/krtab/followers", "following_url": "https://api.github.com/users/krtab/following{/other_user}", "gists_url": "https://api.github.com/users/krtab/gists{/gist_id}", "starred_url": "https://api.github.com/users/krtab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krtab/subscriptions", "organizations_url": "https://api.github.com/users/krtab/orgs", "repos_url": "https://api.github.com/users/krtab/repos", "events_url": "https://api.github.com/users/krtab/events{/privacy}", "received_events_url": "https://api.github.com/users/krtab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4198d2975dd24322515f8894a3ac06e342aad183", "url": "https://api.github.com/repos/rust-lang/rust/commits/4198d2975dd24322515f8894a3ac06e342aad183", "html_url": "https://github.com/rust-lang/rust/commit/4198d2975dd24322515f8894a3ac06e342aad183"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "fb8d06c66820cf0b47a41a48cfdfd8064d3c7f5f", "filename": "library/std/src/sys/unix/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24cd863a3815f7ae7828c9f161a0b3f863218106/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24cd863a3815f7ae7828c9f161a0b3f863218106/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs?ref=24cd863a3815f7ae7828c9f161a0b3f863218106", "patch": "@@ -560,7 +560,7 @@ impl FileType {\n     }\n \n     pub fn is(&self, mode: mode_t) -> bool {\n-        self.mode & libc::S_IFMT == mode\n+        self.masked() == mode\n     }\n \n     fn masked(&self) -> mode_t {"}]}