{"sha": "add6f14fbfbb5dfce58818559cbe6976dfe90c9e", "node_id": "C_kwDOAAsO6NoAKGFkZDZmMTRmYmZiYjVkZmNlNTg4MTg1NTljYmU2OTc2ZGZlOTBjOWU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-15T09:44:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-15T09:44:09Z"}, "message": "Rollup merge of #104241 - bjorn3:smaller_unwind_build_script, r=Mark-Simulacrum\n\nMove most of unwind's build script to lib.rs\n\nOnly the android libunwind detection remains in the build script\n\n* Reduces dependence on build scripts for building the standard library\n* Reduces dependence on exact target names in favor of using semantic cfg(target_*) usage.\n* Keeps almost all code related to linking of the unwinder in one file", "tree": {"sha": "f2bcfbafaba2c2b9aecea2b4a481f75d06532439", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2bcfbafaba2c2b9aecea2b4a481f75d06532439"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/add6f14fbfbb5dfce58818559cbe6976dfe90c9e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjc19pCRBK7hj4Ov3rIwAAYTQIAJZQPTqpLJY3mS9NcIAw/NQ/\nAdkQHph+IEiOOUHty/xM2m9t6CmP0pRuQ8oQ2O1zRhjliBqrzucIIeuEPEZHndl4\nIgp6JH5zudF/L7xSv4SLU3appX8Gl/wBxcRB9E0ogLSuIczaB7zRuS/HyC5pCuus\nIeEaNMd8w1jRLn1PHJZAduz98AMVlRJMtsoZnfdcIzVc8gtUuIhkM86ouuX4zcZH\nSxLA+MJkOmtHPxC5Iic3B29IJFlzNPLNLX0fE9xOHhSrG4l3JGVUc6rc37lI6RzL\nor3GZ9ouLs5zL9IV9+BEZikwn3dCXLjAhnYg/irMgm0wmCbozesA/KwMAc7vk4Y=\n=F4m+\n-----END PGP SIGNATURE-----\n", "payload": "tree f2bcfbafaba2c2b9aecea2b4a481f75d06532439\nparent 47f9d89f9abd24bc6a347a77dcf131e283ad2c3b\nparent 53852ee4eb1fed3a616cd2f99ac77fc3d5bd296b\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1668505449 +0100\ncommitter GitHub <noreply@github.com> 1668505449 +0100\n\nRollup merge of #104241 - bjorn3:smaller_unwind_build_script, r=Mark-Simulacrum\n\nMove most of unwind's build script to lib.rs\n\nOnly the android libunwind detection remains in the build script\n\n* Reduces dependence on build scripts for building the standard library\n* Reduces dependence on exact target names in favor of using semantic cfg(target_*) usage.\n* Keeps almost all code related to linking of the unwinder in one file\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/add6f14fbfbb5dfce58818559cbe6976dfe90c9e", "html_url": "https://github.com/rust-lang/rust/commit/add6f14fbfbb5dfce58818559cbe6976dfe90c9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/add6f14fbfbb5dfce58818559cbe6976dfe90c9e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47f9d89f9abd24bc6a347a77dcf131e283ad2c3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/47f9d89f9abd24bc6a347a77dcf131e283ad2c3b", "html_url": "https://github.com/rust-lang/rust/commit/47f9d89f9abd24bc6a347a77dcf131e283ad2c3b"}, {"sha": "53852ee4eb1fed3a616cd2f99ac77fc3d5bd296b", "url": "https://api.github.com/repos/rust-lang/rust/commits/53852ee4eb1fed3a616cd2f99ac77fc3d5bd296b", "html_url": "https://github.com/rust-lang/rust/commit/53852ee4eb1fed3a616cd2f99ac77fc3d5bd296b"}], "stats": {"total": 48, "additions": 24, "deletions": 24}, "files": [{"sha": "5c3c02fb6adace904655f6b8597faffb29259321", "filename": "library/unwind/build.rs", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/add6f14fbfbb5dfce58818559cbe6976dfe90c9e/library%2Funwind%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/add6f14fbfbb5dfce58818559cbe6976dfe90c9e/library%2Funwind%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Funwind%2Fbuild.rs?ref=add6f14fbfbb5dfce58818559cbe6976dfe90c9e", "patch": "@@ -21,29 +21,5 @@ fn main() {\n         if has_unwind {\n             println!(\"cargo:rustc-cfg=feature=\\\"system-llvm-libunwind\\\"\");\n         }\n-    } else if target.contains(\"freebsd\") {\n-        println!(\"cargo:rustc-link-lib=gcc_s\");\n-    } else if target.contains(\"netbsd\") {\n-        println!(\"cargo:rustc-link-lib=gcc_s\");\n-    } else if target.contains(\"openbsd\") {\n-        if target.contains(\"sparc64\") {\n-            println!(\"cargo:rustc-link-lib=gcc\");\n-        } else {\n-            println!(\"cargo:rustc-link-lib=c++abi\");\n-        }\n-    } else if target.contains(\"solaris\") {\n-        println!(\"cargo:rustc-link-lib=gcc_s\");\n-    } else if target.contains(\"illumos\") {\n-        println!(\"cargo:rustc-link-lib=gcc_s\");\n-    } else if target.contains(\"dragonfly\") {\n-        println!(\"cargo:rustc-link-lib=gcc_pic\");\n-    } else if target.ends_with(\"pc-windows-gnu\") {\n-        // This is handled in the target spec with late_link_args_[static|dynamic]\n-    } else if target.contains(\"uwp-windows-gnu\") {\n-        println!(\"cargo:rustc-link-lib=unwind\");\n-    } else if target.contains(\"haiku\") {\n-        println!(\"cargo:rustc-link-lib=gcc_s\");\n-    } else if target.contains(\"redox\") {\n-        // redox is handled in lib.rs\n     }\n }"}, {"sha": "3753071d5f0c1fb6bacd8a04a2fd687ae9c3c615", "filename": "library/unwind/src/lib.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/add6f14fbfbb5dfce58818559cbe6976dfe90c9e/library%2Funwind%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/add6f14fbfbb5dfce58818559cbe6976dfe90c9e/library%2Funwind%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Funwind%2Fsrc%2Flib.rs?ref=add6f14fbfbb5dfce58818559cbe6976dfe90c9e", "patch": "@@ -103,3 +103,27 @@ extern \"C\" {}\n #[cfg(all(target_vendor = \"fortanix\", target_env = \"sgx\"))]\n #[link(name = \"unwind\", kind = \"static\", modifiers = \"-bundle\")]\n extern \"C\" {}\n+\n+#[cfg(any(target_os = \"freebsd\", target_os = \"netbsd\"))]\n+#[link(name = \"gcc_s\")]\n+extern \"C\" {}\n+\n+#[cfg(all(target_os = \"openbsd\", target_arch = \"sparc64\"))]\n+#[link(name = \"gcc\")]\n+extern \"C\" {}\n+\n+#[cfg(all(target_os = \"openbsd\", not(target_arch = \"sparc64\")))]\n+#[link(name = \"c++abi\")]\n+extern \"C\" {}\n+\n+#[cfg(any(target_os = \"solaris\", target_os = \"illumos\"))]\n+#[link(name = \"gcc_s\")]\n+extern \"C\" {}\n+\n+#[cfg(target_os = \"dragonfly\")]\n+#[link(name = \"gcc_pic\")]\n+extern \"C\" {}\n+\n+#[cfg(target_os = \"haiku\")]\n+#[link(name = \"gcc_s\")]\n+extern \"C\" {}"}]}