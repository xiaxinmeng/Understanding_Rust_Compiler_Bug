{"sha": "64c9712cf3f49644158f759d10783b31aa176042", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0Yzk3MTJjZjNmNDk2NDQxNThmNzU5ZDEwNzgzYjMxYWExNzYwNDI=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-06-24T04:47:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-24T04:47:39Z"}, "message": "Rollup merge of #86566 - fee1-dead:mir-pretty-print, r=oli-obk\n\nUse `use_verbose` for `mir::Constant`\n\nFixes #79799.", "tree": {"sha": "476a676f704c5b73f01ada725e776074d78265ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/476a676f704c5b73f01ada725e776074d78265ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64c9712cf3f49644158f759d10783b31aa176042", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg1A5rCRBK7hj4Ov3rIwAAW2gIACyNGrMDqTl4u0Q1mpYu0Bzq\nqnbB2vH6LnTWefxBp8s30HYcs+yKNrsB/2jcxCdZPfpvKUx4IDbMEqUlorJcvh05\nIGUKObHRdR9oaOSjE/+6JLlNdbihT0zKfl8y9Q1dh/OnFW1N+xkJh2Ew5TGeXAOk\nCpUYwJjPlTsx+1SkDXGi32tNBQ/qrY7Hs8uBW8AMdf5/XmBKSeiPaWFcpvppfiST\n4K7em2kkhYH/Xhq93uj3KYVHUxFuVEIKMorcd1inH8ZLqT1w2bnb0uUW81ZoJcIS\nVJaElpu0iCQMobTPVsZWke0EPC9wOlRQAb+DhiXsH60vja9sB896NnHbO2paaI8=\n=DKUe\n-----END PGP SIGNATURE-----\n", "payload": "tree 476a676f704c5b73f01ada725e776074d78265ec\nparent 2322097ef4cad1b0d0a024fcd9a58555723e3a99\nparent 637056766496aa67e72255ef725fbc6e8f913ae4\nauthor Yuki Okushi <jtitor@2k36.org> 1624510059 +0900\ncommitter GitHub <noreply@github.com> 1624510059 +0900\n\nRollup merge of #86566 - fee1-dead:mir-pretty-print, r=oli-obk\n\nUse `use_verbose` for `mir::Constant`\n\nFixes #79799.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64c9712cf3f49644158f759d10783b31aa176042", "html_url": "https://github.com/rust-lang/rust/commit/64c9712cf3f49644158f759d10783b31aa176042", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64c9712cf3f49644158f759d10783b31aa176042/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2322097ef4cad1b0d0a024fcd9a58555723e3a99", "url": "https://api.github.com/repos/rust-lang/rust/commits/2322097ef4cad1b0d0a024fcd9a58555723e3a99", "html_url": "https://github.com/rust-lang/rust/commit/2322097ef4cad1b0d0a024fcd9a58555723e3a99"}, {"sha": "637056766496aa67e72255ef725fbc6e8f913ae4", "url": "https://api.github.com/repos/rust-lang/rust/commits/637056766496aa67e72255ef725fbc6e8f913ae4", "html_url": "https://github.com/rust-lang/rust/commit/637056766496aa67e72255ef725fbc6e8f913ae4"}], "stats": {"total": 79, "additions": 19, "deletions": 60}, "files": [{"sha": "cb1203393b3d7396f8d7321925803e2e64acd9f7", "filename": "compiler/rustc_mir/src/util/pretty.rs", "status": "modified", "additions": 19, "deletions": 27, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/64c9712cf3f49644158f759d10783b31aa176042/compiler%2Frustc_mir%2Fsrc%2Futil%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64c9712cf3f49644158f759d10783b31aa176042/compiler%2Frustc_mir%2Fsrc%2Futil%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Futil%2Fpretty.rs?ref=64c9712cf3f49644158f759d10783b31aa176042", "patch": "@@ -426,14 +426,14 @@ impl ExtraComments<'tcx> {\n     }\n }\n \n-fn use_verbose(ty: &&TyS<'tcx>) -> bool {\n+fn use_verbose(ty: &&TyS<'tcx>, fn_def: bool) -> bool {\n     match ty.kind() {\n         ty::Int(_) | ty::Uint(_) | ty::Bool | ty::Char | ty::Float(_) => false,\n         // Unit type\n         ty::Tuple(g_args) if g_args.is_empty() => false,\n-        ty::Tuple(g_args) => g_args.iter().any(|g_arg| use_verbose(&g_arg.expect_ty())),\n-        ty::Array(ty, _) => use_verbose(ty),\n-        ty::FnDef(..) => false,\n+        ty::Tuple(g_args) => g_args.iter().any(|g_arg| use_verbose(&g_arg.expect_ty(), fn_def)),\n+        ty::Array(ty, _) => use_verbose(ty, fn_def),\n+        ty::FnDef(..) => fn_def,\n         _ => true,\n     }\n }\n@@ -442,28 +442,20 @@ impl Visitor<'tcx> for ExtraComments<'tcx> {\n     fn visit_constant(&mut self, constant: &Constant<'tcx>, location: Location) {\n         self.super_constant(constant, location);\n         let Constant { span, user_ty, literal } = constant;\n-        match literal.ty().kind() {\n-            ty::Int(_) | ty::Uint(_) | ty::Bool | ty::Char => {}\n-            // Unit type\n-            ty::Tuple(tys) if tys.is_empty() => {}\n-            _ => {\n-                self.push(\"mir::Constant\");\n-                self.push(&format!(\n-                    \"+ span: {}\",\n-                    self.tcx.sess.source_map().span_to_embeddable_string(*span)\n-                ));\n-                if let Some(user_ty) = user_ty {\n-                    self.push(&format!(\"+ user_ty: {:?}\", user_ty));\n-                }\n-                match literal {\n-                    ConstantKind::Ty(literal) => self.push(&format!(\"+ literal: {:?}\", literal)),\n-                    ConstantKind::Val(val, ty) => {\n-                        // To keep the diffs small, we render this almost like we render ty::Const\n-                        self.push(&format!(\n-                            \"+ literal: Const {{ ty: {}, val: Value({:?}) }}\",\n-                            ty, val\n-                        ))\n-                    }\n+        if use_verbose(&literal.ty(), true) {\n+            self.push(\"mir::Constant\");\n+            self.push(&format!(\n+                \"+ span: {}\",\n+                self.tcx.sess.source_map().span_to_embeddable_string(*span)\n+            ));\n+            if let Some(user_ty) = user_ty {\n+                self.push(&format!(\"+ user_ty: {:?}\", user_ty));\n+            }\n+            match literal {\n+                ConstantKind::Ty(literal) => self.push(&format!(\"+ literal: {:?}\", literal)),\n+                ConstantKind::Val(val, ty) => {\n+                    // To keep the diffs small, we render this almost like we render ty::Const\n+                    self.push(&format!(\"+ literal: Const {{ ty: {}, val: Value({:?}) }}\", ty, val))\n                 }\n             }\n         }\n@@ -472,7 +464,7 @@ impl Visitor<'tcx> for ExtraComments<'tcx> {\n     fn visit_const(&mut self, constant: &&'tcx ty::Const<'tcx>, _: Location) {\n         self.super_const(constant);\n         let ty::Const { ty, val, .. } = constant;\n-        if use_verbose(ty) {\n+        if use_verbose(ty, false) {\n             self.push(\"ty::Const\");\n             self.push(&format!(\"+ ty: {:?}\", ty));\n             let val = match val {"}, {"sha": "77ff8ef4e49528554280b86aac3334a30e090469", "filename": "src/test/mir-opt/const_prop/checked_add.main.ConstProp.diff", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/64c9712cf3f49644158f759d10783b31aa176042/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fchecked_add.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/64c9712cf3f49644158f759d10783b31aa176042/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fchecked_add.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fchecked_add.main.ConstProp.diff?ref=64c9712cf3f49644158f759d10783b31aa176042", "patch": "@@ -14,9 +14,6 @@\n -         _2 = CheckedAdd(const 1_u32, const 1_u32); // scope 0 at $DIR/checked_add.rs:5:18: 5:23\n -         assert(!move (_2.1: bool), \"attempt to compute `{} + {}`, which would overflow\", const 1_u32, const 1_u32) -> bb1; // scope 0 at $DIR/checked_add.rs:5:18: 5:23\n +         _2 = const (2_u32, false);       // scope 0 at $DIR/checked_add.rs:5:18: 5:23\n-+                                          // mir::Constant\n-+                                          // + span: $DIR/checked_add.rs:5:18: 5:23\n-+                                          // + literal: Const { ty: (u32, bool), val: Value(ByRef { alloc: Allocation { bytes: [2, 0, 0, 0, 0, 0, 0, 0], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 8 } }, align: Align { pow2: 2 }, mutability: Not, extra: () }, offset: Size { raw: 0 } }) }\n +         assert(!const false, \"attempt to compute `{} + {}`, which would overflow\", const 1_u32, const 1_u32) -> bb1; // scope 0 at $DIR/checked_add.rs:5:18: 5:23\n       }\n   "}, {"sha": "8dd55235ef37b42c6aa258d352977f62221931cf", "filename": "src/test/mir-opt/const_prop/indirect.main.ConstProp.diff", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/64c9712cf3f49644158f759d10783b31aa176042/src%2Ftest%2Fmir-opt%2Fconst_prop%2Findirect.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/64c9712cf3f49644158f759d10783b31aa176042/src%2Ftest%2Fmir-opt%2Fconst_prop%2Findirect.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Findirect.main.ConstProp.diff?ref=64c9712cf3f49644158f759d10783b31aa176042", "patch": "@@ -18,9 +18,6 @@\n -         assert(!move (_3.1: bool), \"attempt to compute `{} + {}`, which would overflow\", move _2, const 1_u8) -> bb1; // scope 0 at $DIR/indirect.rs:5:13: 5:29\n +         _2 = const 2_u8;                 // scope 0 at $DIR/indirect.rs:5:13: 5:25\n +         _3 = const (3_u8, false);        // scope 0 at $DIR/indirect.rs:5:13: 5:29\n-+                                          // mir::Constant\n-+                                          // + span: $DIR/indirect.rs:5:13: 5:29\n-+                                          // + literal: Const { ty: (u8, bool), val: Value(ByRef { alloc: Allocation { bytes: [3, 0], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [3], len: Size { raw: 2 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, offset: Size { raw: 0 } }) }\n +         assert(!const false, \"attempt to compute `{} + {}`, which would overflow\", const 2_u8, const 1_u8) -> bb1; // scope 0 at $DIR/indirect.rs:5:13: 5:29\n       }\n   "}, {"sha": "2d3289f7ce51d9d475051441bd083ac68a343ec5", "filename": "src/test/mir-opt/const_prop/issue_67019.main.ConstProp.diff", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/64c9712cf3f49644158f759d10783b31aa176042/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue_67019.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/64c9712cf3f49644158f759d10783b31aa176042/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue_67019.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue_67019.main.ConstProp.diff?ref=64c9712cf3f49644158f759d10783b31aa176042", "patch": "@@ -15,9 +15,6 @@\n           (_3.1: u8) = const 2_u8;         // scope 0 at $DIR/issue-67019.rs:11:11: 11:17\n -         (_2.0: (u8, u8)) = move _3;      // scope 0 at $DIR/issue-67019.rs:11:10: 11:19\n +         (_2.0: (u8, u8)) = const (1_u8, 2_u8); // scope 0 at $DIR/issue-67019.rs:11:10: 11:19\n-+                                          // mir::Constant\n-+                                          // + span: $DIR/issue-67019.rs:11:10: 11:19\n-+                                          // + literal: Const { ty: (u8, u8), val: Value(ByRef { alloc: Allocation { bytes: [1, 2], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [3], len: Size { raw: 2 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, offset: Size { raw: 0 } }) }\n           StorageDead(_3);                 // scope 0 at $DIR/issue-67019.rs:11:18: 11:19\n           _1 = test(move _2) -> bb1;       // scope 0 at $DIR/issue-67019.rs:11:5: 11:20\n                                            // mir::Constant"}, {"sha": "a044d1dcfe1d9403239494376f8c9d893083b420", "filename": "src/test/mir-opt/const_prop/mutable_variable_aggregate.main.ConstProp.diff", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/64c9712cf3f49644158f759d10783b31aa176042/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/64c9712cf3f49644158f759d10783b31aa176042/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate.main.ConstProp.diff?ref=64c9712cf3f49644158f759d10783b31aa176042", "patch": "@@ -20,9 +20,6 @@\n           StorageLive(_2);                 // scope 1 at $DIR/mutable_variable_aggregate.rs:7:9: 7:10\n -         _2 = _1;                         // scope 1 at $DIR/mutable_variable_aggregate.rs:7:13: 7:14\n +         _2 = const (42_i32, 99_i32);     // scope 1 at $DIR/mutable_variable_aggregate.rs:7:13: 7:14\n-+                                          // mir::Constant\n-+                                          // + span: $DIR/mutable_variable_aggregate.rs:7:13: 7:14\n-+                                          // + literal: Const { ty: (i32, i32), val: Value(ByRef { alloc: Allocation { bytes: [42, 0, 0, 0, 99, 0, 0, 0], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [255], len: Size { raw: 8 } }, align: Align { pow2: 2 }, mutability: Not, extra: () }, offset: Size { raw: 0 } }) }\n           nop;                             // scope 0 at $DIR/mutable_variable_aggregate.rs:4:11: 8:2\n           StorageDead(_2);                 // scope 1 at $DIR/mutable_variable_aggregate.rs:8:1: 8:2\n           StorageDead(_1);                 // scope 0 at $DIR/mutable_variable_aggregate.rs:8:1: 8:2"}, {"sha": "4c3f66cd0907f95a883416d53e1ef7619276c209", "filename": "src/test/mir-opt/const_prop/optimizes_into_variable.main.ConstProp.32bit.diff", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/64c9712cf3f49644158f759d10783b31aa176042/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable.main.ConstProp.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/64c9712cf3f49644158f759d10783b31aa176042/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable.main.ConstProp.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable.main.ConstProp.32bit.diff?ref=64c9712cf3f49644158f759d10783b31aa176042", "patch": "@@ -27,9 +27,6 @@\n -         _2 = CheckedAdd(const 2_i32, const 2_i32); // scope 0 at $DIR/optimizes_into_variable.rs:12:13: 12:18\n -         assert(!move (_2.1: bool), \"attempt to compute `{} + {}`, which would overflow\", const 2_i32, const 2_i32) -> bb1; // scope 0 at $DIR/optimizes_into_variable.rs:12:13: 12:18\n +         _2 = const (4_i32, false);       // scope 0 at $DIR/optimizes_into_variable.rs:12:13: 12:18\n-+                                          // mir::Constant\n-+                                          // + span: $DIR/optimizes_into_variable.rs:12:13: 12:18\n-+                                          // + literal: Const { ty: (i32, bool), val: Value(ByRef { alloc: Allocation { bytes: [4, 0, 0, 0, 0, 0, 0, 0], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 8 } }, align: Align { pow2: 2 }, mutability: Not, extra: () }, offset: Size { raw: 0 } }) }\n +         assert(!const false, \"attempt to compute `{} + {}`, which would overflow\", const 2_i32, const 2_i32) -> bb1; // scope 0 at $DIR/optimizes_into_variable.rs:12:13: 12:18\n       }\n   "}, {"sha": "4c3f66cd0907f95a883416d53e1ef7619276c209", "filename": "src/test/mir-opt/const_prop/optimizes_into_variable.main.ConstProp.64bit.diff", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/64c9712cf3f49644158f759d10783b31aa176042/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable.main.ConstProp.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/64c9712cf3f49644158f759d10783b31aa176042/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable.main.ConstProp.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable.main.ConstProp.64bit.diff?ref=64c9712cf3f49644158f759d10783b31aa176042", "patch": "@@ -27,9 +27,6 @@\n -         _2 = CheckedAdd(const 2_i32, const 2_i32); // scope 0 at $DIR/optimizes_into_variable.rs:12:13: 12:18\n -         assert(!move (_2.1: bool), \"attempt to compute `{} + {}`, which would overflow\", const 2_i32, const 2_i32) -> bb1; // scope 0 at $DIR/optimizes_into_variable.rs:12:13: 12:18\n +         _2 = const (4_i32, false);       // scope 0 at $DIR/optimizes_into_variable.rs:12:13: 12:18\n-+                                          // mir::Constant\n-+                                          // + span: $DIR/optimizes_into_variable.rs:12:13: 12:18\n-+                                          // + literal: Const { ty: (i32, bool), val: Value(ByRef { alloc: Allocation { bytes: [4, 0, 0, 0, 0, 0, 0, 0], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 8 } }, align: Align { pow2: 2 }, mutability: Not, extra: () }, offset: Size { raw: 0 } }) }\n +         assert(!const false, \"attempt to compute `{} + {}`, which would overflow\", const 2_i32, const 2_i32) -> bb1; // scope 0 at $DIR/optimizes_into_variable.rs:12:13: 12:18\n       }\n   "}, {"sha": "c6ac8d6fb139d7bf2cdd29968d088bc3a9d38acf", "filename": "src/test/mir-opt/const_prop/return_place.add.ConstProp.diff", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/64c9712cf3f49644158f759d10783b31aa176042/src%2Ftest%2Fmir-opt%2Fconst_prop%2Freturn_place.add.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/64c9712cf3f49644158f759d10783b31aa176042/src%2Ftest%2Fmir-opt%2Fconst_prop%2Freturn_place.add.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Freturn_place.add.ConstProp.diff?ref=64c9712cf3f49644158f759d10783b31aa176042", "patch": "@@ -9,9 +9,6 @@\n -         _1 = CheckedAdd(const 2_u32, const 2_u32); // scope 0 at $DIR/return_place.rs:6:5: 6:10\n -         assert(!move (_1.1: bool), \"attempt to compute `{} + {}`, which would overflow\", const 2_u32, const 2_u32) -> bb1; // scope 0 at $DIR/return_place.rs:6:5: 6:10\n +         _1 = const (4_u32, false);       // scope 0 at $DIR/return_place.rs:6:5: 6:10\n-+                                          // mir::Constant\n-+                                          // + span: $DIR/return_place.rs:6:5: 6:10\n-+                                          // + literal: Const { ty: (u32, bool), val: Value(ByRef { alloc: Allocation { bytes: [4, 0, 0, 0, 0, 0, 0, 0], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 8 } }, align: Align { pow2: 2 }, mutability: Not, extra: () }, offset: Size { raw: 0 } }) }\n +         assert(!const false, \"attempt to compute `{} + {}`, which would overflow\", const 2_u32, const 2_u32) -> bb1; // scope 0 at $DIR/return_place.rs:6:5: 6:10\n       }\n   "}, {"sha": "15253a364e99026493c7a275c1c70605162a82aa", "filename": "src/test/mir-opt/const_prop/tuple_literal_propagation.main.ConstProp.diff", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/64c9712cf3f49644158f759d10783b31aa176042/src%2Ftest%2Fmir-opt%2Fconst_prop%2Ftuple_literal_propagation.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/64c9712cf3f49644158f759d10783b31aa176042/src%2Ftest%2Fmir-opt%2Fconst_prop%2Ftuple_literal_propagation.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Ftuple_literal_propagation.main.ConstProp.diff?ref=64c9712cf3f49644158f759d10783b31aa176042", "patch": "@@ -18,9 +18,6 @@\n           StorageLive(_3);                 // scope 1 at $DIR/tuple_literal_propagation.rs:5:13: 5:14\n -         _3 = _1;                         // scope 1 at $DIR/tuple_literal_propagation.rs:5:13: 5:14\n +         _3 = const (1_u32, 2_u32);       // scope 1 at $DIR/tuple_literal_propagation.rs:5:13: 5:14\n-+                                          // mir::Constant\n-+                                          // + span: $DIR/tuple_literal_propagation.rs:5:13: 5:14\n-+                                          // + literal: Const { ty: (u32, u32), val: Value(ByRef { alloc: Allocation { bytes: [1, 0, 0, 0, 2, 0, 0, 0], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [255], len: Size { raw: 8 } }, align: Align { pow2: 2 }, mutability: Not, extra: () }, offset: Size { raw: 0 } }) }\n           _2 = consume(move _3) -> bb1;    // scope 1 at $DIR/tuple_literal_propagation.rs:5:5: 5:15\n                                            // mir::Constant\n                                            // + span: $DIR/tuple_literal_propagation.rs:5:5: 5:12"}, {"sha": "d3c7136c6478f2eb1041d942821066c147a3c57b", "filename": "src/test/mir-opt/deaggregator_test.bar.Deaggregator.diff", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/64c9712cf3f49644158f759d10783b31aa176042/src%2Ftest%2Fmir-opt%2Fdeaggregator_test.bar.Deaggregator.diff", "raw_url": "https://github.com/rust-lang/rust/raw/64c9712cf3f49644158f759d10783b31aa176042/src%2Ftest%2Fmir-opt%2Fdeaggregator_test.bar.Deaggregator.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fdeaggregator_test.bar.Deaggregator.diff?ref=64c9712cf3f49644158f759d10783b31aa176042", "patch": "@@ -12,9 +12,6 @@\n -         _0 = Baz { x: move _2, y: const 0f32, z: const false }; // scope 0 at $DIR/deaggregator_test.rs:9:5: 9:35\n +         (_0.0: usize) = move _2;         // scope 0 at $DIR/deaggregator_test.rs:9:5: 9:35\n +         (_0.1: f32) = const 0f32;        // scope 0 at $DIR/deaggregator_test.rs:9:5: 9:35\n-                                           // mir::Constant\n-                                           // + span: $DIR/deaggregator_test.rs:9:20: 9:23\n-                                           // + literal: Const { ty: f32, val: Value(Scalar(0x00000000)) }\n +         (_0.2: bool) = const false;      // scope 0 at $DIR/deaggregator_test.rs:9:5: 9:35\n           StorageDead(_2);                 // scope 0 at $DIR/deaggregator_test.rs:9:34: 9:35\n           return;                          // scope 0 at $DIR/deaggregator_test.rs:10:2: 10:2"}, {"sha": "64a3f52f3a06ac870b750c0353c90de61e916db4", "filename": "src/test/mir-opt/if_condition_int.dont_opt_floats.SimplifyComparisonIntegral.diff", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/64c9712cf3f49644158f759d10783b31aa176042/src%2Ftest%2Fmir-opt%2Fif_condition_int.dont_opt_floats.SimplifyComparisonIntegral.diff", "raw_url": "https://github.com/rust-lang/rust/raw/64c9712cf3f49644158f759d10783b31aa176042/src%2Ftest%2Fmir-opt%2Fif_condition_int.dont_opt_floats.SimplifyComparisonIntegral.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fif_condition_int.dont_opt_floats.SimplifyComparisonIntegral.diff?ref=64c9712cf3f49644158f759d10783b31aa176042", "patch": "@@ -12,9 +12,6 @@\n           StorageLive(_3);                 // scope 0 at $DIR/if-condition-int.rs:53:8: 53:9\n           _3 = _1;                         // scope 0 at $DIR/if-condition-int.rs:53:8: 53:9\n           _2 = Eq(move _3, const -42f32);  // scope 0 at $DIR/if-condition-int.rs:53:8: 53:18\n-                                           // mir::Constant\n-                                           // + span: $DIR/if-condition-int.rs:53:13: 53:18\n-                                           // + literal: Const { ty: f32, val: Value(Scalar(0xc2280000)) }\n           StorageDead(_3);                 // scope 0 at $DIR/if-condition-int.rs:53:17: 53:18\n           switchInt(move _2) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/if-condition-int.rs:53:5: 53:35\n       }"}, {"sha": "598e8247efc5af37f4eb93a63bedd31b034c0116", "filename": "src/test/mir-opt/simplify_locals_removes_unused_consts.main.SimplifyLocals.diff", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/64c9712cf3f49644158f759d10783b31aa176042/src%2Ftest%2Fmir-opt%2Fsimplify_locals_removes_unused_consts.main.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/64c9712cf3f49644158f759d10783b31aa176042/src%2Ftest%2Fmir-opt%2Fsimplify_locals_removes_unused_consts.main.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_locals_removes_unused_consts.main.SimplifyLocals.diff?ref=64c9712cf3f49644158f759d10783b31aa176042", "patch": "@@ -38,9 +38,6 @@\n                                            // mir::Constant\n                                            // + span: $DIR/simplify-locals-removes-unused-consts.rs:14:5: 14:12\n                                            // + literal: Const { ty: fn(((), ())) {use_zst}, val: Value(Scalar(<ZST>)) }\n-                                           // mir::Constant\n-                                           // + span: $DIR/simplify-locals-removes-unused-consts.rs:14:5: 14:22\n-                                           // + literal: Const { ty: ((), ()), val: Value(Scalar(<ZST>)) }\n       }\n   \n       bb1: {"}]}