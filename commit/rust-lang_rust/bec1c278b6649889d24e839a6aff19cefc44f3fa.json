{"sha": "bec1c278b6649889d24e839a6aff19cefc44f3fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlYzFjMjc4YjY2NDk4ODlkMjRlODM5YTZhZmYxOWNlZmM0NGYzZmE=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-12-17T01:34:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-17T01:34:47Z"}, "message": "Remove docs for non-existent parameters in `rustc_expand`", "tree": {"sha": "5bd4d31df0078e3cebfcd0936b8ec9c64cf3a5e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5bd4d31df0078e3cebfcd0936b8ec9c64cf3a5e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bec1c278b6649889d24e839a6aff19cefc44f3fa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf2rW3CRBK7hj4Ov3rIwAAdHIIAJbL9+UxxdGPNiRaWu2VPWyN\n/Hy6NvdDbXkkiZWxag45wPDgqlNX/HCrz7SgtQ7sO6frhpD+QaBnHjUPX3p8Yib1\nWNefhgmP6b08Bho0iIP2js6d0a9ftv6q/PwIMiNFBLkRF0+lXa4FkuBcHLAfw6W2\nA34/Pv/m8PPfF9B/bu9jd8NlSeJXjJYB74WHwpqKZdYkSrqcI4zBaMHwlDbuC+5M\nMcL+S4HATT3Yx/6k9UuPqiB7ieVzq0S6WeDH11YJeCbWM3r+4fBKbK/+zWtuuNAu\nmh0S9O3SMTkCsr9fDj5U74JUf3vgs49SCnZgyMoPYti4zriJHniTW/CUTKpwnDA=\n=iGuc\n-----END PGP SIGNATURE-----\n", "payload": "tree 5bd4d31df0078e3cebfcd0936b8ec9c64cf3a5e6\nparent b32e6e6ac8921035177256ab6806e6ab0d4b9b94\nauthor Camelid <camelidcamel@gmail.com> 1608168887 -0800\ncommitter GitHub <noreply@github.com> 1608168887 -0800\n\nRemove docs for non-existent parameters in `rustc_expand`"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bec1c278b6649889d24e839a6aff19cefc44f3fa", "html_url": "https://github.com/rust-lang/rust/commit/bec1c278b6649889d24e839a6aff19cefc44f3fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bec1c278b6649889d24e839a6aff19cefc44f3fa/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b32e6e6ac8921035177256ab6806e6ab0d4b9b94", "url": "https://api.github.com/repos/rust-lang/rust/commits/b32e6e6ac8921035177256ab6806e6ab0d4b9b94", "html_url": "https://github.com/rust-lang/rust/commit/b32e6e6ac8921035177256ab6806e6ab0d4b9b94"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "c37f91256757e13e717bffac341efb684728d461", "filename": "compiler/rustc_expand/src/mbe/macro_parser.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bec1c278b6649889d24e839a6aff19cefc44f3fa/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bec1c278b6649889d24e839a6aff19cefc44f3fa/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs?ref=bec1c278b6649889d24e839a6aff19cefc44f3fa", "patch": "@@ -1,4 +1,4 @@\n-//! This is an NFA-based parser, which calls out to the main rust parser for named non-terminals\n+//! This is an NFA-based parser, which calls out to the main Rust parser for named non-terminals\n //! (which it commits to fully when it hits one in a grammar). There's a set of current NFA threads\n //! and a set of next ones. Instead of NTs, we have a special case for Kleene star. The big-O, in\n //! pathological cases, is worse than traditional use of NFA or Earley parsing, but it's an easier\n@@ -422,16 +422,13 @@ fn token_name_eq(t1: &Token, t2: &Token) -> bool {\n ///\n /// # Parameters\n ///\n-/// - `sess`: the parsing session into which errors are emitted.\n /// - `cur_items`: the set of current items to be processed. This should be empty by the end of a\n ///   successful execution of this function.\n /// - `next_items`: the set of newly generated items. These are used to replenish `cur_items` in\n ///   the function `parse`.\n /// - `eof_items`: the set of items that would be valid if this was the EOF.\n /// - `bb_items`: the set of items that are waiting for the black-box parser.\n /// - `token`: the current token of the parser.\n-/// - `span`: the `Span` in the source code corresponding to the token trees we are trying to match\n-///   against the matcher positions in `cur_items`.\n ///\n /// # Returns\n ///"}]}