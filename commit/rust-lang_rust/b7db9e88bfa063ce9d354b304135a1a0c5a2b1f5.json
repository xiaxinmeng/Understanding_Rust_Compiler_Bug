{"sha": "b7db9e88bfa063ce9d354b304135a1a0c5a2b1f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3ZGI5ZTg4YmZhMDYzY2U5ZDM1NGIzMDQxMzVhMWEwYzVhMmIxZjU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-06-09T23:09:43Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-08-10T21:32:07Z"}, "message": "privacy: Substitute type aliases in private-in-public checker", "tree": {"sha": "301659953203dc61d8e34f35ef78d34b93f6a8b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/301659953203dc61d8e34f35ef78d34b93f6a8b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7db9e88bfa063ce9d354b304135a1a0c5a2b1f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7db9e88bfa063ce9d354b304135a1a0c5a2b1f5", "html_url": "https://github.com/rust-lang/rust/commit/b7db9e88bfa063ce9d354b304135a1a0c5a2b1f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7db9e88bfa063ce9d354b304135a1a0c5a2b1f5/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f2ae3849cf024457253be745ff514a403e90b44", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f2ae3849cf024457253be745ff514a403e90b44", "html_url": "https://github.com/rust-lang/rust/commit/1f2ae3849cf024457253be745ff514a403e90b44"}], "stats": {"total": 19, "additions": 6, "deletions": 13}, "files": [{"sha": "876c578aa486abf66aa185674e0d056314919c2b", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b7db9e88bfa063ce9d354b304135a1a0c5a2b1f5/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7db9e88bfa063ce9d354b304135a1a0c5a2b1f5/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=b7db9e88bfa063ce9d354b304135a1a0c5a2b1f5", "patch": "@@ -873,12 +873,6 @@ impl<'a, 'tcx: 'a> SearchInterfaceForPrivateItemsVisitor<'a, 'tcx> {\n     // Return the visibility of the type alias's least visible component type when substituted\n     fn substituted_alias_visibility(&self, item: &hir::Item, path: &hir::Path)\n                                     -> Option<ty::Visibility> {\n-        // We substitute type aliases only when determining impl publicity\n-        // FIXME: This will probably change and all type aliases will be substituted,\n-        // requires an amendment to RFC 136.\n-        if self.required_visibility != ty::Visibility::PrivateExternal {\n-            return None;\n-        }\n         // Type alias is considered public if the aliased type is\n         // public, even if the type alias itself is private. So, something\n         // like `type A = u8; pub fn f() -> A {...}` doesn't cause an error."}, {"sha": "b0cace1164894b16694ea209a71cf68bd1167ae9", "filename": "src/test/compile-fail/private-in-public-warn.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b7db9e88bfa063ce9d354b304135a1a0c5a2b1f5/src%2Ftest%2Fcompile-fail%2Fprivate-in-public-warn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7db9e88bfa063ce9d354b304135a1a0c5a2b1f5/src%2Ftest%2Fcompile-fail%2Fprivate-in-public-warn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivate-in-public-warn.rs?ref=b7db9e88bfa063ce9d354b304135a1a0c5a2b1f5", "patch": "@@ -205,11 +205,10 @@ mod aliases_pub {\n     }\n \n     pub fn f1(arg: PrivUseAlias) {} // OK\n+    pub fn f2(arg: PrivAlias) {} // OK\n \n     pub trait Tr1: PrivUseAliasTr {} // OK\n-    // This should be OK, if type aliases are substituted\n-    pub trait Tr2: PrivUseAliasTr<PrivAlias> {} //~ WARN private type in public interface\n-        //~^ WARNING hard error\n+    pub trait Tr2: PrivUseAliasTr<PrivAlias> {} // OK\n \n     impl PrivAlias {\n         pub fn f(arg: Priv) {} //~ WARN private type in public interface\n@@ -246,6 +245,8 @@ mod aliases_priv {\n     use self::Priv1 as PrivUseAlias;\n     use self::PrivTr1 as PrivUseAliasTr;\n     type PrivAlias = Priv2;\n+    //~^ WARN private type in public interface\n+    //~| WARNING hard error\n     trait PrivTr {\n         type AssocAlias;\n     }\n@@ -285,6 +286,8 @@ mod aliases_params {\n     struct Priv;\n     type PrivAliasGeneric<T = Priv> = T;\n     type Result<T> = ::std::result::Result<T, Priv>;\n+\n+    pub fn f1(arg: PrivAliasGeneric<u8>) {} // OK, not an error\n }\n \n #[rustc_error]"}, {"sha": "7d4dcfd3145abdd313a6663c8fd620579d88fd26", "filename": "src/test/compile-fail/private-in-public.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b7db9e88bfa063ce9d354b304135a1a0c5a2b1f5/src%2Ftest%2Fcompile-fail%2Fprivate-in-public.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7db9e88bfa063ce9d354b304135a1a0c5a2b1f5/src%2Ftest%2Fcompile-fail%2Fprivate-in-public.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivate-in-public.rs?ref=b7db9e88bfa063ce9d354b304135a1a0c5a2b1f5", "patch": "@@ -105,8 +105,6 @@ mod aliases_pub {\n     }\n     impl PrivTr for Priv {}\n \n-    // This should be OK, if type aliases are substituted\n-    pub fn f2(arg: PrivAlias) {} //~ ERROR private type in public interface\n     // This should be OK, but associated type aliases are not substituted yet\n     pub fn f3(arg: <Priv as PrivTr>::AssocAlias) {} //~ ERROR private type in public interface\n \n@@ -143,8 +141,6 @@ mod aliases_params {\n     type PrivAliasGeneric<T = Priv> = T;\n     type Result<T> = ::std::result::Result<T, Priv>;\n \n-    // This should be OK, if type aliases are substituted\n-    pub fn f1(arg: PrivAliasGeneric<u8>) {} //~ ERROR private type in public interface\n     pub fn f2(arg: PrivAliasGeneric) {} //~ ERROR private type in public interface\n     pub fn f3(arg: Result<u8>) {} //~ ERROR private type in public interface\n }"}]}