{"sha": "b77d74030b193c5d188d2191ece074b0898a3996", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3N2Q3NDAzMGIxOTNjNWQxODhkMjE5MWVjZTA3NGIwODk4YTM5OTY=", "commit": {"author": {"name": "Devon Hollowood", "email": "devonhollowood@gmail.com", "date": "2018-04-11T09:50:04Z"}, "committer": {"name": "Devon Hollowood", "email": "devonhollowood@gmail.com", "date": "2018-04-11T09:50:04Z"}, "message": "Deprecate misaligned_transmute", "tree": {"sha": "05edb4e77b8d75a51549cb8590d57931b070337b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05edb4e77b8d75a51549cb8590d57931b070337b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b77d74030b193c5d188d2191ece074b0898a3996", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b77d74030b193c5d188d2191ece074b0898a3996", "html_url": "https://github.com/rust-lang/rust/commit/b77d74030b193c5d188d2191ece074b0898a3996", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b77d74030b193c5d188d2191ece074b0898a3996/comments", "author": {"login": "devonhollowood", "id": 7864326, "node_id": "MDQ6VXNlcjc4NjQzMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/7864326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devonhollowood", "html_url": "https://github.com/devonhollowood", "followers_url": "https://api.github.com/users/devonhollowood/followers", "following_url": "https://api.github.com/users/devonhollowood/following{/other_user}", "gists_url": "https://api.github.com/users/devonhollowood/gists{/gist_id}", "starred_url": "https://api.github.com/users/devonhollowood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devonhollowood/subscriptions", "organizations_url": "https://api.github.com/users/devonhollowood/orgs", "repos_url": "https://api.github.com/users/devonhollowood/repos", "events_url": "https://api.github.com/users/devonhollowood/events{/privacy}", "received_events_url": "https://api.github.com/users/devonhollowood/received_events", "type": "User", "site_admin": false}, "committer": {"login": "devonhollowood", "id": 7864326, "node_id": "MDQ6VXNlcjc4NjQzMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/7864326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devonhollowood", "html_url": "https://github.com/devonhollowood", "followers_url": "https://api.github.com/users/devonhollowood/followers", "following_url": "https://api.github.com/users/devonhollowood/following{/other_user}", "gists_url": "https://api.github.com/users/devonhollowood/gists{/gist_id}", "starred_url": "https://api.github.com/users/devonhollowood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devonhollowood/subscriptions", "organizations_url": "https://api.github.com/users/devonhollowood/orgs", "repos_url": "https://api.github.com/users/devonhollowood/repos", "events_url": "https://api.github.com/users/devonhollowood/events{/privacy}", "received_events_url": "https://api.github.com/users/devonhollowood/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6bc6823258b3ce1a675f9ed4e80ff3268c82e97", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6bc6823258b3ce1a675f9ed4e80ff3268c82e97", "html_url": "https://github.com/rust-lang/rust/commit/c6bc6823258b3ce1a675f9ed4e80ff3268c82e97"}], "stats": {"total": 91, "additions": 33, "deletions": 58}, "files": [{"sha": "1edeb30560ce035f7e76331b3c7b224d1a1f9533", "filename": "clippy_lints/src/deprecated_lints.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b77d74030b193c5d188d2191ece074b0898a3996/clippy_lints%2Fsrc%2Fdeprecated_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b77d74030b193c5d188d2191ece074b0898a3996/clippy_lints%2Fsrc%2Fdeprecated_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdeprecated_lints.rs?ref=b77d74030b193c5d188d2191ece074b0898a3996", "patch": "@@ -71,3 +71,14 @@ declare_deprecated_lint! {\n     pub STRING_TO_STRING,\n     \"using `string::to_string` is common even today and specialization will likely happen soon\"\n }\n+\n+/// **What it does:** Nothing. This lint has been deprecated.\n+///\n+/// **Deprecation reason:** This lint should never have applied to non-pointer types, as transmuting\n+/// between non-pointer types of differing alignment is well-defined behavior (it's semantically\n+/// equivalent to a memcpy). This lint has thus been refactored into two separate lints:\n+/// cast_ptr_alignment and transmute_ptr_to_ptr.\n+declare_deprecated_lint! {\n+    pub MISALIGNED_TRANSMUTE,\n+    \"this lint has been split into cast_ptr_alignment and transmute_ptr_to_ptr\"\n+}"}, {"sha": "190d65be86e9b16c6d3159f4cab715569877de67", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b77d74030b193c5d188d2191ece074b0898a3996/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b77d74030b193c5d188d2191ece074b0898a3996/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=b77d74030b193c5d188d2191ece074b0898a3996", "patch": "@@ -277,6 +277,10 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         \"string_to_string\",\n         \"using `string::to_string` is common even today and specialization will likely happen soon\",\n     );\n+    store.register_removed(\n+        \"misaligned_transmute\",\n+        \"this lint has been split into cast_ptr_alignment and transmute_ptr_to_ptr\",\n+    );\n     // end deprecated lints, do not remove this comment, it\u2019s used in `update_lints`\n \n     reg.register_late_lint_pass(box serde_api::Serde);\n@@ -635,7 +639,6 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         swap::MANUAL_SWAP,\n         temporary_assignment::TEMPORARY_ASSIGNMENT,\n         transmute::CROSSPOINTER_TRANSMUTE,\n-        transmute::MISALIGNED_TRANSMUTE,\n         transmute::TRANSMUTE_BYTES_TO_STR,\n         transmute::TRANSMUTE_INT_TO_BOOL,\n         transmute::TRANSMUTE_INT_TO_CHAR,\n@@ -787,7 +790,6 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         swap::MANUAL_SWAP,\n         temporary_assignment::TEMPORARY_ASSIGNMENT,\n         transmute::CROSSPOINTER_TRANSMUTE,\n-        transmute::MISALIGNED_TRANSMUTE,\n         transmute::TRANSMUTE_BYTES_TO_STR,\n         transmute::TRANSMUTE_INT_TO_BOOL,\n         transmute::TRANSMUTE_INT_TO_CHAR,"}, {"sha": "68321e7bd5e3c86760e816019cc15a5c3a376873", "filename": "clippy_lints/src/transmute.rs", "status": "modified", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/b77d74030b193c5d188d2191ece074b0898a3996/clippy_lints%2Fsrc%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b77d74030b193c5d188d2191ece074b0898a3996/clippy_lints%2Fsrc%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute.rs?ref=b77d74030b193c5d188d2191ece074b0898a3996", "patch": "@@ -1,7 +1,6 @@\n use rustc::lint::*;\n use rustc::ty::{self, Ty};\n use rustc::hir::*;\n-use rustc::ty::layout::LayoutOf;\n use std::borrow::Cow;\n use syntax::ast;\n use utils::{last_path_segment, match_def_path, paths, snippet, span_lint, span_lint_and_then};\n@@ -169,23 +168,6 @@ declare_clippy_lint! {\n     \"transmutes from an integer to a float\"\n }\n \n-/// **What it does:** Checks for transmutes to a potentially less-aligned type.\n-///\n-/// **Why is this bad?** This might result in undefined behavior.\n-///\n-/// **Known problems:** None.\n-///\n-/// **Example:**\n-/// ```rust\n-/// // u32 is 32-bit aligned; u8 is 8-bit aligned\n-/// let _: u32 = unsafe { std::mem::transmute([0u8; 4]) };\n-/// ```\n-declare_clippy_lint! {\n-    pub MISALIGNED_TRANSMUTE,\n-    complexity,\n-    \"transmutes to a potentially less-aligned type\"\n-}\n-\n /// **What it does:** Checks for transmutes from a pointer to a pointer, or\n /// from a reference to a reference.\n ///\n@@ -227,7 +209,6 @@ impl LintPass for Transmute {\n             TRANSMUTE_BYTES_TO_STR,\n             TRANSMUTE_INT_TO_BOOL,\n             TRANSMUTE_INT_TO_FLOAT,\n-            MISALIGNED_TRANSMUTE\n         )\n     }\n }\n@@ -248,18 +229,6 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Transmute {\n                                 e.span,\n                                 &format!(\"transmute from a type (`{}`) to itself\", from_ty),\n                             ),\n-                            _ if cx.layout_of(from_ty).ok().map(|a| a.align.abi())\n-                                < cx.layout_of(to_ty).ok().map(|a| a.align.abi())\n-                                => span_lint(\n-                                    cx,\n-                                    MISALIGNED_TRANSMUTE,\n-                                    e.span,\n-                                    &format!(\n-                                        \"transmute from `{}` to a less-aligned type (`{}`)\",\n-                                        from_ty,\n-                                        to_ty,\n-                                    )\n-                            ),\n                             (&ty::TyRef(_, rty), &ty::TyRawPtr(ptr_ty)) => span_lint_and_then(\n                                 cx,\n                                 USELESS_TRANSMUTE,"}, {"sha": "f456c4172237b59df0711de46ff03a9d8bb7f556", "filename": "tests/ui/deprecated.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b77d74030b193c5d188d2191ece074b0898a3996/tests%2Fui%2Fdeprecated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b77d74030b193c5d188d2191ece074b0898a3996/tests%2Fui%2Fdeprecated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdeprecated.rs?ref=b77d74030b193c5d188d2191ece074b0898a3996", "patch": "@@ -9,4 +9,6 @@\n \n #[warn(unstable_as_mut_slice)]\n \n+#[warn(misaligned_transmute)]\n+\n fn main() {}"}, {"sha": "aa62ccbd0e52602d25ad9633a54a4360229e8190", "filename": "tests/ui/deprecated.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b77d74030b193c5d188d2191ece074b0898a3996/tests%2Fui%2Fdeprecated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b77d74030b193c5d188d2191ece074b0898a3996/tests%2Fui%2Fdeprecated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdeprecated.stderr?ref=b77d74030b193c5d188d2191ece074b0898a3996", "patch": "@@ -24,5 +24,11 @@ error: lint unstable_as_mut_slice has been removed: `Vec::as_mut_slice` has been\n 10 | #[warn(unstable_as_mut_slice)]\n    |        ^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 4 previous errors\n+error: lint misaligned_transmute has been removed: this lint has been split into cast_ptr_alignment and transmute_ptr_to_ptr\n+  --> $DIR/deprecated.rs:12:8\n+   |\n+12 | #[warn(misaligned_transmute)]\n+   |        ^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 5 previous errors\n "}, {"sha": "7c5e3f03d13b4f938d1bc8ae673921f1bc6e64ba", "filename": "tests/ui/transmute.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b77d74030b193c5d188d2191ece074b0898a3996/tests%2Fui%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b77d74030b193c5d188d2191ece074b0898a3996/tests%2Fui%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute.rs?ref=b77d74030b193c5d188d2191ece074b0898a3996", "patch": "@@ -140,13 +140,6 @@ fn bytes_to_str(b: &[u8], mb: &mut [u8]) {\n     let _: &mut str = unsafe { std::mem::transmute(mb) };\n }\n \n-#[warn(misaligned_transmute)]\n-fn misaligned_transmute() {\n-    let _: u32 = unsafe { std::mem::transmute([0u8; 4]) }; // err\n-    let _: u32 = unsafe { std::mem::transmute(0f32) }; // ok (alignment-wise)\n-    let _: [u8; 4] = unsafe { std::mem::transmute(0u32) }; // ok (alignment-wise)\n-}\n-\n #[warn(transmute_ptr_to_ptr)]\n fn transmute_ptr_to_ptr() {\n     let ptr = &1u32 as *const u32;"}, {"sha": "a343a8a9cb5bb34a3eace40377a20c02af9e00fa", "filename": "tests/ui/transmute.stderr", "status": "modified", "additions": 9, "deletions": 17, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/b77d74030b193c5d188d2191ece074b0898a3996/tests%2Fui%2Ftransmute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b77d74030b193c5d188d2191ece074b0898a3996/tests%2Fui%2Ftransmute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute.stderr?ref=b77d74030b193c5d188d2191ece074b0898a3996", "patch": "@@ -204,39 +204,31 @@ error: transmute from a `&mut [u8]` to a `&mut str`\n 140 |     let _: &mut str = unsafe { std::mem::transmute(mb) };\n     |                                ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::str::from_utf8_mut(mb).unwrap()`\n \n-error: transmute from `[u8; 4]` to a less-aligned type (`u32`)\n-   --> $DIR/transmute.rs:145:27\n-    |\n-145 |     let _: u32 = unsafe { std::mem::transmute([0u8; 4]) }; // err\n-    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-    |\n-    = note: `-D misaligned-transmute` implied by `-D warnings`\n-\n error: transmute from a pointer to a pointer\n-   --> $DIR/transmute.rs:156:29\n+   --> $DIR/transmute.rs:149:29\n     |\n-156 |         let _: *const f32 = std::mem::transmute(ptr);\n+149 |         let _: *const f32 = std::mem::transmute(ptr);\n     |                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `ptr as *const f32`\n     |\n     = note: `-D transmute-ptr-to-ptr` implied by `-D warnings`\n \n error: transmute from a pointer to a pointer\n-   --> $DIR/transmute.rs:157:27\n+   --> $DIR/transmute.rs:150:27\n     |\n-157 |         let _: *mut f32 = std::mem::transmute(mut_ptr);\n+150 |         let _: *mut f32 = std::mem::transmute(mut_ptr);\n     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `mut_ptr as *mut f32`\n \n error: transmute from a reference to a reference\n-   --> $DIR/transmute.rs:159:23\n+   --> $DIR/transmute.rs:152:23\n     |\n-159 |         let _: &f32 = std::mem::transmute(&1u32);\n+152 |         let _: &f32 = std::mem::transmute(&1u32);\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*(&1u32 as *const u32 as *const f32)`\n \n error: transmute from a reference to a reference\n-   --> $DIR/transmute.rs:160:27\n+   --> $DIR/transmute.rs:153:27\n     |\n-160 |         let _: &mut f32 = std::mem::transmute(&mut 1u32);\n+153 |         let _: &mut f32 = std::mem::transmute(&mut 1u32);\n     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&mut *(&mut 1u32 as *mut u32 as *mut f32)`\n \n-error: aborting due to 37 previous errors\n+error: aborting due to 36 previous errors\n "}]}