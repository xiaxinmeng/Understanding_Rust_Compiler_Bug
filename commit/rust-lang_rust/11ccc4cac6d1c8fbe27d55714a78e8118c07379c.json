{"sha": "11ccc4cac6d1c8fbe27d55714a78e8118c07379c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExY2NjNGNhYzZkMWM4ZmJlMjdkNTU3MTRhNzhlODExOGMwNzM3OWM=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-03-26T18:10:05Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-03-27T23:27:58Z"}, "message": "Make LazyTokenStream thread-safe", "tree": {"sha": "3515bcd132f61ae4c713a4c1c1af73b37ab2cdf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3515bcd132f61ae4c713a4c1c1af73b37ab2cdf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11ccc4cac6d1c8fbe27d55714a78e8118c07379c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11ccc4cac6d1c8fbe27d55714a78e8118c07379c", "html_url": "https://github.com/rust-lang/rust/commit/11ccc4cac6d1c8fbe27d55714a78e8118c07379c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11ccc4cac6d1c8fbe27d55714a78e8118c07379c/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "html_url": "https://github.com/rust-lang/rust/commit/ab8b961677ac5c74762dcea955aa0ff4d7fe4915"}], "stats": {"total": 21, "additions": 6, "deletions": 15}, "files": [{"sha": "2c30ac9ba35230421fb77092418288748927b1e6", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 6, "deletions": 15, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/11ccc4cac6d1c8fbe27d55714a78e8118c07379c/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11ccc4cac6d1c8fbe27d55714a78e8118c07379c/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=11ccc4cac6d1c8fbe27d55714a78e8118c07379c", "patch": "@@ -25,9 +25,8 @@ use syntax_pos::{self, Span, FileName};\n use tokenstream::{TokenStream, TokenTree};\n use tokenstream;\n \n-use std::cell::Cell;\n use std::{cmp, fmt};\n-use rustc_data_structures::sync::Lrc;\n+use rustc_data_structures::sync::{Lrc, Lock};\n \n #[derive(Clone, RustcEncodable, RustcDecodable, PartialEq, Eq, Hash, Debug, Copy)]\n pub enum BinOpToken {\n@@ -614,15 +613,8 @@ pub fn is_op(tok: &Token) -> bool {\n     }\n }\n \n-pub struct LazyTokenStream(Cell<Option<TokenStream>>);\n-\n-impl Clone for LazyTokenStream {\n-    fn clone(&self) -> Self {\n-        let opt_stream = self.0.take();\n-        self.0.set(opt_stream.clone());\n-        LazyTokenStream(Cell::new(opt_stream))\n-    }\n-}\n+#[derive(Clone)]\n+pub struct LazyTokenStream(Lock<Option<TokenStream>>);\n \n impl cmp::Eq for LazyTokenStream {}\n impl PartialEq for LazyTokenStream {\n@@ -639,15 +631,14 @@ impl fmt::Debug for LazyTokenStream {\n \n impl LazyTokenStream {\n     pub fn new() -> Self {\n-        LazyTokenStream(Cell::new(None))\n+        LazyTokenStream(Lock::new(None))\n     }\n \n     pub fn force<F: FnOnce() -> TokenStream>(&self, f: F) -> TokenStream {\n-        let mut opt_stream = self.0.take();\n+        let mut opt_stream = self.0.lock();\n         if opt_stream.is_none() {\n-            opt_stream = Some(f());\n+            *opt_stream = Some(f());\n         }\n-        self.0.set(opt_stream.clone());\n         opt_stream.clone().unwrap()\n     }\n }"}]}