{"sha": "8d81aa1991a92bc23c8629f1ef79b9c5dc13ff93", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkODFhYTE5OTFhOTJiYzIzYzg2MjlmMWVmNzliOWM1ZGMxM2ZmOTM=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-09-01T07:36:00Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-09-01T19:59:54Z"}, "message": "Support where clauses on the same line as the function decl where it all fits on one line.", "tree": {"sha": "e9f53c96fbc59eeead1095d90f8a5e0b6d23b130", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9f53c96fbc59eeead1095d90f8a5e0b6d23b130"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d81aa1991a92bc23c8629f1ef79b9c5dc13ff93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d81aa1991a92bc23c8629f1ef79b9c5dc13ff93", "html_url": "https://github.com/rust-lang/rust/commit/8d81aa1991a92bc23c8629f1ef79b9c5dc13ff93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d81aa1991a92bc23c8629f1ef79b9c5dc13ff93/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6216dce14e92007d8943b11f37879683fc31f2a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6216dce14e92007d8943b11f37879683fc31f2a2", "html_url": "https://github.com/rust-lang/rust/commit/6216dce14e92007d8943b11f37879683fc31f2a2"}], "stats": {"total": 58, "additions": 52, "deletions": 6}, "files": [{"sha": "457c2eb2adfc3e1ac183d42ec0376711d7d9fd30", "filename": "src/config.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8d81aa1991a92bc23c8629f1ef79b9c5dc13ff93/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d81aa1991a92bc23c8629f1ef79b9c5dc13ff93/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=8d81aa1991a92bc23c8629f1ef79b9c5dc13ff93", "patch": "@@ -91,6 +91,8 @@ create_config! {\n     fn_args_paren_newline: bool,\n     fn_args_layout: Density,\n     fn_arg_indent: BlockIndentStyle,\n+    where_density: Density, // Should we at least try to put the where clause on the same line as\n+                            // the rest of the function decl?\n     where_indent: BlockIndentStyle, // Visual will be treated like Tabbed\n     where_layout: ListTactic,\n     where_pred_indent: BlockIndentStyle,\n@@ -121,6 +123,7 @@ impl Default for Config {\n             fn_args_paren_newline: true,\n             fn_args_layout: Density::Tall,\n             fn_arg_indent: BlockIndentStyle::Visual,\n+            where_density: Density::Tall,\n             where_indent: BlockIndentStyle::Tabbed,\n             where_layout: ListTactic::Vertical,\n             where_pred_indent: BlockIndentStyle::Visual,"}, {"sha": "cc431792c102665efe3fee7e9574e469e97b1ee7", "filename": "src/items.rs", "status": "modified", "additions": 27, "deletions": 6, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/8d81aa1991a92bc23c8629f1ef79b9c5dc13ff93/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d81aa1991a92bc23c8629f1ef79b9c5dc13ff93/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=8d81aa1991a92bc23c8629f1ef79b9c5dc13ff93", "patch": "@@ -18,7 +18,7 @@ use expr::rewrite_assign_rhs;\n use comment::FindUncommented;\n use visitor::FmtVisitor;\n use rewrite::Rewrite;\n-use config::{Config, BlockIndentStyle};\n+use config::{Config, BlockIndentStyle, Density};\n \n use syntax::{ast, abi};\n use syntax::codemap::{self, Span, BytePos};\n@@ -99,7 +99,7 @@ impl<'a> FmtVisitor<'a> {\n                       vis: ast::Visibility,\n                       span: Span)\n                       -> String {\n-        let newline_brace = self.newline_for_brace(&generics.where_clause);\n+        let mut newline_brace = self.newline_for_brace(&generics.where_clause);\n \n         let mut result = self.rewrite_fn_base(indent,\n                                               ident,\n@@ -113,6 +113,10 @@ impl<'a> FmtVisitor<'a> {\n                                               span,\n                                               newline_brace);\n \n+        if self.config.fn_brace_style != BraceStyle::AlwaysNextLine && !result.contains('\\n') {\n+            newline_brace = false;\n+        }\n+\n         // Prepare for the function body by possibly adding a newline and\n         // indent.\n         // FIXME we'll miss anything between the end of the signature and the\n@@ -281,10 +285,18 @@ impl<'a> FmtVisitor<'a> {\n             }\n         }\n \n+        let where_density = if self.config.where_density == Density::Compressed &&\n+                               !result.contains('\\n') {\n+            Density::Compressed\n+        } else {\n+            Density::Tall\n+        };\n+\n         // Where clause.\n         result.push_str(&self.rewrite_where_clause(where_clause,\n                                                    self.config,\n                                                    indent,\n+                                                   where_density,\n                                                    span.hi));\n \n         result\n@@ -682,6 +694,7 @@ impl<'a> FmtVisitor<'a> {\n             result.push_str(&self.rewrite_where_clause(&generics.where_clause,\n                                                        self.config,\n                                                        self.block_indent,\n+                                                       Density::Tall,\n                                                        span.hi));\n             result.push_str(&make_indent(self.block_indent));\n             result.push('\\n');\n@@ -794,6 +807,7 @@ impl<'a> FmtVisitor<'a> {\n                             where_clause: &ast::WhereClause,\n                             config: &Config,\n                             indent: usize,\n+                            density: Density,\n                             span_end: BytePos)\n                             -> String {\n         if where_clause.predicates.is_empty() {\n@@ -839,10 +853,17 @@ impl<'a> FmtVisitor<'a> {\n             v_width: budget,\n             ends_with_newline: true,\n         };\n-\n-        format!(\"\\n{}where {}\",\n-                make_indent(indent + extra_indent),\n-                write_list(&items.collect::<Vec<_>>(), &fmt))\n+        let preds_str = write_list(&items.collect::<Vec<_>>(), &fmt);\n+\n+        // 9 = \" where \".len() + \" {\".len()\n+        if density == Density::Tall || preds_str.contains('\\n') ||\n+           indent + 9 + preds_str.len() > self.config.max_width {\n+            format!(\"\\n{}where {}\",\n+                    make_indent(indent + extra_indent),\n+                    preds_str)\n+        } else {\n+            format!(\" where {}\", preds_str)\n+        }\n     }\n \n     fn rewrite_return(&self, ret: &ast::FunctionRetTy) -> String {"}, {"sha": "146ceb2a62c74d60f54bb01a79397eec894d4117", "filename": "tests/config/small_tabs.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8d81aa1991a92bc23c8629f1ef79b9c5dc13ff93/tests%2Fconfig%2Fsmall_tabs.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8d81aa1991a92bc23c8629f1ef79b9c5dc13ff93/tests%2Fconfig%2Fsmall_tabs.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fconfig%2Fsmall_tabs.toml?ref=8d81aa1991a92bc23c8629f1ef79b9c5dc13ff93", "patch": "@@ -8,6 +8,7 @@ fn_return_indent = \"WithArgs\"\n fn_args_paren_newline = true\n fn_args_layout = \"Tall\"\n fn_arg_indent = \"Visual\"\n+where_density = \"Tall\"\n where_indent = \"Tabbed\"\n where_layout = \"Vertical\"\n where_pred_indent = \"Visual\""}, {"sha": "7b3e4c4a163ebe921c6da35194baa48c4993777e", "filename": "tests/source/fn-custom-4.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8d81aa1991a92bc23c8629f1ef79b9c5dc13ff93/tests%2Fsource%2Ffn-custom-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d81aa1991a92bc23c8629f1ef79b9c5dc13ff93/tests%2Fsource%2Ffn-custom-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn-custom-4.rs?ref=8d81aa1991a92bc23c8629f1ef79b9c5dc13ff93", "patch": "@@ -1,6 +1,15 @@\n // rustfmt-where_pred_indent: Tabbed\n+// rustfmt-where_density: Compressed\n // Test different indents.\n \n fn qux() where X: TTTTTTTTTTTTTTTTTTTTTTTTTTTT, X: TTTTTTTTTTTTTTTTTTTTTTTTTTTT, X: TTTTTTTTTTTTTTTTTTTTTTTTTTTT, X: TTTTTTTTTTTTTTTTTTTTTTTTTTTT {\n     baz();\n }\n+\n+fn qux() where X: TTTTTTTTTTTTTTTTTTTTTTTTTTTT {\n+    baz();\n+}\n+\n+fn qux(a: Aaaaaaaaaaaaaaaaa) where X: TTTTTTTTTTTTTTTTTTTTTTTTTTTT, X: TTTTTTTTTTTTTTTTTTTTTTTTTTTT {\n+    baz();\n+}"}, {"sha": "70ec49f34bcb6e5340604639ff715d7c42d96e58", "filename": "tests/target/fn-custom-4.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8d81aa1991a92bc23c8629f1ef79b9c5dc13ff93/tests%2Ftarget%2Ffn-custom-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d81aa1991a92bc23c8629f1ef79b9c5dc13ff93/tests%2Ftarget%2Ffn-custom-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-custom-4.rs?ref=8d81aa1991a92bc23c8629f1ef79b9c5dc13ff93", "patch": "@@ -1,4 +1,5 @@\n // rustfmt-where_pred_indent: Tabbed\n+// rustfmt-where_density: Compressed\n // Test different indents.\n \n fn qux()\n@@ -9,3 +10,14 @@ fn qux()\n {\n     baz();\n }\n+\n+fn qux() where X: TTTTTTTTTTTTTTTTTTTTTTTTTTTT {\n+    baz();\n+}\n+\n+fn qux(a: Aaaaaaaaaaaaaaaaa)\n+    where X: TTTTTTTTTTTTTTTTTTTTTTTTTTTT,\n+        X: TTTTTTTTTTTTTTTTTTTTTTTTTTTT\n+{\n+    baz();\n+}"}]}