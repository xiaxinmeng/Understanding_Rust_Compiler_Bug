{"sha": "b8ef8539a6fb2ba9bbeeade460a08928abd6cc1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4ZWY4NTM5YTZmYjJiYTliYmVlYWRlNDYwYTA4OTI4YWJkNmNjMWI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-03T15:19:00Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-03T15:19:00Z"}, "message": "Fix workspace reloading", "tree": {"sha": "8c917fb2a9f2595405f5eaaf6b1640e61ce09d33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c917fb2a9f2595405f5eaaf6b1640e61ce09d33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8ef8539a6fb2ba9bbeeade460a08928abd6cc1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8ef8539a6fb2ba9bbeeade460a08928abd6cc1b", "html_url": "https://github.com/rust-lang/rust/commit/b8ef8539a6fb2ba9bbeeade460a08928abd6cc1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8ef8539a6fb2ba9bbeeade460a08928abd6cc1b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5a4a4b46e706697abe4bd136503ecc09aa23b61", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5a4a4b46e706697abe4bd136503ecc09aa23b61", "html_url": "https://github.com/rust-lang/rust/commit/f5a4a4b46e706697abe4bd136503ecc09aa23b61"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "0c7c36716819f554bf8eb37e8e21dda2ed9d5b29", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b8ef8539a6fb2ba9bbeeade460a08928abd6cc1b/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8ef8539a6fb2ba9bbeeade460a08928abd6cc1b/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=b8ef8539a6fb2ba9bbeeade460a08928abd6cc1b", "patch": "@@ -9,14 +9,15 @@\n \n use std::{ffi::OsString, path::PathBuf};\n \n-use crate::diagnostics::DiagnosticsConfig;\n use flycheck::FlycheckConfig;\n use lsp_types::ClientCapabilities;\n use ra_db::AbsPathBuf;\n use ra_ide::{AssistConfig, CompletionConfig, HoverConfig, InlayHintsConfig};\n use ra_project_model::{CargoConfig, ProjectJson, ProjectJsonData, ProjectManifest};\n use serde::Deserialize;\n \n+use crate::diagnostics::DiagnosticsConfig;\n+\n #[derive(Debug, Clone)]\n pub struct Config {\n     pub client_caps: ClientCapsConfig,\n@@ -182,8 +183,10 @@ impl Config {\n         log::info!(\"Config::update({:#})\", value);\n \n         let client_caps = self.client_caps.clone();\n+        let linked_projects = self.linked_projects.clone();\n         *self = Config::new(self.root_path.clone());\n         self.client_caps = client_caps;\n+        self.linked_projects = linked_projects;\n \n         set(value, \"/withSysroot\", &mut self.with_sysroot);\n         set(value, \"/diagnostics/enable\", &mut self.publish_diagnostics);"}]}