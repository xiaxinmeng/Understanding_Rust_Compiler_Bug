{"sha": "d4da75892219ee8fed5fc8801a37ffe82520083d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0ZGE3NTg5MjIxOWVlOGZlZDVmYzg4MDFhMzdmZmU4MjUyMDA4M2Q=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2014-12-27T10:43:14Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2014-12-27T10:43:14Z"}, "message": "Use -Z unstable-options for span debugger", "tree": {"sha": "f199e349c9efb1f6db56083b1e41924aa88efbeb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f199e349c9efb1f6db56083b1e41924aa88efbeb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4da75892219ee8fed5fc8801a37ffe82520083d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4da75892219ee8fed5fc8801a37ffe82520083d", "html_url": "https://github.com/rust-lang/rust/commit/d4da75892219ee8fed5fc8801a37ffe82520083d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4da75892219ee8fed5fc8801a37ffe82520083d/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9554794d22840b5077aa4605fa49a587d3e018b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/9554794d22840b5077aa4605fa49a587d3e018b6", "html_url": "https://github.com/rust-lang/rust/commit/9554794d22840b5077aa4605fa49a587d3e018b6"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "61676407991fc40d1f263d1f3d9955fef92b1328", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d4da75892219ee8fed5fc8801a37ffe82520083d/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4da75892219ee8fed5fc8801a37ffe82520083d/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=d4da75892219ee8fed5fc8801a37ffe82520083d", "patch": "@@ -105,6 +105,7 @@ pub struct Options {\n     pub prints: Vec<PrintRequest>,\n     pub cg: CodegenOptions,\n     pub color: ColorConfig,\n+    pub show_span: Option<String>,\n     pub externs: HashMap<String, Vec<String>>,\n     pub crate_name: Option<String>,\n     /// An optional name to use as the crate for std during std injection,\n@@ -211,6 +212,7 @@ pub fn basic_options() -> Options {\n         prints: Vec::new(),\n         cg: basic_codegen_options(),\n         color: Auto,\n+        show_span: None,\n         externs: HashMap::new(),\n         crate_name: None,\n         alt_std_name: None,\n@@ -259,7 +261,6 @@ debugging_opts! {\n         BORROWCK_STATS,\n         NO_LANDING_PADS,\n         DEBUG_LLVM,\n-        SHOW_SPAN,\n         COUNT_TYPE_SIZES,\n         META_STATS,\n         GC,\n@@ -298,7 +299,6 @@ pub fn debugging_opts_map() -> Vec<(&'static str, &'static str, u64)> {\n      (\"no-landing-pads\", \"omit landing pads for unwinding\",\n       NO_LANDING_PADS),\n      (\"debug-llvm\", \"enable debug output from LLVM\", DEBUG_LLVM),\n-     (\"show-span\", \"show spans for compiler debugging\", SHOW_SPAN),\n      (\"count-type-sizes\", \"count the sizes of aggregate types\",\n       COUNT_TYPE_SIZES),\n      (\"meta-stats\", \"gather metadata statistics\", META_STATS),\n@@ -820,6 +820,7 @@ pub fn rustc_optgroups() -> Vec<RustcOptGroup> {\n                       `flowgraph=<nodeid>` (graphviz formatted flowgraph for node), or\n                       `everybody_loops` (all function bodies replaced with `loop {}`).\",\n                      \"TYPE\"),\n+        opt::opt_u(\"\", \"show-span\", \"Show spans for compiler debugging\", \"expr|pat|ty\"),\n         opt::flagopt(\"\", \"dep-info\",\n                  \"Output dependency info to <filename> after compiling, \\\n                   in a format suitable for use by Makefiles\", \"FILENAME\"),\n@@ -1122,6 +1123,7 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n         prints: prints,\n         cg: cg,\n         color: color,\n+        show_span: None,\n         externs: externs,\n         crate_name: crate_name,\n         alt_std_name: None,"}, {"sha": "9a6275401adc81e22b662bc80eabd9559d5e5d41", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d4da75892219ee8fed5fc8801a37ffe82520083d/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4da75892219ee8fed5fc8801a37ffe82520083d/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=d4da75892219ee8fed5fc8801a37ffe82520083d", "patch": "@@ -199,9 +199,6 @@ impl Session {\n     pub fn no_landing_pads(&self) -> bool {\n         self.debugging_opt(config::NO_LANDING_PADS)\n     }\n-    pub fn show_span(&self) -> bool {\n-        self.debugging_opt(config::SHOW_SPAN)\n-    }\n     pub fn unstable_options(&self) -> bool {\n         self.debugging_opt(config::UNSTABLE_OPTIONS)\n     }"}, {"sha": "69e439c1bbe27a4d45a8ca16644f142cc60a8217", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d4da75892219ee8fed5fc8801a37ffe82520083d/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4da75892219ee8fed5fc8801a37ffe82520083d/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=d4da75892219ee8fed5fc8801a37ffe82520083d", "patch": "@@ -138,7 +138,7 @@ pub fn phase_1_parse_input(sess: &Session, cfg: ast::CrateConfig, input: &Input)\n         krate.encode(&mut json).unwrap();\n     }\n \n-    if sess.show_span() {\n+    if sess.opts.show_span.is_some() {\n         syntax::show_span::run(sess.diagnostic(), &krate);\n     }\n \n@@ -542,7 +542,7 @@ pub fn stop_after_phase_1(sess: &Session) -> bool {\n         debug!(\"invoked with --parse-only, returning early from compile_input\");\n         return true;\n     }\n-    if sess.show_span() {\n+    if sess.opts.show_span.is_some() {\n         return true;\n     }\n     return sess.opts.debugging_opts & config::AST_JSON_NOEXPAND != 0;"}, {"sha": "98d2b5eb67d3cdf4b854e10681125cf027e31b89", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d4da75892219ee8fed5fc8801a37ffe82520083d/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4da75892219ee8fed5fc8801a37ffe82520083d/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=d4da75892219ee8fed5fc8801a37ffe82520083d", "patch": "@@ -132,7 +132,7 @@ fn run_compiler(args: &[String]) {\n         _ => early_error(\"multiple input filenames provided\")\n     };\n \n-    let sess = build_session(sopts, input_file_path, descriptions);\n+    let mut sess = build_session(sopts, input_file_path, descriptions);\n     let cfg = config::build_configuration(&sess);\n     if print_crate_info(&sess, Some(&input), &odir, &ofile) {\n         return\n@@ -160,6 +160,10 @@ fn run_compiler(args: &[String]) {\n         None => {/* continue */ }\n     }\n \n+    if sess.unstable_options() {\n+        sess.opts.show_span = matches.opt_str(\"show-span\");\n+    }\n+\n     let r = matches.opt_strs(\"Z\");\n     if r.contains(&(\"ls\".to_string())) {\n         match input {"}]}