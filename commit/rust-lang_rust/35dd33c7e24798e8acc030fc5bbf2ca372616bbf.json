{"sha": "35dd33c7e24798e8acc030fc5bbf2ca372616bbf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1ZGQzM2M3ZTI0Nzk4ZThhY2MwMzBmYzViYmYyY2EzNzI2MTZiYmY=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2014-12-29T01:33:46Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2014-12-29T05:20:38Z"}, "message": "Fix glob shadowing bug with re-exports", "tree": {"sha": "e591abe7b42a0e2c913ea67cefa4ee80d0de989f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e591abe7b42a0e2c913ea67cefa4ee80d0de989f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35dd33c7e24798e8acc030fc5bbf2ca372616bbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35dd33c7e24798e8acc030fc5bbf2ca372616bbf", "html_url": "https://github.com/rust-lang/rust/commit/35dd33c7e24798e8acc030fc5bbf2ca372616bbf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35dd33c7e24798e8acc030fc5bbf2ca372616bbf/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a58808785499d730aaa0b1c914b34c204d2a487", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a58808785499d730aaa0b1c914b34c204d2a487", "html_url": "https://github.com/rust-lang/rust/commit/9a58808785499d730aaa0b1c914b34c204d2a487"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "d42725d19ba92b5ba0d5454009c63683f20c2de5", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/35dd33c7e24798e8acc030fc5bbf2ca372616bbf/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35dd33c7e24798e8acc030fc5bbf2ca372616bbf/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=35dd33c7e24798e8acc030fc5bbf2ca372616bbf", "patch": "@@ -2866,6 +2866,10 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n                             // Continue.\n                         }\n                         Some(ref value_target) => {\n+                            self.check_for_conflicting_import(&dest_import_resolution.value_target,\n+                                                              import_directive.span,\n+                                                              *ident,\n+                                                              ValueNS);\n                             dest_import_resolution.value_target = Some(value_target.clone());\n                         }\n                     }\n@@ -2874,6 +2878,10 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n                             // Continue.\n                         }\n                         Some(ref type_target) => {\n+                            self.check_for_conflicting_import(&dest_import_resolution.type_target,\n+                                                              import_directive.span,\n+                                                              *ident,\n+                                                              TypeNS);\n                             dest_import_resolution.type_target = Some(type_target.clone());\n                         }\n                     }"}]}