{"sha": "955c054ab15dcaef4931e732f7a9d77df8797baf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1NWMwNTRhYjE1ZGNhZWY0OTMxZTczMmY3YTlkNzdkZjg3OTdiYWY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-11-17T20:59:06Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-11-17T21:33:02Z"}, "message": "Fix primitive types not showing up", "tree": {"sha": "ffc7ae0d8d5eecbf48a8712f38dbdcf561ca8c85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ffc7ae0d8d5eecbf48a8712f38dbdcf561ca8c85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/955c054ab15dcaef4931e732f7a9d77df8797baf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/955c054ab15dcaef4931e732f7a9d77df8797baf", "html_url": "https://github.com/rust-lang/rust/commit/955c054ab15dcaef4931e732f7a9d77df8797baf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/955c054ab15dcaef4931e732f7a9d77df8797baf/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aabfed5e0c84211005c1cb2ecec2206a574a5146", "url": "https://api.github.com/repos/rust-lang/rust/commits/aabfed5e0c84211005c1cb2ecec2206a574a5146", "html_url": "https://github.com/rust-lang/rust/commit/aabfed5e0c84211005c1cb2ecec2206a574a5146"}], "stats": {"total": 88, "additions": 43, "deletions": 45}, "files": [{"sha": "632f6aa662558b383810b291fd9ae4a692611c98", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 43, "deletions": 45, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/955c054ab15dcaef4931e732f7a9d77df8797baf/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/955c054ab15dcaef4931e732f7a9d77df8797baf/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=955c054ab15dcaef4931e732f7a9d77df8797baf", "patch": "@@ -381,13 +381,6 @@\n                 }\n             }\n \n-            function min(a, b) {\n-                if (a < b) {\n-                    return a;\n-                }\n-                return b;\n-            }\n-\n             function extractGenerics(val) {\n                 val = val.toLowerCase();\n                 if (val.indexOf('<') !== -1) {\n@@ -425,7 +418,7 @@\n                             }\n                             if (lev.pos !== -1) {\n                                 elems.splice(lev.pos, 1);\n-                                lev_distance = min(lev.lev, lev_distance);\n+                                lev_distance = Math.min(lev.lev, lev_distance);\n                             } else {\n                                 return MAX_LEV_DISTANCE + 1;\n                             }\n@@ -488,11 +481,12 @@\n                 var new_lev = levenshtein(obj.name, val.name);\n                 if (new_lev < lev_distance) {\n                     if ((lev = checkGenerics(obj, val)) <= MAX_LEV_DISTANCE) {\n-                        lev_distance = min(min(new_lev, lev), lev_distance);\n+                        lev_distance = Math.min(Math.min(new_lev, lev), lev_distance);\n                     }\n                 } else if (obj.generics && obj.generics.length > 0) {\n                     for (var x = 0; x < obj.generics.length; ++x) {\n-                        lev_distance = min(levenshtein(obj.generics[x], val.name), lev_distance);\n+                        lev_distance = Math.min(levenshtein(obj.generics[x], val.name),\n+                                                lev_distance);\n                     }\n                 }\n                 // Now whatever happens, the returned distance is \"less good\" so we should mark it\n@@ -509,7 +503,7 @@\n                         if (literalSearch === true && tmp === true) {\n                             return true;\n                         }\n-                        lev_distance = min(tmp, lev_distance);\n+                        lev_distance = Math.min(tmp, lev_distance);\n                         if (lev_distance === 0) {\n                             return 0;\n                         }\n@@ -526,7 +520,7 @@\n                     if (literalSearch === true && tmp === true) {\n                         return true;\n                     }\n-                    lev_distance = min(tmp, lev_distance);\n+                    lev_distance = Math.min(tmp, lev_distance);\n                     if (lev_distance === 0) {\n                         return 0;\n                     }\n@@ -567,18 +561,20 @@\n                     var in_args = findArg(searchIndex[i], val, true);\n                     var returned = checkReturned(searchIndex[i], val, true);\n                     var ty = searchIndex[i];\n+                    var fullId = itemTypes[ty.ty] + ty.path + ty.name;\n+\n                     if (searchWords[i] === val.name) {\n                         // filter type: ... queries\n                         if (typePassesFilter(typeFilter, searchIndex[i].ty) &&\n-                            results[ty.path + ty.name] === undefined)\n+                            results[fullId] === undefined)\n                         {\n-                            results[ty.path + ty.name] = {id: i, index: -1};\n+                            results[fullId] = {id: i, index: -1};\n                             results_length += 1;\n                         }\n                     } else if ((in_args === true || returned === true) &&\n                                typePassesFilter(typeFilter, searchIndex[i].ty)) {\n-                        if (results[ty.path + ty.name] === undefined) {\n-                            results[ty.path + ty.name] = {\n+                        if (results[fullId] === undefined) {\n+                            results[fullId] = {\n                                 id: i,\n                                 index: -1,\n                                 dontValidate: true,\n@@ -588,10 +584,10 @@\n                             results_length += 1;\n                         } else {\n                             if (in_args === true) {\n-                                results[ty.path + ty.name].in_args = true;\n+                                results[fullId].in_args = true;\n                             }\n                             if (returned === true) {\n-                                results[ty.path + ty.name].returned = true;\n+                                results[fullId].returned = true;\n                             }\n                         }\n                     }\n@@ -620,6 +616,7 @@\n                     if (!type) {\n                         continue;\n                     }\n+                    var fullId = itemTypes[ty.ty] + ty.path + ty.name;\n \n                     // allow searching for void (no output) functions as well\n                     var typeOutput = type.output ? type.output.name : \"\";\n@@ -638,15 +635,15 @@\n                             in_args = allFound;\n                         }\n                         if (in_args === true || returned === true || module === true) {\n-                            if (results[ty.path + ty.name] !== undefined) {\n+                            if (results[fullId] !== undefined) {\n                                 if (returned === true) {\n-                                    results[ty.path + ty.name].returned = true;\n+                                    results[fullId].returned = true;\n                                 }\n                                 if (in_args === true) {\n-                                    results[ty.path + ty.name].in_args = true;\n+                                    results[fullId].in_args = true;\n                                 }\n                             } else {\n-                                results[ty.path + ty.name] = {\n+                                results[fullId] = {\n                                     id: i,\n                                     index: -1,\n                                     dontValidate: true,\n@@ -681,48 +678,49 @@\n                         var index = -1;\n                         // we want lev results to go lower than others\n                         var lev = MAX_LEV_DISTANCE;\n+                        var fullId = itemTypes[ty.ty] + ty.path + ty.name;\n \n                         if (searchWords[j].indexOf(split[i]) > -1 ||\n                             searchWords[j].indexOf(val) > -1 ||\n                             searchWords[j].replace(/_/g, \"\").indexOf(val) > -1)\n                         {\n                             // filter type: ... queries\n-                            if (typePassesFilter(typeFilter, searchIndex[j].ty) &&\n-                                results[ty.path + ty.name] === undefined) {\n+                            if (typePassesFilter(typeFilter, ty) &&\n+                                results[fullId] === undefined) {\n                                 index = searchWords[j].replace(/_/g, \"\").indexOf(val);\n                             }\n                         }\n                         if ((lev_distance = levenshtein(searchWords[j], val)) <= MAX_LEV_DISTANCE) {\n-                            if (typePassesFilter(typeFilter, searchIndex[j].ty) &&\n-                                (results[ty.path + ty.name] === undefined ||\n-                                 results[ty.path + ty.name].lev > lev_distance)) {\n-                                lev = min(lev, lev_distance);\n-                                index = 0;\n+                            if (typePassesFilter(typeFilter, ty) &&\n+                                (results[fullId] === undefined ||\n+                                 results[fullId].lev > lev_distance)) {\n+                                lev = Math.min(lev, lev_distance);\n+                                index = Math.max(0, index);\n                             }\n                         }\n                         if ((lev_distance = findArg(searchIndex[j], valGenerics))\n                             <= MAX_LEV_DISTANCE) {\n-                            if (typePassesFilter(typeFilter, searchIndex[j].ty) &&\n-                                (results[ty.path + ty.name] === undefined ||\n-                                 results[ty.path + ty.name].lev > lev_distance)) {\n+                            if (typePassesFilter(typeFilter, ty) &&\n+                                (results[fullId] === undefined ||\n+                                 results[fullId].lev > lev_distance)) {\n                                 in_args = true;\n-                                lev = min(lev_distance, lev);\n-                                index = 0;\n+                                lev = Math.min(lev_distance, lev);\n+                                index = Math.max(0, index);\n                             }\n                         }\n                         if ((lev_distance = checkReturned(searchIndex[j], valGenerics)) <=\n                             MAX_LEV_DISTANCE) {\n-                            if (typePassesFilter(typeFilter, searchIndex[j].ty) &&\n-                                (results[ty.path + ty.name] === undefined ||\n-                                 results[ty.path + ty.name].lev > lev_distance)) {\n+                            if (typePassesFilter(typeFilter, ty) &&\n+                                (results[fullId] === undefined ||\n+                                 results[fullId].lev > lev_distance)) {\n                                 returned = true;\n-                                lev = min(lev_distance, lev);\n-                                index = 0;\n+                                lev = Math.min(lev_distance, lev);\n+                                index = Math.max(0, index);\n                             }\n                         }\n                         if (index !== -1) {\n-                            if (results[ty.path + ty.name] === undefined) {\n-                                results[ty.path + ty.name] = {\n+                            if (results[fullId] === undefined) {\n+                                results[fullId] = {\n                                     id: j,\n                                     index: index,\n                                     lev: lev,\n@@ -731,14 +729,14 @@\n                                 };\n                                 results_length += 1;\n                             } else {\n-                                if (results[ty.path + ty.name].lev > lev) {\n-                                    results[ty.path + ty.name].lev = lev;\n+                                if (results[fullId].lev > lev) {\n+                                    results[fullId].lev = lev;\n                                 }\n                                 if (in_args === true) {\n-                                    results[ty.path + ty.name].in_args = true;\n+                                    results[fullId].in_args = true;\n                                 }\n                                 if (returned === true) {\n-                                    results[ty.path + ty.name].returned = true;\n+                                    results[fullId].returned = true;\n                                 }\n                             }\n                         }"}]}