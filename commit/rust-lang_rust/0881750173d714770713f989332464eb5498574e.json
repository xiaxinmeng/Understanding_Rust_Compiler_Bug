{"sha": "0881750173d714770713f989332464eb5498574e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4ODE3NTAxNzNkNzE0NzcwNzEzZjk4OTMzMjQ2NGViNTQ5ODU3NGU=", "commit": {"author": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2019-11-26T14:53:54Z"}, "committer": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2019-11-26T14:53:54Z"}, "message": "Move tests to ui, split them and add some", "tree": {"sha": "7766ce2dbb7e3a9a4908052455ae68187049ce5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7766ce2dbb7e3a9a4908052455ae68187049ce5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0881750173d714770713f989332464eb5498574e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0881750173d714770713f989332464eb5498574e", "html_url": "https://github.com/rust-lang/rust/commit/0881750173d714770713f989332464eb5498574e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0881750173d714770713f989332464eb5498574e/comments", "author": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdc844e81f186c62e9368a24e3b8edba1ef6143b", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdc844e81f186c62e9368a24e3b8edba1ef6143b", "html_url": "https://github.com/rust-lang/rust/commit/cdc844e81f186c62e9368a24e3b8edba1ef6143b"}], "stats": {"total": 210, "additions": 192, "deletions": 18}, "files": [{"sha": "d7c191bb5a28d38b1d8159b3c53139239e75e446", "filename": "src/test/ui/or-patterns/exhaustiveness-non-exhaustive.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/0881750173d714770713f989332464eb5498574e/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-non-exhaustive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0881750173d714770713f989332464eb5498574e/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-non-exhaustive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-non-exhaustive.rs?ref=0881750173d714770713f989332464eb5498574e", "patch": "@@ -0,0 +1,26 @@\n+#![feature(or_patterns)]\n+#![feature(slice_patterns)]\n+#![allow(incomplete_features)]\n+#![deny(unreachable_patterns)]\n+\n+// We wrap patterns in a tuple because top-level or-patterns are special-cased for now.\n+fn main() {\n+    // Get the fatal error out of the way\n+    match (0u8,) {\n+        (0 | _,) => {}\n+        //~^ ERROR or-patterns are not fully implemented yet\n+    }\n+\n+    match (0u8, 0u8) {\n+        //~^ ERROR non-exhaustive patterns: `(2u8..=std::u8::MAX, _)`\n+        (0 | 1, 2 | 3) => {}\n+    }\n+    match ((0u8,),) {\n+        //~^ ERROR non-exhaustive patterns: `((4u8..=std::u8::MAX))`\n+        ((0 | 1,) | (2 | 3,),) => {},\n+    }\n+    match (Some(0u8),) {\n+        //~^ ERROR non-exhaustive patterns: `(Some(2u8..=std::u8::MAX))`\n+        (None | Some(0 | 1),) => {}\n+    }\n+}"}, {"sha": "e6aa157d278c824279745efd2bf103af8003f506", "filename": "src/test/ui/or-patterns/exhaustiveness-non-exhaustive.stderr", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/0881750173d714770713f989332464eb5498574e/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-non-exhaustive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0881750173d714770713f989332464eb5498574e/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-non-exhaustive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-non-exhaustive.stderr?ref=0881750173d714770713f989332464eb5498574e", "patch": "@@ -0,0 +1,33 @@\n+error[E0004]: non-exhaustive patterns: `(2u8..=std::u8::MAX, _)` not covered\n+  --> $DIR/exhaustiveness-non-exhaustive.rs:14:11\n+   |\n+LL |     match (0u8, 0u8) {\n+   |           ^^^^^^^^^^ pattern `(2u8..=std::u8::MAX, _)` not covered\n+   |\n+   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n+\n+error[E0004]: non-exhaustive patterns: `((4u8..=std::u8::MAX))` not covered\n+  --> $DIR/exhaustiveness-non-exhaustive.rs:18:11\n+   |\n+LL |     match ((0u8,),) {\n+   |           ^^^^^^^^^ pattern `((4u8..=std::u8::MAX))` not covered\n+   |\n+   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n+\n+error[E0004]: non-exhaustive patterns: `(Some(2u8..=std::u8::MAX))` not covered\n+  --> $DIR/exhaustiveness-non-exhaustive.rs:22:11\n+   |\n+LL |     match (Some(0u8),) {\n+   |           ^^^^^^^^^^^^ pattern `(Some(2u8..=std::u8::MAX))` not covered\n+   |\n+   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n+\n+error: or-patterns are not fully implemented yet\n+  --> $DIR/exhaustiveness-non-exhaustive.rs:10:10\n+   |\n+LL |         (0 | _,) => {}\n+   |          ^^^^^\n+\n+error: aborting due to 4 previous errors\n+\n+For more information about this error, try `rustc --explain E0004`."}, {"sha": "a29cc7253ad583563f784f60d455bad2bdb64b8d", "filename": "src/test/ui/or-patterns/exhaustiveness-pass.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/0881750173d714770713f989332464eb5498574e/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0881750173d714770713f989332464eb5498574e/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-pass.rs?ref=0881750173d714770713f989332464eb5498574e", "patch": "@@ -0,0 +1,40 @@\n+#![feature(or_patterns)]\n+#![feature(slice_patterns)]\n+#![allow(incomplete_features)]\n+#![deny(unreachable_patterns)]\n+\n+// We wrap patterns in a tuple because top-level or-patterns are special-cased for now.\n+fn main() {\n+    // Get the fatal error out of the way\n+    match (0u8,) {\n+        (0 | _,) => {}\n+        //~^ ERROR or-patterns are not fully implemented yet\n+    }\n+\n+    match (0u8,) {\n+        (1 | 2,) => {}\n+        _ => {}\n+    }\n+\n+    match (0u8,) {\n+        (1 | 1,) => {} // redundancy not detected for now\n+        _ => {}\n+    }\n+    match (0u8, 0u8) {\n+        (1 | 2, 3 | 4) => {}\n+        (1, 2) => {}\n+        (2, 1) => {}\n+        _ => {}\n+    }\n+    match (Some(0u8),) {\n+        (None | Some(0 | 1),) => {}\n+        (Some(2..=255),) => {}\n+    }\n+    match ((0u8,),) {\n+        ((0 | 1,) | (2 | 3,),) => {},\n+        ((_,),) => {},\n+    }\n+    match (&[0u8][..],) {\n+        ([] | [0 | 1..=255] | [_, ..],) => {},\n+    }\n+}"}, {"sha": "1f4278c4b8098c2070287ff91ba86f1d05341659", "filename": "src/test/ui/or-patterns/exhaustiveness-pass.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0881750173d714770713f989332464eb5498574e/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-pass.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0881750173d714770713f989332464eb5498574e/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-pass.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-pass.stderr?ref=0881750173d714770713f989332464eb5498574e", "patch": "@@ -0,0 +1,8 @@\n+error: or-patterns are not fully implemented yet\n+  --> $DIR/exhaustiveness-pass.rs:10:10\n+   |\n+LL |         (0 | _,) => {}\n+   |          ^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "2cd8ca2dbac626449fc60db47dadb431cbb6c5e2", "filename": "src/test/ui/or-patterns/exhaustiveness-unreachable-pattern.rs", "status": "renamed", "additions": 5, "deletions": 18, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/0881750173d714770713f989332464eb5498574e/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0881750173d714770713f989332464eb5498574e/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.rs?ref=0881750173d714770713f989332464eb5498574e", "patch": "@@ -3,20 +3,14 @@\n #![allow(incomplete_features)]\n #![deny(unreachable_patterns)]\n \n+// We wrap patterns in a tuple because top-level or-patterns are special-cased for now.\n fn main() {\n-    // We wrap patterns in a tuple because top-level or-patterns are special-cased for now.\n-\n     // Get the fatal error out of the way\n     match (0u8,) {\n         (0 | _,) => {}\n         //~^ ERROR or-patterns are not fully implemented yet\n     }\n \n-    match (0u8,) {\n-        (1 | 2,) => {}\n-        _ => {}\n-    }\n-\n     match (0u8,) {\n         (1 | 2,) => {}\n         (1,) => {} //~ ERROR unreachable pattern\n@@ -33,32 +27,25 @@ fn main() {\n         (1 | 2,) => {} //~ ERROR unreachable pattern\n         _ => {}\n     }\n-    match (0u8,) {\n-        (1 | 1,) => {} // redundancy not detected for now\n-        _ => {}\n-    }\n     match (0u8, 0u8) {\n         (1 | 2, 3 | 4) => {}\n-        (1, 2) => {}\n         (1, 3) => {} //~ ERROR unreachable pattern\n         (1, 4) => {} //~ ERROR unreachable pattern\n         (2, 4) => {} //~ ERROR unreachable pattern\n         (2 | 1, 4) => {} //~ ERROR unreachable pattern\n+        (1, 5 | 6) => {}\n+        (1, 4 | 5) => {} //~ ERROR unreachable pattern\n         _ => {}\n     }\n     match (Some(0u8),) {\n         (None | Some(1 | 2),) => {}\n         (Some(1),) => {} //~ ERROR unreachable pattern\n         (None,) => {} //~ ERROR unreachable pattern\n-        (Some(_),) => {}\n+        _ => {}\n     }\n     match ((0u8,),) {\n         ((1 | 2,) | (3 | 4,),) => {},\n         ((1..=4,),) => {}, //~ ERROR unreachable pattern\n-        ((_,),) => {},\n-    }\n-    match (&[0u8][..],) {\n-        ([] | [0 | 1..=255] | [_, ..],) => {},\n-        (_,) => {}, //~ ERROR unreachable pattern\n+        _ => {},\n     }\n }", "previous_filename": "src/test/compile-fail/or-patterns.rs"}, {"sha": "a4d55d805c3c621ed8c22167380ad1babe99ab3a", "filename": "src/test/ui/or-patterns/exhaustiveness-unreachable-pattern.stderr", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/0881750173d714770713f989332464eb5498574e/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0881750173d714770713f989332464eb5498574e/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.stderr?ref=0881750173d714770713f989332464eb5498574e", "patch": "@@ -0,0 +1,80 @@\n+error: unreachable pattern\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:16:9\n+   |\n+LL |         (1,) => {}\n+   |         ^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:4:9\n+   |\n+LL | #![deny(unreachable_patterns)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:21:9\n+   |\n+LL |         (2,) => {}\n+   |         ^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:27:9\n+   |\n+LL |         (1 | 2,) => {}\n+   |         ^^^^^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:32:9\n+   |\n+LL |         (1, 3) => {}\n+   |         ^^^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:33:9\n+   |\n+LL |         (1, 4) => {}\n+   |         ^^^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:34:9\n+   |\n+LL |         (2, 4) => {}\n+   |         ^^^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:35:9\n+   |\n+LL |         (2 | 1, 4) => {}\n+   |         ^^^^^^^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:37:9\n+   |\n+LL |         (1, 4 | 5) => {}\n+   |         ^^^^^^^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:42:9\n+   |\n+LL |         (Some(1),) => {}\n+   |         ^^^^^^^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:43:9\n+   |\n+LL |         (None,) => {}\n+   |         ^^^^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:48:9\n+   |\n+LL |         ((1..=4,),) => {},\n+   |         ^^^^^^^^^^^\n+\n+error: or-patterns are not fully implemented yet\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:10:10\n+   |\n+LL |         (0 | _,) => {}\n+   |          ^^^^^\n+\n+error: aborting due to 12 previous errors\n+"}]}