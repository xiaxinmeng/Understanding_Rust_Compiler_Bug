{"sha": "d394aa064e54943fcf3e1c73007e4b17a13328ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzOTRhYTA2NGU1NDk0M2ZjZjNlMWM3MzAwN2U0YjE3YTEzMzI4Y2E=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-05-09T19:50:20Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-05-09T21:59:20Z"}, "message": "Rollup merge of #33224 - alexcrichton:create-exit-status, r=aturon\n\nstd: Allow creating ExitStatus from raw values\n\nSometimes a process may be waited on externally from the standard library, in\nwhich case it can be useful to create a raw `ExitStatus` structure to return.\nThis commit extends the existing Unix `ExitStatusExt` extension trait and adds a\nnew Windows-specific `ExitStatusExt` extension trait to do this. The methods are\ncurrently called `ExitStatus::from_raw`.\n\ncc #32713", "tree": {"sha": "3692b59628ee281458df6b44b6cb661ca8c51f61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3692b59628ee281458df6b44b6cb661ca8c51f61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d394aa064e54943fcf3e1c73007e4b17a13328ca", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXMQg4AAoJEDu/TT4u95+YbzIQAOSGJPfJOoVQrBEaoFCjaoC6\nw9UAP+7iVXUMX6dKN2g8eoOkn8wWDcvrMhBjqLacOlmBDfjQLYpe5YAYqlzWqiqW\n2MNRITiaMWASdRsfTAoPLfdRnCXNorQ2Ak11Odx/t/72PoyP0ZDoko5NrZ9IgRMT\nFrZ6xUyDs+E9sP8iTFLlcw1OAGb7OVTQi2Rcjyw/zkf8tvsQfBnXj1eCrWpGVSmI\nk4KJeavCuBiSBaB18HzZRvXM7BkiBq7fnRYsvlDfctvJGBzvLFwMEOp2Urpt/Ini\nd/GArR0DBBvzRVYEqiL4d8hoLIN8wI64prxPAKdrJbw/cyZns0u6ih4OipsM2A1Q\nB2OnQ/RiFrdtI8GD4+HOtuxUAuEH6kAzu8fRSoJEpADly8+tXeOSsYV9k76ykZO5\nwFj1qVzeE7fh0Od4cMvnnuBq3co8wGSNSqYRpGy7Y96X6ngxozZtCOjCYQrMQGTt\ny9bPZv6ItFhHF1gr5UC7PUFYuCyNs9R7tLfPTbUAT79tpEDx4J0lebcN/AlILUDl\noh9y/xMfooudt4vw5ln03qDYJ4XTG9plFG9CQIS9A6JjmvROtuVWiDsr7DhsculQ\n1AHAeMPglRfhXzFJrdjGuCWN+UamZavVQaf2ZEIlcien2DaEaRu12GsM/UhKSHMR\ntGh+BxWWxXO96/8rSj6t\n=5FMr\n-----END PGP SIGNATURE-----", "payload": "tree 3692b59628ee281458df6b44b6cb661ca8c51f61\nparent faca79fc332f62b339aee5bd994b00e52d9ac051\nparent 7f09b1f6a64339370440025d50d0ad4a7f239734\nauthor Manish Goregaokar <manishsmail@gmail.com> 1462823420 -0700\ncommitter Manish Goregaokar <manishsmail@gmail.com> 1462831160 -0700\n\nRollup merge of #33224 - alexcrichton:create-exit-status, r=aturon\n\nstd: Allow creating ExitStatus from raw values\n\nSometimes a process may be waited on externally from the standard library, in\nwhich case it can be useful to create a raw `ExitStatus` structure to return.\nThis commit extends the existing Unix `ExitStatusExt` extension trait and adds a\nnew Windows-specific `ExitStatusExt` extension trait to do this. The methods are\ncurrently called `ExitStatus::from_raw`.\n\ncc #32713\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d394aa064e54943fcf3e1c73007e4b17a13328ca", "html_url": "https://github.com/rust-lang/rust/commit/d394aa064e54943fcf3e1c73007e4b17a13328ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d394aa064e54943fcf3e1c73007e4b17a13328ca/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "faca79fc332f62b339aee5bd994b00e52d9ac051", "url": "https://api.github.com/repos/rust-lang/rust/commits/faca79fc332f62b339aee5bd994b00e52d9ac051", "html_url": "https://github.com/rust-lang/rust/commit/faca79fc332f62b339aee5bd994b00e52d9ac051"}, {"sha": "7f09b1f6a64339370440025d50d0ad4a7f239734", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f09b1f6a64339370440025d50d0ad4a7f239734", "html_url": "https://github.com/rust-lang/rust/commit/7f09b1f6a64339370440025d50d0ad4a7f239734"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "1b6f6c3e875c98f12267fd362054b326d32046b3", "filename": "src/libstd/process.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d394aa064e54943fcf3e1c73007e4b17a13328ca/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d394aa064e54943fcf3e1c73007e4b17a13328ca/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=d394aa064e54943fcf3e1c73007e4b17a13328ca", "patch": "@@ -605,6 +605,12 @@ impl AsInner<imp::ExitStatus> for ExitStatus {\n     fn as_inner(&self) -> &imp::ExitStatus { &self.0 }\n }\n \n+impl FromInner<imp::ExitStatus> for ExitStatus {\n+    fn from_inner(s: imp::ExitStatus) -> ExitStatus {\n+        ExitStatus(s)\n+    }\n+}\n+\n #[stable(feature = \"process\", since = \"1.0.0\")]\n impl fmt::Display for ExitStatus {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {"}, {"sha": "b0fed2f4694bfcd4163fc53509e1ab9e0de9d225", "filename": "src/libstd/sys/unix/ext/process.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d394aa064e54943fcf3e1c73007e4b17a13328ca/src%2Flibstd%2Fsys%2Funix%2Fext%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d394aa064e54943fcf3e1c73007e4b17a13328ca/src%2Flibstd%2Fsys%2Funix%2Fext%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fprocess.rs?ref=d394aa064e54943fcf3e1c73007e4b17a13328ca", "patch": "@@ -132,13 +132,22 @@ impl CommandExt for process::Command {\n /// Unix-specific extensions to `std::process::ExitStatus`\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait ExitStatusExt {\n+    /// Creates a new `ExitStatus` from the raw underlying `i32` return value of\n+    /// a process.\n+    #[unstable(feature = \"exit_status_from\", issue = \"32713\")]\n+    fn from_raw(raw: i32) -> Self;\n+\n     /// If the process was terminated by a signal, returns that signal.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn signal(&self) -> Option<i32>;\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl ExitStatusExt for process::ExitStatus {\n+    fn from_raw(raw: i32) -> Self {\n+        process::ExitStatus::from_inner(From::from(raw))\n+    }\n+\n     fn signal(&self) -> Option<i32> {\n         self.as_inner().signal()\n     }"}, {"sha": "d57191675426455a6856527dad9aab8e5e9e4dce", "filename": "src/libstd/sys/unix/process.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d394aa064e54943fcf3e1c73007e4b17a13328ca/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d394aa064e54943fcf3e1c73007e4b17a13328ca/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs?ref=d394aa064e54943fcf3e1c73007e4b17a13328ca", "patch": "@@ -550,6 +550,12 @@ impl ExitStatus {\n     }\n }\n \n+impl From<c_int> for ExitStatus {\n+    fn from(a: c_int) -> ExitStatus {\n+        ExitStatus(a)\n+    }\n+}\n+\n impl fmt::Display for ExitStatus {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         if let Some(code) = self.code() {"}, {"sha": "56c6a73d4f82b768760c058e88ae44ebae40c7ea", "filename": "src/libstd/sys/windows/ext/process.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d394aa064e54943fcf3e1c73007e4b17a13328ca/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d394aa064e54943fcf3e1c73007e4b17a13328ca/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Fprocess.rs?ref=d394aa064e54943fcf3e1c73007e4b17a13328ca", "patch": "@@ -81,3 +81,18 @@ impl IntoRawHandle for process::ChildStderr {\n         self.into_inner().into_handle().into_raw() as *mut _\n     }\n }\n+\n+/// Windows-specific extensions to `std::process::ExitStatus`\n+#[unstable(feature = \"exit_status_from\", issue = \"32713\")]\n+pub trait ExitStatusExt {\n+    /// Creates a new `ExitStatus` from the raw underlying `u32` return value of\n+    /// a process.\n+    fn from_raw(raw: u32) -> Self;\n+}\n+\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl ExitStatusExt for process::ExitStatus {\n+    fn from_raw(raw: u32) -> Self {\n+        process::ExitStatus::from_inner(From::from(raw))\n+    }\n+}"}, {"sha": "a0ad866c69d413b8b77097ef274d0acf68b4445c", "filename": "src/libstd/sys/windows/process.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d394aa064e54943fcf3e1c73007e4b17a13328ca/src%2Flibstd%2Fsys%2Fwindows%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d394aa064e54943fcf3e1c73007e4b17a13328ca/src%2Flibstd%2Fsys%2Fwindows%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fprocess.rs?ref=d394aa064e54943fcf3e1c73007e4b17a13328ca", "patch": "@@ -337,6 +337,12 @@ impl ExitStatus {\n     }\n }\n \n+impl From<c::DWORD> for ExitStatus {\n+    fn from(u: c::DWORD) -> ExitStatus {\n+        ExitStatus(u)\n+    }\n+}\n+\n impl fmt::Display for ExitStatus {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         write!(f, \"exit code: {}\", self.0)"}]}