{"sha": "153ed09fb3a0e7ed8d42749720e8a0b4fac50d74", "node_id": "C_kwDOAAsO6NoAKDE1M2VkMDlmYjNhMGU3ZWQ4ZDQyNzQ5NzIwZThhMGI0ZmFjNTBkNzQ", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2023-01-06T19:21:47Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2023-01-30T20:12:21Z"}, "message": "Tweak use of trimmed paths", "tree": {"sha": "27ebdb0d446b0d3718c83ce08eb8dab909e88eba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27ebdb0d446b0d3718c83ce08eb8dab909e88eba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74", "html_url": "https://github.com/rust-lang/rust/commit/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab8dc9a0adedcee75a217ea0d60709fe38269768", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab8dc9a0adedcee75a217ea0d60709fe38269768", "html_url": "https://github.com/rust-lang/rust/commit/ab8dc9a0adedcee75a217ea0d60709fe38269768"}], "stats": {"total": 113, "additions": 69, "deletions": 44}, "files": [{"sha": "54890489f8b8f7c08132d62469a04ccd46b4b3e5", "filename": "compiler/rustc_hir_typeck/src/method/suggest.rs", "status": "modified", "additions": 29, "deletions": 7, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fsuggest.rs?ref=153ed09fb3a0e7ed8d42749720e8a0b4fac50d74", "patch": "@@ -259,7 +259,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         let mode = no_match_data.mode;\n         let tcx = self.tcx;\n         let rcvr_ty = self.resolve_vars_if_possible(rcvr_ty);\n-        let ty_str = with_forced_trimmed_paths!(self.ty_to_string(rcvr_ty));\n+        let (ty_str, ty_file) = tcx.short_ty_string(rcvr_ty);\n+        let short_ty_str = with_forced_trimmed_paths!(rcvr_ty.to_string());\n         let is_method = mode == Mode::MethodCall;\n         let unsatisfied_predicates = &no_match_data.unsatisfied_predicates;\n         let similar_candidate = no_match_data.similar_candidate;\n@@ -276,11 +277,24 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             }\n         };\n \n-        if self.suggest_wrapping_range_with_parens(tcx, rcvr_ty, source, span, item_name, &ty_str)\n-            || self.suggest_constraining_numerical_ty(\n-                tcx, rcvr_ty, source, span, item_kind, item_name, &ty_str,\n-            )\n-        {\n+        // We could pass the file for long types into these two, but it isn't strictly necessary\n+        // given how targetted they are.\n+        if self.suggest_wrapping_range_with_parens(\n+            tcx,\n+            rcvr_ty,\n+            source,\n+            span,\n+            item_name,\n+            &short_ty_str,\n+        ) || self.suggest_constraining_numerical_ty(\n+            tcx,\n+            rcvr_ty,\n+            source,\n+            span,\n+            item_kind,\n+            item_name,\n+            &short_ty_str,\n+        ) {\n             return None;\n         }\n         span = item_name.span;\n@@ -319,6 +333,14 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             rcvr_ty.prefix_string(self.tcx),\n             ty_str_reported,\n         );\n+        let ty_str = if short_ty_str.len() < ty_str.len() && ty_str.len() > 10 {\n+            short_ty_str\n+        } else {\n+            ty_str\n+        };\n+        if let Some(file) = ty_file {\n+            err.note(&format!(\"the full type name has been written to '{}'\", file.display(),));\n+        }\n         if rcvr_ty.references_error() {\n             err.downgrade_to_delayed_bug();\n         }\n@@ -826,7 +848,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 let primary_message = primary_message.unwrap_or_else(|| {\n                     format!(\n                         \"the {item_kind} `{item_name}` exists for {actual_prefix} `{ty_str}`, \\\n-                    but its trait bounds were not satisfied\"\n+                         but its trait bounds were not satisfied\"\n                     )\n                 });\n                 err.set_primary_message(&primary_message);"}, {"sha": "ab1a9511ec6c7e041488a8c94fa362278b6341d6", "filename": "tests/ui/associated-types/issue-43924.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fassociated-types%2Fissue-43924.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fassociated-types%2Fissue-43924.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-types%2Fissue-43924.stderr?ref=153ed09fb3a0e7ed8d42749720e8a0b4fac50d74", "patch": "@@ -10,7 +10,7 @@ note: required by a bound in `Foo::Out`\n LL |     type Out: Default + ToString + ?Sized = dyn ToString;\n    |               ^^^^^^^ required by this bound in `Foo::Out`\n \n-error[E0599]: no function or associated item named `default` found for trait object `dyn ToString` in the current scope\n+error[E0599]: no function or associated item named `default` found for trait object `(dyn ToString + 'static)` in the current scope\n   --> $DIR/issue-43924.rs:14:39\n    |\n LL |     assert_eq!(<() as Foo<u32>>::Out::default().to_string(), \"false\");"}, {"sha": "34debb6831734568330e7b6d8ccfaa32ae753e3f", "filename": "tests/ui/confuse-field-and-method/issue-33784.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fconfuse-field-and-method%2Fissue-33784.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fconfuse-field-and-method%2Fissue-33784.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconfuse-field-and-method%2Fissue-33784.stderr?ref=153ed09fb3a0e7ed8d42749720e8a0b4fac50d74", "patch": "@@ -1,4 +1,4 @@\n-error[E0599]: no method named `closure` found for reference `&Obj<[closure@issue-33784.rs:25:43]>` in the current scope\n+error[E0599]: no method named `closure` found for reference `&Obj<[closure@$DIR/issue-33784.rs:25:43: 25:45]>` in the current scope\n   --> $DIR/issue-33784.rs:27:7\n    |\n LL |     p.closure();\n@@ -9,7 +9,7 @@ help: to call the function stored in `closure`, surround the field access with p\n LL |     (p.closure)();\n    |     +         +\n \n-error[E0599]: no method named `fn_ptr` found for reference `&&Obj<[closure@issue-33784.rs:25:43]>` in the current scope\n+error[E0599]: no method named `fn_ptr` found for reference `&&Obj<[closure@$DIR/issue-33784.rs:25:43: 25:45]>` in the current scope\n   --> $DIR/issue-33784.rs:29:7\n    |\n LL |     q.fn_ptr();"}, {"sha": "4604ebeaa8b987f8b01cd1a75b9a1d5349dadab9", "filename": "tests/ui/empty/empty-struct-braces-expr.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fempty%2Fempty-struct-braces-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fempty%2Fempty-struct-braces-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty%2Fempty-struct-braces-expr.stderr?ref=153ed09fb3a0e7ed8d42749720e8a0b4fac50d74", "patch": "@@ -100,7 +100,7 @@ help: a unit struct with a similar name exists\n LL |     let xe1 = XEmpty2();\n    |               ~~~~~~~\n \n-error[E0599]: no variant or associated item named `Empty3` found for enum `XE` in the current scope\n+error[E0599]: no variant or associated item named `Empty3` found for enum `empty_struct::XE` in the current scope\n   --> $DIR/empty-struct-braces-expr.rs:25:19\n    |\n LL |     let xe3 = XE::Empty3;\n@@ -109,7 +109,7 @@ LL |     let xe3 = XE::Empty3;\n    |                   variant or associated item not found in `XE`\n    |                   help: there is a variant with a similar name: `XEmpty3`\n \n-error[E0599]: no variant or associated item named `Empty3` found for enum `XE` in the current scope\n+error[E0599]: no variant or associated item named `Empty3` found for enum `empty_struct::XE` in the current scope\n   --> $DIR/empty-struct-braces-expr.rs:26:19\n    |\n LL |     let xe3 = XE::Empty3();"}, {"sha": "da081eb435584455f42eaba2abf7e3d8d0e726c5", "filename": "tests/ui/functions-closures/fn-help-with-err.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Ffunctions-closures%2Ffn-help-with-err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Ffunctions-closures%2Ffn-help-with-err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffunctions-closures%2Ffn-help-with-err.stderr?ref=153ed09fb3a0e7ed8d42749720e8a0b4fac50d74", "patch": "@@ -4,7 +4,7 @@ error[E0425]: cannot find value `oops` in this scope\n LL |     let arc = std::sync::Arc::new(oops);\n    |                                   ^^^^ not found in this scope\n \n-error[E0599]: no method named `bar` found for struct `Arc<[closure@fn-help-with-err.rs:18:36]>` in the current scope\n+error[E0599]: no method named `bar` found for struct `Arc<[closure@$DIR/fn-help-with-err.rs:18:36: 18:38]>` in the current scope\n   --> $DIR/fn-help-with-err.rs:19:10\n    |\n LL |     arc2.bar();"}, {"sha": "4a6399c8f62468da8df6562ddcabec733ae10557", "filename": "tests/ui/higher-rank-trait-bounds/issue-30786.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fhigher-rank-trait-bounds%2Fissue-30786.rs", "raw_url": "https://github.com/rust-lang/rust/raw/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fhigher-rank-trait-bounds%2Fissue-30786.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fhigher-rank-trait-bounds%2Fissue-30786.rs?ref=153ed09fb3a0e7ed8d42749720e8a0b4fac50d74", "patch": "@@ -1,3 +1,5 @@\n+// normalize-stderr-test: \"long-type-\\d+\" -> \"long-type-hash\"\n+\n // rust-lang/rust#30786: the use of `for<'b> &'b mut A: Stream<Item=T`\n // should act as assertion that item does not borrow from its stream;\n // but an earlier buggy rustc allowed `.map(|x: &_| x)` which does"}, {"sha": "6ec34d11a7e9ea8e78ff4c73b6d326bcc07f1407", "filename": "tests/ui/higher-rank-trait-bounds/issue-30786.stderr", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fhigher-rank-trait-bounds%2Fissue-30786.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fhigher-rank-trait-bounds%2Fissue-30786.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fhigher-rank-trait-bounds%2Fissue-30786.stderr?ref=153ed09fb3a0e7ed8d42749720e8a0b4fac50d74", "patch": "@@ -1,5 +1,5 @@\n-error[E0599]: the method `filterx` exists for struct `Map<Repeat, [closure@issue-30786.rs:117:27]>`, but its trait bounds were not satisfied\n-  --> $DIR/issue-30786.rs:118:22\n+error[E0599]: the method `filterx` exists for struct `Map<Repeat, [closure@issue-30786.rs:119:27]>`, but its trait bounds were not satisfied\n+  --> $DIR/issue-30786.rs:120:22\n    |\n LL | pub struct Map<S, F> {\n    | --------------------\n@@ -8,19 +8,19 @@ LL | pub struct Map<S, F> {\n    | doesn't satisfy `_: StreamExt`\n ...\n LL |     let filter = map.filterx(|x: &_| true);\n-   |                      ^^^^^^^ method cannot be called on `Map<Repeat, [closure@issue-30786.rs:117:27]>` due to unsatisfied trait bounds\n+   |                      ^^^^^^^ method cannot be called on `Map<Repeat, [closure@issue-30786.rs:119:27]>` due to unsatisfied trait bounds\n    |\n note: the following trait bounds were not satisfied:\n-      `&'a mut &Map<Repeat, [closure@$DIR/issue-30786.rs:117:27: 117:34]>: Stream`\n-      `&'a mut &mut Map<Repeat, [closure@$DIR/issue-30786.rs:117:27: 117:34]>: Stream`\n-      `&'a mut Map<Repeat, [closure@$DIR/issue-30786.rs:117:27: 117:34]>: Stream`\n-  --> $DIR/issue-30786.rs:96:50\n+      `&'a mut &Map<Repeat, [closure@$DIR/issue-30786.rs:119:27: 119:34]>: Stream`\n+      `&'a mut &mut Map<Repeat, [closure@$DIR/issue-30786.rs:119:27: 119:34]>: Stream`\n+      `&'a mut Map<Repeat, [closure@$DIR/issue-30786.rs:119:27: 119:34]>: Stream`\n+  --> $DIR/issue-30786.rs:98:50\n    |\n LL | impl<T> StreamExt for T where for<'a> &'a mut T: Stream {}\n    |         ---------     -                          ^^^^^^ unsatisfied trait bound introduced here\n \n-error[E0599]: the method `countx` exists for struct `Filter<Map<Repeat, fn(&u64) -> &u64 {identity::<u64>}>, [closure@issue-30786.rs:129:30]>`, but its trait bounds were not satisfied\n-  --> $DIR/issue-30786.rs:130:24\n+error[E0599]: the method `countx` exists for struct `Filter<Map<Repeat, fn(&u64) -> &u64 {identity::<u64>}>, [closure@issue-30786.rs:131:30]>`, but its trait bounds were not satisfied\n+  --> $DIR/issue-30786.rs:132:24\n    |\n LL | pub struct Filter<S, F> {\n    | -----------------------\n@@ -31,11 +31,12 @@ LL | pub struct Filter<S, F> {\n LL |     let count = filter.countx();\n    |                        ^^^^^^ method cannot be called due to unsatisfied trait bounds\n    |\n+   = note: the full type name has been written to '$TEST_BUILD_DIR/higher-rank-trait-bounds/issue-30786/issue-30786.long-type-hash.txt'\n note: the following trait bounds were not satisfied:\n-      `&'a mut &Filter<Map<Repeat, for<'a> fn(&'a u64) -> &'a u64 {identity::<u64>}>, [closure@$DIR/issue-30786.rs:129:30: 129:37]>: Stream`\n-      `&'a mut &mut Filter<Map<Repeat, for<'a> fn(&'a u64) -> &'a u64 {identity::<u64>}>, [closure@$DIR/issue-30786.rs:129:30: 129:37]>: Stream`\n-      `&'a mut Filter<Map<Repeat, for<'a> fn(&'a u64) -> &'a u64 {identity::<u64>}>, [closure@$DIR/issue-30786.rs:129:30: 129:37]>: Stream`\n-  --> $DIR/issue-30786.rs:96:50\n+      `&'a mut &Filter<Map<Repeat, for<'a> fn(&'a u64) -> &'a u64 {identity::<u64>}>, [closure@$DIR/issue-30786.rs:131:30: 131:37]>: Stream`\n+      `&'a mut &mut Filter<Map<Repeat, for<'a> fn(&'a u64) -> &'a u64 {identity::<u64>}>, [closure@$DIR/issue-30786.rs:131:30: 131:37]>: Stream`\n+      `&'a mut Filter<Map<Repeat, for<'a> fn(&'a u64) -> &'a u64 {identity::<u64>}>, [closure@$DIR/issue-30786.rs:131:30: 131:37]>: Stream`\n+  --> $DIR/issue-30786.rs:98:50\n    |\n LL | impl<T> StreamExt for T where for<'a> &'a mut T: Stream {}\n    |         ---------     -                          ^^^^^^ unsatisfied trait bound introduced here"}, {"sha": "3c2c01dc227b9d45f49081d716e68b0d3db338f8", "filename": "tests/ui/impl-trait/no-method-suggested-traits.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr?ref=153ed09fb3a0e7ed8d42749720e8a0b4fac50d74", "patch": "@@ -145,7 +145,7 @@ note: `foo::Bar` defines an item `method2`, perhaps you need to implement it\n LL |     pub trait Bar {\n    |     ^^^^^^^^^^^^^\n \n-error[E0599]: no method named `method2` found for struct `Foo` in the current scope\n+error[E0599]: no method named `method2` found for struct `no_method_suggested_traits::Foo` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:50:37\n    |\n LL |     no_method_suggested_traits::Foo.method2();\n@@ -158,7 +158,7 @@ note: `foo::Bar` defines an item `method2`, perhaps you need to implement it\n LL |     pub trait Bar {\n    |     ^^^^^^^^^^^^^\n \n-error[E0599]: no method named `method2` found for struct `Rc<&mut Box<&Foo>>` in the current scope\n+error[E0599]: no method named `method2` found for struct `Rc<&mut Box<&no_method_suggested_traits::Foo>>` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:52:71\n    |\n LL |     std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Foo)).method2();\n@@ -171,7 +171,7 @@ note: `foo::Bar` defines an item `method2`, perhaps you need to implement it\n LL |     pub trait Bar {\n    |     ^^^^^^^^^^^^^\n \n-error[E0599]: no method named `method2` found for enum `Bar` in the current scope\n+error[E0599]: no method named `method2` found for enum `no_method_suggested_traits::Bar` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:54:40\n    |\n LL |     no_method_suggested_traits::Bar::X.method2();\n@@ -184,7 +184,7 @@ note: `foo::Bar` defines an item `method2`, perhaps you need to implement it\n LL |     pub trait Bar {\n    |     ^^^^^^^^^^^^^\n \n-error[E0599]: no method named `method2` found for struct `Rc<&mut Box<&Bar>>` in the current scope\n+error[E0599]: no method named `method2` found for struct `Rc<&mut Box<&no_method_suggested_traits::Bar>>` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:56:74\n    |\n LL |     std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Bar::X)).method2();\n@@ -255,25 +255,25 @@ error[E0599]: no method named `method3` found for struct `Rc<&mut Box<&usize>>`\n LL |     std::rc::Rc::new(&mut Box::new(&1_usize)).method3();\n    |                                               ^^^^^^^ method not found in `Rc<&mut Box<&usize>>`\n \n-error[E0599]: no method named `method3` found for struct `Foo` in the current scope\n+error[E0599]: no method named `method3` found for struct `no_method_suggested_traits::Foo` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:71:37\n    |\n LL |     no_method_suggested_traits::Foo.method3();\n    |                                     ^^^^^^^ method not found in `Foo`\n \n-error[E0599]: no method named `method3` found for struct `Rc<&mut Box<&Foo>>` in the current scope\n+error[E0599]: no method named `method3` found for struct `Rc<&mut Box<&no_method_suggested_traits::Foo>>` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:72:71\n    |\n LL |     std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Foo)).method3();\n    |                                                                       ^^^^^^^ method not found in `Rc<&mut Box<&Foo>>`\n \n-error[E0599]: no method named `method3` found for enum `Bar` in the current scope\n+error[E0599]: no method named `method3` found for enum `no_method_suggested_traits::Bar` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:74:40\n    |\n LL |     no_method_suggested_traits::Bar::X.method3();\n    |                                        ^^^^^^^ method not found in `Bar`\n \n-error[E0599]: no method named `method3` found for struct `Rc<&mut Box<&Bar>>` in the current scope\n+error[E0599]: no method named `method3` found for struct `Rc<&mut Box<&no_method_suggested_traits::Bar>>` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:75:74\n    |\n LL |     std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Bar::X)).method3();"}, {"sha": "13a12acb3605b5e13b148a923a68892cd938412d", "filename": "tests/ui/issues/issue-19521.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fissues%2Fissue-19521.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fissues%2Fissue-19521.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-19521.stderr?ref=153ed09fb3a0e7ed8d42749720e8a0b4fac50d74", "patch": "@@ -1,4 +1,4 @@\n-error[E0599]: no method named `homura` found for reference `&str` in the current scope\n+error[E0599]: no method named `homura` found for reference `&'static str` in the current scope\n   --> $DIR/issue-19521.rs:2:8\n    |\n LL |     \"\".homura()();"}, {"sha": "a00a1dbb8843d2a282b4fa9044c2ac518575c4fa", "filename": "tests/ui/issues/issue-30123.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fissues%2Fissue-30123.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fissues%2Fissue-30123.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-30123.stderr?ref=153ed09fb3a0e7ed8d42749720e8a0b4fac50d74", "patch": "@@ -1,4 +1,4 @@\n-error[E0599]: no function or associated item named `new_undirected` found for struct `Graph<i32, i32>` in the current scope\n+error[E0599]: no function or associated item named `new_undirected` found for struct `issue_30123_aux::Graph<i32, i32>` in the current scope\n   --> $DIR/issue-30123.rs:7:33\n    |\n LL |     let ug = Graph::<i32, i32>::new_undirected();"}, {"sha": "d1e94bc702cae7e0225f6f22570492321d62fe12", "filename": "tests/ui/nll/issue-57642-higher-ranked-subtype.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fnll%2Fissue-57642-higher-ranked-subtype.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fnll%2Fissue-57642-higher-ranked-subtype.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnll%2Fissue-57642-higher-ranked-subtype.stderr?ref=153ed09fb3a0e7ed8d42749720e8a0b4fac50d74", "patch": "@@ -13,7 +13,7 @@ note: `X` defines an item `make_g`, perhaps you need to implement it\n LL | trait X {\n    | ^^^^^^^\n \n-error[E0599]: no function or associated item named `make_f` found for fn pointer `fn(&())` in the current scope\n+error[E0599]: no function or associated item named `make_f` found for fn pointer `for<'a> fn(&'a ())` in the current scope\n   --> $DIR/issue-57642-higher-ranked-subtype.rs:35:25\n    |\n LL |     let x = <fn (&())>::make_f();"}, {"sha": "2c8df3b616fb8ac5c43b02aa07d16ba38d65703a", "filename": "tests/ui/object-pointer-types.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fobject-pointer-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fobject-pointer-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fobject-pointer-types.stderr?ref=153ed09fb3a0e7ed8d42749720e8a0b4fac50d74", "patch": "@@ -16,7 +16,7 @@ LL |     fn owned(self: Box<Self>);\n LL |     x.owned();\n    |       ^^^^^ method not found in `&mut dyn Foo`\n \n-error[E0599]: no method named `managed` found for struct `Box<dyn Foo>` in the current scope\n+error[E0599]: no method named `managed` found for struct `Box<(dyn Foo + 'static)>` in the current scope\n   --> $DIR/object-pointer-types.rs:23:7\n    |\n LL |     x.managed();"}, {"sha": "534c497780a95e959982113289f50a128fcc8629", "filename": "tests/ui/suggestions/remove-as_str.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fsuggestions%2Fremove-as_str.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fsuggestions%2Fremove-as_str.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fremove-as_str.stderr?ref=153ed09fb3a0e7ed8d42749720e8a0b4fac50d74", "patch": "@@ -4,7 +4,7 @@ error[E0599]: no method named `as_str` found for reference `&str` in the current\n LL |     s.as_str();\n    |      -^^^^^^-- help: remove this method call\n \n-error[E0599]: no method named `as_str` found for reference `&str` in the current scope\n+error[E0599]: no method named `as_str` found for reference `&'a str` in the current scope\n   --> $DIR/remove-as_str.rs:7:7\n    |\n LL |     s.as_str();"}, {"sha": "95732881baf09423d8a5aeeead5bb3d21a145464", "filename": "tests/ui/suggestions/suggest-using-chars.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fsuggestions%2Fsuggest-using-chars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fsuggestions%2Fsuggest-using-chars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fsuggest-using-chars.rs?ref=153ed09fb3a0e7ed8d42749720e8a0b4fac50d74", "patch": "@@ -1,6 +1,6 @@\n pub fn main() {\n-    let _ = \"foo\".iter(); //~ ERROR no method named `iter` found for reference `&str` in the current scope\n-    let _ = \"foo\".foo(); //~ ERROR no method named `foo` found for reference `&str` in the current scope\n+    let _ = \"foo\".iter(); //~ ERROR no method named `iter` found for reference `&'static str` in the current scope\n+    let _ = \"foo\".foo(); //~ ERROR no method named `foo` found for reference `&'static str` in the current scope\n     let _ = String::from(\"bar\").iter(); //~ ERROR no method named `iter` found for struct `String` in the current scope\n     let _ = (&String::from(\"bar\")).iter(); //~ ERROR no method named `iter` found for reference `&String` in the current scope\n     let _ = 0.iter(); //~ ERROR no method named `iter` found for type `{integer}` in the current scope"}, {"sha": "ba80ec6a2019cb35160698296e173298cd74ffa5", "filename": "tests/ui/suggestions/suggest-using-chars.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fsuggestions%2Fsuggest-using-chars.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Fsuggestions%2Fsuggest-using-chars.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fsuggest-using-chars.stderr?ref=153ed09fb3a0e7ed8d42749720e8a0b4fac50d74", "patch": "@@ -1,4 +1,4 @@\n-error[E0599]: no method named `iter` found for reference `&str` in the current scope\n+error[E0599]: no method named `iter` found for reference `&'static str` in the current scope\n   --> $DIR/suggest-using-chars.rs:2:19\n    |\n LL |     let _ = \"foo\".iter();\n@@ -9,7 +9,7 @@ help: because of the in-memory representation of `&str`, to obtain an `Iterator`\n LL |     let _ = \"foo\".chars();\n    |                   ~~~~~\n \n-error[E0599]: no method named `foo` found for reference `&str` in the current scope\n+error[E0599]: no method named `foo` found for reference `&'static str` in the current scope\n   --> $DIR/suggest-using-chars.rs:3:19\n    |\n LL |     let _ = \"foo\".foo();"}, {"sha": "482fd3cb44def7b215ae30ea6f3b46ca9e46ba79", "filename": "tests/ui/unboxed-closures/unboxed-closures-static-call-wrong-trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Funboxed-closures%2Funboxed-closures-static-call-wrong-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/153ed09fb3a0e7ed8d42749720e8a0b4fac50d74/tests%2Fui%2Funboxed-closures%2Funboxed-closures-static-call-wrong-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funboxed-closures%2Funboxed-closures-static-call-wrong-trait.stderr?ref=153ed09fb3a0e7ed8d42749720e8a0b4fac50d74", "patch": "@@ -1,4 +1,4 @@\n-error[E0599]: no method named `call` found for closure `[closure@unboxed-closures-static-call-wrong-trait.rs:6:26]` in the current scope\n+error[E0599]: no method named `call` found for closure `[closure@$DIR/unboxed-closures-static-call-wrong-trait.rs:6:26: 6:29]` in the current scope\n   --> $DIR/unboxed-closures-static-call-wrong-trait.rs:7:10\n    |\n LL |     mut_.call((0, ));"}]}