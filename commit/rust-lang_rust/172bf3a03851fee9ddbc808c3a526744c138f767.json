{"sha": "172bf3a03851fee9ddbc808c3a526744c138f767", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3MmJmM2EwMzg1MWZlZTlkZGJjODA4YzNhNTI2NzQ0YzEzOGY3Njc=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-07-10T01:37:09Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-07-10T01:42:06Z"}, "message": "Back out recognition of caret for unsafe ptr. Decided to abandon #2826 mid way through.", "tree": {"sha": "9f6c92997f4545a1e5b4f3611b88c50ae2f51a13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f6c92997f4545a1e5b4f3611b88c50ae2f51a13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/172bf3a03851fee9ddbc808c3a526744c138f767", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/172bf3a03851fee9ddbc808c3a526744c138f767", "html_url": "https://github.com/rust-lang/rust/commit/172bf3a03851fee9ddbc808c3a526744c138f767", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/172bf3a03851fee9ddbc808c3a526744c138f767/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0fe08f1c81108750dd2a89f3d060df165912119", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0fe08f1c81108750dd2a89f3d060df165912119", "html_url": "https://github.com/rust-lang/rust/commit/f0fe08f1c81108750dd2a89f3d060df165912119"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "b61aa2d5d906dd42aaa60212d15f5f7c09099857", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/172bf3a03851fee9ddbc808c3a526744c138f767/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/172bf3a03851fee9ddbc808c3a526744c138f767/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=172bf3a03851fee9ddbc808c3a526744c138f767", "patch": "@@ -503,8 +503,7 @@ class parser {\n               }\n               mt { ty_uniq(mt) }\n             }\n-        } else if self.token == token::BINOP(token::STAR) ||\n-            self.token == token::BINOP(token::CARET) {\n+        } else if self.token == token::BINOP(token::STAR) {\n             self.bump();\n             ty_ptr(self.parse_mt())\n         } else if self.token == token::LBRACE {"}]}