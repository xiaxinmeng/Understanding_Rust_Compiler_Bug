{"sha": "aac9bc5ffac941b5880ad269076169b752a1c7e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhYzliYzVmZmFjOTQxYjU4ODBhZDI2OTA3NjE2OWI3NTJhMWM3ZTk=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-06-02T15:30:18Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-06-02T15:30:18Z"}, "message": "copy_within: replace element access by pointer arithmetic to avoid UB\n\nThis ensures we won't accidentally read *src or *dest even when count = 0.", "tree": {"sha": "92379da091492a5e542cd6ba4de7654c634129b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92379da091492a5e542cd6ba4de7654c634129b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aac9bc5ffac941b5880ad269076169b752a1c7e9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlzz640ACgkQ/vbIBR0O\nATw2OQ/6Ar4yZ1a3pD9lQ5aRLnbfqM3I0PjLZzScZ+UTo5ZZsDjM0699KYnL7INb\n11HJgS2ZLisf7HY+8qe2OPEC2CNnpbQV12uQaO99CHKWe0sX9dRHNwyK/y18DzdU\ndLIQMDsvFlcGK+8ay/p6Fj9J6Q5aCTE9qotEy216cwJsODFUYu5fWMuC5T46WHqB\nH7eor8MOICYPSVzwpnRN8JCof/hAtjjkQoOqcxQ75auu8MPdx2IffW7s4DxD+dRS\nQ0G476lDd0XrrBChqGAvsdFIQXOt/v8o7aG052729DU1qeBrUENkqkCqq7Ko0RHk\nC9Rps9kJ58ziUey9LzVTKE4Fxi8YTQup16SQtiK+HnW0Eq1nmtxwWW2G1yF2XJJ4\nrVtzgwcj0Ckd2dV5JXWFV8ys+vFSN2IQ4faNHiA6pyHkEMBaQMVwL/Vf0+C22in6\nMKQ5IxDw9Ykw8t39UHjvSW5HSpjFN3WORQMOEa1OcfOmGYeUEqB0xiPScmfu1gL6\nUew3ZWtSzy1u5Vb4XB0SxuMf8wnzUvxcIxcFPEQaJsi/IZt11TaCqnc1AJvsbXpJ\nmKf+5nqetZTm85d4eehB0zaFDOIvVzXJRxrst00j8pOTBlWoxIkJAxc5G3gdVe2G\nIpPF2X2iBEhpmeVUZwZA2LR5r7ypa0AeND109FNevUq2445I4XA=\n=Ru/3\n-----END PGP SIGNATURE-----", "payload": "tree 92379da091492a5e542cd6ba4de7654c634129b5\nparent be6fc6aca26b7de1f69102a56689dac8b66e38f5\nauthor kennytm <kennytm@gmail.com> 1559489418 +0800\ncommitter kennytm <kennytm@gmail.com> 1559489418 +0800\n\ncopy_within: replace element access by pointer arithmetic to avoid UB\n\nThis ensures we won't accidentally read *src or *dest even when count = 0.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aac9bc5ffac941b5880ad269076169b752a1c7e9", "html_url": "https://github.com/rust-lang/rust/commit/aac9bc5ffac941b5880ad269076169b752a1c7e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aac9bc5ffac941b5880ad269076169b752a1c7e9/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be6fc6aca26b7de1f69102a56689dac8b66e38f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/be6fc6aca26b7de1f69102a56689dac8b66e38f5", "html_url": "https://github.com/rust-lang/rust/commit/be6fc6aca26b7de1f69102a56689dac8b66e38f5"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "231082e5a17562c65939a99d32f37a023fb5af7d", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aac9bc5ffac941b5880ad269076169b752a1c7e9/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aac9bc5ffac941b5880ad269076169b752a1c7e9/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=aac9bc5ffac941b5880ad269076169b752a1c7e9", "patch": "@@ -2177,8 +2177,8 @@ impl<T> [T] {\n         assert!(dest <= self.len() - count, \"dest is out of bounds\");\n         unsafe {\n             ptr::copy(\n-                self.get_unchecked(src_start),\n-                self.get_unchecked_mut(dest),\n+                self.as_ptr().add(src_start),\n+                self.as_mut_ptr().add(dest),\n                 count,\n             );\n         }"}, {"sha": "401757295922278bca01672d0f609e3ec64fa847", "filename": "src/libcore/tests/slice.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/aac9bc5ffac941b5880ad269076169b752a1c7e9/src%2Flibcore%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aac9bc5ffac941b5880ad269076169b752a1c7e9/src%2Flibcore%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fslice.rs?ref=aac9bc5ffac941b5880ad269076169b752a1c7e9", "patch": "@@ -1512,6 +1512,13 @@ fn test_copy_within() {\n     let mut bytes = *b\"Hello, World!\";\n     bytes.copy_within(.., 0);\n     assert_eq!(&bytes, b\"Hello, World!\");\n+\n+    // Ensure that copying at the end of slice won't cause UB.\n+    let mut bytes = *b\"Hello, World!\";\n+    bytes.copy_within(13..13, 5);\n+    assert_eq!(&bytes, b\"Hello, World!\");\n+    bytes.copy_within(5..5, 13);\n+    assert_eq!(&bytes, b\"Hello, World!\");\n }\n \n #[test]\n@@ -1536,6 +1543,13 @@ fn test_copy_within_panics_src_inverted() {\n     // 2 is greater than 1, so this range is invalid.\n     bytes.copy_within(2..1, 0);\n }\n+#[test]\n+#[should_panic(expected = \"attempted to index slice up to maximum usize\")]\n+fn test_copy_within_panics_src_out_of_bounds() {\n+    let mut bytes = *b\"Hello, World!\";\n+    // 2 is greater than 1, so this range is invalid.\n+    bytes.copy_within(usize::max_value()..=usize::max_value(), 0);\n+}\n \n #[test]\n fn test_is_sorted() {"}]}