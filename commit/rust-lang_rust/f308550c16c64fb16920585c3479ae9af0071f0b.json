{"sha": "f308550c16c64fb16920585c3479ae9af0071f0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzMDg1NTBjMTZjNjRmYjE2OTIwNTg1YzM0NzlhZTlhZjAwNzFmMGI=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-21T20:17:28Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-21T20:17:28Z"}, "message": "Rollup merge of #22527 - dotdash:if-loop, r=huonw\n\n In `if loop {} {}`, the `if` is actually unreachable, but we didn't\nhandle that correctly and when trying to translate the `if` we tried to\nbranch on the \\\"return value\\\" of the loop expression, which is not an\n`i1` and therefore triggered an LLVM assertion.", "tree": {"sha": "15fb31371e710e24984bc0e5aaaa7b97d3f672f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15fb31371e710e24984bc0e5aaaa7b97d3f672f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f308550c16c64fb16920585c3479ae9af0071f0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f308550c16c64fb16920585c3479ae9af0071f0b", "html_url": "https://github.com/rust-lang/rust/commit/f308550c16c64fb16920585c3479ae9af0071f0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f308550c16c64fb16920585c3479ae9af0071f0b/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7ac60a2f156de98eb9b7848a4dc8a208dd13aaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7ac60a2f156de98eb9b7848a4dc8a208dd13aaa", "html_url": "https://github.com/rust-lang/rust/commit/b7ac60a2f156de98eb9b7848a4dc8a208dd13aaa"}, {"sha": "07c0faa4070b13f7b59134ecd23f5810852319af", "url": "https://api.github.com/repos/rust-lang/rust/commits/07c0faa4070b13f7b59134ecd23f5810852319af", "html_url": "https://github.com/rust-lang/rust/commit/07c0faa4070b13f7b59134ecd23f5810852319af"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "600201a97c948e251bc2dc1225ad48b4f74f5dd9", "filename": "src/librustc_trans/trans/controlflow.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f308550c16c64fb16920585c3479ae9af0071f0b/src%2Flibrustc_trans%2Ftrans%2Fcontrolflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f308550c16c64fb16920585c3479ae9af0071f0b/src%2Flibrustc_trans%2Ftrans%2Fcontrolflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcontrolflow.rs?ref=f308550c16c64fb16920585c3479ae9af0071f0b", "patch": "@@ -12,6 +12,7 @@ use llvm::ValueRef;\n use middle::def;\n use middle::lang_items::{PanicFnLangItem, PanicBoundsCheckFnLangItem};\n use trans::base::*;\n+use trans::basic_block::BasicBlock;\n use trans::build::*;\n use trans::callee;\n use trans::cleanup::CleanupMethods;\n@@ -280,6 +281,12 @@ pub fn trans_loop<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n \n     fcx.pop_loop_cleanup_scope(loop_expr.id);\n \n+    // If there are no predecessors for the next block, we just translated an endless loop and the\n+    // next block is unreachable\n+    if BasicBlock(next_bcx_in.llbb).pred_iter().next().is_none() {\n+        Unreachable(next_bcx_in);\n+    }\n+\n     return next_bcx_in;\n }\n "}, {"sha": "15f04df6939811dce2bc9ac603907d710de24ade", "filename": "src/test/compile-fail/if-loop.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f308550c16c64fb16920585c3479ae9af0071f0b/src%2Ftest%2Fcompile-fail%2Fif-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f308550c16c64fb16920585c3479ae9af0071f0b/src%2Ftest%2Fcompile-fail%2Fif-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fif-loop.rs?ref=f308550c16c64fb16920585c3479ae9af0071f0b", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(rustc_attrs)]\n+#![allow(warnings)]\n+\n+// This used to ICE because the \"if\" being unreachable was not handled correctly\n+fn err() {\n+    if loop {} {}\n+}\n+\n+#[rustc_error]\n+fn main() {} //~ ERROR compilation successful"}]}