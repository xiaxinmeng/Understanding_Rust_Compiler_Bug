{"sha": "18ab705073faed3c01aa2f66a9d99d26d047c7bc", "node_id": "C_kwDOAAsO6NoAKDE4YWI3MDUwNzNmYWVkM2MwMWFhMmY2NmE5ZDk5ZDI2ZDA0N2M3YmM", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-09-19T14:00:34Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-09-19T14:00:34Z"}, "message": "Actually visit/fold the types inside CanonicalVarInfos", "tree": {"sha": "264c070003ef0cd040fd268907a4ef3a8f17c284", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/264c070003ef0cd040fd268907a4ef3a8f17c284"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18ab705073faed3c01aa2f66a9d99d26d047c7bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18ab705073faed3c01aa2f66a9d99d26d047c7bc", "html_url": "https://github.com/rust-lang/rust/commit/18ab705073faed3c01aa2f66a9d99d26d047c7bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18ab705073faed3c01aa2f66a9d99d26d047c7bc/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf6366babafb3b08c3944ee0a25e398af2657ed5", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf6366babafb3b08c3944ee0a25e398af2657ed5", "html_url": "https://github.com/rust-lang/rust/commit/cf6366babafb3b08c3944ee0a25e398af2657ed5"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "e46cf48142f254b7699340bb4d158c221d328b0e", "filename": "compiler/rustc_middle/src/infer/canonical.rs", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/18ab705073faed3c01aa2f66a9d99d26d047c7bc/compiler%2Frustc_middle%2Fsrc%2Finfer%2Fcanonical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18ab705073faed3c01aa2f66a9d99d26d047c7bc/compiler%2Frustc_middle%2Fsrc%2Finfer%2Fcanonical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Finfer%2Fcanonical.rs?ref=18ab705073faed3c01aa2f66a9d99d26d047c7bc", "patch": "@@ -29,7 +29,7 @@ use rustc_index::vec::IndexVec;\n use rustc_macros::HashStable;\n use smallvec::SmallVec;\n use std::iter;\n-use std::ops::Index;\n+use std::ops::{ControlFlow, Index};\n \n /// A \"canonicalized\" type `V` is one where all free inference\n /// variables have been rewritten to \"canonical vars\". These are\n@@ -44,6 +44,21 @@ pub struct Canonical<'tcx, V> {\n \n pub type CanonicalVarInfos<'tcx> = &'tcx List<CanonicalVarInfo<'tcx>>;\n \n+impl<'tcx> ty::TypeFoldable<'tcx> for CanonicalVarInfos<'tcx> {\n+    fn try_fold_with<F: ty::FallibleTypeFolder<'tcx>>(\n+        self,\n+        folder: &mut F,\n+    ) -> Result<Self, F::Error> {\n+        ty::util::fold_list(self, folder, |tcx, v| tcx.intern_canonical_var_infos(v))\n+    }\n+}\n+\n+impl<'tcx> ty::TypeVisitable<'tcx> for CanonicalVarInfos<'tcx> {\n+    fn visit_with<V: ty::TypeVisitor<'tcx>>(&self, visitor: &mut V) -> ControlFlow<V::BreakTy> {\n+        self.iter().try_for_each(|t| t.visit_with(visitor))\n+    }\n+}\n+\n /// A set of values corresponding to the canonical variables from some\n /// `Canonical`. You can give these values to\n /// `canonical_value.substitute` to substitute them into the canonical\n@@ -305,12 +320,6 @@ TrivialTypeTraversalAndLiftImpls! {\n     }\n }\n \n-TrivialTypeTraversalImpls! {\n-    for <'tcx> {\n-        crate::infer::canonical::CanonicalVarInfos<'tcx>,\n-    }\n-}\n-\n impl<'tcx> CanonicalVarValues<'tcx> {\n     #[inline]\n     pub fn len(&self) -> usize {"}]}