{"sha": "64929313f53181636e4dd37e25836973205477e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0OTI5MzEzZjUzMTgxNjM2ZTRkZDM3ZTI1ODM2OTczMjA1NDc3ZTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-09-02T10:27:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-09-02T10:27:44Z"}, "message": "Auto merge of #88516 - matthiaskrgr:clippy_perf_end_august, r=jyn514,GuillaumeGomez\n\nsome low hanging clippy::perf fixes", "tree": {"sha": "e519116350f0fa70340277087f46949eda1afa10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e519116350f0fa70340277087f46949eda1afa10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64929313f53181636e4dd37e25836973205477e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64929313f53181636e4dd37e25836973205477e4", "html_url": "https://github.com/rust-lang/rust/commit/64929313f53181636e4dd37e25836973205477e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64929313f53181636e4dd37e25836973205477e4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b27ccbc7e1e6a04d749e244a3c13f72ca38e80e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/b27ccbc7e1e6a04d749e244a3c13f72ca38e80e7", "html_url": "https://github.com/rust-lang/rust/commit/b27ccbc7e1e6a04d749e244a3c13f72ca38e80e7"}, {"sha": "7f2df9ad65f49b916a979d819595cd1b6385bc71", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f2df9ad65f49b916a979d819595cd1b6385bc71", "html_url": "https://github.com/rust-lang/rust/commit/7f2df9ad65f49b916a979d819595cd1b6385bc71"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "d7cd34c5922c7cfdfe18472091d7a9c47d3e69ca", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64929313f53181636e4dd37e25836973205477e4/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64929313f53181636e4dd37e25836973205477e4/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=64929313f53181636e4dd37e25836973205477e4", "patch": "@@ -2090,7 +2090,7 @@ impl<'tcx> LifetimeContext<'_, 'tcx> {\n                                 self.is_unnamed(),\n                                 self.is_underscore(),\n                                 self.is_named(),\n-                                sugg.starts_with(\"&\"),\n+                                sugg.starts_with('&'),\n                             ) {\n                                 (true, _, _, false) => (self.span_unnamed_borrow(), sugg),\n                                 (true, _, _, true) => {"}, {"sha": "4c1d537d55fa37cd3231337c248630f6f5e48ec3", "filename": "compiler/rustc_resolve/src/late/lifetimes.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64929313f53181636e4dd37e25836973205477e4/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64929313f53181636e4dd37e25836973205477e4/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs?ref=64929313f53181636e4dd37e25836973205477e4", "patch": "@@ -2605,8 +2605,10 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n                     binding.ident,\n                 );\n                 self.with(scope, |_, this| {\n-                    let scope =\n-                        Scope::Supertrait { lifetimes: lifetimes.unwrap_or(vec![]), s: this.scope };\n+                    let scope = Scope::Supertrait {\n+                        lifetimes: lifetimes.unwrap_or_default(),\n+                        s: this.scope,\n+                    };\n                     this.with(scope, |_, this| this.visit_assoc_type_binding(binding));\n                 });\n             } else {"}, {"sha": "273221360b8b561ca9d1d5d265956861369f6488", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64929313f53181636e4dd37e25836973205477e4/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64929313f53181636e4dd37e25836973205477e4/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=64929313f53181636e4dd37e25836973205477e4", "patch": "@@ -664,7 +664,7 @@ impl ToJson for SanitizerSet {\n         self.into_iter()\n             .map(|v| Some(v.as_str()?.to_json()))\n             .collect::<Option<Vec<_>>>()\n-            .unwrap_or(Vec::new())\n+            .unwrap_or_default()\n             .to_json()\n     }\n }"}, {"sha": "64594a82ec0b6e5dd0838a1e492a81175d205e97", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64929313f53181636e4dd37e25836973205477e4/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64929313f53181636e4dd37e25836973205477e4/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=64929313f53181636e4dd37e25836973205477e4", "patch": "@@ -165,7 +165,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         if self.tcx().sess.verbose() {\n             // make this code only run with -Zverbose because it is probably slow\n             if let Ok(lint_str) = self.tcx.sess.source_map().span_to_snippet(expr.span) {\n-                if !lint_str.contains(\"\\n\") {\n+                if !lint_str.contains('\\n') {\n                     debug!(\"expr text: {}\", lint_str);\n                 } else {\n                     let mut lines = lint_str.lines();"}, {"sha": "140a9d1126d32a29289207c7f7df4bc3884943c8", "filename": "compiler/rustc_typeck/src/check/pat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64929313f53181636e4dd37e25836973205477e4/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64929313f53181636e4dd37e25836973205477e4/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs?ref=64929313f53181636e4dd37e25836973205477e4", "patch": "@@ -1008,7 +1008,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n         let mut err = struct_span_err!(\n             self.tcx.sess,\n-            MultiSpan::from_spans(subpat_spans.clone()),\n+            MultiSpan::from_spans(subpat_spans),\n             E0023,\n             \"this pattern has {} field{}, but the corresponding {} has {} field{}\",\n             subpats.len(),"}, {"sha": "bb90b195ddd4f5547dfc9c19d79a12cac53736ec", "filename": "src/librustdoc/html/sources.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/64929313f53181636e4dd37e25836973205477e4/src%2Flibrustdoc%2Fhtml%2Fsources.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64929313f53181636e4dd37e25836973205477e4/src%2Flibrustdoc%2Fhtml%2Fsources.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fsources.rs?ref=64929313f53181636e4dd37e25836973205477e4", "patch": "@@ -72,10 +72,9 @@ impl LocalSourcesCollector<'_, '_> {\n             href.push('/');\n         });\n \n-        let src_fname = p.file_name().expect(\"source has no filename\").to_os_string();\n-        let mut fname = src_fname.clone();\n-        fname.push(\".html\");\n-        href.push_str(&fname.to_string_lossy());\n+        let mut src_fname = p.file_name().expect(\"source has no filename\").to_os_string();\n+        src_fname.push(\".html\");\n+        href.push_str(&src_fname.to_string_lossy());\n         self.local_sources.insert(p, href);\n     }\n }"}]}