{"sha": "a1062b9bdcf691fc09f8683ae36d2b31c06c3d8f", "node_id": "C_kwDOAAsO6NoAKGExMDYyYjliZGNmNjkxZmMwOWY4NjgzYWUzNmQyYjMxYzA2YzNkOGY", "commit": {"author": {"name": "Rageking8", "email": "106309953+Rageking8@users.noreply.github.com", "date": "2022-09-22T15:41:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-22T15:41:38Z"}, "message": "recover from struct nested in struct", "tree": {"sha": "45203ad7722c74be7297592a97dd68f067769f8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45203ad7722c74be7297592a97dd68f067769f8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1062b9bdcf691fc09f8683ae36d2b31c06c3d8f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjLIIyCRBK7hj4Ov3rIwAAF2IIAEYcjEgPozlsNUzSTLCN6Mbl\nksQbZf8eWJ5B+lMnkfv7VhkBh/v3Of2yPGPF47K2zI3iQiAb0KDwudJ1Yfp1VwZM\npWC4bX+6YM0DmESy3YHtaK7rB56zYj+G9IPrPZvNA6DD9g7JM4MrX+zo+wWoGkru\nHkVaeEWJr1iYFB9fnsjtHcz6kH5mRidI6lJ1fY+3FdWFYEwTXP4tm9V7wOgWZzJG\nu/Hi8ZmPYY0icn2y60YIf1Tw4IYJ9DBCsowU4vL01LTgf4dxXeo6frVaTX5x7zhg\nxG1zrHCK9QXgL3FRaKuWPvS4jl4EAxpf6nxQSlpMZlMrR4wgzpbxj3xAhjgUZfg=\n=pOX+\n-----END PGP SIGNATURE-----\n", "payload": "tree 45203ad7722c74be7297592a97dd68f067769f8c\nparent 8ab71ab59fd17a1c51d23b68eced935b92431b70\nauthor Rageking8 <106309953+Rageking8@users.noreply.github.com> 1663861298 +0800\ncommitter GitHub <noreply@github.com> 1663861298 +0800\n\nrecover from struct nested in struct\n\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1062b9bdcf691fc09f8683ae36d2b31c06c3d8f", "html_url": "https://github.com/rust-lang/rust/commit/a1062b9bdcf691fc09f8683ae36d2b31c06c3d8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1062b9bdcf691fc09f8683ae36d2b31c06c3d8f/comments", "author": {"login": "Rageking8", "id": 106309953, "node_id": "U_kgDOBlYpQQ", "avatar_url": "https://avatars.githubusercontent.com/u/106309953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rageking8", "html_url": "https://github.com/Rageking8", "followers_url": "https://api.github.com/users/Rageking8/followers", "following_url": "https://api.github.com/users/Rageking8/following{/other_user}", "gists_url": "https://api.github.com/users/Rageking8/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rageking8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rageking8/subscriptions", "organizations_url": "https://api.github.com/users/Rageking8/orgs", "repos_url": "https://api.github.com/users/Rageking8/repos", "events_url": "https://api.github.com/users/Rageking8/events{/privacy}", "received_events_url": "https://api.github.com/users/Rageking8/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ab71ab59fd17a1c51d23b68eced935b92431b70", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ab71ab59fd17a1c51d23b68eced935b92431b70", "html_url": "https://github.com/rust-lang/rust/commit/8ab71ab59fd17a1c51d23b68eced935b92431b70"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "e385ac44113a601f7b7b51dae825774b0a966962", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a1062b9bdcf691fc09f8683ae36d2b31c06c3d8f/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1062b9bdcf691fc09f8683ae36d2b31c06c3d8f/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=a1062b9bdcf691fc09f8683ae36d2b31c06c3d8f", "patch": "@@ -1715,6 +1715,7 @@ impl<'a> Parser<'a> {\n     fn parse_field_ident(&mut self, adt_ty: &str, lo: Span) -> PResult<'a, Ident> {\n         let (ident, is_raw) = self.ident_or_err()?;\n         if !is_raw && ident.is_reserved() {\n+            let snapshot = self.create_snapshot_for_diagnostic();\n             let err = if self.check_fn_front_matter(false) {\n                 let inherited_vis = Visibility {\n                     span: rustc_span::DUMMY_SP,\n@@ -1735,6 +1736,22 @@ impl<'a> Parser<'a> {\n                 err.help(\"unlike in C++, Java, and C#, functions are declared in `impl` blocks\");\n                 err.help(\"see https://doc.rust-lang.org/book/ch05-03-method-syntax.html for more information\");\n                 err\n+            } else if self.eat_keyword(kw::Struct) {\n+                match self.parse_item_struct() {\n+                    Ok((ident, _)) => {\n+                        let mut err = self.struct_span_err(\n+                            lo.with_hi(ident.span.hi()),\n+                            &format!(\"structs are not allowed in {adt_ty} definitions\"),\n+                        );\n+                        err.help(\"consider creating a new `struct` definition instead of nesting\");\n+                        err\n+                    }\n+                    Err(err) => {\n+                        err.cancel();\n+                        self.restore_snapshot(snapshot);\n+                        self.expected_ident_found()\n+                    }\n+                }\n             } else {\n                 self.expected_ident_found()\n             };"}, {"sha": "328ec6f906b1fb6949f24fd9b5d8e5fa0ee8afba", "filename": "src/test/ui/parser/issues/issue-101540.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a1062b9bdcf691fc09f8683ae36d2b31c06c3d8f/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-101540.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1062b9bdcf691fc09f8683ae36d2b31c06c3d8f/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-101540.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-101540.rs?ref=a1062b9bdcf691fc09f8683ae36d2b31c06c3d8f", "patch": "@@ -0,0 +1,7 @@\n+struct S1 {\n+    struct S2 {\n+    //~^ ERROR structs are not allowed in struct definitions\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "42e471cc135048aa1fe71e9d1bfa923b05d407c1", "filename": "src/test/ui/parser/issues/issue-101540.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a1062b9bdcf691fc09f8683ae36d2b31c06c3d8f/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-101540.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a1062b9bdcf691fc09f8683ae36d2b31c06c3d8f/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-101540.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-101540.stderr?ref=a1062b9bdcf691fc09f8683ae36d2b31c06c3d8f", "patch": "@@ -0,0 +1,10 @@\n+error: structs are not allowed in struct definitions\n+  --> $DIR/issue-101540.rs:2:5\n+   |\n+LL |       struct S2 {\n+   |  _____-^^^^^\n+LL | |\n+LL | |     }\n+   | |_____- help: consider creating a new `struct` definition instead of nesting\n+\n+error: aborting due to previous error"}]}