{"sha": "b283aaf0ff74db93162b402e627f3b4ed7fb7d4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyODNhYWYwZmY3NGRiOTMxNjJiNDAyZTYyN2YzYjRlZDdmYjdkNGU=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-10-18T05:33:50Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-10-19T10:05:03Z"}, "message": "Future proof `#[no_link]`.", "tree": {"sha": "27bc4c954fde9bc666a97cb2c407c4603991c28d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27bc4c954fde9bc666a97cb2c407c4603991c28d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b283aaf0ff74db93162b402e627f3b4ed7fb7d4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b283aaf0ff74db93162b402e627f3b4ed7fb7d4e", "html_url": "https://github.com/rust-lang/rust/commit/b283aaf0ff74db93162b402e627f3b4ed7fb7d4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b283aaf0ff74db93162b402e627f3b4ed7fb7d4e/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c429872a32c3005cf2b347025163361218634a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c429872a32c3005cf2b347025163361218634a4", "html_url": "https://github.com/rust-lang/rust/commit/0c429872a32c3005cf2b347025163361218634a4"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "41e14ea9f406f4386ef1e8f4e2840e7d4f48b31d", "filename": "src/librustc_metadata/macro_import.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b283aaf0ff74db93162b402e627f3b4ed7fb7d4e/src%2Flibrustc_metadata%2Fmacro_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b283aaf0ff74db93162b402e627f3b4ed7fb7d4e/src%2Flibrustc_metadata%2Fmacro_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fmacro_import.rs?ref=b283aaf0ff74db93162b402e627f3b4ed7fb7d4e", "patch": "@@ -52,6 +52,7 @@ impl<'a> CrateLoader<'a> {\n         // Parse the attributes relating to macros.\n         let mut import = ImportSelection::Some(FnvHashMap());\n         let mut reexport = FnvHashMap();\n+        let mut no_link = false;\n \n         for attr in &extern_crate.attrs {\n             let mut used = true;\n@@ -87,24 +88,30 @@ impl<'a> CrateLoader<'a> {\n                         }\n                     }\n                 }\n+                \"no_link\" => no_link = true,\n                 _ => used = false,\n             }\n             if used {\n                 attr::mark_used(attr);\n             }\n         }\n \n-        self.load_macros(extern_crate, allows_macros, import, reexport)\n+        self.load_macros(extern_crate, allows_macros, import, reexport, no_link)\n     }\n \n     fn load_macros<'b>(&mut self,\n                        vi: &ast::Item,\n                        allows_macros: bool,\n                        import: ImportSelection,\n-                       reexport: MacroSelection)\n+                       reexport: MacroSelection,\n+                       no_link: bool)\n                        -> Vec<LoadedMacro> {\n         if let ImportSelection::Some(ref sel) = import {\n             if sel.is_empty() && reexport.is_empty() {\n+                // Make sure we can read macros from `#[no_link]` crates.\n+                if no_link {\n+                    self.creader.read_macros(vi);\n+                }\n                 return Vec::new();\n             }\n         }"}, {"sha": "a5bc708b4f05a672dca91624bda01f6ca50978c5", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b283aaf0ff74db93162b402e627f3b4ed7fb7d4e/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b283aaf0ff74db93162b402e627f3b4ed7fb7d4e/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=b283aaf0ff74db93162b402e627f3b4ed7fb7d4e", "patch": "@@ -250,7 +250,7 @@ impl<'b> Resolver<'b> {\n                     self.define(parent, name, TypeNS, (module, sp, vis));\n \n                     self.populate_module_if_necessary(module);\n-                } else if custom_derive_crate {\n+                } else {\n                     // Define an empty module\n                     let def = Def::Mod(self.definitions.local_def_id(item.id));\n                     let module = ModuleS::new(Some(parent), ModuleKind::Def(def, name));"}, {"sha": "f563a1f88d000acdb8e534629d25935c92a8e951", "filename": "src/test/compile-fail-fulldeps/macro-crate-doesnt-resolve.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b283aaf0ff74db93162b402e627f3b4ed7fb7d4e/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-doesnt-resolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b283aaf0ff74db93162b402e627f3b4ed7fb7d4e/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-doesnt-resolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-doesnt-resolve.rs?ref=b283aaf0ff74db93162b402e627f3b4ed7fb7d4e", "patch": "@@ -14,6 +14,5 @@\n extern crate macro_crate_test;\n \n fn main() {\n-    macro_crate_test::foo();\n-    //~^ ERROR failed to resolve. Use of undeclared type or module `macro_crate_test`\n+    macro_crate_test::foo(); //~ ERROR unresolved name\n }"}, {"sha": "8e4692bdee19788f28fd642298e0ef11e1d757ac", "filename": "src/test/compile-fail-fulldeps/no-link-unknown-crate.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b283aaf0ff74db93162b402e627f3b4ed7fb7d4e/src%2Ftest%2Fcompile-fail-fulldeps%2Fno-link-unknown-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b283aaf0ff74db93162b402e627f3b4ed7fb7d4e/src%2Ftest%2Fcompile-fail-fulldeps%2Fno-link-unknown-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fno-link-unknown-crate.rs?ref=b283aaf0ff74db93162b402e627f3b4ed7fb7d4e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[macro_use] #[no_link]\n+#[no_link]\n extern crate doesnt_exist; //~ ERROR can't find crate\n \n fn main() {}", "previous_filename": "src/test/compile-fail-fulldeps/macro-crate-unknown-crate.rs"}, {"sha": "8f6da99806b3b410581f8af8311ddfe2211fd1e1", "filename": "src/test/compile-fail/no-link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b283aaf0ff74db93162b402e627f3b4ed7fb7d4e/src%2Ftest%2Fcompile-fail%2Fno-link.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b283aaf0ff74db93162b402e627f3b4ed7fb7d4e/src%2Ftest%2Fcompile-fail%2Fno-link.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-link.rs?ref=b283aaf0ff74db93162b402e627f3b4ed7fb7d4e", "patch": "@@ -13,6 +13,6 @@ extern crate libc;\n \n fn main() {\n     unsafe {\n-        libc::abs(0);  //~ ERROR Use of undeclared type or module `libc`\n+        libc::abs(0);  //~ ERROR unresolved name\n     }\n }"}]}