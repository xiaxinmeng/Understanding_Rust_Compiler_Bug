{"sha": "0dfc0467727acbc60f0ec3cf60b3d740bff3ca8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkZmMwNDY3NzI3YWNiYzYwZjBlYzNjZjYwYjNkNzQwYmZmM2NhOGU=", "commit": {"author": {"name": "Mark-Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-10-31T02:14:10Z"}, "committer": {"name": "Mark-Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-10-31T02:20:10Z"}, "message": "Fix ICE when printing closures, and other similar types", "tree": {"sha": "8a79e098b8e59d8c8dd6930f491677d5ae80fb9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a79e098b8e59d8c8dd6930f491677d5ae80fb9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0dfc0467727acbc60f0ec3cf60b3d740bff3ca8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0dfc0467727acbc60f0ec3cf60b3d740bff3ca8e", "html_url": "https://github.com/rust-lang/rust/commit/0dfc0467727acbc60f0ec3cf60b3d740bff3ca8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0dfc0467727acbc60f0ec3cf60b3d740bff3ca8e/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea20ab107eb03179e82ff42109d0aaa62aba48b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea20ab107eb03179e82ff42109d0aaa62aba48b8", "html_url": "https://github.com/rust-lang/rust/commit/ea20ab107eb03179e82ff42109d0aaa62aba48b8"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "954e3b1fc13ce8821e4621d223ff3abc9a66ed61", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0dfc0467727acbc60f0ec3cf60b3d740bff3ca8e/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0dfc0467727acbc60f0ec3cf60b3d740bff3ca8e/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=0dfc0467727acbc60f0ec3cf60b3d740bff3ca8e", "patch": "@@ -59,15 +59,25 @@ fn fn_sig(f: &mut fmt::Formatter,\n \n pub fn parameterized(f: &mut fmt::Formatter,\n                      substs: &subst::Substs,\n-                     did: DefId,\n+                     mut did: DefId,\n                      projections: &[ty::ProjectionPredicate])\n                      -> fmt::Result {\n+    let key = ty::tls::with(|tcx| tcx.def_key(did));\n+    let mut item_name = if let Some(name) = key.disambiguated_data.data.get_opt_name() {\n+        Some(name)\n+    } else {\n+        did.index = key.parent.unwrap_or_else(\n+            || bug!(\"finding type for {:?}, encountered def-id {:?} with no parent\",\n+                    did, did));\n+        parameterized(f, substs, did, projections)?;\n+        return write!(f, \"::{}\", key.disambiguated_data.data.as_interned_str());\n+    };\n+\n     let mut verbose = false;\n     let mut num_supplied_defaults = 0;\n     let mut has_self = false;\n     let mut num_regions = 0;\n     let mut num_types = 0;\n-    let mut item_name = None;\n     let mut is_value_path = false;\n     let fn_trait_kind = ty::tls::with(|tcx| {\n         // Unfortunately, some kinds of items (e.g., closures) don't have\n@@ -113,9 +123,10 @@ pub fn parameterized(f: &mut fmt::Formatter,\n                 write!(f, \"<{} as \", substs.type_at(0))?;\n             }\n \n-            item_name = Some(tcx.item_name(did));\n             path_def_id = def_id;\n         } else {\n+            item_name = None;\n+\n             if is_value_path {\n                 // Functions.\n                 assert_eq!(has_self, false);"}]}