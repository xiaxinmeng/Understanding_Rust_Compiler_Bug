{"sha": "99f6221bb6d8ec9cf98f0946ed93a345b4a0e4c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5ZjYyMjFiYjZkOGVjOWNmOThmMDk0NmVkOTNhMzQ1YjRhMGU0YzA=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-11-30T19:15:09Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-05-23T16:51:42Z"}, "message": "Update borrowck", "tree": {"sha": "614e3a74c3bc60a880594fb5a12ea250fd8d9bf2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/614e3a74c3bc60a880594fb5a12ea250fd8d9bf2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99f6221bb6d8ec9cf98f0946ed93a345b4a0e4c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99f6221bb6d8ec9cf98f0946ed93a345b4a0e4c0", "html_url": "https://github.com/rust-lang/rust/commit/99f6221bb6d8ec9cf98f0946ed93a345b4a0e4c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99f6221bb6d8ec9cf98f0946ed93a345b4a0e4c0/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c936e422f0cbd5a90adf73f6b680736551bf9db", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c936e422f0cbd5a90adf73f6b680736551bf9db", "html_url": "https://github.com/rust-lang/rust/commit/8c936e422f0cbd5a90adf73f6b680736551bf9db"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "de0e780b261f3ba507afc45b915b881c7db976bd", "filename": "src/librustc/arena.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/99f6221bb6d8ec9cf98f0946ed93a345b4a0e4c0/src%2Flibrustc%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99f6221bb6d8ec9cf98f0946ed93a345b4a0e4c0/src%2Flibrustc%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Farena.rs?ref=99f6221bb6d8ec9cf98f0946ed93a345b4a0e4c0", "patch": "@@ -59,6 +59,7 @@ macro_rules! arena_types {\n                     rustc::infer::canonical::QueryResponse<'tcx, rustc::ty::Ty<'tcx>>\n                 >,\n             [few] crate_inherent_impls: rustc::ty::CrateInherentImpls,\n+            [decode] borrowck: rustc::middle::borrowck::BorrowCheckResult,\n         ], $tcx);\n     )\n }"}, {"sha": "3594635f41a5249cfc341518286244f34e888131", "filename": "src/librustc/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/99f6221bb6d8ec9cf98f0946ed93a345b4a0e4c0/src%2Flibrustc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99f6221bb6d8ec9cf98f0946ed93a345b4a0e4c0/src%2Flibrustc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fquery%2Fmod.rs?ref=99f6221bb6d8ec9cf98f0946ed93a345b4a0e4c0", "patch": "@@ -371,7 +371,7 @@ rustc_queries! {\n     }\n \n     BorrowChecking {\n-        query borrowck(_: DefId) -> Lrc<BorrowCheckResult> {}\n+        query borrowck(_: DefId) -> &'tcx BorrowCheckResult {}\n \n         /// Borrow-checks the function body. If this is a closure, returns\n         /// additional requirements that the closure's creator must verify."}, {"sha": "7dca47485bb928d8f531083ef6b7d4affa8a3214", "filename": "src/librustc_borrowck/borrowck/mod.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/99f6221bb6d8ec9cf98f0946ed93a345b4a0e4c0/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99f6221bb6d8ec9cf98f0946ed93a345b4a0e4c0/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs?ref=99f6221bb6d8ec9cf98f0946ed93a345b4a0e4c0", "patch": "@@ -32,7 +32,6 @@ use std::borrow::Cow;\n use std::cell::{Cell, RefCell};\n use std::fmt;\n use std::rc::Rc;\n-use rustc_data_structures::sync::Lrc;\n use std::hash::{Hash, Hasher};\n use syntax::source_map::CompilerDesugaringKind;\n use syntax_pos::{MultiSpan, Span};\n@@ -75,7 +74,7 @@ pub struct AnalysisData<'a, 'tcx: 'a> {\n }\n \n fn borrowck<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, owner_def_id: DefId)\n-    -> Lrc<BorrowCheckResult>\n+    -> &'tcx BorrowCheckResult\n {\n     assert!(tcx.use_ast_borrowck() || tcx.migrate_borrowck());\n \n@@ -89,7 +88,7 @@ fn borrowck<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, owner_def_id: DefId)\n             // those things (notably the synthesized constructors from\n             // tuple structs/variants) do not have an associated body\n             // and do not need borrowchecking.\n-            return Lrc::new(BorrowCheckResult {\n+            return tcx.arena.alloc(BorrowCheckResult {\n                 used_mut_nodes: Default::default(),\n                 signalled_any_error: SignalledError::NoErrorsSeen,\n             })\n@@ -136,7 +135,7 @@ fn borrowck<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, owner_def_id: DefId)\n         check_loans::check_loans(&mut bccx, &loan_dfcx, &flowed_moves, &all_loans, body);\n     }\n \n-    Lrc::new(BorrowCheckResult {\n+    tcx.arena.alloc(BorrowCheckResult {\n         used_mut_nodes: bccx.used_mut_nodes.into_inner(),\n         signalled_any_error: bccx.signalled_any_error.into_inner(),\n     })"}]}