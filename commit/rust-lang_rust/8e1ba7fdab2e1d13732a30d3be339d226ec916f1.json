{"sha": "8e1ba7fdab2e1d13732a30d3be339d226ec916f1", "node_id": "C_kwDOAAsO6NoAKDhlMWJhN2ZkYWIyZTFkMTM3MzJhMzBkM2JlMzM5ZDIyNmVjOTE2ZjE", "commit": {"author": {"name": "Yury Ivanou", "email": "lumenian@gmail.com", "date": "2023-05-07T16:10:01Z"}, "committer": {"name": "Yury Ivanou", "email": "lumenian@gmail.com", "date": "2023-05-07T16:10:01Z"}, "message": "Fix memory layout config not working for closures", "tree": {"sha": "306db7abd0d2777473c56cfec44f410983d3fdf4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/306db7abd0d2777473c56cfec44f410983d3fdf4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e1ba7fdab2e1d13732a30d3be339d226ec916f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e1ba7fdab2e1d13732a30d3be339d226ec916f1", "html_url": "https://github.com/rust-lang/rust/commit/8e1ba7fdab2e1d13732a30d3be339d226ec916f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e1ba7fdab2e1d13732a30d3be339d226ec916f1/comments", "author": {"login": "lumenian", "id": 46848997, "node_id": "MDQ6VXNlcjQ2ODQ4OTk3", "avatar_url": "https://avatars.githubusercontent.com/u/46848997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lumenian", "html_url": "https://github.com/lumenian", "followers_url": "https://api.github.com/users/lumenian/followers", "following_url": "https://api.github.com/users/lumenian/following{/other_user}", "gists_url": "https://api.github.com/users/lumenian/gists{/gist_id}", "starred_url": "https://api.github.com/users/lumenian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lumenian/subscriptions", "organizations_url": "https://api.github.com/users/lumenian/orgs", "repos_url": "https://api.github.com/users/lumenian/repos", "events_url": "https://api.github.com/users/lumenian/events{/privacy}", "received_events_url": "https://api.github.com/users/lumenian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lumenian", "id": 46848997, "node_id": "MDQ6VXNlcjQ2ODQ4OTk3", "avatar_url": "https://avatars.githubusercontent.com/u/46848997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lumenian", "html_url": "https://github.com/lumenian", "followers_url": "https://api.github.com/users/lumenian/followers", "following_url": "https://api.github.com/users/lumenian/following{/other_user}", "gists_url": "https://api.github.com/users/lumenian/gists{/gist_id}", "starred_url": "https://api.github.com/users/lumenian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lumenian/subscriptions", "organizations_url": "https://api.github.com/users/lumenian/orgs", "repos_url": "https://api.github.com/users/lumenian/repos", "events_url": "https://api.github.com/users/lumenian/events{/privacy}", "received_events_url": "https://api.github.com/users/lumenian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98a4c5049f69cc3ae3081e8541c63c34b13038a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/98a4c5049f69cc3ae3081e8541c63c34b13038a3", "html_url": "https://github.com/rust-lang/rust/commit/98a4c5049f69cc3ae3081e8541c63c34b13038a3"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "b6279295ce3fd7901c069993cb02d499c25bd0b5", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e1ba7fdab2e1d13732a30d3be339d226ec916f1/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e1ba7fdab2e1d13732a30d3be339d226ec916f1/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=8e1ba7fdab2e1d13732a30d3be339d226ec916f1", "patch": "@@ -227,7 +227,7 @@ fn hover_simple(\n                     return None;\n                 }\n                 let c = token.parent().and_then(|x| x.parent()).and_then(ast::ClosureExpr::cast)?;\n-                render::closure_expr(sema, c)\n+                render::closure_expr(sema, config, c)\n             })\n         });\n "}, {"sha": "dc03df180ab691440f03aa3e40664982976042d9", "filename": "crates/ide/src/hover/render.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8e1ba7fdab2e1d13732a30d3be339d226ec916f1/crates%2Fide%2Fsrc%2Fhover%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e1ba7fdab2e1d13732a30d3be339d226ec916f1/crates%2Fide%2Fsrc%2Fhover%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover%2Frender.rs?ref=8e1ba7fdab2e1d13732a30d3be339d226ec916f1", "patch": "@@ -43,13 +43,17 @@ pub(super) fn type_info_of(\n \n pub(super) fn closure_expr(\n     sema: &Semantics<'_, RootDatabase>,\n+    config: &HoverConfig,\n     c: ast::ClosureExpr,\n ) -> Option<HoverResult> {\n     let ty = &sema.type_of_expr(&c.into())?.original;\n-    let layout = ty\n-        .layout(sema.db)\n-        .map(|x| format!(\" // size = {}, align = {}\", x.size.bytes(), x.align.abi.bytes()))\n-        .unwrap_or_default();\n+    let layout = if config.memory_layout {\n+        ty.layout(sema.db)\n+            .map(|x| format!(\" // size = {}, align = {}\", x.size.bytes(), x.align.abi.bytes()))\n+            .unwrap_or_default()\n+    } else {\n+        String::default()\n+    };\n     let c = ty.as_closure()?;\n     let mut captures = c\n         .captured_items(sema.db)"}, {"sha": "a79e47dd67d4b1b03d74cdba6c9168a8354b96fa", "filename": "crates/ide/src/hover/tests.rs", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8e1ba7fdab2e1d13732a30d3be339d226ec916f1/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e1ba7fdab2e1d13732a30d3be339d226ec916f1/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs?ref=8e1ba7fdab2e1d13732a30d3be339d226ec916f1", "patch": "@@ -1766,9 +1766,7 @@ pub fn fo$0o() {}\n #[test]\n fn test_hover_no_memory_layout() {\n     check_hover_no_memory_layout(\n-        r#\"\n-struct Foo { fiel$0d_a: u8, field_b: i32, field_c: i16 }\n-\"#,\n+        r#\"struct Foo { fiel$0d_a: u8, field_b: i32, field_c: i16 }\"#,\n         expect![[r#\"\n             *field_a*\n \n@@ -1781,6 +1779,26 @@ struct Foo { fiel$0d_a: u8, field_b: i32, field_c: i16 }\n             ```\n         \"#]],\n     );\n+\n+    check_hover_no_memory_layout(\n+        r#\"\n+//- minicore: copy\n+fn main() {\n+    let x = 2;\n+    let y = $0|z| x + z;\n+}\n+\"#,\n+        expect![[r#\"\n+            *|*\n+            ```rust\n+            {closure#0}\n+            impl Fn(i32) -> i32\n+            ```\n+\n+            ## Captures\n+            * `x` by immutable borrow\n+        \"#]],\n+    );\n }\n \n #[test]"}]}