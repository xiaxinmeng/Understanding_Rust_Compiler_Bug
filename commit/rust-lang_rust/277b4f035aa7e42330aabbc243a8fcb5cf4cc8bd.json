{"sha": "277b4f035aa7e42330aabbc243a8fcb5cf4cc8bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3N2I0ZjAzNWFhN2U0MjMzMGFhYmJjMjQzYThmY2I1Y2Y0Y2M4YmQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-03-16T20:26:28Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-03-17T12:34:25Z"}, "message": "Fix soundness hole when unsizing boxes.", "tree": {"sha": "b786a1665596c39a64d27b8b672b911be898bafe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b786a1665596c39a64d27b8b672b911be898bafe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/277b4f035aa7e42330aabbc243a8fcb5cf4cc8bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/277b4f035aa7e42330aabbc243a8fcb5cf4cc8bd", "html_url": "https://github.com/rust-lang/rust/commit/277b4f035aa7e42330aabbc243a8fcb5cf4cc8bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/277b4f035aa7e42330aabbc243a8fcb5cf4cc8bd/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f5ed62298e5e366b931363b804631305178df5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f5ed62298e5e366b931363b804631305178df5c", "html_url": "https://github.com/rust-lang/rust/commit/5f5ed62298e5e366b931363b804631305178df5c"}], "stats": {"total": 82, "additions": 61, "deletions": 21}, "files": [{"sha": "c0d51f5675ca2e7b15b28cf8f1f46fed5c7dd5c7", "filename": "src/librustc/middle/expr_use_visitor.rs", "status": "modified", "additions": 15, "deletions": 21, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/277b4f035aa7e42330aabbc243a8fcb5cf4cc8bd/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/277b4f035aa7e42330aabbc243a8fcb5cf4cc8bd/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs?ref=277b4f035aa7e42330aabbc243a8fcb5cf4cc8bd", "patch": "@@ -857,36 +857,30 @@ impl<'d,'t,'tcx,TYPER:mc::Typer<'tcx>> ExprUseVisitor<'d,'t,'tcx,TYPER> {\n                     n: uint) {\n         debug!(\"walk_autoref expr={}\", expr.repr(self.tcx()));\n \n-        // Match for unique trait coercions first, since we don't need the\n-        // call to cat_expr_autoderefd.\n-        match *autoref {\n-            ty::AutoUnsizeUniq(ty::UnsizeVtable(..)) |\n-            ty::AutoUnsize(ty::UnsizeVtable(..)) => {\n-                assert!(n == 1, format!(\"Expected exactly 1 deref with Uniq \\\n-                                         AutoRefs, found: {}\", n));\n-                let cmt_unadjusted =\n-                    return_if_err!(self.mc.cat_expr_unadjusted(expr));\n-                self.delegate_consume(expr.id, expr.span, cmt_unadjusted);\n-                return;\n-            }\n-            _ => {}\n-        }\n-\n-        let cmt_derefd = return_if_err!(\n-            self.mc.cat_expr_autoderefd(expr, n));\n-        debug!(\"walk_adjustment: cmt_derefd={}\",\n-               cmt_derefd.repr(self.tcx()));\n-\n         match *autoref {\n             ty::AutoPtr(r, m, _) => {\n+                let cmt_derefd = return_if_err!(\n+                    self.mc.cat_expr_autoderefd(expr, n));\n+                debug!(\"walk_adjustment: cmt_derefd={}\",\n+                       cmt_derefd.repr(self.tcx()));\n+\n                 self.delegate.borrow(expr.id,\n                                      expr.span,\n                                      cmt_derefd,\n                                      r,\n                                      ty::BorrowKind::from_mutbl(m),\n                                      AutoRef);\n             }\n-            ty::AutoUnsizeUniq(_) | ty::AutoUnsize(_) | ty::AutoUnsafe(..) => {}\n+            ty::AutoUnsize(_) |\n+            ty::AutoUnsizeUniq(_) => {\n+                assert!(n == 1, format!(\"Expected exactly 1 deref with Uniq \\\n+                                         AutoRefs, found: {}\", n));\n+                let cmt_unadjusted =\n+                    return_if_err!(self.mc.cat_expr_unadjusted(expr));\n+                self.delegate_consume(expr.id, expr.span, cmt_unadjusted);\n+            }\n+            ty::AutoUnsafe(..) => {\n+            }\n         }\n     }\n "}, {"sha": "32490e0dc7de2cc1201957dfd53ba08f7613d1df", "filename": "src/test/compile-fail/borrowck-consume-unsize-vec.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/277b4f035aa7e42330aabbc243a8fcb5cf4cc8bd/src%2Ftest%2Fcompile-fail%2Fborrowck-consume-unsize-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/277b4f035aa7e42330aabbc243a8fcb5cf4cc8bd/src%2Ftest%2Fcompile-fail%2Fborrowck-consume-unsize-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-consume-unsize-vec.rs?ref=277b4f035aa7e42330aabbc243a8fcb5cf4cc8bd", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Check that we report an error if an upcast box is moved twice.\n+\n+fn consume(_: Box<[i32]>) {\n+}\n+\n+fn foo(b: Box<[i32;5]>) {\n+    consume(b);\n+    consume(b); //~ ERROR use of moved value\n+}\n+\n+fn main() {\n+}"}, {"sha": "5bcafa675c7cb3093760b24b51f5a4e155829a8c", "filename": "src/test/compile-fail/borrowck-consume-upcast-box.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/277b4f035aa7e42330aabbc243a8fcb5cf4cc8bd/src%2Ftest%2Fcompile-fail%2Fborrowck-consume-upcast-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/277b4f035aa7e42330aabbc243a8fcb5cf4cc8bd/src%2Ftest%2Fcompile-fail%2Fborrowck-consume-upcast-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-consume-upcast-box.rs?ref=277b4f035aa7e42330aabbc243a8fcb5cf4cc8bd", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Check that we report an error if an upcast box is moved twice.\n+\n+trait Foo { fn dummy(&self); }\n+\n+fn consume(_: Box<Foo>) {\n+}\n+\n+fn foo(b: Box<Foo+Send>) {\n+    consume(b);\n+    consume(b); //~ ERROR use of moved value\n+}\n+\n+fn main() {\n+}"}]}