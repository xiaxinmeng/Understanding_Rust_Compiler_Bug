{"sha": "1240197a5b64611078b4645b81663c206217dcb6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyNDAxOTdhNWI2NDYxMTA3OGI0NjQ1YjgxNjYzYzIwNjIxN2RjYjY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-05-21T03:19:39Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-05-23T22:27:48Z"}, "message": "std: Move running_on_valgrind to rt::util. #1457\n\n[breaking-change]", "tree": {"sha": "6d3ef3db662c61d58af3e4357614d28e1d4dc59a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d3ef3db662c61d58af3e4357614d28e1d4dc59a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1240197a5b64611078b4645b81663c206217dcb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1240197a5b64611078b4645b81663c206217dcb6", "html_url": "https://github.com/rust-lang/rust/commit/1240197a5b64611078b4645b81663c206217dcb6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1240197a5b64611078b4645b81663c206217dcb6/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53db981148eb359f63ecfe4cf9815b5ed0da8f3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/53db981148eb359f63ecfe4cf9815b5ed0da8f3f", "html_url": "https://github.com/rust-lang/rust/commit/53db981148eb359f63ecfe4cf9815b5ed0da8f3f"}], "stats": {"total": 33, "additions": 18, "deletions": 15}, "files": [{"sha": "bc52bc9946c087c15fafe4ed8fb6538dcad7c2f4", "filename": "src/libstd/io/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1240197a5b64611078b4645b81663c206217dcb6/src%2Flibstd%2Fio%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1240197a5b64611078b4645b81663c206217dcb6/src%2Flibstd%2Fio%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Ftest.rs?ref=1240197a5b64611078b4645b81663c206217dcb6", "patch": "@@ -37,7 +37,7 @@ macro_rules! iotest (\n             use io::net::unix::*;\n             use io::timer::*;\n             use io::process::*;\n-            use unstable::running_on_valgrind;\n+            use rt::running_on_valgrind;\n             use str;\n \n             fn f() $b"}, {"sha": "d2131ad44fb301cabf0e674d45b6935aa74739f2", "filename": "src/libstd/rt/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1240197a5b64611078b4645b81663c206217dcb6/src%2Flibstd%2Frt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1240197a5b64611078b4645b81663c206217dcb6/src%2Flibstd%2Frt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fmod.rs?ref=1240197a5b64611078b4645b81663c206217dcb6", "patch": "@@ -76,6 +76,10 @@ pub use self::util::{Stdio, Stdout, Stderr};\n \n pub use alloc::{heap, libc_heap};\n \n+// Used by I/O tests\n+#[experimental]\n+pub use self::util::running_on_valgrind;\n+\n // FIXME: these probably shouldn't be public...\n #[doc(hidden)]\n pub mod shouldnt_be_public {"}, {"sha": "103fbdc0bc93d2f58ce9f1e51595a375f4826757", "filename": "src/libstd/rt/util.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1240197a5b64611078b4645b81663c206217dcb6/src%2Flibstd%2Frt%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1240197a5b64611078b4645b81663c206217dcb6/src%2Flibstd%2Frt%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Futil.rs?ref=1240197a5b64611078b4645b81663c206217dcb6", "patch": "@@ -15,11 +15,11 @@ use io::IoResult;\n use io;\n use iter::Iterator;\n use libc;\n+use libc::uintptr_t;\n use option::{Some, None, Option};\n use os;\n use result::Ok;\n use str::{Str, StrSlice};\n-use unstable::running_on_valgrind;\n use slice::ImmutableVector;\n \n // Indicates whether we should perform expensive sanity checks, including rtassert!\n@@ -162,3 +162,15 @@ memory and partly incapable of presentation to others.\",\n         unsafe { intrinsics::abort() }\n     }\n }\n+\n+/// Dynamically inquire about whether we're running under V.\n+/// You should usually not use this unless your test definitely\n+/// can't run correctly un-altered. Valgrind is there to help\n+/// you notice weirdness in normal, un-doctored code paths!\n+pub fn running_on_valgrind() -> bool {\n+    unsafe { rust_running_on_valgrind() != 0 }\n+}\n+\n+extern {\n+    fn rust_running_on_valgrind() -> uintptr_t;\n+}"}, {"sha": "b235ec4d8c8e2275e59308fd9bbe2581fb46c6e0", "filename": "src/libstd/unstable/mod.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1240197a5b64611078b4645b81663c206217dcb6/src%2Flibstd%2Funstable%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1240197a5b64611078b4645b81663c206217dcb6/src%2Flibstd%2Funstable%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fmod.rs?ref=1240197a5b64611078b4645b81663c206217dcb6", "patch": "@@ -10,8 +10,6 @@\n \n #![doc(hidden)]\n \n-use libc::uintptr_t;\n-\n pub use core::finally;\n \n pub mod dynamic_lib;\n@@ -20,14 +18,3 @@ pub mod simd;\n pub mod sync;\n pub mod mutex;\n \n-/// Dynamically inquire about whether we're running under V.\n-/// You should usually not use this unless your test definitely\n-/// can't run correctly un-altered. Valgrind is there to help\n-/// you notice weirdness in normal, un-doctored code paths!\n-pub fn running_on_valgrind() -> bool {\n-    unsafe { rust_running_on_valgrind() != 0 }\n-}\n-\n-extern {\n-    fn rust_running_on_valgrind() -> uintptr_t;\n-}"}]}