{"sha": "82b025b05a1ccd61c31b05eef6504ea28407cfff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyYjAyNWIwNWExY2NkNjFjMzFiMDVlZWY2NTA0ZWEyODQwN2NmZmY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-13T13:34:46Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-13T13:40:54Z"}, "message": "Reorder imports", "tree": {"sha": "ce8caa7f279aa6b5555313f6df0787a242fc8b00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce8caa7f279aa6b5555313f6df0787a242fc8b00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82b025b05a1ccd61c31b05eef6504ea28407cfff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82b025b05a1ccd61c31b05eef6504ea28407cfff", "html_url": "https://github.com/rust-lang/rust/commit/82b025b05a1ccd61c31b05eef6504ea28407cfff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82b025b05a1ccd61c31b05eef6504ea28407cfff/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ca7cd960b908944a2f3f66a1d0ee5df98b78959", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ca7cd960b908944a2f3f66a1d0ee5df98b78959", "html_url": "https://github.com/rust-lang/rust/commit/5ca7cd960b908944a2f3f66a1d0ee5df98b78959"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "d44562b2271cee72ad101b7f227597f75ad88b14", "filename": "crates/ra_hir_ty/src/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/82b025b05a1ccd61c31b05eef6504ea28407cfff/crates%2Fra_hir_ty%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82b025b05a1ccd61c31b05eef6504ea28407cfff/crates%2Fra_hir_ty%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fexpr.rs?ref=82b025b05a1ccd61c31b05eef6504ea28407cfff", "patch": "@@ -12,9 +12,9 @@ use crate::{\n     diagnostics::{\n         MismatchedArgCount, MissingFields, MissingMatchArms, MissingOkInTailExpr, MissingPatFields,\n     },\n+    match_checking::{is_useful, MatchCheckCtx, Matrix, PatStack, Usefulness},\n     utils::variant_data,\n     ApplicationTy, InferenceResult, Ty, TypeCtor,\n-    _match::{is_useful, MatchCheckCtx, Matrix, PatStack, Usefulness},\n };\n \n pub use hir_def::{"}, {"sha": "34f0bd4ce49bf140c03318442007d5807484b1ff", "filename": "crates/ra_hir_ty/src/lib.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/82b025b05a1ccd61c31b05eef6504ea28407cfff/crates%2Fra_hir_ty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82b025b05a1ccd61c31b05eef6504ea28407cfff/crates%2Fra_hir_ty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Flib.rs?ref=82b025b05a1ccd61c31b05eef6504ea28407cfff", "patch": "@@ -31,9 +31,11 @@ pub mod traits;\n pub mod method_resolution;\n mod op;\n mod lower;\n+mod match_checking;\n pub(crate) mod infer;\n-pub mod display;\n pub(crate) mod utils;\n+\n+pub mod display;\n pub mod db;\n pub mod diagnostics;\n pub mod expr;\n@@ -43,26 +45,24 @@ pub mod unsafe_validation;\n mod tests;\n #[cfg(test)]\n mod test_db;\n-mod _match;\n \n-use std::ops::Deref;\n-use std::sync::Arc;\n-use std::{iter, mem};\n+use std::{iter, mem, ops::Deref, sync::Arc};\n \n use hir_def::{\n     expr::ExprId,\n     type_ref::{Mutability, Rawness},\n     AdtId, AssocContainerId, DefWithBodyId, GenericDefId, HasModule, Lookup, TraitId, TypeAliasId,\n     TypeParamId,\n };\n+use itertools::Itertools;\n use ra_db::{impl_intern_key, salsa, CrateId};\n \n use crate::{\n     db::HirDatabase,\n+    display::HirDisplay,\n     primitive::{FloatTy, IntTy},\n     utils::{generics, make_mut_slice, Generics},\n };\n-use display::HirDisplay;\n \n pub use autoderef::autoderef;\n pub use infer::{InferTy, InferenceResult};\n@@ -74,7 +74,6 @@ pub use lower::{\n pub use traits::{InEnvironment, Obligation, ProjectionPredicate, TraitEnvironment};\n \n pub use chalk_ir::{BoundVar, DebruijnIndex};\n-use itertools::Itertools;\n \n /// A type constructor or type name: this might be something like the primitive\n /// type `bool`, a struct like `Vec`, or things like function pointers or"}, {"sha": "5495ce284f8203d59845cb46b35542370e2ca1f3", "filename": "crates/ra_hir_ty/src/match_checking.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/82b025b05a1ccd61c31b05eef6504ea28407cfff/crates%2Fra_hir_ty%2Fsrc%2Fmatch_checking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82b025b05a1ccd61c31b05eef6504ea28407cfff/crates%2Fra_hir_ty%2Fsrc%2Fmatch_checking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fmatch_checking.rs?ref=82b025b05a1ccd61c31b05eef6504ea28407cfff", "previous_filename": "crates/ra_hir_ty/src/_match.rs"}]}