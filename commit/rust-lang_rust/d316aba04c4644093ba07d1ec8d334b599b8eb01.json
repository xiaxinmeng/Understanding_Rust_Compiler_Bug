{"sha": "d316aba04c4644093ba07d1ec8d334b599b8eb01", "node_id": "C_kwDOAAsO6NoAKGQzMTZhYmEwNGM0NjQ0MDkzYmEwN2QxZWM4ZDMzNGI1OTliOGViMDE", "commit": {"author": {"name": "DrMeepster", "email": "19316085+DrMeepster@users.noreply.github.com", "date": "2022-02-28T04:25:16Z"}, "committer": {"name": "DrMeepster", "email": "19316085+DrMeepster@users.noreply.github.com", "date": "2022-02-28T04:25:16Z"}, "message": "expadn abi check + condese & fix tests", "tree": {"sha": "3acd7847991294b300a1057a8ad034b06bf0a014", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3acd7847991294b300a1057a8ad034b06bf0a014"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d316aba04c4644093ba07d1ec8d334b599b8eb01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d316aba04c4644093ba07d1ec8d334b599b8eb01", "html_url": "https://github.com/rust-lang/rust/commit/d316aba04c4644093ba07d1ec8d334b599b8eb01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d316aba04c4644093ba07d1ec8d334b599b8eb01/comments", "author": {"login": "DrMeepster", "id": 19316085, "node_id": "MDQ6VXNlcjE5MzE2MDg1", "avatar_url": "https://avatars.githubusercontent.com/u/19316085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMeepster", "html_url": "https://github.com/DrMeepster", "followers_url": "https://api.github.com/users/DrMeepster/followers", "following_url": "https://api.github.com/users/DrMeepster/following{/other_user}", "gists_url": "https://api.github.com/users/DrMeepster/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMeepster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMeepster/subscriptions", "organizations_url": "https://api.github.com/users/DrMeepster/orgs", "repos_url": "https://api.github.com/users/DrMeepster/repos", "events_url": "https://api.github.com/users/DrMeepster/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMeepster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DrMeepster", "id": 19316085, "node_id": "MDQ6VXNlcjE5MzE2MDg1", "avatar_url": "https://avatars.githubusercontent.com/u/19316085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMeepster", "html_url": "https://github.com/DrMeepster", "followers_url": "https://api.github.com/users/DrMeepster/followers", "following_url": "https://api.github.com/users/DrMeepster/following{/other_user}", "gists_url": "https://api.github.com/users/DrMeepster/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMeepster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMeepster/subscriptions", "organizations_url": "https://api.github.com/users/DrMeepster/orgs", "repos_url": "https://api.github.com/users/DrMeepster/repos", "events_url": "https://api.github.com/users/DrMeepster/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMeepster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfa7d44823717c30bc21abc1ca3675d0b78c80a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfa7d44823717c30bc21abc1ca3675d0b78c80a2", "html_url": "https://github.com/rust-lang/rust/commit/bfa7d44823717c30bc21abc1ca3675d0b78c80a2"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "809d64479084a389bd617c55846d2918f785227d", "filename": "compiler/rustc_codegen_ssa/src/mir/place.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d316aba04c4644093ba07d1ec8d334b599b8eb01/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d316aba04c4644093ba07d1ec8d334b599b8eb01/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fplace.rs?ref=d316aba04c4644093ba07d1ec8d334b599b8eb01", "patch": "@@ -456,7 +456,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                 mir::ProjectionElem::Deref => {\n                     // custom allocators can change box's abi, making it unable to be derefed directly\n                     if cg_base.layout.ty.is_box()\n-                        && matches!(cg_base.layout.abi, Abi::Aggregate { .. })\n+                        && matches!(cg_base.layout.abi, Abi::Aggregate { .. } | Abi::Uninhabited)\n                     {\n                         let ptr = cg_base.project_field(bx, 0).project_field(bx, 0);\n "}, {"sha": "89f75fea15b1d8cf72a21c71befe2323df64dce9", "filename": "src/test/ui/box/issue-78459-ice.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bfa7d44823717c30bc21abc1ca3675d0b78c80a2/src%2Ftest%2Fui%2Fbox%2Fissue-78459-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfa7d44823717c30bc21abc1ca3675d0b78c80a2/src%2Ftest%2Fui%2Fbox%2Fissue-78459-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbox%2Fissue-78459-ice.rs?ref=bfa7d44823717c30bc21abc1ca3675d0b78c80a2", "patch": "@@ -1,6 +0,0 @@\n-// check-pass\n-#![feature(allocator_api)]\n-\n-fn main() {\n-    Box::new_in((), &std::alloc::Global);\n-}"}, {"sha": "3ef1171ff50d9c8328d596031a684b0fdb9a82cd", "filename": "src/test/ui/box/large-allocator-ice.rs", "status": "renamed", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d316aba04c4644093ba07d1ec8d334b599b8eb01/src%2Ftest%2Fui%2Fbox%2Flarge-allocator-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d316aba04c4644093ba07d1ec8d334b599b8eb01/src%2Ftest%2Fui%2Fbox%2Flarge-allocator-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbox%2Flarge-allocator-ice.rs?ref=d316aba04c4644093ba07d1ec8d334b599b8eb01", "patch": "@@ -1,4 +1,4 @@\n-// check-pass\n+// build-pass\n #![feature(allocator_api)]\n \n use std::alloc::Allocator;\n@@ -18,5 +18,6 @@ unsafe impl Allocator for BigAllocator {\n }\n \n fn main() {\n+    Box::new_in((), &std::alloc::Global);\n     Box::new_in((), BigAllocator([0; 2]));\n }", "previous_filename": "src/test/ui/box/issue-81270-ice.rs"}]}