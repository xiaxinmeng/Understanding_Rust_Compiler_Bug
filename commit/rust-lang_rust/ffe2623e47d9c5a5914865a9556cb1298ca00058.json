{"sha": "ffe2623e47d9c5a5914865a9556cb1298ca00058", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmZTI2MjNlNDdkOWM1YTU5MTQ4NjVhOTU1NmNiMTI5OGNhMDAwNTg=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-07-18T15:34:28Z"}, "committer": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-07-20T18:24:00Z"}, "message": "iterator: Add test for .cycle()", "tree": {"sha": "1137b4cc9766b6f639ddf9ca65cde584aa05c142", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1137b4cc9766b6f639ddf9ca65cde584aa05c142"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffe2623e47d9c5a5914865a9556cb1298ca00058", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffe2623e47d9c5a5914865a9556cb1298ca00058", "html_url": "https://github.com/rust-lang/rust/commit/ffe2623e47d9c5a5914865a9556cb1298ca00058", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffe2623e47d9c5a5914865a9556cb1298ca00058/comments", "author": null, "committer": null, "parents": [{"sha": "4623e81aa5429cf3b9b0837907b70da5e749facc", "url": "https://api.github.com/repos/rust-lang/rust/commits/4623e81aa5429cf3b9b0837907b70da5e749facc", "html_url": "https://github.com/rust-lang/rust/commit/4623e81aa5429cf3b9b0837907b70da5e749facc"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "198e63f83c60ce6eb103b28424f9bf9553718f16", "filename": "src/libstd/iterator.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ffe2623e47d9c5a5914865a9556cb1298ca00058/src%2Flibstd%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffe2623e47d9c5a5914865a9556cb1298ca00058/src%2Flibstd%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiterator.rs?ref=ffe2623e47d9c5a5914865a9556cb1298ca00058", "patch": "@@ -1494,6 +1494,20 @@ mod tests {\n         assert_eq!(i, 10);\n     }\n \n+    #[test]\n+    fn test_cycle() {\n+        let cycle_len = 3;\n+        let it = Counter::new(0u,1).take_(cycle_len).cycle();\n+        assert_eq!(it.size_hint(), (uint::max_value, None));\n+        for it.take_(100).enumerate().advance |(i, x)| {\n+            assert_eq!(i % cycle_len, x);\n+        }\n+\n+        let mut it = Counter::new(0u,1).take_(0).cycle();\n+        assert_eq!(it.size_hint(), (0, Some(0)));\n+        assert_eq!(it.next(), None);\n+    }\n+\n     #[test]\n     fn test_iterator_nth() {\n         let v = &[0, 1, 2, 3, 4];"}]}