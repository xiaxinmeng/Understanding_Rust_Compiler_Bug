{"sha": "e14b34c386ad2809e937e0e6e0379c5cc5474954", "node_id": "C_kwDOAAsO6NoAKGUxNGIzNGMzODZhZDI4MDllOTM3ZTBlNmUwMzc5YzVjYzU0NzQ5NTQ", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-06-14T08:50:20Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-06-14T14:12:34Z"}, "message": "account for endianness in debuginfo for const args", "tree": {"sha": "6fe4f81a06d5869ba2b18fe91a699e79fd74c49e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fe4f81a06d5869ba2b18fe91a699e79fd74c49e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e14b34c386ad2809e937e0e6e0379c5cc5474954", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e14b34c386ad2809e937e0e6e0379c5cc5474954", "html_url": "https://github.com/rust-lang/rust/commit/e14b34c386ad2809e937e0e6e0379c5cc5474954", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e14b34c386ad2809e937e0e6e0379c5cc5474954/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "060acc97db878964b6229dc89a657201f4232b14", "url": "https://api.github.com/repos/rust-lang/rust/commits/060acc97db878964b6229dc89a657201f4232b14", "html_url": "https://github.com/rust-lang/rust/commit/060acc97db878964b6229dc89a657201f4232b14"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "8755d91818d229ecf5117b054f8c3c43fb598206", "filename": "compiler/rustc_codegen_ssa/src/debuginfo/type_names.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e14b34c386ad2809e937e0e6e0379c5cc5474954/compiler%2Frustc_codegen_ssa%2Fsrc%2Fdebuginfo%2Ftype_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e14b34c386ad2809e937e0e6e0379c5cc5474954/compiler%2Frustc_codegen_ssa%2Fsrc%2Fdebuginfo%2Ftype_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fdebuginfo%2Ftype_names.rs?ref=e14b34c386ad2809e937e0e6e0379c5cc5474954", "patch": "@@ -707,12 +707,15 @@ fn push_const_param<'tcx>(tcx: TyCtxt<'tcx>, ct: ty::Const<'tcx>, output: &mut S\n                 hcx.while_hashing_spans(false, |hcx| ct.to_valtree().hash_stable(hcx, &mut hasher));\n                 // Let's only emit 64 bits of the hash value. That should be plenty for\n                 // avoiding collisions and will make the emitted type names shorter.\n-                let hash: u64 = hasher.finish();\n+                // Note: Don't use `StableHashResult` impl of `u64` here directly, since that\n+                // would lead to endianness problems.\n+                let hash: u128 = hasher.finish();\n+                let hash_short = (hash.to_le() as u64).to_le();\n \n                 if cpp_like_debuginfo(tcx) {\n-                    write!(output, \"CONST${:x}\", hash)\n+                    write!(output, \"CONST${:x}\", hash_short)\n                 } else {\n-                    write!(output, \"{{CONST#{:x}}}\", hash)\n+                    write!(output, \"{{CONST#{:x}}}\", hash_short)\n                 }\n             }\n         },"}, {"sha": "60fb06d409c490b86d2ec556382a20016fde0cdd", "filename": "src/test/debuginfo/function-names.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e14b34c386ad2809e937e0e6e0379c5cc5474954/src%2Ftest%2Fdebuginfo%2Ffunction-names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e14b34c386ad2809e937e0e6e0379c5cc5474954/src%2Ftest%2Fdebuginfo%2Ffunction-names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ffunction-names.rs?ref=e14b34c386ad2809e937e0e6e0379c5cc5474954", "patch": "@@ -37,7 +37,7 @@\n // Const generic parameter\n // gdb-command:info functions -q function_names::const_generic_fn.*\n // gdb-check:[...]static fn function_names::const_generic_fn_bool<false>();\n-// gdb-check:[...]static fn function_names::const_generic_fn_non_int<{CONST#3fcd7c34c1555be6}>();\n+// gdb-check:[...]static fn function_names::const_generic_fn_non_int<{CONST#6348c650c7b26618}>();\n // gdb-check:[...]static fn function_names::const_generic_fn_signed_int<-7>();\n // gdb-check:[...]static fn function_names::const_generic_fn_unsigned_int<14>();\n \n@@ -76,7 +76,7 @@\n // Const generic parameter\n // cdb-command:x a!function_names::const_generic_fn*\n // cdb-check:[...] a!function_names::const_generic_fn_bool<false> (void)\n-// cdb-check:[...] a!function_names::const_generic_fn_non_int<CONST$3fcd7c34c1555be6> (void)\n+// cdb-check:[...] a!function_names::const_generic_fn_non_int<CONST$6348c650c7b26618> (void)\n // cdb-check:[...] a!function_names::const_generic_fn_unsigned_int<14> (void)\n // cdb-check:[...] a!function_names::const_generic_fn_signed_int<-7> (void)\n "}]}