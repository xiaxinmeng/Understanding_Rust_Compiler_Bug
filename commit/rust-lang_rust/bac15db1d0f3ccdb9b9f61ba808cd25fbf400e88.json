{"sha": "bac15db1d0f3ccdb9b9f61ba808cd25fbf400e88", "node_id": "C_kwDOAAsO6NoAKGJhYzE1ZGIxZDBmM2NjZGI5YjlmNjFiYTgwOGNkMjVmYmY0MDBlODg", "commit": {"author": {"name": "Oleksii Lozovskyi", "email": "me@ilammy.net", "date": "2022-09-24T13:05:25Z"}, "committer": {"name": "Oleksii Lozovskyi", "email": "me@ilammy.net", "date": "2023-02-09T03:28:00Z"}, "message": "Emit basic XRay instrumentation attributes\n\nAdd the attributes to functions according to the settings.\n\n\"xray-always\" overrides \"xray-never\", and they both override\n\"xray-ignore-loops\" and \"xray-instruction-threshold\", but we'll\nlet lints deal with warnings about silly attribute combinations.", "tree": {"sha": "4f0a6cdd8172693f1b0fc72b5466cede2b9f00e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f0a6cdd8172693f1b0fc72b5466cede2b9f00e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bac15db1d0f3ccdb9b9f61ba808cd25fbf400e88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bac15db1d0f3ccdb9b9f61ba808cd25fbf400e88", "html_url": "https://github.com/rust-lang/rust/commit/bac15db1d0f3ccdb9b9f61ba808cd25fbf400e88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bac15db1d0f3ccdb9b9f61ba808cd25fbf400e88/comments", "author": {"login": "ilammy", "id": 1256587, "node_id": "MDQ6VXNlcjEyNTY1ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1256587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilammy", "html_url": "https://github.com/ilammy", "followers_url": "https://api.github.com/users/ilammy/followers", "following_url": "https://api.github.com/users/ilammy/following{/other_user}", "gists_url": "https://api.github.com/users/ilammy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilammy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilammy/subscriptions", "organizations_url": "https://api.github.com/users/ilammy/orgs", "repos_url": "https://api.github.com/users/ilammy/repos", "events_url": "https://api.github.com/users/ilammy/events{/privacy}", "received_events_url": "https://api.github.com/users/ilammy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ilammy", "id": 1256587, "node_id": "MDQ6VXNlcjEyNTY1ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1256587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilammy", "html_url": "https://github.com/ilammy", "followers_url": "https://api.github.com/users/ilammy/followers", "following_url": "https://api.github.com/users/ilammy/following{/other_user}", "gists_url": "https://api.github.com/users/ilammy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilammy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilammy/subscriptions", "organizations_url": "https://api.github.com/users/ilammy/orgs", "repos_url": "https://api.github.com/users/ilammy/repos", "events_url": "https://api.github.com/users/ilammy/events{/privacy}", "received_events_url": "https://api.github.com/users/ilammy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3cadd2dcfe37836cdbfd6c5871bd8398748ac3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3cadd2dcfe37836cdbfd6c5871bd8398748ac3f", "html_url": "https://github.com/rust-lang/rust/commit/b3cadd2dcfe37836cdbfd6c5871bd8398748ac3f"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "7a4ec494c8e7fab862d7a8ab77a1916c3b41f7a6", "filename": "compiler/rustc_codegen_llvm/src/attributes.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/bac15db1d0f3ccdb9b9f61ba808cd25fbf400e88/compiler%2Frustc_codegen_llvm%2Fsrc%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bac15db1d0f3ccdb9b9f61ba808cd25fbf400e88/compiler%2Frustc_codegen_llvm%2Fsrc%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fattributes.rs?ref=bac15db1d0f3ccdb9b9f61ba808cd25fbf400e88", "patch": "@@ -134,6 +134,34 @@ fn instrument_function_attr<'ll>(cx: &CodegenCx<'ll, '_>) -> SmallVec<[&'ll Attr\n             &mcount_name,\n         ));\n     }\n+    if let Some(options) = &cx.sess().opts.unstable_opts.instrument_xray {\n+        // XRay instrumentation is similar to __cyg_profile_func_{enter,exit}.\n+        // Function prologue and epilogue are instrumented with NOP sleds,\n+        // a runtime library later replaces them with detours into tracing code.\n+        if options.always {\n+            attrs.push(llvm::CreateAttrStringValue(cx.llcx, \"function-instrument\", \"xray-always\"));\n+        }\n+        if options.never {\n+            attrs.push(llvm::CreateAttrStringValue(cx.llcx, \"function-instrument\", \"xray-never\"));\n+        }\n+        if options.ignore_loops {\n+            attrs.push(llvm::CreateAttrString(cx.llcx, \"xray-ignore-loops\"));\n+        }\n+        // LLVM will not choose the default for us, but rather requires specific\n+        // threshold in absence of \"xray-always\". Use the same default as Clang.\n+        let threshold = options.instruction_threshold.unwrap_or(200);\n+        attrs.push(llvm::CreateAttrStringValue(\n+            cx.llcx,\n+            \"xray-instruction-threshold\",\n+            &threshold.to_string(),\n+        ));\n+        if options.skip_entry {\n+            attrs.push(llvm::CreateAttrString(cx.llcx, \"xray-skip-entry\"));\n+        }\n+        if options.skip_exit {\n+            attrs.push(llvm::CreateAttrString(cx.llcx, \"xray-skip-exit\"));\n+        }\n+    }\n     attrs\n }\n "}]}