{"sha": "0f1d5760ba5ea2d2831002bbed50306a3d6ee535", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmMWQ1NzYwYmE1ZWEyZDI4MzEwMDJiYmVkNTAzMDZhM2Q2ZWU1MzU=", "commit": {"author": {"name": "Ruben Schmidmeister", "email": "ruben.schmidmeister@icloud.com", "date": "2019-04-24T18:14:29Z"}, "committer": {"name": "Ruben Schmidmeister", "email": "ruben.schmidmeister@icloud.com", "date": "2019-04-24T19:01:09Z"}, "message": "Fix auto detection of windows newlines for inputs with multibyte chars", "tree": {"sha": "eed7f2a5461013c5f3a153e10b9edfbab39a55aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eed7f2a5461013c5f3a153e10b9edfbab39a55aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f1d5760ba5ea2d2831002bbed50306a3d6ee535", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEU0FXzFYkrmfOhhqxKTh7Wnqvhj8FAlzAsnUACgkQKTh7Wnqv\nhj8f8Af+NwVtgCF2MLb+S6/e5KR5xrOFdHufhUPvQON1K7R0u5CzrRHcHpw5uBIc\nZ7ixZQqoyFzvzo3Gdgz23fiOP+g8VtYFQQMCxABYDtjJdJg+VypCOGtLOwxk2APT\nbLD+zvdKruXI6BG2v56rEmnlKyNvwkfQyrWggqFJ0PodSV7nD0vii2B85o8mYGRo\nXIOUi/SPKux2zNh0G9f621gS0a9/HvdtXjJJRUpnG1/tJDyFyswhd3bB2dKZ2C2y\nkvziqLPoG0VhcaPh1rIsElEQsdXxNqeAOSjGxbsAI3HJwkXlIVkmDEqixwmP6kJy\n0M+jYmcVilC+rmay7teE2DAg9RECsA==\n=K4Ba\n-----END PGP SIGNATURE-----", "payload": "tree eed7f2a5461013c5f3a153e10b9edfbab39a55aa\nparent 20c8d8aabc74b2b045f96afcade2383796019ff4\nauthor Ruben Schmidmeister <ruben.schmidmeister@icloud.com> 1556129669 +0200\ncommitter Ruben Schmidmeister <ruben.schmidmeister@icloud.com> 1556132469 +0200\n\nFix auto detection of windows newlines for inputs with multibyte chars\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f1d5760ba5ea2d2831002bbed50306a3d6ee535", "html_url": "https://github.com/rust-lang/rust/commit/0f1d5760ba5ea2d2831002bbed50306a3d6ee535", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f1d5760ba5ea2d2831002bbed50306a3d6ee535/comments", "author": {"login": "bash", "id": 4602612, "node_id": "MDQ6VXNlcjQ2MDI2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/4602612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bash", "html_url": "https://github.com/bash", "followers_url": "https://api.github.com/users/bash/followers", "following_url": "https://api.github.com/users/bash/following{/other_user}", "gists_url": "https://api.github.com/users/bash/gists{/gist_id}", "starred_url": "https://api.github.com/users/bash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bash/subscriptions", "organizations_url": "https://api.github.com/users/bash/orgs", "repos_url": "https://api.github.com/users/bash/repos", "events_url": "https://api.github.com/users/bash/events{/privacy}", "received_events_url": "https://api.github.com/users/bash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bash", "id": 4602612, "node_id": "MDQ6VXNlcjQ2MDI2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/4602612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bash", "html_url": "https://github.com/bash", "followers_url": "https://api.github.com/users/bash/followers", "following_url": "https://api.github.com/users/bash/following{/other_user}", "gists_url": "https://api.github.com/users/bash/gists{/gist_id}", "starred_url": "https://api.github.com/users/bash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bash/subscriptions", "organizations_url": "https://api.github.com/users/bash/orgs", "repos_url": "https://api.github.com/users/bash/repos", "events_url": "https://api.github.com/users/bash/events{/privacy}", "received_events_url": "https://api.github.com/users/bash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20c8d8aabc74b2b045f96afcade2383796019ff4", "url": "https://api.github.com/repos/rust-lang/rust/commits/20c8d8aabc74b2b045f96afcade2383796019ff4", "html_url": "https://github.com/rust-lang/rust/commit/20c8d8aabc74b2b045f96afcade2383796019ff4"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "f95413db025ee112d2d3ed35b5e509a16c50ff47", "filename": "src/formatting/newline_style.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0f1d5760ba5ea2d2831002bbed50306a3d6ee535/src%2Fformatting%2Fnewline_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1d5760ba5ea2d2831002bbed50306a3d6ee535/src%2Fformatting%2Fnewline_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fformatting%2Fnewline_style.rs?ref=0f1d5760ba5ea2d2831002bbed50306a3d6ee535", "patch": "@@ -41,7 +41,7 @@ const LINE_FEED: char = '\\n';\n const CARRIAGE_RETURN: char = '\\r';\n \n fn auto_detect_newline_style(raw_input_text: &str) -> EffectiveNewlineStyle {\n-    if let Some(pos) = raw_input_text.find(LINE_FEED) {\n+    if let Some(pos) = raw_input_text.chars().position(|ch| ch == LINE_FEED) {\n         let pos = pos.saturating_sub(1);\n         if let Some(CARRIAGE_RETURN) = raw_input_text.chars().nth(pos) {\n             EffectiveNewlineStyle::Windows\n@@ -94,6 +94,14 @@ mod tests {\n         );\n     }\n \n+    #[test]\n+    fn auto_detects_windows_newlines_with_multibyte_char_on_first_line() {\n+        assert_eq!(\n+            EffectiveNewlineStyle::Windows,\n+            auto_detect_newline_style(\"A \ud83c\udfa2 of a first line\\r\\nTwo\\r\\nThree\")\n+        );\n+    }\n+\n     #[test]\n     fn falls_back_to_native_newlines_if_no_newlines_are_found() {\n         let expected_newline_style = if cfg!(windows) {"}]}