{"sha": "c93cb40b90b5f862bf448136cbe608f43ae0f62f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5M2NiNDBiOTBiNWY4NjJiZjQ0ODEzNmNiZTYwOGY0M2FlMGY2MmY=", "commit": {"author": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-06-21T09:44:59Z"}, "committer": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-07-03T01:01:36Z"}, "message": "Move `os_str_bytes` to `sys::unix` and reuse it on other platforms.", "tree": {"sha": "5dc4e6408de2db97d863c62ee9298b24fa0bde53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5dc4e6408de2db97d863c62ee9298b24fa0bde53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c93cb40b90b5f862bf448136cbe608f43ae0f62f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c93cb40b90b5f862bf448136cbe608f43ae0f62f", "html_url": "https://github.com/rust-lang/rust/commit/c93cb40b90b5f862bf448136cbe608f43ae0f62f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c93cb40b90b5f862bf448136cbe608f43ae0f62f/comments", "author": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "798baebde1fe77e5a660490ec64e727a5d79970d", "url": "https://api.github.com/repos/rust-lang/rust/commits/798baebde1fe77e5a660490ec64e727a5d79970d", "html_url": "https://github.com/rust-lang/rust/commit/798baebde1fe77e5a660490ec64e727a5d79970d"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "185b68c0a7803598107d1ac5acfdc5cd548d56d3", "filename": "library/std/src/sys/hermit/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c93cb40b90b5f862bf448136cbe608f43ae0f62f/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93cb40b90b5f862bf448136cbe608f43ae0f62f/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fmod.rs?ref=c93cb40b90b5f862bf448136cbe608f43ae0f62f", "patch": "@@ -32,6 +32,8 @@ pub mod memchr;\n pub mod mutex;\n pub mod net;\n pub mod os;\n+#[path = \"../unix/os_str.rs\"]\n+pub mod os_str;\n #[path = \"../unix/path.rs\"]\n pub mod path;\n #[path = \"../unsupported/pipe.rs\"]\n@@ -47,7 +49,6 @@ pub mod thread_local_key;\n pub mod time;\n \n use crate::io::ErrorKind;\n-pub use crate::sys_common::os_str_bytes as os_str;\n \n #[allow(unused_extern_crates)]\n pub extern crate hermit_abi as abi;"}, {"sha": "a2a763c2b4e0f3f3c12e94525dcc3555fea9ad54", "filename": "library/std/src/sys/sgx/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c93cb40b90b5f862bf448136cbe608f43ae0f62f/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93cb40b90b5f862bf448136cbe608f43ae0f62f/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fmod.rs?ref=c93cb40b90b5f862bf448136cbe608f43ae0f62f", "patch": "@@ -26,6 +26,8 @@ pub mod memchr;\n pub mod mutex;\n pub mod net;\n pub mod os;\n+#[path = \"../unix/os_str.rs\"]\n+pub mod os_str;\n pub mod path;\n #[path = \"../unsupported/pipe.rs\"]\n pub mod pipe;\n@@ -37,8 +39,6 @@ pub mod thread;\n pub mod thread_local_key;\n pub mod time;\n \n-pub use crate::sys_common::os_str_bytes as os_str;\n-\n // SAFETY: must be called only once during runtime initialization.\n // NOTE: this is not guaranteed to run, for example when Rust code is called externally.\n pub unsafe fn init(argc: isize, argv: *const *const u8) {"}, {"sha": "44bb5ffd35d38580edb5fb9a22a78668361c2448", "filename": "library/std/src/sys/unix/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c93cb40b90b5f862bf448136cbe608f43ae0f62f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93cb40b90b5f862bf448136cbe608f43ae0f62f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fmod.rs?ref=c93cb40b90b5f862bf448136cbe608f43ae0f62f", "patch": "@@ -30,6 +30,7 @@ pub mod net;\n #[cfg(target_os = \"l4re\")]\n pub use self::l4re::net;\n pub mod os;\n+pub mod os_str;\n pub mod path;\n pub mod pipe;\n pub mod process;\n@@ -42,8 +43,6 @@ pub mod thread_local_dtor;\n pub mod thread_local_key;\n pub mod time;\n \n-pub use crate::sys_common::os_str_bytes as os_str;\n-\n // SAFETY: must be called only once during runtime initialization.\n // NOTE: this is not guaranteed to run, for example when Rust code is called externally.\n pub unsafe fn init(argc: isize, argv: *const *const u8) {"}, {"sha": "ae96d6b4df44e349f6334173208808c212666968", "filename": "library/std/src/sys/unix/os_str.rs", "status": "renamed", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c93cb40b90b5f862bf448136cbe608f43ae0f62f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93cb40b90b5f862bf448136cbe608f43ae0f62f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fos_str.rs?ref=c93cb40b90b5f862bf448136cbe608f43ae0f62f", "patch": "@@ -13,6 +13,7 @@ use crate::sys_common::{AsInner, IntoInner};\n use core::str::lossy::{Utf8Lossy, Utf8LossyChunk};\n \n #[cfg(test)]\n+#[path = \"../unix/os_str/tests.rs\"]\n mod tests;\n \n #[derive(Hash)]", "previous_filename": "library/std/src/sys_common/os_str_bytes.rs"}, {"sha": "379673781557389d37828b7431b05a080a12a954", "filename": "library/std/src/sys/unix/os_str/tests.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/c93cb40b90b5f862bf448136cbe608f43ae0f62f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fos_str%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93cb40b90b5f862bf448136cbe608f43ae0f62f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fos_str%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fos_str%2Ftests.rs?ref=c93cb40b90b5f862bf448136cbe608f43ae0f62f", "previous_filename": "library/std/src/sys_common/os_str_bytes/tests.rs"}, {"sha": "a06b44e96a923ae6fbe6940151d706edda592fb6", "filename": "library/std/src/sys/unsupported/common.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93cb40b90b5f862bf448136cbe608f43ae0f62f/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93cb40b90b5f862bf448136cbe608f43ae0f62f/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fcommon.rs?ref=c93cb40b90b5f862bf448136cbe608f43ae0f62f", "patch": "@@ -4,8 +4,6 @@ pub mod memchr {\n     pub use core::slice::memchr::{memchr, memrchr};\n }\n \n-pub use crate::sys_common::os_str_bytes as os_str;\n-\n // This is not necessarily correct. May want to consider making it part of the\n // spec definition?\n use crate::os::raw::c_char;"}, {"sha": "a1276193bda37e86a81522558e6b7825e458fe78", "filename": "library/std/src/sys/unsupported/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93cb40b90b5f862bf448136cbe608f43ae0f62f/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93cb40b90b5f862bf448136cbe608f43ae0f62f/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fmod.rs?ref=c93cb40b90b5f862bf448136cbe608f43ae0f62f", "patch": "@@ -11,6 +11,8 @@ pub mod io;\n pub mod mutex;\n pub mod net;\n pub mod os;\n+#[path = \"../unix/os_str.rs\"]\n+pub mod os_str;\n #[path = \"../unix/path.rs\"]\n pub mod path;\n pub mod pipe;"}, {"sha": "8d62335aae5eb9d5aff765bc37545359a278a164", "filename": "library/std/src/sys/wasi/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c93cb40b90b5f862bf448136cbe608f43ae0f62f/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93cb40b90b5f862bf448136cbe608f43ae0f62f/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fmod.rs?ref=c93cb40b90b5f862bf448136cbe608f43ae0f62f", "patch": "@@ -32,7 +32,8 @@ pub mod io;\n pub mod mutex;\n pub mod net;\n pub mod os;\n-pub use crate::sys_common::os_str_bytes as os_str;\n+#[path = \"../unix/os_str.rs\"]\n+pub mod os_str;\n #[path = \"../unix/path.rs\"]\n pub mod path;\n #[path = \"../unsupported/pipe.rs\"]"}, {"sha": "c81d653a5e38ffa876054ae476c33a5055220f30", "filename": "library/std/src/sys/wasm/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c93cb40b90b5f862bf448136cbe608f43ae0f62f/library%2Fstd%2Fsrc%2Fsys%2Fwasm%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93cb40b90b5f862bf448136cbe608f43ae0f62f/library%2Fstd%2Fsrc%2Fsys%2Fwasm%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwasm%2Fmod.rs?ref=c93cb40b90b5f862bf448136cbe608f43ae0f62f", "patch": "@@ -30,6 +30,8 @@ pub mod io;\n pub mod net;\n #[path = \"../unsupported/os.rs\"]\n pub mod os;\n+#[path = \"../unix/os_str.rs\"]\n+pub mod os_str;\n #[path = \"../unix/path.rs\"]\n pub mod path;\n #[path = \"../unsupported/pipe.rs\"]\n@@ -45,8 +47,6 @@ pub mod thread_local_key;\n #[path = \"../unsupported/time.rs\"]\n pub mod time;\n \n-pub use crate::sys_common::os_str_bytes as os_str;\n-\n cfg_if::cfg_if! {\n     if #[cfg(target_feature = \"atomics\")] {\n         #[path = \"atomics/condvar.rs\"]"}, {"sha": "894440564b738d3772dd5c63bbf8a65ee2752c4d", "filename": "library/std/src/sys_common/mod.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c93cb40b90b5f862bf448136cbe608f43ae0f62f/library%2Fstd%2Fsrc%2Fsys_common%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93cb40b90b5f862bf448136cbe608f43ae0f62f/library%2Fstd%2Fsrc%2Fsys_common%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fmod.rs?ref=c93cb40b90b5f862bf448136cbe608f43ae0f62f", "patch": "@@ -26,10 +26,6 @@ pub mod fs;\n pub mod io;\n pub mod memchr;\n pub mod mutex;\n-// `doc` is required because `sys/mod.rs` imports `unix/ext/mod.rs` on Windows\n-// when generating documentation.\n-#[cfg(any(doc, not(windows)))]\n-pub mod os_str_bytes;\n pub mod process;\n pub mod remutex;\n #[macro_use]"}]}