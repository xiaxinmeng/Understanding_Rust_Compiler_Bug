{"sha": "663749beab2eeaaaf2b7d24fe2f721237d1d4dc0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2Mzc0OWJlYWIyZWVhYWFmMmI3ZDI0ZmUyZjcyMTIzN2QxZDRkYzA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-25T10:47:36Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-25T10:48:00Z"}, "message": "Minor", "tree": {"sha": "c40e4d916b2efcd4c7debabbb183b05c08bb7fad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c40e4d916b2efcd4c7debabbb183b05c08bb7fad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/663749beab2eeaaaf2b7d24fe2f721237d1d4dc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/663749beab2eeaaaf2b7d24fe2f721237d1d4dc0", "html_url": "https://github.com/rust-lang/rust/commit/663749beab2eeaaaf2b7d24fe2f721237d1d4dc0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/663749beab2eeaaaf2b7d24fe2f721237d1d4dc0/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f91478e50dc5c2a87235e9be8bd91e3f62de4b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f91478e50dc5c2a87235e9be8bd91e3f62de4b4", "html_url": "https://github.com/rust-lang/rust/commit/4f91478e50dc5c2a87235e9be8bd91e3f62de4b4"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "a77758675a0c7f054c629de2ed443216243ab776", "filename": "crates/hir/src/doc_links.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/663749beab2eeaaaf2b7d24fe2f721237d1d4dc0/crates%2Fhir%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/663749beab2eeaaaf2b7d24fe2f721237d1d4dc0/crates%2Fhir%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fdoc_links.rs?ref=663749beab2eeaaaf2b7d24fe2f721237d1d4dc0", "patch": "@@ -2,12 +2,12 @@\n \n use std::iter::once;\n \n+use hir_def::{db::DefDatabase, resolver::Resolver};\n use itertools::Itertools;\n+use syntax::ast::Path;\n use url::Url;\n \n use crate::{db::HirDatabase, Adt, AsName, Crate, Hygiene, ItemInNs, ModPath, ModuleDef};\n-use hir_def::{db::DefDatabase, resolver::Resolver};\n-use syntax::ast::Path;\n \n pub fn resolve_doc_link<T: Resolvable + Clone, D: DefDatabase + HirDatabase>(\n     db: &D,\n@@ -16,12 +16,9 @@ pub fn resolve_doc_link<T: Resolvable + Clone, D: DefDatabase + HirDatabase>(\n     link_target: &str,\n ) -> Option<(String, String)> {\n     try_resolve_intra(db, definition, link_text, &link_target).or_else(|| {\n-        if let Some(definition) = definition.clone().try_into_module_def() {\n-            try_resolve_path(db, &definition, &link_target)\n-                .map(|target| (target, link_text.to_string()))\n-        } else {\n-            None\n-        }\n+        let definition = definition.clone().try_into_module_def()?;\n+        try_resolve_path(db, &definition, &link_target)\n+            .map(|target| (target, link_text.to_string()))\n     })\n }\n \n@@ -57,7 +54,7 @@ fn try_resolve_intra<T: Resolvable, D: DefDatabase + HirDatabase>(\n         Some(ns @ Namespace::Types) => (resolved.types?.0, ns),\n         Some(ns @ Namespace::Values) => (resolved.values?.0, ns),\n         // FIXME:\n-        Some(Namespace::Macros) => None?,\n+        Some(Namespace::Macros) => return None,\n     };\n \n     // Get the filepath of the final symbol"}]}