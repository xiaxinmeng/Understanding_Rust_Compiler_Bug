{"sha": "c5d74be4eddbfdd6f1f53839d71f5240c060e8b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1ZDc0YmU0ZWRkYmZkZDZmMWY1MzgzOWQ3MWY1MjQwYzA2MGU4YjM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-03-19T09:33:16Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-03-24T18:01:28Z"}, "message": "remove `empty_substs_for_node_id`", "tree": {"sha": "19d2320c9eeed95f30b9c2b78199bda05f8146a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19d2320c9eeed95f30b9c2b78199bda05f8146a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5d74be4eddbfdd6f1f53839d71f5240c060e8b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5d74be4eddbfdd6f1f53839d71f5240c060e8b3", "html_url": "https://github.com/rust-lang/rust/commit/c5d74be4eddbfdd6f1f53839d71f5240c060e8b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5d74be4eddbfdd6f1f53839d71f5240c060e8b3/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3ac50927aba5c11d1239e3407e523d002f947d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3ac50927aba5c11d1239e3407e523d002f947d4", "html_url": "https://github.com/rust-lang/rust/commit/f3ac50927aba5c11d1239e3407e523d002f947d4"}], "stats": {"total": 14, "additions": 3, "deletions": 11}, "files": [{"sha": "1d8daf9d86b4ad2129dfe4c71be10a3a9c3f1da0", "filename": "src/librustc_trans/trans/base.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c5d74be4eddbfdd6f1f53839d71f5240c060e8b3/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5d74be4eddbfdd6f1f53839d71f5240c060e8b3/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbase.rs?ref=c5d74be4eddbfdd6f1f53839d71f5240c060e8b3", "patch": "@@ -2259,8 +2259,8 @@ pub fn trans_item(ccx: &CrateContext, item: &hir::Item) {\n                 // compilation unit that references the item, so it will still get\n                 // translated everywhere it's needed.\n                 for (ref ccx, is_origin) in ccx.maybe_iter(!from_external && trans_everywhere) {\n-                    let empty_substs = ccx.empty_substs_for_node_id(item.id);\n                     let def_id = tcx.map.local_def_id(item.id);\n+                    let empty_substs = ccx.empty_substs_for_def_id(def_id);\n                     let llfn = Callee::def(ccx, def_id, empty_substs).reify(ccx).val;\n                     trans_fn(ccx, &decl, &body, llfn, empty_substs, item.id);\n                     set_global_section(ccx, llfn, item);\n@@ -2298,8 +2298,8 @@ pub fn trans_item(ccx: &CrateContext, item: &hir::Item) {\n                     if sig.generics.ty_params.is_empty() {\n                         let trans_everywhere = attr::requests_inline(&impl_item.attrs);\n                         for (ref ccx, is_origin) in ccx.maybe_iter(trans_everywhere) {\n-                            let empty_substs = ccx.empty_substs_for_node_id(impl_item.id);\n                             let def_id = tcx.map.local_def_id(impl_item.id);\n+                            let empty_substs = ccx.empty_substs_for_def_id(def_id);\n                             let llfn = Callee::def(ccx, def_id, empty_substs).reify(ccx).val;\n                             trans_fn(ccx, &sig.decl, body, llfn, empty_substs, impl_item.id);\n                             update_linkage(ccx, llfn, Some(impl_item.id),"}, {"sha": "046e05dd0710af2eb152a7a6d32faef19efffd2f", "filename": "src/librustc_trans/trans/context.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c5d74be4eddbfdd6f1f53839d71f5240c060e8b3/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5d74be4eddbfdd6f1f53839d71f5240c060e8b3/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs?ref=c5d74be4eddbfdd6f1f53839d71f5240c060e8b3", "patch": "@@ -856,14 +856,6 @@ impl<'b, 'tcx> CrateContext<'b, 'tcx> {\n         }\n     }\n \n-    /// Given the node-id of some local item that has no type\n-    /// parameters, make a suitable \"empty substs\" for it.\n-    pub fn empty_substs_for_node_id(&self, item_node_id: ast::NodeId)\n-                                    -> &'tcx Substs<'tcx> {\n-        let item_def_id = self.tcx().map.local_def_id(item_node_id);\n-        self.empty_substs_for_def_id(item_def_id)\n-    }\n-\n     /// Given the def-id of some item that has no type parameters, make\n     /// a suitable \"empty substs\" for it.\n     pub fn empty_substs_for_def_id(&self, item_def_id: DefId) -> &'tcx Substs<'tcx> {"}, {"sha": "530b99cba920c1a33c9f8bfdc72c7e7815b6c281", "filename": "src/librustc_trans/trans/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c5d74be4eddbfdd6f1f53839d71f5240c060e8b3/src%2Flibrustc_trans%2Ftrans%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5d74be4eddbfdd6f1f53839d71f5240c060e8b3/src%2Flibrustc_trans%2Ftrans%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Finline.rs?ref=c5d74be4eddbfdd6f1f53839d71f5240c060e8b3", "patch": "@@ -144,8 +144,8 @@ fn instantiate_inline(ccx: &CrateContext, fn_id: DefId) -> Option<DefId> {\n                 let impl_tpt = tcx.lookup_item_type(impl_did);\n                 if impl_tpt.generics.types.is_empty() &&\n                         sig.generics.ty_params.is_empty() {\n-                    let empty_substs = ccx.empty_substs_for_node_id(impl_item.id);\n                     let def_id = tcx.map.local_def_id(impl_item.id);\n+                    let empty_substs = ccx.empty_substs_for_def_id(def_id);\n                     let llfn = Callee::def(ccx, def_id, empty_substs).reify(ccx).val;\n                     trans_fn(ccx,\n                              &sig.decl,"}]}