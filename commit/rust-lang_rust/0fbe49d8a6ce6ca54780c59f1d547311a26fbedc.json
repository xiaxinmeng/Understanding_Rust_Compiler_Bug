{"sha": "0fbe49d8a6ce6ca54780c59f1d547311a26fbedc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmYmU0OWQ4YTZjZTZjYTU0NzgwYzU5ZjFkNTQ3MzExYTI2ZmJlZGM=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-04-24T06:01:16Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-04-24T06:01:16Z"}, "message": "UI test cleanup: Extract needless_range_loop tests", "tree": {"sha": "cd475744d3ccdaa54584463d3845d91bfd339993", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd475744d3ccdaa54584463d3845d91bfd339993"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0fbe49d8a6ce6ca54780c59f1d547311a26fbedc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEEj4U0bmbiMSg/mWqvgqphyqETl+YFAly/+98QHGRldkBwaGFu\nc2NoLm5ldAAKCRCCqmHKoROX5lAID/91C8kWD2Mdczxh+RUQ8hbzI2AZkmWJFMcI\nuHx0/rMMjMWkLFdK7HhSZk4KB+d98DsYQAHR4cwfMHoema840tEKskUoXBwzDJJn\nncaTWkFh8wjsnxHA2GreQrp3GFlZGazVTyJGnpfHlWhvER7FUNINZXuq/9eOo7g+\n9cNmGAZZGrHPbkwB2O4g648hu5Y86XS90xZZHj7n0jKobIaedaesdIpwv86qfl5y\nVXH6tkpYQ1CKhGhWMwSeY55PpHsuKmNObURCe6+hXFXpT138+njlJNJ//Nfnsp4D\n/hS+a9sHVk4d8u1MlT6gO+w3AmsuheXrfVshdTYtqeI5u0qsy6SNdn7jq4yEQa/d\nrIyvD4rFEMo6sKcxFzEQ3VAa+vA1STedJk0u4LOuxRc7rwObhsKH+54ihCe/wYBL\npgHD5VZhbogKr1LYG/AdI2uAG0lE8424D8o4kgI11jHnJZBF+LMjZnMI3xdPszjG\nRPjPMVxPGd5y2roF3ikfErVkW61HVY8CInYJZsFVJDAVNj7w9duoXq4HeJ9nOlDK\npIi6LXr0KKYKgA/CYKwk1yQRLmxzddDcfw+9pxs6g8SKjcRW2rq7HcRtS4iG2RyS\npbHb29gEL9VATlh3vmBnE1MiaSn/CM/6AViUYa1cDG2tasGWAz75ZRffgr+uHwD9\nU1rWADISkg==\n=jZa9\n-----END PGP SIGNATURE-----", "payload": "tree cd475744d3ccdaa54584463d3845d91bfd339993\nparent 9897442f27f15840b459c3e8a480c9082775fbd1\nauthor Philipp Hansch <dev@phansch.net> 1556085676 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1556085676 +0200\n\nUI test cleanup: Extract needless_range_loop tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0fbe49d8a6ce6ca54780c59f1d547311a26fbedc", "html_url": "https://github.com/rust-lang/rust/commit/0fbe49d8a6ce6ca54780c59f1d547311a26fbedc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0fbe49d8a6ce6ca54780c59f1d547311a26fbedc/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9897442f27f15840b459c3e8a480c9082775fbd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/9897442f27f15840b459c3e8a480c9082775fbd1", "html_url": "https://github.com/rust-lang/rust/commit/9897442f27f15840b459c3e8a480c9082775fbd1"}], "stats": {"total": 462, "additions": 234, "deletions": 228}, "files": [{"sha": "f13f826b1cc4e803538e54ebbd7dff60a370dde1", "filename": "tests/ui/for_loop.rs", "status": "modified", "additions": 0, "deletions": 63, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/0fbe49d8a6ce6ca54780c59f1d547311a26fbedc/tests%2Fui%2Ffor_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fbe49d8a6ce6ca54780c59f1d547311a26fbedc/tests%2Fui%2Ffor_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop.rs?ref=0fbe49d8a6ce6ca54780c59f1d547311a26fbedc", "patch": "@@ -35,70 +35,7 @@ impl Unrelated {\n #[allow(clippy::many_single_char_names, unused_variables, clippy::into_iter_on_array)]\n fn main() {\n     const MAX_LEN: usize = 42;\n-\n     let mut vec = vec![1, 2, 3, 4];\n-    let vec2 = vec![1, 2, 3, 4];\n-    for i in 0..vec.len() {\n-        println!(\"{}\", vec[i]);\n-    }\n-\n-    for i in 0..vec.len() {\n-        let i = 42; // make a different `i`\n-        println!(\"{}\", vec[i]); // ok, not the `i` of the for-loop\n-    }\n-\n-    for i in 0..vec.len() {\n-        let _ = vec[i];\n-    }\n-\n-    // ICE #746\n-    for j in 0..4 {\n-        println!(\"{:?}\", STATIC[j]);\n-    }\n-\n-    for j in 0..4 {\n-        println!(\"{:?}\", CONST[j]);\n-    }\n-\n-    for i in 0..vec.len() {\n-        println!(\"{} {}\", vec[i], i);\n-    }\n-    for i in 0..vec.len() {\n-        // not an error, indexing more than one variable\n-        println!(\"{} {}\", vec[i], vec2[i]);\n-    }\n-\n-    for i in 0..vec.len() {\n-        println!(\"{}\", vec2[i]);\n-    }\n-\n-    for i in 5..vec.len() {\n-        println!(\"{}\", vec[i]);\n-    }\n-\n-    for i in 0..MAX_LEN {\n-        println!(\"{}\", vec[i]);\n-    }\n-\n-    for i in 0..=MAX_LEN {\n-        println!(\"{}\", vec[i]);\n-    }\n-\n-    for i in 5..10 {\n-        println!(\"{}\", vec[i]);\n-    }\n-\n-    for i in 5..=10 {\n-        println!(\"{}\", vec[i]);\n-    }\n-\n-    for i in 5..vec.len() {\n-        println!(\"{} {}\", vec[i], i);\n-    }\n-\n-    for i in 5..10 {\n-        println!(\"{} {}\", vec[i], i);\n-    }\n \n     for i in 10..0 {\n         println!(\"{}\", i);"}, {"sha": "a18eb20774d596a3450cb71bb9df3aa90e34683f", "filename": "tests/ui/for_loop.stderr", "status": "modified", "additions": 23, "deletions": 155, "changes": 178, "blob_url": "https://github.com/rust-lang/rust/blob/0fbe49d8a6ce6ca54780c59f1d547311a26fbedc/tests%2Fui%2Ffor_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0fbe49d8a6ce6ca54780c59f1d547311a26fbedc/tests%2Fui%2Ffor_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop.stderr?ref=0fbe49d8a6ce6ca54780c59f1d547311a26fbedc", "patch": "@@ -1,137 +1,5 @@\n-error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/for_loop.rs:41:14\n-   |\n-LL |     for i in 0..vec.len() {\n-   |              ^^^^^^^^^^^^\n-   |\n-   = note: `-D clippy::needless-range-loop` implied by `-D warnings`\n-help: consider using an iterator\n-   |\n-LL |     for <item> in &vec {\n-   |         ^^^^^^    ^^^^\n-\n-error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/for_loop.rs:50:14\n-   |\n-LL |     for i in 0..vec.len() {\n-   |              ^^^^^^^^^^^^\n-help: consider using an iterator\n-   |\n-LL |     for <item> in &vec {\n-   |         ^^^^^^    ^^^^\n-\n-error: the loop variable `j` is only used to index `STATIC`.\n-  --> $DIR/for_loop.rs:55:14\n-   |\n-LL |     for j in 0..4 {\n-   |              ^^^^\n-help: consider using an iterator\n-   |\n-LL |     for <item> in &STATIC {\n-   |         ^^^^^^    ^^^^^^^\n-\n-error: the loop variable `j` is only used to index `CONST`.\n-  --> $DIR/for_loop.rs:59:14\n-   |\n-LL |     for j in 0..4 {\n-   |              ^^^^\n-help: consider using an iterator\n-   |\n-LL |     for <item> in &CONST {\n-   |         ^^^^^^    ^^^^^^\n-\n-error: the loop variable `i` is used to index `vec`\n-  --> $DIR/for_loop.rs:63:14\n-   |\n-LL |     for i in 0..vec.len() {\n-   |              ^^^^^^^^^^^^\n-help: consider using an iterator\n-   |\n-LL |     for (i, <item>) in vec.iter().enumerate() {\n-   |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: the loop variable `i` is only used to index `vec2`.\n-  --> $DIR/for_loop.rs:71:14\n-   |\n-LL |     for i in 0..vec.len() {\n-   |              ^^^^^^^^^^^^\n-help: consider using an iterator\n-   |\n-LL |     for <item> in vec2.iter().take(vec.len()) {\n-   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/for_loop.rs:75:14\n-   |\n-LL |     for i in 5..vec.len() {\n-   |              ^^^^^^^^^^^^\n-help: consider using an iterator\n-   |\n-LL |     for <item> in vec.iter().skip(5) {\n-   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^\n-\n-error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/for_loop.rs:79:14\n-   |\n-LL |     for i in 0..MAX_LEN {\n-   |              ^^^^^^^^^^\n-help: consider using an iterator\n-   |\n-LL |     for <item> in vec.iter().take(MAX_LEN) {\n-   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/for_loop.rs:83:14\n-   |\n-LL |     for i in 0..=MAX_LEN {\n-   |              ^^^^^^^^^^^\n-help: consider using an iterator\n-   |\n-LL |     for <item> in vec.iter().take(MAX_LEN + 1) {\n-   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/for_loop.rs:87:14\n-   |\n-LL |     for i in 5..10 {\n-   |              ^^^^^\n-help: consider using an iterator\n-   |\n-LL |     for <item> in vec.iter().take(10).skip(5) {\n-   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/for_loop.rs:91:14\n-   |\n-LL |     for i in 5..=10 {\n-   |              ^^^^^^\n-help: consider using an iterator\n-   |\n-LL |     for <item> in vec.iter().take(10 + 1).skip(5) {\n-   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: the loop variable `i` is used to index `vec`\n-  --> $DIR/for_loop.rs:95:14\n-   |\n-LL |     for i in 5..vec.len() {\n-   |              ^^^^^^^^^^^^\n-help: consider using an iterator\n-   |\n-LL |     for (i, <item>) in vec.iter().enumerate().skip(5) {\n-   |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: the loop variable `i` is used to index `vec`\n-  --> $DIR/for_loop.rs:99:14\n-   |\n-LL |     for i in 5..10 {\n-   |              ^^^^^\n-help: consider using an iterator\n-   |\n-LL |     for (i, <item>) in vec.iter().enumerate().take(10).skip(5) {\n-   |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n error: this range is empty so this for loop will never run\n-  --> $DIR/for_loop.rs:103:14\n+  --> $DIR/for_loop.rs:40:14\n    |\n LL |     for i in 10..0 {\n    |              ^^^^^\n@@ -143,7 +11,7 @@ LL |     for i in (0..10).rev() {\n    |              ^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-  --> $DIR/for_loop.rs:107:14\n+  --> $DIR/for_loop.rs:44:14\n    |\n LL |     for i in 10..=0 {\n    |              ^^^^^^\n@@ -153,7 +21,7 @@ LL |     for i in (0...10).rev() {\n    |              ^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-  --> $DIR/for_loop.rs:111:14\n+  --> $DIR/for_loop.rs:48:14\n    |\n LL |     for i in MAX_LEN..0 {\n    |              ^^^^^^^^^^\n@@ -163,13 +31,13 @@ LL |     for i in (0..MAX_LEN).rev() {\n    |              ^^^^^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-  --> $DIR/for_loop.rs:115:14\n+  --> $DIR/for_loop.rs:52:14\n    |\n LL |     for i in 5..5 {\n    |              ^^^^\n \n error: this range is empty so this for loop will never run\n-  --> $DIR/for_loop.rs:140:14\n+  --> $DIR/for_loop.rs:77:14\n    |\n LL |     for i in 10..5 + 4 {\n    |              ^^^^^^^^^\n@@ -179,7 +47,7 @@ LL |     for i in (5 + 4..10).rev() {\n    |              ^^^^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-  --> $DIR/for_loop.rs:144:14\n+  --> $DIR/for_loop.rs:81:14\n    |\n LL |     for i in (5 + 2)..(3 - 1) {\n    |              ^^^^^^^^^^^^^^^^\n@@ -189,108 +57,108 @@ LL |     for i in ((3 - 1)..(5 + 2)).rev() {\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-  --> $DIR/for_loop.rs:148:14\n+  --> $DIR/for_loop.rs:85:14\n    |\n LL |     for i in (5 + 2)..(8 - 1) {\n    |              ^^^^^^^^^^^^^^^^\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-  --> $DIR/for_loop.rs:170:15\n+  --> $DIR/for_loop.rs:107:15\n    |\n LL |     for _v in vec.iter() {}\n    |               ^^^^^^^^^^\n    |\n    = note: `-D clippy::explicit-iter-loop` implied by `-D warnings`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-  --> $DIR/for_loop.rs:172:15\n+  --> $DIR/for_loop.rs:109:15\n    |\n LL |     for _v in vec.iter_mut() {}\n    |               ^^^^^^^^^^^^^^\n \n error: it is more concise to loop over containers instead of using explicit iteration methods`\n-  --> $DIR/for_loop.rs:175:15\n+  --> $DIR/for_loop.rs:112:15\n    |\n LL |     for _v in out_vec.into_iter() {}\n    |               ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::explicit-into-iter-loop` implied by `-D warnings`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-  --> $DIR/for_loop.rs:178:15\n+  --> $DIR/for_loop.rs:115:15\n    |\n LL |     for _v in array.into_iter() {}\n    |               ^^^^^^^^^^^^^^^^^\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-  --> $DIR/for_loop.rs:183:15\n+  --> $DIR/for_loop.rs:120:15\n    |\n LL |     for _v in [1, 2, 3].iter() {}\n    |               ^^^^^^^^^^^^^^^^\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-  --> $DIR/for_loop.rs:187:15\n+  --> $DIR/for_loop.rs:124:15\n    |\n LL |     for _v in [0; 32].iter() {}\n    |               ^^^^^^^^^^^^^^\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-  --> $DIR/for_loop.rs:192:15\n+  --> $DIR/for_loop.rs:129:15\n    |\n LL |     for _v in ll.iter() {}\n    |               ^^^^^^^^^\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-  --> $DIR/for_loop.rs:195:15\n+  --> $DIR/for_loop.rs:132:15\n    |\n LL |     for _v in vd.iter() {}\n    |               ^^^^^^^^^\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-  --> $DIR/for_loop.rs:198:15\n+  --> $DIR/for_loop.rs:135:15\n    |\n LL |     for _v in bh.iter() {}\n    |               ^^^^^^^^^\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-  --> $DIR/for_loop.rs:201:15\n+  --> $DIR/for_loop.rs:138:15\n    |\n LL |     for _v in hm.iter() {}\n    |               ^^^^^^^^^\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-  --> $DIR/for_loop.rs:204:15\n+  --> $DIR/for_loop.rs:141:15\n    |\n LL |     for _v in bt.iter() {}\n    |               ^^^^^^^^^\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-  --> $DIR/for_loop.rs:207:15\n+  --> $DIR/for_loop.rs:144:15\n    |\n LL |     for _v in hs.iter() {}\n    |               ^^^^^^^^^\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-  --> $DIR/for_loop.rs:210:15\n+  --> $DIR/for_loop.rs:147:15\n    |\n LL |     for _v in bs.iter() {}\n    |               ^^^^^^^^^\n \n error: you are iterating over `Iterator::next()` which is an Option; this will compile but is probably not what you want\n-  --> $DIR/for_loop.rs:212:15\n+  --> $DIR/for_loop.rs:149:15\n    |\n LL |     for _v in vec.iter().next() {}\n    |               ^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::iter-next-loop` implied by `-D warnings`\n \n error: you are collect()ing an iterator and throwing away the result. Consider using an explicit for loop to exhaust the iterator\n-  --> $DIR/for_loop.rs:219:5\n+  --> $DIR/for_loop.rs:156:5\n    |\n LL |     vec.iter().cloned().map(|x| out.push(x)).collect::<Vec<_>>();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::unused-collect` implied by `-D warnings`\n \n-error: aborting due to 35 previous errors\n+error: aborting due to 22 previous errors\n "}, {"sha": "6f1f4c5fb049309a3a7aeecee00aad2608e2d5f8", "filename": "tests/ui/needless_range_loop.rs", "status": "modified", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/0fbe49d8a6ce6ca54780c59f1d547311a26fbedc/tests%2Fui%2Fneedless_range_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fbe49d8a6ce6ca54780c59f1d547311a26fbedc/tests%2Fui%2Fneedless_range_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_range_loop.rs?ref=0fbe49d8a6ce6ca54780c59f1d547311a26fbedc", "patch": "@@ -1,8 +1,15 @@\n+#![allow(clippy::cognitive_complexity)]\n+\n+static STATIC: [usize; 4] = [0, 1, 8, 16];\n+const CONST: [usize; 4] = [0, 1, 8, 16];\n+\n fn calc_idx(i: usize) -> usize {\n     (i + i + 20) % 4\n }\n \n fn main() {\n+    const MAX_LEN: usize = 42;\n+\n     let ns = vec![2, 3, 5, 7];\n \n     for i in 3..10 {\n@@ -81,6 +88,70 @@ fn main() {\n         println!(\"{}\", arr[i]);\n     }\n \n+    let mut vec = vec![1, 2, 3, 4];\n+    let vec2 = vec![1, 2, 3, 4];\n+    for i in 0..vec.len() {\n+        println!(\"{}\", vec[i]);\n+    }\n+\n+    for i in 0..vec.len() {\n+        let i = 42; // make a different `i`\n+        println!(\"{}\", vec[i]); // ok, not the `i` of the for-loop\n+    }\n+\n+    for i in 0..vec.len() {\n+        let _ = vec[i];\n+    }\n+\n+    // ICE #746\n+    for j in 0..4 {\n+        println!(\"{:?}\", STATIC[j]);\n+    }\n+\n+    for j in 0..4 {\n+        println!(\"{:?}\", CONST[j]);\n+    }\n+\n+    for i in 0..vec.len() {\n+        println!(\"{} {}\", vec[i], i);\n+    }\n+    for i in 0..vec.len() {\n+        // not an error, indexing more than one variable\n+        println!(\"{} {}\", vec[i], vec2[i]);\n+    }\n+\n+    for i in 0..vec.len() {\n+        println!(\"{}\", vec2[i]);\n+    }\n+\n+    for i in 5..vec.len() {\n+        println!(\"{}\", vec[i]);\n+    }\n+\n+    for i in 0..MAX_LEN {\n+        println!(\"{}\", vec[i]);\n+    }\n+\n+    for i in 0..=MAX_LEN {\n+        println!(\"{}\", vec[i]);\n+    }\n+\n+    for i in 5..10 {\n+        println!(\"{}\", vec[i]);\n+    }\n+\n+    for i in 5..=10 {\n+        println!(\"{}\", vec[i]);\n+    }\n+\n+    for i in 5..vec.len() {\n+        println!(\"{} {}\", vec[i], i);\n+    }\n+\n+    for i in 5..10 {\n+        println!(\"{} {}\", vec[i], i);\n+    }\n+\n     // #2542\n     for i in 0..vec.len() {\n         vec[i] = Some(1).unwrap_or_else(|| panic!(\"error on {}\", i));"}, {"sha": "4df07c6f1e52b6b0f2f909f494224e08a0af7d70", "filename": "tests/ui/needless_range_loop.stderr", "status": "modified", "additions": 140, "deletions": 10, "changes": 150, "blob_url": "https://github.com/rust-lang/rust/blob/0fbe49d8a6ce6ca54780c59f1d547311a26fbedc/tests%2Fui%2Fneedless_range_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0fbe49d8a6ce6ca54780c59f1d547311a26fbedc/tests%2Fui%2Fneedless_range_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_range_loop.stderr?ref=0fbe49d8a6ce6ca54780c59f1d547311a26fbedc", "patch": "@@ -1,5 +1,5 @@\n error: the loop variable `i` is only used to index `ns`.\n-  --> $DIR/needless_range_loop.rs:8:14\n+  --> $DIR/needless_range_loop.rs:15:14\n    |\n LL |     for i in 3..10 {\n    |              ^^^^^\n@@ -11,7 +11,7 @@ LL |     for <item> in ns.iter().take(10).skip(3) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `ms`.\n-  --> $DIR/needless_range_loop.rs:29:14\n+  --> $DIR/needless_range_loop.rs:36:14\n    |\n LL |     for i in 0..ms.len() {\n    |              ^^^^^^^^^^^\n@@ -21,7 +21,7 @@ LL |     for <item> in &mut ms {\n    |         ^^^^^^    ^^^^^^^\n \n error: the loop variable `i` is only used to index `ms`.\n-  --> $DIR/needless_range_loop.rs:35:14\n+  --> $DIR/needless_range_loop.rs:42:14\n    |\n LL |     for i in 0..ms.len() {\n    |              ^^^^^^^^^^^\n@@ -31,7 +31,7 @@ LL |     for <item> in &mut ms {\n    |         ^^^^^^    ^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/needless_range_loop.rs:59:14\n+  --> $DIR/needless_range_loop.rs:66:14\n    |\n LL |     for i in x..x + 4 {\n    |              ^^^^^^^^\n@@ -41,7 +41,7 @@ LL |     for <item> in vec.iter_mut().skip(x).take(4) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/needless_range_loop.rs:66:14\n+  --> $DIR/needless_range_loop.rs:73:14\n    |\n LL |     for i in x..=x + 4 {\n    |              ^^^^^^^^^\n@@ -51,7 +51,7 @@ LL |     for <item> in vec.iter_mut().skip(x).take(4 + 1) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `arr`.\n-  --> $DIR/needless_range_loop.rs:72:14\n+  --> $DIR/needless_range_loop.rs:79:14\n    |\n LL |     for i in 0..3 {\n    |              ^^^^\n@@ -61,7 +61,7 @@ LL |     for <item> in &arr {\n    |         ^^^^^^    ^^^^\n \n error: the loop variable `i` is only used to index `arr`.\n-  --> $DIR/needless_range_loop.rs:76:14\n+  --> $DIR/needless_range_loop.rs:83:14\n    |\n LL |     for i in 0..2 {\n    |              ^^^^\n@@ -71,7 +71,7 @@ LL |     for <item> in arr.iter().take(2) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `arr`.\n-  --> $DIR/needless_range_loop.rs:80:14\n+  --> $DIR/needless_range_loop.rs:87:14\n    |\n LL |     for i in 1..3 {\n    |              ^^^^\n@@ -80,8 +80,138 @@ help: consider using an iterator\n LL |     for <item> in arr.iter().skip(1) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^\n \n+error: the loop variable `i` is only used to index `vec`.\n+  --> $DIR/needless_range_loop.rs:93:14\n+   |\n+LL |     for i in 0..vec.len() {\n+   |              ^^^^^^^^^^^^\n+help: consider using an iterator\n+   |\n+LL |     for <item> in &vec {\n+   |         ^^^^^^    ^^^^\n+\n+error: the loop variable `i` is only used to index `vec`.\n+  --> $DIR/needless_range_loop.rs:102:14\n+   |\n+LL |     for i in 0..vec.len() {\n+   |              ^^^^^^^^^^^^\n+help: consider using an iterator\n+   |\n+LL |     for <item> in &vec {\n+   |         ^^^^^^    ^^^^\n+\n+error: the loop variable `j` is only used to index `STATIC`.\n+  --> $DIR/needless_range_loop.rs:107:14\n+   |\n+LL |     for j in 0..4 {\n+   |              ^^^^\n+help: consider using an iterator\n+   |\n+LL |     for <item> in &STATIC {\n+   |         ^^^^^^    ^^^^^^^\n+\n+error: the loop variable `j` is only used to index `CONST`.\n+  --> $DIR/needless_range_loop.rs:111:14\n+   |\n+LL |     for j in 0..4 {\n+   |              ^^^^\n+help: consider using an iterator\n+   |\n+LL |     for <item> in &CONST {\n+   |         ^^^^^^    ^^^^^^\n+\n+error: the loop variable `i` is used to index `vec`\n+  --> $DIR/needless_range_loop.rs:115:14\n+   |\n+LL |     for i in 0..vec.len() {\n+   |              ^^^^^^^^^^^^\n+help: consider using an iterator\n+   |\n+LL |     for (i, <item>) in vec.iter().enumerate() {\n+   |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: the loop variable `i` is only used to index `vec2`.\n+  --> $DIR/needless_range_loop.rs:123:14\n+   |\n+LL |     for i in 0..vec.len() {\n+   |              ^^^^^^^^^^^^\n+help: consider using an iterator\n+   |\n+LL |     for <item> in vec2.iter().take(vec.len()) {\n+   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: the loop variable `i` is only used to index `vec`.\n+  --> $DIR/needless_range_loop.rs:127:14\n+   |\n+LL |     for i in 5..vec.len() {\n+   |              ^^^^^^^^^^^^\n+help: consider using an iterator\n+   |\n+LL |     for <item> in vec.iter().skip(5) {\n+   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^\n+\n+error: the loop variable `i` is only used to index `vec`.\n+  --> $DIR/needless_range_loop.rs:131:14\n+   |\n+LL |     for i in 0..MAX_LEN {\n+   |              ^^^^^^^^^^\n+help: consider using an iterator\n+   |\n+LL |     for <item> in vec.iter().take(MAX_LEN) {\n+   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: the loop variable `i` is only used to index `vec`.\n+  --> $DIR/needless_range_loop.rs:135:14\n+   |\n+LL |     for i in 0..=MAX_LEN {\n+   |              ^^^^^^^^^^^\n+help: consider using an iterator\n+   |\n+LL |     for <item> in vec.iter().take(MAX_LEN + 1) {\n+   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: the loop variable `i` is only used to index `vec`.\n+  --> $DIR/needless_range_loop.rs:139:14\n+   |\n+LL |     for i in 5..10 {\n+   |              ^^^^^\n+help: consider using an iterator\n+   |\n+LL |     for <item> in vec.iter().take(10).skip(5) {\n+   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: the loop variable `i` is only used to index `vec`.\n+  --> $DIR/needless_range_loop.rs:143:14\n+   |\n+LL |     for i in 5..=10 {\n+   |              ^^^^^^\n+help: consider using an iterator\n+   |\n+LL |     for <item> in vec.iter().take(10 + 1).skip(5) {\n+   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: the loop variable `i` is used to index `vec`\n+  --> $DIR/needless_range_loop.rs:147:14\n+   |\n+LL |     for i in 5..vec.len() {\n+   |              ^^^^^^^^^^^^\n+help: consider using an iterator\n+   |\n+LL |     for (i, <item>) in vec.iter().enumerate().skip(5) {\n+   |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: the loop variable `i` is used to index `vec`\n+  --> $DIR/needless_range_loop.rs:151:14\n+   |\n+LL |     for i in 5..10 {\n+   |              ^^^^^\n+help: consider using an iterator\n+   |\n+LL |     for (i, <item>) in vec.iter().enumerate().take(10).skip(5) {\n+   |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n error: the loop variable `i` is used to index `vec`\n-  --> $DIR/needless_range_loop.rs:85:14\n+  --> $DIR/needless_range_loop.rs:156:14\n    |\n LL |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n@@ -90,5 +220,5 @@ help: consider using an iterator\n LL |     for (i, <item>) in vec.iter_mut().enumerate() {\n    |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 9 previous errors\n+error: aborting due to 22 previous errors\n "}]}