{"sha": "eef56306f0f136d23092034747ed3a88bb742a55", "node_id": "C_kwDOAAsO6NoAKGVlZjU2MzA2ZjBmMTM2ZDIzMDkyMDM0NzQ3ZWQzYTg4YmI3NDJhNTU", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-07-04T08:07:12Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-07-04T08:07:12Z"}, "message": "Fix wrap parenthesis suggestion for async closure", "tree": {"sha": "ee980fe9a7522861e54f8691c3faab3e8334a960", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee980fe9a7522861e54f8691c3faab3e8334a960"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eef56306f0f136d23092034747ed3a88bb742a55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eef56306f0f136d23092034747ed3a88bb742a55", "html_url": "https://github.com/rust-lang/rust/commit/eef56306f0f136d23092034747ed3a88bb742a55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eef56306f0f136d23092034747ed3a88bb742a55/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "495b216696ccbc27c73d6bdc486bf4621d610f4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/495b216696ccbc27c73d6bdc486bf4621d610f4b", "html_url": "https://github.com/rust-lang/rust/commit/495b216696ccbc27c73d6bdc486bf4621d610f4b"}], "stats": {"total": 51, "additions": 46, "deletions": 5}, "files": [{"sha": "96b1847f8bbca244821b3dc9eef817445464a204", "filename": "compiler/rustc_typeck/src/check/callee.rs", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/eef56306f0f136d23092034747ed3a88bb742a55/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eef56306f0f136d23092034747ed3a88bb742a55/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcallee.rs?ref=eef56306f0f136d23092034747ed3a88bb742a55", "patch": "@@ -280,15 +280,36 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         callee_node: &hir::ExprKind<'_>,\n         callee_span: Span,\n     ) {\n-        let hir_id = self.tcx.hir().get_parent_node(hir_id);\n-        let parent_node = self.tcx.hir().get(hir_id);\n+        let hir = self.tcx.hir();\n+        let parent_hir_id = hir.get_parent_node(hir_id);\n+        let parent_node = hir.get(parent_hir_id);\n         if let (\n             hir::Node::Expr(hir::Expr {\n-                kind: hir::ExprKind::Closure { fn_decl_span, .. }, ..\n+                kind: hir::ExprKind::Closure { fn_decl_span, body, .. },\n+                ..\n             }),\n             hir::ExprKind::Block(..),\n         ) = (parent_node, callee_node)\n         {\n+            let fn_decl_span = if hir.body(*body).generator_kind\n+                == Some(hir::GeneratorKind::Async(hir::AsyncGeneratorKind::Closure))\n+            {\n+                // Actually need to unwrap a few more layers of HIR to get to\n+                // the _real_ closure...\n+                let async_closure = hir.get_parent_node(hir.get_parent_node(parent_hir_id));\n+                if let hir::Node::Expr(hir::Expr {\n+                    kind: hir::ExprKind::Closure { fn_decl_span, .. },\n+                    ..\n+                }) = hir.get(async_closure)\n+                {\n+                    *fn_decl_span\n+                } else {\n+                    return;\n+                }\n+            } else {\n+                *fn_decl_span\n+            };\n+\n             let start = fn_decl_span.shrink_to_lo();\n             let end = callee_span.shrink_to_hi();\n             err.multipart_suggestion("}, {"sha": "496c305bc2aff4947a999342447dfceae16b2e34", "filename": "src/test/ui/suggestions/suggest-on-bare-closure-call.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/eef56306f0f136d23092034747ed3a88bb742a55/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-on-bare-closure-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eef56306f0f136d23092034747ed3a88bb742a55/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-on-bare-closure-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-on-bare-closure-call.rs?ref=eef56306f0f136d23092034747ed3a88bb742a55", "patch": "@@ -1,4 +1,11 @@\n+// edition:2021\n+\n+#![feature(async_closure)]\n+\n fn main() {\n     let _ = ||{}();\n     //~^ ERROR expected function, found `()`\n+\n+    let _ = async ||{}();\n+    //~^ ERROR expected function, found `()`\n }"}, {"sha": "e65a6eb4939d9b6c3810dbb55a74e3bacbfd7c55", "filename": "src/test/ui/suggestions/suggest-on-bare-closure-call.stderr", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/eef56306f0f136d23092034747ed3a88bb742a55/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-on-bare-closure-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eef56306f0f136d23092034747ed3a88bb742a55/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-on-bare-closure-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-on-bare-closure-call.stderr?ref=eef56306f0f136d23092034747ed3a88bb742a55", "patch": "@@ -1,5 +1,5 @@\n error[E0618]: expected function, found `()`\n-  --> $DIR/suggest-on-bare-closure-call.rs:2:15\n+  --> $DIR/suggest-on-bare-closure-call.rs:6:15\n    |\n LL |     let _ = ||{}();\n    |               ^^--\n@@ -11,6 +11,19 @@ help: if you meant to create this closure and immediately call it, surround the\n LL |     let _ = (||{})();\n    |             +    +\n \n-error: aborting due to previous error\n+error[E0618]: expected function, found `()`\n+  --> $DIR/suggest-on-bare-closure-call.rs:9:21\n+   |\n+LL |     let _ = async ||{}();\n+   |                     ^^--\n+   |                     |\n+   |                     call expression requires function\n+   |\n+help: if you meant to create this closure and immediately call it, surround the closure with parentheses\n+   |\n+LL |     let _ = (async ||{})();\n+   |             +          +\n+\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0618`."}]}