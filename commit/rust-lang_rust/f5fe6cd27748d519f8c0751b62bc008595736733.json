{"sha": "f5fe6cd27748d519f8c0751b62bc008595736733", "node_id": "C_kwDOAAsO6NoAKGY1ZmU2Y2QyNzc0OGQ1MTlmOGMwNzUxYjYyYmMwMDg1OTU3MzY3MzM", "commit": {"author": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2022-01-25T23:40:10Z"}, "committer": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2022-01-25T23:44:45Z"}, "message": "Return an indexmap in `all_local_trait_impls` query\n\nThe data structure previously used here required Ord.\nAs part of #90317, we do not want DefId to implement Ord.", "tree": {"sha": "f3b41a2669b8221972923fe4e75f7e34cf1585d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3b41a2669b8221972923fe4e75f7e34cf1585d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5fe6cd27748d519f8c0751b62bc008595736733", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5fe6cd27748d519f8c0751b62bc008595736733", "html_url": "https://github.com/rust-lang/rust/commit/f5fe6cd27748d519f8c0751b62bc008595736733", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5fe6cd27748d519f8c0751b62bc008595736733/comments", "author": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92ed8747f255b2695c33b64982e6959711a72cb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/92ed8747f255b2695c33b64982e6959711a72cb9", "html_url": "https://github.com/rust-lang/rust/commit/92ed8747f255b2695c33b64982e6959711a72cb9"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "131a459146d1f6dec036ff500b1109eabedf51a3", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5fe6cd27748d519f8c0751b62bc008595736733/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5fe6cd27748d519f8c0751b62bc008595736733/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=f5fe6cd27748d519f8c0751b62bc008595736733", "patch": "@@ -1089,7 +1089,7 @@ rustc_queries! {\n     }\n \n     /// Return all `impl` blocks in the current crate.\n-    query all_local_trait_impls(_: ()) -> &'tcx BTreeMap<DefId, Vec<LocalDefId>> {\n+    query all_local_trait_impls(_: ()) -> &'tcx rustc_data_structures::fx::FxIndexMap<DefId, Vec<LocalDefId>> {\n         desc { \"local trait impls\" }\n     }\n "}, {"sha": "a497b46d92c54dbdeff2a564175de08050db9296", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f5fe6cd27748d519f8c0751b62bc008595736733/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5fe6cd27748d519f8c0751b62bc008595736733/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=f5fe6cd27748d519f8c0751b62bc008595736733", "patch": "@@ -28,7 +28,7 @@ use crate::ty::subst::{GenericArg, InternalSubsts, Subst, SubstsRef};\n use crate::ty::util::Discr;\n use rustc_ast as ast;\n use rustc_attr as attr;\n-use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet, FxIndexMap};\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::tagged_ptr::CopyTaggedPtr;\n use rustc_hir as hir;\n@@ -43,7 +43,6 @@ use rustc_span::{sym, Span};\n use rustc_target::abi::Align;\n \n use std::cmp::Ordering;\n-use std::collections::BTreeMap;\n use std::hash::{Hash, Hasher};\n use std::ops::ControlFlow;\n use std::{fmt, ptr, str};\n@@ -136,7 +135,7 @@ pub struct ResolverOutputs {\n     /// via `extern crate` item and not `--extern` option or compiler built-in.\n     pub extern_prelude: FxHashMap<Symbol, bool>,\n     pub main_def: Option<MainDefinition>,\n-    pub trait_impls: BTreeMap<DefId, Vec<LocalDefId>>,\n+    pub trait_impls: FxIndexMap<DefId, Vec<LocalDefId>>,\n     /// A list of proc macro LocalDefIds, written out in the order in which\n     /// they are declared in the static array generated by proc_macro_harness.\n     pub proc_macros: Vec<LocalDefId>,"}, {"sha": "040e642b7b6d6f102a7467b4748b8ff0935ca0fe", "filename": "compiler/rustc_middle/src/ty/query.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f5fe6cd27748d519f8c0751b62bc008595736733/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5fe6cd27748d519f8c0751b62bc008595736733/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery.rs?ref=f5fe6cd27748d519f8c0751b62bc008595736733", "patch": "@@ -56,7 +56,6 @@ use rustc_ast as ast;\n use rustc_attr as attr;\n use rustc_span::symbol::Symbol;\n use rustc_span::{Span, DUMMY_SP};\n-use std::collections::BTreeMap;\n use std::ops::Deref;\n use std::path::PathBuf;\n use std::sync::Arc;"}, {"sha": "d06fc159285e6d125d400651611ad0be5ca0d90f", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f5fe6cd27748d519f8c0751b62bc008595736733/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5fe6cd27748d519f8c0751b62bc008595736733/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=f5fe6cd27748d519f8c0751b62bc008595736733", "patch": "@@ -67,7 +67,7 @@ use rustc_span::{Span, DUMMY_SP};\n \n use smallvec::{smallvec, SmallVec};\n use std::cell::{Cell, RefCell};\n-use std::collections::{BTreeMap, BTreeSet};\n+use std::collections::BTreeSet;\n use std::ops::ControlFlow;\n use std::{cmp, fmt, iter, mem, ptr};\n use tracing::debug;\n@@ -1059,7 +1059,7 @@ pub struct Resolver<'a> {\n     item_generics_num_lifetimes: FxHashMap<LocalDefId, usize>,\n \n     main_def: Option<MainDefinition>,\n-    trait_impls: BTreeMap<DefId, Vec<LocalDefId>>,\n+    trait_impls: FxIndexMap<DefId, Vec<LocalDefId>>,\n     /// A list of proc macro LocalDefIds, written out in the order in which\n     /// they are declared in the static array generated by proc_macro_harness.\n     proc_macros: Vec<NodeId>,"}]}