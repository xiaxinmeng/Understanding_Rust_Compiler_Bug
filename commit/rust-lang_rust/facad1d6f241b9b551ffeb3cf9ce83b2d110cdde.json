{"sha": "facad1d6f241b9b551ffeb3cf9ce83b2d110cdde", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhY2FkMWQ2ZjI0MWI5YjU1MWZmZWIzY2Y5Y2U4M2IyZDExMGNkZGU=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-12-14T14:10:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-12-14T14:10:13Z"}, "message": "Rollup merge of #56709 - GuillaumeGomez:reduce-search-index, r=QuietMisdreavus\n\nRemove unneeded extra chars to reduce search-index size\n\nBefore:\n\n```\n2013782 Dec 11 10:16 build/x86_64-unknown-linux-gnu/doc/search-index.js\n```\n\nAfter:\n\n```\n1736597 Dec 11 10:50 build/x86_64-unknown-linux-gnu/doc/search-index.js\n```\n\nNo changes in the output of the search.\n\nr? @QuietMisdreavus", "tree": {"sha": "0719c90f817398af0fede486175a253fbf18ddc9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0719c90f817398af0fede486175a253fbf18ddc9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/facad1d6f241b9b551ffeb3cf9ce83b2d110cdde", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcE7nFCRBK7hj4Ov3rIwAAdHIIABYDREFJxQU6OSX/MN4kjgjq\nIRyv/pghpLnHJCy5cCCF7HLRU6+q3Bwgxsu6bfUXr/lQz+QCUMzUYxjtjvjlTtvH\nt1lr+oAJOhJ8qEwRjQJhVp7HSd71DNafc0gMWKkJ2mPhtPy5XyA56tvVMeah4FdG\nz2Lj0C0ZZqSEVOzFH5V33YiIovM/L16augUdhFt4EFWM6ac2owg9kunwkthj+lso\nQvCsPHjg03zpQYgvjAwdN7YACJVsRCAitG6wfAQ99Agl3+wmH4ahzI34ncVAlr5f\nMUFz/xe8b2inGU2LD8SNk3lQxrgK5JjOtGp4g+cMOzQ6jvKL5eCd5hPYweGKLdo=\n=0LzZ\n-----END PGP SIGNATURE-----\n", "payload": "tree 0719c90f817398af0fede486175a253fbf18ddc9\nparent 27c3631d826aaad964f42ee94f26f9e80d658e3f\nparent 987bf2ed29b591178ed4a520b295eb40e6328ba8\nauthor kennytm <kennytm@gmail.com> 1544796613 +0800\ncommitter GitHub <noreply@github.com> 1544796613 +0800\n\nRollup merge of #56709 - GuillaumeGomez:reduce-search-index, r=QuietMisdreavus\n\nRemove unneeded extra chars to reduce search-index size\n\nBefore:\n\n```\n2013782 Dec 11 10:16 build/x86_64-unknown-linux-gnu/doc/search-index.js\n```\n\nAfter:\n\n```\n1736597 Dec 11 10:50 build/x86_64-unknown-linux-gnu/doc/search-index.js\n```\n\nNo changes in the output of the search.\n\nr? @QuietMisdreavus\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/facad1d6f241b9b551ffeb3cf9ce83b2d110cdde", "html_url": "https://github.com/rust-lang/rust/commit/facad1d6f241b9b551ffeb3cf9ce83b2d110cdde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/facad1d6f241b9b551ffeb3cf9ce83b2d110cdde/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27c3631d826aaad964f42ee94f26f9e80d658e3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/27c3631d826aaad964f42ee94f26f9e80d658e3f", "html_url": "https://github.com/rust-lang/rust/commit/27c3631d826aaad964f42ee94f26f9e80d658e3f"}, {"sha": "987bf2ed29b591178ed4a520b295eb40e6328ba8", "url": "https://api.github.com/repos/rust-lang/rust/commits/987bf2ed29b591178ed4a520b295eb40e6328ba8", "html_url": "https://github.com/rust-lang/rust/commit/987bf2ed29b591178ed4a520b295eb40e6328ba8"}], "stats": {"total": 36, "additions": 30, "deletions": 6}, "files": [{"sha": "536ea39d29805818278ff9f57729442300ce308c", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/facad1d6f241b9b551ffeb3cf9ce83b2d110cdde/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/facad1d6f241b9b551ffeb3cf9ce83b2d110cdde/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=facad1d6f241b9b551ffeb3cf9ce83b2d110cdde", "patch": "@@ -806,6 +806,10 @@ impl<'a> fmt::Display for MarkdownSummaryLine<'a> {\n }\n \n pub fn plain_summary_line(md: &str) -> String {\n+    plain_summary_line_full(md, false)\n+}\n+\n+pub fn plain_summary_line_full(md: &str, limit_length: bool) -> String {\n     struct ParserWrapper<'a> {\n         inner: Parser<'a>,\n         is_in: isize,\n@@ -852,7 +856,21 @@ pub fn plain_summary_line(md: &str) -> String {\n             s.push_str(&t);\n         }\n     }\n-    s\n+    if limit_length && s.chars().count() > 60 {\n+        let mut len = 0;\n+        let mut ret = s.split_whitespace()\n+                       .take_while(|p| {\n+                           // + 1 for the added character after the word.\n+                           len += p.chars().count() + 1;\n+                           len < 60\n+                       })\n+                       .collect::<Vec<_>>()\n+                       .join(\" \");\n+        ret.push('\u2026');\n+        ret\n+    } else {\n+        s\n+    }\n }\n \n pub fn markdown_links(md: &str) -> Vec<(String, Option<Range<usize>>)> {"}, {"sha": "4b10c23fd3f3f219bbed58a7e673b10486adb808", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/facad1d6f241b9b551ffeb3cf9ce83b2d110cdde/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/facad1d6f241b9b551ffeb3cf9ce83b2d110cdde/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=facad1d6f241b9b551ffeb3cf9ce83b2d110cdde", "patch": "@@ -698,7 +698,7 @@ fn build_index(krate: &clean::Crate, cache: &mut Cache) -> String {\n                 ty: item.type_(),\n                 name: item.name.clone().unwrap(),\n                 path: fqp[..fqp.len() - 1].join(\"::\"),\n-                desc: plain_summary_line(item.doc_value()),\n+                desc: plain_summary_line_short(item.doc_value()),\n                 parent: Some(did),\n                 parent_idx: None,\n                 search_type: get_index_search_type(&item),\n@@ -736,7 +736,7 @@ fn build_index(krate: &clean::Crate, cache: &mut Cache) -> String {\n     }\n \n     let crate_doc = krate.module.as_ref().map(|module| {\n-        plain_summary_line(module.doc_value())\n+        plain_summary_line_short(module.doc_value())\n     }).unwrap_or(String::new());\n \n     let mut crate_data = BTreeMap::new();\n@@ -1481,7 +1481,7 @@ impl DocFolder for Cache {\n                             ty: item.type_(),\n                             name: s.to_string(),\n                             path: path.join(\"::\"),\n-                            desc: plain_summary_line(item.doc_value()),\n+                            desc: plain_summary_line_short(item.doc_value()),\n                             parent,\n                             parent_idx: None,\n                             search_type: get_index_search_type(&item),\n@@ -1674,7 +1674,7 @@ impl<'a> Cache {\n                                 ty: item.type_(),\n                                 name: item_name.to_string(),\n                                 path: path.clone(),\n-                                desc: plain_summary_line(item.doc_value()),\n+                                desc: plain_summary_line_short(item.doc_value()),\n                                 parent: None,\n                                 parent_idx: None,\n                                 search_type: get_index_search_type(&item),\n@@ -2389,7 +2389,13 @@ fn shorter<'a>(s: Option<&'a str>) -> String {\n #[inline]\n fn plain_summary_line(s: Option<&str>) -> String {\n     let line = shorter(s).replace(\"\\n\", \" \");\n-    markdown::plain_summary_line(&line[..])\n+    markdown::plain_summary_line_full(&line[..], false)\n+}\n+\n+#[inline]\n+fn plain_summary_line_short(s: Option<&str>) -> String {\n+    let line = shorter(s).replace(\"\\n\", \" \");\n+    markdown::plain_summary_line_full(&line[..], true)\n }\n \n fn document(w: &mut fmt::Formatter, cx: &Context, item: &clean::Item) -> fmt::Result {"}]}