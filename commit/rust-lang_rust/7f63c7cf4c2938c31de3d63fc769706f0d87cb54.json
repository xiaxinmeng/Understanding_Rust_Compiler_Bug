{"sha": "7f63c7cf4c2938c31de3d63fc769706f0d87cb54", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmNjNjN2NmNGMyOTM4YzMxZGUzZDYzZmM3Njk3MDZmMGQ4N2NiNTQ=", "commit": {"author": {"name": "Ravi Shankar", "email": "wafflespeanut@gmail.com", "date": "2015-11-14T21:07:49Z"}, "committer": {"name": "Ravi Shankar", "email": "wafflespeanut@gmail.com", "date": "2015-11-17T06:44:28Z"}, "message": "Detect confusing unicode characters and show the alternative", "tree": {"sha": "833f8d3fec60094d78028ccd64488c1174fda60f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/833f8d3fec60094d78028ccd64488c1174fda60f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f63c7cf4c2938c31de3d63fc769706f0d87cb54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f63c7cf4c2938c31de3d63fc769706f0d87cb54", "html_url": "https://github.com/rust-lang/rust/commit/7f63c7cf4c2938c31de3d63fc769706f0d87cb54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f63c7cf4c2938c31de3d63fc769706f0d87cb54/comments", "author": {"login": "wafflespeanut", "id": 6691262, "node_id": "MDQ6VXNlcjY2OTEyNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6691262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wafflespeanut", "html_url": "https://github.com/wafflespeanut", "followers_url": "https://api.github.com/users/wafflespeanut/followers", "following_url": "https://api.github.com/users/wafflespeanut/following{/other_user}", "gists_url": "https://api.github.com/users/wafflespeanut/gists{/gist_id}", "starred_url": "https://api.github.com/users/wafflespeanut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wafflespeanut/subscriptions", "organizations_url": "https://api.github.com/users/wafflespeanut/orgs", "repos_url": "https://api.github.com/users/wafflespeanut/repos", "events_url": "https://api.github.com/users/wafflespeanut/events{/privacy}", "received_events_url": "https://api.github.com/users/wafflespeanut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wafflespeanut", "id": 6691262, "node_id": "MDQ6VXNlcjY2OTEyNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6691262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wafflespeanut", "html_url": "https://github.com/wafflespeanut", "followers_url": "https://api.github.com/users/wafflespeanut/followers", "following_url": "https://api.github.com/users/wafflespeanut/following{/other_user}", "gists_url": "https://api.github.com/users/wafflespeanut/gists{/gist_id}", "starred_url": "https://api.github.com/users/wafflespeanut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wafflespeanut/subscriptions", "organizations_url": "https://api.github.com/users/wafflespeanut/orgs", "repos_url": "https://api.github.com/users/wafflespeanut/repos", "events_url": "https://api.github.com/users/wafflespeanut/events{/privacy}", "received_events_url": "https://api.github.com/users/wafflespeanut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "929ca3cb51ccb1c47ac4a330f50d8ae8ded1ba06", "url": "https://api.github.com/repos/rust-lang/rust/commits/929ca3cb51ccb1c47ac4a330f50d8ae8ded1ba06", "html_url": "https://github.com/rust-lang/rust/commit/929ca3cb51ccb1c47ac4a330f50d8ae8ded1ba06"}], "stats": {"total": 212, "additions": 211, "deletions": 1}, "files": [{"sha": "870dea02212d1d3e2e5e771c914e368053dbdd11", "filename": "src/libsyntax/diagnostic.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7f63c7cf4c2938c31de3d63fc769706f0d87cb54/src%2Flibsyntax%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f63c7cf4c2938c31de3d63fc769706f0d87cb54/src%2Flibsyntax%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostic.rs?ref=7f63c7cf4c2938c31de3d63fc769706f0d87cb54", "patch": "@@ -174,6 +174,10 @@ impl SpanHandler {\n         self.handler.emit(Some((&self.cm, sp)), msg, Bug);\n         panic!(ExplicitBug);\n     }\n+    pub fn span_bug_no_panic(&self, sp: Span, msg: &str) {\n+        self.handler.emit(Some((&self.cm, sp)), msg, Bug);\n+        self.handler.bump_err_count();\n+    }\n     pub fn span_unimpl(&self, sp: Span, msg: &str) -> ! {\n         self.span_bug(sp, &format!(\"unimplemented {}\", msg));\n     }"}, {"sha": "cb2181a0831773c2426a437b5ba6df00878dedb3", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7f63c7cf4c2938c31de3d63fc769706f0d87cb54/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f63c7cf4c2938c31de3d63fc769706f0d87cb54/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=7f63c7cf4c2938c31de3d63fc769706f0d87cb54", "patch": "@@ -26,6 +26,7 @@ use std::rc::Rc;\n pub use ext::tt::transcribe::{TtReader, new_tt_reader, new_tt_reader_with_doc_flag};\n \n pub mod comments;\n+mod unicode_chars;\n \n pub trait Reader {\n     fn is_eof(&self) -> bool;\n@@ -1224,7 +1225,8 @@ impl<'a> StringReader<'a> {\n           c => {\n               let last_bpos = self.last_pos;\n               let bpos = self.pos;\n-              panic!(self.fatal_span_char(last_bpos, bpos, \"unknown start of token\", c));\n+              unicode_chars::check_for_substitution(&self, c);\n+              panic!(self.fatal_span_char(last_bpos, bpos, \"unknown start of token\", c))\n           }\n         }\n     }"}, {"sha": "dbec1a8851cfef1cde51a15658ecde44b93e9da7", "filename": "src/libsyntax/parse/lexer/unicode_chars.rs", "status": "added", "additions": 186, "deletions": 0, "changes": 186, "blob_url": "https://github.com/rust-lang/rust/blob/7f63c7cf4c2938c31de3d63fc769706f0d87cb54/src%2Flibsyntax%2Fparse%2Flexer%2Funicode_chars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f63c7cf4c2938c31de3d63fc769706f0d87cb54/src%2Flibsyntax%2Fparse%2Flexer%2Funicode_chars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Funicode_chars.rs?ref=7f63c7cf4c2938c31de3d63fc769706f0d87cb54", "patch": "@@ -0,0 +1,186 @@\n+// Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Characters and their corresponding confusables were collected from\n+// http://www.unicode.org/Public/security/revision-06/confusables.txt\n+\n+use codemap::mk_sp as make_span;\n+use super::StringReader;\n+\n+const UNICODE_ARRAY: &'static [(char, &'static str, char)] = &[\n+    ('\u07fa', \"Nko Lajanyalan\", '_'),\n+    ('\ufe4d', \"Dashed Low Line\", '_'),\n+    ('\ufe4e', \"Centreline Low Line\", '_'),\n+    ('\ufe4f', \"Wavy Low Line\", '_'),\n+    ('\u2010', \"Hyphen\", '-'),\n+    ('\u2011', \"Non-Breaking Hyphen\", '-'),\n+    ('\u2012', \"Figure Dash\", '-'),\n+    ('\u2013', \"En Dash\", '-'),\n+    ('\ufe58', \"Small Em Dash\", '-'),\n+    ('\u2043', \"Hyphen Bullet\", '-'),\n+    ('\u02d7', \"Modifier Letter Minus Sign\", '-'),\n+    ('\u2212', \"Minus Sign\", '-'),\n+    ('\u066b', \"Arabic Decimal Separator\", ','),\n+    ('\u201a', \"Single Low-9 Quotation Mark\", ','),\n+    ('\ua4f9', \"Lisu Letter Tone Na Po\", ','),\n+    ('\u037e', \"Greek Question Mark\", ';'),\n+    ('\u0903', \"Devanagari Sign Visarga\", ':'),\n+    ('\u0a83', \"Gujarati Sign Visarga\", ':'),\n+    ('\uff1a', \"Fullwidth Colon\", ':'),\n+    ('\u0589', \"Armenian Full Stop\", ':'),\n+    ('\u0703', \"Syriac Supralinear Colon\", ':'),\n+    ('\u0704', \"Syriac Sublinear Colon\", ':'),\n+    ('\ufe30', \"Presentation Form For Vertical Two Dot Leader\", ':'),\n+    ('\u1803', \"Mongolian Full Stop\", ':'),\n+    ('\u1809', \"Mongolian Manchu Full Stop\", ':'),\n+    ('\u205a', \"Two Dot Punctuation\", ':'),\n+    ('\u05c3', \"Hebrew Punctuation Sof Pasuq\", ':'),\n+    ('\u02f8', \"Modifier Letter Raised Colon\", ':'),\n+    ('\ua789', \"Modifier Letter Colon\", ':'),\n+    ('\u2236', \"Ratio\", ':'),\n+    ('\u02d0', \"Modifier Letter Triangular Colon\", ':'),\n+    ('\ua4fd', \"Lisu Letter Tone Mya Jeu\", ':'),\n+    ('\uff01', \"Fullwidth Exclamation Mark\", '!'),\n+    ('\u01c3', \"Latin Letter Retroflex Click\", '!'),\n+    ('\u0294', \"Latin Letter Glottal Stop\", '?'),\n+    ('\u097d', \"Devanagari Letter Glottal Stop\", '?'),\n+    ('\u13ae', \"Cherokee Letter He\", '?'),\n+    ('\ud834\udd6d', \"Musical Symbol Combining Augmentation Dot\", '.'),\n+    ('\u2024', \"One Dot Leader\", '.'),\n+    ('\u06d4', \"Arabic Full Stop\", '.'),\n+    ('\u0701', \"Syriac Supralinear Full Stop\", '.'),\n+    ('\u0702', \"Syriac Sublinear Full Stop\", '.'),\n+    ('\ua60e', \"Vai Full Stop\", '.'),\n+    ('\ud802\ude50', \"Kharoshthi Punctuation Dot\", '.'),\n+    ('\u0660', \"Arabic-Indic Digit Zero\", '.'),\n+    ('\u06f0', \"Extended Arabic-Indic Digit Zero\", '.'),\n+    ('\ua4f8', \"Lisu Letter Tone Mya Ti\", '.'),\n+    ('\u055d', \"Armenian Comma\", '\\''),\n+    ('\uff07', \"Fullwidth Apostrophe\", '\\''),\n+    ('\u2018', \"Left Single Quotation Mark\", '\\''),\n+    ('\u2019', \"Right Single Quotation Mark\", '\\''),\n+    ('\u201b', \"Single High-Reversed-9 Quotation Mark\", '\\''),\n+    ('\u2032', \"Prime\", '\\''),\n+    ('\u2035', \"Reversed Prime\", '\\''),\n+    ('\u055a', \"Armenian Apostrophe\", '\\''),\n+    ('\u05f3', \"Hebrew Punctuation Geresh\", '\\''),\n+    ('\u1fef', \"Greek Varia\", '\\''),\n+    ('\uff40', \"Fullwidth Grave Accent\", '\\''),\n+    ('\u0384', \"Greek Tonos\", '\\''),\n+    ('\u1ffd', \"Greek Oxia\", '\\''),\n+    ('\u1fbd', \"Greek Koronis\", '\\''),\n+    ('\u1fbf', \"Greek Psili\", '\\''),\n+    ('\u1ffe', \"Greek Dasia\", '\\''),\n+    ('\u02b9', \"Modifier Letter Prime\", '\\''),\n+    ('\u0374', \"Greek Numeral Sign\", '\\''),\n+    ('\u02ca', \"Modifier Letter Acute Accent\", '\\''),\n+    ('\u02cb', \"Modifier Letter Grave Accent\", '\\''),\n+    ('\u02f4', \"Modifier Letter Middle Grave Accent\", '\\''),\n+    ('\u02bb', \"Modifier Letter Turned Comma\", '\\''),\n+    ('\u02bd', \"Modifier Letter Reversed Comma\", '\\''),\n+    ('\u02bc', \"Modifier Letter Apostrophe\", '\\''),\n+    ('\u02be', \"Modifier Letter Right Half Ring\", '\\''),\n+    ('\ua78c', \"Latin Small Letter Saltillo\", '\\''),\n+    ('\u05d9', \"Hebrew Letter Yod\", '\\''),\n+    ('\u07f4', \"Nko High Tone Apostrophe\", '\\''),\n+    ('\u07f5', \"Nko Low Tone Apostrophe\", '\\''),\n+    ('\uff3b', \"Fullwidth Left Square Bracket\", '('),\n+    ('\u2768', \"Medium Left Parenthesis Ornament\", '('),\n+    ('\u2772', \"Light Left Tortoise Shell Bracket Ornament\", '('),\n+    ('\u3014', \"Left Tortoise Shell Bracket\", '('),\n+    ('\ufd3e', \"Ornate Left Parenthesis\", '('),\n+    ('\uff3d', \"Fullwidth Right Square Bracket\", ')'),\n+    ('\u2769', \"Medium Right Parenthesis Ornament\", ')'),\n+    ('\u2773', \"Light Right Tortoise Shell Bracket Ornament\", ')'),\n+    ('\u3015', \"Right Tortoise Shell Bracket\", ')'),\n+    ('\ufd3f', \"Ornate Right Parenthesis\", ')'),\n+    ('\u2774', \"Medium Left Curly Bracket Ornament\", '{'),\n+    ('\u2775', \"Medium Right Curly Bracket Ornament\", '}'),\n+    ('\u204e', \"Low Asterisk\", '*'),\n+    ('\u066d', \"Arabic Five Pointed Star\", '*'),\n+    ('\u2217', \"Asterisk Operator\", '*'),\n+    ('\u1735', \"Philippine Single Punctuation\", '/'),\n+    ('\u2041', \"Caret Insertion Point\", '/'),\n+    ('\u2215', \"Division Slash\", '/'),\n+    ('\u2044', \"Fraction Slash\", '/'),\n+    ('\u2571', \"Box Drawings Light Diagonal Upper Right To Lower Left\", '/'),\n+    ('\u27cb', \"Mathematical Rising Diagonal\", '/'),\n+    ('\u29f8', \"Big Solidus\", '/'),\n+    ('\u31d3', \"Cjk Stroke Sp\", '/'),\n+    ('\u3033', \"Vertical Kana Repeat Mark Upper Half\", '/'),\n+    ('\u4e3f', \"Cjk Unified Ideograph-4E3F\", '/'),\n+    ('\u2f03', \"Kangxi Radical Slash\", '/'),\n+    ('\uff3c', \"Fullwidth Reverse Solidus\", '\\\\'),\n+    ('\ufe68', \"Small Reverse Solidus\", '\\\\'),\n+    ('\u2216', \"Set Minus\", '\\\\'),\n+    ('\u27cd', \"Mathematical Falling Diagonal\", '\\\\'),\n+    ('\u29f5', \"Reverse Solidus Operator\", '\\\\'),\n+    ('\u29f9', \"Big Reverse Solidus\", '\\\\'),\n+    ('\u31d4', \"Cjk Stroke D\", '\\\\'),\n+    ('\u4e36', \"Cjk Unified Ideograph-4E36\", '\\\\'),\n+    ('\u2f02', \"Kangxi Radical Dot\", '\\\\'),\n+    ('\ua778', \"Latin Small Letter Um\", '&'),\n+    ('\ufb29', \"Hebrew Letter Alternative Plus Sign\", '+'),\n+    ('\u2039', \"Single Left-Pointing Angle Quotation Mark\", '<'),\n+    ('\u276e', \"Heavy Left-Pointing Angle Quotation Mark Ornament\", '<'),\n+    ('\u02c2', \"Modifier Letter Left Arrowhead\", '<'),\n+    ('\ua4ff', \"Lisu Punctuation Full Stop\", '='),\n+    ('\u203a', \"Single Right-Pointing Angle Quotation Mark\", '>'),\n+    ('\u276f', \"Heavy Right-Pointing Angle Quotation Mark Ornament\", '>'),\n+    ('\u02c3', \"Modifier Letter Right Arrowhead\", '>'),\n+    ('\u2cba', \"Coptic Capital Letter Dialect-P Ni\", '-'),\n+    ('\u0241', \"Latin Capital Letter Glottal Stop\", '?'),\n+    ('\u2cc6', \"Coptic Capital Letter Old Coptic Esh\", '/'), ];\n+\n+const ASCII_ARRAY: &'static [(char, &'static str)] = &[\n+    ('_', \"Underscore\"),\n+    ('-', \"Minus/Hyphen\"),\n+    (',', \"Comma\"),\n+    (';', \"Semicolon\"),\n+    (':', \"Colon\"),\n+    ('!', \"Exclamation Mark\"),\n+    ('?', \"Question Mark\"),\n+    ('.', \"Period\"),\n+    ('\\'', \"Single Quote\"),\n+    ('(', \"Left Parenthesis\"),\n+    (')', \"Right Parenthesis\"),\n+    ('{', \"Left Curly Brace\"),\n+    ('}', \"Right Curly Brace\"),\n+    ('*', \"Asterisk\"),\n+    ('/', \"Slash\"),\n+    ('\\\\', \"Backslash\"),\n+    ('&', \"Ampersand\"),\n+    ('+', \"Plus Sign\"),\n+    ('<', \"Less-Than Sign\"),\n+    ('=', \"Equals Sign\"),\n+    ('>', \"Greater-Than Sign\"), ];\n+\n+pub fn check_for_substitution(reader: &StringReader, ch: char) {\n+    UNICODE_ARRAY\n+    .iter()\n+    .find(|&&(c, _, _)| c == ch)\n+    .map(|&(_, u_name, ascii_char)| {\n+        let span = make_span(reader.last_pos, reader.pos);\n+        match ASCII_ARRAY.iter().find(|&&(c, _)| c == ascii_char) {\n+            Some(&(ascii_char, ascii_name)) => {\n+                let msg =\n+                    format!(\"unicode character '{}' ({}) looks much like '{}' ({}), but it's not\",\n+                            ch, u_name, ascii_char, ascii_name);\n+                reader.help_span(span, &msg);\n+            },\n+            None => {\n+                reader\n+                .span_diagnostic\n+                .span_bug_no_panic(span,\n+                                   &format!(\"substitution character not found for '{}'\", ch));\n+            }\n+        }\n+    });\n+}"}, {"sha": "adfaf62b5d3cc04aa203f3ee2810725f63d45450", "filename": "src/test/parse-fail/unicode-chars.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7f63c7cf4c2938c31de3d63fc769706f0d87cb54/src%2Ftest%2Fparse-fail%2Funicode-chars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f63c7cf4c2938c31de3d63fc769706f0d87cb54/src%2Ftest%2Fparse-fail%2Funicode-chars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Funicode-chars.rs?ref=7f63c7cf4c2938c31de3d63fc769706f0d87cb54", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Z parse-only\n+// ignore-tidy-linelength\n+\n+fn main() {\n+    let y = 0\u037e\n+    //~^ ERROR unknown start of token: \\u{37e}\n+    //~^^ HELP unicode character '\u037e' (Greek Question Mark) looks much like ';' (Semicolon), but it's not\n+}"}]}