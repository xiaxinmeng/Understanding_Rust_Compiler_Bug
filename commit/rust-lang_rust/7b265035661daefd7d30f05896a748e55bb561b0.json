{"sha": "7b265035661daefd7d30f05896a748e55bb561b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiMjY1MDM1NjYxZGFlZmQ3ZDMwZjA1ODk2YTc0OGU1NWJiNTYxYjA=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-07-12T02:31:15Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-07-12T07:21:04Z"}, "message": "Make str be treated as str/~.", "tree": {"sha": "d4ba965cedf3d7ca6b1dd789ac72a1608e7c74da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4ba965cedf3d7ca6b1dd789ac72a1608e7c74da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b265035661daefd7d30f05896a748e55bb561b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b265035661daefd7d30f05896a748e55bb561b0", "html_url": "https://github.com/rust-lang/rust/commit/7b265035661daefd7d30f05896a748e55bb561b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b265035661daefd7d30f05896a748e55bb561b0/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b569bdec9fc6637ae35148caad4823906a7829b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/b569bdec9fc6637ae35148caad4823906a7829b4", "html_url": "https://github.com/rust-lang/rust/commit/b569bdec9fc6637ae35148caad4823906a7829b4"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "f24c382eb9e36765ba8cb74f852b74c91993ab64", "filename": "src/rustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b265035661daefd7d30f05896a748e55bb561b0/src%2Frustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b265035661daefd7d30f05896a748e55bb561b0/src%2Frustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fty.rs?ref=7b265035661daefd7d30f05896a748e55bb561b0", "patch": "@@ -652,7 +652,7 @@ fn mk_mach_float(cx: ctxt, tm: ast::float_ty) -> t { mk_t(cx, ty_float(tm)) }\n \n fn mk_char(cx: ctxt) -> t { mk_t(cx, ty_int(ast::ty_char)) }\n \n-fn mk_str(cx: ctxt) -> t { mk_t(cx, ty_str) }\n+fn mk_str(cx: ctxt) -> t { mk_estr(cx, vstore_uniq) }\n \n fn mk_estr(cx: ctxt, t: vstore) -> t {\n     mk_t(cx, ty_estr(t))"}, {"sha": "4f74da96b77cd8440e96bd7d7c160f18a7102e99", "filename": "src/rustc/middle/typeck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b265035661daefd7d30f05896a748e55bb561b0/src%2Frustc%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b265035661daefd7d30f05896a748e55bb561b0/src%2Frustc%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck.rs?ref=7b265035661daefd7d30f05896a748e55bb561b0", "patch": "@@ -223,7 +223,7 @@ fn arg_is_argv_ty(_tcx: ty::ctxt, a: ty::arg) -> bool {\n       ty::ty_evec(mt, vstore_uniq) {\n         if mt.mutbl != ast::m_imm { ret false; }\n         alt ty::get(mt.ty).struct {\n-          ty::ty_str { ret true; }\n+          ty::ty_estr(vstore_uniq) { ret true; }\n           _ { ret false; }\n         }\n       }"}, {"sha": "8b86db098e513ccffb9b305f90500dfa958f63b4", "filename": "src/test/compile-fail/bad-const-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b265035661daefd7d30f05896a748e55bb561b0/src%2Ftest%2Fcompile-fail%2Fbad-const-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b265035661daefd7d30f05896a748e55bb561b0/src%2Ftest%2Fcompile-fail%2Fbad-const-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-const-type.rs?ref=7b265035661daefd7d30f05896a748e55bb561b0", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern:expected `str` but found `int`\n+// error-pattern:expected `str/~` but found `int`\n \n const i: str = 10i;\n fn main() { log(debug, i); }"}, {"sha": "53bb7d8f53d98c4d86345d1517c0a0d9fe4fd721", "filename": "src/test/compile-fail/binop-bitxor-str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b265035661daefd7d30f05896a748e55bb561b0/src%2Ftest%2Fcompile-fail%2Fbinop-bitxor-str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b265035661daefd7d30f05896a748e55bb561b0/src%2Ftest%2Fcompile-fail%2Fbinop-bitxor-str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbinop-bitxor-str.rs?ref=7b265035661daefd7d30f05896a748e55bb561b0", "patch": "@@ -1,3 +1,3 @@\n-// error-pattern:^ cannot be applied to type `str`\n+// error-pattern:^ cannot be applied to type `str/~`\n \n fn main() { let x = \"a\" ^ \"b\"; }"}, {"sha": "3f9bda61c80eb932a769fc5641613c0fdeeea1d9", "filename": "src/test/compile-fail/fail-type-err.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b265035661daefd7d30f05896a748e55bb561b0/src%2Ftest%2Fcompile-fail%2Ffail-type-err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b265035661daefd7d30f05896a748e55bb561b0/src%2Ftest%2Fcompile-fail%2Ffail-type-err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffail-type-err.rs?ref=7b265035661daefd7d30f05896a748e55bb561b0", "patch": "@@ -1,2 +1,2 @@\n-// error-pattern:expected `str` but found `~[int]`\n+// error-pattern:expected `str/~` but found `~[int]`\n fn main() { fail ~[0i]; }"}, {"sha": "9386c15264846e43f4af113414dc0e3f0758801f", "filename": "src/test/compile-fail/map-types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b265035661daefd7d30f05896a748e55bb561b0/src%2Ftest%2Fcompile-fail%2Fmap-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b265035661daefd7d30f05896a748e55bb561b0/src%2Ftest%2Fcompile-fail%2Fmap-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmap-types.rs?ref=7b265035661daefd7d30f05896a748e55bb561b0", "patch": "@@ -8,5 +8,5 @@ import std::map::map;\n fn main() {\n     let x: map<str,str> = map::str_hash::<str>() as map::<str,str>;\n     let y: map<uint,str> = x;\n-    //~^ ERROR mismatched types: expected `std::map::map<uint,str>`\n+    //~^ ERROR mismatched types: expected `std::map::map<uint,str/~>`\n }"}, {"sha": "043d46f121b5c63947ae4a99b0c79b597169bd03", "filename": "src/test/compile-fail/minus-string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b265035661daefd7d30f05896a748e55bb561b0/src%2Ftest%2Fcompile-fail%2Fminus-string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b265035661daefd7d30f05896a748e55bb561b0/src%2Ftest%2Fcompile-fail%2Fminus-string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fminus-string.rs?ref=7b265035661daefd7d30f05896a748e55bb561b0", "patch": "@@ -1,3 +1,3 @@\n-// error-pattern:cannot apply unary operator `-` to type `str`\n+// error-pattern:cannot apply unary operator `-` to type `str/~`\n \n fn main() { -\"foo\"; }"}, {"sha": "31595875058e16c796a0299bad0b10e619346fdd", "filename": "src/test/compile-fail/missing-do.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b265035661daefd7d30f05896a748e55bb561b0/src%2Ftest%2Fcompile-fail%2Fmissing-do.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b265035661daefd7d30f05896a748e55bb561b0/src%2Ftest%2Fcompile-fail%2Fmissing-do.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmissing-do.rs?ref=7b265035661daefd7d30f05896a748e55bb561b0", "patch": "@@ -3,7 +3,7 @@\n fn foo(f: fn()) { f() }\n \n fn main() {\n-    \"\" || 42; //~ ERROR binary operation || cannot be applied to type `str`\n+    \"\" || 42; //~ ERROR binary operation || cannot be applied to type `str/~`\n     foo || {}; //~ ERROR binary operation || cannot be applied to type `extern fn(fn())`\n     //~^ NOTE did you forget the 'do' keyword for the call?\n }"}]}