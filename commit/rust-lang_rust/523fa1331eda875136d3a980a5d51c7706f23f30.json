{"sha": "523fa1331eda875136d3a980a5d51c7706f23f30", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyM2ZhMTMzMWVkYTg3NTEzNmQzYTk4MGE1ZDUxYzc3MDZmMjNmMzA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-10T08:03:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-10T08:03:06Z"}, "message": "Auto merge of #31494 - alexcrichton:ar-gnu-by-default, r=brson\n\nThe compiler currently vendors its own version of \"llvm-ar\" (not literally the\nbinary but rather the library support) and uses it for all major targets by\ndefault (e.g. everything defined in `src/librustc_back/target`). All custom\ntarget specs, however, still search for an `ar` tool by default. This commit\nchanges this default behavior to using the internally bundled llvm-ar with the\nGNU format.\n\nCurrently all targets use the GNU format except for OSX which uses the BSD\nformat (surely makes sense, right?), and custom targets can change the format\nvia the `archive-format` key in custom target specs.\n\nI suspect that we can outright remove support for invoking an external `ar`\nutility, but I figure for now there may be some crazy target relying on that so\nwe should leave support in for now.", "tree": {"sha": "6b00ee81e77b9acd63a987faf04216e486a20d6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b00ee81e77b9acd63a987faf04216e486a20d6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/523fa1331eda875136d3a980a5d51c7706f23f30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/523fa1331eda875136d3a980a5d51c7706f23f30", "html_url": "https://github.com/rust-lang/rust/commit/523fa1331eda875136d3a980a5d51c7706f23f30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/523fa1331eda875136d3a980a5d51c7706f23f30/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a20bfc8560290dde118057a88086c8f9572d8b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a20bfc8560290dde118057a88086c8f9572d8b7", "html_url": "https://github.com/rust-lang/rust/commit/9a20bfc8560290dde118057a88086c8f9572d8b7"}, {"sha": "d66f3948f5955c47b57eced6b83eee95acb9764b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d66f3948f5955c47b57eced6b83eee95acb9764b", "html_url": "https://github.com/rust-lang/rust/commit/d66f3948f5955c47b57eced6b83eee95acb9764b"}], "stats": {"total": 13, "additions": 1, "deletions": 12}, "files": [{"sha": "4330e2e7b5fb41c764faaafb5953009126baf1ee", "filename": "src/librustc_back/target/asmjs_unknown_emscripten.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/523fa1331eda875136d3a980a5d51c7706f23f30/src%2Flibrustc_back%2Ftarget%2Fasmjs_unknown_emscripten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/523fa1331eda875136d3a980a5d51c7706f23f30/src%2Flibrustc_back%2Ftarget%2Fasmjs_unknown_emscripten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fasmjs_unknown_emscripten.rs?ref=523fa1331eda875136d3a980a5d51c7706f23f30", "patch": "@@ -21,7 +21,6 @@ pub fn target() -> Target {\n         no_compiler_rt: true,\n         linker_is_gnu: true,\n         allow_asm: false,\n-        archive_format: \"gnu\".to_string(),\n         obj_is_bitcode: true,\n         .. Default::default()\n     };"}, {"sha": "8eed36f991554dc200b302a9dc4509dd282938a1", "filename": "src/librustc_back/target/bitrig_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/523fa1331eda875136d3a980a5d51c7706f23f30/src%2Flibrustc_back%2Ftarget%2Fbitrig_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/523fa1331eda875136d3a980a5d51c7706f23f30/src%2Flibrustc_back%2Ftarget%2Fbitrig_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fbitrig_base.rs?ref=523fa1331eda875136d3a980a5d51c7706f23f30", "patch": "@@ -19,7 +19,6 @@ pub fn opts() -> TargetOptions {\n         linker_is_gnu: true,\n         has_rpath: true,\n         position_independent_executables: true,\n-        archive_format: \"gnu\".to_string(),\n         exe_allocation_crate: \"alloc_system\".to_string(),\n \n         .. Default::default()"}, {"sha": "f05319a0cbeb628a30d53046c405965ec7feb6c0", "filename": "src/librustc_back/target/dragonfly_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/523fa1331eda875136d3a980a5d51c7706f23f30/src%2Flibrustc_back%2Ftarget%2Fdragonfly_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/523fa1331eda875136d3a980a5d51c7706f23f30/src%2Flibrustc_back%2Ftarget%2Fdragonfly_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fdragonfly_base.rs?ref=523fa1331eda875136d3a980a5d51c7706f23f30", "patch": "@@ -29,7 +29,6 @@ pub fn opts() -> TargetOptions {\n             \"-Wl,-z,noexecstack\".to_string(),\n         ),\n         position_independent_executables: true,\n-        archive_format: \"gnu\".to_string(),\n         exe_allocation_crate: super::maybe_jemalloc(),\n         .. Default::default()\n     }"}, {"sha": "651c2a3760a80ab65aef7570e14da4835f5a7fdd", "filename": "src/librustc_back/target/freebsd_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/523fa1331eda875136d3a980a5d51c7706f23f30/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/523fa1331eda875136d3a980a5d51c7706f23f30/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs?ref=523fa1331eda875136d3a980a5d51c7706f23f30", "patch": "@@ -21,7 +21,6 @@ pub fn opts() -> TargetOptions {\n             // Always enable NX protection when it is available\n             \"-Wl,-z,noexecstack\".to_string(),\n         ],\n-        archive_format: \"gnu\".to_string(),\n         exe_allocation_crate: super::maybe_jemalloc(),\n \n         .. Default::default()"}, {"sha": "d37102e558d4a5e970e2eab698ac4031c8206c2e", "filename": "src/librustc_back/target/le32_unknown_nacl.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/523fa1331eda875136d3a980a5d51c7706f23f30/src%2Flibrustc_back%2Ftarget%2Fle32_unknown_nacl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/523fa1331eda875136d3a980a5d51c7706f23f30/src%2Flibrustc_back%2Ftarget%2Fle32_unknown_nacl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fle32_unknown_nacl.rs?ref=523fa1331eda875136d3a980a5d51c7706f23f30", "patch": "@@ -25,7 +25,6 @@ pub fn target() -> Target {\n         no_compiler_rt: false,\n         linker_is_gnu: true,\n         allow_asm: false,\n-        archive_format: \"gnu\".to_string(),\n         .. Default::default()\n     };\n     Target {"}, {"sha": "d1ab71e41404ef46b4fb6ef749feca43b7c13855", "filename": "src/librustc_back/target/linux_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/523fa1331eda875136d3a980a5d51c7706f23f30/src%2Flibrustc_back%2Ftarget%2Flinux_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/523fa1331eda875136d3a980a5d51c7706f23f30/src%2Flibrustc_back%2Ftarget%2Flinux_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Flinux_base.rs?ref=523fa1331eda875136d3a980a5d51c7706f23f30", "patch": "@@ -31,7 +31,6 @@ pub fn opts() -> TargetOptions {\n             \"-Wl,-z,noexecstack\".to_string(),\n         ],\n         position_independent_executables: true,\n-        archive_format: \"gnu\".to_string(),\n         exe_allocation_crate: super::maybe_jemalloc(),\n         has_elf_tls: true,\n         .. Default::default()"}, {"sha": "896fde50147e716ca8dd4cf37fed1e3ef358a5cc", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/523fa1331eda875136d3a980a5d51c7706f23f30/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/523fa1331eda875136d3a980a5d51c7706f23f30/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=523fa1331eda875136d3a980a5d51c7706f23f30", "patch": "@@ -249,7 +249,7 @@ impl Default for TargetOptions {\n             pre_link_objects_dll: Vec::new(),\n             post_link_objects: Vec::new(),\n             late_link_args: Vec::new(),\n-            archive_format: String::new(),\n+            archive_format: \"gnu\".to_string(),\n             custom_unwind_resume: false,\n             lib_allocation_crate: \"alloc_system\".to_string(),\n             exe_allocation_crate: \"alloc_system\".to_string(),"}, {"sha": "bf6a2e1ce7562cc23fb44eedd7d2f750967359c4", "filename": "src/librustc_back/target/netbsd_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/523fa1331eda875136d3a980a5d51c7706f23f30/src%2Flibrustc_back%2Ftarget%2Fnetbsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/523fa1331eda875136d3a980a5d51c7706f23f30/src%2Flibrustc_back%2Ftarget%2Fnetbsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fnetbsd_base.rs?ref=523fa1331eda875136d3a980a5d51c7706f23f30", "patch": "@@ -29,7 +29,6 @@ pub fn opts() -> TargetOptions {\n             \"-Wl,-z,noexecstack\".to_string(),\n         ),\n         position_independent_executables: true,\n-        archive_format: \"gnu\".to_string(),\n         .. Default::default()\n     }\n }"}, {"sha": "d3db0e48771d88b673f18c3bea47ad08ce837c57", "filename": "src/librustc_back/target/openbsd_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/523fa1331eda875136d3a980a5d51c7706f23f30/src%2Flibrustc_back%2Ftarget%2Fopenbsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/523fa1331eda875136d3a980a5d51c7706f23f30/src%2Flibrustc_back%2Ftarget%2Fopenbsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fopenbsd_base.rs?ref=523fa1331eda875136d3a980a5d51c7706f23f30", "patch": "@@ -29,7 +29,6 @@ pub fn opts() -> TargetOptions {\n             \"-Wl,-z,noexecstack\".to_string(),\n         ),\n         position_independent_executables: true,\n-        archive_format: \"gnu\".to_string(),\n         exe_allocation_crate: \"alloc_system\".to_string(),\n         .. Default::default()\n     }"}, {"sha": "4ffa0c69da9b5a0a02e8bbdf3187e1253f755253", "filename": "src/librustc_back/target/solaris_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/523fa1331eda875136d3a980a5d51c7706f23f30/src%2Flibrustc_back%2Ftarget%2Fsolaris_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/523fa1331eda875136d3a980a5d51c7706f23f30/src%2Flibrustc_back%2Ftarget%2Fsolaris_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fsolaris_base.rs?ref=523fa1331eda875136d3a980a5d51c7706f23f30", "patch": "@@ -18,7 +18,6 @@ pub fn opts() -> TargetOptions {\n         executables: true,\n         has_rpath: true,\n         is_like_solaris: true,\n-        archive_format: \"gnu\".to_string(),\n         exe_allocation_crate: super::maybe_jemalloc(),\n \n         .. Default::default()"}, {"sha": "1e46f45bdcf4f2365da250926f8e2033365fd4b5", "filename": "src/librustc_back/target/windows_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/523fa1331eda875136d3a980a5d51c7706f23f30/src%2Flibrustc_back%2Ftarget%2Fwindows_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/523fa1331eda875136d3a980a5d51c7706f23f30/src%2Flibrustc_back%2Ftarget%2Fwindows_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fwindows_base.rs?ref=523fa1331eda875136d3a980a5d51c7706f23f30", "patch": "@@ -25,7 +25,6 @@ pub fn opts() -> TargetOptions {\n         staticlib_suffix: \".lib\".to_string(),\n         no_default_libraries: true,\n         is_like_windows: true,\n-        archive_format: \"gnu\".to_string(),\n         pre_link_args: vec!(\n             // And here, we see obscure linker flags #45. On windows, it has been\n             // found to be necessary to have this flag to compile liblibc."}, {"sha": "84e22e84fdb58438b4732558a31d8632ec2bbb6f", "filename": "src/librustc_back/target/windows_msvc_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/523fa1331eda875136d3a980a5d51c7706f23f30/src%2Flibrustc_back%2Ftarget%2Fwindows_msvc_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/523fa1331eda875136d3a980a5d51c7706f23f30/src%2Flibrustc_back%2Ftarget%2Fwindows_msvc_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fwindows_msvc_base.rs?ref=523fa1331eda875136d3a980a5d51c7706f23f30", "patch": "@@ -59,7 +59,6 @@ pub fn opts() -> TargetOptions {\n             \"/NOLOGO\".to_string(),\n             \"/NXCOMPAT\".to_string(),\n         ],\n-        archive_format: \"gnu\".to_string(),\n         exe_allocation_crate: \"alloc_system\".to_string(),\n \n         .. Default::default()"}]}