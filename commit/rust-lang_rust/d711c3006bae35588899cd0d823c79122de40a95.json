{"sha": "d711c3006bae35588899cd0d823c79122de40a95", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3MTFjMzAwNmJhZTM1NTg4ODk5Y2QwZDgyM2M3OTEyMmRlNDBhOTU=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-12-09T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-12-09T00:00:00Z"}, "message": "Remove `first_merge` from liveness debug logs", "tree": {"sha": "12a6ecee0c2ff237d15e5c5bc030f1d202995684", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12a6ecee0c2ff237d15e5c5bc030f1d202995684"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d711c3006bae35588899cd0d823c79122de40a95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d711c3006bae35588899cd0d823c79122de40a95", "html_url": "https://github.com/rust-lang/rust/commit/d711c3006bae35588899cd0d823c79122de40a95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d711c3006bae35588899cd0d823c79122de40a95/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1700ca07c6dd7becff85678409a5df6ad4cf4f47", "url": "https://api.github.com/repos/rust-lang/rust/commits/1700ca07c6dd7becff85678409a5df6ad4cf4f47", "html_url": "https://github.com/rust-lang/rust/commit/1700ca07c6dd7becff85678409a5df6ad4cf4f47"}], "stats": {"total": 24, "additions": 6, "deletions": 18}, "files": [{"sha": "0b464f25efb7ba6da9752fbe05a827d56e5e6a77", "filename": "compiler/rustc_passes/src/liveness.rs", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d711c3006bae35588899cd0d823c79122de40a95/compiler%2Frustc_passes%2Fsrc%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d711c3006bae35588899cd0d823c79122de40a95/compiler%2Frustc_passes%2Fsrc%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fliveness.rs?ref=d711c3006bae35588899cd0d823c79122de40a95", "patch": "@@ -781,19 +781,13 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n         debug!(\"init_from_succ(ln={}, succ={})\", self.ln_str(ln), self.ln_str(succ_ln));\n     }\n \n-    fn merge_from_succ(&mut self, ln: LiveNode, succ_ln: LiveNode, first_merge: bool) -> bool {\n+    fn merge_from_succ(&mut self, ln: LiveNode, succ_ln: LiveNode) -> bool {\n         if ln == succ_ln {\n             return false;\n         }\n \n         let changed = self.rwu_table.union(ln, succ_ln);\n-        debug!(\n-            \"merge_from_succ(ln={:?}, succ={}, first_merge={}, changed={})\",\n-            ln,\n-            self.ln_str(succ_ln),\n-            first_merge,\n-            changed\n-        );\n+        debug!(\"merge_from_succ(ln={:?}, succ={}, changed={})\", ln, self.ln_str(succ_ln), changed);\n         changed\n     }\n \n@@ -893,7 +887,6 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n         };\n \n         // Propagate through calls to the closure.\n-        let mut first_merge = true;\n         loop {\n             self.init_from_succ(self.closure_ln, succ);\n             for param in body.params {\n@@ -903,10 +896,9 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n                 })\n             }\n \n-            if !self.merge_from_succ(self.exit_ln, self.closure_ln, first_merge) {\n+            if !self.merge_from_succ(self.exit_ln, self.closure_ln) {\n                 break;\n             }\n-            first_merge = false;\n             assert_eq!(succ, self.propagate_through_expr(&body.value, self.exit_ln));\n         }\n \n@@ -1012,7 +1004,6 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n                 //\n                 let ln = self.live_node(expr.hir_id, expr.span);\n                 self.init_empty(ln, succ);\n-                let mut first_merge = true;\n                 for arm in arms {\n                     let body_succ = self.propagate_through_expr(&arm.body, succ);\n \n@@ -1021,8 +1012,7 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n                         body_succ,\n                     );\n                     let arm_succ = self.define_bindings_in_pat(&arm.pat, guard_succ);\n-                    self.merge_from_succ(ln, arm_succ, first_merge);\n-                    first_merge = false;\n+                    self.merge_from_succ(ln, arm_succ);\n                 }\n                 self.propagate_through_expr(&e, ln)\n             }\n@@ -1133,7 +1123,7 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n \n                 let ln = self.live_node(expr.hir_id, expr.span);\n                 self.init_from_succ(ln, succ);\n-                self.merge_from_succ(ln, r_succ, false);\n+                self.merge_from_succ(ln, r_succ);\n \n                 self.propagate_through_expr(&l, ln)\n             }\n@@ -1377,7 +1367,6 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n         */\n \n         // first iteration:\n-        let mut first_merge = true;\n         let ln = self.live_node(expr.hir_id, expr.span);\n         self.init_empty(ln, succ);\n         debug!(\"propagate_through_loop: using id for loop body {} {:?}\", expr.hir_id, body);\n@@ -1389,8 +1378,7 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n         let body_ln = self.propagate_through_block(body, ln);\n \n         // repeat until fixed point is reached:\n-        while self.merge_from_succ(ln, body_ln, first_merge) {\n-            first_merge = false;\n+        while self.merge_from_succ(ln, body_ln) {\n             assert_eq!(body_ln, self.propagate_through_block(body, ln));\n         }\n "}]}