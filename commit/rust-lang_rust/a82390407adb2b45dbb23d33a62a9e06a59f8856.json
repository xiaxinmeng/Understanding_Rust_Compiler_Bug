{"sha": "a82390407adb2b45dbb23d33a62a9e06a59f8856", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4MjM5MDQwN2FkYjJiNDVkYmIyM2QzM2E2MmE5ZTA2YTU5Zjg4NTY=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-12-12T01:09:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-12T01:09:21Z"}, "message": "Rollup merge of #67215 - nnethercote:fix-Zprint-type-size-zero-sized-fields, r=pnkfelix\n\nFix `-Z print-type-sizes`'s handling of zero-sized fields.\n\nCurrently, the type `struct S { x: u32, y: u32, tag: () }` is\nincorrectly described like this:\n```\nprint-type-size type: `S`: 8 bytes, alignment: 4 bytes\nprint-type-size     field `.x`: 4 bytes\nprint-type-size     field `.tag`: 0 bytes, offset: 0 bytes, alignment: 1 bytes\nprint-type-size     padding: 4 bytes\nprint-type-size     field `.y`: 4 bytes, alignment: 4 bytes\n```\nSpecifically:\n- The `padding` line is wrong. (There is no padding.)\n- The `offset` and `alignment` on the `.tag` line shouldn't be printed.\n\nThe problem is that multiple fields can end up with the same offset, and\nthe printing code doesn't handle this correctly.\n\nThis commit fixes it by adjusting the field sorting so that zero-sized fields\nare dealt with before non-zero-sized fields. With that in place, the\nprinting code works correctly.\n\nThe commit also corrects the \"something is very wrong\" comment.\n\nThe new output looks like this:\n```\nprint-type-size type: `S`: 8 bytes, alignment: 4 bytes\nprint-type-size     field `.tag`: 0 bytes\nprint-type-size     field `.x`: 4 bytes\nprint-type-size     field `.y`: 4 bytes\n```\nr? @pnkfelix", "tree": {"sha": "339a5b63b95aabda5a58ef9dafb7e24a96905f61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/339a5b63b95aabda5a58ef9dafb7e24a96905f61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a82390407adb2b45dbb23d33a62a9e06a59f8856", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd8ZNBCRBK7hj4Ov3rIwAAdHIIACvGEDjDtZLtSo9mVZ2srdT0\nFVN0vQIE7ePn3BJwxb/Ofvwk5KkLbOgZaklKNq6VAGaJlpTK242I0YJaFNuuaKAU\n1iZUzrnH5KakWt8GHAsjpfSJTbQyF0aontOZbebgQ6g9veM4uKjYdfYtQSeWkKkM\nsLLtABtBDvtLvrlKK7y6Olg0kTqtOwFTB752zRDzZqLG8l3hm03dEZrbAVWBG4oj\njNCIxrOzeM3Y+QLylozgzkaPDCB10N3aCLyETNcxzEdUe54gQsKIQN3RdxXxSHFU\n6+ILGtW2pbkIsWSaTIa3QSk0MvYPOmnb0slaI/AEMc3jD3z/FaqNzqPedGi5290=\n=9PHu\n-----END PGP SIGNATURE-----\n", "payload": "tree 339a5b63b95aabda5a58ef9dafb7e24a96905f61\nparent f642dc4124730da85b3d4071826e2d0025bebdbc\nparent c681841ca078d6f29776d961ba8e44196662413e\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1576112961 +0900\ncommitter GitHub <noreply@github.com> 1576112961 +0900\n\nRollup merge of #67215 - nnethercote:fix-Zprint-type-size-zero-sized-fields, r=pnkfelix\n\nFix `-Z print-type-sizes`'s handling of zero-sized fields.\n\nCurrently, the type `struct S { x: u32, y: u32, tag: () }` is\nincorrectly described like this:\n```\nprint-type-size type: `S`: 8 bytes, alignment: 4 bytes\nprint-type-size     field `.x`: 4 bytes\nprint-type-size     field `.tag`: 0 bytes, offset: 0 bytes, alignment: 1 bytes\nprint-type-size     padding: 4 bytes\nprint-type-size     field `.y`: 4 bytes, alignment: 4 bytes\n```\nSpecifically:\n- The `padding` line is wrong. (There is no padding.)\n- The `offset` and `alignment` on the `.tag` line shouldn't be printed.\n\nThe problem is that multiple fields can end up with the same offset, and\nthe printing code doesn't handle this correctly.\n\nThis commit fixes it by adjusting the field sorting so that zero-sized fields\nare dealt with before non-zero-sized fields. With that in place, the\nprinting code works correctly.\n\nThe commit also corrects the \"something is very wrong\" comment.\n\nThe new output looks like this:\n```\nprint-type-size type: `S`: 8 bytes, alignment: 4 bytes\nprint-type-size     field `.tag`: 0 bytes\nprint-type-size     field `.x`: 4 bytes\nprint-type-size     field `.y`: 4 bytes\n```\nr? @pnkfelix\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a82390407adb2b45dbb23d33a62a9e06a59f8856", "html_url": "https://github.com/rust-lang/rust/commit/a82390407adb2b45dbb23d33a62a9e06a59f8856", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a82390407adb2b45dbb23d33a62a9e06a59f8856/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f642dc4124730da85b3d4071826e2d0025bebdbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/f642dc4124730da85b3d4071826e2d0025bebdbc", "html_url": "https://github.com/rust-lang/rust/commit/f642dc4124730da85b3d4071826e2d0025bebdbc"}, {"sha": "c681841ca078d6f29776d961ba8e44196662413e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c681841ca078d6f29776d961ba8e44196662413e", "html_url": "https://github.com/rust-lang/rust/commit/c681841ca078d6f29776d961ba8e44196662413e"}], "stats": {"total": 71, "additions": 68, "deletions": 3}, "files": [{"sha": "764d6d8eaee30c0cc478b6f67797aad6d98f2c2d", "filename": "src/librustc_session/code_stats.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a82390407adb2b45dbb23d33a62a9e06a59f8856/src%2Flibrustc_session%2Fcode_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82390407adb2b45dbb23d33a62a9e06a59f8856/src%2Flibrustc_session%2Fcode_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Fcode_stats.rs?ref=a82390407adb2b45dbb23d33a62a9e06a59f8856", "patch": "@@ -132,9 +132,12 @@ impl CodeStats {\n \n                 let mut min_offset = discr_size;\n \n-                // We want to print fields by increasing offset.\n+                // We want to print fields by increasing offset. We also want\n+                // zero-sized fields before non-zero-sized fields, otherwise\n+                // the loop below goes wrong; hence the `f.size` in the sort\n+                // key.\n                 let mut fields = fields.clone();\n-                fields.sort_by_key(|f| f.offset);\n+                fields.sort_by_key(|f| (f.offset, f.size));\n \n                 for field in fields.iter() {\n                     let FieldInfo { ref name, offset, size, align } = *field;\n@@ -146,7 +149,7 @@ impl CodeStats {\n                     }\n \n                     if offset < min_offset {\n-                        // if this happens something is very wrong\n+                        // If this happens it's probably a union.\n                         println!(\"print-type-size {}field `.{}`: {} bytes, \\\n                                   offset: {} bytes, \\\n                                   alignment: {} bytes\","}, {"sha": "2ad488e8d8fb90ebd0ab106bb5a70e5fc787e526", "filename": "src/test/ui/print_type_sizes/zero-sized-fields.rs", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/a82390407adb2b45dbb23d33a62a9e06a59f8856/src%2Ftest%2Fui%2Fprint_type_sizes%2Fzero-sized-fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82390407adb2b45dbb23d33a62a9e06a59f8856/src%2Ftest%2Fui%2Fprint_type_sizes%2Fzero-sized-fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Fzero-sized-fields.rs?ref=a82390407adb2b45dbb23d33a62a9e06a59f8856", "patch": "@@ -0,0 +1,46 @@\n+// compile-flags: -Z print-type-sizes\n+// build-pass (FIXME(62277): could be check-pass?)\n+\n+// At one point, zero-sized fields such as those in this file were causing\n+// incorrect output from `-Z print-type-sizes`.\n+\n+#![feature(start)]\n+\n+struct S1 {\n+    x: u32,\n+    y: u32,\n+    tag: (),\n+}\n+\n+struct Void();\n+struct Empty {}\n+\n+struct S5<TagW, TagZ> {\n+    tagw: TagW,\n+    w: u32,\n+    unit: (),\n+    x: u32,\n+    void: Void,\n+    y: u32,\n+    empty: Empty,\n+    z: u32,\n+    tagz: TagZ,\n+}\n+\n+#[start]\n+fn start(_: isize, _: *const *const u8) -> isize {\n+    let _s1: S1 = S1 { x: 0, y: 0, tag: () };\n+\n+    let _s5: S5<(), Empty> = S5 {\n+        tagw: (),\n+        w: 1,\n+        unit: (),\n+        x: 2,\n+        void: Void(),\n+        y: 3,\n+        empty: Empty {},\n+        z: 4,\n+        tagz: Empty {},\n+    };\n+    0\n+}"}, {"sha": "72f59c4bb57bf6bf801cf86d2afce46d250478e2", "filename": "src/test/ui/print_type_sizes/zero-sized-fields.stdout", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a82390407adb2b45dbb23d33a62a9e06a59f8856/src%2Ftest%2Fui%2Fprint_type_sizes%2Fzero-sized-fields.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/a82390407adb2b45dbb23d33a62a9e06a59f8856/src%2Ftest%2Fui%2Fprint_type_sizes%2Fzero-sized-fields.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Fzero-sized-fields.stdout?ref=a82390407adb2b45dbb23d33a62a9e06a59f8856", "patch": "@@ -0,0 +1,16 @@\n+print-type-size type: `S5<(), Empty>`: 16 bytes, alignment: 4 bytes\n+print-type-size     field `.tagw`: 0 bytes\n+print-type-size     field `.unit`: 0 bytes\n+print-type-size     field `.void`: 0 bytes\n+print-type-size     field `.empty`: 0 bytes\n+print-type-size     field `.tagz`: 0 bytes\n+print-type-size     field `.w`: 4 bytes\n+print-type-size     field `.x`: 4 bytes\n+print-type-size     field `.y`: 4 bytes\n+print-type-size     field `.z`: 4 bytes\n+print-type-size type: `S1`: 8 bytes, alignment: 4 bytes\n+print-type-size     field `.tag`: 0 bytes\n+print-type-size     field `.x`: 4 bytes\n+print-type-size     field `.y`: 4 bytes\n+print-type-size type: `Empty`: 0 bytes, alignment: 1 bytes\n+print-type-size type: `Void`: 0 bytes, alignment: 1 bytes"}]}