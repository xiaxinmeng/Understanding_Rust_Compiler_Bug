{"sha": "1ecce2d803dbae76b2956012c3213ce7448cceae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlY2NlMmQ4MDNkYmFlNzZiMjk1NjAxMmMzMjEzY2U3NDQ4Y2NlYWU=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2017-12-27T22:28:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-27T22:28:04Z"}, "message": "Merge pull request #2307 from clarcharr/master\n\nRearrange README.md.", "tree": {"sha": "2f6ba790c0e1e21ab1785e0e1ed773fe23487742", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f6ba790c0e1e21ab1785e0e1ed773fe23487742"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ecce2d803dbae76b2956012c3213ce7448cceae", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaRB50CRBK7hj4Ov3rIwAAdHIIAF64KkTNMbrzADHJ6idtpMna\nrnDLetqI595JOnDMxu0GwgKJ4zIZU6N8zaXF5GQjVf3PEdevlhG2/08tkCnpRiCE\noFgWxfhDQ8gykjBpz/jk0JLrfZqLlh2LfjPI4eKGyn2nsE31MiqQXVIu3p6Kp7YF\nVQRX85F+ryyNcxMoqeYHvSjO9llz+SV5kYpHhSY4VLFQXfRH03Q2N4NxUjBOfIfH\n7FQyh/Np4ooQ8ZZyHmDc4A3lvNUIbHpI6prz4G868DrZI+ndnQVTwMABRBxkjeH4\nu2VZwIDpoHCOz6ljg6SMEE8UhTXuSmy8Fu1Zis8uQggOT5fyhuzAAvTOvLr3Diw=\n=53Sr\n-----END PGP SIGNATURE-----\n", "payload": "tree 2f6ba790c0e1e21ab1785e0e1ed773fe23487742\nparent f0d0fc69de8ead855a98f5a5254c801dcce4d872\nparent 8abf9647cef4c39c890062b20e2ceee8132a0aed\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1514413684 +0100\ncommitter GitHub <noreply@github.com> 1514413684 +0100\n\nMerge pull request #2307 from clarcharr/master\n\nRearrange README.md."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ecce2d803dbae76b2956012c3213ce7448cceae", "html_url": "https://github.com/rust-lang/rust/commit/1ecce2d803dbae76b2956012c3213ce7448cceae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ecce2d803dbae76b2956012c3213ce7448cceae/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0d0fc69de8ead855a98f5a5254c801dcce4d872", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0d0fc69de8ead855a98f5a5254c801dcce4d872", "html_url": "https://github.com/rust-lang/rust/commit/f0d0fc69de8ead855a98f5a5254c801dcce4d872"}, {"sha": "8abf9647cef4c39c890062b20e2ceee8132a0aed", "url": "https://api.github.com/repos/rust-lang/rust/commits/8abf9647cef4c39c890062b20e2ceee8132a0aed", "html_url": "https://github.com/rust-lang/rust/commit/8abf9647cef4c39c890062b20e2ceee8132a0aed"}], "stats": {"total": 54, "additions": 32, "deletions": 22}, "files": [{"sha": "4be313c392ea938704769782cd5f6c2e9f15e9a8", "filename": "README.md", "status": "modified", "additions": 32, "deletions": 22, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/1ecce2d803dbae76b2956012c3213ce7448cceae/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/1ecce2d803dbae76b2956012c3213ce7448cceae/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=1ecce2d803dbae76b2956012c3213ce7448cceae", "patch": "@@ -26,18 +26,35 @@ as an included feature during build. All of these options are detailed below.\n \n As a general rule clippy will only work with the *latest* Rust nightly for now.\n \n-### Optional dependency\n+### As a cargo subcommand (`cargo clippy`)\n+\n+One way to use clippy is by installing clippy through cargo as a cargo\n+subcommand.\n+\n+```terminal\n+cargo install clippy\n+```\n+\n+Now you can run clippy by invoking `cargo clippy`, or\n+`cargo +nightly clippy` directly from a directory that is usually\n+compiled with stable.\n+\n+In case you are not using rustup, you need to set the environment flag\n+`SYSROOT` during installation so clippy knows where to find `librustc` and\n+similar crates.\n+\n+```terminal\n+SYSROOT=/path/to/rustc/sysroot cargo install clippy\n+```\n \n-If you want to make clippy an optional dependency, you can do the following:\n+### Optional dependency\n \n-In your `Cargo.toml`:\n+In some cases you might want to include clippy in your project directly, as an\n+optional dependency. To do this, just modify `Cargo.toml`:\n \n ```toml\n [dependencies]\n-clippy = {version = \"*\", optional = true}\n-\n-[features]\n-default = []\n+clippy = { version = \"*\", optional = true }\n ```\n \n And, in your `main.rs` or `lib.rs`, add these lines:\n@@ -54,25 +71,18 @@ Instead of adding the `cfg_attr` attributes you can also run clippy on demand:\n (the `-Z no trans`, while not necessary, will stop the compilation process after\n typechecking (and lints) have completed, which can significantly reduce the runtime).\n \n-### As a cargo subcommand (`cargo clippy`)\n+Alternatively, to only run clippy when testing:\n \n-An alternate way to use clippy is by installing clippy through cargo as a cargo\n-subcommand.\n-\n-```terminal\n-cargo install clippy\n+```toml\n+[dev-dependencies]`\n+clippy = { version = \"*\" }\n ```\n \n-Now you can run clippy by invoking `cargo clippy`, or\n-`rustup run nightly cargo clippy` directly from a directory that is usually\n-compiled with stable.\n+and add to `main.rs` or  `lib.rs`:\n \n-In case you are not using rustup, you need to set the environment flag\n-`SYSROOT` during installation so clippy knows where to find `librustc` and\n-similar crates.\n-\n-```terminal\n-SYSROOT=/path/to/rustc/sysroot cargo install clippy\n+```\n+#![cfg_attr(test, feature(plugin))]\n+#![cfg_attr(test, plugin(clippy))]\n ```\n \n ### Running clippy from the command line without installing"}]}