{"sha": "c0b87359599629d69a7b37318088dac3a5d67c9c", "node_id": "C_kwDOAAsO6NoAKGMwYjg3MzU5NTk5NjI5ZDY5YTdiMzczMTgwODhkYWMzYTVkNjdjOWM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-14T05:51:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-14T05:51:55Z"}, "message": "Auto merge of #106833 - JohnTitor:rollup-z8398jk, r=JohnTitor\n\nRollup of 13 pull requests\n\nSuccessful merges:\n\n - #104965 (reword Option::as_ref and Option::map examples)\n - #105172 (Added error documentation for write_fmt)\n - #106605 (rustdoc: fix outdated lint section of the book)\n - #106670 (Check compiler docs in PR CI)\n - #106692 (mv binary_heap.rs binary_heap/mod.rs)\n - #106693 (rustdoc: rename CSS rustdoc-toggle -> toggle and toggle -> settings-toggle)\n - #106707 (Remove duplicate sha-1 dependency)\n - #106762 (Add `AtomicPtr::as_mut_ptr`)\n - #106766 (Remove dead code in rustdoc stripper)\n - #106775 (Remove stale reference to the test suite location)\n - #106799 (Stop having unused lifetimes on some `impl`s)\n - #106816 (Update `rental` hack to work with remapped paths.)\n - #106819 (rustdoc: remove unnecessary DOM class `h1.fqn`)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "865c09aa1a568a21ce99f9760bb4c90225abb84c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/865c09aa1a568a21ce99f9760bb4c90225abb84c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0b87359599629d69a7b37318088dac3a5d67c9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0b87359599629d69a7b37318088dac3a5d67c9c", "html_url": "https://github.com/rust-lang/rust/commit/c0b87359599629d69a7b37318088dac3a5d67c9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0b87359599629d69a7b37318088dac3a5d67c9c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9e09083674a58d361cd805877be55b5856d2806", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9e09083674a58d361cd805877be55b5856d2806", "html_url": "https://github.com/rust-lang/rust/commit/e9e09083674a58d361cd805877be55b5856d2806"}, {"sha": "caa1d47fbad7bdb951480f7527fa741b503bf180", "url": "https://api.github.com/repos/rust-lang/rust/commits/caa1d47fbad7bdb951480f7527fa741b503bf180", "html_url": "https://github.com/rust-lang/rust/commit/caa1d47fbad7bdb951480f7527fa741b503bf180"}], "stats": {"total": 722, "additions": 487, "deletions": 235}, "files": [{"sha": "735f24355a10c9a18c93df5e58e7c4ddf21e063a", "filename": "Cargo.lock", "status": "modified", "additions": 16, "deletions": 27, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -3014,29 +3014,29 @@ dependencies = [\n \n [[package]]\n name = \"pest\"\n-version = \"2.3.0\"\n+version = \"2.5.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"4b0560d531d1febc25a3c9398a62a71256c0178f2e3443baedd9ad4bb8c9deb4\"\n+checksum = \"0f6e86fb9e7026527a0d46bc308b841d73170ef8f443e1807f6ef88526a816d4\"\n dependencies = [\n  \"thiserror\",\n  \"ucd-trie\",\n ]\n \n [[package]]\n name = \"pest_derive\"\n-version = \"2.3.0\"\n+version = \"2.5.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"905708f7f674518498c1f8d644481440f476d39ca6ecae83319bba7c6c12da91\"\n+checksum = \"96504449aa860c8dcde14f9fba5c58dc6658688ca1fe363589d6327b8662c603\"\n dependencies = [\n  \"pest\",\n  \"pest_generator\",\n ]\n \n [[package]]\n name = \"pest_generator\"\n-version = \"2.3.0\"\n+version = \"2.5.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"5803d8284a629cc999094ecd630f55e91b561a1d1ba75e233b00ae13b91a69ad\"\n+checksum = \"798e0220d1111ae63d66cb66a5dcb3fc2d986d520b98e49e1852bfdb11d7c5e7\"\n dependencies = [\n  \"pest\",\n  \"pest_meta\",\n@@ -3047,13 +3047,13 @@ dependencies = [\n \n [[package]]\n name = \"pest_meta\"\n-version = \"2.3.0\"\n+version = \"2.5.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"1538eb784f07615c6d9a8ab061089c6c54a344c5b4301db51990ca1c241e8c04\"\n+checksum = \"984298b75898e30a843e278a9f2452c31e349a073a0ce6fd950a12a74464e065\"\n dependencies = [\n  \"once_cell\",\n  \"pest\",\n- \"sha-1\",\n+ \"sha1\",\n ]\n \n [[package]]\n@@ -4685,7 +4685,7 @@ dependencies = [\n  \"rustc_macros\",\n  \"rustc_serialize\",\n  \"scoped-tls\",\n- \"sha-1\",\n+ \"sha1\",\n  \"sha2\",\n  \"tracing\",\n  \"unicode-width\",\n@@ -5094,17 +5094,6 @@ dependencies = [\n  \"serde\",\n ]\n \n-[[package]]\n-name = \"sha-1\"\n-version = \"0.10.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"028f48d513f9678cda28f6e4064755b3fbb2af6acd672f2c209b62323f7aea0f\"\n-dependencies = [\n- \"cfg-if\",\n- \"cpufeatures\",\n- \"digest\",\n-]\n-\n [[package]]\n name = \"sha1\"\n version = \"0.10.5\"\n@@ -5540,18 +5529,18 @@ checksum = \"ceb05e71730d396f960f8f3901cdb41be2d339b303e9d7d3a07c5ff0536e671b\"\n \n [[package]]\n name = \"thiserror\"\n-version = \"1.0.33\"\n+version = \"1.0.38\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"3d0a539a918745651435ac7db7a18761589a94cd7e94cd56999f828bf73c8a57\"\n+checksum = \"6a9cd18aa97d5c45c6603caea1da6628790b37f7a34b6ca89522331c5180fed0\"\n dependencies = [\n  \"thiserror-impl\",\n ]\n \n [[package]]\n name = \"thiserror-impl\"\n-version = \"1.0.33\"\n+version = \"1.0.38\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"c251e90f708e16c49a16f4917dc2131e75222b72edfa9cb7f7c58ae56aae0c09\"\n+checksum = \"1fb327af4685e4d03fa8cbcf1716380da910eeb2bb8be417e7f9fd3fb164f36f\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n@@ -5832,9 +5821,9 @@ dependencies = [\n \n [[package]]\n name = \"ucd-trie\"\n-version = \"0.1.3\"\n+version = \"0.1.5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"56dee185309b50d1f11bfedef0fe6d036842e3fb77413abef29f8f8d1c5d4c1c\"\n+checksum = \"9e79c4d996edb816c91e4308506774452e55e95c3c9de07b6729e17e15a5ef81\"\n \n [[package]]\n name = \"ui_test\""}, {"sha": "ffde8480c02117283c3ac7c47d96f4c48dcabe58", "filename": "compiler/rustc_expand/src/base.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fbase.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -31,11 +31,11 @@ use rustc_span::edition::Edition;\n use rustc_span::hygiene::{AstPass, ExpnData, ExpnKind, LocalExpnId};\n use rustc_span::source_map::SourceMap;\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n-use rustc_span::{BytePos, FileName, RealFileName, Span, DUMMY_SP};\n+use rustc_span::{BytePos, FileName, Span, DUMMY_SP};\n use smallvec::{smallvec, SmallVec};\n \n use std::iter;\n-use std::path::PathBuf;\n+use std::path::{Path, PathBuf};\n use std::rc::Rc;\n \n pub(crate) use rustc_span::hygiene::MacroKind;\n@@ -1423,8 +1423,10 @@ fn pretty_printing_compatibility_hack(item: &Item, sess: &ParseSess) -> bool {\n             if let [variant] = &*enum_def.variants {\n                 if variant.ident.name == sym::Input {\n                     let filename = sess.source_map().span_to_filename(item.ident.span);\n-                    if let FileName::Real(RealFileName::LocalPath(path)) = filename {\n-                        if let Some(c) = path\n+                    if let FileName::Real(real) = filename {\n+                        if let Some(c) = real\n+                            .local_path()\n+                            .unwrap_or(Path::new(\"\"))\n                             .components()\n                             .flat_map(|c| c.as_os_str().to_str())\n                             .find(|c| c.starts_with(\"rental\") || c.starts_with(\"allsorts-rental\"))"}, {"sha": "ae81d95e27967c999d16ac809b23413209919f91", "filename": "compiler/rustc_span/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/compiler%2Frustc_span%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/compiler%2Frustc_span%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2FCargo.toml?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -15,6 +15,6 @@ scoped-tls = \"1.0\"\n unicode-width = \"0.1.4\"\n cfg-if = \"1.0\"\n tracing = \"0.1\"\n-sha1 = { package = \"sha-1\", version = \"0.10.0\" }\n+sha1 = \"0.10.0\"\n sha2 = \"0.10.1\"\n md5 = { package = \"md-5\", version = \"0.10.0\" }"}, {"sha": "4583bc9a158efc02c059e239c40962faf529f9ce", "filename": "library/alloc/src/collections/binary_heap/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap%2Fmod.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "previous_filename": "library/alloc/src/collections/binary_heap.rs"}, {"sha": "fa5073e3304d72e93dff7a042804e043b234caa8", "filename": "library/core/src/fmt/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -174,6 +174,11 @@ pub trait Write {\n     /// This method should generally not be invoked manually, but rather through\n     /// the [`write!`] macro itself.\n     ///\n+    /// # Errors\n+    ///\n+    /// This function will return an instance of [`Error`] on error. Please see\n+    /// [write_str](Write::write_str) for details.\n+    ///\n     /// # Examples\n     ///\n     /// ```"}, {"sha": "7cc00e3f8d1b7205b3e470b8302d52bcc8ddaba4", "filename": "library/core/src/option.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -652,13 +652,14 @@ impl<T> Option<T> {\n     ///\n     /// # Examples\n     ///\n-    /// Converts an <code>Option<[String]></code> into an <code>Option<[usize]></code>, preserving\n-    /// the original. The [`map`] method takes the `self` argument by value, consuming the original,\n-    /// so this technique uses `as_ref` to first take an `Option` to a reference\n-    /// to the value inside the original.\n+    /// Calculates the length of an <code>Option<[String]></code> as an <code>Option<[usize]></code>\n+    /// without moving the [`String`]. The [`map`] method takes the `self` argument by value,\n+    /// consuming the original, so this technique uses `as_ref` to first take an `Option` to a\n+    /// reference to the value inside the original.\n     ///\n     /// [`map`]: Option::map\n     /// [String]: ../../std/string/struct.String.html \"String\"\n+    /// [`String`]: ../../std/string/struct.String.html \"String\"\n     ///\n     /// ```\n     /// let text: Option<String> = Some(\"Hello, world!\".to_string());\n@@ -946,8 +947,8 @@ impl<T> Option<T> {\n     ///\n     /// # Examples\n     ///\n-    /// Converts an <code>Option<[String]></code> into an <code>Option<[usize]></code>, consuming\n-    /// the original:\n+    /// Calculates the length of an <code>Option<[String]></code> as an\n+    /// <code>Option<[usize]></code>, consuming the original:\n     ///\n     /// [String]: ../../std/string/struct.String.html \"String\"\n     /// ```"}, {"sha": "14367eb09bc75e0e00c13ec9a4025638df8630f0", "filename": "library/core/src/sync/atomic.rs", "status": "modified", "additions": 38, "deletions": 2, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -1786,6 +1786,42 @@ impl<T> AtomicPtr<T> {\n         // SAFETY: data races are prevented by atomic intrinsics.\n         unsafe { atomic_xor(self.p.get(), core::ptr::invalid_mut(val), order).cast() }\n     }\n+\n+    /// Returns a mutable pointer to the underlying pointer.\n+    ///\n+    /// Doing non-atomic reads and writes on the resulting integer can be a data race.\n+    /// This method is mostly useful for FFI, where the function signature may use\n+    /// `*mut *mut T` instead of `&AtomicPtr<T>`.\n+    ///\n+    /// Returning an `*mut` pointer from a shared reference to this atomic is safe because the\n+    /// atomic types work with interior mutability. All modifications of an atomic change the value\n+    /// through a shared reference, and can do so safely as long as they use atomic operations. Any\n+    /// use of the returned raw pointer requires an `unsafe` block and still has to uphold the same\n+    /// restriction: operations on it must be atomic.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```ignore (extern-declaration)\n+    /// #![feature(atomic_mut_ptr)]\n+    //// use std::sync::atomic::AtomicPtr;\n+    ///\n+    /// extern \"C\" {\n+    ///     fn my_atomic_op(arg: *mut *mut u32);\n+    /// }\n+    ///\n+    /// let mut value = 17;\n+    /// let atomic = AtomicPtr::new(&mut value);\n+    ///\n+    /// // SAFETY: Safe as long as `my_atomic_op` is atomic.\n+    /// unsafe {\n+    ///     my_atomic_op(atomic.as_mut_ptr());\n+    /// }\n+    /// ```\n+    #[inline]\n+    #[unstable(feature = \"atomic_mut_ptr\", reason = \"recently added\", issue = \"66893\")]\n+    pub fn as_mut_ptr(&self) -> *mut *mut T {\n+        self.p.get()\n+    }\n }\n \n #[cfg(target_has_atomic_load_store = \"8\")]\n@@ -2678,9 +2714,9 @@ macro_rules! atomic_int {\n             #[doc = concat!(\"    fn my_atomic_op(arg: *mut \", stringify!($int_type), \");\")]\n             /// }\n             ///\n-            #[doc = concat!(\"let mut atomic = \", stringify!($atomic_type), \"::new(1);\")]\n+            #[doc = concat!(\"let atomic = \", stringify!($atomic_type), \"::new(1);\")]\n             ///\n-            // SAFETY: Safe as long as `my_atomic_op` is atomic.\n+            /// // SAFETY: Safe as long as `my_atomic_op` is atomic.\n             /// unsafe {\n             ///     my_atomic_op(atomic.as_mut_ptr());\n             /// }"}, {"sha": "a2dcee0e2bdb26ef252f04cd8feee8d217b27683", "filename": "library/std/src/path.rs", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -3177,33 +3177,33 @@ impl<'a> IntoIterator for &'a Path {\n }\n \n macro_rules! impl_cmp {\n-    ($lhs:ty, $rhs: ty) => {\n+    (<$($life:lifetime),*> $lhs:ty, $rhs: ty) => {\n         #[stable(feature = \"partialeq_path\", since = \"1.6.0\")]\n-        impl<'a, 'b> PartialEq<$rhs> for $lhs {\n+        impl<$($life),*> PartialEq<$rhs> for $lhs {\n             #[inline]\n             fn eq(&self, other: &$rhs) -> bool {\n                 <Path as PartialEq>::eq(self, other)\n             }\n         }\n \n         #[stable(feature = \"partialeq_path\", since = \"1.6.0\")]\n-        impl<'a, 'b> PartialEq<$lhs> for $rhs {\n+        impl<$($life),*> PartialEq<$lhs> for $rhs {\n             #[inline]\n             fn eq(&self, other: &$lhs) -> bool {\n                 <Path as PartialEq>::eq(self, other)\n             }\n         }\n \n         #[stable(feature = \"cmp_path\", since = \"1.8.0\")]\n-        impl<'a, 'b> PartialOrd<$rhs> for $lhs {\n+        impl<$($life),*> PartialOrd<$rhs> for $lhs {\n             #[inline]\n             fn partial_cmp(&self, other: &$rhs) -> Option<cmp::Ordering> {\n                 <Path as PartialOrd>::partial_cmp(self, other)\n             }\n         }\n \n         #[stable(feature = \"cmp_path\", since = \"1.8.0\")]\n-        impl<'a, 'b> PartialOrd<$lhs> for $rhs {\n+        impl<$($life),*> PartialOrd<$lhs> for $rhs {\n             #[inline]\n             fn partial_cmp(&self, other: &$lhs) -> Option<cmp::Ordering> {\n                 <Path as PartialOrd>::partial_cmp(self, other)\n@@ -3212,40 +3212,40 @@ macro_rules! impl_cmp {\n     };\n }\n \n-impl_cmp!(PathBuf, Path);\n-impl_cmp!(PathBuf, &'a Path);\n-impl_cmp!(Cow<'a, Path>, Path);\n-impl_cmp!(Cow<'a, Path>, &'b Path);\n-impl_cmp!(Cow<'a, Path>, PathBuf);\n+impl_cmp!(<> PathBuf, Path);\n+impl_cmp!(<'a> PathBuf, &'a Path);\n+impl_cmp!(<'a> Cow<'a, Path>, Path);\n+impl_cmp!(<'a, 'b> Cow<'a, Path>, &'b Path);\n+impl_cmp!(<'a> Cow<'a, Path>, PathBuf);\n \n macro_rules! impl_cmp_os_str {\n-    ($lhs:ty, $rhs: ty) => {\n+    (<$($life:lifetime),*> $lhs:ty, $rhs: ty) => {\n         #[stable(feature = \"cmp_path\", since = \"1.8.0\")]\n-        impl<'a, 'b> PartialEq<$rhs> for $lhs {\n+        impl<$($life),*> PartialEq<$rhs> for $lhs {\n             #[inline]\n             fn eq(&self, other: &$rhs) -> bool {\n                 <Path as PartialEq>::eq(self, other.as_ref())\n             }\n         }\n \n         #[stable(feature = \"cmp_path\", since = \"1.8.0\")]\n-        impl<'a, 'b> PartialEq<$lhs> for $rhs {\n+        impl<$($life),*> PartialEq<$lhs> for $rhs {\n             #[inline]\n             fn eq(&self, other: &$lhs) -> bool {\n                 <Path as PartialEq>::eq(self.as_ref(), other)\n             }\n         }\n \n         #[stable(feature = \"cmp_path\", since = \"1.8.0\")]\n-        impl<'a, 'b> PartialOrd<$rhs> for $lhs {\n+        impl<$($life),*> PartialOrd<$rhs> for $lhs {\n             #[inline]\n             fn partial_cmp(&self, other: &$rhs) -> Option<cmp::Ordering> {\n                 <Path as PartialOrd>::partial_cmp(self, other.as_ref())\n             }\n         }\n \n         #[stable(feature = \"cmp_path\", since = \"1.8.0\")]\n-        impl<'a, 'b> PartialOrd<$lhs> for $rhs {\n+        impl<$($life),*> PartialOrd<$lhs> for $rhs {\n             #[inline]\n             fn partial_cmp(&self, other: &$lhs) -> Option<cmp::Ordering> {\n                 <Path as PartialOrd>::partial_cmp(self.as_ref(), other)\n@@ -3254,20 +3254,20 @@ macro_rules! impl_cmp_os_str {\n     };\n }\n \n-impl_cmp_os_str!(PathBuf, OsStr);\n-impl_cmp_os_str!(PathBuf, &'a OsStr);\n-impl_cmp_os_str!(PathBuf, Cow<'a, OsStr>);\n-impl_cmp_os_str!(PathBuf, OsString);\n-impl_cmp_os_str!(Path, OsStr);\n-impl_cmp_os_str!(Path, &'a OsStr);\n-impl_cmp_os_str!(Path, Cow<'a, OsStr>);\n-impl_cmp_os_str!(Path, OsString);\n-impl_cmp_os_str!(&'a Path, OsStr);\n-impl_cmp_os_str!(&'a Path, Cow<'b, OsStr>);\n-impl_cmp_os_str!(&'a Path, OsString);\n-impl_cmp_os_str!(Cow<'a, Path>, OsStr);\n-impl_cmp_os_str!(Cow<'a, Path>, &'b OsStr);\n-impl_cmp_os_str!(Cow<'a, Path>, OsString);\n+impl_cmp_os_str!(<> PathBuf, OsStr);\n+impl_cmp_os_str!(<'a> PathBuf, &'a OsStr);\n+impl_cmp_os_str!(<'a> PathBuf, Cow<'a, OsStr>);\n+impl_cmp_os_str!(<> PathBuf, OsString);\n+impl_cmp_os_str!(<> Path, OsStr);\n+impl_cmp_os_str!(<'a> Path, &'a OsStr);\n+impl_cmp_os_str!(<'a> Path, Cow<'a, OsStr>);\n+impl_cmp_os_str!(<> Path, OsString);\n+impl_cmp_os_str!(<'a> &'a Path, OsStr);\n+impl_cmp_os_str!(<'a, 'b> &'a Path, Cow<'b, OsStr>);\n+impl_cmp_os_str!(<'a> &'a Path, OsString);\n+impl_cmp_os_str!(<'a> Cow<'a, Path>, OsStr);\n+impl_cmp_os_str!(<'a, 'b> Cow<'a, Path>, &'b OsStr);\n+impl_cmp_os_str!(<'a> Cow<'a, Path>, OsString);\n \n #[stable(since = \"1.7.0\", feature = \"strip_prefix\")]\n impl fmt::Display for StripPrefixError {"}, {"sha": "7b357da2ffc475c9497b3f13e67fa6fa53449a83", "filename": "src/README.md", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FREADME.md?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -1,8 +1,7 @@\n-This directory contains the source code of the rust project, including:\n+This directory contains some source code for the Rust project, including:\n \n-- The test suite\n - The bootstrapping build system\n-- Various submodules for tools, like cargo, etc.\n+- Various submodules for tools, like cargo, tidy, etc.\n \n For more information on how various parts of the compiler work, see the [rustc dev guide].\n "}, {"sha": "d5bc76eeb23daee6779672485caf84fcf53ac877", "filename": "src/ci/docker/host-x86_64/mingw-check/Dockerfile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Fci%2Fdocker%2Fhost-x86_64%2Fmingw-check%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Fci%2Fdocker%2Fhost-x86_64%2Fmingw-check%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fmingw-check%2FDockerfile?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -45,6 +45,7 @@ ENV SCRIPT python3 ../x.py --stage 2 test src/tools/expand-yaml-anchors && \\\n            python3 ../x.py test --stage 0 src/tools/compiletest && \\\n            python3 ../x.py test --stage 0 core alloc std test proc_macro && \\\n            # Build both public and internal documentation.\n+           RUSTDOCFLAGS=\\\"--document-private-items --document-hidden-items\\\" python3 ../x.py doc --stage 0 compiler && \\\n            RUSTDOCFLAGS=\\\"--document-private-items --document-hidden-items\\\" python3 ../x.py doc --stage 0 library/test && \\\n            /scripts/validate-toolstate.sh && \\\n            /scripts/validate-error-codes.sh && \\"}, {"sha": "45db3bb9b007b99e1f8f71e21e120fe0863bf482", "filename": "src/doc/rustdoc/src/lints.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -261,7 +261,7 @@ typo mistakes for some common attributes.\n \n ## `invalid_html_tags`\n \n-This lint is **allowed by default** and is **nightly-only**. It detects unclosed\n+This lint **warns by default**. It detects unclosed\n or invalid HTML tags. For example:\n \n ```rust"}, {"sha": "20b51336c350f9300aa9f28859f6a17a01e87003", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -639,7 +639,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n                 write!(\n                     buf,\n                     \"<div class=\\\"main-heading\\\">\\\n-                     <h1 class=\\\"fqn\\\">Rustdoc settings</h1>\\\n+                     <h1>Rustdoc settings</h1>\\\n                      <span class=\\\"out-of-band\\\">\\\n                          <a id=\\\"back\\\" href=\\\"javascript:void(0)\\\" onclick=\\\"history.back();\\\">\\\n                             Back\\\n@@ -677,7 +677,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n                 write!(\n                     buf,\n                     \"<div class=\\\"main-heading\\\">\\\n-                     <h1 class=\\\"fqn\\\">Rustdoc help</h1>\\\n+                     <h1>Rustdoc help</h1>\\\n                      <span class=\\\"out-of-band\\\">\\\n                          <a id=\\\"back\\\" href=\\\"javascript:void(0)\\\" onclick=\\\"history.back();\\\">\\\n                             Back\\"}, {"sha": "358b9185fb36126997dbb2af23f78d4eb7cebb67", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -364,7 +364,7 @@ impl AllTypes {\n             }\n         }\n \n-        f.write_str(\"<h1 class=\\\"fqn\\\">List of all items</h1>\");\n+        f.write_str(\"<h1>List of all items</h1>\");\n         // Note: print_entries does not escape the title, because we know the current set of titles\n         // doesn't require escaping.\n         print_entries(f, &self.structs, ItemSection::Structs);\n@@ -394,7 +394,7 @@ fn scrape_examples_help(shared: &SharedContext<'_>) -> String {\n     let mut ids = IdMap::default();\n     format!(\n         \"<div class=\\\"main-heading\\\">\\\n-            <h1 class=\\\"fqn\\\">About scraped examples</h1>\\\n+            <h1>About scraped examples</h1>\\\n         </div>\\\n         <div>{}</div>\",\n         Markdown {\n@@ -513,7 +513,7 @@ fn document_full_inner(\n         debug!(\"Doc block: =====\\n{}\\n=====\", s);\n         if is_collapsible {\n             w.write_str(\n-                \"<details class=\\\"rustdoc-toggle top-doc\\\" open>\\\n+                \"<details class=\\\"toggle top-doc\\\" open>\\\n                 <summary class=\\\"hideme\\\">\\\n                      <span>Expand description</span>\\\n                 </summary>\",\n@@ -1514,7 +1514,7 @@ fn render_impl(\n         let toggled = !doc_buffer.is_empty();\n         if toggled {\n             let method_toggle_class = if item_type.is_method() { \" method-toggle\" } else { \"\" };\n-            write!(w, \"<details class=\\\"rustdoc-toggle{}\\\" open><summary>\", method_toggle_class);\n+            write!(w, \"<details class=\\\"toggle{}\\\" open><summary>\", method_toggle_class);\n         }\n         match &*item.kind {\n             clean::MethodItem(..) | clean::TyMethodItem(_) => {\n@@ -1730,7 +1730,7 @@ fn render_impl(\n             close_tags.insert_str(0, \"</details>\");\n             write!(\n                 w,\n-                \"<details class=\\\"rustdoc-toggle implementors-toggle\\\"{}>\",\n+                \"<details class=\\\"toggle implementors-toggle\\\"{}>\",\n                 if rendering_params.toggle_open_by_default { \" open\" } else { \"\" }\n             );\n             write!(w, \"<summary>\")\n@@ -2999,7 +2999,7 @@ fn render_call_locations(w: &mut Buffer, cx: &mut Context<'_>, item: &clean::Ite\n     if it.peek().is_some() {\n         write!(\n             w,\n-            \"<details class=\\\"rustdoc-toggle more-examples-toggle\\\">\\\n+            \"<details class=\\\"toggle more-examples-toggle\\\">\\\n                   <summary class=\\\"hideme\\\">\\\n                      <span>More examples</span>\\\n                   </summary>\\"}, {"sha": "d6e57decdcf18463cb76d372d4f688484c3bbff6", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -204,7 +204,7 @@ fn should_hide_fields(n_fields: usize) -> bool {\n fn toggle_open(w: &mut Buffer, text: impl fmt::Display) {\n     write!(\n         w,\n-        \"<details class=\\\"rustdoc-toggle type-contents-toggle\\\">\\\n+        \"<details class=\\\"toggle type-contents-toggle\\\">\\\n             <summary class=\\\"hideme\\\">\\\n                 <span>Show {}</span>\\\n             </summary>\",\n@@ -733,7 +733,7 @@ fn item_trait(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean:\n         let toggled = !content.is_empty();\n         if toggled {\n             let method_toggle_class = if item_type.is_method() { \" method-toggle\" } else { \"\" };\n-            write!(w, \"<details class=\\\"rustdoc-toggle{method_toggle_class}\\\" open><summary>\");\n+            write!(w, \"<details class=\\\"toggle{method_toggle_class}\\\" open><summary>\");\n         }\n         write!(w, \"<section id=\\\"{}\\\" class=\\\"method has-srclink\\\">\", id);\n         render_rightside(w, cx, m, t, RenderMode::Normal);\n@@ -1840,7 +1840,7 @@ fn document_non_exhaustive(w: &mut Buffer, item: &clean::Item) {\n     if item.is_non_exhaustive() {\n         write!(\n             w,\n-            \"<details class=\\\"rustdoc-toggle non-exhaustive\\\">\\\n+            \"<details class=\\\"toggle non-exhaustive\\\">\\\n                  <summary class=\\\"hideme\\\"><span>{}</span></summary>\\\n                  <div class=\\\"docblock\\\">\",\n             {"}, {"sha": "ca3e9916487aad060546b9ac358d9f3a7fb20515", "filename": "src/librustdoc/html/render/write_shared.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -345,7 +345,7 @@ if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};\n             };\n \n             let content = format!(\n-                \"<h1 class=\\\"fqn\\\">List of all crates</h1><ul class=\\\"all-items\\\">{}</ul>\",\n+                \"<h1>List of all crates</h1><ul class=\\\"all-items\\\">{}</ul>\",\n                 krates\n                     .iter()\n                     .map(|s| {"}, {"sha": "2070bb54b1ba9bcc8e0777a96245487545851d17", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 37, "deletions": 37, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -139,7 +139,7 @@ h1, h2, h3, h4 {\n .docblock > h6:first-child {\n \tmargin-top: 0;\n }\n-h1.fqn {\n+.main-heading h1 {\n \tmargin: 0;\n \tpadding: 0;\n \tflex-grow: 1;\n@@ -317,7 +317,7 @@ main {\n \tmargin-right: auto;\n }\n \n-details:not(.rustdoc-toggle) summary {\n+details:not(.toggle) summary {\n \tmargin-bottom: .6em;\n }\n \n@@ -1401,34 +1401,34 @@ details.dir-entry a {\n \tUnfortunately we can't yet specify contain: content or contain: strict\n \tbecause the [-]/[+] toggles extend past the boundaries of the <details>\n \thttps://developer.mozilla.org/en-US/docs/Web/CSS/contain */\n-details.rustdoc-toggle {\n+details.toggle {\n \tcontain: layout;\n \tposition: relative;\n }\n \n /* The hideme class is used on summary tags that contain a span with\n \tplaceholder text shown only when the toggle is closed. For instance,\n \t\"Expand description\" or \"Show methods\". */\n-details.rustdoc-toggle > summary.hideme {\n+details.toggle > summary.hideme {\n \tcursor: pointer;\n \tfont-size: 1rem;\n }\n \n-details.rustdoc-toggle > summary {\n+details.toggle > summary {\n \tlist-style: none;\n \t/* focus outline is shown on `::before` instead of this */\n \toutline: none;\n }\n-details.rustdoc-toggle > summary::-webkit-details-marker,\n-details.rustdoc-toggle > summary::marker {\n+details.toggle > summary::-webkit-details-marker,\n+details.toggle > summary::marker {\n \tdisplay: none;\n }\n \n-details.rustdoc-toggle > summary.hideme > span {\n+details.toggle > summary.hideme > span {\n \tmargin-left: 9px;\n }\n \n-details.rustdoc-toggle > summary::before {\n+details.toggle > summary::before {\n \tbackground: url(\"toggle-plus-1092eb4930d581b0.svg\") no-repeat top left;\n \tcontent: \"\";\n \tcursor: pointer;\n@@ -1440,32 +1440,32 @@ details.rustdoc-toggle > summary::before {\n \tfilter: var(--toggle-filter);\n }\n \n-details.rustdoc-toggle > summary.hideme > span,\n+details.toggle > summary.hideme > span,\n .more-examples-toggle summary, .more-examples-toggle .hide-more {\n \tcolor: var(--toggles-color);\n }\n \n /* Screen readers see the text version at the end the line.\n \tVisual readers see the icon at the start of the line, but small and transparent. */\n-details.rustdoc-toggle > summary::after {\n+details.toggle > summary::after {\n \tcontent: \"Expand\";\n \toverflow: hidden;\n \twidth: 0;\n \theight: 0;\n \tposition: absolute;\n }\n \n-details.rustdoc-toggle > summary.hideme::after {\n+details.toggle > summary.hideme::after {\n \t/* \"hideme\" toggles already have a description when they're contracted */\n \tcontent: \"\";\n }\n \n-details.rustdoc-toggle > summary:focus::before,\n-details.rustdoc-toggle > summary:hover::before {\n+details.toggle > summary:focus::before,\n+details.toggle > summary:hover::before {\n \topacity: 1;\n }\n \n-details.rustdoc-toggle > summary:focus-visible::before {\n+details.toggle > summary:focus-visible::before {\n \t/* The SVG is black, and gets turned white using a filter in the dark themes.\n \t   Do the same with the outline.\n \t   The dotted 1px style is copied from Firefox's focus ring style.\n@@ -1478,17 +1478,17 @@ details.non-exhaustive {\n \tmargin-bottom: 8px;\n }\n \n-details.rustdoc-toggle > summary.hideme::before {\n+details.toggle > summary.hideme::before {\n \tposition: relative;\n }\n \n-details.rustdoc-toggle > summary:not(.hideme)::before {\n+details.toggle > summary:not(.hideme)::before {\n \tposition: absolute;\n \tleft: -24px;\n \ttop: 4px;\n }\n \n-.impl-items > details.rustdoc-toggle > summary:not(.hideme)::before {\n+.impl-items > details.toggle > summary:not(.hideme)::before {\n \tposition: absolute;\n \tleft: -24px;\n }\n@@ -1498,19 +1498,19 @@ details.rustdoc-toggle > summary:not(.hideme)::before {\n \taffect the layout of the items to its right. To do that, we use\n \tabsolute positioning. Note that we also set position: relative\n \ton the parent <details> to make this work properly. */\n-details.rustdoc-toggle[open] > summary.hideme {\n+details.toggle[open] > summary.hideme {\n \tposition: absolute;\n }\n \n-details.rustdoc-toggle[open] > summary.hideme > span {\n+details.toggle[open] > summary.hideme > span {\n \tdisplay: none;\n }\n \n-details.rustdoc-toggle[open] > summary::before {\n+details.toggle[open] > summary::before {\n \tbackground: url(\"toggle-minus-31bbd6e4c77f5c96.svg\") no-repeat top left;\n }\n \n-details.rustdoc-toggle[open] > summary::after {\n+details.toggle[open] > summary::after {\n \tcontent: \"Collapse\";\n }\n \n@@ -1660,8 +1660,8 @@ in storage.js\n \t\tdisplay: block;\n \t}\n \n-\t#main-content > details.rustdoc-toggle > summary::before,\n-\t#main-content > div > details.rustdoc-toggle > summary::before {\n+\t#main-content > details.toggle > summary::before,\n+\t#main-content > div > details.toggle > summary::before {\n \t\tleft: -11px;\n \t}\n \n@@ -1715,12 +1715,12 @@ in storage.js\n \t}\n \n \t/* Position of the \"[-]\" element. */\n-\tdetails.rustdoc-toggle:not(.top-doc) > summary {\n+\tdetails.toggle:not(.top-doc) > summary {\n \t\tmargin-left: 10px;\n \t}\n-\t.impl-items > details.rustdoc-toggle > summary:not(.hideme)::before,\n-\t#main-content > details.rustdoc-toggle:not(.top-doc) > summary::before,\n-\t#main-content > div > details.rustdoc-toggle > summary::before {\n+\t.impl-items > details.toggle > summary:not(.hideme)::before,\n+\t#main-content > details.toggle:not(.top-doc) > summary::before,\n+\t#main-content > div > details.toggle > summary::before {\n \t\tleft: -11px;\n \t}\n \n@@ -1753,8 +1753,8 @@ in storage.js\n \n @media print {\n \tnav.sidebar, nav.sub, .out-of-band, a.srclink, #copy-path,\n-\tdetails.rustdoc-toggle[open] > summary::before, details.rustdoc-toggle > summary::before,\n-\tdetails.rustdoc-toggle.top-doc > summary {\n+\tdetails.toggle[open] > summary::before, details.toggle > summary::before,\n+\tdetails.toggle.top-doc > summary {\n \t\tdisplay: none;\n \t}\n \n@@ -1796,24 +1796,24 @@ in storage.js\n .impl,\n #implementors-list > .docblock,\n .impl-items > section,\n-.impl-items > .rustdoc-toggle > summary,\n+.impl-items > .toggle > summary,\n .methods > section,\n-.methods > .rustdoc-toggle > summary\n+.methods > .toggle > summary\n {\n \tmargin-bottom: 0.75em;\n }\n \n .variants > .docblock,\n .implementors-toggle > .docblock,\n-.impl-items > .rustdoc-toggle[open]:not(:last-child),\n-.methods > .rustdoc-toggle[open]:not(:last-child),\n+.impl-items > .toggle[open]:not(:last-child),\n+.methods > .toggle[open]:not(:last-child),\n .implementors-toggle[open]:not(:last-child) {\n \tmargin-bottom: 2em;\n }\n \n-#trait-implementations-list .impl-items > .rustdoc-toggle:not(:last-child),\n-#synthetic-implementations-list .impl-items > .rustdoc-toggle:not(:last-child),\n-#blanket-implementations-list .impl-items > .rustdoc-toggle:not(:last-child) {\n+#trait-implementations-list .impl-items > .toggle:not(:last-child),\n+#synthetic-implementations-list .impl-items > .toggle:not(:last-child),\n+#blanket-implementations-list .impl-items > .toggle:not(:last-child) {\n \tmargin-bottom: 1em;\n }\n "}, {"sha": "91419093147d728bbdda9478eecda9305db4621e", "filename": "src/librustdoc/html/static/css/settings.css", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fsettings.css", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fsettings.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fsettings.css?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -9,7 +9,7 @@\n }\n \n .setting-line .radio-line input,\n-.setting-line .toggle input {\n+.setting-line .settings-toggle input {\n \tmargin-right: 0.3em;\n \theight: 1.2rem;\n \twidth: 1.2rem;\n@@ -22,14 +22,14 @@\n .setting-line .radio-line input {\n \tborder-radius: 50%;\n }\n-.setting-line .toggle input:checked {\n+.setting-line .settings-toggle input:checked {\n \tcontent: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 40 40\">\\\n \t\t<path d=\"M7,25L17,32L33,12\" fill=\"none\" stroke=\"black\" stroke-width=\"5\"/>\\\n \t\t<path d=\"M7,23L17,30L33,10\" fill=\"none\" stroke=\"white\" stroke-width=\"5\"/></svg>');\n }\n \n .setting-line .radio-line input + span,\n-.setting-line .toggle span {\n+.setting-line .settings-toggle span {\n \tpadding-bottom: 1px;\n }\n \n@@ -50,7 +50,7 @@\n \tmargin-left: 0.5em;\n }\n \n-.toggle {\n+.settings-toggle {\n \tposition: relative;\n \twidth: 100%;\n \tmargin-right: 20px;\n@@ -67,11 +67,11 @@\n \tbox-shadow: inset 0 0 0 3px var(--main-background-color);\n \tbackground-color: var(--settings-input-color);\n }\n-.setting-line .toggle input:checked {\n+.setting-line .settings-toggle input:checked {\n \tbackground-color: var(--settings-input-color);\n }\n .setting-line .radio-line input:focus,\n-.setting-line .toggle input:focus {\n+.setting-line .settings-toggle input:focus {\n \tbox-shadow: 0 0 1px 1px var(--settings-input-color);\n }\n /* In here we combine both `:focus` and `:checked` properties. */\n@@ -80,6 +80,6 @@\n \t\t0 0 2px 2px var(--settings-input-color);\n }\n .setting-line .radio-line input:hover,\n-.setting-line .toggle input:hover {\n+.setting-line .settings-toggle input:hover {\n \tborder-color: var(--settings-input-color) !important;\n }"}, {"sha": "4f6f8c57597f08408822da9a9a8f4a78dd1f7302", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -526,7 +526,7 @@ function loadCss(cssUrl) {\n         }\n \n         let currentNbImpls = implementors.getElementsByClassName(\"impl\").length;\n-        const traitName = document.querySelector(\"h1.fqn > .trait\").textContent;\n+        const traitName = document.querySelector(\".main-heading h1 > .trait\").textContent;\n         const baseIdName = \"impl-\" + traitName + \"-\";\n         const libs = Object.getOwnPropertyNames(imp);\n         // We don't want to include impls from this JS file, when the HTML already has them.\n@@ -620,7 +620,7 @@ function loadCss(cssUrl) {\n     function expandAllDocs() {\n         const innerToggle = document.getElementById(toggleAllDocsId);\n         removeClass(innerToggle, \"will-expand\");\n-        onEachLazy(document.getElementsByClassName(\"rustdoc-toggle\"), e => {\n+        onEachLazy(document.getElementsByClassName(\"toggle\"), e => {\n             if (!hasClass(e, \"type-contents-toggle\") && !hasClass(e, \"more-examples-toggle\")) {\n                 e.open = true;\n             }\n@@ -632,7 +632,7 @@ function loadCss(cssUrl) {\n     function collapseAllDocs() {\n         const innerToggle = document.getElementById(toggleAllDocsId);\n         addClass(innerToggle, \"will-expand\");\n-        onEachLazy(document.getElementsByClassName(\"rustdoc-toggle\"), e => {\n+        onEachLazy(document.getElementsByClassName(\"toggle\"), e => {\n             if (e.parentNode.id !== \"implementations-list\" ||\n                 (!hasClass(e, \"implementors-toggle\") &&\n                  !hasClass(e, \"type-contents-toggle\"))\n@@ -680,7 +680,7 @@ function loadCss(cssUrl) {\n             setImplementorsTogglesOpen(\"blanket-implementations-list\", false);\n         }\n \n-        onEachLazy(document.getElementsByClassName(\"rustdoc-toggle\"), e => {\n+        onEachLazy(document.getElementsByClassName(\"toggle\"), e => {\n             if (!hideLargeItemContents && hasClass(e, \"type-contents-toggle\")) {\n                 e.open = true;\n             }\n@@ -823,7 +823,7 @@ function loadCss(cssUrl) {\n         });\n     });\n \n-    onEachLazy(document.querySelectorAll(\".rustdoc-toggle > summary:not(.hideme)\"), el => {\n+    onEachLazy(document.querySelectorAll(\".toggle > summary:not(.hideme)\"), el => {\n         el.addEventListener(\"click\", e => {\n             if (e.target.tagName !== \"SUMMARY\" && e.target.tagName !== \"A\") {\n                 e.preventDefault();"}, {"sha": "9ed8f63610ff6b336d940e934043a6a7f53dd540", "filename": "src/librustdoc/html/static/js/settings.js", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -150,10 +150,10 @@\n                 });\n                 output += \"</div></div>\";\n             } else {\n-                // This is a toggle.\n+                // This is a checkbox toggle.\n                 const checked = setting[\"default\"] === true ? \" checked\" : \"\";\n                 output += `\\\n-<label class=\"toggle\">\\\n+<label class=\"settings-toggle\">\\\n     <input type=\"checkbox\" id=\"${js_data_name}\"${checked}>\\\n     <span class=\"label\">${setting_name}</span>\\\n </label>`;"}, {"sha": "ee2880bf6d195e23a91bedf640a667c29052cbc3", "filename": "src/librustdoc/html/templates/print_item.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fprint_item.html", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fprint_item.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fprint_item.html?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -1,5 +1,5 @@\n <div class=\"main-heading\"> {#- -#}\n-    <h1 class=\"fqn\"> {#- -#}\n+    <h1> {#- -#}\n         {{-typ-}}\n         {#- The breadcrumbs of the item path, like std::string -#}\n         {%- for component in path_components -%}"}, {"sha": "048ed2646233c45284f6a029b4c37dcf548a9c5c", "filename": "src/librustdoc/passes/stripper.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Flibrustdoc%2Fpasses%2Fstripper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Flibrustdoc%2Fpasses%2Fstripper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstripper.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -97,17 +97,7 @@ impl<'a, 'tcx> DocFolder for Stripper<'a, 'tcx> {\n             }\n \n             // handled in the `strip-priv-imports` pass\n-            clean::ExternCrateItem { .. } => {}\n-            clean::ImportItem(ref imp) => {\n-                // Because json doesn't inline imports from private modules, we need to mark\n-                // the imported item as retained so it's impls won't be stripped.\n-                //\n-                // FIXME: Is it necessary to check for json output here: See\n-                // https://github.com/rust-lang/rust/pull/100325#discussion_r941495215\n-                if let Some(did) = imp.source.did && self.is_json_output {\n-                    self.retained.insert(did.into());\n-                }\n-            }\n+            clean::ExternCrateItem { .. } | clean::ImportItem(_) => {}\n \n             clean::ImplItem(..) => {}\n "}, {"sha": "845eb5af0d6bb33271b0896b340742eb5c950ff3", "filename": "src/tools/tidy/src/deps.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -217,7 +217,7 @@ const PERMITTED_RUSTC_DEPENDENCIES: &[&str] = &[\n     \"serde\",\n     \"serde_derive\",\n     \"serde_json\",\n-    \"sha-1\",\n+    \"sha1\",\n     \"sha2\",\n     \"sharded-slab\",\n     \"smallvec\","}, {"sha": "85cb72274208c4184b2edaee0642a6faac64718c", "filename": "tests/rustdoc-gui/anchors.goml", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc-gui%2Fanchors.goml", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc-gui%2Fanchors.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fanchors.goml?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -2,7 +2,7 @@\n \n define-function: (\n     \"check-colors\",\n-    (theme, main_color, title_color, fqn_color, fqn_type_color, src_link_color, sidebar_link_color),\n+    (theme, main_color, title_color, main_heading_color, main_heading_type_color, src_link_color, sidebar_link_color),\n     block {\n         goto: \"file://\" + |DOC_PATH| + \"/staged_api/struct.Foo.html\"\n         // This is needed to ensure that the text color is computed.\n@@ -14,8 +14,8 @@ define-function: (\n         reload:\n \n         assert-css: (\"#toggle-all-docs\", {\"color\": |main_color|})\n-        assert-css: (\".fqn a:nth-of-type(1)\", {\"color\": |fqn_color|})\n-        assert-css: (\".fqn a:nth-of-type(2)\", {\"color\": |fqn_type_color|})\n+        assert-css: (\".main-heading h1 a:nth-of-type(1)\", {\"color\": |main_heading_color|})\n+        assert-css: (\".main-heading a:nth-of-type(2)\", {\"color\": |main_heading_type_color|})\n         assert-css: (\n              \".rightside .srclink\",\n              {\"color\": |src_link_color|, \"text-decoration\": \"none solid \" + |src_link_color|},\n@@ -57,7 +57,7 @@ define-function: (\n         assert-css: (\"#top-doc-prose-title\", {\"color\": |title_color|})\n \n         assert-css: (\".sidebar a\", {\"color\": |sidebar_link_color|})\n-        assert-css: (\"h1.fqn a\", {\"color\": |title_color|})\n+        assert-css: (\".main-heading h1 a\", {\"color\": |title_color|})\n \n         // We move the cursor over the \"Implementations\" title so the anchor is displayed.\n         move-cursor-to: \"h2#implementations\"\n@@ -77,8 +77,8 @@ call-function: (\n         \"theme\": \"ayu\",\n         \"main_color\": \"rgb(197, 197, 197)\",\n         \"title_color\": \"rgb(255, 255, 255)\",\n-        \"fqn_color\": \"rgb(255, 255, 255)\",\n-        \"fqn_type_color\": \"rgb(255, 160, 165)\",\n+        \"main_heading_color\": \"rgb(255, 255, 255)\",\n+        \"main_heading_type_color\": \"rgb(255, 160, 165)\",\n         \"src_link_color\": \"rgb(57, 175, 215)\",\n         \"sidebar_link_color\": \"rgb(83, 177, 219)\",\n     },\n@@ -89,8 +89,8 @@ call-function: (\n         \"theme\": \"dark\",\n         \"main_color\": \"rgb(221, 221, 221)\",\n         \"title_color\": \"rgb(221, 221, 221)\",\n-        \"fqn_color\": \"rgb(221, 221, 221)\",\n-        \"fqn_type_color\": \"rgb(45, 191, 184)\",\n+        \"main_heading_color\": \"rgb(221, 221, 221)\",\n+        \"main_heading_type_color\": \"rgb(45, 191, 184)\",\n         \"src_link_color\": \"rgb(210, 153, 29)\",\n         \"sidebar_link_color\": \"rgb(253, 191, 53)\",\n     },\n@@ -101,8 +101,8 @@ call-function: (\n         \"theme\": \"light\",\n         \"main_color\": \"rgb(0, 0, 0)\",\n         \"title_color\": \"rgb(0, 0, 0)\",\n-        \"fqn_color\": \"rgb(0, 0, 0)\",\n-        \"fqn_type_color\": \"rgb(173, 55, 138)\",\n+        \"main_heading_color\": \"rgb(0, 0, 0)\",\n+        \"main_heading_type_color\": \"rgb(173, 55, 138)\",\n         \"src_link_color\": \"rgb(56, 115, 173)\",\n         \"sidebar_link_color\": \"rgb(53, 109, 164)\",\n     },"}, {"sha": "e4ba5f1246d91f7a3ec9854c34bec1ce31a2475c", "filename": "tests/rustdoc-gui/headings.goml", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc-gui%2Fheadings.goml", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc-gui%2Fheadings.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fheadings.goml?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -13,7 +13,7 @@\n // 14px  0.875rem\n goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.HeavilyDocumentedStruct.html\"\n \n-assert-css: (\"h1.fqn\", {\"font-size\": \"24px\"})\n+assert-css: (\".main-heading h1\", {\"font-size\": \"24px\"})\n \n assert-css: (\"h2#top-doc-prose-title\", {\"font-size\": \"22px\"})\n assert-css: (\"h2#top-doc-prose-title\", {\"border-bottom-width\": \"1px\"})\n@@ -52,7 +52,7 @@ assert-css: (\"h6#sub-sub-heading-for-struct-impl-item-doc\", {\"font-size\": \"14px\"\n \n goto: \"file://\" + |DOC_PATH| + \"/test_docs/enum.HeavilyDocumentedEnum.html\"\n \n-assert-css: (\"h1.fqn\", {\"font-size\": \"24px\"})\n+assert-css: (\".main-heading h1\", {\"font-size\": \"24px\"})\n \n assert-css: (\"h2#top-doc-prose-title\", {\"font-size\": \"22px\"})\n assert-css: (\"h2#top-doc-prose-title\", {\"border-bottom-width\": \"1px\"})\n@@ -111,7 +111,7 @@ assert-css: (\"//ul[@class='block mod']/preceding-sibling::h3\", {\"border-bottom-w\n \n goto: \"file://\" + |DOC_PATH| + \"/test_docs/union.HeavilyDocumentedUnion.html\"\n \n-assert-css: (\"h1.fqn\", {\"font-size\": \"24px\"})\n+assert-css: (\".main-heading h1\", {\"font-size\": \"24px\"})\n \n assert-css: (\"h2#top-doc-prose-title\", {\"font-size\": \"22px\"})\n assert-css: (\"h2#top-doc-prose-title\", {\"border-bottom-width\": \"1px\"})\n@@ -143,7 +143,7 @@ assert-css: (\"h6#sub-heading-for-union-impl-item-doc\", {\"border-bottom-width\": \"\n \n goto: \"file://\" + |DOC_PATH| + \"/test_docs/macro.heavily_documented_macro.html\"\n \n-assert-css: (\"h1.fqn\", {\"font-size\": \"24px\"})\n+assert-css: (\".main-heading h1\", {\"font-size\": \"24px\"})\n \n assert-css: (\"h2#top-doc-prose-title\", {\"font-size\": \"22px\"})\n assert-css: (\"h2#top-doc-prose-title\", {\"border-bottom-width\": \"1px\"})"}, {"sha": "720268a9e7eb1d6cf721aa7d068fc393e227bd80", "filename": "tests/rustdoc-gui/method-margins.goml", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc-gui%2Fmethod-margins.goml", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc-gui%2Fmethod-margins.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fmethod-margins.goml?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -1,18 +1,18 @@\n // This test ensures that the margins on methods are coherent inside an impl block.\n goto: \"file://\" + |DOC_PATH| + \"/test_docs/trait_members/struct.HasTrait.html#impl-TraitMembers-for-HasTrait\"\n \n-assert-count: (\"#trait-implementations-list > .rustdoc-toggle\", 1)\n+assert-count: (\"#trait-implementations-list > .toggle\", 1)\n \n compare-elements-css: (\n     // compare margin on type with margin on method\n-    \"#trait-implementations-list .impl-items > .rustdoc-toggle:nth-child(1) > summary\",\n-    \"#trait-implementations-list .impl-items > .rustdoc-toggle:nth-child(2) > summary\",\n+    \"#trait-implementations-list .impl-items > .toggle:nth-child(1) > summary\",\n+    \"#trait-implementations-list .impl-items > .toggle:nth-child(2) > summary\",\n     [\"margin\"]\n )\n \n compare-elements-css: (\n     // compare margin on type with margin on method\n-    \"#trait-implementations-list .impl-items > .rustdoc-toggle:nth-child(1)\",\n-    \"#trait-implementations-list .impl-items > .rustdoc-toggle:nth-child(2)\",\n+    \"#trait-implementations-list .impl-items > .toggle:nth-child(1)\",\n+    \"#trait-implementations-list .impl-items > .toggle:nth-child(2)\",\n     [\"margin\"]\n )"}, {"sha": "f444baa6ce10bb3fb56433ff251899bae646ab9b", "filename": "tests/rustdoc-gui/search-result-go-to-first.goml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc-gui%2Fsearch-result-go-to-first.goml", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc-gui%2Fsearch-result-go-to-first.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsearch-result-go-to-first.goml?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -3,17 +3,17 @@\n // First, we check that the first page doesn't have the string we're looking for to ensure\n // that the feature is changing page as expected.\n goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n-assert-text-false: (\".fqn\", \"Struct test_docs::Foo\")\n+assert-text-false: (\".main-heading h1\", \"Struct test_docs::Foo\")\n \n // We now check that we land on the search result page if \"go_to_first\" isn't set.\n goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html?search=struct%3AFoo\"\n // Waiting for the search results to appear...\n wait-for: \"#search-tabs\"\n-assert-text-false: (\".fqn\", \"Struct test_docs::Foo\")\n+assert-text-false: (\".main-heading h1\", \"Struct test_docs::Foo\")\n // Ensure that the search results are displayed, not the \"normal\" content.\n assert-css: (\"#main-content\", {\"display\": \"none\"})\n \n // Now we can check that the feature is working as expected!\n goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html?search=struct%3AFoo&go_to_first=true\"\n // Waiting for the page to load...\n-wait-for-text: (\".fqn\", \"Struct test_docs::Foo\")\n+wait-for-text: (\".main-heading h1\", \"Struct test_docs::Foo\")"}, {"sha": "f236dc3e0fe7681344504d8677b693de6c59044b", "filename": "tests/rustdoc-gui/settings.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc-gui%2Fsettings.goml", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc-gui%2Fsettings.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsettings.goml?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -159,7 +159,7 @@ assert-text: (\"#preferred-light-theme .setting-name\", \"Preferred light theme\")\n // We now check that clicking on the toggles' text is like clicking on the checkbox.\n // To test it, we use the \"Disable keyboard shortcuts\".\n local-storage: {\"rustdoc-disable-shortcuts\": \"false\"}\n-click: \".setting-line:last-child .toggle .label\"\n+click: \".setting-line:last-child .settings-toggle .label\"\n assert-local-storage: {\"rustdoc-disable-shortcuts\": \"true\"}\n \n // Make sure that \"Disable keyboard shortcuts\" actually took effect.\n@@ -169,7 +169,7 @@ assert-false: \"#help-button .popover\"\n wait-for-css: (\"#settings-menu .popover\", {\"display\": \"block\"})\n \n // Now turn keyboard shortcuts back on, and see if they work.\n-click: \".setting-line:last-child .toggle .label\"\n+click: \".setting-line:last-child .settings-toggle .label\"\n assert-local-storage: {\"rustdoc-disable-shortcuts\": \"false\"}\n press-key: \"Escape\"\n press-key: \"?\""}, {"sha": "ac346f25b8862c5c40aaa2bb71a7962421bb4971", "filename": "tests/rustdoc-gui/toggle-click-deadspace.goml", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc-gui%2Ftoggle-click-deadspace.goml", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc-gui%2Ftoggle-click-deadspace.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Ftoggle-click-deadspace.goml?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -1,15 +1,15 @@\n // This test ensures that clicking on a method summary, but not on the \"[-]\",\n // doesn't toggle the <details>.\n goto: \"file://\" + |DOC_PATH| + \"/lib2/struct.Foo.html\"\n-assert-attribute: (\".impl-items .rustdoc-toggle\", {\"open\": \"\"})\n+assert-attribute: (\".impl-items .toggle\", {\"open\": \"\"})\n click: \"h4.code-header\" // This is the position of \"pub\" in \"pub fn a_method\"\n-assert-attribute: (\".impl-items .rustdoc-toggle\", {\"open\": \"\"})\n+assert-attribute: (\".impl-items .toggle\", {\"open\": \"\"})\n click-with-offset: (\n-    \".impl-items .rustdoc-toggle summary\",\n+    \".impl-items .toggle summary\",\n     {\"x\": -24, \"y\": 8}, // This is the position of \"[-]\" next to that pub fn.\n )\n-assert-attribute-false: (\".impl-items .rustdoc-toggle\", {\"open\": \"\"})\n+assert-attribute-false: (\".impl-items .toggle\", {\"open\": \"\"})\n \n // Click the \"Trait\" part of \"impl Trait\" and verify it navigates.\n click: \"#impl-Trait-for-Foo h3 a:first-of-type\"\n-assert-text: (\".fqn\", \"Trait lib2::Trait\")\n+assert-text: (\".main-heading h1\", \"Trait lib2::Trait\")"}, {"sha": "c9d236e9bba8a04ab8d5fee055a4e974ed767e0b", "filename": "tests/rustdoc-gui/toggle-docs.goml", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc-gui%2Ftoggle-docs.goml", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc-gui%2Ftoggle-docs.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Ftoggle-docs.goml?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -20,10 +20,10 @@ assert-text: (\"#toggle-all-docs\", \"[\u2212]\")\n goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n // We first check that everything is visible.\n assert-text: (\"#toggle-all-docs\", \"[\u2212]\")\n-assert-attribute: (\"#implementations-list details.rustdoc-toggle\", {\"open\": \"\"}, ALL)\n-assert-attribute: (\"#trait-implementations-list details.rustdoc-toggle\", {\"open\": \"\"}, ALL)\n+assert-attribute: (\"#implementations-list details.toggle\", {\"open\": \"\"}, ALL)\n+assert-attribute: (\"#trait-implementations-list details.toggle\", {\"open\": \"\"}, ALL)\n assert-attribute-false: (\n-    \"#blanket-implementations-list > details.rustdoc-toggle\",\n+    \"#blanket-implementations-list > details.toggle\",\n     {\"open\": \"\"},\n     ALL,\n )\n@@ -32,18 +32,18 @@ assert-attribute-false: (\n click: \"#toggle-all-docs\"\n wait-for-text: (\"#toggle-all-docs\", \"[+]\")\n // We check that all <details> are collapsed (except for the impl block ones).\n-assert-attribute-false: (\"details.rustdoc-toggle:not(.implementors-toggle)\", {\"open\": \"\"}, ALL)\n+assert-attribute-false: (\"details.toggle:not(.implementors-toggle)\", {\"open\": \"\"}, ALL)\n assert-attribute: (\"#implementations-list > details.implementors-toggle\", {\"open\": \"\"})\n // We now check that the other impl blocks are collapsed.\n assert-attribute-false: (\n-    \"#blanket-implementations-list > details.rustdoc-toggle.implementors-toggle\",\n+    \"#blanket-implementations-list > details.toggle.implementors-toggle\",\n     {\"open\": \"\"},\n     ALL,\n )\n // We open them all again.\n click: \"#toggle-all-docs\"\n wait-for-text: (\"#toggle-all-docs\", \"[\u2212]\")\n-assert-attribute: (\"details.rustdoc-toggle\", {\"open\": \"\"}, ALL)\n+assert-attribute: (\"details.toggle\", {\"open\": \"\"}, ALL)\n \n // Checking the toggles style.\n show-text: true\n@@ -56,12 +56,12 @@ define-function: (\n         // We reload the page so the local storage settings are being used.\n         reload:\n \n-        assert-css: (\"details.rustdoc-toggle > summary::before\", {\n+        assert-css: (\"details.toggle > summary::before\", {\n             \"opacity\": \"0.5\",\n             \"filter\": |filter|,\n         }, ALL)\n-        move-cursor-to: \"details.rustdoc-toggle summary\"\n-        assert-css: (\"details.rustdoc-toggle > summary:hover::before\", {\n+        move-cursor-to: \"details.toggle summary\"\n+        assert-css: (\"details.toggle > summary:hover::before\", {\n             \"opacity\": \"1\",\n             \"filter\": |filter|,\n         })"}, {"sha": "000293b555f84ad83774da1e782c26cd3720365a", "filename": "tests/rustdoc-gui/toggled-open-implementations.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc-gui%2Ftoggled-open-implementations.goml", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc-gui%2Ftoggled-open-implementations.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Ftoggled-open-implementations.goml?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -2,4 +2,4 @@\n // has all the implementations toggled open by default, so users can\n // find method names in those implementations with Ctrl-F.\n goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n-assert-attribute: (\".rustdoc-toggle.implementors-toggle\", {\"open\": \"\"})\n+assert-attribute: (\".toggle.implementors-toggle\", {\"open\": \"\"})"}, {"sha": "fc755afda4a9cfa2ad24f08502c54101786f291a", "filename": "tests/rustdoc/index-page.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Findex-page.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Findex-page.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Findex-page.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -5,7 +5,7 @@\n #![crate_name = \"foo\"]\n \n // @has foo/../index.html\n-// @has - '//h1[@class=\"fqn\"]' 'List of all crates'\n+// @has - '//h1' 'List of all crates'\n // @has - '//ul[@class=\"all-items\"]//a[@href=\"foo/index.html\"]' 'foo'\n // @has - '//ul[@class=\"all-items\"]//a[@href=\"all_item_types/index.html\"]' 'all_item_types'\n pub struct Foo;"}, {"sha": "7578d49daa508753c34111b664d431faad397c7a", "filename": "tests/rustdoc/issue-41783.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Fissue-41783.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Fissue-41783.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fissue-41783.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -5,7 +5,7 @@\n // @!hasraw - '<span class=\"attr\">#[outer]</span>'\n // @hasraw - '#![inner]</span>'\n // @!hasraw - '<span class=\"attr\">#![inner]</span>'\n-// @snapshot 'codeblock' - '//*[@class=\"rustdoc-toggle top-doc\"]/*[@class=\"docblock\"]//pre/code'\n+// @snapshot 'codeblock' - '//*[@class=\"toggle top-doc\"]/*[@class=\"docblock\"]//pre/code'\n \n /// ```no_run\n /// # # space"}, {"sha": "4d047af325515d7c8cfdddf6207be51765fb75c9", "filename": "tests/rustdoc/keyword.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Fkeyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Fkeyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fkeyword.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -7,7 +7,7 @@\n // @has foo/index.html '//div[@class=\"sidebar-elems\"]//li/a' 'Keywords'\n // @has foo/index.html '//div[@class=\"sidebar-elems\"]//li/a/@href' '#keywords'\n // @has foo/keyword.match.html '//a[@class=\"keyword\"]' 'match'\n-// @has foo/keyword.match.html '//h1[@class=\"fqn\"]' 'Keyword match'\n+// @has foo/keyword.match.html '//h1' 'Keyword match'\n // @has foo/keyword.match.html '//section[@id=\"main-content\"]//div[@class=\"docblock\"]//p' 'this is a test!'\n // @has foo/index.html '//a/@href' '../foo/index.html'\n // @!has foo/foo/index.html"}, {"sha": "5dc857773a393ebf1fb883b674a628132269cb2b", "filename": "tests/rustdoc/local-reexport-doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Flocal-reexport-doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Flocal-reexport-doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Flocal-reexport-doc.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -4,7 +4,7 @@\n #![crate_name = \"foo\"]\n \n // @has 'foo/fn.g.html'\n-// @has - '//*[@class=\"rustdoc-toggle top-doc\"]/*[@class=\"docblock\"]' \\\n+// @has - '//*[@class=\"toggle top-doc\"]/*[@class=\"docblock\"]' \\\n // 'outer module inner module'\n \n mod inner_mod {"}, {"sha": "010058361faafa33e4a63feb9c9dff718dcd0865", "filename": "tests/rustdoc/mixing-doc-comments-and-attrs.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Fmixing-doc-comments-and-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Fmixing-doc-comments-and-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fmixing-doc-comments-and-attrs.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -1,15 +1,15 @@\n #![crate_name = \"foo\"]\n \n // @has 'foo/struct.S1.html'\n-// @snapshot S1_top-doc - '//details[@class=\"rustdoc-toggle top-doc\"]/div[@class=\"docblock\"]'\n+// @snapshot S1_top-doc - '//details[@class=\"toggle top-doc\"]/div[@class=\"docblock\"]'\n \n #[doc = \"Hello world!\\n\\n\"]\n /// Goodbye!\n #[doc = \"  Hello again!\\n\"]\n pub struct S1;\n \n // @has 'foo/struct.S2.html'\n-// @snapshot S2_top-doc - '//details[@class=\"rustdoc-toggle top-doc\"]/div[@class=\"docblock\"]'\n+// @snapshot S2_top-doc - '//details[@class=\"toggle top-doc\"]/div[@class=\"docblock\"]'\n \n /// Hello world!\n ///\n@@ -18,7 +18,7 @@ pub struct S1;\n pub struct S2;\n \n // @has 'foo/struct.S3.html'\n-// @snapshot S3_top-doc - '//details[@class=\"rustdoc-toggle top-doc\"]/div[@class=\"docblock\"]'\n+// @snapshot S3_top-doc - '//details[@class=\"toggle top-doc\"]/div[@class=\"docblock\"]'\n /** Par 1\n */ ///\n /// Par 2"}, {"sha": "29b67c6b2b17bad3c7940138763e76609e14f840", "filename": "tests/rustdoc/multiple-import-levels.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Fmultiple-import-levels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Fmultiple-import-levels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fmultiple-import-levels.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -21,14 +21,14 @@ mod c {\n }\n \n // @has 'foo/struct.Type.html'\n-// @has - '//*[@class=\"rustdoc-toggle top-doc\"]/*[@class=\"docblock\"]' 'foo 2 1'\n+// @has - '//*[@class=\"toggle top-doc\"]/*[@class=\"docblock\"]' 'foo 2 1'\n /// foo\n pub use b::Type;\n // @has 'foo/struct.Whatever.html'\n-// @has - '//*[@class=\"rustdoc-toggle top-doc\"]/*[@class=\"docblock\"]' 'whatever 3 2 1'\n+// @has - '//*[@class=\"toggle top-doc\"]/*[@class=\"docblock\"]' 'whatever 3 2 1'\n /// whatever\n pub use c::Type as Whatever;\n // @has 'foo/struct.Woof.html'\n-// @has - '//*[@class=\"rustdoc-toggle top-doc\"]/*[@class=\"docblock\"]' 'a dog 4 2 1'\n+// @has - '//*[@class=\"toggle top-doc\"]/*[@class=\"docblock\"]' 'a dog 4 2 1'\n /// a dog\n pub use c::Woof;"}, {"sha": "c3a5eb6d324a475513930b35c91dbff969d7b4d3", "filename": "tests/rustdoc/primitive-reference.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Fprimitive-reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Fprimitive-reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fprimitive-reference.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -9,7 +9,7 @@\n // @has - '//div[@class=\"sidebar-elems\"]//li/a/@href' '#primitives'\n // @has foo/primitive.reference.html\n // @has - '//a[@class=\"primitive\"]' 'reference'\n-// @has - '//h1[@class=\"fqn\"]' 'Primitive Type reference'\n+// @has - '//h1' 'Primitive Type reference'\n // @has - '//section[@id=\"main-content\"]//div[@class=\"docblock\"]//p' 'this is a test!'\n \n // There should be only one implementation listed."}, {"sha": "77922414676101fc548d0758dd62919fb7005737", "filename": "tests/rustdoc/primitive-slice-auto-trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Fprimitive-slice-auto-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Fprimitive-slice-auto-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fprimitive-slice-auto-trait.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -4,7 +4,7 @@\n #![feature(rustdoc_internals)]\n \n // @has foo/primitive.slice.html '//a[@class=\"primitive\"]' 'slice'\n-// @has - '//h1[@class=\"fqn\"]' 'Primitive Type slice'\n+// @has - '//h1' 'Primitive Type slice'\n // @has - '//section[@id=\"main-content\"]//div[@class=\"docblock\"]//p' 'this is a test!'\n // @has - '//h2[@id=\"synthetic-implementations\"]' 'Auto Trait Implementations'\n // @has - '//div[@id=\"synthetic-implementations-list\"]//h3' 'impl<T> Send for [T]where T: Send'"}, {"sha": "4344d24f98650aa5c6db2eea0cc9c52912e5c3ab", "filename": "tests/rustdoc/primitive-tuple-auto-trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Fprimitive-tuple-auto-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Fprimitive-tuple-auto-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fprimitive-tuple-auto-trait.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -4,7 +4,7 @@\n #![feature(rustdoc_internals)]\n \n // @has foo/primitive.tuple.html '//a[@class=\"primitive\"]' 'tuple'\n-// @has - '//h1[@class=\"fqn\"]' 'Primitive Type tuple'\n+// @has - '//h1' 'Primitive Type tuple'\n // @has - '//section[@id=\"main-content\"]//div[@class=\"docblock\"]//p' 'this is a test!'\n // @has - '//h2[@id=\"synthetic-implementations\"]' 'Auto Trait Implementations'\n // @has - '//div[@id=\"synthetic-implementations-list\"]//h3' 'Send'"}, {"sha": "61850e2462d887bb545ccc3d65f52dc7ca62faf6", "filename": "tests/rustdoc/primitive-unit-auto-trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Fprimitive-unit-auto-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Fprimitive-unit-auto-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fprimitive-unit-auto-trait.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -4,7 +4,7 @@\n #![feature(rustdoc_internals)]\n \n // @has foo/primitive.unit.html '//a[@class=\"primitive\"]' 'unit'\n-// @has - '//h1[@class=\"fqn\"]' 'Primitive Type unit'\n+// @has - '//h1' 'Primitive Type unit'\n // @has - '//section[@id=\"main-content\"]//div[@class=\"docblock\"]//p' 'this is a test!'\n // @has - '//h2[@id=\"synthetic-implementations\"]' 'Auto Trait Implementations'\n // @has - '//div[@id=\"synthetic-implementations-list\"]//h3' 'impl Send for ()'"}, {"sha": "516c7c0c6fe9bd40da798b32a95b1b6998ed672c", "filename": "tests/rustdoc/primitive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Fprimitive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Fprimitive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fprimitive.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -7,7 +7,7 @@\n // @has foo/index.html '//div[@class=\"sidebar-elems\"]//li/a' 'Primitive Types'\n // @has foo/index.html '//div[@class=\"sidebar-elems\"]//li/a/@href' '#primitives'\n // @has foo/primitive.i32.html '//a[@class=\"primitive\"]' 'i32'\n-// @has foo/primitive.i32.html '//h1[@class=\"fqn\"]' 'Primitive Type i32'\n+// @has foo/primitive.i32.html '//h1' 'Primitive Type i32'\n // @has foo/primitive.i32.html '//section[@id=\"main-content\"]//div[@class=\"docblock\"]//p' 'this is a test!'\n // @has foo/index.html '//a/@href' '../foo/index.html'\n // @!has foo/index.html '//span' '\ud83d\udd12'"}, {"sha": "ca4c93f92e0a4f4a705ef02323c9629e450aac33", "filename": "tests/rustdoc/strip-block-doc-comments-stars.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Fstrip-block-doc-comments-stars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Fstrip-block-doc-comments-stars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fstrip-block-doc-comments-stars.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -4,7 +4,7 @@\n // block doc comments can have their lines starting with a star.\n \n // @has foo/fn.foo.html\n-// @snapshot docblock - '//*[@class=\"rustdoc-toggle top-doc\"]//*[@class=\"docblock\"]'\n+// @snapshot docblock - '//*[@class=\"toggle top-doc\"]//*[@class=\"docblock\"]'\n /**\n  *     a\n  */"}, {"sha": "87240f233ff2afef5e28f90d16d49c1b6d0c9133", "filename": "tests/rustdoc/toggle-item-contents.rs", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Ftoggle-item-contents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Ftoggle-item-contents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Ftoggle-item-contents.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -1,15 +1,15 @@\n #![allow(unused)]\n \n // @has 'toggle_item_contents/struct.PubStruct.html'\n-// @count - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 0\n+// @count - '//details[@class=\"toggle type-contents-toggle\"]' 0\n pub struct PubStruct {\n     pub a: usize,\n     pub b: usize,\n }\n \n // @has 'toggle_item_contents/struct.BigPubStruct.html'\n-// @count - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 1\n-// @has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 'Show 13 fields'\n+// @count - '//details[@class=\"toggle type-contents-toggle\"]' 1\n+// @has - '//details[@class=\"toggle type-contents-toggle\"]' 'Show 13 fields'\n pub struct BigPubStruct {\n     pub a: usize,\n     pub b: usize,\n@@ -27,8 +27,8 @@ pub struct BigPubStruct {\n }\n \n // @has 'toggle_item_contents/union.BigUnion.html'\n-// @count - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 1\n-// @has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 'Show 13 fields'\n+// @count - '//details[@class=\"toggle type-contents-toggle\"]' 1\n+// @has - '//details[@class=\"toggle type-contents-toggle\"]' 'Show 13 fields'\n pub union BigUnion {\n     pub a: usize,\n     pub b: usize,\n@@ -46,23 +46,23 @@ pub union BigUnion {\n }\n \n // @has 'toggle_item_contents/union.Union.html'\n-// @count - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 0\n+// @count - '//details[@class=\"toggle type-contents-toggle\"]' 0\n pub union Union {\n     pub a: usize,\n     pub b: usize,\n     pub c: usize,\n }\n \n // @has 'toggle_item_contents/struct.PrivStruct.html'\n-// @count - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 0\n+// @count - '//details[@class=\"toggle type-contents-toggle\"]' 0\n // @has - '//div[@class=\"item-decl\"]' '/* private fields */'\n pub struct PrivStruct {\n     a: usize,\n     b: usize,\n }\n \n // @has 'toggle_item_contents/enum.Enum.html'\n-// @!has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' ''\n+// @!has - '//details[@class=\"toggle type-contents-toggle\"]' ''\n pub enum Enum {\n     A, B, C,\n     D {\n@@ -72,7 +72,7 @@ pub enum Enum {\n }\n \n // @has 'toggle_item_contents/enum.EnumStructVariant.html'\n-// @!has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' ''\n+// @!has - '//details[@class=\"toggle type-contents-toggle\"]' ''\n pub enum EnumStructVariant {\n     A, B, C,\n     D {\n@@ -81,14 +81,14 @@ pub enum EnumStructVariant {\n }\n \n // @has 'toggle_item_contents/enum.LargeEnum.html'\n-// @count - '//*[@class=\"rust enum\"]//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 1\n-// @has - '//*[@class=\"rust enum\"]//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 'Show 13 variants'\n+// @count - '//*[@class=\"rust enum\"]//details[@class=\"toggle type-contents-toggle\"]' 1\n+// @has - '//*[@class=\"rust enum\"]//details[@class=\"toggle type-contents-toggle\"]' 'Show 13 variants'\n pub enum LargeEnum {\n     A, B, C, D, E, F(u8), G, H, I, J, K, L, M\n }\n \n // @has 'toggle_item_contents/trait.Trait.html'\n-// @count - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 0\n+// @count - '//details[@class=\"toggle type-contents-toggle\"]' 0\n pub trait Trait {\n     type A;\n     #[must_use]\n@@ -97,8 +97,8 @@ pub trait Trait {\n }\n \n // @has 'toggle_item_contents/trait.GinormousTrait.html'\n-// @count - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 1\n-// @has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 'Show 16 associated items'\n+// @count - '//details[@class=\"toggle type-contents-toggle\"]' 1\n+// @has - '//details[@class=\"toggle type-contents-toggle\"]' 'Show 16 associated items'\n pub trait GinormousTrait {\n     type A;\n     type B;\n@@ -120,8 +120,8 @@ pub trait GinormousTrait {\n }\n \n // @has 'toggle_item_contents/trait.HugeTrait.html'\n-// @count - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 1\n-// @has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 'Show 12 associated constants and 2 methods'\n+// @count - '//details[@class=\"toggle type-contents-toggle\"]' 1\n+// @has - '//details[@class=\"toggle type-contents-toggle\"]' 'Show 12 associated constants and 2 methods'\n pub trait HugeTrait {\n     type A;\n     const M: usize = 1;\n@@ -142,8 +142,8 @@ pub trait HugeTrait {\n }\n \n // @has 'toggle_item_contents/trait.GiganticTrait.html'\n-// @count - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 1\n-// @has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 'Show 1 associated constant and 1 method'\n+// @count - '//details[@class=\"toggle type-contents-toggle\"]' 1\n+// @has - '//details[@class=\"toggle type-contents-toggle\"]' 'Show 1 associated constant and 1 method'\n pub trait GiganticTrait {\n     type A;\n     type B;\n@@ -163,8 +163,8 @@ pub trait GiganticTrait {\n }\n \n // @has 'toggle_item_contents/trait.BigTrait.html'\n-// @count - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 1\n-// @has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 'Show 14 methods'\n+// @count - '//details[@class=\"toggle type-contents-toggle\"]' 1\n+// @has - '//details[@class=\"toggle type-contents-toggle\"]' 'Show 14 methods'\n pub trait BigTrait {\n     type A;\n     #[must_use]"}, {"sha": "ebc316ca8ad2879ea0e5fcc171a8e70cc9ed294c", "filename": "tests/rustdoc/toggle-method.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Ftoggle-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Ftoggle-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Ftoggle-method.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -4,9 +4,9 @@\n // summary. Struct methods with no documentation should not be wrapped.\n //\n // @has foo/struct.Foo.html\n-// @has - '//details[@class=\"rustdoc-toggle method-toggle\"]//summary//h4[@class=\"code-header\"]' 'is_documented()'\n-// @has - '//details[@class=\"rustdoc-toggle method-toggle\"]//*[@class=\"docblock\"]' 'is_documented is documented'\n-// @!has - '//details[@class=\"rustdoc-toggle method-toggle\"]//summary//h4[@class=\"code-header\"]' 'not_documented()'\n+// @has - '//details[@class=\"toggle method-toggle\"]//summary//h4[@class=\"code-header\"]' 'is_documented()'\n+// @has - '//details[@class=\"toggle method-toggle\"]//*[@class=\"docblock\"]' 'is_documented is documented'\n+// @!has - '//details[@class=\"toggle method-toggle\"]//summary//h4[@class=\"code-header\"]' 'not_documented()'\n pub struct Foo {\n }\n "}, {"sha": "686a174fc8f954b4aa95e29912acf0b7fcb05ea3", "filename": "tests/rustdoc/toggle-trait-fn.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Ftoggle-trait-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Frustdoc%2Ftoggle-trait-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Ftoggle-trait-fn.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -4,14 +4,14 @@\n // summary. Trait methods with no documentation should not be wrapped.\n //\n // @has foo/trait.Foo.html\n-// @has - '//details[@class=\"rustdoc-toggle\"]//summary//h4[@class=\"code-header\"]' 'type Item'\n-// @!has - '//details[@class=\"rustdoc-toggle\"]//summary//h4[@class=\"code-header\"]' 'type Item2'\n-// @has -  '//details[@class=\"rustdoc-toggle method-toggle\"]//summary//h4[@class=\"code-header\"]' 'is_documented()'\n-// @!has - '//details[@class=\"rustdoc-toggle method-toggle\"]//summary//h4[@class=\"code-header\"]' 'not_documented()'\n-// @has -  '//details[@class=\"rustdoc-toggle method-toggle\"]//*[@class=\"docblock\"]' 'is_documented is documented'\n-// @has -  '//details[@class=\"rustdoc-toggle method-toggle\"]//summary//h4[@class=\"code-header\"]' 'is_documented_optional()'\n-// @!has - '//details[@class=\"rustdoc-toggle method-toggle\"]//summary//h4[@class=\"code-header\"]' 'not_documented_optional()'\n-// @has -  '//details[@class=\"rustdoc-toggle method-toggle\"]//*[@class=\"docblock\"]' 'is_documented_optional is documented'\n+// @has - '//details[@class=\"toggle\"]//summary//h4[@class=\"code-header\"]' 'type Item'\n+// @!has - '//details[@class=\"toggle\"]//summary//h4[@class=\"code-header\"]' 'type Item2'\n+// @has -  '//details[@class=\"toggle method-toggle\"]//summary//h4[@class=\"code-header\"]' 'is_documented()'\n+// @!has - '//details[@class=\"toggle method-toggle\"]//summary//h4[@class=\"code-header\"]' 'not_documented()'\n+// @has -  '//details[@class=\"toggle method-toggle\"]//*[@class=\"docblock\"]' 'is_documented is documented'\n+// @has -  '//details[@class=\"toggle method-toggle\"]//summary//h4[@class=\"code-header\"]' 'is_documented_optional()'\n+// @!has - '//details[@class=\"toggle method-toggle\"]//summary//h4[@class=\"code-header\"]' 'not_documented_optional()'\n+// @has -  '//details[@class=\"toggle method-toggle\"]//*[@class=\"docblock\"]' 'is_documented_optional is documented'\n pub trait Foo {\n     /// is documented\n     type Item;"}, {"sha": "873054927c96279723f7b87ae31a908372109ca1", "filename": "tests/ui/proc-macro/pretty-print-hack-show.local.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Fui%2Fproc-macro%2Fpretty-print-hack-show.local.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Fui%2Fproc-macro%2Fpretty-print-hack-show.local.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fproc-macro%2Fpretty-print-hack-show.local.stderr?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "previous_filename": "tests/ui/proc-macro/pretty-print-hack-show.stderr"}, {"sha": "3d793d2a0145c984f27fa8092f21df04c2ba724e", "filename": "tests/ui/proc-macro/pretty-print-hack-show.local.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Fui%2Fproc-macro%2Fpretty-print-hack-show.local.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Fui%2Fproc-macro%2Fpretty-print-hack-show.local.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fproc-macro%2Fpretty-print-hack-show.local.stdout?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "previous_filename": "tests/ui/proc-macro/pretty-print-hack-show.stdout"}, {"sha": "ab5013848891e549c8682a1fd89d234d5f729865", "filename": "tests/ui/proc-macro/pretty-print-hack-show.remapped.stderr", "status": "added", "additions": 179, "deletions": 0, "changes": 179, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Fui%2Fproc-macro%2Fpretty-print-hack-show.remapped.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Fui%2Fproc-macro%2Fpretty-print-hack-show.remapped.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fproc-macro%2Fpretty-print-hack-show.remapped.stderr?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -0,0 +1,179 @@\n+error: using an old version of `rental`\n+  --> remapped/proc-macro/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+\n+error: using an old version of `rental`\n+  --> remapped/proc-macro/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+\n+error: using an old version of `rental`\n+  --> remapped/proc-macro/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+\n+error: using an old version of `rental`\n+  --> remapped/proc-macro/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+\n+error: using an old version of `rental`\n+  --> remapped/proc-macro/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+\n+error: using an old version of `rental`\n+  --> remapped/proc-macro/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+\n+error: using an old version of `rental`\n+  --> remapped/proc-macro/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+\n+error: using an old version of `rental`\n+  --> remapped/proc-macro/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+\n+error: aborting due to 8 previous errors\n+\n+Future incompatibility report: Future breakage diagnostic:\n+error: using an old version of `rental`\n+  --> remapped/proc-macro/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+\n+Future breakage diagnostic:\n+error: using an old version of `rental`\n+  --> remapped/proc-macro/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+\n+Future breakage diagnostic:\n+error: using an old version of `rental`\n+  --> remapped/proc-macro/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+\n+Future breakage diagnostic:\n+error: using an old version of `rental`\n+  --> remapped/proc-macro/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+\n+Future breakage diagnostic:\n+error: using an old version of `rental`\n+  --> remapped/proc-macro/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+\n+Future breakage diagnostic:\n+error: using an old version of `rental`\n+  --> remapped/proc-macro/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+\n+Future breakage diagnostic:\n+error: using an old version of `rental`\n+  --> remapped/proc-macro/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+\n+Future breakage diagnostic:\n+error: using an old version of `rental`\n+  --> remapped/proc-macro/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+"}, {"sha": "61ca53b28d40d850caf6858fc8a41fcb4b02b9ac", "filename": "tests/ui/proc-macro/pretty-print-hack-show.remapped.stdout", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Fui%2Fproc-macro%2Fpretty-print-hack-show.remapped.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Fui%2Fproc-macro%2Fpretty-print-hack-show.remapped.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fproc-macro%2Fpretty-print-hack-show.remapped.stdout?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -0,0 +1,44 @@\n+PRINT-DERIVE INPUT (DISPLAY): enum ProceduralMasqueradeDummyType { Input, }\n+PRINT-DERIVE RE-COLLECTED (DISPLAY): enum ProceduralMasqueradeDummyType { Input }\n+PRINT-DERIVE INPUT (DEBUG): TokenStream [\n+    Ident {\n+        ident: \"enum\",\n+        span: remapped/proc-macro/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:1: 4:5 (#0),\n+    },\n+    Ident {\n+        ident: \"ProceduralMasqueradeDummyType\",\n+        span: remapped/proc-macro/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6: 4:35 (#0),\n+    },\n+    Group {\n+        delimiter: Brace,\n+        stream: TokenStream [\n+            Ident {\n+                ident: \"Input\",\n+                span: remapped/proc-macro/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:13:5: 13:10 (#0),\n+            },\n+        ],\n+        span: remapped/proc-macro/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:36: 14:2 (#0),\n+    },\n+]\n+PRINT-DERIVE INPUT (DISPLAY): enum ProceduralMasqueradeDummyType { Input, }\n+PRINT-DERIVE RE-COLLECTED (DISPLAY): enum ProceduralMasqueradeDummyType { Input }\n+PRINT-DERIVE INPUT (DEBUG): TokenStream [\n+    Ident {\n+        ident: \"enum\",\n+        span: remapped/proc-macro/pretty-print-hack/rental-0.5.5/src/lib.rs:4:1: 4:5 (#0),\n+    },\n+    Ident {\n+        ident: \"ProceduralMasqueradeDummyType\",\n+        span: remapped/proc-macro/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6: 4:35 (#0),\n+    },\n+    Group {\n+        delimiter: Brace,\n+        stream: TokenStream [\n+            Ident {\n+                ident: \"Input\",\n+                span: remapped/proc-macro/pretty-print-hack/rental-0.5.5/src/lib.rs:13:5: 13:10 (#0),\n+            },\n+        ],\n+        span: remapped/proc-macro/pretty-print-hack/rental-0.5.5/src/lib.rs:4:36: 14:2 (#0),\n+    },\n+]"}, {"sha": "e9ff66ba45a08194678ad1ddb7f8135952dd4cfa", "filename": "tests/ui/proc-macro/pretty-print-hack-show.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Fui%2Fproc-macro%2Fpretty-print-hack-show.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b87359599629d69a7b37318088dac3a5d67c9c/tests%2Fui%2Fproc-macro%2Fpretty-print-hack-show.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fproc-macro%2Fpretty-print-hack-show.rs?ref=c0b87359599629d69a7b37318088dac3a5d67c9c", "patch": "@@ -1,5 +1,11 @@\n // aux-build:test-macros.rs\n // compile-flags: -Z span-debug\n+// revisions: local remapped\n+// [remapped]compile-flags: --remap-path-prefix={{src-base}}=remapped\n+\n+// The remapped paths are not normalized by compiletest.\n+// normalize-stdout-test: \"\\\\(proc-macro|pretty-print-hack)\" -> \"/$1\"\n+// normalize-stderr-test: \"\\\\(proc-macro|pretty-print-hack)\" -> \"/$1\"\n \n #![no_std] // Don't load unnecessary hygiene information from std\n extern crate std;"}]}