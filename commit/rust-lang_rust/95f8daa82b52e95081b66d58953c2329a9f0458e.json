{"sha": "95f8daa82b52e95081b66d58953c2329a9f0458e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1ZjhkYWE4MmI1MmU5NTA4MWI2NmQ1ODk1M2MyMzI5YTlmMDQ1OGU=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-06-20T00:06:49Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-06-20T00:27:22Z"}, "message": "Fix -Z unpretty=everybody_loops\n\nIt turns out that this has not been working for who knows how long.\nPreviously:\n\n```\npub fn h() { 1 + 2; }\n```\n\nAfter this change:\n\n```\npub fn h() { loop {} }\n```\n\nThis only affected the pass when run with the command line\npretty-printing option, so rustdoc was still replacing bodies with\n`loop {}`.", "tree": {"sha": "504a22bcab6531ff06508011c16d3865f0762500", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/504a22bcab6531ff06508011c16d3865f0762500"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95f8daa82b52e95081b66d58953c2329a9f0458e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95f8daa82b52e95081b66d58953c2329a9f0458e", "html_url": "https://github.com/rust-lang/rust/commit/95f8daa82b52e95081b66d58953c2329a9f0458e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95f8daa82b52e95081b66d58953c2329a9f0458e/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8ff4bcbd02475cf487cd101bf32954dc63366d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8ff4bcbd02475cf487cd101bf32954dc63366d4", "html_url": "https://github.com/rust-lang/rust/commit/e8ff4bcbd02475cf487cd101bf32954dc63366d4"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "b45ab0f80ffac4a4cd2c4b3b1c4068d3b0b32a26", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/95f8daa82b52e95081b66d58953c2329a9f0458e/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95f8daa82b52e95081b66d58953c2329a9f0458e/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=95f8daa82b52e95081b66d58953c2329a9f0458e", "patch": "@@ -307,6 +307,7 @@ pub fn run_compiler(\n                         compiler.output_file().as_ref().map(|p| &**p),\n                     );\n                 }\n+                trace!(\"finished pretty-printing\");\n                 return early_exit();\n             }\n "}, {"sha": "920cc6021e68781d3933c7c697cc616019095c8f", "filename": "src/librustc_interface/interface.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/95f8daa82b52e95081b66d58953c2329a9f0458e/src%2Flibrustc_interface%2Finterface.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95f8daa82b52e95081b66d58953c2329a9f0458e/src%2Flibrustc_interface%2Finterface.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Finterface.rs?ref=95f8daa82b52e95081b66d58953c2329a9f0458e", "patch": "@@ -202,6 +202,7 @@ pub fn run_compiler_in_existing_thread_pool<R>(\n }\n \n pub fn run_compiler<R: Send>(mut config: Config, f: impl FnOnce(&Compiler) -> R + Send) -> R {\n+    log::trace!(\"run_compiler\");\n     let stderr = config.stderr.take();\n     util::spawn_thread_pool(\n         config.opts.edition,"}, {"sha": "c0a67f20a1e8c4ea09c4241adc109ee1b2203c81", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/95f8daa82b52e95081b66d58953c2329a9f0458e/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95f8daa82b52e95081b66d58953c2329a9f0458e/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=95f8daa82b52e95081b66d58953c2329a9f0458e", "patch": "@@ -101,6 +101,7 @@ pub fn configure_and_expand(\n     krate: ast::Crate,\n     crate_name: &str,\n ) -> Result<(ast::Crate, BoxedResolver)> {\n+    log::trace!(\"configure_and_expand\");\n     // Currently, we ignore the name resolution data structures for the purposes of dependency\n     // tracking. Instead we will run name resolution and include its output in the hash of each\n     // item, much like we do for macro expansion. In other words, the hash reflects not just\n@@ -230,6 +231,7 @@ fn configure_and_expand_inner<'a>(\n     resolver_arenas: &'a ResolverArenas<'a>,\n     metadata_loader: &'a MetadataLoaderDyn,\n ) -> Result<(ast::Crate, Resolver<'a>)> {\n+    log::trace!(\"configure_and_expand_inner\");\n     pre_expansion_lint(sess, lint_store, &krate);\n \n     let mut resolver = Resolver::new(sess, &krate, crate_name, metadata_loader, &resolver_arenas);\n@@ -357,6 +359,7 @@ fn configure_and_expand_inner<'a>(\n         should_loop |= true;\n     }\n     if should_loop {\n+        log::debug!(\"replacing bodies with loop {{}}\");\n         util::ReplaceBodyWithLoop::new(&mut resolver).visit_crate(&mut krate);\n     }\n "}, {"sha": "4a41c3e97cafc3c99ee59ad811c8d9a01688b9ac", "filename": "src/librustc_interface/queries.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/95f8daa82b52e95081b66d58953c2329a9f0458e/src%2Flibrustc_interface%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95f8daa82b52e95081b66d58953c2329a9f0458e/src%2Flibrustc_interface%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fqueries.rs?ref=95f8daa82b52e95081b66d58953c2329a9f0458e", "patch": "@@ -169,6 +169,7 @@ impl<'tcx> Queries<'tcx> {\n     pub fn expansion(\n         &self,\n     ) -> Result<&Query<(ast::Crate, Steal<Rc<RefCell<BoxedResolver>>>, Lrc<LintStore>)>> {\n+        log::trace!(\"expansion\");\n         self.expansion.compute(|| {\n             let crate_name = self.crate_name()?.peek().clone();\n             let (krate, lint_store) = self.register_plugins()?.take();"}, {"sha": "ff94a43c4f1a2b324e62a054db59c493c7a97036", "filename": "src/librustc_session/config.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/95f8daa82b52e95081b66d58953c2329a9f0458e/src%2Flibrustc_session%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95f8daa82b52e95081b66d58953c2329a9f0458e/src%2Flibrustc_session%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Fconfig.rs?ref=95f8daa82b52e95081b66d58953c2329a9f0458e", "patch": "@@ -1826,6 +1826,7 @@ fn parse_pretty(\n                 }\n             }\n         };\n+        log::debug!(\"got unpretty option: {:?}\", first);\n         first\n     }\n }\n@@ -1954,9 +1955,11 @@ impl PpMode {\n         use PpMode::*;\n         use PpSourceMode::*;\n         match *self {\n-            PpmSource(PpmNormal | PpmEveryBodyLoops | PpmIdentified) => false,\n+            PpmSource(PpmNormal | PpmIdentified) => false,\n \n-            PpmSource(PpmExpanded | PpmExpandedIdentified | PpmExpandedHygiene)\n+            PpmSource(\n+                PpmExpanded | PpmEveryBodyLoops | PpmExpandedIdentified | PpmExpandedHygiene,\n+            )\n             | PpmHir(_)\n             | PpmHirTree(_)\n             | PpmMir"}]}