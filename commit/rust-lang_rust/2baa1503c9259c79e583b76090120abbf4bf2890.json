{"sha": "2baa1503c9259c79e583b76090120abbf4bf2890", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiYWExNTAzYzkyNTljNzllNTgzYjc2MDkwMTIwYWJiZjRiZjI4OTA=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-04-07T17:56:17Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-04-07T17:56:17Z"}, "message": "Rollup merge of #32687 - mneumann:dragonfly_fix_libstd, r=alexcrichton\n\nFix libstd on DragonFly\n\nFollowing changes:\n\n* birthtime does not exist on DragonFly\n* errno: __dfly_error is no more. Use #[thread_local] static errno.\n* clock_gettime expects a c_ulong\n\nThese changes are required to build DragonFly snapshots again.", "tree": {"sha": "64fb8785d4c509981a8e635e1520550cd167bdc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64fb8785d4c509981a8e635e1520550cd167bdc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2baa1503c9259c79e583b76090120abbf4bf2890", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2baa1503c9259c79e583b76090120abbf4bf2890", "html_url": "https://github.com/rust-lang/rust/commit/2baa1503c9259c79e583b76090120abbf4bf2890", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2baa1503c9259c79e583b76090120abbf4bf2890/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "470ca1c3ff33cd046f71a5453f8f520da4cd387e", "url": "https://api.github.com/repos/rust-lang/rust/commits/470ca1c3ff33cd046f71a5453f8f520da4cd387e", "html_url": "https://github.com/rust-lang/rust/commit/470ca1c3ff33cd046f71a5453f8f520da4cd387e"}, {"sha": "60c988ec176b9653bc1c3a6d6a738646d15a5ad6", "url": "https://api.github.com/repos/rust-lang/rust/commits/60c988ec176b9653bc1c3a6d6a738646d15a5ad6", "html_url": "https://github.com/rust-lang/rust/commit/60c988ec176b9653bc1c3a6d6a738646d15a5ad6"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "db672e5643531181fb59b0759274cc81d74c7e50", "filename": "src/libstd/os/dragonfly/fs.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2baa1503c9259c79e583b76090120abbf4bf2890/src%2Flibstd%2Fos%2Fdragonfly%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2baa1503c9259c79e583b76090120abbf4bf2890/src%2Flibstd%2Fos%2Fdragonfly%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fdragonfly%2Ffs.rs?ref=2baa1503c9259c79e583b76090120abbf4bf2890", "patch": "@@ -63,10 +63,6 @@ pub trait MetadataExt {\n     #[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]\n     fn st_ctime_nsec(&self) -> i64;\n     #[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]\n-    fn st_birthtime(&self) -> i64;\n-    #[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]\n-    fn st_birthtime_nsec(&self) -> i64;\n-    #[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]\n     fn st_blksize(&self) -> u64;\n     #[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]\n     fn st_blocks(&self) -> u64;\n@@ -129,12 +125,6 @@ impl MetadataExt for Metadata {\n     fn st_ctime_nsec(&self) -> i64 {\n         self.as_inner().as_inner().st_ctime_nsec as i64\n     }\n-    fn st_birthtime(&self) -> i64 {\n-        self.as_inner().as_inner().st_birthtime as i64\n-    }\n-    fn st_birthtime_nsec(&self) -> i64 {\n-        self.as_inner().as_inner().st_birthtime_nsec as i64\n-    }\n     fn st_blksize(&self) -> u64 {\n         self.as_inner().as_inner().st_blksize as u64\n     }"}, {"sha": "94ebbd70ae83deb5c6194460c96aa613ee6997a2", "filename": "src/libstd/sys/unix/os.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2baa1503c9259c79e583b76090120abbf4bf2890/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2baa1503c9259c79e583b76090120abbf4bf2890/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fos.rs?ref=2baa1503c9259c79e583b76090120abbf4bf2890", "patch": "@@ -36,6 +36,7 @@ const TMPBUF_SZ: usize = 128;\n static ENV_LOCK: StaticMutex = StaticMutex::new();\n \n /// Returns the platform-specific value of errno\n+#[cfg(not(target_os = \"dragonfly\"))]\n pub fn errno() -> i32 {\n     extern {\n         #[cfg_attr(any(target_os = \"linux\", target_os = \"emscripten\"),\n@@ -47,7 +48,6 @@ pub fn errno() -> i32 {\n                        target_env = \"newlib\"),\n                    link_name = \"__errno\")]\n         #[cfg_attr(target_os = \"solaris\", link_name = \"___errno\")]\n-        #[cfg_attr(target_os = \"dragonfly\", link_name = \"__dfly_error\")]\n         #[cfg_attr(any(target_os = \"macos\",\n                        target_os = \"ios\",\n                        target_os = \"freebsd\"),\n@@ -60,6 +60,16 @@ pub fn errno() -> i32 {\n     }\n }\n \n+#[cfg(target_os = \"dragonfly\")]\n+pub fn errno() -> i32 {\n+    extern {\n+        #[thread_local]\n+        static errno: c_int;\n+    }\n+\n+    errno as i32\n+}\n+\n /// Gets a detailed string description for the given error number.\n pub fn error_string(errno: i32) -> String {\n     extern {"}, {"sha": "cc7abe25e35e5a1edc902e6608996a8da7344172", "filename": "src/libstd/sys/unix/time.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2baa1503c9259c79e583b76090120abbf4bf2890/src%2Flibstd%2Fsys%2Funix%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2baa1503c9259c79e583b76090120abbf4bf2890/src%2Flibstd%2Fsys%2Funix%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ftime.rs?ref=2baa1503c9259c79e583b76090120abbf4bf2890", "patch": "@@ -303,8 +303,13 @@ mod inner {\n         }\n     }\n \n+    #[cfg(not(target_os = \"dragonfly\"))]\n+    pub type clock_t = libc::c_int;\n+    #[cfg(target_os = \"dragonfly\")]\n+    pub type clock_t = libc::c_ulong;\n+\n     impl Timespec {\n-        pub fn now(clock: libc::c_int) -> Timespec {\n+        pub fn now(clock: clock_t) -> Timespec {\n             let mut t = Timespec {\n                 t: libc::timespec {\n                     tv_sec: 0,"}]}