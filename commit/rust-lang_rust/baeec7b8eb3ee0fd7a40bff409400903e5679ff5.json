{"sha": "baeec7b8eb3ee0fd7a40bff409400903e5679ff5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhZWVjN2I4ZWIzZWUwZmQ3YTQwYmZmNDA5NDAwOTAzZTU2NzlmZjU=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-04-14T00:58:54Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-04-14T01:39:03Z"}, "message": "Avoid to use floating point match\n\nIts going to be forbidden, see issue 41255.", "tree": {"sha": "ced64af14939559e7a3c338fac601061b1adcf2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ced64af14939559e7a3c338fac601061b1adcf2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/baeec7b8eb3ee0fd7a40bff409400903e5679ff5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/baeec7b8eb3ee0fd7a40bff409400903e5679ff5", "html_url": "https://github.com/rust-lang/rust/commit/baeec7b8eb3ee0fd7a40bff409400903e5679ff5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/baeec7b8eb3ee0fd7a40bff409400903e5679ff5/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43ef63d5b4279ef97ed921338a69b0d62101ca83", "url": "https://api.github.com/repos/rust-lang/rust/commits/43ef63d5b4279ef97ed921338a69b0d62101ca83", "html_url": "https://github.com/rust-lang/rust/commit/43ef63d5b4279ef97ed921338a69b0d62101ca83"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "9a42b82beff67ef674e45aab0779d3cd40e8ac3e", "filename": "src/librand/distributions/gamma.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/baeec7b8eb3ee0fd7a40bff409400903e5679ff5/src%2Flibrand%2Fdistributions%2Fgamma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/baeec7b8eb3ee0fd7a40bff409400903e5679ff5/src%2Flibrand%2Fdistributions%2Fgamma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Fdistributions%2Fgamma.rs?ref=baeec7b8eb3ee0fd7a40bff409400903e5679ff5", "patch": "@@ -103,12 +103,14 @@ impl Gamma {\n         assert!(shape > 0.0, \"Gamma::new called with shape <= 0\");\n         assert!(scale > 0.0, \"Gamma::new called with scale <= 0\");\n \n-        let repr = match shape {\n-            1.0 => One(Exp::new(1.0 / scale)),\n-            0.0...1.0 => Small(GammaSmallShape::new_raw(shape, scale)),\n-            _ => Large(GammaLargeShape::new_raw(shape, scale)),\n+        let repr = if shape == 1.0 {\n+            One(Exp::new(1.0 / scale))\n+        } else if 0.0 <= shape && shape < 1.0 {\n+            Small(GammaSmallShape::new_raw(shape, scale))\n+        } else {\n+            Large(GammaLargeShape::new_raw(shape, scale))\n         };\n-        Gamma { repr: repr }\n+        Gamma { repr }\n     }\n }\n "}]}