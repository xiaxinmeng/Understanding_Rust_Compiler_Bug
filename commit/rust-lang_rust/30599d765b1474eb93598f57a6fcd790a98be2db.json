{"sha": "30599d765b1474eb93598f57a6fcd790a98be2db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwNTk5ZDc2NWIxNDc0ZWI5MzU5OGY1N2E2ZmNkNzkwYTk4YmUyZGI=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-11-25T14:05:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-25T14:05:26Z"}, "message": "Rollup merge of #66694 - RalfJung:panic-comments, r=Dylan-DPC\n\nAdd some comments to panic runtime", "tree": {"sha": "69c7372aebea99d9ed44eef75a1241022319d2e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69c7372aebea99d9ed44eef75a1241022319d2e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30599d765b1474eb93598f57a6fcd790a98be2db", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd29+mCRBK7hj4Ov3rIwAAdHIIAGc6XqcAkYfgUxa1vy1D7NT7\nEzx5JqmouJcFQb/I/aBxriq8DV3M5gdT3REKHTwYYWyZhNZV7DUw7zAifFyC3wPk\nsgkk+HEhWIJHt/5kiRl1E+7j8iLCkZSxGJAa+oTV/Ayfe1eIMcSOnpelmQzu5oDR\nENtAVSe419P2NQr8p+eutRES+949zOOOr/v47H9d/HbfyuViSLfgJEUI+/YQRyfz\ne/mGelXYYhKQxnjBRexJowrX+9xGmfLI0ZxqzLOT//cnxyU4ZA84tkPscvn+NpBo\nHDXfnX/2aUGuFXxYpuhIp3T4iaX0wnicINiDDW0GqAXIkK+iKe7X42f37/lzX30=\n=DEGh\n-----END PGP SIGNATURE-----\n", "payload": "tree 69c7372aebea99d9ed44eef75a1241022319d2e1\nparent 11b8e166e852a0a326a0aca97d4a296f533466e0\nparent 6440b9425384d2f8f11c4fe281fe99f79b92afb6\nauthor Pietro Albini <pietro@pietroalbini.org> 1574690726 +0100\ncommitter GitHub <noreply@github.com> 1574690726 +0100\n\nRollup merge of #66694 - RalfJung:panic-comments, r=Dylan-DPC\n\nAdd some comments to panic runtime\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30599d765b1474eb93598f57a6fcd790a98be2db", "html_url": "https://github.com/rust-lang/rust/commit/30599d765b1474eb93598f57a6fcd790a98be2db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30599d765b1474eb93598f57a6fcd790a98be2db/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11b8e166e852a0a326a0aca97d4a296f533466e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/11b8e166e852a0a326a0aca97d4a296f533466e0", "html_url": "https://github.com/rust-lang/rust/commit/11b8e166e852a0a326a0aca97d4a296f533466e0"}, {"sha": "6440b9425384d2f8f11c4fe281fe99f79b92afb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/6440b9425384d2f8f11c4fe281fe99f79b92afb6", "html_url": "https://github.com/rust-lang/rust/commit/6440b9425384d2f8f11c4fe281fe99f79b92afb6"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "4833194be37acf825252cc2219af847adc49c59e", "filename": "src/libcore/panicking.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/30599d765b1474eb93598f57a6fcd790a98be2db/src%2Flibcore%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30599d765b1474eb93598f57a6fcd790a98be2db/src%2Flibcore%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpanicking.rs?ref=30599d765b1474eb93598f57a6fcd790a98be2db", "patch": "@@ -6,8 +6,7 @@\n //! interface for panicking is:\n //!\n //! ```\n-//! # use std::fmt;\n-//! fn panic_impl(fmt: fmt::Arguments, file_line_col: &(&'static str, u32, u32)) -> !\n+//! fn panic_impl(pi: &core::panic::PanicInfo<'_>) -> !\n //! # { loop {} }\n //! ```\n //!\n@@ -35,7 +34,7 @@ use crate::panic::{Location, PanicInfo};\n // never inline unless panic_immediate_abort to avoid code\n // bloat at the call sites as much as possible\n #[cfg_attr(not(feature=\"panic_immediate_abort\"),inline(never))]\n-#[lang = \"panic\"]\n+#[lang = \"panic\"] // needed by codegen for panic on overflow and other `Assert` MIR terminators\n pub fn panic(expr: &str, location: &Location<'_>) -> ! {\n     if cfg!(feature = \"panic_immediate_abort\") {\n         unsafe { super::intrinsics::abort() }\n@@ -52,7 +51,7 @@ pub fn panic(expr: &str, location: &Location<'_>) -> ! {\n \n #[cold]\n #[cfg_attr(not(feature=\"panic_immediate_abort\"),inline(never))]\n-#[lang = \"panic_bounds_check\"]\n+#[lang = \"panic_bounds_check\"] // needed by codegen for panic on OOB array/slice access\n fn panic_bounds_check(location: &Location<'_>, index: usize, len: usize) -> ! {\n     if cfg!(feature = \"panic_immediate_abort\") {\n         unsafe { super::intrinsics::abort() }"}, {"sha": "6819a4a04d73770ebb30d18c101b8098902a7b8d", "filename": "src/libstd/panicking.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/30599d765b1474eb93598f57a6fcd790a98be2db/src%2Flibstd%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30599d765b1474eb93598f57a6fcd790a98be2db/src%2Flibstd%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpanicking.rs?ref=30599d765b1474eb93598f57a6fcd790a98be2db", "patch": "@@ -44,6 +44,8 @@ extern {\n                                 data: *mut u8,\n                                 data_ptr: *mut usize,\n                                 vtable_ptr: *mut usize) -> u32;\n+\n+    /// `payload` is actually a `*mut &mut dyn BoxMeUp` but that would cause FFI warnings.\n     #[unwind(allowed)]\n     fn __rust_start_panic(payload: usize) -> u32;\n }\n@@ -294,7 +296,7 @@ pub fn panicking() -> bool {\n     update_panic_count(0) != 0\n }\n \n-/// Entry point of panic from the libcore crate.\n+/// Entry point of panic from the libcore crate (`panic_impl` lang item).\n #[cfg(not(test))]\n #[panic_handler]\n #[unwind(allowed)]\n@@ -380,7 +382,7 @@ fn continue_panic_fmt(info: &PanicInfo<'_>) -> ! {\n #[unstable(feature = \"libstd_sys_internals\",\n            reason = \"used by the panic! macro\",\n            issue = \"0\")]\n-#[cfg_attr(not(test), lang = \"begin_panic\")]\n+#[cfg_attr(not(test), lang = \"begin_panic\")] // lang item for CTFE panic support\n // never inline unless panic_immediate_abort to avoid code\n // bloat at the call sites as much as possible\n #[cfg_attr(not(feature=\"panic_immediate_abort\"),inline(never))]"}]}