{"sha": "304717bd86e42bc9b0c45ea5a6068e7ed9d13f2f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwNDcxN2JkODZlNDJiYzliMGM0NWVhNWE2MDY4ZTdlZDlkMTNmMmY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-24T12:48:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-24T12:48:57Z"}, "message": "Auto merge of #46894 - detrumi:fix-const-eval-trait, r=eddyb\n\nConst-eval array lengths in rustdoc.\n\nFixes #46727\nr? @eddyb\n\nBig thanks to @eddyb for helping me figure this out.", "tree": {"sha": "f3e9a4cba12614ab780040240f7a9d587d92c9b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3e9a4cba12614ab780040240f7a9d587d92c9b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/304717bd86e42bc9b0c45ea5a6068e7ed9d13f2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/304717bd86e42bc9b0c45ea5a6068e7ed9d13f2f", "html_url": "https://github.com/rust-lang/rust/commit/304717bd86e42bc9b0c45ea5a6068e7ed9d13f2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/304717bd86e42bc9b0c45ea5a6068e7ed9d13f2f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ce6b9a770ea9bbe2747b2cdbf6ffcde7ceb6469", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ce6b9a770ea9bbe2747b2cdbf6ffcde7ceb6469", "html_url": "https://github.com/rust-lang/rust/commit/4ce6b9a770ea9bbe2747b2cdbf6ffcde7ceb6469"}, {"sha": "d10d3892256648d70472630416b9592d6a232662", "url": "https://api.github.com/repos/rust-lang/rust/commits/d10d3892256648d70472630416b9592d6a232662", "html_url": "https://github.com/rust-lang/rust/commit/d10d3892256648d70472630416b9592d6a232662"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "10cb2e5f3fdafb0cc3aa36b989cea827c15438c9", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/304717bd86e42bc9b0c45ea5a6068e7ed9d13f2f/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/304717bd86e42bc9b0c45ea5a6068e7ed9d13f2f/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=304717bd86e42bc9b0c45ea5a6068e7ed9d13f2f", "patch": "@@ -33,7 +33,6 @@ use rustc::middle::resolve_lifetime as rl;\n use rustc::middle::lang_items;\n use rustc::hir::def::{Def, CtorKind};\n use rustc::hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n-use rustc::traits::Reveal;\n use rustc::ty::subst::Substs;\n use rustc::ty::{self, Ty, AdtKind};\n use rustc::middle::stability;\n@@ -2062,7 +2061,7 @@ impl Clean<Type> for hir::Ty {\n             TySlice(ref ty) => Slice(box ty.clean(cx)),\n             TyArray(ref ty, n) => {\n                 let def_id = cx.tcx.hir.body_owner_def_id(n);\n-                let param_env = ty::ParamEnv::empty(Reveal::UserFacing);\n+                let param_env = cx.tcx.param_env(def_id);\n                 let substs = Substs::identity_for_item(cx.tcx, def_id);\n                 let n = cx.tcx.const_eval(param_env.and((def_id, substs))).unwrap();\n                 let n = if let ConstVal::Integral(ConstInt::Usize(n)) = n.val {\n@@ -2191,6 +2190,11 @@ impl<'tcx> Clean<Type> for Ty<'tcx> {\n             ty::TyStr => Primitive(PrimitiveType::Str),\n             ty::TySlice(ty) => Slice(box ty.clean(cx)),\n             ty::TyArray(ty, n) => {\n+                let mut n = cx.tcx.lift(&n).unwrap();\n+                if let ConstVal::Unevaluated(def_id, substs) = n.val {\n+                    let param_env = cx.tcx.param_env(def_id);\n+                    n = cx.tcx.const_eval(param_env.and((def_id, substs))).unwrap()\n+                };\n                 let n = if let ConstVal::Integral(ConstInt::Usize(n)) = n.val {\n                     n.to_string()\n                 } else if let ConstVal::Unevaluated(def_id, _) = n.val {"}, {"sha": "f0869f016e666959198196f0b5bb03592995cafa", "filename": "src/test/rustdoc/auxiliary/issue-46727.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/304717bd86e42bc9b0c45ea5a6068e7ed9d13f2f/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-46727.rs", "raw_url": "https://github.com/rust-lang/rust/raw/304717bd86e42bc9b0c45ea5a6068e7ed9d13f2f/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-46727.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-46727.rs?ref=304717bd86e42bc9b0c45ea5a6068e7ed9d13f2f", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Cmetadata=aux\n+\n+pub trait Foo {}\n+\n+pub struct Bar<T> { x: T }\n+\n+impl<T> Foo for Bar<[T; 1 + 1 + 1]> {}"}, {"sha": "5b202d8c4fe885f8f56c6d3d676b360149058c33", "filename": "src/test/rustdoc/issue-46727.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/304717bd86e42bc9b0c45ea5a6068e7ed9d13f2f/src%2Ftest%2Frustdoc%2Fissue-46727.rs", "raw_url": "https://github.com/rust-lang/rust/raw/304717bd86e42bc9b0c45ea5a6068e7ed9d13f2f/src%2Ftest%2Frustdoc%2Fissue-46727.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-46727.rs?ref=304717bd86e42bc9b0c45ea5a6068e7ed9d13f2f", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue-46727.rs\n+\n+extern crate issue_46727;\n+\n+// @has issue_46727/trait.Foo.html\n+// @has - '//code' 'impl<T> Foo for Bar<[T; 3]>'\n+pub use issue_46727::{Foo, Bar};"}]}