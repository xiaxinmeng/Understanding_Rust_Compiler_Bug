{"sha": "e6f39f7225a55926f43600d1f517d4107e17d794", "node_id": "C_kwDOAAsO6NoAKGU2ZjM5ZjcyMjVhNTU5MjZmNDM2MDBkMWY1MTdkNDEwN2UxN2Q3OTQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-08T20:26:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-08T20:26:53Z"}, "message": "Rollup merge of #108911 - GuillaumeGomez:improve-rustdoc-gui-tester-code, r=notriddle\n\nImprove rustdoc-gui/tester.js code a bit\n\nJust a small clean-up.\n\nr? `@notriddle`", "tree": {"sha": "c3ddbdd000869ad1a91952024c600ade6744bac2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3ddbdd000869ad1a91952024c600ade6744bac2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6f39f7225a55926f43600d1f517d4107e17d794", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkCO+NCRBK7hj4Ov3rIwAAFogIACtgv7/R4QzkFIzi3U2qloUA\n3X0l4qxa14+DukjmU+3fEmCUd7pKc1bB3CREXYZjLBv4aKm2hO+gWRx387k1TJug\n9UD5IgAstYr8MrnBZNbIex36GDHKvqrwy4RsDr9l4Yul5Dq2Ie2AXL+EqS0FEjNm\nh4jGDH44E8JCK8SjZuuI+SF3QndKBhUW+GFXjfKOYosG+VDbo401ze02qtG5LVlm\nx/mSui0sy+z/DCfPqx1lqPha2D+yV05qjlHoDhQq/3o1iN2AdGoPveG5W5QA7vgX\nmSyj/oUtBMPDCx9pKdnOuxlbafOExG713Ro6Fi4Mk5WZ/OXPAebSigJBXz56xgM=\n=Fcmp\n-----END PGP SIGNATURE-----\n", "payload": "tree c3ddbdd000869ad1a91952024c600ade6744bac2\nparent 2ebb5b1ddc65fb71c0dd5a0f3dd0dddfe8d4a1b3\nparent 7e932db3689076b2fe99c625e25d4f9b3f03a538\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1678307213 +0100\ncommitter GitHub <noreply@github.com> 1678307213 +0100\n\nRollup merge of #108911 - GuillaumeGomez:improve-rustdoc-gui-tester-code, r=notriddle\n\nImprove rustdoc-gui/tester.js code a bit\n\nJust a small clean-up.\n\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6f39f7225a55926f43600d1f517d4107e17d794", "html_url": "https://github.com/rust-lang/rust/commit/e6f39f7225a55926f43600d1f517d4107e17d794", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6f39f7225a55926f43600d1f517d4107e17d794/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ebb5b1ddc65fb71c0dd5a0f3dd0dddfe8d4a1b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ebb5b1ddc65fb71c0dd5a0f3dd0dddfe8d4a1b3", "html_url": "https://github.com/rust-lang/rust/commit/2ebb5b1ddc65fb71c0dd5a0f3dd0dddfe8d4a1b3"}, {"sha": "7e932db3689076b2fe99c625e25d4f9b3f03a538", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e932db3689076b2fe99c625e25d4f9b3f03a538", "html_url": "https://github.com/rust-lang/rust/commit/7e932db3689076b2fe99c625e25d4f9b3f03a538"}], "stats": {"total": 48, "additions": 25, "deletions": 23}, "files": [{"sha": "80bfd38d1e961aa4dd70aa0b683d12891081cec6", "filename": "src/tools/rustdoc-gui/tester.js", "status": "modified", "additions": 25, "deletions": 23, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/e6f39f7225a55926f43600d1f517d4107e17d794/src%2Ftools%2Frustdoc-gui%2Ftester.js", "raw_url": "https://github.com/rust-lang/rust/raw/e6f39f7225a55926f43600d1f517d4107e17d794/src%2Ftools%2Frustdoc-gui%2Ftester.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-gui%2Ftester.js?ref=e6f39f7225a55926f43600d1f517d4107e17d794", "patch": "@@ -31,7 +31,7 @@ function isNumeric(s) {\n }\n \n function parseOptions(args) {\n-    var opts = {\n+    const opts = {\n         \"doc_folder\": \"\",\n         \"tests_folder\": \"\",\n         \"files\": [],\n@@ -42,7 +42,7 @@ function parseOptions(args) {\n         \"executable_path\": null,\n         \"no_sandbox\": false,\n     };\n-    var correspondances = {\n+    const correspondances = {\n         \"--doc-folder\": \"doc_folder\",\n         \"--tests-folder\": \"tests_folder\",\n         \"--debug\": \"debug\",\n@@ -52,39 +52,41 @@ function parseOptions(args) {\n         \"--no-sandbox\": \"no_sandbox\",\n     };\n \n-    for (var i = 0; i < args.length; ++i) {\n-        if (args[i] === \"--doc-folder\"\n-            || args[i] === \"--tests-folder\"\n-            || args[i] === \"--file\"\n-            || args[i] === \"--jobs\"\n-            || args[i] === \"--executable-path\") {\n+    for (let i = 0; i < args.length; ++i) {\n+        const arg = args[i];\n+        if (arg === \"--doc-folder\"\n+            || arg === \"--tests-folder\"\n+            || arg === \"--file\"\n+            || arg === \"--jobs\"\n+            || arg === \"--executable-path\") {\n             i += 1;\n             if (i >= args.length) {\n-                console.log(\"Missing argument after `\" + args[i - 1] + \"` option.\");\n+                console.log(\"Missing argument after `\" + arg + \"` option.\");\n                 return null;\n             }\n-            if (args[i - 1] === \"--jobs\") {\n-                if (!isNumeric(args[i])) {\n+            const arg_value = args[i];\n+            if (arg === \"--jobs\") {\n+                if (!isNumeric(arg_value)) {\n                     console.log(\n-                        \"`--jobs` option expects a positive number, found `\" + args[i] + \"`\");\n+                        \"`--jobs` option expects a positive number, found `\" + arg_value + \"`\");\n                     return null;\n                 }\n-                opts[\"jobs\"] = parseInt(args[i]);\n-            } else if (args[i - 1] !== \"--file\") {\n-                opts[correspondances[args[i - 1]]] = args[i];\n+                opts[\"jobs\"] = parseInt(arg_value);\n+            } else if (arg !== \"--file\") {\n+                opts[correspondances[arg]] = arg_value;\n             } else {\n-                opts[\"files\"].push(args[i]);\n+                opts[\"files\"].push(arg_value);\n             }\n-        } else if (args[i] === \"--help\") {\n+        } else if (arg === \"--help\") {\n             showHelp();\n             process.exit(0);\n-        } else if (args[i] === \"--no-sandbox\") {\n+        } else if (arg === \"--no-sandbox\") {\n             console.log(\"`--no-sandbox` is being used. Be very careful!\");\n-            opts[correspondances[args[i]]] = true;\n-        } else if (correspondances[args[i]]) {\n-            opts[correspondances[args[i]]] = true;\n+            opts[correspondances[arg]] = true;\n+        } else if (correspondances[arg]) {\n+            opts[correspondances[arg]] = true;\n         } else {\n-            console.log(\"Unknown option `\" + args[i] + \"`.\");\n+            console.log(\"Unknown option `\" + arg + \"`.\");\n             console.log(\"Use `--help` to see the list of options\");\n             return null;\n         }\n@@ -186,7 +188,7 @@ function createEmptyResults() {\n }\n \n async function main(argv) {\n-    let opts = parseOptions(argv.slice(2));\n+    const opts = parseOptions(argv.slice(2));\n     if (opts === null) {\n         process.exit(1);\n     }"}]}