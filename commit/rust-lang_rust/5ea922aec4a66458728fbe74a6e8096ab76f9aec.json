{"sha": "5ea922aec4a66458728fbe74a6e8096ab76f9aec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlYTkyMmFlYzRhNjY0NTg3MjhmYmU3NGE2ZTgwOTZhYjc2ZjlhZWM=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-11-25T20:37:07Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-11-25T21:30:52Z"}, "message": "Various cleanups", "tree": {"sha": "81ec7f3d29741df98ba0a1f66179e9e694a25f65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81ec7f3d29741df98ba0a1f66179e9e694a25f65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ea922aec4a66458728fbe74a6e8096ab76f9aec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ea922aec4a66458728fbe74a6e8096ab76f9aec", "html_url": "https://github.com/rust-lang/rust/commit/5ea922aec4a66458728fbe74a6e8096ab76f9aec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ea922aec4a66458728fbe74a6e8096ab76f9aec/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85fb054fefd1787260c72ee281ed7d436bc524f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/85fb054fefd1787260c72ee281ed7d436bc524f7", "html_url": "https://github.com/rust-lang/rust/commit/85fb054fefd1787260c72ee281ed7d436bc524f7"}], "stats": {"total": 43, "additions": 22, "deletions": 21}, "files": [{"sha": "b78d3475a413ce1c2f913f496bae0d8cefc74296", "filename": "src/librustc_mir/borrow_check/conflict_errors.rs", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5ea922aec4a66458728fbe74a6e8096ab76f9aec/src%2Flibrustc_mir%2Fborrow_check%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ea922aec4a66458728fbe74a6e8096ab76f9aec/src%2Flibrustc_mir%2Fborrow_check%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fconflict_errors.rs?ref=5ea922aec4a66458728fbe74a6e8096ab76f9aec", "patch": "@@ -1256,23 +1256,17 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n             Applicability::MachineApplicable,\n         );\n \n-        match category {\n-            ConstraintCategory::Return => {\n-                err.span_note(constraint_span, \"closure is returned here\");\n-            }\n-            ConstraintCategory::OpaqueType => {\n-                err.span_note(constraint_span, \"generator is returned here\");\n-            }\n+        let msg = match category {\n+            ConstraintCategory::Return => \"closure is returned here\".to_string(),\n+            ConstraintCategory::OpaqueType => \"generator is returned here\".to_string(),\n             ConstraintCategory::CallArgument => {\n                 fr_name.highlight_region_name(&mut err);\n-                err.span_note(\n-                    constraint_span,\n-                    &format!(\"function requires argument type to outlive `{}`\", fr_name),\n-                );\n+                format!(\"function requires argument type to outlive `{}`\", fr_name)\n             }\n             _ => bug!(\"report_escaping_closure_capture called with unexpected constraint \\\n                        category: `{:?}`\", category),\n-        }\n+        };\n+        err.span_note(constraint_span, &msg);\n         err\n     }\n "}, {"sha": "199125125c64ef1b5a813a3ca95a4589cfe2c2ed", "filename": "src/librustc_parse/parser/item.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5ea922aec4a66458728fbe74a6e8096ab76f9aec/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ea922aec4a66458728fbe74a6e8096ab76f9aec/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fitem.rs?ref=5ea922aec4a66458728fbe74a6e8096ab76f9aec", "patch": "@@ -490,9 +490,12 @@ impl<'a> Parser<'a> {\n     }\n \n     /// Parses a macro invocation inside a `trait`, `impl` or `extern` block.\n-    fn parse_assoc_macro_invoc(&mut self, item_kind: &str, vis: Option<&Visibility>,\n-                               at_end: &mut bool) -> PResult<'a, Option<Mac>>\n-    {\n+    fn parse_assoc_macro_invoc(\n+        &mut self,\n+        item_kind: &str,\n+        vis: Option<&Visibility>,\n+        at_end: &mut bool,\n+    ) -> PResult<'a, Option<Mac>> {\n         if self.token.is_path_start() &&\n                 !(self.is_async_fn() && self.token.span.rust_2015()) {\n             let prev_span = self.prev_span;\n@@ -531,9 +534,11 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n-    fn missing_assoc_item_kind_err(&self, item_type: &str, prev_span: Span)\n-                                   -> DiagnosticBuilder<'a>\n-    {\n+    fn missing_assoc_item_kind_err(\n+        &self,\n+        item_type: &str,\n+        prev_span: Span,\n+    ) -> DiagnosticBuilder<'a> {\n         let expected_kinds = if item_type == \"extern\" {\n             \"missing `fn`, `type`, or `static`\"\n         } else {"}, {"sha": "3ad53737f49693f6888027c296cd8c0cfbe77fb5", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5ea922aec4a66458728fbe74a6e8096ab76f9aec/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ea922aec4a66458728fbe74a6e8096ab76f9aec/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=5ea922aec4a66458728fbe74a6e8096ab76f9aec", "patch": "@@ -1160,8 +1160,10 @@ impl<'a, 'b> ImportResolver<'a, 'b> {\n                     .emit();\n             } else {\n                 let msg = format!(\"`{}` is private, and cannot be re-exported\", ident);\n-                let note_msg =\n-                    format!(\"consider marking `{}` as `pub` in the imported module\", ident);\n+                let note_msg = format!(\n+                    \"consider marking `{}` as `pub` in the imported module\",\n+                    ident,\n+                );\n                 struct_span_err!(self.r.session, directive.span, E0364, \"{}\", &msg)\n                     .span_note(directive.span, &note_msg)\n                     .emit();"}, {"sha": "604400c3cc2ff5562384c61bbfc84e5ea671d413", "filename": "src/libsyntax_ext/proc_macro_harness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ea922aec4a66458728fbe74a6e8096ab76f9aec/src%2Flibsyntax_ext%2Fproc_macro_harness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ea922aec4a66458728fbe74a6e8096ab76f9aec/src%2Flibsyntax_ext%2Fproc_macro_harness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fproc_macro_harness.rs?ref=5ea922aec4a66458728fbe74a6e8096ab76f9aec", "patch": "@@ -270,7 +270,7 @@ impl<'a> Visitor<'a> for CollectProcMacros<'a> {\n                     };\n \n                     self.handler.struct_span_err(attr.span, &msg)\n-                        .span_note(prev_attr.span, \"previous attribute here\")\n+                        .span_label(prev_attr.span, \"previous attribute here\")\n                         .emit();\n \n                     return;"}]}