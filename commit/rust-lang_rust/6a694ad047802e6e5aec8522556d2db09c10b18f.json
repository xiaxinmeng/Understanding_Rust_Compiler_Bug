{"sha": "6a694ad047802e6e5aec8522556d2db09c10b18f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhNjk0YWQwNDc4MDJlNmU1YWVjODUyMjU1NmQyZGIwOWMxMGIxOGY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-02T14:06:00Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-02T14:06:00Z"}, "message": "Minor", "tree": {"sha": "f6b9c3e936393bbab39fb5cb6766fa09f7928236", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6b9c3e936393bbab39fb5cb6766fa09f7928236"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a694ad047802e6e5aec8522556d2db09c10b18f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a694ad047802e6e5aec8522556d2db09c10b18f", "html_url": "https://github.com/rust-lang/rust/commit/6a694ad047802e6e5aec8522556d2db09c10b18f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a694ad047802e6e5aec8522556d2db09c10b18f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57ed622ec4f0f71a618f99a46aa0026e81eb2583", "url": "https://api.github.com/repos/rust-lang/rust/commits/57ed622ec4f0f71a618f99a46aa0026e81eb2583", "html_url": "https://github.com/rust-lang/rust/commit/57ed622ec4f0f71a618f99a46aa0026e81eb2583"}], "stats": {"total": 31, "additions": 9, "deletions": 22}, "files": [{"sha": "361fc8eea6aef2c65f7492e4e1089820d1e57f80", "filename": "crates/ra_project_model/src/cargo_workspace.rs", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6a694ad047802e6e5aec8522556d2db09c10b18f/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a694ad047802e6e5aec8522556d2db09c10b18f/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs?ref=6a694ad047802e6e5aec8522556d2db09c10b18f", "patch": "@@ -45,7 +45,7 @@ impl ops::Index<Target> for CargoWorkspace {\n     }\n }\n \n-#[derive(Clone, Debug, PartialEq, Eq)]\n+#[derive(Default, Clone, Debug, PartialEq, Eq)]\n pub struct CargoConfig {\n     /// Do not activate the `default` feature.\n     pub no_default_features: bool,\n@@ -64,18 +64,6 @@ pub struct CargoConfig {\n     pub target: Option<String>,\n }\n \n-impl Default for CargoConfig {\n-    fn default() -> Self {\n-        CargoConfig {\n-            no_default_features: false,\n-            all_features: false,\n-            features: Vec::new(),\n-            load_out_dirs_from_check: false,\n-            target: None,\n-        }\n-    }\n-}\n-\n pub type Package = Idx<PackageData>;\n \n pub type Target = Idx<TargetData>;"}, {"sha": "07c08deae665e8d9b4e9095f672143f6b393cb2f", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6a694ad047802e6e5aec8522556d2db09c10b18f/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a694ad047802e6e5aec8522556d2db09c10b18f/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=6a694ad047802e6e5aec8522556d2db09c10b18f", "patch": "@@ -27,16 +27,15 @@ impl GlobalState {\n     }\n     pub(crate) fn reload(&mut self) {\n         log::info!(\"reloading projects: {:?}\", self.config.linked_projects);\n-        let workspaces = {\n-            if self.config.linked_projects.is_empty()\n-                && self.config.notifications.cargo_toml_not_found\n-            {\n-                self.show_message(\n-                    lsp_types::MessageType::Error,\n-                    \"rust-analyzer failed to discover workspace\".to_string(),\n-                );\n-            };\n+        if self.config.linked_projects.is_empty() && self.config.notifications.cargo_toml_not_found\n+        {\n+            self.show_message(\n+                lsp_types::MessageType::Error,\n+                \"rust-analyzer failed to discover workspace\".to_string(),\n+            );\n+        };\n \n+        let workspaces = {\n             self.config\n                 .linked_projects\n                 .iter()"}]}