{"sha": "63fb7c6f4049ba33cb2fcd5d5d117a3e484bd181", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzZmI3YzZmNDA0OWJhMzNjYjJmY2Q1ZDVkMTE3YTNlNDg0YmQxODE=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2014-07-04T17:57:28Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2014-07-04T20:20:14Z"}, "message": "comments only", "tree": {"sha": "a45d8ff87ea70a1bff08a3c134977aad0c7da63b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a45d8ff87ea70a1bff08a3c134977aad0c7da63b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63fb7c6f4049ba33cb2fcd5d5d117a3e484bd181", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63fb7c6f4049ba33cb2fcd5d5d117a3e484bd181", "html_url": "https://github.com/rust-lang/rust/commit/63fb7c6f4049ba33cb2fcd5d5d117a3e484bd181", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63fb7c6f4049ba33cb2fcd5d5d117a3e484bd181/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e99309bfc318c13e4ac82cf086b26d694f9c53c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e99309bfc318c13e4ac82cf086b26d694f9c53c", "html_url": "https://github.com/rust-lang/rust/commit/3e99309bfc318c13e4ac82cf086b26d694f9c53c"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "534cddd6848d7da4ae2599e8aa8ab407fcbc7346", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/63fb7c6f4049ba33cb2fcd5d5d117a3e484bd181/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63fb7c6f4049ba33cb2fcd5d5d117a3e484bd181/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=63fb7c6f4049ba33cb2fcd5d5d117a3e484bd181", "patch": "@@ -1377,10 +1377,9 @@ mod test {\n     // but *shouldn't* bind because it was inserted by a different macro....\n     // can't write this test case until we have macro-generating macros.\n \n-    // lambda var hygiene\n+    // item fn hygiene\n     // expands to fn q(x_1:int){fn g(x_2:int){x_2 + x_1};}\n-    #[test]\n-    fn issue_9383(){\n+    #[test] fn issue_9383(){\n         run_renaming_test(\n             &(\"macro_rules! bad_macro (($ex:expr) => (fn g(x:int){ x + $ex }))\n               fn q(x:int) { bad_macro!(x); }\","}]}