{"sha": "c67a34b9e509b76ff145526f28a20f9495c2ab61", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2N2EzNGI5ZTUwOWI3NmZmMTQ1NTI2ZjI4YTIwZjk0OTVjMmFiNjE=", "commit": {"author": {"name": "Garming Sam", "email": "garming_sam@outlook.com", "date": "2015-08-06T06:43:02Z"}, "committer": {"name": "Garming Sam", "email": "garming_sam@outlook.com", "date": "2015-08-09T09:15:47Z"}, "message": "Binary ops should add parenthesis to each side\n\nOtherwise, we get (1 + 2) * 3 looking like 1 + 2 * 3", "tree": {"sha": "4cae786f2b12cb769d7b12ccbd97756b5e2ea5c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4cae786f2b12cb769d7b12ccbd97756b5e2ea5c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c67a34b9e509b76ff145526f28a20f9495c2ab61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c67a34b9e509b76ff145526f28a20f9495c2ab61", "html_url": "https://github.com/rust-lang/rust/commit/c67a34b9e509b76ff145526f28a20f9495c2ab61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c67a34b9e509b76ff145526f28a20f9495c2ab61/comments", "author": {"login": "GSam", "id": 1924133, "node_id": "MDQ6VXNlcjE5MjQxMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1924133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GSam", "html_url": "https://github.com/GSam", "followers_url": "https://api.github.com/users/GSam/followers", "following_url": "https://api.github.com/users/GSam/following{/other_user}", "gists_url": "https://api.github.com/users/GSam/gists{/gist_id}", "starred_url": "https://api.github.com/users/GSam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GSam/subscriptions", "organizations_url": "https://api.github.com/users/GSam/orgs", "repos_url": "https://api.github.com/users/GSam/repos", "events_url": "https://api.github.com/users/GSam/events{/privacy}", "received_events_url": "https://api.github.com/users/GSam/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GSam", "id": 1924133, "node_id": "MDQ6VXNlcjE5MjQxMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1924133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GSam", "html_url": "https://github.com/GSam", "followers_url": "https://api.github.com/users/GSam/followers", "following_url": "https://api.github.com/users/GSam/following{/other_user}", "gists_url": "https://api.github.com/users/GSam/gists{/gist_id}", "starred_url": "https://api.github.com/users/GSam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GSam/subscriptions", "organizations_url": "https://api.github.com/users/GSam/orgs", "repos_url": "https://api.github.com/users/GSam/repos", "events_url": "https://api.github.com/users/GSam/events{/privacy}", "received_events_url": "https://api.github.com/users/GSam/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5d33d8911d3ea691cb152bc582ee443ae3619da", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5d33d8911d3ea691cb152bc582ee443ae3619da", "html_url": "https://github.com/rust-lang/rust/commit/a5d33d8911d3ea691cb152bc582ee443ae3619da"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "147314739f8db5e763d881596b3e2fb15e2d9aed", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c67a34b9e509b76ff145526f28a20f9495c2ab61/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c67a34b9e509b76ff145526f28a20f9495c2ab61/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=c67a34b9e509b76ff145526f28a20f9495c2ab61", "patch": "@@ -1670,10 +1670,10 @@ impl<'a> State<'a> {\n                          op: ast::BinOp,\n                          lhs: &ast::Expr,\n                          rhs: &ast::Expr) -> io::Result<()> {\n-        try!(self.print_expr(lhs));\n+        try!(self.print_expr_maybe_paren(lhs));\n         try!(space(&mut self.s));\n         try!(self.word_space(ast_util::binop_to_string(op.node)));\n-        self.print_expr(rhs)\n+        self.print_expr_maybe_paren(rhs)\n     }\n \n     fn print_expr_unary(&mut self,"}]}