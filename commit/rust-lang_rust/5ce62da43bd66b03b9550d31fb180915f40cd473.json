{"sha": "5ce62da43bd66b03b9550d31fb180915f40cd473", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjZTYyZGE0M2JkNjZiMDNiOTU1MGQzMWZiMTgwOTE1ZjQwY2Q0NzM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-12-17T02:44:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-17T02:44:10Z"}, "message": "Rollup merge of #80082 - ehuss:revert-rust-src-vendor, r=Mark-Simulacrum\n\nRevert #78790 - rust-src vendoring\n\nThis reverts the rust-src vendor changes from #78790. There were a few issues (see #79218, https://github.com/rust-lang/cargo/issues/8962, https://github.com/rust-lang/cargo/issues/8963), that I don't think will get fixed in the next few days before the beta branch.\n\nFixes #79218", "tree": {"sha": "728ad9daa4f11bf71a2e248553a228eea9bc03f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/728ad9daa4f11bf71a2e248553a228eea9bc03f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ce62da43bd66b03b9550d31fb180915f40cd473", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf2sX6CRBK7hj4Ov3rIwAAdHIIAEt3MA3DLXEIvTtJ+k2WbQ/J\nP/EHptYF1q3ibMNViy4lFoSxlq/UVOUSLHwbbfIphWMbRKrBxpsC56CTWZ7Kdz4i\noS28K7C4y2LEhC9rPxqHOlDVgXMwlUmW8afhhnxIyF9cT9NH/mLnIUJzBBaNKZj9\nvhFtaqQghPtXJQXm5grQiLae+d3oA/NXfisvys5GLoDwGrbToC3NddSmlmQOd6d4\numFok3XKi7MWcl0RUtfY3GXawU/GRWaRiL1OdDAiGh7Z0+w8JdCpx5dr90CYRJjA\nxQWKZsoiynDdkM9NwJvGSqyskEpDzFOZNdS8yc/I16bEFX95GRVlv4IeelqDdXg=\n=LU6f\n-----END PGP SIGNATURE-----\n", "payload": "tree 728ad9daa4f11bf71a2e248553a228eea9bc03f7\nparent 0b1e71899e611e495042db29bfd69e79718105a6\nparent 68932060868cda5b14f8e382d28df09905572176\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1608173050 +0900\ncommitter GitHub <noreply@github.com> 1608173050 +0900\n\nRollup merge of #80082 - ehuss:revert-rust-src-vendor, r=Mark-Simulacrum\n\nRevert #78790 - rust-src vendoring\n\nThis reverts the rust-src vendor changes from #78790. There were a few issues (see #79218, https://github.com/rust-lang/cargo/issues/8962, https://github.com/rust-lang/cargo/issues/8963), that I don't think will get fixed in the next few days before the beta branch.\n\nFixes #79218\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ce62da43bd66b03b9550d31fb180915f40cd473", "html_url": "https://github.com/rust-lang/rust/commit/5ce62da43bd66b03b9550d31fb180915f40cd473", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ce62da43bd66b03b9550d31fb180915f40cd473/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b1e71899e611e495042db29bfd69e79718105a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b1e71899e611e495042db29bfd69e79718105a6", "html_url": "https://github.com/rust-lang/rust/commit/0b1e71899e611e495042db29bfd69e79718105a6"}, {"sha": "68932060868cda5b14f8e382d28df09905572176", "url": "https://api.github.com/repos/rust-lang/rust/commits/68932060868cda5b14f8e382d28df09905572176", "html_url": "https://github.com/rust-lang/rust/commit/68932060868cda5b14f8e382d28df09905572176"}], "stats": {"total": 47, "additions": 2, "deletions": 45}, "files": [{"sha": "8ccb9dbdf01668d6a10f530bc6de1e657dcb3a61", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 2, "deletions": 24, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/5ce62da43bd66b03b9550d31fb180915f40cd473/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ce62da43bd66b03b9550d31fb180915f40cd473/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=5ce62da43bd66b03b9550d31fb180915f40cd473", "patch": "@@ -1043,30 +1043,6 @@ impl Step for Src {\n             builder.copy(&builder.src.join(file), &dst_src.join(file));\n         }\n \n-        // libtest includes std and everything else, so vendoring it\n-        // creates exactly what's needed for `cargo -Zbuild-std` or any\n-        // other analysis of the stdlib's source. Cargo also needs help\n-        // finding the lock, so we copy it to libtest temporarily.\n-        //\n-        // Note that this requires std to only have one version of each\n-        // crate. e.g. two versions of getopts won't be patchable.\n-        let dst_libtest = dst_src.join(\"library/test\");\n-        let dst_vendor = dst_src.join(\"vendor\");\n-        let root_lock = dst_src.join(\"Cargo.lock\");\n-        let temp_lock = dst_libtest.join(\"Cargo.lock\");\n-\n-        // `cargo vendor` will delete everything from the lockfile that\n-        // isn't used by libtest, so we need to not use any links!\n-        builder.really_copy(&root_lock, &temp_lock);\n-\n-        let mut cmd = Command::new(&builder.initial_cargo);\n-        cmd.arg(\"vendor\").arg(dst_vendor).current_dir(&dst_libtest);\n-        builder.info(\"Dist src\");\n-        let _time = timeit(builder);\n-        builder.run(&mut cmd);\n-\n-        builder.remove(&temp_lock);\n-\n         // Create source tarball in rust-installer format\n         let mut cmd = rust_installer(builder);\n         cmd.arg(\"generate\")\n@@ -1083,6 +1059,8 @@ impl Step for Src {\n             .arg(\"--component-name=rust-src\")\n             .arg(\"--legacy-manifest-dirs=rustlib,cargo\");\n \n+        builder.info(\"Dist src\");\n+        let _time = timeit(builder);\n         builder.run(&mut cmd);\n \n         builder.remove_dir(&image);"}, {"sha": "ece9bdc7a6499f43d4ff3ab88931744e79c312e8", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5ce62da43bd66b03b9550d31fb180915f40cd473/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ce62da43bd66b03b9550d31fb180915f40cd473/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=5ce62da43bd66b03b9550d31fb180915f40cd473", "patch": "@@ -1182,27 +1182,6 @@ impl Build {\n         paths\n     }\n \n-    /// Copies a file from `src` to `dst` and doesn't use links, so\n-    /// that the copy can be modified without affecting the original.\n-    pub fn really_copy(&self, src: &Path, dst: &Path) {\n-        if self.config.dry_run {\n-            return;\n-        }\n-        self.verbose_than(1, &format!(\"Copy {:?} to {:?}\", src, dst));\n-        if src == dst {\n-            return;\n-        }\n-        let _ = fs::remove_file(&dst);\n-        let metadata = t!(src.symlink_metadata());\n-        if let Err(e) = fs::copy(src, dst) {\n-            panic!(\"failed to copy `{}` to `{}`: {}\", src.display(), dst.display(), e)\n-        }\n-        t!(fs::set_permissions(dst, metadata.permissions()));\n-        let atime = FileTime::from_last_access_time(&metadata);\n-        let mtime = FileTime::from_last_modification_time(&metadata);\n-        t!(filetime::set_file_times(dst, atime, mtime));\n-    }\n-\n     /// Copies a file from `src` to `dst`\n     pub fn copy(&self, src: &Path, dst: &Path) {\n         if self.config.dry_run {"}]}