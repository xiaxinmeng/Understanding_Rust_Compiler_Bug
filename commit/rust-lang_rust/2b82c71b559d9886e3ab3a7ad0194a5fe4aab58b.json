{"sha": "2b82c71b559d9886e3ab3a7ad0194a5fe4aab58b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiODJjNzFiNTU5ZDk4ODZlM2FiM2E3YWQwMTk0YTVmZTRhYWI1OGI=", "commit": {"author": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2019-03-27T23:51:57Z"}, "committer": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2019-03-27T23:51:57Z"}, "message": "use `span_lint_and_sugg` in `explicit_counter_loop`", "tree": {"sha": "a80c556ba7596d427ec2e097a7aa21e3e57d9e85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a80c556ba7596d427ec2e097a7aa21e3e57d9e85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b82c71b559d9886e3ab3a7ad0194a5fe4aab58b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b82c71b559d9886e3ab3a7ad0194a5fe4aab58b", "html_url": "https://github.com/rust-lang/rust/commit/2b82c71b559d9886e3ab3a7ad0194a5fe4aab58b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b82c71b559d9886e3ab3a7ad0194a5fe4aab58b/comments", "author": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9698e41994fad31474a20e2dc5f8664364404e1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9698e41994fad31474a20e2dc5f8664364404e1b", "html_url": "https://github.com/rust-lang/rust/commit/9698e41994fad31474a20e2dc5f8664364404e1b"}], "stats": {"total": 44, "additions": 27, "deletions": 17}, "files": [{"sha": "c2b44ee7018b7906b301dfbc30ee3aa38e65cbfe", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2b82c71b559d9886e3ab3a7ad0194a5fe4aab58b/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b82c71b559d9886e3ab3a7ad0194a5fe4aab58b/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=2b82c71b559d9886e3ab3a7ad0194a5fe4aab58b", "patch": "@@ -1490,21 +1490,31 @@ fn check_for_loop_explicit_counter<'a, 'tcx>(\n \n                 if visitor2.state == VarState::Warn {\n                     if let Some(name) = visitor2.name {\n-                        span_lint(\n+                        let mut applicability = Applicability::MachineApplicable;\n+                        span_lint_and_sugg(\n                             cx,\n                             EXPLICIT_COUNTER_LOOP,\n                             expr.span,\n-                            &format!(\n-                                \"the variable `{0}` is used as a loop counter. Consider using `for ({0}, \\\n-                                 {1}) in {2}.enumerate()` or similar iterators\",\n+                            &format!(\"the variable `{}` is used as a loop counter.\", name),\n+                            \"consider using\",\n+                            format!(\n+                                \"for ({}, {}) in {}.enumerate()\",\n                                 name,\n-                                snippet(cx, pat.span, \"_\"),\n+                                snippet_with_applicability(cx, pat.span, \"item\", &mut applicability),\n                                 if higher::range(cx, arg).is_some() {\n-                                    format!(\"({})\", snippet(cx, arg.span, \"_\"))\n+                                    format!(\n+                                        \"({})\",\n+                                        snippet_with_applicability(cx, arg.span, \"_\", &mut applicability)\n+                                    )\n                                 } else {\n-                                    format!(\"{}\", sugg::Sugg::hir(cx, arg, \"_\").maybe_par())\n+                                    format!(\n+                                        \"{}\",\n+                                        sugg::Sugg::hir_with_applicability(cx, arg, \"_\", &mut applicability)\n+                                            .maybe_par()\n+                                    )\n                                 }\n                             ),\n+                            applicability,\n                         );\n                     }\n                 }"}, {"sha": "5efd51abf1811ccfcfad5a6f21c1d02976c31597", "filename": "tests/ui/explicit_counter_loop.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2b82c71b559d9886e3ab3a7ad0194a5fe4aab58b/tests%2Fui%2Fexplicit_counter_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2b82c71b559d9886e3ab3a7ad0194a5fe4aab58b/tests%2Fui%2Fexplicit_counter_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_counter_loop.stderr?ref=2b82c71b559d9886e3ab3a7ad0194a5fe4aab58b", "patch": "@@ -1,34 +1,34 @@\n-error: the variable `_index` is used as a loop counter. Consider using `for (_index, _v) in (&vec).enumerate()` or similar iterators\n+error: the variable `_index` is used as a loop counter.\n   --> $DIR/explicit_counter_loop.rs:6:15\n    |\n LL |     for _v in &vec {\n-   |               ^^^^\n+   |               ^^^^ help: consider using: `for (_index, _v) in (&vec).enumerate()`\n    |\n    = note: `-D clippy::explicit-counter-loop` implied by `-D warnings`\n \n-error: the variable `_index` is used as a loop counter. Consider using `for (_index, _v) in (&vec).enumerate()` or similar iterators\n+error: the variable `_index` is used as a loop counter.\n   --> $DIR/explicit_counter_loop.rs:12:15\n    |\n LL |     for _v in &vec {\n-   |               ^^^^\n+   |               ^^^^ help: consider using: `for (_index, _v) in (&vec).enumerate()`\n \n-error: the variable `count` is used as a loop counter. Consider using `for (count, ch) in text.chars().enumerate()` or similar iterators\n+error: the variable `count` is used as a loop counter.\n   --> $DIR/explicit_counter_loop.rs:51:19\n    |\n LL |         for ch in text.chars() {\n-   |                   ^^^^^^^^^^^^\n+   |                   ^^^^^^^^^^^^ help: consider using: `for (count, ch) in text.chars().enumerate()`\n \n-error: the variable `count` is used as a loop counter. Consider using `for (count, ch) in text.chars().enumerate()` or similar iterators\n+error: the variable `count` is used as a loop counter.\n   --> $DIR/explicit_counter_loop.rs:62:19\n    |\n LL |         for ch in text.chars() {\n-   |                   ^^^^^^^^^^^^\n+   |                   ^^^^^^^^^^^^ help: consider using: `for (count, ch) in text.chars().enumerate()`\n \n-error: the variable `count` is used as a loop counter. Consider using `for (count, _i) in (3..10).enumerate()` or similar iterators\n+error: the variable `count` is used as a loop counter.\n   --> $DIR/explicit_counter_loop.rs:120:19\n    |\n LL |         for _i in 3..10 {\n-   |                   ^^^^^\n+   |                   ^^^^^ help: consider using: `for (count, _i) in (3..10).enumerate()`\n \n error: aborting due to 5 previous errors\n "}]}