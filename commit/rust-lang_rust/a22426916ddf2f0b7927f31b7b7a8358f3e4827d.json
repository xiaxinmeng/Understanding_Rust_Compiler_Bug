{"sha": "a22426916ddf2f0b7927f31b7b7a8358f3e4827d", "node_id": "C_kwDOAAsO6NoAKGEyMjQyNjkxNmRkZjJmMGI3OTI3ZjMxYjdiN2E4MzU4ZjNlNDgyN2Q", "commit": {"author": {"name": "Ibraheem Ahmed", "email": "ibraheem@ibraheem.ca", "date": "2022-11-13T04:13:58Z"}, "committer": {"name": "Ibraheem Ahmed", "email": "ibraheem@ibraheem.ca", "date": "2022-11-13T04:13:58Z"}, "message": "avoid calling `thread::current` in channel destructor", "tree": {"sha": "95af1ec5d80fca3b1ee3f41e5cd0dec6ee1f7db1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95af1ec5d80fca3b1ee3f41e5cd0dec6ee1f7db1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a22426916ddf2f0b7927f31b7b7a8358f3e4827d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a22426916ddf2f0b7927f31b7b7a8358f3e4827d", "html_url": "https://github.com/rust-lang/rust/commit/a22426916ddf2f0b7927f31b7b7a8358f3e4827d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a22426916ddf2f0b7927f31b7b7a8358f3e4827d/comments", "author": {"login": "ibraheemdev", "id": 34988408, "node_id": "MDQ6VXNlcjM0OTg4NDA4", "avatar_url": "https://avatars.githubusercontent.com/u/34988408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibraheemdev", "html_url": "https://github.com/ibraheemdev", "followers_url": "https://api.github.com/users/ibraheemdev/followers", "following_url": "https://api.github.com/users/ibraheemdev/following{/other_user}", "gists_url": "https://api.github.com/users/ibraheemdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibraheemdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibraheemdev/subscriptions", "organizations_url": "https://api.github.com/users/ibraheemdev/orgs", "repos_url": "https://api.github.com/users/ibraheemdev/repos", "events_url": "https://api.github.com/users/ibraheemdev/events{/privacy}", "received_events_url": "https://api.github.com/users/ibraheemdev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibraheemdev", "id": 34988408, "node_id": "MDQ6VXNlcjM0OTg4NDA4", "avatar_url": "https://avatars.githubusercontent.com/u/34988408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibraheemdev", "html_url": "https://github.com/ibraheemdev", "followers_url": "https://api.github.com/users/ibraheemdev/followers", "following_url": "https://api.github.com/users/ibraheemdev/following{/other_user}", "gists_url": "https://api.github.com/users/ibraheemdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibraheemdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibraheemdev/subscriptions", "organizations_url": "https://api.github.com/users/ibraheemdev/orgs", "repos_url": "https://api.github.com/users/ibraheemdev/repos", "events_url": "https://api.github.com/users/ibraheemdev/events{/privacy}", "received_events_url": "https://api.github.com/users/ibraheemdev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd30f2751e079dd7e78d4e8e9d82c03b80a387c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd30f2751e079dd7e78d4e8e9d82c03b80a387c2", "html_url": "https://github.com/rust-lang/rust/commit/cd30f2751e079dd7e78d4e8e9d82c03b80a387c2"}], "stats": {"total": 24, "additions": 11, "deletions": 13}, "files": [{"sha": "bbfc6ce00ffc2144da81a115f905b4f7c580a087", "filename": "library/std/src/sync/mpmc/context.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a22426916ddf2f0b7927f31b7b7a8358f3e4827d/library%2Fstd%2Fsrc%2Fsync%2Fmpmc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a22426916ddf2f0b7927f31b7b7a8358f3e4827d/library%2Fstd%2Fsrc%2Fsync%2Fmpmc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fmpmc%2Fcontext.rs?ref=a22426916ddf2f0b7927f31b7b7a8358f3e4827d", "patch": "@@ -1,12 +1,13 @@\n //! Thread-local channel context.\n \n use super::select::Selected;\n+use super::waker::current_thread_id;\n \n use crate::cell::Cell;\n use crate::ptr;\n use crate::sync::atomic::{AtomicPtr, AtomicUsize, Ordering};\n use crate::sync::Arc;\n-use crate::thread::{self, Thread, ThreadId};\n+use crate::thread::{self, Thread};\n use crate::time::Instant;\n \n /// Thread-local context.\n@@ -28,7 +29,7 @@ struct Inner {\n     thread: Thread,\n \n     /// Thread id.\n-    thread_id: ThreadId,\n+    thread_id: usize,\n }\n \n impl Context {\n@@ -70,7 +71,7 @@ impl Context {\n                 select: AtomicUsize::new(Selected::Waiting.into()),\n                 packet: AtomicPtr::new(ptr::null_mut()),\n                 thread: thread::current(),\n-                thread_id: thread::current().id(),\n+                thread_id: current_thread_id(),\n             }),\n         }\n     }\n@@ -148,7 +149,7 @@ impl Context {\n \n     /// Returns the id of the thread this context belongs to.\n     #[inline]\n-    pub fn thread_id(&self) -> ThreadId {\n+    pub fn thread_id(&self) -> usize {\n         self.inner.thread_id\n     }\n }"}, {"sha": "4912ca4f8150bc8d3c1a56ecf6d07695015b475f", "filename": "library/std/src/sync/mpmc/waker.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a22426916ddf2f0b7927f31b7b7a8358f3e4827d/library%2Fstd%2Fsrc%2Fsync%2Fmpmc%2Fwaker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a22426916ddf2f0b7927f31b7b7a8358f3e4827d/library%2Fstd%2Fsrc%2Fsync%2Fmpmc%2Fwaker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fmpmc%2Fwaker.rs?ref=a22426916ddf2f0b7927f31b7b7a8358f3e4827d", "patch": "@@ -6,7 +6,6 @@ use super::select::{Operation, Selected};\n use crate::ptr;\n use crate::sync::atomic::{AtomicBool, Ordering};\n use crate::sync::Mutex;\n-use crate::thread::{self, ThreadId};\n \n /// Represents a thread blocked on a specific channel operation.\n pub(crate) struct Entry {\n@@ -195,13 +194,11 @@ impl Drop for SyncWaker {\n     }\n }\n \n-/// Returns the id of the current thread.\n+/// Returns a unique id for the current thread.\n #[inline]\n-fn current_thread_id() -> ThreadId {\n-    thread_local! {\n-        /// Cached thread-local id.\n-        static THREAD_ID: ThreadId = thread::current().id();\n-    }\n-\n-    THREAD_ID.try_with(|id| *id).unwrap_or_else(|_| thread::current().id())\n+pub fn current_thread_id() -> usize {\n+    // `u8` is not drop so this variable will be available during thread destruction,\n+    // whereas `thread::current()` would not be\n+    thread_local! { static DUMMY: u8 = 0 }\n+    DUMMY.with(|x| (x as *const u8).addr())\n }"}]}