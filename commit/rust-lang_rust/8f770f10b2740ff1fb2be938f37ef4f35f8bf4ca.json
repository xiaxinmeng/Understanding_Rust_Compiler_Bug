{"sha": "8f770f10b2740ff1fb2be938f37ef4f35f8bf4ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmNzcwZjEwYjI3NDBmZjFmYjJiZTkzOGYzN2VmNGYzNWY4YmY0Y2E=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-03T18:06:48Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-25T12:04:07Z"}, "message": "Extend Typer interface to include `expr_ty_adjusted` so that we can\nremove another direct dependency on tcx from euv.", "tree": {"sha": "f4524ee5c5735b329d8bb3816447018a01caf8c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4524ee5c5735b329d8bb3816447018a01caf8c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f770f10b2740ff1fb2be938f37ef4f35f8bf4ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f770f10b2740ff1fb2be938f37ef4f35f8bf4ca", "html_url": "https://github.com/rust-lang/rust/commit/8f770f10b2740ff1fb2be938f37ef4f35f8bf4ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f770f10b2740ff1fb2be938f37ef4f35f8bf4ca/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3ff084d0166b72d9ad9cf11ad1ec21d5d4b2158", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3ff084d0166b72d9ad9cf11ad1ec21d5d4b2158", "html_url": "https://github.com/rust-lang/rust/commit/f3ff084d0166b72d9ad9cf11ad1ec21d5d4b2158"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "6ec9171057b2aab3bb1577c9f9b36020dc6fe8d1", "filename": "src/librustc/middle/expr_use_visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f770f10b2740ff1fb2be938f37ef4f35f8bf4ca/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f770f10b2740ff1fb2be938f37ef4f35f8bf4ca/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs?ref=8f770f10b2740ff1fb2be938f37ef4f35f8bf4ca", "patch": "@@ -647,7 +647,7 @@ impl<'d,'t,'tcx,TYPER:mc::Typer<'tcx>> ExprUseVisitor<'d,'t,'tcx,TYPER> {\n     }\n \n     fn walk_callee(&mut self, call: &ast::Expr, callee: &ast::Expr) {\n-        let callee_ty = ty::expr_ty_adjusted(self.tcx(), callee);\n+        let callee_ty = return_if_err!(self.typer.expr_ty_adjusted(callee));\n         debug!(\"walk_callee: callee={} callee_ty={}\",\n                callee.repr(self.tcx()), callee_ty.repr(self.tcx()));\n         let call_scope = region::CodeExtent::from_node_id(call.id);"}, {"sha": "7dadd832ca2c88aa5c03cb7bf416002e08eeed27", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8f770f10b2740ff1fb2be938f37ef4f35f8bf4ca/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f770f10b2740ff1fb2be938f37ef4f35f8bf4ca/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=8f770f10b2740ff1fb2be938f37ef4f35f8bf4ca", "patch": "@@ -285,6 +285,7 @@ pub type McResult<T> = Result<T, ()>;\n pub trait Typer<'tcx> {\n     fn tcx<'a>(&'a self) -> &'a ty::ctxt<'tcx>;\n     fn node_ty(&self, id: ast::NodeId) -> McResult<Ty<'tcx>>;\n+    fn expr_ty_adjusted(&self, expr: &ast::Expr) -> McResult<Ty<'tcx>>;\n     fn node_method_ty(&self, method_call: ty::MethodCall) -> Option<Ty<'tcx>>;\n     fn adjustments<'a>(&'a self) -> &'a RefCell<NodeMap<ty::AutoAdjustment<'tcx>>>;\n     fn is_method_call(&self, id: ast::NodeId) -> bool;"}, {"sha": "659cf85937ec9b36995e2b2a8b28f6366e622501", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8f770f10b2740ff1fb2be938f37ef4f35f8bf4ca/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f770f10b2740ff1fb2be938f37ef4f35f8bf4ca/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=8f770f10b2740ff1fb2be938f37ef4f35f8bf4ca", "patch": "@@ -6169,7 +6169,11 @@ impl<'tcx> mc::Typer<'tcx> for ty::ctxt<'tcx> {\n         Ok(ty::node_id_to_type(self, id))\n     }\n \n-    fn node_method_ty(&self, method_call: MethodCall) -> Option<Ty<'tcx>> {\n+    fn expr_ty_adjusted(&self, expr: &ast::Expr) -> mc::McResult<Ty<'tcx>> {\n+        Ok(ty::expr_ty_adjusted(self, expr))\n+    }\n+\n+    fn node_method_ty(&self, method_call: ty::MethodCall) -> Option<Ty<'tcx>> {\n         self.method_map.borrow().get(&method_call).map(|method| method.ty)\n     }\n "}, {"sha": "883205765f250b1b075e477c95503a2d337bdcb4", "filename": "src/librustc_trans/trans/common.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8f770f10b2740ff1fb2be938f37ef4f35f8bf4ca/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f770f10b2740ff1fb2be938f37ef4f35f8bf4ca/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs?ref=8f770f10b2740ff1fb2be938f37ef4f35f8bf4ca", "patch": "@@ -467,6 +467,10 @@ impl<'blk, 'tcx> mc::Typer<'tcx> for BlockS<'blk, 'tcx> {\n         Ok(node_id_type(self, id))\n     }\n \n+    fn expr_ty_adjusted(&self, expr: &ast::Expr) -> mc::McResult<Ty<'tcx>> {\n+        Ok(expr_ty_adjusted(self, expr))\n+    }\n+\n     fn node_method_ty(&self, method_call: ty::MethodCall) -> Option<Ty<'tcx>> {\n         self.tcx()\n             .method_map\n@@ -752,11 +756,11 @@ pub fn node_id_type<'blk, 'tcx>(bcx: &BlockS<'blk, 'tcx>, id: ast::NodeId) -> Ty\n     monomorphize_type(bcx, t)\n }\n \n-pub fn expr_ty<'blk, 'tcx>(bcx: Block<'blk, 'tcx>, ex: &ast::Expr) -> Ty<'tcx> {\n+pub fn expr_ty<'blk, 'tcx>(bcx: &BlockS<'blk, 'tcx>, ex: &ast::Expr) -> Ty<'tcx> {\n     node_id_type(bcx, ex.id)\n }\n \n-pub fn expr_ty_adjusted<'blk, 'tcx>(bcx: Block<'blk, 'tcx>, ex: &ast::Expr) -> Ty<'tcx> {\n+pub fn expr_ty_adjusted<'blk, 'tcx>(bcx: &BlockS<'blk, 'tcx>, ex: &ast::Expr) -> Ty<'tcx> {\n     monomorphize_type(bcx, ty::expr_ty_adjusted(bcx.tcx(), ex))\n }\n "}, {"sha": "ca8c901b6fd281f565e4ad836198141fb0abcddf", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8f770f10b2740ff1fb2be938f37ef4f35f8bf4ca/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f770f10b2740ff1fb2be938f37ef4f35f8bf4ca/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=8f770f10b2740ff1fb2be938f37ef4f35f8bf4ca", "patch": "@@ -290,6 +290,9 @@ impl<'a, 'tcx> mem_categorization::Typer<'tcx> for FnCtxt<'a, 'tcx> {\n         let ty = self.node_ty(id);\n         Ok(self.infcx().resolve_type_vars_if_possible(ty))\n     }\n+    fn expr_ty_adjusted(&self, expr: &ast::Expr) -> McResult<Ty<'tcx>> {\n+        let ty = self.expr_ty_adjusted(expr);\n+        Ok(self.infcx().resolve_type_vars_if_possible(ty))\n     }\n     fn node_method_ty(&self, method_call: ty::MethodCall)\n                       -> Option<Ty<'tcx>> {"}]}