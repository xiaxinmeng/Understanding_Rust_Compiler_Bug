{"sha": "57d3a5a32de7a10ed7af886dc6ddd3754c9a394c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3ZDNhNWEzMmRlN2ExMGVkN2FmODg2ZGM2ZGRkMzc1NGM5YTM5NGM=", "commit": {"author": {"name": "Gabriel Smith", "email": "ga29smith@gmail.com", "date": "2019-03-01T04:09:44Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-01T22:10:57Z"}, "message": "impl visit_const for HasEscapingVarsVisitor\n\nSigned-off-by: Gabriel Smith <ga29smith@gmail.com>", "tree": {"sha": "fcdc6d08e68242f2bcf1da7dcf00b1abe6d2a400", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fcdc6d08e68242f2bcf1da7dcf00b1abe6d2a400"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57d3a5a32de7a10ed7af886dc6ddd3754c9a394c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57d3a5a32de7a10ed7af886dc6ddd3754c9a394c", "html_url": "https://github.com/rust-lang/rust/commit/57d3a5a32de7a10ed7af886dc6ddd3754c9a394c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57d3a5a32de7a10ed7af886dc6ddd3754c9a394c/comments", "author": {"login": "yodaldevoid", "id": 1204409, "node_id": "MDQ6VXNlcjEyMDQ0MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1204409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yodaldevoid", "html_url": "https://github.com/yodaldevoid", "followers_url": "https://api.github.com/users/yodaldevoid/followers", "following_url": "https://api.github.com/users/yodaldevoid/following{/other_user}", "gists_url": "https://api.github.com/users/yodaldevoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/yodaldevoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yodaldevoid/subscriptions", "organizations_url": "https://api.github.com/users/yodaldevoid/orgs", "repos_url": "https://api.github.com/users/yodaldevoid/repos", "events_url": "https://api.github.com/users/yodaldevoid/events{/privacy}", "received_events_url": "https://api.github.com/users/yodaldevoid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c13aa09d498eb02c271e89da266c40686524a7dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/c13aa09d498eb02c271e89da266c40686524a7dc", "html_url": "https://github.com/rust-lang/rust/commit/c13aa09d498eb02c271e89da266c40686524a7dc"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "96705124b28239a6e801704423f857f9bf74fe94", "filename": "src/librustc/ty/fold.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/57d3a5a32de7a10ed7af886dc6ddd3754c9a394c/src%2Flibrustc%2Fty%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57d3a5a32de7a10ed7af886dc6ddd3754c9a394c/src%2Flibrustc%2Fty%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ffold.rs?ref=57d3a5a32de7a10ed7af886dc6ddd3754c9a394c", "patch": "@@ -32,6 +32,7 @@\n //! looking for, and does not need to visit anything else.\n \n use crate::hir::def_id::DefId;\n+use crate::mir::interpret::ConstValue;\n use crate::ty::{self, Binder, Ty, TyCtxt, TypeFlags, flags::FlagComputation};\n \n use std::collections::BTreeMap;\n@@ -840,6 +841,17 @@ impl<'tcx> TypeVisitor<'tcx> for HasEscapingVarsVisitor {\n         // visited.\n         r.bound_at_or_above_binder(self.outer_index)\n     }\n+\n+    fn visit_const(&mut self, c: &'tcx ty::LazyConst<'tcx>) -> bool {\n+        if let ty::LazyConst::Evaluated(ty::Const {\n+            val: ConstValue::Infer(ty::InferConst::Canonical(debruijn, _)),\n+            ..\n+        }) = *c {\n+            debruijn >= self.outer_index\n+        } else {\n+            false\n+        }\n+    }\n }\n \n struct HasTypeFlagsVisitor {"}]}