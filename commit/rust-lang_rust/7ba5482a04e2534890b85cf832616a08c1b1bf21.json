{"sha": "7ba5482a04e2534890b85cf832616a08c1b1bf21", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiYTU0ODJhMDRlMjUzNDg5MGI4NWNmODMyNjE2YTA4YzFiMWJmMjE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-16T19:26:46Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-16T19:26:46Z"}, "message": "internal: switch some tests to minicore", "tree": {"sha": "be087b4ce531cddfef3dd35b5b59155876932124", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be087b4ce531cddfef3dd35b5b59155876932124"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ba5482a04e2534890b85cf832616a08c1b1bf21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ba5482a04e2534890b85cf832616a08c1b1bf21", "html_url": "https://github.com/rust-lang/rust/commit/7ba5482a04e2534890b85cf832616a08c1b1bf21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ba5482a04e2534890b85cf832616a08c1b1bf21/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e0d4416873c3308f4824c417a29b83154503e17", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e0d4416873c3308f4824c417a29b83154503e17", "html_url": "https://github.com/rust-lang/rust/commit/7e0d4416873c3308f4824c417a29b83154503e17"}], "stats": {"total": 27, "additions": 12, "deletions": 15}, "files": [{"sha": "4e10fdb854d1c891493b1d1e00a5e31b54898c0c", "filename": "crates/ide_assists/src/handlers/generate_deref.rs", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/7ba5482a04e2534890b85cf832616a08c1b1bf21/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ba5482a04e2534890b85cf832616a08c1b1bf21/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_deref.rs?ref=7ba5482a04e2534890b85cf832616a08c1b1bf21", "patch": "@@ -182,23 +182,17 @@ impl std::ops::Deref for B {\n         );\n     }\n \n-    fn check_not_applicable(ra_fixture: &str) {\n-        let fixture = format!(\n-            \"//- /main.rs crate:main deps:core,std\\n{}\\n{}\",\n-            ra_fixture,\n-            FamousDefs::FIXTURE\n-        );\n-        check_assist_not_applicable(generate_deref, &fixture)\n-    }\n-\n     #[test]\n     fn test_generate_record_deref_not_applicable_if_already_impl() {\n         cov_mark::check!(test_add_record_deref_impl_already_exists);\n-        check_not_applicable(\n-            r#\"struct A { }\n+        check_assist_not_applicable(\n+            generate_deref,\n+            r#\"\n+//- minicore: deref\n+struct A { }\n struct B { $0a: A }\n \n-impl std::ops::Deref for B {\n+impl core::ops::Deref for B {\n     type Target = A;\n \n     fn deref(&self) -> &Self::Target {\n@@ -211,11 +205,14 @@ impl std::ops::Deref for B {\n     #[test]\n     fn test_generate_field_deref_not_applicable_if_already_impl() {\n         cov_mark::check!(test_add_field_deref_impl_already_exists);\n-        check_not_applicable(\n-            r#\"struct A { }\n+        check_assist_not_applicable(\n+            generate_deref,\n+            r#\"\n+//- minicore: deref\n+struct A { }\n struct B($0A)\n \n-impl std::ops::Deref for B {\n+impl core::ops::Deref for B {\n     type Target = A;\n \n     fn deref(&self) -> &Self::Target {"}]}