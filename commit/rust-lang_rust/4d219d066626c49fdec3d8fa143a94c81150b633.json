{"sha": "4d219d066626c49fdec3d8fa143a94c81150b633", "node_id": "C_kwDOAAsO6NoAKDRkMjE5ZDA2NjYyNmM0OWZkZWMzZDhmYTE0M2E5NGM4MTE1MGI2MzM", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-05-09T03:51:04Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-05-09T03:51:04Z"}, "message": "move sugg to derive session diagnostic", "tree": {"sha": "b228eeaabd2eaa1b55aa921b11dbd43b7f277779", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b228eeaabd2eaa1b55aa921b11dbd43b7f277779"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d219d066626c49fdec3d8fa143a94c81150b633", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d219d066626c49fdec3d8fa143a94c81150b633", "html_url": "https://github.com/rust-lang/rust/commit/4d219d066626c49fdec3d8fa143a94c81150b633", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d219d066626c49fdec3d8fa143a94c81150b633/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e94b5faf1f0812207a9128e2754bd146210b16e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e94b5faf1f0812207a9128e2754bd146210b16e", "html_url": "https://github.com/rust-lang/rust/commit/5e94b5faf1f0812207a9128e2754bd146210b16e"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "a01e6f5ba113c9bb698abe69e9551d7a73bd71e3", "filename": "compiler/rustc_parse/messages.ftl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4d219d066626c49fdec3d8fa143a94c81150b633/compiler%2Frustc_parse%2Fmessages.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/4d219d066626c49fdec3d8fa143a94c81150b633/compiler%2Frustc_parse%2Fmessages.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fmessages.ftl?ref=4d219d066626c49fdec3d8fa143a94c81150b633", "patch": "@@ -339,6 +339,7 @@ parse_expected_identifier = expected identifier\n parse_sugg_escape_identifier = escape `{$ident_name}` to use it as an identifier\n \n parse_sugg_remove_comma = remove this comma\n+parse_sugg_add_let_for_stmt = you might have meant to introduce a new binding\n \n parse_expected_semi_found_reserved_identifier_str = expected `;`, found reserved identifier `{$token}`\n parse_expected_semi_found_keyword_str = expected `;`, found keyword `{$token}`"}, {"sha": "4dffdae1dc9bf61f487a929dc6c8b72ad799a541", "filename": "compiler/rustc_parse/src/errors.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4d219d066626c49fdec3d8fa143a94c81150b633/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d219d066626c49fdec3d8fa143a94c81150b633/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs?ref=4d219d066626c49fdec3d8fa143a94c81150b633", "patch": "@@ -906,6 +906,18 @@ pub(crate) struct SuggRemoveComma {\n     pub span: Span,\n }\n \n+#[derive(Subdiagnostic)]\n+#[suggestion(\n+    parse_sugg_add_let_for_stmt,\n+    style = \"verbose\",\n+    applicability = \"maybe-incorrect\",\n+    code = \"let \"\n+)]\n+pub(crate) struct SuggAddMissingLetStmt {\n+    #[primary_span]\n+    pub span: Span,\n+}\n+\n #[derive(Subdiagnostic)]\n pub(crate) enum ExpectedIdentifierFound {\n     #[label(parse_expected_identifier_found_reserved_identifier)]"}, {"sha": "3002f23da75cca74f7938424a2c18afb071c53f0", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4d219d066626c49fdec3d8fa143a94c81150b633/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d219d066626c49fdec3d8fa143a94c81150b633/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=4d219d066626c49fdec3d8fa143a94c81150b633", "patch": "@@ -13,7 +13,7 @@ use crate::errors::{\n     IncorrectUseOfAwait, ParenthesesInForHead, ParenthesesInForHeadSugg,\n     PatternMethodParamWithoutBody, QuestionMarkInType, QuestionMarkInTypeSugg, SelfParamNotFirst,\n     StructLiteralBodyWithoutPath, StructLiteralBodyWithoutPathSugg, StructLiteralNeedingParens,\n-    StructLiteralNeedingParensSugg, SuggEscapeIdentifier, SuggRemoveComma,\n+    StructLiteralNeedingParensSugg, SuggAddMissingLetStmt, SuggEscapeIdentifier, SuggRemoveComma,\n     UnexpectedConstInGenericParam, UnexpectedConstParamDeclaration,\n     UnexpectedConstParamDeclarationSugg, UnmatchedAngleBrackets, UseEqInstead,\n };\n@@ -32,8 +32,8 @@ use rustc_ast::{\n use rustc_ast_pretty::pprust;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{\n-    pluralize, Applicability, Diagnostic, DiagnosticBuilder, DiagnosticMessage, ErrorGuaranteed,\n-    FatalError, Handler, IntoDiagnostic, MultiSpan, PResult,\n+    pluralize, AddToDiagnostic, Applicability, Diagnostic, DiagnosticBuilder, DiagnosticMessage,\n+    ErrorGuaranteed, FatalError, Handler, IntoDiagnostic, MultiSpan, PResult,\n };\n use rustc_session::errors::ExprParenthesesNeeded;\n use rustc_span::source_map::Spanned;\n@@ -1019,12 +1019,8 @@ impl<'a> Parser<'a> {\n             match self.parse_ty() {\n                 Ok(_) => {\n                     if self.token == token::Eq {\n-                        err.span_suggestion_verbose(\n-                            prev_span,\n-                            \"you might have meant to introduce a new binding\",\n-                            \"let \".to_string(),\n-                            Applicability::MaybeIncorrect,\n-                        );\n+                        let sugg = SuggAddMissingLetStmt { span: prev_span };\n+                        sugg.add_to_diagnostic(err);\n                     }\n                 }\n                 Err(e) => {"}]}