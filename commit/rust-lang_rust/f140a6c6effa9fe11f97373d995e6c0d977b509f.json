{"sha": "f140a6c6effa9fe11f97373d995e6c0d977b509f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNDBhNmM2ZWZmYTlmZTExZjk3MzczZDk5NWU2YzBkOTc3YjUwOWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-02-11T04:37:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-02-11T04:37:27Z"}, "message": "Auto merge of #39642 - stjepang:specialize-slice-partialord, r=alexcrichton\n\nSpecialize `PartialOrd<A> for [A] where A: Ord`\n\nThis way we can call `cmp` instead of `partial_cmp` in the loop, removing some burden of optimizing `Option`s away from the compiler.\n\nPR #39538 introduced a regression where sorting slices suddenly became slower, since `slice1.lt(slice2)` was much slower than `slice1.cmp(slice2) == Less`. This problem is now fixed.\n\nTo verify, I benchmarked this simple program:\n```rust\nfn main() {\n    let mut v = (0..2_000_000).map(|x| x * x * x * 18913515181).map(|x| vec![x, x ^ 3137831591]).collect::<Vec<_>>();\n    v.sort();\n}\n```\n\nBefore this PR, it would take 0.95 sec, and now it takes 0.58 sec.\nI also tried changing the `is_less` lambda to use `cmp` and `partial_cmp`. Now all three versions (`lt`, `cmp`, `partial_cmp`) are equally performant for sorting slices - all of them take 0.58 sec on the\nbenchmark.\n\nTangentially, as soon as we get `default impl`, it might be a good idea to implement a blanket default impl for `lt`, `gt`, `le`, `ge` in terms of `cmp` whenever possible. Today, those four functions by default are only implemented in terms of `partial_cmp`.\n\nr? @alexcrichton", "tree": {"sha": "4034fda15457a4b02094cd845786789081dc8b68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4034fda15457a4b02094cd845786789081dc8b68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f140a6c6effa9fe11f97373d995e6c0d977b509f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f140a6c6effa9fe11f97373d995e6c0d977b509f", "html_url": "https://github.com/rust-lang/rust/commit/f140a6c6effa9fe11f97373d995e6c0d977b509f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f140a6c6effa9fe11f97373d995e6c0d977b509f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "064a0ee131b3129fcad68570975ccc85d0fb54d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/064a0ee131b3129fcad68570975ccc85d0fb54d0", "html_url": "https://github.com/rust-lang/rust/commit/064a0ee131b3129fcad68570975ccc85d0fb54d0"}, {"sha": "a344c126d03729a9d147f18dfc9cc6432bc790fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/a344c126d03729a9d147f18dfc9cc6432bc790fd", "html_url": "https://github.com/rust-lang/rust/commit/a344c126d03729a9d147f18dfc9cc6432bc790fd"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "3e0b84255735382e34795423d04f952a741b2d4c", "filename": "src/libcore/slice.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f140a6c6effa9fe11f97373d995e6c0d977b509f/src%2Flibcore%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f140a6c6effa9fe11f97373d995e6c0d977b509f/src%2Flibcore%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice.rs?ref=f140a6c6effa9fe11f97373d995e6c0d977b509f", "patch": "@@ -2290,9 +2290,10 @@ impl<A> SlicePartialOrd<A> for [A]\n     }\n }\n \n-impl SlicePartialOrd<u8> for [u8] {\n-    #[inline]\n-    fn partial_compare(&self, other: &[u8]) -> Option<Ordering> {\n+impl<A> SlicePartialOrd<A> for [A]\n+    where A: Ord\n+{\n+    default fn partial_compare(&self, other: &[A]) -> Option<Ordering> {\n         Some(SliceOrd::compare(self, other))\n     }\n }"}]}