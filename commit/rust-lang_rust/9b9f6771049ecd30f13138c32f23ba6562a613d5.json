{"sha": "9b9f6771049ecd30f13138c32f23ba6562a613d5", "node_id": "C_kwDOAAsO6NoAKDliOWY2NzcxMDQ5ZWNkMzBmMTMxMzhjMzJmMjNiYTY1NjJhNjEzZDU", "commit": {"author": {"name": "Bruno Felipe Francisco", "email": "bruno.francisco@ifood.com.br", "date": "2022-04-13T14:02:01Z"}, "committer": {"name": "Bruno Felipe Francisco", "email": "bruno.francisco@ifood.com.br", "date": "2022-04-13T14:02:01Z"}, "message": "fix: wrong trait import suggestion for T:", "tree": {"sha": "631d3731f933e141e2eeaacd7bbb367ef151a9e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/631d3731f933e141e2eeaacd7bbb367ef151a9e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b9f6771049ecd30f13138c32f23ba6562a613d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b9f6771049ecd30f13138c32f23ba6562a613d5", "html_url": "https://github.com/rust-lang/rust/commit/9b9f6771049ecd30f13138c32f23ba6562a613d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b9f6771049ecd30f13138c32f23ba6562a613d5/comments", "author": null, "committer": null, "parents": [{"sha": "e3c43e64eceb00e13b1932229aa9b2d774e6af96", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3c43e64eceb00e13b1932229aa9b2d774e6af96", "html_url": "https://github.com/rust-lang/rust/commit/e3c43e64eceb00e13b1932229aa9b2d774e6af96"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "e6560ca4d9b90e7827e30827220cb075ade931cc", "filename": "compiler/rustc_typeck/src/check/method/suggest.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9b9f6771049ecd30f13138c32f23ba6562a613d5/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b9f6771049ecd30f13138c32f23ba6562a613d5/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs?ref=9b9f6771049ecd30f13138c32f23ba6562a613d5", "patch": "@@ -1880,9 +1880,15 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                 };\n                             let sp = hir.span(id);\n                             let sp = if let Some(first_bound) = has_bounds {\n-                                // `sp` only covers `T`, change it so that it covers\n-                                // `T:` when appropriate\n                                 sp.until(first_bound.span())\n+                            } else if let Some(colon_sp) =\n+                                // If the generic param is declared with a colon but without bounds:\n+                                // fn foo<T:>(t: T) { ... }\n+                                param.colon_span_for_suggestions(\n+                                    self.inh.tcx.sess.source_map(),\n+                                )\n+                            {\n+                                sp.to(colon_sp)\n                             } else {\n                                 sp\n                             };"}, {"sha": "41a20b899599a7668d622404cdf3c8487bc93e96", "filename": "src/test/ui/traits/issue-95898.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9b9f6771049ecd30f13138c32f23ba6562a613d5/src%2Ftest%2Fui%2Ftraits%2Fissue-95898.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b9f6771049ecd30f13138c32f23ba6562a613d5/src%2Ftest%2Fui%2Ftraits%2Fissue-95898.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-95898.rs?ref=9b9f6771049ecd30f13138c32f23ba6562a613d5", "patch": "@@ -0,0 +1,9 @@\n+// Test for #95898: The trait suggestion had an extra `:` after the trait.\n+// edition:2021\n+\n+fn foo<T:>(t: T) {\n+    t.clone();\n+    //~^ ERROR no method named `clone` found for type parameter `T` in the current scope\n+}\n+\n+fn main() {}"}, {"sha": "d7d4790539604cfe93ab894a0ac2d305d5ec0e64", "filename": "src/test/ui/traits/issue-95898.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9b9f6771049ecd30f13138c32f23ba6562a613d5/src%2Ftest%2Fui%2Ftraits%2Fissue-95898.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b9f6771049ecd30f13138c32f23ba6562a613d5/src%2Ftest%2Fui%2Ftraits%2Fissue-95898.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-95898.stderr?ref=9b9f6771049ecd30f13138c32f23ba6562a613d5", "patch": "@@ -0,0 +1,15 @@\n+error[E0599]: no method named `clone` found for type parameter `T` in the current scope\n+  --> $DIR/issue-95898.rs:5:7\n+   |\n+LL |     t.clone();\n+   |       ^^^^^ method not found in `T`\n+   |\n+   = help: items from traits can only be used if the type parameter is bounded by the trait\n+help: the following trait defines an item `clone`, perhaps you need to restrict type parameter `T` with it:\n+   |\n+LL | fn foo<T: Clone>(t: T) {\n+   |        ~~~~~~~~\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0599`."}]}