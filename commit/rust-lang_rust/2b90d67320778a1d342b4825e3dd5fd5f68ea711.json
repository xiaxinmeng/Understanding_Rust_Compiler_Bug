{"sha": "2b90d67320778a1d342b4825e3dd5fd5f68ea711", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiOTBkNjczMjA3NzhhMWQzNDJiNDgyNWUzZGQ1ZmQ1ZjY4ZWE3MTE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-05T22:14:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-05T22:14:41Z"}, "message": "Rollup merge of #59599 - XAMPPRocky:master, r=Mark-Simulacrum\n\nUpdated RELEASES.md for 1.34.0\n\n[Rendered](https://github.com/XAMPPRocky/rust/blob/master/RELEASES.md)\n\nThis also corrects an omission in the previous 1.33.0 release.\n\nr? @Mark-Simulacrum\n\ncc @rust-lang/release", "tree": {"sha": "cef1a9058f85e146a7584f89e3be8dff7051fc63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cef1a9058f85e146a7584f89e3be8dff7051fc63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b90d67320778a1d342b4825e3dd5fd5f68ea711", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcp9NSCRBK7hj4Ov3rIwAAdHIIADlHNVPuZvvoxQeX3gh3ECSw\nryeulDojDBGDS4dsLa9Zi2CcLfUUmV1gmtA70AJYesqYqn1ks02GAMjX/hfgMsBV\n1C58ESl+sGjzo5sDwlOgKp5YBEvuEHJsqKJn5xBhWQWSRrJAOM32WgDXKRF6pCaI\nWJbrerHtp0NeMK47XmI8Xi9MJim8n7rln+KJEbciY8WRvXyDGvpM0O2SWAG9C4lj\n8vFLQS3Z6gOL9Im6rqA/jez/05wj9vNmO7tzewr6LGCjVcyFX9T9p3oFu1kBplQd\nfo5V1iFO3KQ8yAZD4UqjbcFExMelJZhG3KXHQZizFXbkQWbLZzWhMCkFX1UBiTo=\n=9XN7\n-----END PGP SIGNATURE-----\n", "payload": "tree cef1a9058f85e146a7584f89e3be8dff7051fc63\nparent e5435d97ea0f7dbd32d3fb30ecfe8877ea7c116a\nparent 4ba30341402cd4c80018f6f61e38987897ceeb1b\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1554502481 +0200\ncommitter GitHub <noreply@github.com> 1554502481 +0200\n\nRollup merge of #59599 - XAMPPRocky:master, r=Mark-Simulacrum\n\nUpdated RELEASES.md for 1.34.0\n\n[Rendered](https://github.com/XAMPPRocky/rust/blob/master/RELEASES.md)\n\nThis also corrects an omission in the previous 1.33.0 release.\n\nr? @Mark-Simulacrum\n\ncc @rust-lang/release\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b90d67320778a1d342b4825e3dd5fd5f68ea711", "html_url": "https://github.com/rust-lang/rust/commit/2b90d67320778a1d342b4825e3dd5fd5f68ea711", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b90d67320778a1d342b4825e3dd5fd5f68ea711/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5435d97ea0f7dbd32d3fb30ecfe8877ea7c116a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5435d97ea0f7dbd32d3fb30ecfe8877ea7c116a", "html_url": "https://github.com/rust-lang/rust/commit/e5435d97ea0f7dbd32d3fb30ecfe8877ea7c116a"}, {"sha": "4ba30341402cd4c80018f6f61e38987897ceeb1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ba30341402cd4c80018f6f61e38987897ceeb1b", "html_url": "https://github.com/rust-lang/rust/commit/4ba30341402cd4c80018f6f61e38987897ceeb1b"}], "stats": {"total": 149, "additions": 149, "deletions": 0}, "files": [{"sha": "821889d64a5fb10fb595eea1a8b95d3866e44625", "filename": "RELEASES.md", "status": "modified", "additions": 149, "deletions": 0, "changes": 149, "blob_url": "https://github.com/rust-lang/rust/blob/2b90d67320778a1d342b4825e3dd5fd5f68ea711/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/2b90d67320778a1d342b4825e3dd5fd5f68ea711/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=2b90d67320778a1d342b4825e3dd5fd5f68ea711", "patch": "@@ -1,3 +1,149 @@\n+Version 1.34.0 (2019-04-11)\n+==========================\n+\n+Language\n+--------\n+- [You can now use `#[deprecated = \"reason\"]`][58166] as a shorthand for\n+  `#[deprecated(note = \"reason\")]`. This was previously allowed by mistake\n+  but had no effect.\n+- [You can now accept token streams in `#[attr()]`,`#[attr[]]`, and\n+  `#[attr{}]` procedural macros.][57367]\n+- [You can now write `extern crate self as foo;`][57407] to import your\n+  crate's root into the extern prelude.\n+\n+\n+Compiler\n+--------\n+- [You can now target `riscv64imac-unknown-none-elf` and\n+  `riscv64gc-unknown-none-elf`.][58406]\n+- [You can now enable linker plugin LTO optimisations with\n+  `-C linker-plugin-lto`.][58057] This allows rustc to compile your Rust code\n+  into LLVM bitcode allowing LLVM to perform LTO optimisations across C/C++ FFI\n+  boundaries.\n+- [You can now target `powerpc64-unknown-freebsd`.][57809]\n+\n+\n+Libraries\n+---------\n+- [The trait bounds have been removed on some of `HashMap<K, V, S>`'s and\n+  `HashSet<T, S>`'s basic methods.][58370] Most notably you no longer require\n+  the `Hash` trait to create an iterator.\n+- [The `Ord` trait bounds have been removed on some of `BinaryHeap<T>`'s basic\n+  methods.][58421] Most notably you no longer require the `Ord` trait to create\n+  an iterator.\n+- [The methods `overflowing_neg` and `wrapping_neg` are now `const` functions\n+  for all numeric types.][58044]\n+- [Indexing a `str` is now generic over all types that\n+  implement `SliceIndex<str>`.][57604]\n+- [`str::trim`, `str::trim_matches`, `str::trim_{start, end}`, and\n+  `str::trim_{start, end}_matches` are now `#[must_use]`][57106] and will\n+  produce a warning if their returning type is unused.\n+- [The methods `checked_pow`, `saturating_pow`, `wrapping_pow`, and\n+  `overflowing_pow` are now available for all numeric types.][57873] These are\n+  equivalvent to methods such as `wrapping_add` for the `pow` operation.\n+\n+\n+Stabilized APIs\n+---------------\n+\n+#### std & core\n+* [`Any::type_id`]\n+* [`Error::type_id`]\n+* [`atomic::AtomicI16`]\n+* [`atomic::AtomicI32`]\n+* [`atomic::AtomicI64`]\n+* [`atomic::AtomicI8`]\n+* [`atomic::AtomicU16`]\n+* [`atomic::AtomicU32`]\n+* [`atomic::AtomicU64`]\n+* [`atomic::AtomicU8`]\n+* [`convert::Infallible`]\n+* [`convert::TryFrom`]\n+* [`convert::TryInto`]\n+* [`iter::from_fn`]\n+* [`iter::successors`]\n+* [`num::NonZeroI128`]\n+* [`num::NonZeroI16`]\n+* [`num::NonZeroI32`]\n+* [`num::NonZeroI64`]\n+* [`num::NonZeroI8`]\n+* [`num::NonZeroIsize`]\n+* [`slice::sort_by_cached_key`]\n+* [`str::escape_debug`]\n+* [`str::escape_default`]\n+* [`str::escape_unicode`]\n+* [`str::split_ascii_whitespace`]\n+\n+#### std\n+* [`Instant::checked_add`]\n+* [`Instant::checked_sub`]\n+* [`SystemTime::checked_add`]\n+* [`SystemTime::checked_sub`]\n+\n+Cargo\n+-----\n+- [You can now use alternative registries to crates.io.][cargo/6654]\n+\n+Misc\n+----\n+- [You can now use the `?` operator in your documentation tests without manually\n+  adding `fn main() -> Result<(), _> {}`.][56470]\n+\n+Compatibility Notes\n+-------------------\n+- [`Command::before_exec` is now deprecated in favor of the\n+  unsafe method `Command::pre_exec`.][58059]\n+- [Use of `ATOMIC_{BOOL, ISIZE, USIZE}_INIT` is now deprecated.][57425] As you\n+  can now use `const` functions in `static` variables.\n+\n+[58370]: https://github.com/rust-lang/rust/pull/58370/\n+[58406]: https://github.com/rust-lang/rust/pull/58406/\n+[58421]: https://github.com/rust-lang/rust/pull/58421/\n+[58166]: https://github.com/rust-lang/rust/pull/58166/\n+[58044]: https://github.com/rust-lang/rust/pull/58044/\n+[58057]: https://github.com/rust-lang/rust/pull/58057/\n+[58059]: https://github.com/rust-lang/rust/pull/58059/\n+[57809]: https://github.com/rust-lang/rust/pull/57809/\n+[57873]: https://github.com/rust-lang/rust/pull/57873/\n+[57604]: https://github.com/rust-lang/rust/pull/57604/\n+[57367]: https://github.com/rust-lang/rust/pull/57367/\n+[57407]: https://github.com/rust-lang/rust/pull/57407/\n+[57425]: https://github.com/rust-lang/rust/pull/57425/\n+[57106]: https://github.com/rust-lang/rust/pull/57106/\n+[56470]: https://github.com/rust-lang/rust/pull/56470/\n+[cargo/6654]: https://github.com/rust-lang/cargo/pull/6654/\n+[`Any::type_id`]: https://doc.rust-lang.org/std/any/trait.Any.html#tymethod.type_id\n+[`Error::type_id`]: https://doc.rust-lang.org/std/error/trait.Error.html#tymethod.type_id\n+[`atomic::AtomicI16`]: https://doc.rust-lang.org/std/atomic/struct.AtomicI16.html\n+[`atomic::AtomicI32`]: https://doc.rust-lang.org/std/atomic/struct.AtomicI32.html\n+[`atomic::AtomicI64`]: https://doc.rust-lang.org/std/atomic/struct.AtomicI64.html\n+[`atomic::AtomicI8`]: https://doc.rust-lang.org/std/atomic/struct.AtomicI8.html\n+[`atomic::AtomicU16`]: https://doc.rust-lang.org/std/atomic/struct.AtomicU16.html\n+[`atomic::AtomicU32`]: https://doc.rust-lang.org/std/atomic/struct.AtomicU32.html\n+[`atomic::AtomicU64`]: https://doc.rust-lang.org/std/atomic/struct.AtomicU64.html\n+[`atomic::AtomicU8`]: https://doc.rust-lang.org/std/atomic/struct.AtomicU8.html\n+[`convert::Infallible`]: https://doc.rust-lang.org/std/convert/enum.Infallible.html\n+[`convert::TryFrom`]: https://doc.rust-lang.org/std/convert/trait.TryFrom.html\n+[`convert::TryInto`]: https://doc.rust-lang.org/std/convert/trait.TryInto.html\n+[`iter::from_fn`]: https://doc.rust-lang.org/std/iter/fn.from_fn.html\n+[`iter::successors`]: https://doc.rust-lang.org/std/iter/fn.successors.html\n+[`num::NonZeroI128`]: https://doc.rust-lang.org/std/num/struct.NonZeroI128.html\n+[`num::NonZeroI16`]: https://doc.rust-lang.org/std/num/struct.NonZeroI16.html\n+[`num::NonZeroI32`]: https://doc.rust-lang.org/std/num/struct.NonZeroI32.html\n+[`num::NonZeroI64`]: https://doc.rust-lang.org/std/num/struct.NonZeroI64.html\n+[`num::NonZeroI8`]: https://doc.rust-lang.org/std/num/struct.NonZeroI8.html\n+[`num::NonZeroIsize`]: https://doc.rust-lang.org/std/num/struct.NonZeroIsize.html\n+[`slice::sort_by_cached_key`]: https://doc.rust-lang.org/std/slice/fn.sort_by_cached_key\n+[`str::escape_debug`]: https://doc.rust-lang.org/std/primitive.str.html#method.escape_debug\n+[`str::escape_default`]: https://doc.rust-lang.org/std/primitive.str.html#method.escape_default\n+[`str::escape_unicode`]: https://doc.rust-lang.org/std/primitive.str.html#method.escape_unicode\n+[`str::split_ascii_whitespace`]: https://doc.rust-lang.org/std/primitive.str.html#method.split_ascii_whitespace\n+[`Instant::checked_add`]: https://doc.rust-lang.org/std/time/struct.Instant.html#method.checked_add\n+[`Instant::checked_sub`]: https://doc.rust-lang.org/std/time/struct.Instant.html#method.checked_sub\n+[`SystemTime::checked_add`]: https://doc.rust-lang.org/std/time/struct.SystemTime.html#method.checked_add\n+[`SystemTime::checked_sub`]: https://doc.rust-lang.org/std/time/struct.SystemTime.html#method.checked_sub\n+\n+\n Version 1.33.0 (2019-02-28)\n ==========================\n \n@@ -99,6 +245,8 @@ Stabilized APIs\n \n Cargo\n -----\n+- [You can now publish crates that require a feature flag to compile with\n+  `cargo publish --features` or `cargo publish --all-features`.][cargo/6453]\n - [Cargo should now rebuild a crate if a file was modified during the initial\n   build.][cargo/6484]\n \n@@ -135,6 +283,7 @@ Compatibility Notes\n [57535]: https://github.com/rust-lang/rust/pull/57535/\n [57566]: https://github.com/rust-lang/rust/pull/57566/\n [57615]: https://github.com/rust-lang/rust/pull/57615/\n+[cargo/6453]: https://github.com/rust-lang/cargo/pull/6453/\n [cargo/6484]: https://github.com/rust-lang/cargo/pull/6484/\n [`unix::FileExt::read_exact_at`]: https://doc.rust-lang.org/std/os/unix/fs/trait.FileExt.html#method.read_exact_at\n [`unix::FileExt::write_all_at`]: https://doc.rust-lang.org/std/os/unix/fs/trait.FileExt.html#method.write_all_at"}]}