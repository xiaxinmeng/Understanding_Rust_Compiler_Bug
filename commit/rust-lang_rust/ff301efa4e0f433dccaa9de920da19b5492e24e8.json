{"sha": "ff301efa4e0f433dccaa9de920da19b5492e24e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmMzAxZWZhNGUwZjQzM2RjY2FhOWRlOTIwZGExOWI1NDkyZTI0ZTg=", "commit": {"author": {"name": "Ga\u00ebtan Cassiers", "email": "gaetan.cassiers@gmail.com", "date": "2015-07-25T16:58:16Z"}, "committer": {"name": "Ga\u00ebtan Cassiers", "email": "gaetan.cassiers@gmail.com", "date": "2015-07-25T16:58:16Z"}, "message": "Fix width computation in rewrite_binary_op\n\nOperator width was counted twice.", "tree": {"sha": "69af44ee5fc1a24ca3c63f6102d5ff228d632fa8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69af44ee5fc1a24ca3c63f6102d5ff228d632fa8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff301efa4e0f433dccaa9de920da19b5492e24e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff301efa4e0f433dccaa9de920da19b5492e24e8", "html_url": "https://github.com/rust-lang/rust/commit/ff301efa4e0f433dccaa9de920da19b5492e24e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff301efa4e0f433dccaa9de920da19b5492e24e8/comments", "author": {"login": "cassiersg", "id": 9348542, "node_id": "MDQ6VXNlcjkzNDg1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/9348542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cassiersg", "html_url": "https://github.com/cassiersg", "followers_url": "https://api.github.com/users/cassiersg/followers", "following_url": "https://api.github.com/users/cassiersg/following{/other_user}", "gists_url": "https://api.github.com/users/cassiersg/gists{/gist_id}", "starred_url": "https://api.github.com/users/cassiersg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cassiersg/subscriptions", "organizations_url": "https://api.github.com/users/cassiersg/orgs", "repos_url": "https://api.github.com/users/cassiersg/repos", "events_url": "https://api.github.com/users/cassiersg/events{/privacy}", "received_events_url": "https://api.github.com/users/cassiersg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cassiersg", "id": 9348542, "node_id": "MDQ6VXNlcjkzNDg1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/9348542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cassiersg", "html_url": "https://github.com/cassiersg", "followers_url": "https://api.github.com/users/cassiersg/followers", "following_url": "https://api.github.com/users/cassiersg/following{/other_user}", "gists_url": "https://api.github.com/users/cassiersg/gists{/gist_id}", "starred_url": "https://api.github.com/users/cassiersg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cassiersg/subscriptions", "organizations_url": "https://api.github.com/users/cassiersg/orgs", "repos_url": "https://api.github.com/users/cassiersg/repos", "events_url": "https://api.github.com/users/cassiersg/events{/privacy}", "received_events_url": "https://api.github.com/users/cassiersg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8461e8a0a8b1dd825f30de9d5bc4f5c1d8d57dbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/8461e8a0a8b1dd825f30de9d5bc4f5c1d8d57dbd", "html_url": "https://github.com/rust-lang/rust/commit/8461e8a0a8b1dd825f30de9d5bc4f5c1d8d57dbd"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "81cc204908141f5c2f9727b8816cf1606b8390f5", "filename": "src/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff301efa4e0f433dccaa9de920da19b5492e24e8/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff301efa4e0f433dccaa9de920da19b5492e24e8/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=ff301efa4e0f433dccaa9de920da19b5492e24e8", "patch": "@@ -608,7 +608,7 @@ fn rewrite_binary_op(context: &RewriteContext,\n     result.push_str(&operator_str);\n \n     // 1 = space between operator and rhs\n-    let used_width = result.len() + operator_str.len() + 1;\n+    let used_width = result.len() + 1;\n     let remaining_width = match result.rfind('\\n') {\n         Some(idx) => (offset + width + idx).checked_sub(used_width).unwrap_or(0),\n         None => width.checked_sub(used_width).unwrap_or(0)"}, {"sha": "9a69d68987f12eed2ccb359ab28a4c07c2d7581c", "filename": "tests/source/expr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ff301efa4e0f433dccaa9de920da19b5492e24e8/tests%2Fsource%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff301efa4e0f433dccaa9de920da19b5492e24e8/tests%2Fsource%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fexpr.rs?ref=ff301efa4e0f433dccaa9de920da19b5492e24e8", "patch": "@@ -7,6 +7,7 @@ fn foo() -> bool {\n     let very_long_variable_name = ( a +  first +   simple + test   );\n     let very_long_variable_name = (a + first + simple + test + AAAAAAAAAAAAA + BBBBBBBBBBBBBBBBB + b + c);\n \n+    //FIXME this exceeds width limit. Needs assignments reformatting\n     let is_internalxxxx = self.codemap.span_to_filename(s) == self.codemap.span_to_filename(m.inner);\n \n     let some_val = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa * bbbb / (bbbbbb -"}, {"sha": "1ec5e0168fa9bb0abcfeb617934acd7bc063b659", "filename": "tests/target/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff301efa4e0f433dccaa9de920da19b5492e24e8/tests%2Ftarget%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff301efa4e0f433dccaa9de920da19b5492e24e8/tests%2Ftarget%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr.rs?ref=ff301efa4e0f433dccaa9de920da19b5492e24e8", "patch": "@@ -8,8 +8,8 @@ fn foo() -> bool {\n     let very_long_variable_name = (a + first + simple + test + AAAAAAAAAAAAA + BBBBBBBBBBBBBBBBB +\n                                    b + c);\n \n-    let is_internalxxxx = self.codemap.span_to_filename(s) ==\n-                          self.codemap.span_to_filename(m.inner);\n+    //FIXME this exceeds width limit. Needs assignments reformatting\n+    let is_internalxxxx = self.codemap.span_to_filename(s) == self.codemap.span_to_filename(m.inner);\n \n     let some_val = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa * bbbb /\n                    (bbbbbb - function_call(x, *very_long_pointer, y)) + 1000;"}]}