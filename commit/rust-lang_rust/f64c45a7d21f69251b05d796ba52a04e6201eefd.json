{"sha": "f64c45a7d21f69251b05d796ba52a04e6201eefd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NGM0NWE3ZDIxZjY5MjUxYjA1ZDc5NmJhNTJhMDRlNjIwMWVlZmQ=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2021-04-29T01:02:07Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2021-04-30T04:12:37Z"}, "message": "Add needs-run-enabled directive for should-fail tests\n\nI was wary of doing any automatic disabling here, since should-fail\nis how we test compiletest itself.", "tree": {"sha": "d83c31b86cd6c35175238cba387ac1223b1fdd02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d83c31b86cd6c35175238cba387ac1223b1fdd02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f64c45a7d21f69251b05d796ba52a04e6201eefd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f64c45a7d21f69251b05d796ba52a04e6201eefd", "html_url": "https://github.com/rust-lang/rust/commit/f64c45a7d21f69251b05d796ba52a04e6201eefd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f64c45a7d21f69251b05d796ba52a04e6201eefd/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e282fd045a96793fb060c224887b9807370bd9d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e282fd045a96793fb060c224887b9807370bd9d1", "html_url": "https://github.com/rust-lang/rust/commit/e282fd045a96793fb060c224887b9807370bd9d1"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "eef6d99d2a91c044d6a1706e6cec80a43b709a78", "filename": "src/test/debuginfo/should-fail.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f64c45a7d21f69251b05d796ba52a04e6201eefd/src%2Ftest%2Fdebuginfo%2Fshould-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f64c45a7d21f69251b05d796ba52a04e6201eefd/src%2Ftest%2Fdebuginfo%2Fshould-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fshould-fail.rs?ref=f64c45a7d21f69251b05d796ba52a04e6201eefd", "patch": "@@ -2,6 +2,7 @@\n \n // == Test [gdb|lldb]-[command|check] are parsed correctly ===\n // should-fail\n+// needs-run-enabled\n // compile-flags:-g\n \n // === GDB TESTS ==================================================================================="}, {"sha": "37ddbe99a9f0310d7dd0f2ca03dca5516efc8ba2", "filename": "src/test/ui/meta/revision-bad.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f64c45a7d21f69251b05d796ba52a04e6201eefd/src%2Ftest%2Fui%2Fmeta%2Frevision-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f64c45a7d21f69251b05d796ba52a04e6201eefd/src%2Ftest%2Fui%2Fmeta%2Frevision-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmeta%2Frevision-bad.rs?ref=f64c45a7d21f69251b05d796ba52a04e6201eefd", "patch": "@@ -4,6 +4,7 @@\n // run-fail\n // revisions: foo bar\n // should-fail\n+// needs-run-enabled\n //[foo] error-pattern:bar\n //[bar] error-pattern:foo\n "}, {"sha": "2a14d8a39990af5e1aa6c99c8bfdd6f9ca44e41e", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f64c45a7d21f69251b05d796ba52a04e6201eefd/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f64c45a7d21f69251b05d796ba52a04e6201eefd/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=f64c45a7d21f69251b05d796ba52a04e6201eefd", "patch": "@@ -351,6 +351,15 @@ pub struct Config {\n     pub npm: Option<String>,\n }\n \n+impl Config {\n+    pub fn run_enabled(&self) -> bool {\n+        self.run.unwrap_or_else(|| {\n+            // Auto-detect whether to run based on the platform.\n+            !self.target.ends_with(\"-fuchsia\")\n+        })\n+    }\n+}\n+\n #[derive(Debug, Clone)]\n pub struct TestPaths {\n     pub file: PathBuf,         // e.g., compile-test/foo/bar/baz.rs"}, {"sha": "56527420c0d08d19677047975601a1f90e1e94f4", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f64c45a7d21f69251b05d796ba52a04e6201eefd/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f64c45a7d21f69251b05d796ba52a04e6201eefd/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=f64c45a7d21f69251b05d796ba52a04e6201eefd", "patch": "@@ -85,6 +85,10 @@ impl EarlyProps {\n                     props.ignore = true;\n                 }\n \n+                if !config.run_enabled() && config.parse_name_directive(ln, \"needs-run-enabled\") {\n+                    props.ignore = true;\n+                }\n+\n                 if !rustc_has_sanitizer_support\n                     && config.parse_name_directive(ln, \"needs-sanitizer-support\")\n                 {"}, {"sha": "c606aa1dfbfd42b06045176855533a817fc4d558", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f64c45a7d21f69251b05d796ba52a04e6201eefd/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f64c45a7d21f69251b05d796ba52a04e6201eefd/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=f64c45a7d21f69251b05d796ba52a04e6201eefd", "patch": "@@ -369,11 +369,7 @@ impl<'test> TestCx<'test> {\n     }\n \n     fn run_if_enabled(&self) -> WillExecute {\n-        let enabled = self.config.run.unwrap_or_else(|| {\n-            // Auto-detect whether to run based on the platform.\n-            !self.config.target.ends_with(\"-fuchsia\")\n-        });\n-        if enabled { WillExecute::Yes } else { WillExecute::Disabled }\n+        if self.config.run_enabled() { WillExecute::Yes } else { WillExecute::Disabled }\n     }\n \n     fn should_run_successfully(&self, pm: Option<PassMode>) -> bool {"}]}