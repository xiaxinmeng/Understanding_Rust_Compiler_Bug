{"sha": "2a244dcb4893a26b02ae2bd01309b8499685457b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhMjQ0ZGNiNDg5M2EyNmIwMmFlMmJkMDEzMDliODQ5OTY4NTQ1N2I=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-30T07:41:57Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-30T07:41:57Z"}, "message": "no TLS dtor and no leak checks on macOS", "tree": {"sha": "075666b2b6c6b096e39da3c3c6bcd42dcc505839", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/075666b2b6c6b096e39da3c3c6bcd42dcc505839"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a244dcb4893a26b02ae2bd01309b8499685457b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a244dcb4893a26b02ae2bd01309b8499685457b", "html_url": "https://github.com/rust-lang/rust/commit/2a244dcb4893a26b02ae2bd01309b8499685457b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a244dcb4893a26b02ae2bd01309b8499685457b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2ec521f218bbc1c3677021644fc5e63641b94d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2ec521f218bbc1c3677021644fc5e63641b94d5", "html_url": "https://github.com/rust-lang/rust/commit/e2ec521f218bbc1c3677021644fc5e63641b94d5"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "a9791e2b7ca7fd7ede758c8085ffda1a71e6d94d", "filename": "src/fn_call.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2a244dcb4893a26b02ae2bd01309b8499685457b/src%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a244dcb4893a26b02ae2bd01309b8499685457b/src%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffn_call.rs?ref=2a244dcb4893a26b02ae2bd01309b8499685457b", "patch": "@@ -539,7 +539,7 @@ impl<'a, 'mir, 'tcx: 'mir + 'a> EvalContextExt<'tcx, 'mir> for EvalContext<'a, '\n             }\n \n             \"_tlv_atexit\" => {\n-                return err!(Unimplemented(\"Thread-local store is not fully supported on macOS\".to_owned()));\n+                // FIXME: Register the dtor\n             },\n \n             // Determining stack base address"}, {"sha": "42dac6a28d855a061e2287d8e63d1d477bfeb967", "filename": "src/lib.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2a244dcb4893a26b02ae2bd01309b8499685457b/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a244dcb4893a26b02ae2bd01309b8499685457b/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=2a244dcb4893a26b02ae2bd01309b8499685457b", "patch": "@@ -161,8 +161,9 @@ pub fn eval_main<'a, 'tcx: 'a>(\n             let leaks = ecx.memory().leak_report();\n             // Disable the leak test on some platforms where we likely do not\n             // correctly implement TLS destructors.\n-            let target_os = &ecx.tcx.tcx.sess.target.target.target_os;\n-            if target_os.to_lowercase() != \"windows\" && leaks != 0 {\n+            let target_os = ecx.tcx.tcx.sess.target.target.target_os.to_lowercase();\n+            let ignore_leaks = target_os == \"windows\" || target_os == \"macos\";\n+            if !ignore_leaks && leaks != 0 {\n                 tcx.sess.err(\"the evaluated program leaked memory\");\n             }\n         }"}, {"sha": "06e01d7aea3a52458ec55e6e521c2e0d165c9edb", "filename": "tests/compile-fail/memleak.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2a244dcb4893a26b02ae2bd01309b8499685457b/tests%2Fcompile-fail%2Fmemleak.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a244dcb4893a26b02ae2bd01309b8499685457b/tests%2Fcompile-fail%2Fmemleak.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fmemleak.rs?ref=2a244dcb4893a26b02ae2bd01309b8499685457b", "patch": "@@ -1,4 +1,5 @@\n-// ignore-windows\n+// ignore-windows: We do not check leaks on Windows\n+// ignore-macos: We do not check leaks on macOS\n \n //error-pattern: the evaluated program leaked memory\n "}, {"sha": "14a85ecd8947cd2c051013fe7678547f4c5dc448", "filename": "tests/compile-fail/memleak_rc.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2a244dcb4893a26b02ae2bd01309b8499685457b/tests%2Fcompile-fail%2Fmemleak_rc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a244dcb4893a26b02ae2bd01309b8499685457b/tests%2Fcompile-fail%2Fmemleak_rc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fmemleak_rc.rs?ref=2a244dcb4893a26b02ae2bd01309b8499685457b", "patch": "@@ -1,4 +1,5 @@\n-// ignore-windows\n+// ignore-windows: We do not check leaks on Windows\n+// ignore-macos: We do not check leaks on macOS\n \n //error-pattern: the evaluated program leaked memory\n "}]}