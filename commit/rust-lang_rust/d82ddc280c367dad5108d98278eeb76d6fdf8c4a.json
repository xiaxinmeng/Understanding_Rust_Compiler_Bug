{"sha": "d82ddc280c367dad5108d98278eeb76d6fdf8c4a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4MmRkYzI4MGMzNjdkYWQ1MTA4ZDk4Mjc4ZWViNzZkNmZkZjhjNGE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-10-25T03:28:39Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-10-25T03:28:39Z"}, "message": "Long lines", "tree": {"sha": "f51cea447fe6eaa79343178e433bb37288a657ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f51cea447fe6eaa79343178e433bb37288a657ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d82ddc280c367dad5108d98278eeb76d6fdf8c4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d82ddc280c367dad5108d98278eeb76d6fdf8c4a", "html_url": "https://github.com/rust-lang/rust/commit/d82ddc280c367dad5108d98278eeb76d6fdf8c4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d82ddc280c367dad5108d98278eeb76d6fdf8c4a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6ed01cab3a76ef801c8c072b6e82d10bdf287eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6ed01cab3a76ef801c8c072b6e82d10bdf287eb", "html_url": "https://github.com/rust-lang/rust/commit/c6ed01cab3a76ef801c8c072b6e82d10bdf287eb"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "c1b499567ed1f5c5990ca78c2df1810ce0611962", "filename": "src/rustc/middle/trans/alt.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d82ddc280c367dad5108d98278eeb76d6fdf8c4a/src%2Frustc%2Fmiddle%2Ftrans%2Falt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d82ddc280c367dad5108d98278eeb76d6fdf8c4a/src%2Frustc%2Fmiddle%2Ftrans%2Falt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Falt.rs?ref=d82ddc280c367dad5108d98278eeb76d6fdf8c4a", "patch": "@@ -42,12 +42,12 @@\n  * - `compile_submatch()`: The main workhouse.  It takes a list of values and\n  *   a list of matches and finds the various possibilities that could occur.\n  *\n- * - `enter_XXX()`: modifies the list of matches based on some information about\n- *   the value that has been matched.  For example, `enter_rec_or_struct()`\n- *   adjusts the values given that a record or struct has been matched.  This is\n- *   an infallible pattern, so *all* of the matches must be either wildcards or\n- *   record/struct patterns.  `enter_opt()` handles the fallible cases, and it is\n- *   correspondingly more complex.\n+ * - `enter_XXX()`: modifies the list of matches based on some information\n+ *   about the value that has been matched.  For example,\n+ *   `enter_rec_or_struct()` adjusts the values given that a record or struct\n+ *   has been matched.  This is an infallible pattern, so *all* of the matches\n+ *   must be either wildcards or record/struct patterns.  `enter_opt()`\n+ *   handles the fallible cases, and it is correspondingly more complex.\n  *\n  * ## Bindings\n  *"}]}