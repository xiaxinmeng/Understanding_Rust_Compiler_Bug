{"sha": "0a11e80fa83cd3ace4ca306531d84a6c8138d549", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhMTFlODBmYTgzY2QzYWNlNGNhMzA2NTMxZDg0YTZjODEzOGQ1NDk=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-09-17T08:39:21Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-09-17T09:10:22Z"}, "message": "introduce `lower_block_expr` convenience function, and use it", "tree": {"sha": "868685311e89c7be2e293cae9b5263e74a62cc72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/868685311e89c7be2e293cae9b5263e74a62cc72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a11e80fa83cd3ace4ca306531d84a6c8138d549", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a11e80fa83cd3ace4ca306531d84a6c8138d549", "html_url": "https://github.com/rust-lang/rust/commit/0a11e80fa83cd3ace4ca306531d84a6c8138d549", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a11e80fa83cd3ace4ca306531d84a6c8138d549/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "123f129f795a5f55a0094263f72d56249656145e", "url": "https://api.github.com/repos/rust-lang/rust/commits/123f129f795a5f55a0094263f72d56249656145e", "html_url": "https://github.com/rust-lang/rust/commit/123f129f795a5f55a0094263f72d56249656145e"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "48f7fc4446505369371b1964685155d742a2e981", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0a11e80fa83cd3ace4ca306531d84a6c8138d549/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a11e80fa83cd3ace4ca306531d84a6c8138d549/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=0a11e80fa83cd3ace4ca306531d84a6c8138d549", "patch": "@@ -2708,6 +2708,13 @@ impl<'a> LoweringContext<'a> {\n         })\n     }\n \n+    /// Lowers a block directly to an expression, presuming that it\n+    /// has no attributes and is not targeted by a `break`.\n+    fn lower_block_expr(&mut self, b: &Block) -> hir::Expr {\n+        let block = self.lower_block(b, false);\n+        self.expr_block(block, ThinVec::new())\n+    }\n+\n     fn lower_pat(&mut self, p: &Pat) -> P<hir::Pat> {\n         let node = match p.node {\n             PatKind::Wild => hir::PatKind::Wild,"}, {"sha": "ef0bef9d569a4446fe736657cb63c75ed0eb3b02", "filename": "src/librustc/hir/lowering/expr.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0a11e80fa83cd3ace4ca306531d84a6c8138d549/src%2Flibrustc%2Fhir%2Flowering%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a11e80fa83cd3ace4ca306531d84a6c8138d549/src%2Flibrustc%2Fhir%2Flowering%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering%2Fexpr.rs?ref=0a11e80fa83cd3ace4ca306531d84a6c8138d549", "patch": "@@ -90,10 +90,7 @@ impl LoweringContext<'_> {\n             ),\n             ExprKind::Async(capture_clause, closure_node_id, ref block) => {\n                 self.make_async_expr(capture_clause, closure_node_id, None, block.span, |this| {\n-                    this.with_new_scopes(|this| {\n-                        let block = this.lower_block(block, false);\n-                        this.expr_block(block, ThinVec::new())\n-                    })\n+                    this.with_new_scopes(|this| this.lower_block_expr(block))\n                 })\n             }\n             ExprKind::Await(ref expr) => self.lower_expr_await(e.span, expr),\n@@ -284,8 +281,7 @@ impl LoweringContext<'_> {\n         let else_arm = self.arm(hir_vec![else_pat], P(else_expr));\n \n         // Handle then + scrutinee:\n-        let then_blk = self.lower_block(then, false);\n-        let then_expr = self.expr_block(then_blk, ThinVec::new());\n+        let then_expr = self.lower_block_expr(then);\n         let (then_pat, scrutinee, desugar) = match cond.node {\n             // `<pat> => <then>`:\n             ExprKind::Let(ref pat, ref scrutinee) => {\n@@ -335,8 +331,7 @@ impl LoweringContext<'_> {\n         };\n \n         // Handle then + scrutinee:\n-        let then_blk = self.lower_block(body, false);\n-        let then_expr = self.expr_block(then_blk, ThinVec::new());\n+        let then_expr = self.lower_block_expr(body);\n         let (then_pat, scrutinee, desugar, source) = match cond.node {\n             ExprKind::Let(ref pat, ref scrutinee) => {\n                 // to:"}, {"sha": "9ac3a6bdc87af9a4e896283eee9c8641524c4a5c", "filename": "src/librustc/hir/lowering/item.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0a11e80fa83cd3ace4ca306531d84a6c8138d549/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a11e80fa83cd3ace4ca306531d84a6c8138d549/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs?ref=0a11e80fa83cd3ace4ca306531d84a6c8138d549", "patch": "@@ -1071,10 +1071,7 @@ impl LoweringContext<'_> {\n     }\n \n     fn lower_fn_body_block(&mut self, decl: &FnDecl, body: &Block) -> hir::BodyId {\n-        self.lower_fn_body(decl, |this| {\n-            let body = this.lower_block(body, false);\n-            this.expr_block(body, ThinVec::new())\n-        })\n+        self.lower_fn_body(decl, |this| this.lower_block_expr(body))\n     }\n \n     pub(super) fn lower_const_body(&mut self, expr: &Expr) -> hir::BodyId {\n@@ -1220,8 +1217,7 @@ impl LoweringContext<'_> {\n                 CaptureBy::Value, closure_id, None, body.span,\n                 |this| {\n                     // Create a block from the user's function body:\n-                    let user_body = this.lower_block(body, false);\n-                    let user_body = this.expr_block(user_body, ThinVec::new());\n+                    let user_body = this.lower_block_expr(body);\n \n                     // Transform into `drop-temps { <user-body> }`, an expression:\n                     let desugared_span = this.mark_span_with_reason("}]}