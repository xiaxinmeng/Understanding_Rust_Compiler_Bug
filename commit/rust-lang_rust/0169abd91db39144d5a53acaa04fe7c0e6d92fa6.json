{"sha": "0169abd91db39144d5a53acaa04fe7c0e6d92fa6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxNjlhYmQ5MWRiMzkxNDRkNWE1M2FjYWEwNGZlN2MwZTZkOTJmYTY=", "commit": {"author": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2014-03-21T22:48:06Z"}, "committer": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2014-03-22T14:47:33Z"}, "message": "sync: Remove Freeze / NoFreeze", "tree": {"sha": "05716895bd1547c7d0ef083b3df310a8b97c748d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05716895bd1547c7d0ef083b3df310a8b97c748d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0169abd91db39144d5a53acaa04fe7c0e6d92fa6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0169abd91db39144d5a53acaa04fe7c0e6d92fa6", "html_url": "https://github.com/rust-lang/rust/commit/0169abd91db39144d5a53acaa04fe7c0e6d92fa6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0169abd91db39144d5a53acaa04fe7c0e6d92fa6/comments", "author": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "392348f347f92e7b14f406242b27a535b1bf5395", "url": "https://api.github.com/repos/rust-lang/rust/commits/392348f347f92e7b14f406242b27a535b1bf5395", "html_url": "https://github.com/rust-lang/rust/commit/392348f347f92e7b14f406242b27a535b1bf5395"}], "stats": {"total": 24, "additions": 11, "deletions": 13}, "files": [{"sha": "57187e273230d8dd41f65f7b4377bc4a0d6cb5fb", "filename": "src/libsync/arc.rs", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/0169abd91db39144d5a53acaa04fe7c0e6d92fa6/src%2Flibsync%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0169abd91db39144d5a53acaa04fe7c0e6d92fa6/src%2Flibsync%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsync%2Farc.rs?ref=0169abd91db39144d5a53acaa04fe7c0e6d92fa6", "patch": "@@ -162,7 +162,6 @@ struct MutexArcInner<T> { lock: Mutex, failed: bool, data: T }\n /// An Arc with mutable data protected by a blocking mutex.\n pub struct MutexArc<T> {\n     priv x: UnsafeArc<MutexArcInner<T>>,\n-    priv marker: marker::NoFreeze,\n }\n \n impl<T:Send> Clone for MutexArc<T> {\n@@ -171,8 +170,7 @@ impl<T:Send> Clone for MutexArc<T> {\n     fn clone(&self) -> MutexArc<T> {\n         // NB: Cloning the underlying mutex is not necessary. Its reference\n         // count would be exactly the same as the shared state's.\n-        MutexArc { x: self.x.clone(),\n-                   marker: marker::NoFreeze, }\n+        MutexArc { x: self.x.clone() }\n     }\n }\n \n@@ -191,8 +189,7 @@ impl<T:Send> MutexArc<T> {\n             lock: Mutex::new_with_condvars(num_condvars),\n             failed: false, data: user_data\n         };\n-        MutexArc { x: UnsafeArc::new(data),\n-                   marker: marker::NoFreeze, }\n+        MutexArc { x: UnsafeArc::new(data) }\n     }\n \n     /**\n@@ -297,17 +294,17 @@ struct RWArcInner<T> { lock: RWLock, failed: bool, data: T }\n  */\n pub struct RWArc<T> {\n     priv x: UnsafeArc<RWArcInner<T>>,\n-    priv marker: marker::NoFreeze,\n-    priv marker1: marker::NoShare,\n+    priv marker: marker::NoShare,\n }\n \n impl<T: Share + Send> Clone for RWArc<T> {\n     /// Duplicate a rwlock-protected Arc. See arc::clone for more details.\n     #[inline]\n     fn clone(&self) -> RWArc<T> {\n-        RWArc { x: self.x.clone(),\n-                marker: marker::NoFreeze,\n-                marker1: marker::NoShare, }\n+        RWArc {\n+            x: self.x.clone(),\n+            marker: marker::NoShare\n+        }\n     }\n \n }\n@@ -327,9 +324,10 @@ impl<T: Share + Send> RWArc<T> {\n             lock: RWLock::new_with_condvars(num_condvars),\n             failed: false, data: user_data\n         };\n-        RWArc { x: UnsafeArc::new(data),\n-                marker: marker::NoFreeze,\n-                marker1: marker::NoShare, }\n+        RWArc {\n+            x: UnsafeArc::new(data),\n+            marker: marker::NoShare\n+        }\n     }\n \n     /**"}]}