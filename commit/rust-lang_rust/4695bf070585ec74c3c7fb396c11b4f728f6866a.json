{"sha": "4695bf070585ec74c3c7fb396c11b4f728f6866a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2OTViZjA3MDU4NWVjNzRjM2M3ZmIzOTZjMTFiNGY3MjhmNjg2NmE=", "commit": {"author": {"name": "\u0141ukasz Niemier", "email": "lukasz@niemier.pl", "date": "2015-04-07T19:46:14Z"}, "committer": {"name": "\u0141ukasz Niemier", "email": "lukasz@niemier.pl", "date": "2015-04-07T19:46:14Z"}, "message": "Remove another invalid example", "tree": {"sha": "e2547262b1b4a6da55e084278bf15b6fadbf1b66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2547262b1b4a6da55e084278bf15b6fadbf1b66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4695bf070585ec74c3c7fb396c11b4f728f6866a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4695bf070585ec74c3c7fb396c11b4f728f6866a", "html_url": "https://github.com/rust-lang/rust/commit/4695bf070585ec74c3c7fb396c11b4f728f6866a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4695bf070585ec74c3c7fb396c11b4f728f6866a/comments", "author": {"login": "hauleth", "id": 291639, "node_id": "MDQ6VXNlcjI5MTYzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hauleth", "html_url": "https://github.com/hauleth", "followers_url": "https://api.github.com/users/hauleth/followers", "following_url": "https://api.github.com/users/hauleth/following{/other_user}", "gists_url": "https://api.github.com/users/hauleth/gists{/gist_id}", "starred_url": "https://api.github.com/users/hauleth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hauleth/subscriptions", "organizations_url": "https://api.github.com/users/hauleth/orgs", "repos_url": "https://api.github.com/users/hauleth/repos", "events_url": "https://api.github.com/users/hauleth/events{/privacy}", "received_events_url": "https://api.github.com/users/hauleth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hauleth", "id": 291639, "node_id": "MDQ6VXNlcjI5MTYzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hauleth", "html_url": "https://github.com/hauleth", "followers_url": "https://api.github.com/users/hauleth/followers", "following_url": "https://api.github.com/users/hauleth/following{/other_user}", "gists_url": "https://api.github.com/users/hauleth/gists{/gist_id}", "starred_url": "https://api.github.com/users/hauleth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hauleth/subscriptions", "organizations_url": "https://api.github.com/users/hauleth/orgs", "repos_url": "https://api.github.com/users/hauleth/repos", "events_url": "https://api.github.com/users/hauleth/events{/privacy}", "received_events_url": "https://api.github.com/users/hauleth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cf59304c1e112c3b0fbedc6034b2a469fb9fce8", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cf59304c1e112c3b0fbedc6034b2a469fb9fce8", "html_url": "https://github.com/rust-lang/rust/commit/4cf59304c1e112c3b0fbedc6034b2a469fb9fce8"}], "stats": {"total": 26, "additions": 0, "deletions": 26}, "files": [{"sha": "e5444843516008bcfd66df49d7d19dab513f86cb", "filename": "src/libstd/sync/mpsc/mod.rs", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/4695bf070585ec74c3c7fb396c11b4f728f6866a/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4695bf070585ec74c3c7fb396c11b4f728f6866a/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs?ref=4695bf070585ec74c3c7fb396c11b4f728f6866a", "patch": "@@ -112,32 +112,6 @@\n //! });\n //! rx.recv().unwrap();\n //! ```\n-//!\n-//! This second example is more costly since it allocates a new timer every\n-//! time a message is received, but it allows you to timeout after the channel\n-//! has been inactive for 5 seconds:\n-//!\n-//! ```no_run\n-//! # #![feature(std_misc, old_io)]\n-//! use std::sync::mpsc::channel;\n-//! use std::old_io::timer::Timer;\n-//! use std::time::Duration;\n-//!\n-//! let (tx, rx) = channel::<i32>();\n-//! let mut timer = Timer::new().unwrap();\n-//!\n-//! loop {\n-//!     let timeout = timer.oneshot(Duration::seconds(5));\n-//!\n-//!     select! {\n-//!         val = rx.recv() => println!(\"Received {}\", val.unwrap()),\n-//!         _ = timeout.recv() => {\n-//!             println!(\"timed out, no message received in 5 seconds\");\n-//!             break;\n-//!         }\n-//!     }\n-//! }\n-//! ```\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n "}]}