{"sha": "0fd2a70b90081c9536b89c95ca7f03755c13e9b4", "node_id": "C_kwDOAAsO6NoAKDBmZDJhNzBiOTAwODFjOTUzNmI4OWM5NWNhN2YwMzc1NWMxM2U5YjQ", "commit": {"author": {"name": "Patrik K\u00e5rlin", "email": "patrik.karlin@gmail.com", "date": "2023-02-06T10:33:10Z"}, "committer": {"name": "Patrik K\u00e5rlin", "email": "patrik.karlin@gmail.com", "date": "2023-02-20T09:20:57Z"}, "message": "create dummy placeholder crate to prevent compiler", "tree": {"sha": "bd31029ed8d48ed9c2a0e6a982abafcecb0bbe79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd31029ed8d48ed9c2a0e6a982abafcecb0bbe79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0fd2a70b90081c9536b89c95ca7f03755c13e9b4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgh2d+T/QMoKuxUQmn1LuLfU+BwZ\nEuSNYGnaFxqueP1i8AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQF04xPbSE/BayDhqYS1yNz++ZEFOfsvqC9De6pbV4K0wmsyh0TR7C4/MgYsK0qhzTw\nUk6e5qfToc/TdKCUh0hgs=\n-----END SSH SIGNATURE-----", "payload": "tree bd31029ed8d48ed9c2a0e6a982abafcecb0bbe79\nparent 824f915cbc32c0942122389274a1b6fbe2ffc51e\nauthor Patrik K\u00e5rlin <patrik.karlin@gmail.com> 1675679590 +0100\ncommitter Patrik K\u00e5rlin <patrik.karlin@gmail.com> 1676884857 +0100\n\ncreate dummy placeholder crate to prevent compiler\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0fd2a70b90081c9536b89c95ca7f03755c13e9b4", "html_url": "https://github.com/rust-lang/rust/commit/0fd2a70b90081c9536b89c95ca7f03755c13e9b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0fd2a70b90081c9536b89c95ca7f03755c13e9b4/comments", "author": {"login": "megakorre", "id": 208460, "node_id": "MDQ6VXNlcjIwODQ2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/208460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/megakorre", "html_url": "https://github.com/megakorre", "followers_url": "https://api.github.com/users/megakorre/followers", "following_url": "https://api.github.com/users/megakorre/following{/other_user}", "gists_url": "https://api.github.com/users/megakorre/gists{/gist_id}", "starred_url": "https://api.github.com/users/megakorre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/megakorre/subscriptions", "organizations_url": "https://api.github.com/users/megakorre/orgs", "repos_url": "https://api.github.com/users/megakorre/repos", "events_url": "https://api.github.com/users/megakorre/events{/privacy}", "received_events_url": "https://api.github.com/users/megakorre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "megakorre", "id": 208460, "node_id": "MDQ6VXNlcjIwODQ2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/208460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/megakorre", "html_url": "https://github.com/megakorre", "followers_url": "https://api.github.com/users/megakorre/followers", "following_url": "https://api.github.com/users/megakorre/following{/other_user}", "gists_url": "https://api.github.com/users/megakorre/gists{/gist_id}", "starred_url": "https://api.github.com/users/megakorre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/megakorre/subscriptions", "organizations_url": "https://api.github.com/users/megakorre/orgs", "repos_url": "https://api.github.com/users/megakorre/repos", "events_url": "https://api.github.com/users/megakorre/events{/privacy}", "received_events_url": "https://api.github.com/users/megakorre/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "824f915cbc32c0942122389274a1b6fbe2ffc51e", "url": "https://api.github.com/repos/rust-lang/rust/commits/824f915cbc32c0942122389274a1b6fbe2ffc51e", "html_url": "https://github.com/rust-lang/rust/commit/824f915cbc32c0942122389274a1b6fbe2ffc51e"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "00c5fe791f915e674ef41d8ec68add0d2064fda4", "filename": "compiler/rustc_expand/src/base.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0fd2a70b90081c9536b89c95ca7f03755c13e9b4/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fd2a70b90081c9536b89c95ca7f03755c13e9b4/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fbase.rs?ref=0fd2a70b90081c9536b89c95ca7f03755c13e9b4", "patch": "@@ -5,6 +5,7 @@ use crate::expand::{self, AstFragment, Invocation};\n use crate::module::DirOwnership;\n \n use rustc_ast::attr::MarkedAttrs;\n+use rustc_ast::mut_visit::DummyAstNode;\n use rustc_ast::ptr::P;\n use rustc_ast::token::{self, Nonterminal};\n use rustc_ast::tokenstream::TokenStream;\n@@ -640,6 +641,10 @@ impl MacResult for DummyResult {\n     fn make_variants(self: Box<DummyResult>) -> Option<SmallVec<[ast::Variant; 1]>> {\n         Some(SmallVec::new())\n     }\n+\n+    fn make_crate(self: Box<DummyResult>) -> Option<ast::Crate> {\n+        Some(DummyAstNode::dummy())\n+    }\n }\n \n /// A syntax extension kind."}, {"sha": "e1fee46313d50cfc560f9b6febd69ff5ca0174b0", "filename": "tests/ui/recursion_limit/issue_21102.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0fd2a70b90081c9536b89c95ca7f03755c13e9b4/tests%2Fui%2Frecursion_limit%2Fissue_21102.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fd2a70b90081c9536b89c95ca7f03755c13e9b4/tests%2Fui%2Frecursion_limit%2Fissue_21102.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frecursion_limit%2Fissue_21102.rs?ref=0fd2a70b90081c9536b89c95ca7f03755c13e9b4", "patch": "@@ -0,0 +1,9 @@\n+#![recursion_limit=\"4\"]\n+#![invalid_attribute]\n+#![invalid_attribute]\n+#![invalid_attribute]\n+#![invalid_attribute]\n+#![invalid_attribute]\n+//~^ERROR recursion limit reached while expanding\n+\n+fn main() {}"}, {"sha": "1bd722c492badb28afc988c8bbc776fe503cd419", "filename": "tests/ui/recursion_limit/issue_21102.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0fd2a70b90081c9536b89c95ca7f03755c13e9b4/tests%2Fui%2Frecursion_limit%2Fissue_21102.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0fd2a70b90081c9536b89c95ca7f03755c13e9b4/tests%2Fui%2Frecursion_limit%2Fissue_21102.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frecursion_limit%2Fissue_21102.stderr?ref=0fd2a70b90081c9536b89c95ca7f03755c13e9b4", "patch": "@@ -0,0 +1,10 @@\n+error: recursion limit reached while expanding `#[invalid_attribute]`\n+  --> $DIR/issue_21102.rs:6:1\n+   |\n+LL | #![invalid_attribute]\n+   | ^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"8\"]` attribute to your crate (`issue_21102`)\n+\n+error: aborting due to previous error\n+"}]}