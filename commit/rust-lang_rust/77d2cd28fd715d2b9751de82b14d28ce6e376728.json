{"sha": "77d2cd28fd715d2b9751de82b14d28ce6e376728", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3ZDJjZDI4ZmQ3MTVkMmI5NzUxZGU4MmIxNGQyOGNlNmUzNzY3Mjg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-08-29T19:48:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-29T19:48:21Z"}, "message": "Auto merge of #36080 - japaric:systemz, r=alexcrichton\n\nbuild llvm with systemz backend enabled, and link to related libraries\n\nwhen building rust against system llvm\n\ncloses #36077\n\nr? @alexcrichton", "tree": {"sha": "063e89474e2403ee3dfb6c589ea1838806973936", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/063e89474e2403ee3dfb6c589ea1838806973936"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77d2cd28fd715d2b9751de82b14d28ce6e376728", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77d2cd28fd715d2b9751de82b14d28ce6e376728", "html_url": "https://github.com/rust-lang/rust/commit/77d2cd28fd715d2b9751de82b14d28ce6e376728", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77d2cd28fd715d2b9751de82b14d28ce6e376728/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86dde9bbda92c02c61282b5df5d38338a798ef3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/86dde9bbda92c02c61282b5df5d38338a798ef3b", "html_url": "https://github.com/rust-lang/rust/commit/86dde9bbda92c02c61282b5df5d38338a798ef3b"}, {"sha": "15d8dfb6a0c7241845e4636cfc7d8cbf86108a08", "url": "https://api.github.com/repos/rust-lang/rust/commits/15d8dfb6a0c7241845e4636cfc7d8cbf86108a08", "html_url": "https://github.com/rust-lang/rust/commit/15d8dfb6a0c7241845e4636cfc7d8cbf86108a08"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "44fb3d368d2c77b3e70be7bacd417a850556c58d", "filename": "configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77d2cd28fd715d2b9751de82b14d28ce6e376728/configure", "raw_url": "https://github.com/rust-lang/rust/raw/77d2cd28fd715d2b9751de82b14d28ce6e376728/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=77d2cd28fd715d2b9751de82b14d28ce6e376728", "patch": "@@ -1747,7 +1747,7 @@ do\n         CMAKE_ARGS=\"$CMAKE_ARGS -DLLVM_ENABLE_ASSERTIONS=ON\"\n     fi\n \n-    CMAKE_ARGS=\"$CMAKE_ARGS -DLLVM_TARGETS_TO_BUILD='X86;ARM;AArch64;Mips;PowerPC'\"\n+    CMAKE_ARGS=\"$CMAKE_ARGS -DLLVM_TARGETS_TO_BUILD='X86;ARM;AArch64;Mips;PowerPC;SystemZ'\"\n     CMAKE_ARGS=\"$CMAKE_ARGS -G '$CFG_CMAKE_GENERATOR'\"\n     CMAKE_ARGS=\"$CMAKE_ARGS $CFG_LLVM_SRC_DIR\"\n "}, {"sha": "5a849af9856f1dd348259cfb0338532133ce31f9", "filename": "mk/main.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77d2cd28fd715d2b9751de82b14d28ce6e376728/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/77d2cd28fd715d2b9751de82b14d28ce6e376728/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=77d2cd28fd715d2b9751de82b14d28ce6e376728", "patch": "@@ -300,7 +300,7 @@ endif\n # LLVM macros\n ######################################################################\n \n-LLVM_OPTIONAL_COMPONENTS=x86 arm aarch64 mips powerpc pnacl\n+LLVM_OPTIONAL_COMPONENTS=x86 arm aarch64 mips powerpc pnacl systemz\n LLVM_REQUIRED_COMPONENTS=ipo bitreader bitwriter linker asmparser mcjit \\\n                 interpreter instrumentation\n "}, {"sha": "a271987210b673411e77c959379f55d6b49b40a3", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/77d2cd28fd715d2b9751de82b14d28ce6e376728/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/77d2cd28fd715d2b9751de82b14d28ce6e376728/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=77d2cd28fd715d2b9751de82b14d28ce6e376728", "patch": "@@ -131,12 +131,19 @@ LLVMRustAddPass(LLVMPassManagerRef PM, LLVMPassRef rust_pass) {\n #define SUBTARGET_PPC\n #endif\n \n+#ifdef LLVM_COMPONENT_SYSTEMZ\n+#define SUBTARGET_SYSTEMZ SUBTARGET(SystemZ)\n+#else\n+#define SUBTARGET_SYSTEMZ\n+#endif\n+\n #define GEN_SUBTARGETS    \\\n         SUBTARGET_X86     \\\n         SUBTARGET_ARM     \\\n         SUBTARGET_AARCH64 \\\n         SUBTARGET_MIPS    \\\n-        SUBTARGET_PPC\n+        SUBTARGET_PPC     \\\n+        SUBTARGET_SYSTEMZ\n \n #define SUBTARGET(x) namespace llvm {                \\\n     extern const SubtargetFeatureKV x##FeatureKV[];  \\"}]}