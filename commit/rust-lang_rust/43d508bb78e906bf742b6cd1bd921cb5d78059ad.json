{"sha": "43d508bb78e906bf742b6cd1bd921cb5d78059ad", "node_id": "C_kwDOAAsO6NoAKDQzZDUwOGJiNzhlOTA2YmY3NDJiNmNkMWJkOTIxY2I1ZDc4MDU5YWQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-19T18:19:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-19T18:19:52Z"}, "message": "Rollup merge of #93077 - lcnr:write_substs, r=oli-obk\n\nremove `List::is_noop`\n\nthink that `is_noop` is actually less clear than just using `is_empty`", "tree": {"sha": "1168aa85483d612694f08c3023b53a2e4e78a82c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1168aa85483d612694f08c3023b53a2e4e78a82c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43d508bb78e906bf742b6cd1bd921cb5d78059ad", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh6FZJCRBK7hj4Ov3rIwAAxd4IALKLbNkabbUVUADs/Np7NNQC\nHJjJE8XO6qj4s1ZEJZpeT8Dg7uaJUoEkddUQQBHpsgn8qq3RHxNcWOrssiPAri+6\no/MbLgRY4lpnBrjtSRYMWzkX8axCMhzQtIBFmpEZiQvFXMajFq4WEv9KRkBcXtd9\nXiUCyJeRHM9Pp6U25IWO3wyyP5drrLzaMNtJGOlevxrfMj/RUKtn3yZwgr2/oG+H\nZUZvrFiWUQ8q194mPYBRwc/0N5Q4gNaQhQKwrx5G4Tga5E/FTcucStx9ZvvEPrqW\noV7Xx+rAotWdkDH9UDtkAj1qz339y8cndWrN/HtbMfkxe7JoMG0obHgh30K29i4=\n=6hsL\n-----END PGP SIGNATURE-----\n", "payload": "tree 1168aa85483d612694f08c3023b53a2e4e78a82c\nparent fe93f080515512aae38d943d218346d3bd609b2a\nparent 4bd571c4ffc3ce14a3584bd11e3f1f4883b2bff6\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1642616392 +0100\ncommitter GitHub <noreply@github.com> 1642616392 +0100\n\nRollup merge of #93077 - lcnr:write_substs, r=oli-obk\n\nremove `List::is_noop`\n\nthink that `is_noop` is actually less clear than just using `is_empty`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43d508bb78e906bf742b6cd1bd921cb5d78059ad", "html_url": "https://github.com/rust-lang/rust/commit/43d508bb78e906bf742b6cd1bd921cb5d78059ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43d508bb78e906bf742b6cd1bd921cb5d78059ad/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe93f080515512aae38d943d218346d3bd609b2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe93f080515512aae38d943d218346d3bd609b2a", "html_url": "https://github.com/rust-lang/rust/commit/fe93f080515512aae38d943d218346d3bd609b2a"}, {"sha": "4bd571c4ffc3ce14a3584bd11e3f1f4883b2bff6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bd571c4ffc3ce14a3584bd11e3f1f4883b2bff6", "html_url": "https://github.com/rust-lang/rust/commit/4bd571c4ffc3ce14a3584bd11e3f1f4883b2bff6"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "55c9b4d9ba12d7ded09ce5c00410b529f37aef4f", "filename": "compiler/rustc_codegen_cranelift/src/intrinsics/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/43d508bb78e906bf742b6cd1bd921cb5d78059ad/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43d508bb78e906bf742b6cd1bd921cb5d78059ad/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fintrinsics%2Fmod.rs?ref=43d508bb78e906bf742b6cd1bd921cb5d78059ad", "patch": "@@ -90,7 +90,7 @@ macro call_intrinsic_match {\n         match $intrinsic {\n             $(\n                 sym::$name => {\n-                    assert!($substs.is_noop());\n+                    assert!($substs.is_empty());\n                     if let [$(ref $arg),*] = *$args {\n                         let ($($arg,)*) = (\n                             $(codegen_operand($fx, $arg),)*"}, {"sha": "63e9b58584c5f3f1c60ca399f6aac5de055bb830", "filename": "compiler/rustc_middle/src/ty/subst.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/43d508bb78e906bf742b6cd1bd921cb5d78059ad/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43d508bb78e906bf742b6cd1bd921cb5d78059ad/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs?ref=43d508bb78e906bf742b6cd1bd921cb5d78059ad", "patch": "@@ -275,10 +275,6 @@ impl<'a, 'tcx> InternalSubsts<'tcx> {\n         }\n     }\n \n-    pub fn is_noop(&self) -> bool {\n-        self.is_empty()\n-    }\n-\n     #[inline]\n     pub fn types(&'a self) -> impl DoubleEndedIterator<Item = Ty<'tcx>> + 'a {\n         self.iter()"}, {"sha": "195a4a4a653e182a20b9e86187064080d11393f2", "filename": "compiler/rustc_trait_selection/src/traits/specialize/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/43d508bb78e906bf742b6cd1bd921cb5d78059ad/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43d508bb78e906bf742b6cd1bd921cb5d78059ad/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs?ref=43d508bb78e906bf742b6cd1bd921cb5d78059ad", "patch": "@@ -484,7 +484,7 @@ crate fn to_pretty_impl_header(tcx: TyCtxt<'_>, impl_def_id: DefId) -> Option<St\n     let mut types_without_default_bounds = FxHashSet::default();\n     let sized_trait = tcx.lang_items().sized_trait();\n \n-    if !substs.is_noop() {\n+    if !substs.is_empty() {\n         types_without_default_bounds.extend(substs.types());\n         w.push('<');\n         w.push_str("}, {"sha": "f01b8267817483bc86473d63d053a04c0c44b88e", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/_impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/43d508bb78e906bf742b6cd1bd921cb5d78059ad/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43d508bb78e906bf742b6cd1bd921cb5d78059ad/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs?ref=43d508bb78e906bf742b6cd1bd921cb5d78059ad", "patch": "@@ -182,7 +182,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         // `foo.bar::<u32>(...)` -- the `Self` type here will be the\n         // type of `foo` (possibly adjusted), but we don't want to\n         // include that. We want just the `[_, u32]` part.\n-        if !method.substs.is_noop() {\n+        if !method.substs.is_empty() {\n             let method_generics = self.tcx.generics_of(method.def_id);\n             if !method_generics.params.is_empty() {\n                 let user_type_annotation = self.infcx.probe(|_| {\n@@ -211,7 +211,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     }\n \n     pub fn write_substs(&self, node_id: hir::HirId, substs: SubstsRef<'tcx>) {\n-        if !substs.is_noop() {\n+        if !substs.is_empty() {\n             debug!(\"write_substs({:?}, {:?}) in fcx {}\", node_id, substs, self.tag());\n \n             self.typeck_results.borrow_mut().node_substs_mut().insert(node_id, substs);"}]}