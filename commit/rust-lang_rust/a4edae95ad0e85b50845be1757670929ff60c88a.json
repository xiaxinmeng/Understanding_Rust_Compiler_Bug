{"sha": "a4edae95ad0e85b50845be1757670929ff60c88a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0ZWRhZTk1YWQwZTg1YjUwODQ1YmUxNzU3NjcwOTI5ZmY2MGM4OGE=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2017-07-14T11:05:21Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2017-07-22T18:38:40Z"}, "message": "Add conversions from references to NonZero pointers, Unique, and Shared", "tree": {"sha": "d36d8bff7d97d8193d7d37c0e4e76a1cd9b8b1e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d36d8bff7d97d8193d7d37c0e4e76a1cd9b8b1e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4edae95ad0e85b50845be1757670929ff60c88a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4edae95ad0e85b50845be1757670929ff60c88a", "html_url": "https://github.com/rust-lang/rust/commit/a4edae95ad0e85b50845be1757670929ff60c88a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4edae95ad0e85b50845be1757670929ff60c88a/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbd2b6b4842754495a2673df234e2496494245be", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbd2b6b4842754495a2673df234e2496494245be", "html_url": "https://github.com/rust-lang/rust/commit/cbd2b6b4842754495a2673df234e2496494245be"}], "stats": {"total": 57, "additions": 52, "deletions": 5}, "files": [{"sha": "a6cbab8497b6f36bc545d3779bffe717ed846b8e", "filename": "src/liballoc/btree/node.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a4edae95ad0e85b50845be1757670929ff60c88a/src%2Fliballoc%2Fbtree%2Fnode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4edae95ad0e85b50845be1757670929ff60c88a/src%2Fliballoc%2Fbtree%2Fnode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbtree%2Fnode.rs?ref=a4edae95ad0e85b50845be1757670929ff60c88a", "patch": "@@ -155,7 +155,7 @@ impl<K, V> BoxedNode<K, V> {\n \n     fn as_ptr(&self) -> NonZero<*const LeafNode<K, V>> {\n         unsafe {\n-            NonZero::new_unchecked(self.ptr.as_ptr())\n+            NonZero::from(self.ptr.as_ref())\n         }\n     }\n }"}, {"sha": "8a1d14b48a1a340132d68d6737796f62d811f534", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a4edae95ad0e85b50845be1757670929ff60c88a/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4edae95ad0e85b50845be1757670929ff60c88a/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=a4edae95ad0e85b50845be1757670929ff60c88a", "patch": "@@ -1126,7 +1126,7 @@ impl<T> Vec<T> {\n                 tail_start: end,\n                 tail_len: len - end,\n                 iter: range_slice.iter(),\n-                vec: Shared::new_unchecked(self as *mut _),\n+                vec: Shared::from(self),\n             }\n         }\n     }"}, {"sha": "fdd6c79ef2e9d74d8971033c588b7d0236cf76aa", "filename": "src/liballoc/vec_deque.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a4edae95ad0e85b50845be1757670929ff60c88a/src%2Fliballoc%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4edae95ad0e85b50845be1757670929ff60c88a/src%2Fliballoc%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec_deque.rs?ref=a4edae95ad0e85b50845be1757670929ff60c88a", "patch": "@@ -893,7 +893,7 @@ impl<T> VecDeque<T> {\n         self.head = drain_tail;\n \n         Drain {\n-            deque: unsafe { Shared::new_unchecked(self as *mut _) },\n+            deque: Shared::from(&mut *self),\n             after_tail: drain_head,\n             after_head: head,\n             iter: Iter {"}, {"sha": "3ff1068b93763581de7f71133b75bd8194eb1ea6", "filename": "src/libcore/nonzero.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a4edae95ad0e85b50845be1757670929ff60c88a/src%2Flibcore%2Fnonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4edae95ad0e85b50845be1757670929ff60c88a/src%2Flibcore%2Fnonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnonzero.rs?ref=a4edae95ad0e85b50845be1757670929ff60c88a", "patch": "@@ -90,3 +90,22 @@ impl<T: Zeroable> NonZero<T> {\n }\n \n impl<T: Zeroable+CoerceUnsized<U>, U: Zeroable> CoerceUnsized<NonZero<U>> for NonZero<T> {}\n+\n+impl<'a, T: ?Sized> From<&'a mut T> for NonZero<*mut T> {\n+    fn from(reference: &'a mut T) -> Self {\n+        NonZero(reference)\n+    }\n+}\n+\n+impl<'a, T: ?Sized> From<&'a mut T> for NonZero<*const T> {\n+    fn from(reference: &'a mut T) -> Self {\n+        let ptr: *mut T = reference;\n+        NonZero(ptr)\n+    }\n+}\n+\n+impl<'a, T: ?Sized> From<&'a T> for NonZero<*const T> {\n+    fn from(reference: &'a T) -> Self {\n+        NonZero(reference)\n+    }\n+}"}, {"sha": "9413a908cb18ca1fe2d4137d65464c8bcd1db865", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/a4edae95ad0e85b50845be1757670929ff60c88a/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4edae95ad0e85b50845be1757670929ff60c88a/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=a4edae95ad0e85b50845be1757670929ff60c88a", "patch": "@@ -1164,6 +1164,20 @@ impl<T: ?Sized> fmt::Pointer for Unique<T> {\n     }\n }\n \n+#[unstable(feature = \"unique\", issue = \"27730\")]\n+impl<'a, T: ?Sized> From<&'a mut T> for Unique<T> {\n+    fn from(reference: &'a mut T) -> Self {\n+        Unique { pointer: NonZero::from(reference), _marker: PhantomData }\n+    }\n+}\n+\n+#[unstable(feature = \"unique\", issue = \"27730\")]\n+impl<'a, T: ?Sized> From<&'a T> for Unique<T> {\n+    fn from(reference: &'a T) -> Self {\n+        Unique { pointer: NonZero::from(reference), _marker: PhantomData }\n+    }\n+}\n+\n /// A wrapper around a raw `*mut T` that indicates that the possessor\n /// of this wrapper has shared ownership of the referent. Useful for\n /// building abstractions like `Rc<T>`, `Arc<T>`, or doubly-linked lists, which\n@@ -1296,3 +1310,17 @@ impl<T: ?Sized> From<Unique<T>> for Shared<T> {\n         Shared { pointer: unique.pointer, _marker: PhantomData }\n     }\n }\n+\n+#[unstable(feature = \"shared\", issue = \"27730\")]\n+impl<'a, T: ?Sized> From<&'a mut T> for Shared<T> {\n+    fn from(reference: &'a mut T) -> Self {\n+        Shared { pointer: NonZero::from(reference), _marker: PhantomData }\n+    }\n+}\n+\n+#[unstable(feature = \"shared\", issue = \"27730\")]\n+impl<'a, T: ?Sized> From<&'a T> for Shared<T> {\n+    fn from(reference: &'a T) -> Self {\n+        Shared { pointer: NonZero::from(reference), _marker: PhantomData }\n+    }\n+}"}, {"sha": "ced73e9e4262767cd4f740200b8116b7ae876ccd", "filename": "src/librustc_data_structures/array_vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a4edae95ad0e85b50845be1757670929ff60c88a/src%2Flibrustc_data_structures%2Farray_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4edae95ad0e85b50845be1757670929ff60c88a/src%2Flibrustc_data_structures%2Farray_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Farray_vec.rs?ref=a4edae95ad0e85b50845be1757670929ff60c88a", "patch": "@@ -146,7 +146,7 @@ impl<A: Array> ArrayVec<A> {\n                 tail_start: end,\n                 tail_len: len - end,\n                 iter: range_slice.iter(),\n-                array_vec: Shared::new_unchecked(self as *mut _),\n+                array_vec: Shared::from(self),\n             }\n         }\n     }"}, {"sha": "3844690860b5a7aa9e6e15658ab2352f308231eb", "filename": "src/libstd/collections/hash/table.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a4edae95ad0e85b50845be1757670929ff60c88a/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4edae95ad0e85b50845be1757670929ff60c88a/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs?ref=a4edae95ad0e85b50845be1757670929ff60c88a", "patch": "@@ -877,7 +877,7 @@ impl<K, V> RawTable<K, V> {\n                 elems_left: elems_left,\n                 marker: marker::PhantomData,\n             },\n-            table: unsafe { Shared::new_unchecked(self) },\n+            table: Shared::from(self),\n             marker: marker::PhantomData,\n         }\n     }"}]}