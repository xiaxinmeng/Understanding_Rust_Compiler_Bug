{"sha": "0f002eb4c6e5c63a17ad2b1893645043ec7e5674", "node_id": "C_kwDOAAsO6NoAKDBmMDAyZWI0YzZlNWM2M2ExN2FkMmIxODkzNjQ1MDQzZWM3ZTU2NzQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-03-18T20:50:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-18T20:50:47Z"}, "message": "Rollup merge of #94848 - GuillaumeGomez:browser-ui-test-version, r=Mark-Simulacrum\n\nCompare installed browser-ui-test version to the one used in CI\n\nI happened a few times to run into (local) rustdoc GUI tests errors because I forgot to update my browser-ui-test version. I know at least two others who encountered the same problem so I think emitting a warning to let us know about this version mismatch would make it easier to figure out.\n\nSo now, I'm not too sure that this PR is the right approach because it requires to parse a Dockerfile, which feels pretty bad. I had the idea to instead store the browser-ui-test version into a docker ARG like:\n\n```docker\nARG BROWSER_UI_TEST_VERSION=0.8.0\n```\n\nAnd then use it as such in the command to make the parsing more reliable.\n\nOr we could store this version into a file and import this file into the Dockerfile and read it from the builder.\n\nAny preference or maybe another solution?\n\nr? ``@Mark-Simulacrum``", "tree": {"sha": "24c567197c45f38106fe123634c672f5993fffbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24c567197c45f38106fe123634c672f5993fffbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f002eb4c6e5c63a17ad2b1893645043ec7e5674", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiNPCnCRBK7hj4Ov3rIwAA0toIABWzxWszWHvMvsqyb9UzMxxs\n4oasB7XwMSYas2stHdgPPS/lETYIR3SzySjrpgbtK91evpQ9h2GrTSfMnE99xl9D\nQuklkZGI5q6cAhGWONPeOsjknkpICb6ZOSV2lMo4NVLbQ/vyTHHbjkVHq/9urtoc\ngvzUWgCdMZYQN3VArI5o8joRyb5ZazYa16b4zDgQxDsGSLCgTXBBuptcNEfsJyPW\nS/NddFfzGzcd157hJgjiA5PH75OkXENSLFy5JwT1jquPDcU/nnq3LtxJ/Xlv8wLe\nMWZNJNSQO30do075kfJnIaS4giUOrbmsFrS/HTuIxudg3X53frc/O1f/PXCE1PU=\n=Bi3l\n-----END PGP SIGNATURE-----\n", "payload": "tree 24c567197c45f38106fe123634c672f5993fffbb\nparent d15006ceca3854e507341dd8b7171a451351b4cd\nparent c8158e9f40e400c485bb96c5293d30c0b9600627\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1647636647 +0100\ncommitter GitHub <noreply@github.com> 1647636647 +0100\n\nRollup merge of #94848 - GuillaumeGomez:browser-ui-test-version, r=Mark-Simulacrum\n\nCompare installed browser-ui-test version to the one used in CI\n\nI happened a few times to run into (local) rustdoc GUI tests errors because I forgot to update my browser-ui-test version. I know at least two others who encountered the same problem so I think emitting a warning to let us know about this version mismatch would make it easier to figure out.\n\nSo now, I'm not too sure that this PR is the right approach because it requires to parse a Dockerfile, which feels pretty bad. I had the idea to instead store the browser-ui-test version into a docker ARG like:\n\n```docker\nARG BROWSER_UI_TEST_VERSION=0.8.0\n```\n\nAnd then use it as such in the command to make the parsing more reliable.\n\nOr we could store this version into a file and import this file into the Dockerfile and read it from the builder.\n\nAny preference or maybe another solution?\n\nr? ``@Mark-Simulacrum``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f002eb4c6e5c63a17ad2b1893645043ec7e5674", "html_url": "https://github.com/rust-lang/rust/commit/0f002eb4c6e5c63a17ad2b1893645043ec7e5674", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f002eb4c6e5c63a17ad2b1893645043ec7e5674/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d15006ceca3854e507341dd8b7171a451351b4cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/d15006ceca3854e507341dd8b7171a451351b4cd", "html_url": "https://github.com/rust-lang/rust/commit/d15006ceca3854e507341dd8b7171a451351b4cd"}, {"sha": "c8158e9f40e400c485bb96c5293d30c0b9600627", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8158e9f40e400c485bb96c5293d30c0b9600627", "html_url": "https://github.com/rust-lang/rust/commit/c8158e9f40e400c485bb96c5293d30c0b9600627"}], "stats": {"total": 70, "additions": 51, "deletions": 19}, "files": [{"sha": "c8b76809abad72aea0344b63258f9225fadbce93", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 41, "deletions": 17, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/0f002eb4c6e5c63a17ad2b1893645043ec7e5674/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f002eb4c6e5c63a17ad2b1893645043ec7e5674/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=0f002eb4c6e5c63a17ad2b1893645043ec7e5674", "patch": "@@ -836,22 +836,39 @@ impl Step for RustdocJSNotStd {\n     }\n }\n \n-fn check_if_browser_ui_test_is_installed_global(npm: &Path, global: bool) -> bool {\n+fn get_browser_ui_test_version_inner(npm: &Path, global: bool) -> Option<String> {\n     let mut command = Command::new(&npm);\n-    command.arg(\"list\").arg(\"--depth=0\");\n+    command.arg(\"list\").arg(\"--parseable\").arg(\"--long\").arg(\"--depth=0\");\n     if global {\n         command.arg(\"--global\");\n     }\n     let lines = command\n         .output()\n         .map(|output| String::from_utf8_lossy(&output.stdout).into_owned())\n         .unwrap_or(String::new());\n-    lines.contains(&\" browser-ui-test@\")\n+    lines.lines().find_map(|l| l.split(\":browser-ui-test@\").skip(1).next()).map(|v| v.to_owned())\n }\n \n-fn check_if_browser_ui_test_is_installed(npm: &Path) -> bool {\n-    check_if_browser_ui_test_is_installed_global(npm, false)\n-        || check_if_browser_ui_test_is_installed_global(npm, true)\n+fn get_browser_ui_test_version(npm: &Path) -> Option<String> {\n+    get_browser_ui_test_version_inner(npm, false)\n+        .or_else(|| get_browser_ui_test_version_inner(npm, true))\n+}\n+\n+fn compare_browser_ui_test_version(installed_version: &str, src: &Path) {\n+    match fs::read_to_string(\n+        src.join(\"src/ci/docker/host-x86_64/x86_64-gnu-tools/browser-ui-test.version\"),\n+    ) {\n+        Ok(v) => {\n+            if v.trim() != installed_version {\n+                eprintln!(\n+                    \"\u26a0\ufe0f Installed version of browser-ui-test (`{}`) is different than the \\\n+                     one used in the CI (`{}`)\",\n+                    installed_version, v\n+                );\n+            }\n+        }\n+        Err(e) => eprintln!(\"Couldn't find the CI browser-ui-test version: {:?}\", e),\n+    }\n }\n \n #[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n@@ -874,7 +891,7 @@ impl Step for RustdocGUI {\n                     .config\n                     .npm\n                     .as_ref()\n-                    .map(|p| check_if_browser_ui_test_is_installed(p))\n+                    .map(|p| get_browser_ui_test_version(p).is_some())\n                     .unwrap_or(false)\n         }))\n     }\n@@ -892,16 +909,23 @@ impl Step for RustdocGUI {\n \n         // The goal here is to check if the necessary packages are installed, and if not, we\n         // panic.\n-        if !check_if_browser_ui_test_is_installed(&npm) {\n-            eprintln!(\n-                \"error: rustdoc-gui test suite cannot be run because npm `browser-ui-test` \\\n-                 dependency is missing\",\n-            );\n-            eprintln!(\n-                \"If you want to install the `{0}` dependency, run `npm install {0}`\",\n-                \"browser-ui-test\",\n-            );\n-            panic!(\"Cannot run rustdoc-gui tests\");\n+        match get_browser_ui_test_version(&npm) {\n+            Some(version) => {\n+                // We also check the version currently used in CI and emit a warning if it's not the\n+                // same one.\n+                compare_browser_ui_test_version(&version, &builder.build.src);\n+            }\n+            None => {\n+                eprintln!(\n+                    \"error: rustdoc-gui test suite cannot be run because npm `browser-ui-test` \\\n+                     dependency is missing\",\n+                );\n+                eprintln!(\n+                    \"If you want to install the `{0}` dependency, run `npm install {0}`\",\n+                    \"browser-ui-test\",\n+                );\n+                panic!(\"Cannot run rustdoc-gui tests\");\n+            }\n         }\n \n         let out_dir = builder.test_out(self.target).join(\"rustdoc-gui\");"}, {"sha": "2358091a6dfbf86cd2847625b48b9c6fdf18738a", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-tools/Dockerfile", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0f002eb4c6e5c63a17ad2b1893645043ec7e5674/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/0f002eb4c6e5c63a17ad2b1893645043ec7e5674/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2FDockerfile?ref=0f002eb4c6e5c63a17ad2b1893645043ec7e5674", "patch": "@@ -65,14 +65,20 @@ RUN /scripts/cmake.sh\n COPY host-x86_64/x86_64-gnu-tools/checktools.sh /tmp/\n \n RUN curl -sL https://nodejs.org/dist/v14.4.0/node-v14.4.0-linux-x64.tar.xz | tar -xJ\n-ENV PATH=\"/node-v14.4.0-linux-x64/bin:${PATH}\"\n+ENV NODE_FOLDER=/node-v14.4.0-linux-x64/bin\n+ENV PATH=\"$NODE_FOLDER:${PATH}\"\n+\n+COPY host-x86_64/x86_64-gnu-tools/browser-ui-test.version /tmp/\n \n # For now, we need to use `--unsafe-perm=true` to go around an issue when npm tries\n # to create a new folder. For reference:\n # https://github.com/puppeteer/puppeteer/issues/375\n #\n # We also specify the version in case we need to update it to go around cache limitations.\n-RUN npm install -g browser-ui-test@0.8.3 --unsafe-perm=true\n+#\n+# The `browser-ui-test.version` file is also used by bootstrap to emit warnings in case\n+# the local version of the package is different than the one used by the CI.\n+RUN npm install -g browser-ui-test@$(head -n 1 /tmp/browser-ui-test.version) --unsafe-perm=true\n \n ENV RUST_CONFIGURE_ARGS \\\n   --build=x86_64-unknown-linux-gnu \\"}, {"sha": "fab77af2a1a7301ebd696324675e5d81f043b901", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-tools/browser-ui-test.version", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0f002eb4c6e5c63a17ad2b1893645043ec7e5674/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fbrowser-ui-test.version", "raw_url": "https://github.com/rust-lang/rust/raw/0f002eb4c6e5c63a17ad2b1893645043ec7e5674/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fbrowser-ui-test.version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fbrowser-ui-test.version?ref=0f002eb4c6e5c63a17ad2b1893645043ec7e5674", "patch": "@@ -0,0 +1 @@\n+0.8.3\n\\ No newline at end of file"}, {"sha": "c863f1b68c7fc860257c8fcc11f7c40c67ddf1bc", "filename": "src/ci/scripts/should-skip-this.sh", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0f002eb4c6e5c63a17ad2b1893645043ec7e5674/src%2Fci%2Fscripts%2Fshould-skip-this.sh", "raw_url": "https://github.com/rust-lang/rust/raw/0f002eb4c6e5c63a17ad2b1893645043ec7e5674/src%2Fci%2Fscripts%2Fshould-skip-this.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Fshould-skip-this.sh?ref=0f002eb4c6e5c63a17ad2b1893645043ec7e5674", "patch": "@@ -26,6 +26,7 @@ if [[ -n \"${CI_ONLY_WHEN_SUBMODULES_CHANGED-}\" ]]; then\n              src/test/rustdoc-gui \\\n              src/librustdoc \\\n              src/ci/docker/host-x86_64/x86_64-gnu-tools/Dockerfile \\\n+             src/ci/docker/host-x86_64/x86_64-gnu-tools/browser-ui-test.version \\\n              src/tools/rustdoc-gui); then\n         # There was a change in either rustdoc or in its GUI tests.\n         echo \"Rustdoc was updated\""}]}