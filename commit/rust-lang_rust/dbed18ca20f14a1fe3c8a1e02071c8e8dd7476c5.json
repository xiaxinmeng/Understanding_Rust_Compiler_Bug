{"sha": "dbed18ca20f14a1fe3c8a1e02071c8e8dd7476c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiZWQxOGNhMjBmMTRhMWZlM2M4YTFlMDIwNzFjOGU4ZGQ3NDc2YzU=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2017-07-05T21:49:33Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2017-07-08T06:55:28Z"}, "message": "Remove unused Add bounds in iterator for ranges impls.", "tree": {"sha": "6b30202468a279f1a53f8ce2238ce896783c4841", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b30202468a279f1a53f8ce2238ce896783c4841"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbed18ca20f14a1fe3c8a1e02071c8e8dd7476c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbed18ca20f14a1fe3c8a1e02071c8e8dd7476c5", "html_url": "https://github.com/rust-lang/rust/commit/dbed18ca20f14a1fe3c8a1e02071c8e8dd7476c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbed18ca20f14a1fe3c8a1e02071c8e8dd7476c5/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b6af9704ae183cb76027624f3f8a5d51eb7dc26", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b6af9704ae183cb76027624f3f8a5d51eb7dc26", "html_url": "https://github.com/rust-lang/rust/commit/4b6af9704ae183cb76027624f3f8a5d51eb7dc26"}], "stats": {"total": 32, "additions": 8, "deletions": 24}, "files": [{"sha": "11a8f8f7ee6b05c7fd2b6d4f2b6453a8faf63cca", "filename": "src/libcore/iter/range.rs", "status": "modified", "additions": 8, "deletions": 23, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/dbed18ca20f14a1fe3c8a1e02071c8e8dd7476c5/src%2Flibcore%2Fiter%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbed18ca20f14a1fe3c8a1e02071c8e8dd7476c5/src%2Flibcore%2Fiter%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Frange.rs?ref=dbed18ca20f14a1fe3c8a1e02071c8e8dd7476c5", "patch": "@@ -277,9 +277,7 @@ macro_rules! range_incl_trusted_len_impl {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<A: Step> Iterator for ops::Range<A> where\n-    for<'a> &'a A: Add<&'a A, Output = A>\n-{\n+impl<A: Step> Iterator for ops::Range<A> {\n     type Item = A;\n \n     #[inline]\n@@ -317,10 +315,7 @@ range_trusted_len_impl!(usize isize u8 i8 u16 i16 u32 i32 i64 u64);\n range_incl_trusted_len_impl!(usize isize u8 i8 u16 i16 u32 i32 i64 u64);\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<A: Step + Clone> DoubleEndedIterator for ops::Range<A> where\n-    for<'a> &'a A: Add<&'a A, Output = A>,\n-    for<'a> &'a A: Sub<&'a A, Output = A>\n-{\n+impl<A: Step + Clone> DoubleEndedIterator for ops::Range<A> {\n     #[inline]\n     fn next_back(&mut self) -> Option<A> {\n         if self.start < self.end {\n@@ -333,13 +328,10 @@ impl<A: Step + Clone> DoubleEndedIterator for ops::Range<A> where\n }\n \n #[unstable(feature = \"fused\", issue = \"35602\")]\n-impl<A> FusedIterator for ops::Range<A>\n-    where A: Step, for<'a> &'a A: Add<&'a A, Output = A> {}\n+impl<A: Step> FusedIterator for ops::Range<A> {}\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<A: Step> Iterator for ops::RangeFrom<A> where\n-    for<'a> &'a A: Add<&'a A, Output = A>\n-{\n+impl<A: Step> Iterator for ops::RangeFrom<A> {\n     type Item = A;\n \n     #[inline]\n@@ -356,13 +348,10 @@ impl<A: Step> Iterator for ops::RangeFrom<A> where\n }\n \n #[unstable(feature = \"fused\", issue = \"35602\")]\n-impl<A> FusedIterator for ops::RangeFrom<A>\n-    where A: Step, for<'a> &'a A: Add<&'a A, Output = A> {}\n+impl<A: Step> FusedIterator for ops::RangeFrom<A> {}\n \n #[unstable(feature = \"inclusive_range\", reason = \"recently added, follows RFC\", issue = \"28237\")]\n-impl<A: Step> Iterator for ops::RangeInclusive<A> where\n-    for<'a> &'a A: Add<&'a A, Output = A>\n-{\n+impl<A: Step> Iterator for ops::RangeInclusive<A> {\n     type Item = A;\n \n     #[inline]\n@@ -397,10 +386,7 @@ impl<A: Step> Iterator for ops::RangeInclusive<A> where\n }\n \n #[unstable(feature = \"inclusive_range\", reason = \"recently added, follows RFC\", issue = \"28237\")]\n-impl<A: Step> DoubleEndedIterator for ops::RangeInclusive<A> where\n-    for<'a> &'a A: Add<&'a A, Output = A>,\n-    for<'a> &'a A: Sub<&'a A, Output = A>\n-{\n+impl<A: Step> DoubleEndedIterator for ops::RangeInclusive<A> {\n     #[inline]\n     fn next_back(&mut self) -> Option<A> {\n         use cmp::Ordering::*;\n@@ -421,5 +407,4 @@ impl<A: Step> DoubleEndedIterator for ops::RangeInclusive<A> where\n }\n \n #[unstable(feature = \"fused\", issue = \"35602\")]\n-impl<A> FusedIterator for ops::RangeInclusive<A>\n-    where A: Step, for<'a> &'a A: Add<&'a A, Output = A> {}\n+impl<A: Step> FusedIterator for ops::RangeInclusive<A> {}"}, {"sha": "58794e3b35d531c897a3eee98be7e5ca5e33961b", "filename": "src/test/compile-fail/range-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dbed18ca20f14a1fe3c8a1e02071c8e8dd7476c5/src%2Ftest%2Fcompile-fail%2Frange-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbed18ca20f14a1fe3c8a1e02071c8e8dd7476c5/src%2Ftest%2Fcompile-fail%2Frange-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frange-1.rs?ref=dbed18ca20f14a1fe3c8a1e02071c8e8dd7476c5", "patch": "@@ -18,7 +18,6 @@ pub fn main() {\n     // Bool => does not implement iterator.\n     for i in false..true {}\n     //~^ ERROR `bool: std::iter::Step` is not satisfied\n-    //~^^ ERROR `for<'a> &'a bool: std::ops::Add` is not satisfied\n \n     // Unsized type.\n     let arr: &[_] = &[1, 2, 3];"}]}