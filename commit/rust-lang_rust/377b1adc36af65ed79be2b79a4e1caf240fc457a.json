{"sha": "377b1adc36af65ed79be2b79a4e1caf240fc457a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3N2IxYWRjMzZhZjY1ZWQ3OWJlMmI3OWE0ZTFjYWYyNDBmYzQ1N2E=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-05-05T23:35:15Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-05-07T16:30:00Z"}, "message": "std: Rename sys::foo2 modules to sys::foo\n\nNow that `std::old_io` has been removed for quite some time the naming real\nestate here has opened up to allow these modules to move back to their proper\nnames.", "tree": {"sha": "b9d19181fcc7bc264a4e944031237b445db6c688", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9d19181fcc7bc264a4e944031237b445db6c688"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/377b1adc36af65ed79be2b79a4e1caf240fc457a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/377b1adc36af65ed79be2b79a4e1caf240fc457a", "html_url": "https://github.com/rust-lang/rust/commit/377b1adc36af65ed79be2b79a4e1caf240fc457a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/377b1adc36af65ed79be2b79a4e1caf240fc457a/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05d5fcaa5ba0c385e1dc97037c89fae437634fc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/05d5fcaa5ba0c385e1dc97037c89fae437634fc3", "html_url": "https://github.com/rust-lang/rust/commit/05d5fcaa5ba0c385e1dc97037c89fae437634fc3"}], "stats": {"total": 94, "additions": 47, "deletions": 47}, "files": [{"sha": "fc5405ea7f69ec220f93fe971dbdc9446e494d40", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "patch": "@@ -23,7 +23,7 @@ use fmt;\n use ffi::OsString;\n use io::{self, Error, ErrorKind, SeekFrom, Seek, Read, Write};\n use path::{Path, PathBuf};\n-use sys::fs2 as fs_imp;\n+use sys::fs as fs_imp;\n use sys_common::{AsInnerMut, FromInner, AsInner};\n use vec::Vec;\n "}, {"sha": "bff9774bcd04a978b91608b1e2ddaff367da3852", "filename": "src/libstd/net/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fnet%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fnet%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fmod.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "patch": "@@ -15,7 +15,7 @@\n use prelude::v1::*;\n \n use io::{self, Error, ErrorKind};\n-use sys_common::net2 as net_imp;\n+use sys_common::net as net_imp;\n \n pub use self::ip::{IpAddr, Ipv4Addr, Ipv6Addr, Ipv6MulticastScope};\n pub use self::addr::{SocketAddr, SocketAddrV4, SocketAddrV6, ToSocketAddrs};"}, {"sha": "db2cdb7319880abb0bbf71a2a0c8e0e29f916072", "filename": "src/libstd/net/tcp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Ftcp.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "patch": "@@ -17,7 +17,7 @@ use io::prelude::*;\n use fmt;\n use io;\n use net::{ToSocketAddrs, SocketAddr, Shutdown};\n-use sys_common::net2 as net_imp;\n+use sys_common::net as net_imp;\n use sys_common::{AsInner, FromInner};\n \n /// A structure which represents a TCP stream between a local socket and a"}, {"sha": "67c7096904d6f9abe2e9da4cfba0d4d038650692", "filename": "src/libstd/net/udp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fnet%2Fudp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fnet%2Fudp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fudp.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "patch": "@@ -16,7 +16,7 @@ use prelude::v1::*;\n use fmt;\n use io::{self, Error, ErrorKind};\n use net::{ToSocketAddrs, SocketAddr, IpAddr};\n-use sys_common::net2 as net_imp;\n+use sys_common::net as net_imp;\n use sys_common::{AsInner, FromInner};\n \n /// A User Datagram Protocol socket."}, {"sha": "a94abba5d12bf7c25c1eafab788f0ce2057f8056", "filename": "src/libstd/os/android/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fos%2Fandroid%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fos%2Fandroid%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fandroid%2Fmod.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "patch": "@@ -15,5 +15,5 @@\n pub mod raw;\n \n pub mod fs {\n-    pub use sys::fs2::MetadataExt;\n+    pub use sys::fs::MetadataExt;\n }"}, {"sha": "1fe5fdd4e146c925fff3a86c4e6a01c3bd829c77", "filename": "src/libstd/os/bitrig/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fos%2Fbitrig%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fos%2Fbitrig%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fbitrig%2Fmod.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "patch": "@@ -15,5 +15,5 @@\n pub mod raw;\n \n pub mod fs {\n-    pub use sys::fs2::MetadataExt;\n+    pub use sys::fs::MetadataExt;\n }"}, {"sha": "d5c7c58173333fbee0410def34bc64e93efa9340", "filename": "src/libstd/os/dragonfly/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fos%2Fdragonfly%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fos%2Fdragonfly%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fdragonfly%2Fmod.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "patch": "@@ -15,5 +15,5 @@\n pub mod raw;\n \n pub mod fs {\n-    pub use sys::fs2::MetadataExt;\n+    pub use sys::fs::MetadataExt;\n }"}, {"sha": "28c9f8321f8a95163b319952bde45d2b74abb87f", "filename": "src/libstd/os/freebsd/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fos%2Ffreebsd%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fos%2Ffreebsd%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Ffreebsd%2Fmod.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "patch": "@@ -15,5 +15,5 @@\n pub mod raw;\n \n pub mod fs {\n-    pub use sys::fs2::MetadataExt;\n+    pub use sys::fs::MetadataExt;\n }"}, {"sha": "dd2878c6e383cd6933022927f0b56ab9b711e069", "filename": "src/libstd/os/ios/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fos%2Fios%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fos%2Fios%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fios%2Fmod.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "patch": "@@ -15,5 +15,5 @@\n pub mod raw;\n \n pub mod fs {\n-    pub use sys::fs2::MetadataExt;\n+    pub use sys::fs::MetadataExt;\n }"}, {"sha": "d2f9bcc3bcf9e8b993fb7288d9a6af763a6e6b6d", "filename": "src/libstd/os/linux/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fos%2Flinux%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fos%2Flinux%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Flinux%2Fmod.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "patch": "@@ -15,5 +15,5 @@\n pub mod raw;\n \n pub mod fs {\n-    pub use sys::fs2::MetadataExt;\n+    pub use sys::fs::MetadataExt;\n }"}, {"sha": "6c96909f382e8c16617587077582bece0030dfe9", "filename": "src/libstd/os/macos/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fos%2Fmacos%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fos%2Fmacos%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fmacos%2Fmod.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "patch": "@@ -15,5 +15,5 @@\n pub mod raw;\n \n pub mod fs {\n-    pub use sys::fs2::MetadataExt;\n+    pub use sys::fs::MetadataExt;\n }"}, {"sha": "413bb72f6e1c3e3ae2e93a20cc8de34f98131e06", "filename": "src/libstd/os/nacl/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fos%2Fnacl%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fos%2Fnacl%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fnacl%2Fmod.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "patch": "@@ -15,5 +15,5 @@\n pub mod raw;\n \n pub mod fs {\n-    pub use sys::fs2::MetadataExt;\n+    pub use sys::fs::MetadataExt;\n }"}, {"sha": "5654a7a0229634f45f0cc89cbbda9de7f98dac94", "filename": "src/libstd/os/openbsd/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fos%2Fopenbsd%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fos%2Fopenbsd%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fopenbsd%2Fmod.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "patch": "@@ -15,5 +15,5 @@\n pub mod raw;\n \n pub mod fs {\n-    pub use sys::fs2::MetadataExt;\n+    pub use sys::fs::MetadataExt;\n }"}, {"sha": "61398e16ba03613e4063433b155e1fb97d41a081", "filename": "src/libstd/process.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "patch": "@@ -21,11 +21,11 @@ use fmt;\n use io::{self, Error, ErrorKind};\n use path;\n use sync::mpsc::{channel, Receiver};\n-use sys::pipe2::{self, AnonPipe};\n-use sys::process2::Command as CommandImp;\n-use sys::process2::Process as ProcessImp;\n-use sys::process2::ExitStatus as ExitStatusImp;\n-use sys::process2::Stdio as StdioImp2;\n+use sys::pipe::{self, AnonPipe};\n+use sys::process::Command as CommandImp;\n+use sys::process::Process as ProcessImp;\n+use sys::process::ExitStatus as ExitStatusImp;\n+use sys::process::Stdio as StdioImp2;\n use sys_common::{AsInner, AsInnerMut};\n use thread;\n \n@@ -334,7 +334,7 @@ fn setup_io(io: &StdioImp, readable: bool)\n         Null => (StdioImp2::None, None),\n         Inherit => (StdioImp2::Inherit, None),\n         Piped => {\n-            let (reader, writer) = try!(pipe2::anon_pipe());\n+            let (reader, writer) = try!(pipe::anon_pipe());\n             if readable {\n                 (StdioImp2::Piped(reader), Some(writer))\n             } else {"}, {"sha": "b528575bbed33a4906f869b9e090c70048e97c63", "filename": "src/libstd/sys/common/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Fcommon%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Fcommon%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fmod.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "patch": "@@ -15,7 +15,7 @@ use prelude::v1::*;\n pub mod backtrace;\n pub mod condvar;\n pub mod mutex;\n-pub mod net2;\n+pub mod net;\n pub mod poison;\n pub mod remutex;\n pub mod rwlock;"}, {"sha": "7da7071670ab631c575590df8e6b6dbd95d71a6c", "filename": "src/libstd/sys/common/net.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Fcommon%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Fcommon%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fnet.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "previous_filename": "src/libstd/sys/common/net2.rs"}, {"sha": "a6953437497f65f57c276efcc5e70d4676318656", "filename": "src/libstd/sys/unix/ext/fs.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Funix%2Fext%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Funix%2Fext%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Ffs.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "patch": "@@ -102,7 +102,7 @@ impl OpenOptionsExt for OpenOptions {\n }\n \n #[unstable(feature = \"metadata_ext\", reason = \"recently added API\")]\n-pub struct Metadata(sys::fs2::FileAttr);\n+pub struct Metadata(sys::fs::FileAttr);\n \n #[unstable(feature = \"metadata_ext\", reason = \"recently added API\")]\n pub trait MetadataExt {\n@@ -111,7 +111,7 @@ pub trait MetadataExt {\n \n impl MetadataExt for fs::Metadata {\n     fn as_raw(&self) -> &Metadata {\n-        let inner: &sys::fs2::FileAttr = self.as_inner();\n+        let inner: &sys::fs::FileAttr = self.as_inner();\n         unsafe { mem::transmute(inner) }\n     }\n }\n@@ -187,7 +187,7 @@ impl DirEntryExt for fs::DirEntry {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub fn symlink<P: AsRef<Path>, Q: AsRef<Path>>(src: P, dst: Q) -> io::Result<()>\n {\n-    sys::fs2::symlink(src.as_ref(), dst.as_ref())\n+    sys::fs::symlink(src.as_ref(), dst.as_ref())\n }\n \n #[unstable(feature = \"dir_builder\", reason = \"recently added API\")]"}, {"sha": "79e59ddab5be5fca16ad7a6623f1f9f19fda9dac", "filename": "src/libstd/sys/unix/ext/io.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Funix%2Fext%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Funix%2Fext%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fio.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "patch": "@@ -16,7 +16,7 @@ use fs;\n use net;\n use os::raw;\n use sys;\n-use sys_common::{net2, AsInner, FromInner};\n+use sys_common::{self, AsInner, FromInner};\n \n /// Raw file descriptors.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -68,7 +68,7 @@ impl AsRawFd for fs::File {\n #[stable(feature = \"from_raw_os\", since = \"1.1.0\")]\n impl FromRawFd for fs::File {\n     unsafe fn from_raw_fd(fd: RawFd) -> fs::File {\n-        fs::File::from_inner(sys::fs2::File::from_inner(fd))\n+        fs::File::from_inner(sys::fs::File::from_inner(fd))\n     }\n }\n \n@@ -89,20 +89,20 @@ impl AsRawFd for net::UdpSocket {\n impl FromRawFd for net::TcpStream {\n     unsafe fn from_raw_fd(fd: RawFd) -> net::TcpStream {\n         let socket = sys::net::Socket::from_inner(fd);\n-        net::TcpStream::from_inner(net2::TcpStream::from_inner(socket))\n+        net::TcpStream::from_inner(sys_common::net::TcpStream::from_inner(socket))\n     }\n }\n #[stable(feature = \"from_raw_os\", since = \"1.1.0\")]\n impl FromRawFd for net::TcpListener {\n     unsafe fn from_raw_fd(fd: RawFd) -> net::TcpListener {\n         let socket = sys::net::Socket::from_inner(fd);\n-        net::TcpListener::from_inner(net2::TcpListener::from_inner(socket))\n+        net::TcpListener::from_inner(sys_common::net::TcpListener::from_inner(socket))\n     }\n }\n #[stable(feature = \"from_raw_os\", since = \"1.1.0\")]\n impl FromRawFd for net::UdpSocket {\n     unsafe fn from_raw_fd(fd: RawFd) -> net::UdpSocket {\n         let socket = sys::net::Socket::from_inner(fd);\n-        net::UdpSocket::from_inner(net2::UdpSocket::from_inner(socket))\n+        net::UdpSocket::from_inner(sys_common::net::UdpSocket::from_inner(socket))\n     }\n }"}, {"sha": "45d0d62a01575b100683ca54d5a555b0bc90b51c", "filename": "src/libstd/sys/unix/ext/process.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Funix%2Fext%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Funix%2Fext%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fprocess.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "patch": "@@ -58,7 +58,7 @@ pub trait ExitStatusExt {\n impl ExitStatusExt for process::ExitStatus {\n     fn signal(&self) -> Option<i32> {\n         match *self.as_inner() {\n-            sys::process2::ExitStatus::Signal(s) => Some(s),\n+            sys::process::ExitStatus::Signal(s) => Some(s),\n             _ => None\n         }\n     }"}, {"sha": "350161c751cb89fa6af78ad8a88cd1f19c880ed9", "filename": "src/libstd/sys/unix/fs.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffs.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "previous_filename": "src/libstd/sys/unix/fs2.rs"}, {"sha": "c1a4e8cee9ed4079fdbac145417ef76c7b520351", "filename": "src/libstd/sys/unix/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Funix%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Funix%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fmod.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "patch": "@@ -33,13 +33,13 @@ pub mod c;\n pub mod condvar;\n pub mod ext;\n pub mod fd;\n-pub mod fs2;\n+pub mod fs;\n pub mod mutex;\n pub mod net;\n pub mod os;\n pub mod os_str;\n-pub mod pipe2;\n-pub mod process2;\n+pub mod pipe;\n+pub mod process;\n pub mod rwlock;\n pub mod stack_overflow;\n pub mod sync;"}, {"sha": "e9d8c69fefb52035cbdb2a341211dcbf76ccab48", "filename": "src/libstd/sys/unix/pipe.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Funix%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Funix%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fpipe.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "previous_filename": "src/libstd/sys/unix/pipe2.rs"}, {"sha": "290310f4ad90181738f44866979318ad32ee3bdb", "filename": "src/libstd/sys/unix/process.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "patch": "@@ -18,9 +18,9 @@ use fmt;\n use io::{self, Error, ErrorKind};\n use libc::{self, pid_t, c_void, c_int, gid_t, uid_t};\n use ptr;\n-use sys::pipe2::AnonPipe;\n+use sys::pipe::AnonPipe;\n use sys::{self, c, cvt, cvt_r};\n-use sys::fs2::{File, OpenOptions};\n+use sys::fs::{File, OpenOptions};\n \n ////////////////////////////////////////////////////////////////////////////////\n // Command\n@@ -141,7 +141,7 @@ impl Process {\n \n         let (envp, _a, _b) = make_envp(cfg.env.as_ref());\n         let (argv, _a) = make_argv(&cfg.program, &cfg.args);\n-        let (input, output) = try!(sys::pipe2::anon_pipe());\n+        let (input, output) = try!(sys::pipe::anon_pipe());\n \n         let pid = unsafe {\n             match libc::fork() {", "previous_filename": "src/libstd/sys/unix/process2.rs"}, {"sha": "822e1b370c2cf4cd31cbbe85aad58ca93ebe0c30", "filename": "src/libstd/sys/windows/ext/fs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Ffs.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "patch": "@@ -125,7 +125,7 @@ impl MetadataExt for Metadata {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub fn symlink_file<P: AsRef<Path>, Q: AsRef<Path>>(src: P, dst: Q)\n                                                     -> io::Result<()> {\n-    sys::fs2::symlink_inner(src.as_ref(), dst.as_ref(), false)\n+    sys::fs::symlink_inner(src.as_ref(), dst.as_ref(), false)\n }\n \n /// Creates a new directory symlink on the filesystem.\n@@ -146,5 +146,5 @@ pub fn symlink_file<P: AsRef<Path>, Q: AsRef<Path>>(src: P, dst: Q)\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub fn symlink_dir<P: AsRef<Path>, Q: AsRef<Path>>(src: P, dst: Q)\n                                                    -> io::Result<()> {\n-    sys::fs2::symlink_inner(src.as_ref(), dst.as_ref(), true)\n+    sys::fs::symlink_inner(src.as_ref(), dst.as_ref(), true)\n }"}, {"sha": "f4717eb2425e16aa50590243c373f60967a8daf7", "filename": "src/libstd/sys/windows/ext/io.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Fio.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "patch": "@@ -13,7 +13,7 @@\n use fs;\n use os::windows::raw;\n use net;\n-use sys_common::{net2, AsInner, FromInner};\n+use sys_common::{self, AsInner, FromInner};\n use sys;\n \n /// Raw HANDLEs.\n@@ -61,7 +61,7 @@ impl AsRawHandle for fs::File {\n impl FromRawHandle for fs::File {\n     unsafe fn from_raw_handle(handle: RawHandle) -> fs::File {\n         let handle = handle as ::libc::HANDLE;\n-        fs::File::from_inner(sys::fs2::File::from_inner(handle))\n+        fs::File::from_inner(sys::fs::File::from_inner(handle))\n     }\n }\n \n@@ -113,20 +113,20 @@ impl AsRawSocket for net::UdpSocket {\n impl FromRawSocket for net::TcpStream {\n     unsafe fn from_raw_socket(sock: RawSocket) -> net::TcpStream {\n         let sock = sys::net::Socket::from_inner(sock);\n-        net::TcpStream::from_inner(net2::TcpStream::from_inner(sock))\n+        net::TcpStream::from_inner(sys_common::net::TcpStream::from_inner(sock))\n     }\n }\n #[stable(feature = \"from_raw_os\", since = \"1.1.0\")]\n impl FromRawSocket for net::TcpListener {\n     unsafe fn from_raw_socket(sock: RawSocket) -> net::TcpListener {\n         let sock = sys::net::Socket::from_inner(sock);\n-        net::TcpListener::from_inner(net2::TcpListener::from_inner(sock))\n+        net::TcpListener::from_inner(sys_common::net::TcpListener::from_inner(sock))\n     }\n }\n #[stable(feature = \"from_raw_os\", since = \"1.1.0\")]\n impl FromRawSocket for net::UdpSocket {\n     unsafe fn from_raw_socket(sock: RawSocket) -> net::UdpSocket {\n         let sock = sys::net::Socket::from_inner(sock);\n-        net::UdpSocket::from_inner(net2::UdpSocket::from_inner(sock))\n+        net::UdpSocket::from_inner(sys_common::net::UdpSocket::from_inner(sock))\n     }\n }"}, {"sha": "03a56e2958a6e9f485b050323ac42274b744b9eb", "filename": "src/libstd/sys/windows/fs.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "previous_filename": "src/libstd/sys/windows/fs2.rs"}, {"sha": "4c30f0f86604f1552f9ec569b8a1402a5646a77c", "filename": "src/libstd/sys/windows/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "patch": "@@ -25,14 +25,14 @@ pub mod backtrace;\n pub mod c;\n pub mod condvar;\n pub mod ext;\n-pub mod fs2;\n+pub mod fs;\n pub mod handle;\n pub mod mutex;\n pub mod net;\n pub mod os;\n pub mod os_str;\n-pub mod pipe2;\n-pub mod process2;\n+pub mod pipe;\n+pub mod process;\n pub mod rwlock;\n pub mod stack_overflow;\n pub mod sync;"}, {"sha": "b441d8beedbc04dd7ab3569aafab81af3fc399c6", "filename": "src/libstd/sys/windows/pipe.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Fwindows%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Fwindows%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fpipe.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "previous_filename": "src/libstd/sys/windows/pipe2.rs"}, {"sha": "032a349b00eff11e211f6a6a6da2e7f3766d3003", "filename": "src/libstd/sys/windows/process.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Fwindows%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/377b1adc36af65ed79be2b79a4e1caf240fc457a/src%2Flibstd%2Fsys%2Fwindows%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fprocess.rs?ref=377b1adc36af65ed79be2b79a4e1caf240fc457a", "patch": "@@ -26,9 +26,9 @@ use path::Path;\n use ptr;\n use sync::{StaticMutex, MUTEX_INIT};\n use sys::c;\n-use sys::fs2::{OpenOptions, File};\n+use sys::fs::{OpenOptions, File};\n use sys::handle::Handle;\n-use sys::pipe2::AnonPipe;\n+use sys::pipe::AnonPipe;\n use sys::stdio;\n use sys::{self, cvt};\n use sys_common::{AsInner, FromInner};", "previous_filename": "src/libstd/sys/windows/process2.rs"}]}