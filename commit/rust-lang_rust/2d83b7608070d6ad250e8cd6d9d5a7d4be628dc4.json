{"sha": "2d83b7608070d6ad250e8cd6d9d5a7d4be628dc4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkODNiNzYwODA3MGQ2YWQyNTBlOGNkNmQ5ZDVhN2Q0YmU2MjhkYzQ=", "commit": {"author": {"name": "Remy Rakic", "email": "remy.rakic@gmail.com", "date": "2019-12-05T16:41:25Z"}, "committer": {"name": "Remy Rakic", "email": "remy.rakic@gmail.com", "date": "2019-12-05T16:41:25Z"}, "message": "update comment to explain the importance of this check more clearly", "tree": {"sha": "b673bd31a20af2b2aef0a3fab16da616900d6fe7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b673bd31a20af2b2aef0a3fab16da616900d6fe7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d83b7608070d6ad250e8cd6d9d5a7d4be628dc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d83b7608070d6ad250e8cd6d9d5a7d4be628dc4", "html_url": "https://github.com/rust-lang/rust/commit/2d83b7608070d6ad250e8cd6d9d5a7d4be628dc4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d83b7608070d6ad250e8cd6d9d5a7d4be628dc4/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a760c6ea12a1d15334879b40787f6f0a7056d9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a760c6ea12a1d15334879b40787f6f0a7056d9d", "html_url": "https://github.com/rust-lang/rust/commit/4a760c6ea12a1d15334879b40787f6f0a7056d9d"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "82ffafbedf858724571b055a50119eced8224008", "filename": "src/librustc_mir/transform/check_consts/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2d83b7608070d6ad250e8cd6d9d5a7d4be628dc4/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d83b7608070d6ad250e8cd6d9d5a7d4be628dc4/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fmod.rs?ref=2d83b7608070d6ad250e8cd6d9d5a7d4be628dc4", "patch": "@@ -79,8 +79,9 @@ impl ConstKind {\n \n             // Note: this is deliberately checking for `is_const_fn_raw`, as the `is_const_fn`\n             // checks take into account the `rustc_const_unstable` attribute combined with enabled\n-            // feature gates. An unstable `const fn` could otherwise be considered \"not const\"\n-            // by const qualification. See issue #67053 for more details.\n+            // feature gates. Otherwise, const qualification would _not check_ whether this\n+            // function body follows the `const fn` rules, as an unstable `const fn` would\n+            // be considered \"not const\". More details are available in issue #67053.\n             HirKind::Fn if tcx.is_const_fn_raw(def_id) => ConstKind::ConstFn,\n             HirKind::Fn => return None,\n "}]}