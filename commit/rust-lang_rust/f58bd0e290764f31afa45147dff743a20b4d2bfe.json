{"sha": "f58bd0e290764f31afa45147dff743a20b4d2bfe", "node_id": "C_kwDOAAsO6NoAKGY1OGJkMGUyOTA3NjRmMzFhZmE0NTE0N2RmZjc0M2EyMGI0ZDJiZmU", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-02-15T11:43:41Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-02-16T15:26:00Z"}, "message": "`if $c:expr { Some($r:expr) } else { None }` =>> `$c.then(|| $r)`", "tree": {"sha": "2a58fae7af5e9562bd293741c22bcb619cf68710", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a58fae7af5e9562bd293741c22bcb619cf68710"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f58bd0e290764f31afa45147dff743a20b4d2bfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f58bd0e290764f31afa45147dff743a20b4d2bfe", "html_url": "https://github.com/rust-lang/rust/commit/f58bd0e290764f31afa45147dff743a20b4d2bfe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f58bd0e290764f31afa45147dff743a20b4d2bfe/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b99a58301268f2c5fabe396006c0198cc4b5824", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b99a58301268f2c5fabe396006c0198cc4b5824", "html_url": "https://github.com/rust-lang/rust/commit/9b99a58301268f2c5fabe396006c0198cc4b5824"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "7c6fd9f6f1ec185de1ebdeb30ca238c14a6f6683", "filename": "src/driver/aot.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f58bd0e290764f31afa45147dff743a20b4d2bfe/src%2Fdriver%2Faot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f58bd0e290764f31afa45147dff743a20b4d2bfe/src%2Fdriver%2Faot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Faot.rs?ref=f58bd0e290764f31afa45147dff743a20b4d2bfe", "patch": "@@ -248,17 +248,13 @@ fn reuse_workproduct_for_cgu(\n             dwarf_object: None,\n             bytecode: None,\n         },\n-        module_global_asm: if has_global_asm {\n-            Some(CompiledModule {\n-                name: cgu.name().to_string(),\n-                kind: ModuleKind::Regular,\n-                object: Some(obj_out_global_asm),\n-                dwarf_object: None,\n-                bytecode: None,\n-            })\n-        } else {\n-            None\n-        },\n+        module_global_asm: has_global_asm.then(|| CompiledModule {\n+            name: cgu.name().to_string(),\n+            kind: ModuleKind::Regular,\n+            object: Some(obj_out_global_asm),\n+            dwarf_object: None,\n+            bytecode: None,\n+        }),\n         existing_work_product: Some((cgu.work_product_id(), work_product)),\n     })\n }"}]}