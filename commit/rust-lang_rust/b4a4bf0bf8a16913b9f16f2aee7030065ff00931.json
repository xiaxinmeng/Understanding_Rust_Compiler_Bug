{"sha": "b4a4bf0bf8a16913b9f16f2aee7030065ff00931", "node_id": "C_kwDOAAsO6NoAKGI0YTRiZjBiZjhhMTY5MTNiOWYxNmYyYWVlNzAzMDA2NWZmMDA5MzE", "commit": {"author": {"name": "Szymon Giba\u0142a", "email": "szymongib@gmail.com", "date": "2022-01-29T04:55:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-29T04:55:47Z"}, "message": "Fix formatting of comments in empty structs (#5171)\n\n* Fix formatting of comments in empty structs\r\n\r\n* Add tests\r\n\r\n* Add single line tests\r\n\r\n* Fix block comments\r\n\r\n* Revert changes of test source files", "tree": {"sha": "6c4dbe59a8034a4f81f8783cc55616fd7bafaf83", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c4dbe59a8034a4f81f8783cc55616fd7bafaf83"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4a4bf0bf8a16913b9f16f2aee7030065ff00931", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh9MjTCRBK7hj4Ov3rIwAAOnwIABVrKZCeE1I2DWjyivweaypi\nmwpOpBbcB+Pgeb84G/msJDzEXwgPgOLPz06scdXhflV6NO4c04SdqjbC0jASJXQb\ncRnS00B8GoMMrTS8+QRMJvfp0o3+V3dzSSxFDCnBtX4KBoVZLKf2/XbykXKVpUL7\nGui8BgFT1++5M+xfpTy67/zgnWYXocHOVCTrNQkY7hlKyi0+YX0GS7rYqwaPkafe\nvEjpRcCcYvu/5nlK4Gkn7IPamH00O8bCAtEU65dNpML0+GSY0CPG4RJjX2djQlJ/\nMYcaAzCzYj3Ks+ZK1+5erDyaORfzzm7a4EncQISEFeP2IG12FGwhYJcI1MG/23w=\n=zp/G\n-----END PGP SIGNATURE-----\n", "payload": "tree 6c4dbe59a8034a4f81f8783cc55616fd7bafaf83\nparent 5c558e2c11f33e1e25932607458396be883d36b5\nauthor Szymon Giba\u0142a <szymongib@gmail.com> 1643432147 +0100\ncommitter GitHub <noreply@github.com> 1643432147 -0600\n\nFix formatting of comments in empty structs (#5171)\n\n* Fix formatting of comments in empty structs\r\n\r\n* Add tests\r\n\r\n* Add single line tests\r\n\r\n* Fix block comments\r\n\r\n* Revert changes of test source files"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4a4bf0bf8a16913b9f16f2aee7030065ff00931", "html_url": "https://github.com/rust-lang/rust/commit/b4a4bf0bf8a16913b9f16f2aee7030065ff00931", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4a4bf0bf8a16913b9f16f2aee7030065ff00931/comments", "author": {"login": "Szymongib", "id": 19947566, "node_id": "MDQ6VXNlcjE5OTQ3NTY2", "avatar_url": "https://avatars.githubusercontent.com/u/19947566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Szymongib", "html_url": "https://github.com/Szymongib", "followers_url": "https://api.github.com/users/Szymongib/followers", "following_url": "https://api.github.com/users/Szymongib/following{/other_user}", "gists_url": "https://api.github.com/users/Szymongib/gists{/gist_id}", "starred_url": "https://api.github.com/users/Szymongib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Szymongib/subscriptions", "organizations_url": "https://api.github.com/users/Szymongib/orgs", "repos_url": "https://api.github.com/users/Szymongib/repos", "events_url": "https://api.github.com/users/Szymongib/events{/privacy}", "received_events_url": "https://api.github.com/users/Szymongib/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c558e2c11f33e1e25932607458396be883d36b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c558e2c11f33e1e25932607458396be883d36b5", "html_url": "https://github.com/rust-lang/rust/commit/5c558e2c11f33e1e25932607458396be883d36b5"}], "stats": {"total": 274, "additions": 251, "deletions": 23}, "files": [{"sha": "4c7a33c86d2f0c0dcfe2d99c898a872ca31fa9c8", "filename": "src/items.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b4a4bf0bf8a16913b9f16f2aee7030065ff00931/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4a4bf0bf8a16913b9f16f2aee7030065ff00931/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=b4a4bf0bf8a16913b9f16f2aee7030065ff00931", "patch": "@@ -1374,17 +1374,21 @@ fn format_empty_struct_or_tuple(\n         result.push_str(&offset.to_string_with_newline(context.config))\n     }\n     result.push_str(opener);\n-    match rewrite_missing_comment(span, Shape::indented(offset, context.config), context) {\n+\n+    // indented shape for proper indenting of multi-line comments\n+    let shape = Shape::indented(offset.block_indent(context.config), context.config);\n+    match rewrite_missing_comment(span, shape, context) {\n         Some(ref s) if s.is_empty() => (),\n         Some(ref s) => {\n-            if !is_single_line(s) || first_line_contains_single_line_comment(s) {\n+            let is_multi_line = !is_single_line(s);\n+            if is_multi_line || first_line_contains_single_line_comment(s) {\n                 let nested_indent_str = offset\n                     .block_indent(context.config)\n                     .to_string_with_newline(context.config);\n                 result.push_str(&nested_indent_str);\n             }\n             result.push_str(s);\n-            if last_line_contains_single_line_comment(s) {\n+            if is_multi_line || last_line_contains_single_line_comment(s) {\n                 result.push_str(&offset.to_string_with_newline(context.config));\n             }\n         }"}, {"sha": "35d6e21affeeb57a21275d234bdbb4259d504356", "filename": "tests/source/issue_4854.rs", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/rust-lang/rust/blob/b4a4bf0bf8a16913b9f16f2aee7030065ff00931/tests%2Fsource%2Fissue_4854.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4a4bf0bf8a16913b9f16f2aee7030065ff00931/tests%2Fsource%2Fissue_4854.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue_4854.rs?ref=b4a4bf0bf8a16913b9f16f2aee7030065ff00931", "patch": "@@ -0,0 +1,113 @@\n+struct Struct {\n+    // Multiline comment\n+    // should be formatted\n+    // properly.\n+}\n+\n+struct Struct2 {\n+    // This formatting\n+// Should be changed\n+}\n+\n+struct Struct3(\n+    // This\n+    // is\n+    // correct\n+);\n+\n+struct Struct4(\n+    // This\n+// is\n+// not\n+// correct\n+);\n+\n+struct Struct5 {\n+    /*\n+    Comment block\n+    with many lines.\n+    */\n+}\n+\n+struct Struct6(\n+    /*\n+    Comment block\n+    with many lines.\n+    */\n+);\n+\n+struct Struct7 {\n+    /*\n+Invalid\n+format\n+*/\n+}\n+\n+struct Struct8(\n+    /*\n+Invalid\n+format\n+*/\n+);\n+\n+struct Struct9 { /* bar */ }\n+\n+struct Struct10 { /* bar\n+baz\n+*/ }\n+\n+mod module {\n+    struct Struct {\n+        // Multiline comment\n+        // should be formatted\n+        // properly.\n+    }\n+\n+    struct Struct2 {\n+        // This formatting\n+// Should be changed\n+    }\n+\n+    struct Struct3(\n+        // This\n+        // is\n+        // correct\n+    );\n+\n+    struct Struct4(\n+        // This\n+    // is\n+    // not\n+// correct\n+    );\n+\n+    struct Struct5 {\n+        /*\n+        Comment block\n+        with many lines.\n+         */\n+    }\n+\n+    struct Struct6(\n+        /*\n+        Comment block\n+        with many lines.\n+        */\n+    );\n+\n+    struct Struct7 {\n+        /*\n+Invalid\n+format\n+*/\n+    }\n+\n+    struct Struct8(\n+        /*\n+Invalid\n+format\n+*/\n+    );\n+\n+    struct Struct9 { /* bar */ }\n+}"}, {"sha": "be4b7a8c42e3e38dbe195d5fddfca2f466aca015", "filename": "tests/target/comments-in-lists/format-doc-comments.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b4a4bf0bf8a16913b9f16f2aee7030065ff00931/tests%2Ftarget%2Fcomments-in-lists%2Fformat-doc-comments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4a4bf0bf8a16913b9f16f2aee7030065ff00931/tests%2Ftarget%2Fcomments-in-lists%2Fformat-doc-comments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fcomments-in-lists%2Fformat-doc-comments.rs?ref=b4a4bf0bf8a16913b9f16f2aee7030065ff00931", "patch": "@@ -25,9 +25,8 @@ pub enum E {\n }\n \n pub enum E2 {\n-    // This can be changed once https://github.com/rust-lang/rustfmt/issues/4854 is fixed\n-// Expand as needed, numbers should be ascending according to the stage\n-// through the inclusion pipeline, or according to the descriptions\n+    // Expand as needed, numbers should be ascending according to the stage\n+    // through the inclusion pipeline, or according to the descriptions\n }\n \n pub struct S {\n@@ -42,9 +41,8 @@ pub struct S {\n }\n \n pub struct S2 {\n-    // This can be changed once https://github.com/rust-lang/rustfmt/issues/4854 is fixed\n-// Expand as needed, numbers should be ascending according to the stage\n-// through the inclusion pipeline, or according to the descriptions\n+    // Expand as needed, numbers should be ascending according to the stage\n+    // through the inclusion pipeline, or according to the descriptions\n }\n \n fn foo("}, {"sha": "db4da6223721c33ae8667aebb049cb704ac38a77", "filename": "tests/target/comments-in-lists/wrap-comments-false.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b4a4bf0bf8a16913b9f16f2aee7030065ff00931/tests%2Ftarget%2Fcomments-in-lists%2Fwrap-comments-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4a4bf0bf8a16913b9f16f2aee7030065ff00931/tests%2Ftarget%2Fcomments-in-lists%2Fwrap-comments-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fcomments-in-lists%2Fwrap-comments-false.rs?ref=b4a4bf0bf8a16913b9f16f2aee7030065ff00931", "patch": "@@ -13,9 +13,8 @@ pub enum E {\n }\n \n pub enum E2 {\n-    // This can be changed once https://github.com/rust-lang/rustfmt/issues/4854 is fixed\n-// Expand as needed, numbers should be ascending according to the stage\n-// through the inclusion pipeline, or according to the descriptions\n+    // Expand as needed, numbers should be ascending according to the stage\n+    // through the inclusion pipeline, or according to the descriptions\n }\n \n pub struct S {\n@@ -30,9 +29,8 @@ pub struct S {\n }\n \n pub struct S2 {\n-    // This can be changed once https://github.com/rust-lang/rustfmt/issues/4854 is fixed\n-// Expand as needed, numbers should be ascending according to the stage\n-// through the inclusion pipeline, or according to the descriptions\n+    // Expand as needed, numbers should be ascending according to the stage\n+    // through the inclusion pipeline, or according to the descriptions\n }\n \n fn foo("}, {"sha": "9b9147eb1247a4ce383cb2187bc5892995d6617b", "filename": "tests/target/comments-in-lists/wrap-comments-not-normalized.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b4a4bf0bf8a16913b9f16f2aee7030065ff00931/tests%2Ftarget%2Fcomments-in-lists%2Fwrap-comments-not-normalized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4a4bf0bf8a16913b9f16f2aee7030065ff00931/tests%2Ftarget%2Fcomments-in-lists%2Fwrap-comments-not-normalized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fcomments-in-lists%2Fwrap-comments-not-normalized.rs?ref=b4a4bf0bf8a16913b9f16f2aee7030065ff00931", "patch": "@@ -14,8 +14,8 @@ pub enum E {\n \n pub enum E2 {\n     // This can be changed once https://github.com/rust-lang/rustfmt/issues/4854 is fixed\n-// Expand as needed, numbers should be ascending according to the stage\n-// through the inclusion pipeline, or according to the descriptions\n+    // Expand as needed, numbers should be ascending according to the stage\n+    // through the inclusion pipeline, or according to the descriptions\n }\n \n pub enum E3 {\n@@ -42,8 +42,8 @@ pub struct S {\n \n pub struct S2 {\n     // This can be changed once https://github.com/rust-lang/rustfmt/issues/4854 is fixed\n-// Expand as needed, numbers should be ascending according to the stage\n-// through the inclusion pipeline, or according to the descriptions\n+    // Expand as needed, numbers should be ascending according to the stage\n+    // through the inclusion pipeline, or according to the descriptions\n }\n \n pub struct S3 {"}, {"sha": "c1531d22a4a70cd29aae2693dd70950ac27a262a", "filename": "tests/target/comments-in-lists/wrap-comments-true.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b4a4bf0bf8a16913b9f16f2aee7030065ff00931/tests%2Ftarget%2Fcomments-in-lists%2Fwrap-comments-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4a4bf0bf8a16913b9f16f2aee7030065ff00931/tests%2Ftarget%2Fcomments-in-lists%2Fwrap-comments-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fcomments-in-lists%2Fwrap-comments-true.rs?ref=b4a4bf0bf8a16913b9f16f2aee7030065ff00931", "patch": "@@ -15,8 +15,8 @@ pub enum E {\n \n pub enum E2 {\n     // This can be changed once https://github.com/rust-lang/rustfmt/issues/4854 is fixed\n-// Expand as needed, numbers should be ascending according to the stage\n-// through the inclusion pipeline, or according to the descriptions\n+    // Expand as needed, numbers should be ascending according to the stage\n+    // through the inclusion pipeline, or according to the descriptions\n }\n \n pub enum E3 {\n@@ -43,8 +43,8 @@ pub struct S {\n \n pub struct S2 {\n     // This can be changed once https://github.com/rust-lang/rustfmt/issues/4854 is fixed\n-// Expand as needed, numbers should be ascending according to the stage\n-// through the inclusion pipeline, or according to the descriptions\n+    // Expand as needed, numbers should be ascending according to the stage\n+    // through the inclusion pipeline, or according to the descriptions\n }\n \n pub struct S3 {"}, {"sha": "a81c5a5171fb58544e4ef69575f1690b0da03a4c", "filename": "tests/target/issue_4854.rs", "status": "added", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/b4a4bf0bf8a16913b9f16f2aee7030065ff00931/tests%2Ftarget%2Fissue_4854.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4a4bf0bf8a16913b9f16f2aee7030065ff00931/tests%2Ftarget%2Fissue_4854.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue_4854.rs?ref=b4a4bf0bf8a16913b9f16f2aee7030065ff00931", "patch": "@@ -0,0 +1,115 @@\n+struct Struct {\n+    // Multiline comment\n+    // should be formatted\n+    // properly.\n+}\n+\n+struct Struct2 {\n+    // This formatting\n+    // Should be changed\n+}\n+\n+struct Struct3(\n+    // This\n+    // is\n+    // correct\n+);\n+\n+struct Struct4(\n+    // This\n+    // is\n+    // not\n+    // correct\n+);\n+\n+struct Struct5 {\n+    /*\n+    Comment block\n+    with many lines.\n+    */\n+}\n+\n+struct Struct6(\n+    /*\n+    Comment block\n+    with many lines.\n+    */\n+);\n+\n+struct Struct7 {\n+    /*\n+    Invalid\n+    format\n+    */\n+}\n+\n+struct Struct8(\n+    /*\n+    Invalid\n+    format\n+    */\n+);\n+\n+struct Struct9 {/* bar */}\n+\n+struct Struct10 {\n+    /* bar\n+    baz\n+    */\n+}\n+\n+mod module {\n+    struct Struct {\n+        // Multiline comment\n+        // should be formatted\n+        // properly.\n+    }\n+\n+    struct Struct2 {\n+        // This formatting\n+        // Should be changed\n+    }\n+\n+    struct Struct3(\n+        // This\n+        // is\n+        // correct\n+    );\n+\n+    struct Struct4(\n+        // This\n+        // is\n+        // not\n+        // correct\n+    );\n+\n+    struct Struct5 {\n+        /*\n+        Comment block\n+        with many lines.\n+         */\n+    }\n+\n+    struct Struct6(\n+        /*\n+        Comment block\n+        with many lines.\n+        */\n+    );\n+\n+    struct Struct7 {\n+        /*\n+        Invalid\n+        format\n+        */\n+    }\n+\n+    struct Struct8(\n+        /*\n+        Invalid\n+        format\n+        */\n+    );\n+\n+    struct Struct9 {/* bar */}\n+}"}]}