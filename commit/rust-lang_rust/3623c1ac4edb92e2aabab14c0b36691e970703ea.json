{"sha": "3623c1ac4edb92e2aabab14c0b36691e970703ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2MjNjMWFjNGVkYjkyZTJhYWJhYjE0YzBiMzY2OTFlOTcwNzAzZWE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-03-13T02:33:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-13T02:33:54Z"}, "message": "Rollup merge of #59130 - RalfJung:non-null, r=rkruppe\n\nNote that NonNull does not launder shared references for mutation\n\nSee https://users.rust-lang.org/t/relative-pointer-an-abstraction-to-build-movable-self-referential-types/26186/6", "tree": {"sha": "749e9bd12ca639b8b8d3c6cbe3b67d7db200e8fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/749e9bd12ca639b8b8d3c6cbe3b67d7db200e8fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3623c1ac4edb92e2aabab14c0b36691e970703ea", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJciGwSCRBK7hj4Ov3rIwAAdHIIADt4cn+V1S3rdn2I7BmG/BCU\nbHBe08pQ4wsqmvAeLGfCrAJSAFo7YJnuWSQDZNJDD7v6JQFKwYoGKBM8dM6sM67I\nVADGHa7RmWvlnJ2sD0EKKBHoAglwJiHvrfnGC1KCDdQFRYBuag46MmTCoDf9RPI1\ngq9q1qmpb4c7zYAvaR6Ja+QXJ32YdhTOYZG1Wz4obam7S1JcErWQnTQPlcAdM2XA\nBvY241LprU7XZsKHJkM9XqAnN3BDDf3AzFOzD9JlvPeCJN+tCXjbuhSqAiEOGTxQ\neZxDWT6M2ZI/KCtav14Gyt54MDdSfvOKp9VD7MbEZvD+vxSNQ3Q5Gmq2xBCGvug=\n=Xinb\n-----END PGP SIGNATURE-----\n", "payload": "tree 749e9bd12ca639b8b8d3c6cbe3b67d7db200e8fc\nparent b70a98f261d8cef1ba2b76a4d2d19b5076b04dbf\nparent 8ec8639bf3f8c7b17d91028f698abc3067cd56ea\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1552444434 +0100\ncommitter GitHub <noreply@github.com> 1552444434 +0100\n\nRollup merge of #59130 - RalfJung:non-null, r=rkruppe\n\nNote that NonNull does not launder shared references for mutation\n\nSee https://users.rust-lang.org/t/relative-pointer-an-abstraction-to-build-movable-self-referential-types/26186/6\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3623c1ac4edb92e2aabab14c0b36691e970703ea", "html_url": "https://github.com/rust-lang/rust/commit/3623c1ac4edb92e2aabab14c0b36691e970703ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3623c1ac4edb92e2aabab14c0b36691e970703ea/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b70a98f261d8cef1ba2b76a4d2d19b5076b04dbf", "url": "https://api.github.com/repos/rust-lang/rust/commits/b70a98f261d8cef1ba2b76a4d2d19b5076b04dbf", "html_url": "https://github.com/rust-lang/rust/commit/b70a98f261d8cef1ba2b76a4d2d19b5076b04dbf"}, {"sha": "8ec8639bf3f8c7b17d91028f698abc3067cd56ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ec8639bf3f8c7b17d91028f698abc3067cd56ea", "html_url": "https://github.com/rust-lang/rust/commit/8ec8639bf3f8c7b17d91028f698abc3067cd56ea"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "a9a029d606d6f84315931b1b69381dfe663c1de4", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3623c1ac4edb92e2aabab14c0b36691e970703ea/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3623c1ac4edb92e2aabab14c0b36691e970703ea/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=3623c1ac4edb92e2aabab14c0b36691e970703ea", "patch": "@@ -2874,6 +2874,16 @@ impl<'a, T: ?Sized> From<NonNull<T>> for Unique<T> {\n /// Usually this won't be necessary; covariance is correct for most safe abstractions,\n /// such as Box, Rc, Arc, Vec, and LinkedList. This is the case because they\n /// provide a public API that follows the normal shared XOR mutable rules of Rust.\n+///\n+/// Notice that `NonNull<T>` has a `From` instance for `&T`. However, this does\n+/// not change the fact that mutating through a (pointer derived from a) shared\n+/// reference is undefined behavior unless the mutation happens inside an\n+/// [`UnsafeCell<T>`]. The same goes for creating a mutable reference from a shared\n+/// reference. When using this `From` instance without an `UnsafeCell<T>`,\n+/// it is your responsibility to ensure that `as_mut` is never called, and `as_ptr`\n+/// is never used for mutation.\n+///\n+/// [`UnsafeCell<T>`]: ../cell/struct.UnsafeCell.html\n #[stable(feature = \"nonnull\", since = \"1.25.0\")]\n #[repr(transparent)]\n #[rustc_layout_scalar_valid_range_start(1)]"}]}