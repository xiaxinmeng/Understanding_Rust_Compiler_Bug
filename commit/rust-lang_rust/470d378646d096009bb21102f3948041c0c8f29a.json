{"sha": "470d378646d096009bb21102f3948041c0c8f29a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3MGQzNzg2NDZkMDk2MDA5YmIyMTEwMmYzOTQ4MDQxYzBjOGYyOWE=", "commit": {"author": {"name": "Alex Macleod", "email": "alex@macleod.io", "date": "2021-07-22T18:16:33Z"}, "committer": {"name": "Alex Macleod", "email": "alex@macleod.io", "date": "2021-07-22T18:43:29Z"}, "message": "Add regression tests for the impl_trait_in_bindings ICEs", "tree": {"sha": "8c1f70cfc791530e6b3d47c629a828874cdb7cf6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c1f70cfc791530e6b3d47c629a828874cdb7cf6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/470d378646d096009bb21102f3948041c0c8f29a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/470d378646d096009bb21102f3948041c0c8f29a", "html_url": "https://github.com/rust-lang/rust/commit/470d378646d096009bb21102f3948041c0c8f29a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/470d378646d096009bb21102f3948041c0c8f29a/comments", "author": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1158367a6d60d3e2a8c68d6212a8007992b1dbf0", "url": "https://api.github.com/repos/rust-lang/rust/commits/1158367a6d60d3e2a8c68d6212a8007992b1dbf0", "html_url": "https://github.com/rust-lang/rust/commit/1158367a6d60d3e2a8c68d6212a8007992b1dbf0"}], "stats": {"total": 221, "additions": 221, "deletions": 0}, "files": [{"sha": "7a64799302332c6a7ce5fba3ca6e212642c018dd", "filename": "src/test/ui/impl-trait/issues/issue-54600.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-54600.rs", "raw_url": "https://github.com/rust-lang/rust/raw/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-54600.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-54600.rs?ref=470d378646d096009bb21102f3948041c0c8f29a", "patch": "@@ -0,0 +1,7 @@\n+use std::fmt::Debug;\n+\n+fn main() {\n+    let x: Option<impl Debug> = Some(44_u32);\n+    //~^ `impl Trait` not allowed outside of function and method return types\n+    println!(\"{:?}\", x);\n+}"}, {"sha": "4d0c32c6bb708ac05a5de9a1c665733a18a6f67c", "filename": "src/test/ui/impl-trait/issues/issue-54600.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-54600.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-54600.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-54600.stderr?ref=470d378646d096009bb21102f3948041c0c8f29a", "patch": "@@ -0,0 +1,9 @@\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n+  --> $DIR/issue-54600.rs:4:19\n+   |\n+LL |     let x: Option<impl Debug> = Some(44_u32);\n+   |                   ^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0562`."}, {"sha": "030d5715d5739e7f01d0f4fcf79174158bb46a62", "filename": "src/test/ui/impl-trait/issues/issue-54840.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-54840.rs", "raw_url": "https://github.com/rust-lang/rust/raw/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-54840.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-54840.rs?ref=470d378646d096009bb21102f3948041c0c8f29a", "patch": "@@ -0,0 +1,7 @@\n+use std::ops::Add;\n+\n+fn main() {\n+    let i: i32 = 0;\n+    let j: &impl Add = &i;\n+    //~^ `impl Trait` not allowed outside of function and method return types\n+}"}, {"sha": "b8046b7482f72ab9de8ef3618b42ddce5b1dfc14", "filename": "src/test/ui/impl-trait/issues/issue-54840.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-54840.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-54840.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-54840.stderr?ref=470d378646d096009bb21102f3948041c0c8f29a", "patch": "@@ -0,0 +1,9 @@\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n+  --> $DIR/issue-54840.rs:5:13\n+   |\n+LL |     let j: &impl Add = &i;\n+   |             ^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0562`."}, {"sha": "aac33b3b3e5c5c5869fed9c7b0ac1c2fcb9c39e4", "filename": "src/test/ui/impl-trait/issues/issue-58504.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-58504.rs", "raw_url": "https://github.com/rust-lang/rust/raw/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-58504.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-58504.rs?ref=470d378646d096009bb21102f3948041c0c8f29a", "patch": "@@ -0,0 +1,12 @@\n+#![feature(generators, generator_trait, never_type)]\n+\n+use std::ops::Generator;\n+\n+fn mk_gen() -> impl Generator<Return=!, Yield=()> {\n+    || { loop { yield; } }\n+}\n+\n+fn main() {\n+    let gens: [impl Generator<Return=!, Yield=()>;2] = [ mk_gen(), mk_gen() ];\n+    //~^ `impl Trait` not allowed outside of function and method return types\n+}"}, {"sha": "ff1010f0661823dd0e19a6638ea7cd2803a65f6c", "filename": "src/test/ui/impl-trait/issues/issue-58504.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-58504.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-58504.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-58504.stderr?ref=470d378646d096009bb21102f3948041c0c8f29a", "patch": "@@ -0,0 +1,9 @@\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n+  --> $DIR/issue-58504.rs:10:16\n+   |\n+LL |     let gens: [impl Generator<Return=!, Yield=()>;2] = [ mk_gen(), mk_gen() ];\n+   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0562`."}, {"sha": "5fe18b6e9b54a15d6ca029303d3594a20a045f1c", "filename": "src/test/ui/impl-trait/issues/issue-58956.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-58956.rs", "raw_url": "https://github.com/rust-lang/rust/raw/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-58956.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-58956.rs?ref=470d378646d096009bb21102f3948041c0c8f29a", "patch": "@@ -0,0 +1,14 @@\n+trait Lam {}\n+\n+pub struct B;\n+impl Lam for B {}\n+pub struct Wrap<T>(T);\n+\n+const _A: impl Lam = {\n+    //~^ `impl Trait` not allowed outside of function and method return types\n+    let x: Wrap<impl Lam> = Wrap(B);\n+    //~^ `impl Trait` not allowed outside of function and method return types\n+    x.0\n+};\n+\n+fn main() {}"}, {"sha": "00ebf170ab2febbf0130360c9316a457c2418a34", "filename": "src/test/ui/impl-trait/issues/issue-58956.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-58956.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-58956.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-58956.stderr?ref=470d378646d096009bb21102f3948041c0c8f29a", "patch": "@@ -0,0 +1,15 @@\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n+  --> $DIR/issue-58956.rs:7:11\n+   |\n+LL | const _A: impl Lam = {\n+   |           ^^^^^^^^\n+\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n+  --> $DIR/issue-58956.rs:9:17\n+   |\n+LL |     let x: Wrap<impl Lam> = Wrap(B);\n+   |                 ^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0562`."}, {"sha": "d4dc2fd877b67683141c81f7787ff0a613b6239e", "filename": "src/test/ui/impl-trait/issues/issue-70971.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-70971.rs", "raw_url": "https://github.com/rust-lang/rust/raw/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-70971.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-70971.rs?ref=470d378646d096009bb21102f3948041c0c8f29a", "patch": "@@ -0,0 +1,4 @@\n+fn main() {\n+    let x : (impl Copy,) = (true,);\n+    //~^ `impl Trait` not allowed outside of function and method return types\n+}"}, {"sha": "31993da3e32f3474417c8aad8ba666ba1845fb59", "filename": "src/test/ui/impl-trait/issues/issue-70971.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-70971.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-70971.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-70971.stderr?ref=470d378646d096009bb21102f3948041c0c8f29a", "patch": "@@ -0,0 +1,9 @@\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n+  --> $DIR/issue-70971.rs:2:14\n+   |\n+LL |     let x : (impl Copy,) = (true,);\n+   |              ^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0562`."}, {"sha": "f72533d42e1fac0af149bac595366154954c2f03", "filename": "src/test/ui/impl-trait/issues/issue-79099.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-79099.rs", "raw_url": "https://github.com/rust-lang/rust/raw/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-79099.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-79099.rs?ref=470d378646d096009bb21102f3948041c0c8f29a", "patch": "@@ -0,0 +1,10 @@\n+struct Bug {\n+    V1: [(); {\n+        let f: impl core::future::Future<Output = u8> = async { 1 };\n+        //~^ `impl Trait` not allowed outside of function and method return types\n+        //~| expected identifier\n+        1\n+    }],\n+}\n+\n+fn main() {}"}, {"sha": "121536d3f68574173338da6f9b91eadad43f0c21", "filename": "src/test/ui/impl-trait/issues/issue-79099.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-79099.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-79099.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-79099.stderr?ref=470d378646d096009bb21102f3948041c0c8f29a", "patch": "@@ -0,0 +1,20 @@\n+error: expected identifier, found `1`\n+  --> $DIR/issue-79099.rs:3:65\n+   |\n+LL |         let f: impl core::future::Future<Output = u8> = async { 1 };\n+   |                                                         -----   ^ expected identifier\n+   |                                                         |\n+   |                                                         `async` blocks are only allowed in Rust 2018 or later\n+   |\n+   = help: set `edition = \"2018\"` in `Cargo.toml`\n+   = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n+\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n+  --> $DIR/issue-79099.rs:3:16\n+   |\n+LL |         let f: impl core::future::Future<Output = u8> = async { 1 };\n+   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0562`."}, {"sha": "479bad97cdf32e214d46aa9f17045a945ae5105b", "filename": "src/test/ui/impl-trait/issues/issue-84919.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-84919.rs", "raw_url": "https://github.com/rust-lang/rust/raw/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-84919.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-84919.rs?ref=470d378646d096009bb21102f3948041c0c8f29a", "patch": "@@ -0,0 +1,9 @@\n+trait Trait {}\n+impl Trait for () {}\n+\n+fn foo<'a: 'a>() {\n+    let _x: impl Trait = ();\n+    //~^ `impl Trait` not allowed outside of function and method return types\n+}\n+\n+fn main() {}"}, {"sha": "bb1bcfefe64ee1834f7d9807068aea4deef64681", "filename": "src/test/ui/impl-trait/issues/issue-84919.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-84919.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-84919.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-84919.stderr?ref=470d378646d096009bb21102f3948041c0c8f29a", "patch": "@@ -0,0 +1,9 @@\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n+  --> $DIR/issue-84919.rs:5:13\n+   |\n+LL |     let _x: impl Trait = ();\n+   |             ^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0562`."}, {"sha": "8dc76f4f752a18171b0d47700f30e2e32f9d93a8", "filename": "src/test/ui/impl-trait/issues/issue-86201.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-86201.rs", "raw_url": "https://github.com/rust-lang/rust/raw/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-86201.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-86201.rs?ref=470d378646d096009bb21102f3948041c0c8f29a", "patch": "@@ -0,0 +1,13 @@\n+#![feature(unboxed_closures)]\n+#![feature(min_type_alias_impl_trait)]\n+\n+type FunType = impl Fn<()>;\n+//~^ could not find defining uses\n+static STATIC_FN: FunType = some_fn;\n+//~^ mismatched types\n+\n+fn some_fn() {}\n+\n+fn main() {\n+    let _: <FunType as FnOnce<()>>::Output = STATIC_FN();\n+}"}, {"sha": "b1460096ded66d3119023e21099d1886ce602f53", "filename": "src/test/ui/impl-trait/issues/issue-86201.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-86201.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-86201.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-86201.stderr?ref=470d378646d096009bb21102f3948041c0c8f29a", "patch": "@@ -0,0 +1,21 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-86201.rs:6:29\n+   |\n+LL | type FunType = impl Fn<()>;\n+   |                ----------- the expected opaque type\n+LL |\n+LL | static STATIC_FN: FunType = some_fn;\n+   |                             ^^^^^^^ expected opaque type, found fn item\n+   |\n+   = note: expected opaque type `impl Fn<()>`\n+                  found fn item `fn() {some_fn}`\n+\n+error: could not find defining uses\n+  --> $DIR/issue-86201.rs:4:16\n+   |\n+LL | type FunType = impl Fn<()>;\n+   |                ^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "8953ff8158148f7a952eebdfa1fbd3137b4cd4fb", "filename": "src/test/ui/impl-trait/issues/issue-86642.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-86642.rs", "raw_url": "https://github.com/rust-lang/rust/raw/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-86642.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-86642.rs?ref=470d378646d096009bb21102f3948041c0c8f29a", "patch": "@@ -0,0 +1,8 @@\n+static x: impl Fn(&str) -> Result<&str, ()> = move |source| {\n+    //~^ `impl Trait` not allowed outside of function and method return types\n+    let res = (move |source| Ok(source))(source);\n+    let res = res.or((move |source| Ok(source))(source));\n+    res\n+};\n+\n+fn main() {}"}, {"sha": "2fc0a6fe1f50e6da6320d6d2ed5982bdbb0ffe18", "filename": "src/test/ui/impl-trait/issues/issue-86642.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-86642.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-86642.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-86642.stderr?ref=470d378646d096009bb21102f3948041c0c8f29a", "patch": "@@ -0,0 +1,9 @@\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n+  --> $DIR/issue-86642.rs:1:11\n+   |\n+LL | static x: impl Fn(&str) -> Result<&str, ()> = move |source| {\n+   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0562`."}, {"sha": "2f2bfe147bd6659df0a31072ea42e857e045f54c", "filename": "src/test/ui/impl-trait/issues/issue-87295.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-87295.rs", "raw_url": "https://github.com/rust-lang/rust/raw/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-87295.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-87295.rs?ref=470d378646d096009bb21102f3948041c0c8f29a", "patch": "@@ -0,0 +1,18 @@\n+trait Trait {\n+    type Output;\n+}\n+impl Trait for () {\n+    type Output = i32;\n+}\n+\n+struct Struct<F>(F);\n+impl<F> Struct<F> {\n+    pub fn new(_: F) -> Self {\n+        todo!()\n+    }\n+}\n+\n+fn main() {\n+    let _do_not_waste: Struct<impl Trait<Output = i32>> = Struct::new(());\n+    //~^ `impl Trait` not allowed outside of function and method return types\n+}"}, {"sha": "f5c7603ce49181735f7e8e2efd42d3b7717cf16b", "filename": "src/test/ui/impl-trait/issues/issue-87295.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-87295.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/470d378646d096009bb21102f3948041c0c8f29a/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-87295.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-87295.stderr?ref=470d378646d096009bb21102f3948041c0c8f29a", "patch": "@@ -0,0 +1,9 @@\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n+  --> $DIR/issue-87295.rs:16:31\n+   |\n+LL |     let _do_not_waste: Struct<impl Trait<Output = i32>> = Struct::new(());\n+   |                               ^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0562`."}]}