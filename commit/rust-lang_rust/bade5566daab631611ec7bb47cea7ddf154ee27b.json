{"sha": "bade5566daab631611ec7bb47cea7ddf154ee27b", "node_id": "C_kwDOAAsO6NoAKGJhZGU1NTY2ZGFhYjYzMTYxMWVjN2JiNDdjZWE3ZGRmMTU0ZWUyN2I", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-27T05:11:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-27T05:11:55Z"}, "message": "Rollup merge of #108502 - lenko-d:cannot_relate_region, r=compiler-errors\n\nDon't trigger error for ReError when other region is empty.\n\nFixes [#107988](https://github.com/rust-lang/rust/issues/107988)", "tree": {"sha": "3f985f8bcf10958a89e1d5e717240b5fb6915a80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f985f8bcf10958a89e1d5e717240b5fb6915a80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bade5566daab631611ec7bb47cea7ddf154ee27b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj/DubCRBK7hj4Ov3rIwAAg/QIAJ4766LpF5Unn1G2EYoO27Z8\n1O+4U3Y3ZHPOwJkKGatPgKQWu4JL5wbDpy4pKby6itxh8emdz67VCYS7nsefQQQC\ngXh2jubSwarI/CpqOXdruWHPVSHRY84gs3W8Hm+j+CCMCG992VxXXuszDB6zEHG5\nu/f7xIrVWsUekFET8RQOJs2SZMHDj4llIn+KDNFV1cZFQ9MaArNYURy1oPBvkutb\nk2L1rKwnGQlK+3v7qYwE7uOGCWJ6BaNT4Piu/FbJBGzVQDH+wWqNWLs59WwPBbsn\nOK1rMF5SRlfzXATTNpKqf5j3dNmIC24Iuls7Iw1KRjW3R9EDBsJkAFI+Q5IGneU=\n=xKOd\n-----END PGP SIGNATURE-----\n", "payload": "tree 3f985f8bcf10958a89e1d5e717240b5fb6915a80\nparent 37338b8d996b05864d74d0a71b2c173bc41f890d\nparent 65e56616fc71744b20b02622200d42860561b20c\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1677474715 +0100\ncommitter GitHub <noreply@github.com> 1677474715 +0100\n\nRollup merge of #108502 - lenko-d:cannot_relate_region, r=compiler-errors\n\nDon't trigger error for ReError when other region is empty.\n\nFixes [#107988](https://github.com/rust-lang/rust/issues/107988)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bade5566daab631611ec7bb47cea7ddf154ee27b", "html_url": "https://github.com/rust-lang/rust/commit/bade5566daab631611ec7bb47cea7ddf154ee27b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bade5566daab631611ec7bb47cea7ddf154ee27b/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37338b8d996b05864d74d0a71b2c173bc41f890d", "url": "https://api.github.com/repos/rust-lang/rust/commits/37338b8d996b05864d74d0a71b2c173bc41f890d", "html_url": "https://github.com/rust-lang/rust/commit/37338b8d996b05864d74d0a71b2c173bc41f890d"}, {"sha": "65e56616fc71744b20b02622200d42860561b20c", "url": "https://api.github.com/repos/rust-lang/rust/commits/65e56616fc71744b20b02622200d42860561b20c", "html_url": "https://github.com/rust-lang/rust/commit/65e56616fc71744b20b02622200d42860561b20c"}], "stats": {"total": 52, "additions": 50, "deletions": 2}, "files": [{"sha": "a499018d3a2b08279006371ab545801ae6e61f43", "filename": "compiler/rustc_infer/src/infer/lexical_region_resolve/mod.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bade5566daab631611ec7bb47cea7ddf154ee27b/compiler%2Frustc_infer%2Fsrc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bade5566daab631611ec7bb47cea7ddf154ee27b/compiler%2Frustc_infer%2Fsrc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Flexical_region_resolve%2Fmod.rs?ref=bade5566daab631611ec7bb47cea7ddf154ee27b", "patch": "@@ -438,7 +438,11 @@ impl<'cx, 'tcx> LexicalResolver<'cx, 'tcx> {\n             }\n             (VarValue::Value(a), VarValue::Empty(_)) => {\n                 match *a {\n-                    ReLateBound(..) | ReErased | ReError(_) => {\n+                    // this is always on an error path,\n+                    // so it doesn't really matter if it's shorter or longer than an empty region\n+                    ReError(_) => false,\n+\n+                    ReLateBound(..) | ReErased => {\n                         bug!(\"cannot relate region: {:?}\", a);\n                     }\n \n@@ -467,7 +471,11 @@ impl<'cx, 'tcx> LexicalResolver<'cx, 'tcx> {\n             }\n             (VarValue::Empty(a_ui), VarValue::Value(b)) => {\n                 match *b {\n-                    ReLateBound(..) | ReErased | ReError(_) => {\n+                    // this is always on an error path,\n+                    // so it doesn't really matter if it's shorter or longer than an empty region\n+                    ReError(_) => false,\n+\n+                    ReLateBound(..) | ReErased => {\n                         bug!(\"cannot relate region: {:?}\", b);\n                     }\n "}, {"sha": "92cb60a06a2b0bae16bf35954db27428b5776588", "filename": "tests/ui/lifetimes/issue-107988.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/bade5566daab631611ec7bb47cea7ddf154ee27b/tests%2Fui%2Flifetimes%2Fissue-107988.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bade5566daab631611ec7bb47cea7ddf154ee27b/tests%2Fui%2Flifetimes%2Fissue-107988.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flifetimes%2Fissue-107988.rs?ref=bade5566daab631611ec7bb47cea7ddf154ee27b", "patch": "@@ -0,0 +1,13 @@\n+pub trait TraitEngine<'tcx>: 'tcx {}\n+\n+pub trait TraitEngineExt<'tcx> {\n+    fn register_predicate_obligations(&mut self);\n+}\n+\n+impl<T: ?Sized + TraitEngine<'tcx>> TraitEngineExt<'tcx> for T {\n+  //~^ ERROR use of undeclared lifetime name `'tcx`\n+  //~| ERROR use of undeclared lifetime name `'tcx`\n+    fn register_predicate_obligations(&mut self) {}\n+}\n+\n+fn main() {}"}, {"sha": "c2d8c7050e97f710eac422c83dad8bbd9841db02", "filename": "tests/ui/lifetimes/issue-107988.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/bade5566daab631611ec7bb47cea7ddf154ee27b/tests%2Fui%2Flifetimes%2Fissue-107988.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bade5566daab631611ec7bb47cea7ddf154ee27b/tests%2Fui%2Flifetimes%2Fissue-107988.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flifetimes%2Fissue-107988.stderr?ref=bade5566daab631611ec7bb47cea7ddf154ee27b", "patch": "@@ -0,0 +1,27 @@\n+error[E0261]: use of undeclared lifetime name `'tcx`\n+  --> $DIR/issue-107988.rs:7:52\n+   |\n+LL | impl<T: ?Sized + TraitEngine<'tcx>> TraitEngineExt<'tcx> for T {\n+   |      -                                             ^^^^ undeclared lifetime\n+   |      |\n+   |      help: consider introducing lifetime `'tcx` here: `'tcx,`\n+\n+error[E0261]: use of undeclared lifetime name `'tcx`\n+  --> $DIR/issue-107988.rs:7:30\n+   |\n+LL | impl<T: ?Sized + TraitEngine<'tcx>> TraitEngineExt<'tcx> for T {\n+   |                              ^^^^ undeclared lifetime\n+   |\n+   = note: for more information on higher-ranked polymorphism, visit https://doc.rust-lang.org/nomicon/hrtb.html\n+help: consider making the bound lifetime-generic with a new `'tcx` lifetime\n+   |\n+LL | impl<T: ?Sized + for<'tcx> TraitEngine<'tcx>> TraitEngineExt<'tcx> for T {\n+   |                  +++++++++\n+help: consider introducing lifetime `'tcx` here\n+   |\n+LL | impl<'tcx, T: ?Sized + TraitEngine<'tcx>> TraitEngineExt<'tcx> for T {\n+   |      +++++\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0261`."}]}