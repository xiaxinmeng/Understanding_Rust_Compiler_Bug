{"sha": "b298a58c782f1434b09d4aaea6bffd4f99d3e7f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyOThhNThjNzgyZjE0MzRiMDlkNGFhZWE2YmZmZDRmOTlkM2U3ZjY=", "commit": {"author": {"name": "Natalie Boehm", "email": "nmb56@pitt.edu", "date": "2017-08-04T16:25:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-04T16:25:05Z"}, "message": "Update String Deref to explain why using &String does not always work", "tree": {"sha": "fb8297a2ba213dccf8ce93296f2c714cb1f0a35d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb8297a2ba213dccf8ce93296f2c714cb1f0a35d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b298a58c782f1434b09d4aaea6bffd4f99d3e7f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b298a58c782f1434b09d4aaea6bffd4f99d3e7f6", "html_url": "https://github.com/rust-lang/rust/commit/b298a58c782f1434b09d4aaea6bffd4f99d3e7f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b298a58c782f1434b09d4aaea6bffd4f99d3e7f6/comments", "author": {"login": "natboehm", "id": 10409478, "node_id": "MDQ6VXNlcjEwNDA5NDc4", "avatar_url": "https://avatars.githubusercontent.com/u/10409478?v=4", "gravatar_id": "", "url": "https://api.github.com/users/natboehm", "html_url": "https://github.com/natboehm", "followers_url": "https://api.github.com/users/natboehm/followers", "following_url": "https://api.github.com/users/natboehm/following{/other_user}", "gists_url": "https://api.github.com/users/natboehm/gists{/gist_id}", "starred_url": "https://api.github.com/users/natboehm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/natboehm/subscriptions", "organizations_url": "https://api.github.com/users/natboehm/orgs", "repos_url": "https://api.github.com/users/natboehm/repos", "events_url": "https://api.github.com/users/natboehm/events{/privacy}", "received_events_url": "https://api.github.com/users/natboehm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2a5af7a4c7424acc9acc52161fb57210a4bb219", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2a5af7a4c7424acc9acc52161fb57210a4bb219", "html_url": "https://github.com/rust-lang/rust/commit/f2a5af7a4c7424acc9acc52161fb57210a4bb219"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "110699c1e03bdd0e3768c6fca68b25c1703a7b7e", "filename": "src/liballoc/string.rs", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/b298a58c782f1434b09d4aaea6bffd4f99d3e7f6/src%2Fliballoc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b298a58c782f1434b09d4aaea6bffd4f99d3e7f6/src%2Fliballoc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstring.rs?ref=b298a58c782f1434b09d4aaea6bffd4f99d3e7f6", "patch": "@@ -144,7 +144,7 @@ use boxed::Box;\n /// # Deref\n ///\n /// `String`s implement [`Deref`]`<Target=str>`, and so inherit all of [`str`]'s\n-/// methods. In addition, this means that you can pass a `String` to any\n+/// methods. In addition, this means that you can pass a `String` to a\n /// function which takes a [`&str`] by using an ampersand (`&`):\n ///\n /// ```\n@@ -160,8 +160,31 @@ use boxed::Box;\n ///\n /// This will create a [`&str`] from the `String` and pass it in. This\n /// conversion is very inexpensive, and so generally, functions will accept\n-/// [`&str`]s as arguments unless they need a `String` for some specific reason.\n+/// [`&str`]s as arguments unless they need a `String` for some specific\n+/// reason.\n ///\n+/// In certain cases Rust doesn't have enough information to make this conversion,\n+/// known as deref coercion. For example, in this case a string slice implements\n+/// a trait and the function takes anything that implements the trait, Rust would\n+/// need to make two implicit conversions which Rust doesn't know how to do. The\n+/// following example will not compile for that reason.\n+///\n+/// ```compile_fail,E0277\n+/// trait TraitExample {}\n+///\n+/// impl<'a> TraitExample for &'a str {}\n+///\n+/// fn example_func<A: TraitExample>(example_arg: A) {}\n+///\n+/// fn main() {\n+///     let example_string = String::from(\"example_string\");\n+///     example_func(&example_string);\n+/// }\n+/// ```\n+///\n+/// What would work in this case is changing the line `example_func(&example_string);`\n+/// to `example_func(example_string.to_str());`. This works because we're doing the\n+/// conversion explicitly, rather than relying on the implicit conversion.\n ///\n /// # Representation\n ///"}]}