{"sha": "cf47ea2877e1ab17dcd0e66de66fe45bcdcda38a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmNDdlYTI4NzdlMWFiMTdkY2QwZTY2ZGU2NmZlNDViY2RjZGEzOGE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-11-24T08:39:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-24T08:39:29Z"}, "message": "Merge #2365\n\n2365: Make expand-macro more flexible r=matklad a=edwin0cheng\n\nDue to lack of implementation or other types of errors, some macros do not expand correctly in the current situation. The PR attempts to make `expand-macro` more flexible in error situations by ignoring internal failed macro expansion.\n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>", "tree": {"sha": "1ecb6de96f617c0f3759d9e352744b57a326a12a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ecb6de96f617c0f3759d9e352744b57a326a12a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf47ea2877e1ab17dcd0e66de66fe45bcdcda38a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd2kHBCRBK7hj4Ov3rIwAAdHIIABN+/Cc6tCLGd/OjFlki0JL6\n4wWTQRodTafIyxO1aSsbe5uhN479ouPh3RfS8/thh/YH8I9YaOokEpzQVdH5je02\nvsn4UeDh45+7sPPYBfPZu1FyyooP7bKGv5z78YYZXzAgscDS/WwFUh78rJZeBe9f\nR+gk5jnCNB0p4SyfXez5J4FIUx4zgZ324jyMYBJ+Dwh8O/FlPZxsWMX7YDjNbBxX\nDmBLJbeJMqRHoGky7RGo6hws3lOo0h6azWR0YKggN5jL4dfjPEPnBnj+lS6rEqWW\nJLbzks3uJvRDztGWVupc1xlne3fBl6RUyJ8YNRFwdTQv9Z1D6s/Zy5BjCibWl5Y=\n=CUcb\n-----END PGP SIGNATURE-----\n", "payload": "tree 1ecb6de96f617c0f3759d9e352744b57a326a12a\nparent 7b6aa7c34e5650506924decfee0a77aa9bb0a480\nparent 9c521f00ff118c38cbec730ffae1cee5f465f6ac\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1574584769 +0000\ncommitter GitHub <noreply@github.com> 1574584769 +0000\n\nMerge #2365\n\n2365: Make expand-macro more flexible r=matklad a=edwin0cheng\n\nDue to lack of implementation or other types of errors, some macros do not expand correctly in the current situation. The PR attempts to make `expand-macro` more flexible in error situations by ignoring internal failed macro expansion.\n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf47ea2877e1ab17dcd0e66de66fe45bcdcda38a", "html_url": "https://github.com/rust-lang/rust/commit/cf47ea2877e1ab17dcd0e66de66fe45bcdcda38a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf47ea2877e1ab17dcd0e66de66fe45bcdcda38a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b6aa7c34e5650506924decfee0a77aa9bb0a480", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b6aa7c34e5650506924decfee0a77aa9bb0a480", "html_url": "https://github.com/rust-lang/rust/commit/7b6aa7c34e5650506924decfee0a77aa9bb0a480"}, {"sha": "9c521f00ff118c38cbec730ffae1cee5f465f6ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c521f00ff118c38cbec730ffae1cee5f465f6ac", "html_url": "https://github.com/rust-lang/rust/commit/9c521f00ff118c38cbec730ffae1cee5f465f6ac"}], "stats": {"total": 40, "additions": 31, "deletions": 9}, "files": [{"sha": "0b540b8cdead6a1e67446103b414838a2ac73c32", "filename": "crates/ra_ide_api/src/expand_macro.rs", "status": "modified", "additions": 31, "deletions": 9, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/cf47ea2877e1ab17dcd0e66de66fe45bcdcda38a/crates%2Fra_ide_api%2Fsrc%2Fexpand_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf47ea2877e1ab17dcd0e66de66fe45bcdcda38a/crates%2Fra_ide_api%2Fsrc%2Fexpand_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fexpand_macro.rs?ref=cf47ea2877e1ab17dcd0e66de66fe45bcdcda38a", "patch": "@@ -47,15 +47,15 @@ fn expand_macro_recur(\n \n     for child in children.into_iter() {\n         let node = hir::Source::new(macro_file_id, &child);\n-        let new_node = expand_macro_recur(db, source, node)?;\n-\n-        // Replace the whole node if it is root\n-        // `replace_descendants` will not replace the parent node\n-        // but `SyntaxNode::descendants include itself\n-        if expanded == *child.syntax() {\n-            expanded = new_node;\n-        } else {\n-            replaces.insert(child.syntax().clone().into(), new_node.into());\n+        if let Some(new_node) = expand_macro_recur(db, source, node) {\n+            // Replace the whole node if it is root\n+            // `replace_descendants` will not replace the parent node\n+            // but `SyntaxNode::descendants include itself\n+            if expanded == *child.syntax() {\n+                expanded = new_node;\n+            } else {\n+                replaces.insert(child.syntax().clone().into(), new_node.into());\n+            }\n         }\n     }\n \n@@ -247,4 +247,26 @@ fn some_thing() -> u32 {\n         assert_eq!(res.name, \"match_ast\");\n         assert_snapshot!(res.expansion, @r###\"{}\"###);\n     }\n+\n+    #[test]\n+    fn macro_expand_inner_macro_fail_to_expand() {\n+        let res = check_expand_macro(\n+            r#\"\n+        //- /lib.rs\n+        macro_rules! bar {\n+            (BAD) => {};\n+        }\n+        macro_rules! foo {\n+            () => {bar!()};\n+        }        \n+\n+        fn main() {        \n+            let res = fo<|>o!();\n+        }\n+        \"#,\n+        );\n+\n+        assert_eq!(res.name, \"foo\");\n+        assert_snapshot!(res.expansion, @r###\"bar!()\"###);\n+    }\n }"}]}