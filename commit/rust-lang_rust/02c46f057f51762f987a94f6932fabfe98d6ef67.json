{"sha": "02c46f057f51762f987a94f6932fabfe98d6ef67", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyYzQ2ZjA1N2Y1MTc2MmY5ODdhOTRmNjkzMmZhYmZlOThkNmVmNjc=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-07-18T09:19:33Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-07-18T09:19:33Z"}, "message": "add an internal lint that catches misordered paths", "tree": {"sha": "030337b8bb4acfa725d6a1b8fe3adfe5d458e0dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/030337b8bb4acfa725d6a1b8fe3adfe5d458e0dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02c46f057f51762f987a94f6932fabfe98d6ef67", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXjJ8lAAoJEFbW7qD8Z6xGR/4P/R3fOxpsq6bvWEjnhqpQZ6GI\nu9vGVmjhP9qpFzWnjPgVk3DOUj3gN9Cpr8HCK5LQhi9jKCRQT/LPIOeBFO+xO2HF\nTo3SbdMpNiS88A3Fj3rXTDUnP8b9Js7ccg4XzCtP8WulyBurctwzEtky5uoLAV0B\nSuwoVDqb4IJJ3pTOosAFUjsZsU5F/p1BkxmZVczmQPJCE4/39MlGMnHwK/+g7W03\nECy82KbN3iCb32aOwIeFhrzHMPMgIiILvezTyjEaOiE5XYPQHh1hpsSNafa9ASbL\npo8qQIBDZt+R5YjWoSjSc7jrVLUR69Qrvgj4JAcax5/GU//px0VJRaFI9lv9wyJ2\nmaWjJ7wJ+27HPbMmnts5DRaNj94xmOAhUGuf5a8nYPqM5cSZk1RHEoiPbI5kvrYx\nuA+HD/aWArCJQRRU+wVwGJlAwlYYWVtf1W4/gwjV1YD4Llstd9o5ZRCDkraavA8E\no2Pelo000oM9x5yMP9LwzLpFmW3SdKmZgIjbRA9w5eKYXm1ggg3nD3ZN2vILcbok\nNKWT1NnKAo2LvMw7VIwZbTZk9yplexQGoElX9tlwLoVtyvgdDWHPfuS3z2gsgCTG\n3lATwAzpP3zycnwlLn7kKIYpHsGSuYaD4T7q7Zot/d5AZpwHghrwEd2Fk5NFY03K\n47rsUcn6JpYFarpIGNkr\n=e+2J\n-----END PGP SIGNATURE-----", "payload": "tree 030337b8bb4acfa725d6a1b8fe3adfe5d458e0dc\nparent fc54a91916a450082de6cc708af8e093671a3325\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1468833573 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1468833573 +0200\n\nadd an internal lint that catches misordered paths"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02c46f057f51762f987a94f6932fabfe98d6ef67", "html_url": "https://github.com/rust-lang/rust/commit/02c46f057f51762f987a94f6932fabfe98d6ef67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02c46f057f51762f987a94f6932fabfe98d6ef67/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc54a91916a450082de6cc708af8e093671a3325", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc54a91916a450082de6cc708af8e093671a3325", "html_url": "https://github.com/rust-lang/rust/commit/fc54a91916a450082de6cc708af8e093671a3325"}], "stats": {"total": 67, "additions": 61, "deletions": 6}, "files": [{"sha": "7c285008ea863007fec9494968bf2b98567793bd", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02c46f057f51762f987a94f6932fabfe98d6ef67/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c46f057f51762f987a94f6932fabfe98d6ef67/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=02c46f057f51762f987a94f6932fabfe98d6ef67", "patch": "@@ -169,6 +169,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n     // end deprecated lints, do not remove this comment, it\u2019s used in `update_lints`\n \n     reg.register_late_lint_pass(box serde::Serde);\n+    reg.register_early_lint_pass(box utils::internal_lints::Clippy);\n     reg.register_late_lint_pass(box types::TypePass);\n     reg.register_late_lint_pass(box booleans::NonminimalBool);\n     reg.register_late_lint_pass(box misc::TopLevelRefPass);"}, {"sha": "e0d32a60722545ad8ba08692096e047d1b01987b", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/02c46f057f51762f987a94f6932fabfe98d6ef67/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c46f057f51762f987a94f6932fabfe98d6ef67/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=02c46f057f51762f987a94f6932fabfe98d6ef67", "patch": "@@ -0,0 +1,53 @@\n+use rustc::lint::*;\n+use utils::span_lint;\n+use syntax::parse::token::InternedString;\n+use syntax::ast::*;\n+\n+/// **What it does:** This lint checks for various things we like to keep tidy in clippy\n+///\n+/// **Why is this bad?** ???\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:** wrong ordering of the util::paths constants\n+declare_lint! {\n+    pub CLIPPY_LINTS_INTERNAL, Allow,\n+    \"Various things that will negatively affect your clippy experience\"\n+}\n+\n+\n+#[derive(Copy, Clone)]\n+pub struct Clippy;\n+\n+impl LintPass for Clippy {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(CLIPPY_LINTS_INTERNAL)\n+    }\n+}\n+\n+impl EarlyLintPass for Clippy {\n+    fn check_crate(&mut self, cx: &EarlyContext, krate: &Crate) {\n+        if let Some(utils) = krate.module.items.iter().find(|item| item.ident.name.as_str() == \"utils\") {\n+            if let ItemKind::Mod(ref utils_mod) = utils.node {\n+                if let Some(paths) = utils_mod.items.iter().find(|item| item.ident.name.as_str() == \"paths\") {\n+                    if let ItemKind::Mod(ref paths_mod) = paths.node {\n+                        let mut last_name: Option<InternedString> = None;\n+                        for item in &paths_mod.items {\n+                            let name = item.ident.name.as_str();\n+                            if let Some(ref last_name) = last_name {\n+                                if **last_name > *name {\n+                                    span_lint(cx,\n+                                              CLIPPY_LINTS_INTERNAL,\n+                                              item.span,\n+                                              \"this constant should be before the previous constant due to lexical ordering\",\n+                                    );\n+                                }\n+                            }\n+                            last_name = Some(name);\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+    }\n+}"}, {"sha": "2b49edccbbcd6a1896157c67d168ea2dffcae526", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02c46f057f51762f987a94f6932fabfe98d6ef67/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c46f057f51762f987a94f6932fabfe98d6ef67/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=02c46f057f51762f987a94f6932fabfe98d6ef67", "patch": "@@ -25,6 +25,7 @@ pub mod conf;\n mod hir;\n pub mod paths;\n pub mod sugg;\n+pub mod internal_lints;\n pub use self::hir::{SpanlessEq, SpanlessHash};\n \n pub type MethodArgs = HirVec<P<Expr>>;"}, {"sha": "c97be3f6e6f85618019b150825eb1c2c7483d453", "filename": "tests/dogfood.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/02c46f057f51762f987a94f6932fabfe98d6ef67/tests%2Fdogfood.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c46f057f51762f987a94f6932fabfe98d6ef67/tests%2Fdogfood.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdogfood.rs?ref=02c46f057f51762f987a94f6932fabfe98d6ef67", "patch": "@@ -17,7 +17,7 @@ fn dogfood() {\n     let mut s = String::new();\n     s.push_str(\" -L target/debug/\");\n     s.push_str(\" -L target/debug/deps\");\n-    s.push_str(\" -Zextra-plugins=clippy -Ltarget_recur/debug -Dclippy_pedantic -Dclippy\");\n+    s.push_str(\" -Zextra-plugins=clippy -Ltarget_recur/debug -Dclippy_pedantic -Dclippy -Dclippy_lints_internal\");\n     config.target_rustcflags = Some(s);\n     if let Ok(name) = var(\"TESTNAME\") {\n         config.filter = Some(name.to_owned())\n@@ -29,6 +29,7 @@ fn dogfood() {\n     }\n \n     config.mode = cfg_mode;\n+    config.verbose = true;\n \n     let files = [\"src/main.rs\", \"src/lib.rs\", \"clippy_lints/src/lib.rs\"];\n "}, {"sha": "e81f71617ffa2b870cd06dbccaeca04fdc3dfc97", "filename": "util/update_lints.py", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/02c46f057f51762f987a94f6932fabfe98d6ef67/util%2Fupdate_lints.py", "raw_url": "https://github.com/rust-lang/rust/raw/02c46f057f51762f987a94f6932fabfe98d6ef67/util%2Fupdate_lints.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fupdate_lints.py?ref=02c46f057f51762f987a94f6932fabfe98d6ef67", "patch": "@@ -150,11 +150,10 @@ def main(print_only=False, check=False):\n         return\n \n     # collect all lints from source files\n-    for root, _, files in os.walk('clippy_lints/src'):\n-        for fn in files:\n-            if fn.endswith('.rs'):\n-                collect(lints, deprecated_lints, restriction_lints,\n-                        os.path.join(root, fn))\n+    for fn in os.listdir('clippy_lints/src'):\n+        if fn.endswith('.rs'):\n+            collect(lints, deprecated_lints, restriction_lints,\n+                    os.path.join('clippy_lints', 'src', fn))\n \n     # determine version\n     with open('Cargo.toml') as fp:"}]}