{"sha": "f96c2468695911222ba7557ce04af0dd8fbb6df2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5NmMyNDY4Njk1OTExMjIyYmE3NTU3Y2UwNGFmMGRkOGZiYjZkZjI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-07-03T20:10:30Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-07-03T20:33:17Z"}, "message": "Strenghten synchronization in `Arc::is_unique`\n\nPreviously, `is_unique` would not synchronize at all with a `drop` that returned\nearly because it was not the last reference, leading to a data race.\n\nFixes #51780", "tree": {"sha": "d7efa02d693f52dd1abb10cb2220555598d71805", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7efa02d693f52dd1abb10cb2220555598d71805"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f96c2468695911222ba7557ce04af0dd8fbb6df2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f96c2468695911222ba7557ce04af0dd8fbb6df2", "html_url": "https://github.com/rust-lang/rust/commit/f96c2468695911222ba7557ce04af0dd8fbb6df2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f96c2468695911222ba7557ce04af0dd8fbb6df2/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "860d169474acabdc53b9a698f8ce02eba7e0daeb", "url": "https://api.github.com/repos/rust-lang/rust/commits/860d169474acabdc53b9a698f8ce02eba7e0daeb", "html_url": "https://github.com/rust-lang/rust/commit/860d169474acabdc53b9a698f8ce02eba7e0daeb"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "4244b09b18f9cb5d5a821205ebf3138f8459399e", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f96c2468695911222ba7557ce04af0dd8fbb6df2/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f96c2468695911222ba7557ce04af0dd8fbb6df2/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=f96c2468695911222ba7557ce04af0dd8fbb6df2", "patch": "@@ -886,13 +886,14 @@ impl<T: ?Sized> Arc<T> {\n         // holder.\n         //\n         // The acquire label here ensures a happens-before relationship with any\n-        // writes to `strong` prior to decrements of the `weak` count (via drop,\n-        // which uses Release).\n+        // writes to `strong` (in particular in `Weak::upgrade`) prior to decrements\n+        // of the `weak` count (via `Weak::drop`, which uses release).  If the upgraded\n+        // weak ref was never dropped, the CAS here will fail so we do not care to synchronize.\n         if self.inner().weak.compare_exchange(1, usize::MAX, Acquire, Relaxed).is_ok() {\n-            // Due to the previous acquire read, this will observe any writes to\n-            // `strong` that were due to upgrading weak pointers; only strong\n-            // clones remain, which require that the strong count is > 1 anyway.\n-            let unique = self.inner().strong.load(Relaxed) == 1;\n+            // This needs to be an `Acquire` to synchronize with the decrement of the `strong`\n+            // counter in `drop` -- the only access that happens when any but the last reference\n+            // is being dropped.\n+            let unique = self.inner().strong.load(Acquire) == 1;\n \n             // The release write here synchronizes with a read in `downgrade`,\n             // effectively preventing the above read of `strong` from happening"}]}