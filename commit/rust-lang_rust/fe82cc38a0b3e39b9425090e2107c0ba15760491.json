{"sha": "fe82cc38a0b3e39b9425090e2107c0ba15760491", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlODJjYzM4YTBiM2UzOWI5NDI1MDkwZTIxMDdjMGJhMTU3NjA0OTE=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-12-19T04:17:09Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-01-13T03:25:50Z"}, "message": "Specialize `..` help message for all fields vs. the rest", "tree": {"sha": "a4106db0d69bc9c4370f6398ff49901466cadbb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4106db0d69bc9c4370f6398ff49901466cadbb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe82cc38a0b3e39b9425090e2107c0ba15760491", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe82cc38a0b3e39b9425090e2107c0ba15760491", "html_url": "https://github.com/rust-lang/rust/commit/fe82cc38a0b3e39b9425090e2107c0ba15760491", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe82cc38a0b3e39b9425090e2107c0ba15760491/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5e8e6ec2df58bd50963af57bbd08d0526f119db", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5e8e6ec2df58bd50963af57bbd08d0526f119db", "html_url": "https://github.com/rust-lang/rust/commit/a5e8e6ec2df58bd50963af57bbd08d0526f119db"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "43a69fe187431ee9fd5e7df6faaf701b2e51069f", "filename": "compiler/rustc_typeck/src/check/pat.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fe82cc38a0b3e39b9425090e2107c0ba15760491/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe82cc38a0b3e39b9425090e2107c0ba15760491/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs?ref=fe82cc38a0b3e39b9425090e2107c0ba15760491", "patch": "@@ -1071,14 +1071,14 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             if subpats.is_empty() || all_wildcards {\n                 err.span_suggestion(\n                     all_fields_span,\n-                    \"use `..` to ignore all unmentioned fields\",\n+                    \"use `..` to ignore all fields\",\n                     String::from(\"..\"),\n                     Applicability::MaybeIncorrect,\n                 );\n             } else {\n                 err.span_suggestion(\n                     after_fields_span,\n-                    \"use `..` to ignore all unmentioned fields\",\n+                    \"use `..` to ignore the rest of the fields\",\n                     String::from(\", ..\"),\n                     Applicability::MaybeIncorrect,\n                 );"}, {"sha": "c270593cac741883fcc242d2961983adb4849b88", "filename": "src/test/ui/destructuring-assignment/tuple_struct_destructure_fail.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fe82cc38a0b3e39b9425090e2107c0ba15760491/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure_fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe82cc38a0b3e39b9425090e2107c0ba15760491/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure_fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure_fail.stderr?ref=fe82cc38a0b3e39b9425090e2107c0ba15760491", "patch": "@@ -36,7 +36,7 @@ help: use `_` to explicitly ignore each field\n    |\n LL |     TupleStruct(_, _) = TupleStruct(1, 2);\n    |                  ^^^\n-help: use `..` to ignore all unmentioned fields\n+help: use `..` to ignore all fields\n    |\n LL |     TupleStruct(..) = TupleStruct(1, 2);\n    |                 ^^\n@@ -63,7 +63,7 @@ help: use `_` to explicitly ignore each field\n    |\n LL |     Enum::SingleVariant(_, _) = Enum::SingleVariant(1, 2);\n    |                          ^^^\n-help: use `..` to ignore all unmentioned fields\n+help: use `..` to ignore all fields\n    |\n LL |     Enum::SingleVariant(..) = Enum::SingleVariant(1, 2);\n    |                         ^^"}, {"sha": "aaaada518d3b799427d1b9bc74127b9b5f1c5358", "filename": "src/test/ui/error-codes/E0023.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe82cc38a0b3e39b9425090e2107c0ba15760491/src%2Ftest%2Fui%2Ferror-codes%2FE0023.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe82cc38a0b3e39b9425090e2107c0ba15760491/src%2Ftest%2Fui%2Ferror-codes%2FE0023.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0023.stderr?ref=fe82cc38a0b3e39b9425090e2107c0ba15760491", "patch": "@@ -11,7 +11,7 @@ help: use `_` to explicitly ignore each field\n    |\n LL |         Fruit::Apple(a, _) => {},\n    |                       ^^^\n-help: use `..` to ignore all unmentioned fields\n+help: use `..` to ignore the rest of the fields\n    |\n LL |         Fruit::Apple(a, ..) => {},\n    |                       ^^^^"}, {"sha": "9bdbf0bf9f40dfced6ed3e35aea1a6591fb913c0", "filename": "src/test/ui/issues/issue-67037-pat-tup-scrut-ty-diff-less-fields.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe82cc38a0b3e39b9425090e2107c0ba15760491/src%2Ftest%2Fui%2Fissues%2Fissue-67037-pat-tup-scrut-ty-diff-less-fields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe82cc38a0b3e39b9425090e2107c0ba15760491/src%2Ftest%2Fui%2Fissues%2Fissue-67037-pat-tup-scrut-ty-diff-less-fields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-67037-pat-tup-scrut-ty-diff-less-fields.stderr?ref=fe82cc38a0b3e39b9425090e2107c0ba15760491", "patch": "@@ -22,7 +22,7 @@ help: use `_` to explicitly ignore each field\n    |\n LL |     let P(_) = U {};\n    |           ^\n-help: use `..` to ignore all unmentioned fields\n+help: use `..` to ignore all fields\n    |\n LL |     let P(..) = U {};\n    |           ^^"}, {"sha": "02497029960bf505033c0e6798243ba4feae887c", "filename": "src/test/ui/issues/issue-72574-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe82cc38a0b3e39b9425090e2107c0ba15760491/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe82cc38a0b3e39b9425090e2107c0ba15760491/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.stderr?ref=fe82cc38a0b3e39b9425090e2107c0ba15760491", "patch": "@@ -31,7 +31,7 @@ help: use `_` to explicitly ignore each field\n    |\n LL |         Binder(_a, _x @ .., _) => {}\n    |                           ^^^\n-help: use `..` to ignore all unmentioned fields\n+help: use `..` to ignore the rest of the fields\n    |\n LL |         Binder(_a, _x @ .., ..) => {}\n    |                           ^^^^"}, {"sha": "37839482b31a2ef3aabae9fb356661db531c0241", "filename": "src/test/ui/match/match-pattern-field-mismatch.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe82cc38a0b3e39b9425090e2107c0ba15760491/src%2Ftest%2Fui%2Fmatch%2Fmatch-pattern-field-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe82cc38a0b3e39b9425090e2107c0ba15760491/src%2Ftest%2Fui%2Fmatch%2Fmatch-pattern-field-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-pattern-field-mismatch.stderr?ref=fe82cc38a0b3e39b9425090e2107c0ba15760491", "patch": "@@ -11,7 +11,7 @@ help: use `_` to explicitly ignore each field\n    |\n LL |           Color::Rgb(_, _, _) => { }\n    |                          ^^^\n-help: use `..` to ignore all unmentioned fields\n+help: use `..` to ignore all fields\n    |\n LL |           Color::Rgb(..) => { }\n    |                      ^^"}, {"sha": "78249ed057ff880b33bd15162a7838f37663f779", "filename": "src/test/ui/pattern/issue-74539.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe82cc38a0b3e39b9425090e2107c0ba15760491/src%2Ftest%2Fui%2Fpattern%2Fissue-74539.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe82cc38a0b3e39b9425090e2107c0ba15760491/src%2Ftest%2Fui%2Fpattern%2Fissue-74539.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fissue-74539.stderr?ref=fe82cc38a0b3e39b9425090e2107c0ba15760491", "patch": "@@ -31,7 +31,7 @@ help: use `_` to explicitly ignore each field\n    |\n LL |         E::A(x @ .., _) => {\n    |                    ^^^\n-help: use `..` to ignore all unmentioned fields\n+help: use `..` to ignore the rest of the fields\n    |\n LL |         E::A(x @ .., ..) => {\n    |                    ^^^^"}, {"sha": "f306377e6e51dd1ff9dd8b84e29e319a7e9a8cd8", "filename": "src/test/ui/pattern/pat-tuple-underfield.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fe82cc38a0b3e39b9425090e2107c0ba15760491/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe82cc38a0b3e39b9425090e2107c0ba15760491/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.rs?ref=fe82cc38a0b3e39b9425090e2107c0ba15760491", "patch": "@@ -8,38 +8,38 @@ fn main() {\n         S(x) => {}\n         //~^ ERROR this pattern has 1 field, but the corresponding tuple struct has 2 fields\n         //~| HELP use `_` to explicitly ignore each field\n-        //~| HELP use `..` to ignore all unmentioned fields\n+        //~| HELP use `..` to ignore the rest of the fields\n     }\n     match S(0, 1.0) {\n         S(_) => {}\n         //~^ ERROR this pattern has 1 field, but the corresponding tuple struct has 2 fields\n         //~| HELP use `_` to explicitly ignore each field\n-        //~| HELP use `..` to ignore all unmentioned fields\n+        //~| HELP use `..` to ignore all fields\n     }\n     match S(0, 1.0) {\n         S() => {}\n         //~^ ERROR this pattern has 0 fields, but the corresponding tuple struct has 2 fields\n         //~| HELP use `_` to explicitly ignore each field\n-        //~| HELP use `..` to ignore all unmentioned fields\n+        //~| HELP use `..` to ignore all fields\n     }\n \n     match E::S(0, 1.0) {\n         E::S(x) => {}\n         //~^ ERROR this pattern has 1 field, but the corresponding tuple variant has 2 fields\n         //~| HELP use `_` to explicitly ignore each field\n-        //~| HELP use `..` to ignore all unmentioned fields\n+        //~| HELP use `..` to ignore the rest of the fields\n     }\n     match E::S(0, 1.0) {\n         E::S(_) => {}\n         //~^ ERROR this pattern has 1 field, but the corresponding tuple variant has 2 fields\n         //~| HELP use `_` to explicitly ignore each field\n-        //~| HELP use `..` to ignore all unmentioned fields\n+        //~| HELP use `..` to ignore all fields\n     }\n     match E::S(0, 1.0) {\n         E::S() => {}\n         //~^ ERROR this pattern has 0 fields, but the corresponding tuple variant has 2 fields\n         //~| HELP use `_` to explicitly ignore each field\n-        //~| HELP use `..` to ignore all unmentioned fields\n+        //~| HELP use `..` to ignore all fields\n     }\n     match E::S(0, 1.0) {\n         E::S => {}"}, {"sha": "d1aaeaeafa47e1f661d9a512d3d97cc586c5098e", "filename": "src/test/ui/pattern/pat-tuple-underfield.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fe82cc38a0b3e39b9425090e2107c0ba15760491/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe82cc38a0b3e39b9425090e2107c0ba15760491/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr?ref=fe82cc38a0b3e39b9425090e2107c0ba15760491", "patch": "@@ -20,7 +20,7 @@ help: use `_` to explicitly ignore each field\n    |\n LL |         S(x, _) => {}\n    |            ^^^\n-help: use `..` to ignore all unmentioned fields\n+help: use `..` to ignore the rest of the fields\n    |\n LL |         S(x, ..) => {}\n    |            ^^^^\n@@ -38,7 +38,7 @@ help: use `_` to explicitly ignore each field\n    |\n LL |         S(_, _) => {}\n    |            ^^^\n-help: use `..` to ignore all unmentioned fields\n+help: use `..` to ignore all fields\n    |\n LL |         S(..) => {}\n    |           ^^\n@@ -56,7 +56,7 @@ help: use `_` to explicitly ignore each field\n    |\n LL |         S(_, _) => {}\n    |           ^^^^\n-help: use `..` to ignore all unmentioned fields\n+help: use `..` to ignore all fields\n    |\n LL |         S(..) => {}\n    |           ^^\n@@ -74,7 +74,7 @@ help: use `_` to explicitly ignore each field\n    |\n LL |         E::S(x, _) => {}\n    |               ^^^\n-help: use `..` to ignore all unmentioned fields\n+help: use `..` to ignore the rest of the fields\n    |\n LL |         E::S(x, ..) => {}\n    |               ^^^^\n@@ -92,7 +92,7 @@ help: use `_` to explicitly ignore each field\n    |\n LL |         E::S(_, _) => {}\n    |               ^^^\n-help: use `..` to ignore all unmentioned fields\n+help: use `..` to ignore all fields\n    |\n LL |         E::S(..) => {}\n    |              ^^\n@@ -110,7 +110,7 @@ help: use `_` to explicitly ignore each field\n    |\n LL |         E::S(_, _) => {}\n    |              ^^^^\n-help: use `..` to ignore all unmentioned fields\n+help: use `..` to ignore all fields\n    |\n LL |         E::S(..) => {}\n    |              ^^"}]}