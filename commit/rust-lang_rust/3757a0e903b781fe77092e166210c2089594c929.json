{"sha": "3757a0e903b781fe77092e166210c2089594c929", "node_id": "C_kwDOAAsO6NoAKDM3NTdhMGU5MDNiNzgxZmU3NzA5MmUxNjYyMTBjMjA4OTU5NGM5Mjk", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2022-10-01T09:57:34Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2022-10-01T13:25:37Z"}, "message": "avoid doc-link-with-quotes in code blocks", "tree": {"sha": "55b09cb8ce6b6ab3d588ed50e2bc2c38d4089b01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55b09cb8ce6b6ab3d588ed50e2bc2c38d4089b01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3757a0e903b781fe77092e166210c2089594c929", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3757a0e903b781fe77092e166210c2089594c929", "html_url": "https://github.com/rust-lang/rust/commit/3757a0e903b781fe77092e166210c2089594c929", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3757a0e903b781fe77092e166210c2089594c929/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a78551bb14733216f734660d0598d392a6c5db20", "url": "https://api.github.com/repos/rust-lang/rust/commits/a78551bb14733216f734660d0598d392a6c5db20", "html_url": "https://github.com/rust-lang/rust/commit/a78551bb14733216f734660d0598d392a6c5db20"}], "stats": {"total": 149, "additions": 67, "deletions": 82}, "files": [{"sha": "36dc7e3396b824205791f1303124cd7e074fdf07", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 56, "deletions": 14, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/3757a0e903b781fe77092e166210c2089594c929/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3757a0e903b781fe77092e166210c2089594c929/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=3757a0e903b781fe77092e166210c2089594c929", "patch": "@@ -198,6 +198,29 @@ declare_clippy_lint! {\n     \"presence of `fn main() {` in code examples\"\n }\n \n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Detects the syntax `['foo']` in documentation comments (notice quotes instead of backticks)\n+    /// outside of code blocks\n+    /// ### Why is this bad?\n+    /// It is likely a typo when defining an intra-doc link\n+    ///\n+    /// ### Example\n+    /// ```rust\n+    /// /// See also: ['foo']\n+    /// fn bar() {}\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// /// See also: [`foo`]\n+    /// fn bar() {}\n+    /// ```\n+    #[clippy::version = \"1.63.0\"]\n+    pub DOC_LINK_WITH_QUOTES,\n+    pedantic,\n+    \"possible typo for an intra-doc link\"\n+}\n+\n #[expect(clippy::module_name_repetitions)]\n #[derive(Clone)]\n pub struct DocMarkdown {\n@@ -214,9 +237,14 @@ impl DocMarkdown {\n     }\n }\n \n-impl_lint_pass!(DocMarkdown =>\n-    [DOC_MARKDOWN, MISSING_SAFETY_DOC, MISSING_ERRORS_DOC, MISSING_PANICS_DOC, NEEDLESS_DOCTEST_MAIN]\n-);\n+impl_lint_pass!(DocMarkdown => [\n+    DOC_LINK_WITH_QUOTES,\n+    DOC_MARKDOWN,\n+    MISSING_SAFETY_DOC,\n+    MISSING_ERRORS_DOC,\n+    MISSING_PANICS_DOC,\n+    NEEDLESS_DOCTEST_MAIN\n+]);\n \n impl<'tcx> LateLintPass<'tcx> for DocMarkdown {\n     fn check_crate(&mut self, cx: &LateContext<'tcx>) {\n@@ -432,7 +460,7 @@ pub fn strip_doc_comment_decoration(doc: &str, comment_kind: CommentKind, span:\n     (no_stars, sizes)\n }\n \n-#[derive(Copy, Clone)]\n+#[derive(Copy, Clone, Default)]\n struct DocHeaders {\n     safety: bool,\n     errors: bool,\n@@ -476,11 +504,7 @@ fn check_attrs<'a>(cx: &LateContext<'_>, valid_idents: &FxHashSet<String>, attrs\n     }\n \n     if doc.is_empty() {\n-        return DocHeaders {\n-            safety: false,\n-            errors: false,\n-            panics: false,\n-        };\n+        return DocHeaders::default();\n     }\n \n     let mut cb = fake_broken_link_callback;\n@@ -521,11 +545,7 @@ fn check_doc<'a, Events: Iterator<Item = (pulldown_cmark::Event<'a>, Range<usize\n     use pulldown_cmark::Tag::{CodeBlock, Heading, Item, Link, Paragraph};\n     use pulldown_cmark::{CodeBlockKind, CowStr};\n \n-    let mut headers = DocHeaders {\n-        safety: false,\n-        errors: false,\n-        panics: false,\n-    };\n+    let mut headers = DocHeaders::default();\n     let mut in_code = false;\n     let mut in_link = None;\n     let mut in_heading = false;\n@@ -612,6 +632,7 @@ fn check_doc<'a, Events: Iterator<Item = (pulldown_cmark::Event<'a>, Range<usize\n                         check_code(cx, &text, edition, span);\n                     }\n                 } else {\n+                    check_link_quotes(cx, in_link.is_some(), trimmed_text, span, &range, begin, text.len());\n                     // Adjust for the beginning of the current `Event`\n                     let span = span.with_lo(span.lo() + BytePos::from_usize(range.start - begin));\n                     text_to_check.push((text, span));\n@@ -622,6 +643,27 @@ fn check_doc<'a, Events: Iterator<Item = (pulldown_cmark::Event<'a>, Range<usize\n     headers\n }\n \n+fn check_link_quotes(\n+    cx: &LateContext<'_>,\n+    in_link: bool,\n+    trimmed_text: &str,\n+    span: Span,\n+    range: &Range<usize>,\n+    begin: usize,\n+    text_len: usize,\n+) {\n+    if in_link && trimmed_text.starts_with('\\'') && trimmed_text.ends_with('\\'') {\n+        // fix the span to only point at the text within the link\n+        let lo = span.lo() + BytePos::from_usize(range.start - begin);\n+        span_lint(\n+            cx,\n+            DOC_LINK_WITH_QUOTES,\n+            span.with_lo(lo).with_hi(lo + BytePos::from_usize(text_len)),\n+            \"possible intra-doc link using quotes instead of backticks\",\n+        );\n+    }\n+}\n+\n fn get_current_span(spans: &[(usize, Span)], idx: usize) -> (usize, Span) {\n     let index = match spans.binary_search_by(|c| c.0.cmp(&idx)) {\n         Ok(o) => o,"}, {"sha": "0ff1d2755daf6284c5babcdc77a6989e05497f61", "filename": "clippy_lints/src/doc_link_with_quotes.rs", "status": "removed", "additions": 0, "deletions": 60, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/a78551bb14733216f734660d0598d392a6c5db20/clippy_lints%2Fsrc%2Fdoc_link_with_quotes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a78551bb14733216f734660d0598d392a6c5db20/clippy_lints%2Fsrc%2Fdoc_link_with_quotes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc_link_with_quotes.rs?ref=a78551bb14733216f734660d0598d392a6c5db20", "patch": "@@ -1,60 +0,0 @@\n-use clippy_utils::diagnostics::span_lint;\n-use itertools::Itertools;\n-use rustc_ast::{AttrKind, Attribute};\n-use rustc_lint::{EarlyContext, EarlyLintPass};\n-use rustc_session::{declare_lint_pass, declare_tool_lint};\n-\n-declare_clippy_lint! {\n-    /// ### What it does\n-    /// Detects the syntax `['foo']` in documentation comments (notice quotes instead of backticks)\n-    /// outside of code blocks\n-    /// ### Why is this bad?\n-    /// It is likely a typo when defining an intra-doc link\n-    ///\n-    /// ### Example\n-    /// ```rust\n-    /// /// See also: ['foo']\n-    /// fn bar() {}\n-    /// ```\n-    /// Use instead:\n-    /// ```rust\n-    /// /// See also: [`foo`]\n-    /// fn bar() {}\n-    /// ```\n-    #[clippy::version = \"1.63.0\"]\n-    pub DOC_LINK_WITH_QUOTES,\n-    pedantic,\n-    \"possible typo for an intra-doc link\"\n-}\n-declare_lint_pass!(DocLinkWithQuotes => [DOC_LINK_WITH_QUOTES]);\n-\n-impl EarlyLintPass for DocLinkWithQuotes {\n-    fn check_attribute(&mut self, ctx: &EarlyContext<'_>, attr: &Attribute) {\n-        if let AttrKind::DocComment(_, symbol) = attr.kind {\n-            if contains_quote_link(symbol.as_str()) {\n-                span_lint(\n-                    ctx,\n-                    DOC_LINK_WITH_QUOTES,\n-                    attr.span,\n-                    \"possible intra-doc link using quotes instead of backticks\",\n-                );\n-            }\n-        }\n-    }\n-}\n-\n-fn contains_quote_link(s: &str) -> bool {\n-    let mut in_backticks = false;\n-    let mut found_opening = false;\n-\n-    for c in s.chars().tuple_windows::<(char, char)>() {\n-        match c {\n-            ('`', _) => in_backticks = !in_backticks,\n-            ('[', '\\'') if !in_backticks => found_opening = true,\n-            ('\\'', ']') if !in_backticks && found_opening => return true,\n-            _ => {},\n-        }\n-    }\n-\n-    false\n-}"}, {"sha": "0d850f1d9240d9fe647dddec1033cbbbc1a925c5", "filename": "clippy_lints/src/lib.register_lints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3757a0e903b781fe77092e166210c2089594c929/clippy_lints%2Fsrc%2Flib.register_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3757a0e903b781fe77092e166210c2089594c929/clippy_lints%2Fsrc%2Flib.register_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_lints.rs?ref=3757a0e903b781fe77092e166210c2089594c929", "patch": "@@ -118,12 +118,12 @@ store.register_lints(&[\n     disallowed_names::DISALLOWED_NAMES,\n     disallowed_script_idents::DISALLOWED_SCRIPT_IDENTS,\n     disallowed_types::DISALLOWED_TYPES,\n+    doc::DOC_LINK_WITH_QUOTES,\n     doc::DOC_MARKDOWN,\n     doc::MISSING_ERRORS_DOC,\n     doc::MISSING_PANICS_DOC,\n     doc::MISSING_SAFETY_DOC,\n     doc::NEEDLESS_DOCTEST_MAIN,\n-    doc_link_with_quotes::DOC_LINK_WITH_QUOTES,\n     double_parens::DOUBLE_PARENS,\n     drop_forget_ref::DROP_COPY,\n     drop_forget_ref::DROP_NON_DROP,"}, {"sha": "dd3e2b7d29c1409c15796b58e2f78cab077b2ff6", "filename": "clippy_lints/src/lib.register_pedantic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3757a0e903b781fe77092e166210c2089594c929/clippy_lints%2Fsrc%2Flib.register_pedantic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3757a0e903b781fe77092e166210c2089594c929/clippy_lints%2Fsrc%2Flib.register_pedantic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_pedantic.rs?ref=3757a0e903b781fe77092e166210c2089594c929", "patch": "@@ -20,10 +20,10 @@ store.register_group(true, \"clippy::pedantic\", Some(\"clippy_pedantic\"), vec![\n     LintId::of(dereference::REF_BINDING_TO_REFERENCE),\n     LintId::of(derive::EXPL_IMPL_CLONE_ON_COPY),\n     LintId::of(derive::UNSAFE_DERIVE_DESERIALIZE),\n+    LintId::of(doc::DOC_LINK_WITH_QUOTES),\n     LintId::of(doc::DOC_MARKDOWN),\n     LintId::of(doc::MISSING_ERRORS_DOC),\n     LintId::of(doc::MISSING_PANICS_DOC),\n-    LintId::of(doc_link_with_quotes::DOC_LINK_WITH_QUOTES),\n     LintId::of(empty_enum::EMPTY_ENUM),\n     LintId::of(enum_variants::MODULE_NAME_REPETITIONS),\n     LintId::of(eta_reduction::REDUNDANT_CLOSURE_FOR_METHOD_CALLS),"}, {"sha": "c5f0fd5fe5ed24c29754c9e150ad24cc18acd691", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3757a0e903b781fe77092e166210c2089594c929/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3757a0e903b781fe77092e166210c2089594c929/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=3757a0e903b781fe77092e166210c2089594c929", "patch": "@@ -204,7 +204,6 @@ mod disallowed_names;\n mod disallowed_script_idents;\n mod disallowed_types;\n mod doc;\n-mod doc_link_with_quotes;\n mod double_parens;\n mod drop_forget_ref;\n mod duplicate_mod;\n@@ -864,7 +863,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_early_pass(|| Box::new(single_char_lifetime_names::SingleCharLifetimeNames));\n     store.register_late_pass(move |_| Box::new(manual_bits::ManualBits::new(msrv)));\n     store.register_late_pass(|_| Box::new(default_union_representation::DefaultUnionRepresentation));\n-    store.register_early_pass(|| Box::new(doc_link_with_quotes::DocLinkWithQuotes));\n     store.register_late_pass(|_| Box::<only_used_in_recursion::OnlyUsedInRecursion>::default());\n     let allow_dbg_in_tests = conf.allow_dbg_in_tests;\n     store.register_late_pass(move |_| Box::new(dbg_macro::DbgMacro::new(allow_dbg_in_tests)));"}, {"sha": "17c04c34e2461dbef69838741da5e583c17bfb6e", "filename": "tests/ui/doc_link_with_quotes.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3757a0e903b781fe77092e166210c2089594c929/tests%2Fui%2Fdoc_link_with_quotes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3757a0e903b781fe77092e166210c2089594c929/tests%2Fui%2Fdoc_link_with_quotes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc_link_with_quotes.rs?ref=3757a0e903b781fe77092e166210c2089594c929", "patch": "@@ -4,9 +4,14 @@ fn main() {\n     foo()\n }\n \n-/// Calls ['bar']\n+/// Calls ['bar'] uselessly\n pub fn foo() {\n     bar()\n }\n \n+/// # Examples\n+/// This demonstrates issue \\#8961\n+/// ```\n+/// let _ = vec!['w', 'a', 't'];\n+/// ```\n pub fn bar() {}"}, {"sha": "ea730e667d65bdad1526230f532258448df55596", "filename": "tests/ui/doc_link_with_quotes.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3757a0e903b781fe77092e166210c2089594c929/tests%2Fui%2Fdoc_link_with_quotes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3757a0e903b781fe77092e166210c2089594c929/tests%2Fui%2Fdoc_link_with_quotes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc_link_with_quotes.stderr?ref=3757a0e903b781fe77092e166210c2089594c929", "patch": "@@ -1,8 +1,8 @@\n error: possible intra-doc link using quotes instead of backticks\n-  --> $DIR/doc_link_with_quotes.rs:7:1\n+  --> $DIR/doc_link_with_quotes.rs:7:12\n    |\n-LL | /// Calls ['bar']\n-   | ^^^^^^^^^^^^^^^^^\n+LL | /// Calls ['bar'] uselessly\n+   |            ^^^^^\n    |\n    = note: `-D clippy::doc-link-with-quotes` implied by `-D warnings`\n "}]}