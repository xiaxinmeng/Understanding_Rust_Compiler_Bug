{"sha": "90926b9479a0403f7a5d8a94af876d88d42a8237", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwOTI2Yjk0NzlhMDQwM2Y3YTVkOGE5NGFmODc2ZDg4ZDQyYTgyMzc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-05-05T08:33:07Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-05-28T13:15:17Z"}, "message": "drop errors from SyntaxNode", "tree": {"sha": "5d29da367e59fc02315f79865dd079f5f946cd7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d29da367e59fc02315f79865dd079f5f946cd7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90926b9479a0403f7a5d8a94af876d88d42a8237", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90926b9479a0403f7a5d8a94af876d88d42a8237", "html_url": "https://github.com/rust-lang/rust/commit/90926b9479a0403f7a5d8a94af876d88d42a8237", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90926b9479a0403f7a5d8a94af876d88d42a8237/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f52eda675e271675c99bb27ed8622690cebb5678", "url": "https://api.github.com/repos/rust-lang/rust/commits/f52eda675e271675c99bb27ed8622690cebb5678", "html_url": "https://github.com/rust-lang/rust/commit/f52eda675e271675c99bb27ed8622690cebb5678"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "6a4f3ff1308e1acbd1b0de45dbd3e2421d3b95d9", "filename": "crates/ra_syntax/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90926b9479a0403f7a5d8a94af876d88d42a8237/crates%2Fra_syntax%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90926b9479a0403f7a5d8a94af876d88d42a8237/crates%2Fra_syntax%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Flib.rs?ref=90926b9479a0403f7a5d8a94af876d88d42a8237", "patch": "@@ -74,8 +74,8 @@ impl Parse {\n pub use crate::ast::SourceFile;\n \n impl SourceFile {\n-    fn new(green: GreenNode, errors: Vec<SyntaxError>) -> TreeArc<SourceFile> {\n-        let root = SyntaxNode::new(green, errors);\n+    fn new(green: GreenNode, _errors: Vec<SyntaxError>) -> TreeArc<SourceFile> {\n+        let root = SyntaxNode::new(green);\n         if cfg!(debug_assertions) {\n             validation::validate_block_structure(&root);\n         }"}, {"sha": "e4eab6b870ed4d7a915e0b683c01358f522c04da", "filename": "crates/ra_syntax/src/syntax_node.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/90926b9479a0403f7a5d8a94af876d88d42a8237/crates%2Fra_syntax%2Fsrc%2Fsyntax_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90926b9479a0403f7a5d8a94af876d88d42a8237/crates%2Fra_syntax%2Fsrc%2Fsyntax_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fsyntax_node.rs?ref=90926b9479a0403f7a5d8a94af876d88d42a8237", "patch": "@@ -9,7 +9,6 @@\n use std::{\n     ops::RangeInclusive,\n     fmt::{self, Write},\n-    any::Any,\n     borrow::Borrow,\n     iter::successors,\n };\n@@ -133,10 +132,8 @@ pub enum Direction {\n }\n \n impl SyntaxNode {\n-    pub(crate) fn new(green: GreenNode, errors: Vec<SyntaxError>) -> TreeArc<SyntaxNode> {\n-        let errors: Option<Box<Any + Send + Sync>> =\n-            if errors.is_empty() { None } else { Some(Box::new(errors)) };\n-        let ptr = TreeArc(rowan::SyntaxNode::new(green, errors));\n+    pub(crate) fn new(green: GreenNode) -> TreeArc<SyntaxNode> {\n+        let ptr = TreeArc(rowan::SyntaxNode::new(green, None));\n         TreeArc::cast(ptr)\n     }\n \n@@ -630,8 +627,8 @@ impl SyntaxTreeBuilder {\n     }\n \n     pub fn finish(self) -> TreeArc<SyntaxNode> {\n-        let (green, errors) = self.finish_raw();\n-        let node = SyntaxNode::new(green, errors);\n+        let (green, _errors) = self.finish_raw();\n+        let node = SyntaxNode::new(green);\n         if cfg!(debug_assertions) {\n             crate::validation::validate_block_structure(&node);\n         }"}]}