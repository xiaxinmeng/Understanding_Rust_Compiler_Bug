{"sha": "b22631bfafe0a6dbe038b180bf838847b39385ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyMjYzMWJmYWZlMGE2ZGJlMDM4YjE4MGJmODM4ODQ3YjM5Mzg1ZWE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-29T17:53:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-29T17:53:59Z"}, "message": "Rollup merge of #69571 - matthiaskrgr:useless_asref, r=Centril\n\nremove unneeded .as_ref() calls.", "tree": {"sha": "4f1c7edd80e46e39e7ba22d43473d4834aa743aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f1c7edd80e46e39e7ba22d43473d4834aa743aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b22631bfafe0a6dbe038b180bf838847b39385ea", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeWqU3CRBK7hj4Ov3rIwAAdHIIAAvgDisYEWb4Oc41CXl/+Rkn\nQYOWxOsnfczJLwuzHEBlMSmSS/MIVvcTUJZvu13n0xhFHbxoODrVPcih20p/ZVGJ\nKhFPNFjQ7O8oLOo3SW/AqUsjF56xJg8UT3YcRm3YVku+AdC4y94a/khtCXe32ura\nYgZwNLVuN8DgCpNdAozfjrHKT69Uu+ch/sV6I7OODIIeGSJmcXIwhMLQvheDUusY\nysiL4JUZ8U2kkluvvYHOI1L86+5mY7fm9wGgXigTdXYXpYhrifKGR3/5PcRCzwda\ntZssAluuJJOUKCeoE+smlMmKwIozHGwFK+dcvnYxISJ5QBFvhFoq+zTgerFqE9A=\n=9xmU\n-----END PGP SIGNATURE-----\n", "payload": "tree 4f1c7edd80e46e39e7ba22d43473d4834aa743aa\nparent e9bca510fe17354f876aa289bb39d347d7c69c69\nparent f55b2c9b12144375bfbe31f7c6b27105e601edb0\nauthor Dylan DPC <dylan.dpc@gmail.com> 1582998839 +0100\ncommitter GitHub <noreply@github.com> 1582998839 +0100\n\nRollup merge of #69571 - matthiaskrgr:useless_asref, r=Centril\n\nremove unneeded .as_ref() calls.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b22631bfafe0a6dbe038b180bf838847b39385ea", "html_url": "https://github.com/rust-lang/rust/commit/b22631bfafe0a6dbe038b180bf838847b39385ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b22631bfafe0a6dbe038b180bf838847b39385ea/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9bca510fe17354f876aa289bb39d347d7c69c69", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9bca510fe17354f876aa289bb39d347d7c69c69", "html_url": "https://github.com/rust-lang/rust/commit/e9bca510fe17354f876aa289bb39d347d7c69c69"}, {"sha": "f55b2c9b12144375bfbe31f7c6b27105e601edb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f55b2c9b12144375bfbe31f7c6b27105e601edb0", "html_url": "https://github.com/rust-lang/rust/commit/f55b2c9b12144375bfbe31f7c6b27105e601edb0"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "fd84be919d426f6a8a0b9fb54aecbb65a6a257ff", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22631bfafe0a6dbe038b180bf838847b39385ea/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22631bfafe0a6dbe038b180bf838847b39385ea/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=b22631bfafe0a6dbe038b180bf838847b39385ea", "patch": "@@ -657,7 +657,7 @@ impl EmbargoVisitor<'tcx> {\n                 .map(|module_hir_id| self.tcx.hir().expect_item(module_hir_id))\n             {\n                 if let hir::ItemKind::Mod(m) = &item.kind {\n-                    for item_id in m.item_ids.as_ref() {\n+                    for item_id in m.item_ids {\n                         let item = self.tcx.hir().expect_item(item_id.id);\n                         let def_id = self.tcx.hir().local_def_id(item_id.id);\n                         if !self.tcx.hygienic_eq(segment.ident, item.ident, def_id) {"}, {"sha": "ec87112b7a8e076b47e13b838f7988ffc18ad734", "filename": "src/librustc_typeck/collect/type_of.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22631bfafe0a6dbe038b180bf838847b39385ea/src%2Flibrustc_typeck%2Fcollect%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22631bfafe0a6dbe038b180bf838847b39385ea/src%2Flibrustc_typeck%2Fcollect%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect%2Ftype_of.rs?ref=b22631bfafe0a6dbe038b180bf838847b39385ea", "patch": "@@ -239,7 +239,7 @@ pub(super) fn type_of(tcx: TyCtxt<'_>, def_id: DefId) -> Ty<'_> {\n                             .segments\n                             .iter()\n                             .filter_map(|seg| seg.args.as_ref())\n-                            .map(|generic_args| generic_args.args.as_ref())\n+                            .map(|generic_args| generic_args.args)\n                             .find_map(|args| {\n                                 args.iter()\n                                     .filter(|arg| arg.is_const())"}, {"sha": "b8361d3e8259951991972a224af6ee23826e3564", "filename": "src/libstd/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22631bfafe0a6dbe038b180bf838847b39385ea/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22631bfafe0a6dbe038b180bf838847b39385ea/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=b22631bfafe0a6dbe038b180bf838847b39385ea", "patch": "@@ -2011,7 +2011,7 @@ impl Path {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn file_name(&self) -> Option<&OsStr> {\n         self.components().next_back().and_then(|p| match p {\n-            Component::Normal(p) => Some(p.as_ref()),\n+            Component::Normal(p) => Some(p),\n             _ => None,\n         })\n     }"}]}