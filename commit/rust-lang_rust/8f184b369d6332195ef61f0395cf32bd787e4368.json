{"sha": "8f184b369d6332195ef61f0395cf32bd787e4368", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmMTg0YjM2OWQ2MzMyMTk1ZWY2MWYwMzk1Y2YzMmJkNzg3ZTQzNjg=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-29T06:58:52Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-31T00:45:51Z"}, "message": "qualify_consts: misc cleanup.", "tree": {"sha": "711f37881d20fe96bc1e5196b5889ee917b5a53d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/711f37881d20fe96bc1e5196b5889ee917b5a53d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f184b369d6332195ef61f0395cf32bd787e4368", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f184b369d6332195ef61f0395cf32bd787e4368", "html_url": "https://github.com/rust-lang/rust/commit/8f184b369d6332195ef61f0395cf32bd787e4368", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f184b369d6332195ef61f0395cf32bd787e4368/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cc8087c4849fcbb8eeae208ace59bdf9b156ca8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3cc8087c4849fcbb8eeae208ace59bdf9b156ca8", "html_url": "https://github.com/rust-lang/rust/commit/3cc8087c4849fcbb8eeae208ace59bdf9b156ca8"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "fcbb3433a62d95936849bcb563cffef654aea077", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8f184b369d6332195ef61f0395cf32bd787e4368/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f184b369d6332195ef61f0395cf32bd787e4368/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=8f184b369d6332195ef61f0395cf32bd787e4368", "patch": "@@ -1714,20 +1714,16 @@ impl<'tcx> MirPass<'tcx> for QualifyAndPromoteConstants<'tcx> {\n                         },\n                         target,\n                         ..\n-                    } => {\n-                        if promoted_temps.contains(index) {\n-                            terminator.kind = TerminatorKind::Goto {\n-                                target,\n-                            };\n-                        }\n+                    } if promoted_temps.contains(index) => {\n+                        terminator.kind = TerminatorKind::Goto { target };\n                     }\n                     _ => {}\n                 }\n             }\n         }\n \n         // Statics must be Sync.\n-        if mode == Mode::Static {\n+        if let Mode::Static = mode {\n             // `#[thread_local]` statics don't have to be `Sync`.\n             for attr in &tcx.get_attrs(def_id)[..] {\n                 if attr.check_name(sym::thread_local) {"}]}