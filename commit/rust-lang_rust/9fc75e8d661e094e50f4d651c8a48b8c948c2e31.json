{"sha": "9fc75e8d661e094e50f4d651c8a48b8c948c2e31", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmYzc1ZThkNjYxZTA5NGU1MGY0ZDY1MWM4YTQ4YjhjOTQ4YzJlMzE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-11-13T00:45:24Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-11-13T00:45:24Z"}, "message": "Move codemap doc comments to the proper place", "tree": {"sha": "0346768b4f90c630a226d66037e0d6601390bddb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0346768b4f90c630a226d66037e0d6601390bddb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fc75e8d661e094e50f4d651c8a48b8c948c2e31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fc75e8d661e094e50f4d651c8a48b8c948c2e31", "html_url": "https://github.com/rust-lang/rust/commit/9fc75e8d661e094e50f4d651c8a48b8c948c2e31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fc75e8d661e094e50f4d651c8a48b8c948c2e31/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f3303163c3f4a725b29de5e00eb14a5c53dd16e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f3303163c3f4a725b29de5e00eb14a5c53dd16e", "html_url": "https://github.com/rust-lang/rust/commit/1f3303163c3f4a725b29de5e00eb14a5c53dd16e"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "d8c39f111c6c7202e25fcd4b5e07ec46b4fdc417", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9fc75e8d661e094e50f4d651c8a48b8c948c2e31/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fc75e8d661e094e50f4d651c8a48b8c948c2e31/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=9fc75e8d661e094e50f4d651c8a48b8c948c2e31", "patch": "@@ -1,3 +1,9 @@\n+/*! A codemap is a thing that maps uints to file/line/column positions\n+ * in a crate. This to make it possible to represent the positions\n+ * with single-word things, rather than passing records all over the\n+ * compiler.\n+ */\n+\n use dvec::DVec;\n use std::serialization::{Serializable,\n                          Deserializable,\n@@ -46,12 +52,6 @@ impl file_pos : cmp::Eq {\n     pure fn ne(other: &file_pos) -> bool { !self.eq(other) }\n }\n \n-/* A codemap is a thing that maps uints to file/line/column positions\n- * in a crate. This to make it possible to represent the positions\n- * with single-word things, rather than passing records all over the\n- * compiler.\n- */\n-\n enum file_substr {\n     fss_none,\n     fss_internal(span),"}]}