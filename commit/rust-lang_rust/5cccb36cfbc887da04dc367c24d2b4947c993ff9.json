{"sha": "5cccb36cfbc887da04dc367c24d2b4947c993ff9", "node_id": "C_kwDOAAsO6NoAKDVjY2NiMzZjZmJjODg3ZGEwNGRjMzY3YzI0ZDJiNDk0N2M5OTNmZjk", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-18T03:04:21Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-18T03:04:26Z"}, "message": "higher-ranked lifetime message", "tree": {"sha": "cef76e9249c32b13e40433b370f8fb33cc5598b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cef76e9249c32b13e40433b370f8fb33cc5598b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cccb36cfbc887da04dc367c24d2b4947c993ff9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cccb36cfbc887da04dc367c24d2b4947c993ff9", "html_url": "https://github.com/rust-lang/rust/commit/5cccb36cfbc887da04dc367c24d2b4947c993ff9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cccb36cfbc887da04dc367c24d2b4947c993ff9/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "984eab57f708e62c09b3d708033fe620130b5f39", "url": "https://api.github.com/repos/rust-lang/rust/commits/984eab57f708e62c09b3d708033fe620130b5f39", "html_url": "https://github.com/rust-lang/rust/commit/984eab57f708e62c09b3d708033fe620130b5f39"}], "stats": {"total": 63, "additions": 57, "deletions": 6}, "files": [{"sha": "ef0f41223eab55bbd4fe55d7a04545446d8f0e4e", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/5cccb36cfbc887da04dc367c24d2b4947c993ff9/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cccb36cfbc887da04dc367c24d2b4947c993ff9/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=5cccb36cfbc887da04dc367c24d2b4947c993ff9", "patch": "@@ -1512,7 +1512,7 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n             count: 1,\n         };\n         let elision_candidate = LifetimeElisionCandidate::Missing(missing_lifetime);\n-        for rib in self.lifetime_ribs.iter().rev() {\n+        for (i, rib) in self.lifetime_ribs.iter().enumerate().rev() {\n             debug!(?rib.kind);\n             match rib.kind {\n                 LifetimeRibKind::AnonymousCreateParameter { binder, .. } => {\n@@ -1529,16 +1529,31 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n                     } else {\n                         (\"`'_` cannot be used here\", \"`'_` is a reserved lifetime name\")\n                     };\n-                    rustc_errors::struct_span_err!(\n+                    let mut diag = rustc_errors::struct_span_err!(\n                         self.r.session,\n                         lifetime.ident.span,\n                         E0637,\n                         \"{}\",\n                         msg,\n-                    )\n-                    .span_label(lifetime.ident.span, note)\n-                    .emit();\n-\n+                    );\n+                    diag.span_label(lifetime.ident.span, note);\n+                    if elided {\n+                        for rib in self.lifetime_ribs[i..].iter().rev() {\n+                            if let LifetimeRibKind::Generics {\n+                                span,\n+                                kind: LifetimeBinderKind::PolyTrait | LifetimeBinderKind::WhereBound,\n+                                ..\n+                            } = &rib.kind\n+                            {\n+                                diag.span_help(\n+                                    *span,\n+                                    \"consider introducing a higher-ranked lifetime here with `for<'a>`\",\n+                                );\n+                                break;\n+                            }\n+                        }\n+                    }\n+                    diag.emit();\n                     self.record_lifetime_res(lifetime.id, LifetimeRes::Error, elision_candidate);\n                     return;\n                 }"}, {"sha": "78341735e191a1fbea98c8862328fc397e13bae6", "filename": "src/test/ui/error-codes/E0637.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5cccb36cfbc887da04dc367c24d2b4947c993ff9/src%2Ftest%2Fui%2Ferror-codes%2FE0637.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5cccb36cfbc887da04dc367c24d2b4947c993ff9/src%2Ftest%2Fui%2Ferror-codes%2FE0637.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0637.stderr?ref=5cccb36cfbc887da04dc367c24d2b4947c993ff9", "patch": "@@ -21,6 +21,12 @@ error[E0637]: `&` without an explicit lifetime name cannot be used here\n    |\n LL |     T: Into<&u32>,\n    |             ^ explicit lifetime name needed here\n+   |\n+help: consider introducing a higher-ranked lifetime here with `for<'a>`\n+  --> $DIR/E0637.rs:13:8\n+   |\n+LL |     T: Into<&u32>,\n+   |        ^\n \n error: aborting due to 3 previous errors\n "}, {"sha": "9d859fddf56b472d706ab7e0529647bdfbdc238d", "filename": "src/test/ui/generics/issue-65285-incorrect-explicit-lifetime-name-needed.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5cccb36cfbc887da04dc367c24d2b4947c993ff9/src%2Ftest%2Fui%2Fgenerics%2Fissue-65285-incorrect-explicit-lifetime-name-needed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5cccb36cfbc887da04dc367c24d2b4947c993ff9/src%2Ftest%2Fui%2Fgenerics%2Fissue-65285-incorrect-explicit-lifetime-name-needed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerics%2Fissue-65285-incorrect-explicit-lifetime-name-needed.stderr?ref=5cccb36cfbc887da04dc367c24d2b4947c993ff9", "patch": "@@ -3,6 +3,12 @@ error[E0637]: `&` without an explicit lifetime name cannot be used here\n    |\n LL | fn should_error<T>() where T : Into<&u32> {}\n    |                                     ^ explicit lifetime name needed here\n+   |\n+help: consider introducing a higher-ranked lifetime here with `for<'a>`\n+  --> $DIR/issue-65285-incorrect-explicit-lifetime-name-needed.rs:5:32\n+   |\n+LL | fn should_error<T>() where T : Into<&u32> {}\n+   |                                ^\n \n error[E0106]: missing lifetime specifier\n   --> $DIR/issue-65285-incorrect-explicit-lifetime-name-needed.rs:9:20"}, {"sha": "f4d14b5f87bec9fd1bb52881b9e8227f1cd18017", "filename": "src/test/ui/underscore-lifetime/where-clause-inherent-impl-ampersand.rust2015.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5cccb36cfbc887da04dc367c24d2b4947c993ff9/src%2Ftest%2Fui%2Funderscore-lifetime%2Fwhere-clause-inherent-impl-ampersand.rust2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5cccb36cfbc887da04dc367c24d2b4947c993ff9/src%2Ftest%2Fui%2Funderscore-lifetime%2Fwhere-clause-inherent-impl-ampersand.rust2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fwhere-clause-inherent-impl-ampersand.rust2015.stderr?ref=5cccb36cfbc887da04dc367c24d2b4947c993ff9", "patch": "@@ -3,6 +3,12 @@ error[E0637]: `&` without an explicit lifetime name cannot be used here\n    |\n LL |     T: WithType<&u32>\n    |                 ^ explicit lifetime name needed here\n+   |\n+help: consider introducing a higher-ranked lifetime here with `for<'a>`\n+  --> $DIR/where-clause-inherent-impl-ampersand.rs:13:8\n+   |\n+LL |     T: WithType<&u32>\n+   |        ^\n \n error: aborting due to previous error\n "}, {"sha": "f4d14b5f87bec9fd1bb52881b9e8227f1cd18017", "filename": "src/test/ui/underscore-lifetime/where-clause-inherent-impl-ampersand.rust2018.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5cccb36cfbc887da04dc367c24d2b4947c993ff9/src%2Ftest%2Fui%2Funderscore-lifetime%2Fwhere-clause-inherent-impl-ampersand.rust2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5cccb36cfbc887da04dc367c24d2b4947c993ff9/src%2Ftest%2Fui%2Funderscore-lifetime%2Fwhere-clause-inherent-impl-ampersand.rust2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fwhere-clause-inherent-impl-ampersand.rust2018.stderr?ref=5cccb36cfbc887da04dc367c24d2b4947c993ff9", "patch": "@@ -3,6 +3,12 @@ error[E0637]: `&` without an explicit lifetime name cannot be used here\n    |\n LL |     T: WithType<&u32>\n    |                 ^ explicit lifetime name needed here\n+   |\n+help: consider introducing a higher-ranked lifetime here with `for<'a>`\n+  --> $DIR/where-clause-inherent-impl-ampersand.rs:13:8\n+   |\n+LL |     T: WithType<&u32>\n+   |        ^\n \n error: aborting due to previous error\n "}, {"sha": "63fc1a19b9383e53b686fe8ee0c2a5a1712e5792", "filename": "src/test/ui/underscore-lifetime/where-clause-trait-impl-region.rust2015.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5cccb36cfbc887da04dc367c24d2b4947c993ff9/src%2Ftest%2Fui%2Funderscore-lifetime%2Fwhere-clause-trait-impl-region.rust2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5cccb36cfbc887da04dc367c24d2b4947c993ff9/src%2Ftest%2Fui%2Funderscore-lifetime%2Fwhere-clause-trait-impl-region.rust2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fwhere-clause-trait-impl-region.rust2015.stderr?ref=5cccb36cfbc887da04dc367c24d2b4947c993ff9", "patch": "@@ -3,6 +3,12 @@ error[E0637]: `&` without an explicit lifetime name cannot be used here\n    |\n LL |     T: WithType<&u32>\n    |                 ^ explicit lifetime name needed here\n+   |\n+help: consider introducing a higher-ranked lifetime here with `for<'a>`\n+  --> $DIR/where-clause-trait-impl-region.rs:11:8\n+   |\n+LL |     T: WithType<&u32>\n+   |        ^\n \n error: aborting due to previous error\n "}, {"sha": "63fc1a19b9383e53b686fe8ee0c2a5a1712e5792", "filename": "src/test/ui/underscore-lifetime/where-clause-trait-impl-region.rust2018.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5cccb36cfbc887da04dc367c24d2b4947c993ff9/src%2Ftest%2Fui%2Funderscore-lifetime%2Fwhere-clause-trait-impl-region.rust2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5cccb36cfbc887da04dc367c24d2b4947c993ff9/src%2Ftest%2Fui%2Funderscore-lifetime%2Fwhere-clause-trait-impl-region.rust2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fwhere-clause-trait-impl-region.rust2018.stderr?ref=5cccb36cfbc887da04dc367c24d2b4947c993ff9", "patch": "@@ -3,6 +3,12 @@ error[E0637]: `&` without an explicit lifetime name cannot be used here\n    |\n LL |     T: WithType<&u32>\n    |                 ^ explicit lifetime name needed here\n+   |\n+help: consider introducing a higher-ranked lifetime here with `for<'a>`\n+  --> $DIR/where-clause-trait-impl-region.rs:11:8\n+   |\n+LL |     T: WithType<&u32>\n+   |        ^\n \n error: aborting due to previous error\n "}]}