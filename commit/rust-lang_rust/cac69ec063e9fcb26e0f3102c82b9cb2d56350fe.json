{"sha": "cac69ec063e9fcb26e0f3102c82b9cb2d56350fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhYzY5ZWMwNjNlOWZjYjI2ZTBmMzEwMmM4MmI5Y2IyZDU2MzUwZmU=", "commit": {"author": {"name": "xd009642", "email": "danielmckenna93@gmail.com", "date": "2019-07-27T10:51:27Z"}, "committer": {"name": "xd009642", "email": "danielmckenna93@gmail.com", "date": "2019-07-27T10:51:27Z"}, "message": "Respond to comments and improve printout\n\nNow get the trait names for the diagnostic message and removed more\n`let c: fn(_) -> _ = T; hashes from hir_utils", "tree": {"sha": "3eab8383de501f31059ff3054bcd02b3e6956db8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3eab8383de501f31059ff3054bcd02b3e6956db8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cac69ec063e9fcb26e0f3102c82b9cb2d56350fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cac69ec063e9fcb26e0f3102c82b9cb2d56350fe", "html_url": "https://github.com/rust-lang/rust/commit/cac69ec063e9fcb26e0f3102c82b9cb2d56350fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cac69ec063e9fcb26e0f3102c82b9cb2d56350fe/comments", "author": {"login": "xd009642", "id": 3472518, "node_id": "MDQ6VXNlcjM0NzI1MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3472518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xd009642", "html_url": "https://github.com/xd009642", "followers_url": "https://api.github.com/users/xd009642/followers", "following_url": "https://api.github.com/users/xd009642/following{/other_user}", "gists_url": "https://api.github.com/users/xd009642/gists{/gist_id}", "starred_url": "https://api.github.com/users/xd009642/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xd009642/subscriptions", "organizations_url": "https://api.github.com/users/xd009642/orgs", "repos_url": "https://api.github.com/users/xd009642/repos", "events_url": "https://api.github.com/users/xd009642/events{/privacy}", "received_events_url": "https://api.github.com/users/xd009642/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xd009642", "id": 3472518, "node_id": "MDQ6VXNlcjM0NzI1MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3472518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xd009642", "html_url": "https://github.com/xd009642", "followers_url": "https://api.github.com/users/xd009642/followers", "following_url": "https://api.github.com/users/xd009642/following{/other_user}", "gists_url": "https://api.github.com/users/xd009642/gists{/gist_id}", "starred_url": "https://api.github.com/users/xd009642/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xd009642/subscriptions", "organizations_url": "https://api.github.com/users/xd009642/orgs", "repos_url": "https://api.github.com/users/xd009642/repos", "events_url": "https://api.github.com/users/xd009642/events{/privacy}", "received_events_url": "https://api.github.com/users/xd009642/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7853dac66245d88bace4cdc62b38837aa3e54568", "url": "https://api.github.com/repos/rust-lang/rust/commits/7853dac66245d88bace4cdc62b38837aa3e54568", "html_url": "https://github.com/rust-lang/rust/commit/7853dac66245d88bace4cdc62b38837aa3e54568"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "3ef353a978fae6ae147754b904123e0abaad9b82", "filename": "clippy_lints/src/trait_bounds.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cac69ec063e9fcb26e0f3102c82b9cb2d56350fe/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cac69ec063e9fcb26e0f3102c82b9cb2d56350fe/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrait_bounds.rs?ref=cac69ec063e9fcb26e0f3102c82b9cb2d56350fe", "patch": "@@ -32,10 +32,16 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for TraitBounds {\n                 if let Some(ref v) = map.insert(h, p.bounds.iter().collect::<Vec<_>>()) {\n                     let mut hint_string = format!(\"consider combining the bounds: `{:?}: \", p.bounded_ty);\n                     for b in v.iter() {\n-                        hint_string.push_str(&format!(\"{:?}, \", b));\n+                        if let GenericBound::Trait(ref poly_trait_ref, _) = b {\n+                            let path = &poly_trait_ref.trait_ref.path;\n+                            hint_string.push_str(&format!(\"{}, \", path));\n+                        }\n                     }\n                     for b in p.bounds.iter() {\n-                        hint_string.push_str(&format!(\"{:?}, \", b));\n+                        if let GenericBound::Trait(ref poly_trait_ref, _) = b {\n+                            let path = &poly_trait_ref.trait_ref.path;\n+                            hint_string.push_str(&format!(\"{}, \", path));\n+                        }\n                     }\n                     hint_string.truncate(hint_string.len() - 2);\n                     hint_string.push('`');"}, {"sha": "449b8c4397da7560185914bb584577641e3c5264", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cac69ec063e9fcb26e0f3102c82b9cb2d56350fe/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cac69ec063e9fcb26e0f3102c82b9cb2d56350fe/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=cac69ec063e9fcb26e0f3102c82b9cb2d56350fe", "patch": "@@ -513,18 +513,12 @@ impl<'a, 'tcx> SpanlessHash<'a, 'tcx> {\n                 }\n             },\n             ExprKind::Tup(ref tup) => {\n-                let c: fn(_) -> _ = ExprKind::Tup;\n-                c.hash(&mut self.s);\n                 self.hash_exprs(tup);\n             },\n             ExprKind::Array(ref v) => {\n-                let c: fn(_) -> _ = ExprKind::Array;\n-                c.hash(&mut self.s);\n                 self.hash_exprs(v);\n             },\n             ExprKind::Type(ref e, ref ty) => {\n-                let c: fn(_, _) -> _ = ExprKind::Type;\n-                c.hash(&mut self.s);\n                 self.hash_expr(e);\n                 self.hash_ty(ty);\n             },"}]}