{"sha": "56ee9864c187a2a754a44be7d6ac529dda9058fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2ZWU5ODY0YzE4N2EyYTc1NGE0NGJlN2Q2YWM1MjlkZGE5MDU4ZmM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-07-06T15:49:23Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-07-06T15:49:23Z"}, "message": "Don't pass local_crate_name to link_binary separately\n\nIt is already part of CodegenResults", "tree": {"sha": "20554aeb81efee07eeadb1da3dd9e0b35bc56eeb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20554aeb81efee07eeadb1da3dd9e0b35bc56eeb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56ee9864c187a2a754a44be7d6ac529dda9058fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56ee9864c187a2a754a44be7d6ac529dda9058fc", "html_url": "https://github.com/rust-lang/rust/commit/56ee9864c187a2a754a44be7d6ac529dda9058fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56ee9864c187a2a754a44be7d6ac529dda9058fc/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5aaa953dcc377ce9c9a01fba0f54d097d029e7fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/5aaa953dcc377ce9c9a01fba0f54d097d029e7fb", "html_url": "https://github.com/rust-lang/rust/commit/5aaa953dcc377ce9c9a01fba0f54d097d029e7fb"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "ebf98e8694b78f96f0e8dee0d25324256d7fcac7", "filename": "compiler/rustc_codegen_cranelift/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/56ee9864c187a2a754a44be7d6ac529dda9058fc/compiler%2Frustc_codegen_cranelift%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56ee9864c187a2a754a44be7d6ac529dda9058fc/compiler%2Frustc_codegen_cranelift%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Flib.rs?ref=56ee9864c187a2a754a44be7d6ac529dda9058fc", "patch": "@@ -219,7 +219,6 @@ impl CodegenBackend for CraneliftCodegenBackend {\n             sess,\n             &codegen_results,\n             outputs,\n-            &codegen_results.crate_info.local_crate_name.as_str(),\n         );\n \n         Ok(())"}, {"sha": "26fd1cfbcd08e7dad15a1281f814106b86e50c9d", "filename": "compiler/rustc_codegen_llvm/src/lib.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/56ee9864c187a2a754a44be7d6ac529dda9058fc/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56ee9864c187a2a754a44be7d6ac529dda9058fc/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs?ref=56ee9864c187a2a754a44be7d6ac529dda9058fc", "patch": "@@ -292,12 +292,7 @@ impl CodegenBackend for LlvmCodegenBackend {\n \n         // Run the linker on any artifacts that resulted from the LLVM run.\n         // This should produce either a finished executable or library.\n-        link_binary::<LlvmArchiveBuilder<'_>>(\n-            sess,\n-            &codegen_results,\n-            outputs,\n-            &codegen_results.crate_info.local_crate_name.as_str(),\n-        );\n+        link_binary::<LlvmArchiveBuilder<'_>>(sess, &codegen_results, outputs);\n \n         Ok(())\n     }"}, {"sha": "cb8fd263a60997911b6cf469ee0c9fe0e0cede37", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/56ee9864c187a2a754a44be7d6ac529dda9058fc/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56ee9864c187a2a754a44be7d6ac529dda9058fc/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=56ee9864c187a2a754a44be7d6ac529dda9058fc", "patch": "@@ -54,7 +54,6 @@ pub fn link_binary<'a, B: ArchiveBuilder<'a>>(\n     sess: &'a Session,\n     codegen_results: &CodegenResults,\n     outputs: &OutputFilenames,\n-    crate_name: &str,\n ) {\n     let _timer = sess.timer(\"link_binary\");\n     let output_metadata = sess.opts.output_types.contains_key(&OutputType::Metadata);\n@@ -87,7 +86,12 @@ pub fn link_binary<'a, B: ArchiveBuilder<'a>>(\n                 .tempdir()\n                 .unwrap_or_else(|err| sess.fatal(&format!(\"couldn't create a temp dir: {}\", err)));\n             let path = MaybeTempDir::new(tmpdir, sess.opts.cg.save_temps);\n-            let out_filename = out_filename(sess, crate_type, outputs, crate_name);\n+            let out_filename = out_filename(\n+                sess,\n+                crate_type,\n+                outputs,\n+                &codegen_results.crate_info.local_crate_name.as_str(),\n+            );\n             match crate_type {\n                 CrateType::Rlib => {\n                     let _timer = sess.timer(\"link_rlib\");"}]}