{"sha": "55d4afd2ba93923fa91bb4099ac805de50f4dc6e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1ZDRhZmQyYmE5MzkyM2ZhOTFiYjQwOTlhYzgwNWRlNTBmNGRjNmU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-09-16T14:54:58Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-09-16T14:54:58Z"}, "message": "Remove byteorder dependency", "tree": {"sha": "f233fba770ca384261d29da72fe5ad8cdd26bbd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f233fba770ca384261d29da72fe5ad8cdd26bbd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55d4afd2ba93923fa91bb4099ac805de50f4dc6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55d4afd2ba93923fa91bb4099ac805de50f4dc6e", "html_url": "https://github.com/rust-lang/rust/commit/55d4afd2ba93923fa91bb4099ac805de50f4dc6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55d4afd2ba93923fa91bb4099ac805de50f4dc6e/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7285c134d101d441cddb9b62d33d4791d1b87dc0", "url": "https://api.github.com/repos/rust-lang/rust/commits/7285c134d101d441cddb9b62d33d4791d1b87dc0", "html_url": "https://github.com/rust-lang/rust/commit/7285c134d101d441cddb9b62d33d4791d1b87dc0"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "9c669c87a734ac9041ac6b8cb0058cbd6de965d1", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55d4afd2ba93923fa91bb4099ac805de50f4dc6e/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/55d4afd2ba93923fa91bb4099ac805de50f4dc6e/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=55d4afd2ba93923fa91bb4099ac805de50f4dc6e", "patch": "@@ -317,7 +317,6 @@ name = \"rustc_codegen_cranelift\"\n version = \"0.1.0\"\n dependencies = [\n  \"ar\",\n- \"byteorder\",\n  \"cfg-if\",\n  \"cranelift-codegen\",\n  \"cranelift-frontend\","}, {"sha": "5962356beeaf1c165c94e64cc9d09d0a4fdad0f0", "filename": "Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55d4afd2ba93923fa91bb4099ac805de50f4dc6e/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55d4afd2ba93923fa91bb4099ac805de50f4dc6e/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=55d4afd2ba93923fa91bb4099ac805de50f4dc6e", "patch": "@@ -19,7 +19,6 @@ gimli = { version = \"0.21.0\", default-features = false, features = [\"write\"]}\n object = { version = \"0.21.1\", default-features = false, features = [\"read\", \"std\", \"write\"] }\n \n ar = { git = \"https://github.com/bjorn3/rust-ar.git\", branch = \"do_not_remove_cg_clif_ranlib\" }\n-byteorder = \"1.2.7\"\n indexmap = \"1.0.2\"\n cfg-if = \"0.1.10\"\n libloading = { version = \"0.6.0\", optional = true }"}, {"sha": "c58b39c1c8244f1f03c076fc4e5703cce4f9ece7", "filename": "src/vtable.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/55d4afd2ba93923fa91bb4099ac805de50f4dc6e/src%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d4afd2ba93923fa91bb4099ac805de50f4dc6e/src%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvtable.rs?ref=55d4afd2ba93923fa91bb4099ac805de50f4dc6e", "patch": "@@ -168,18 +168,23 @@ fn build_vtable<'tcx>(\n }\n \n fn write_usize(tcx: TyCtxt<'_>, buf: &mut [u8], idx: usize, num: u64) {\n-    use byteorder::{BigEndian, LittleEndian, WriteBytesExt};\n-\n-    let usize_size = tcx\n+    let pointer_size = tcx\n         .layout_of(ParamEnv::reveal_all().and(tcx.types.usize))\n         .unwrap()\n         .size\n         .bytes() as usize;\n-    let mut target = &mut buf[idx * usize_size..(idx + 1) * usize_size];\n+    let target = &mut buf[idx * pointer_size..(idx + 1) * pointer_size];\n \n     match tcx.data_layout.endian {\n-        rustc_target::abi::Endian::Little => target.write_uint::<LittleEndian>(num, usize_size),\n-        rustc_target::abi::Endian::Big => target.write_uint::<BigEndian>(num, usize_size),\n+        rustc_target::abi::Endian::Little => match pointer_size {\n+            4 => target.copy_from_slice(&(num as u32).to_le_bytes()),\n+            8 => target.copy_from_slice(&(num as u64).to_le_bytes()),\n+            _ => todo!(\"pointer size {} is not yet supported\", pointer_size),\n+        },\n+        rustc_target::abi::Endian::Big => match pointer_size {\n+            4 => target.copy_from_slice(&(num as u32).to_be_bytes()),\n+            8 => target.copy_from_slice(&(num as u64).to_be_bytes()),\n+            _ => todo!(\"pointer size {} is not yet supported\", pointer_size),\n+        },\n     }\n-    .unwrap()\n }"}]}