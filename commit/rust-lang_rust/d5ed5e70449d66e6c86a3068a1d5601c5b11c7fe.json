{"sha": "d5ed5e70449d66e6c86a3068a1d5601c5b11c7fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1ZWQ1ZTcwNDQ5ZDY2ZTZjODZhMzA2OGExZDU2MDFjNWIxMWM3ZmU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-10T01:12:08Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-10T01:12:08Z"}, "message": "Fix bug in parse rule for expr_index.", "tree": {"sha": "fd308b87de00d70121c17fdbf7277a71e62799b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd308b87de00d70121c17fdbf7277a71e62799b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5ed5e70449d66e6c86a3068a1d5601c5b11c7fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5ed5e70449d66e6c86a3068a1d5601c5b11c7fe", "html_url": "https://github.com/rust-lang/rust/commit/d5ed5e70449d66e6c86a3068a1d5601c5b11c7fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5ed5e70449d66e6c86a3068a1d5601c5b11c7fe/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e04c24769e4d25c6d639869a26f19c52493fa582", "url": "https://api.github.com/repos/rust-lang/rust/commits/e04c24769e4d25c6d639869a26f19c52493fa582", "html_url": "https://github.com/rust-lang/rust/commit/e04c24769e4d25c6d639869a26f19c52493fa582"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "45d8a371f849eb0f4ac5ccc9d0791a5f2200b2db", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d5ed5e70449d66e6c86a3068a1d5601c5b11c7fe/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5ed5e70449d66e6c86a3068a1d5601c5b11c7fe/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=d5ed5e70449d66e6c86a3068a1d5601c5b11c7fe", "patch": "@@ -501,9 +501,14 @@ impure fn parse_path_expr(parser p) -> @ast.expr {\n                         p.bump();\n                         auto ix = parse_bottom_expr(p);\n                         hi = ix.span;\n+                        expect(p, token.RPAREN);\n                         auto e_ = ast.expr_index(e, ix, ast.ann_none);\n                         e = @spanned(lo, hi, e_);\n                     }\n+\n+                    case (?t) {\n+                        unexpected(p, t);\n+                    }\n                 }\n             }\n             case (_) {"}]}