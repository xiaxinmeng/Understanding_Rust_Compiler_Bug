{"sha": "9f6b9dd64465251b4167a442077feb6e5dd9fbda", "node_id": "C_kwDOAAsO6NoAKDlmNmI5ZGQ2NDQ2NTI1MWI0MTY3YTQ0MjA3N2ZlYjZlNWRkOWZiZGE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-21T18:53:16Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-21T18:53:16Z"}, "message": "Delay ambiguity span bug in normalize query iff not rustdoc", "tree": {"sha": "6bbf5d992c8da830ffbbe364c3b047273c5afef4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bbf5d992c8da830ffbbe364c3b047273c5afef4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f6b9dd64465251b4167a442077feb6e5dd9fbda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f6b9dd64465251b4167a442077feb6e5dd9fbda", "html_url": "https://github.com/rust-lang/rust/commit/9f6b9dd64465251b4167a442077feb6e5dd9fbda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f6b9dd64465251b4167a442077feb6e5dd9fbda/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "542febd2d383b5082277c7d165b098c0a3b513f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/542febd2d383b5082277c7d165b098c0a3b513f6", "html_url": "https://github.com/rust-lang/rust/commit/542febd2d383b5082277c7d165b098c0a3b513f6"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "715f5be8e2f4bbe22dd35ce61078f0aa370c0680", "filename": "compiler/rustc_trait_selection/src/traits/query/normalize.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/9f6b9dd64465251b4167a442077feb6e5dd9fbda/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fnormalize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f6b9dd64465251b4167a442077feb6e5dd9fbda/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fnormalize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fnormalize.rs?ref=9f6b9dd64465251b4167a442077feb6e5dd9fbda", "patch": "@@ -14,6 +14,7 @@ use rustc_infer::traits::Normalized;\n use rustc_middle::ty::fold::{FallibleTypeFolder, TypeFoldable, TypeSuperFoldable};\n use rustc_middle::ty::visit::{TypeSuperVisitable, TypeVisitable};\n use rustc_middle::ty::{self, Ty, TyCtxt, TypeVisitor};\n+use rustc_span::DUMMY_SP;\n \n use std::ops::ControlFlow;\n \n@@ -253,7 +254,15 @@ impl<'cx, 'tcx> FallibleTypeFolder<'tcx> for QueryNormalizer<'cx, 'tcx> {\n                 let result = tcx.normalize_projection_ty(c_data)?;\n                 // We don't expect ambiguity.\n                 if result.is_ambiguous() {\n-                    bug!(\"unexpected ambiguity: {:?} {:?}\", c_data, result);\n+                    // Rustdoc normalizes possibly not well-formed types, so only\n+                    // treat this as a bug if we're not in rustdoc.\n+                    if !tcx.sess.opts.actually_rustdoc {\n+                        tcx.sess.delay_span_bug(\n+                            DUMMY_SP,\n+                            format!(\"unexpected ambiguity: {:?} {:?}\", c_data, result),\n+                        );\n+                    }\n+                    return Err(NoSolution);\n                 }\n                 let InferOk { value: result, obligations } =\n                     self.infcx.instantiate_query_response_and_region_obligations(\n@@ -296,7 +305,15 @@ impl<'cx, 'tcx> FallibleTypeFolder<'tcx> for QueryNormalizer<'cx, 'tcx> {\n                 let result = tcx.normalize_projection_ty(c_data)?;\n                 // We don't expect ambiguity.\n                 if result.is_ambiguous() {\n-                    bug!(\"unexpected ambiguity: {:?} {:?}\", c_data, result);\n+                    // Rustdoc normalizes possibly not well-formed types, so only\n+                    // treat this as a bug if we're not in rustdoc.\n+                    if !tcx.sess.opts.actually_rustdoc {\n+                        tcx.sess.delay_span_bug(\n+                            DUMMY_SP,\n+                            format!(\"unexpected ambiguity: {:?} {:?}\", c_data, result),\n+                        );\n+                    }\n+                    return Err(NoSolution);\n                 }\n                 let InferOk { value: result, obligations } =\n                     self.infcx.instantiate_query_response_and_region_obligations("}]}