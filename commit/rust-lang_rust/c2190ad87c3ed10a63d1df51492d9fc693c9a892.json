{"sha": "c2190ad87c3ed10a63d1df51492d9fc693c9a892", "node_id": "C_kwDOAAsO6NoAKGMyMTkwYWQ4N2MzZWQxMGE2M2QxZGY1MTQ5MmQ5ZmM2OTNjOWE4OTI", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-05-12T11:39:32Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-05-12T12:00:06Z"}, "message": "feat: Allow reborrow inlay hints to be restricted to mutable reborrows only", "tree": {"sha": "bb17aeeb198306f768b5f9dcaed7c31a77263fa9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb17aeeb198306f768b5f9dcaed7c31a77263fa9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2190ad87c3ed10a63d1df51492d9fc693c9a892", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2190ad87c3ed10a63d1df51492d9fc693c9a892", "html_url": "https://github.com/rust-lang/rust/commit/c2190ad87c3ed10a63d1df51492d9fc693c9a892", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2190ad87c3ed10a63d1df51492d9fc693c9a892/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b505ce0f998490cc0979fa72c5be6425da15843", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b505ce0f998490cc0979fa72c5be6425da15843", "html_url": "https://github.com/rust-lang/rust/commit/4b505ce0f998490cc0979fa72c5be6425da15843"}], "stats": {"total": 103, "additions": 76, "deletions": 27}, "files": [{"sha": "a7cb1a599f55c9173b6f3860ad6514e4a6375b1f", "filename": "crates/ide/src/inlay_hints.rs", "status": "modified", "additions": 23, "deletions": 9, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/c2190ad87c3ed10a63d1df51492d9fc693c9a892/crates%2Fide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2190ad87c3ed10a63d1df51492d9fc693c9a892/crates%2Fide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints.rs?ref=c2190ad87c3ed10a63d1df51492d9fc693c9a892", "patch": "@@ -19,7 +19,7 @@ pub struct InlayHintsConfig {\n     pub type_hints: bool,\n     pub parameter_hints: bool,\n     pub chaining_hints: bool,\n-    pub reborrow_hints: bool,\n+    pub reborrow_hints: ReborrowHints,\n     pub closure_return_type_hints: bool,\n     pub lifetime_elision_hints: LifetimeElisionHints,\n     pub param_names_for_lifetime_elision_hints: bool,\n@@ -34,6 +34,13 @@ pub enum LifetimeElisionHints {\n     Never,\n }\n \n+#[derive(Clone, Debug, PartialEq, Eq)]\n+pub enum ReborrowHints {\n+    Always,\n+    MutableOnly,\n+    Never,\n+}\n+\n #[derive(Clone, Debug, PartialEq, Eq)]\n pub enum InlayKind {\n     ChainingHint,\n@@ -372,18 +379,20 @@ fn reborrow_hints(\n     config: &InlayHintsConfig,\n     expr: &ast::Expr,\n ) -> Option<()> {\n-    if !config.reborrow_hints {\n+    if config.reborrow_hints == ReborrowHints::Never {\n         return None;\n     }\n \n     let mutability = sema.is_implicit_reborrow(expr)?;\n+    let label = match mutability {\n+        hir::Mutability::Shared if config.reborrow_hints != ReborrowHints::MutableOnly => \"&*\",\n+        hir::Mutability::Mut => \"&mut *\",\n+        _ => return None,\n+    };\n     acc.push(InlayHint {\n         range: expr.syntax().text_range(),\n         kind: InlayKind::ImplicitReborrow,\n-        label: match mutability {\n-            hir::Mutability::Shared => SmolStr::new_inline(\"&*\"),\n-            hir::Mutability::Mut => SmolStr::new_inline(\"&mut *\"),\n-        },\n+        label: SmolStr::new_inline(label),\n     });\n     Some(())\n }\n@@ -848,6 +857,7 @@ mod tests {\n     use syntax::{TextRange, TextSize};\n     use test_utils::extract_annotations;\n \n+    use crate::inlay_hints::ReborrowHints;\n     use crate::{fixture, inlay_hints::InlayHintsConfig, LifetimeElisionHints};\n \n     const DISABLED_CONFIG: InlayHintsConfig = InlayHintsConfig {\n@@ -858,15 +868,15 @@ mod tests {\n         lifetime_elision_hints: LifetimeElisionHints::Never,\n         hide_named_constructor_hints: false,\n         closure_return_type_hints: false,\n-        reborrow_hints: false,\n+        reborrow_hints: ReborrowHints::Always,\n         param_names_for_lifetime_elision_hints: false,\n         max_length: None,\n     };\n     const TEST_CONFIG: InlayHintsConfig = InlayHintsConfig {\n         type_hints: true,\n         parameter_hints: true,\n         chaining_hints: true,\n-        reborrow_hints: true,\n+        reborrow_hints: ReborrowHints::Always,\n         closure_return_type_hints: true,\n         lifetime_elision_hints: LifetimeElisionHints::Always,\n         ..DISABLED_CONFIG\n@@ -2146,7 +2156,11 @@ impl () {\n     #[test]\n     fn hints_implicit_reborrow() {\n         check_with_config(\n-            InlayHintsConfig { reborrow_hints: true, parameter_hints: true, ..DISABLED_CONFIG },\n+            InlayHintsConfig {\n+                reborrow_hints: ReborrowHints::Always,\n+                parameter_hints: true,\n+                ..DISABLED_CONFIG\n+            },\n             r#\"\n fn __() {\n     let unique = &mut ();"}, {"sha": "da50a4b8ee59a3661c2ab4b5414219e88d600954", "filename": "crates/ide/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2190ad87c3ed10a63d1df51492d9fc693c9a892/crates%2Fide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2190ad87c3ed10a63d1df51492d9fc693c9a892/crates%2Fide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Flib.rs?ref=c2190ad87c3ed10a63d1df51492d9fc693c9a892", "patch": "@@ -80,7 +80,7 @@ pub use crate::{\n     folding_ranges::{Fold, FoldKind},\n     highlight_related::{HighlightRelatedConfig, HighlightedRange},\n     hover::{HoverAction, HoverConfig, HoverDocFormat, HoverGotoTypeData, HoverResult},\n-    inlay_hints::{InlayHint, InlayHintsConfig, InlayKind, LifetimeElisionHints},\n+    inlay_hints::{InlayHint, InlayHintsConfig, InlayKind, LifetimeElisionHints, ReborrowHints},\n     join_lines::JoinLinesConfig,\n     markup::Markup,\n     moniker::{MonikerKind, MonikerResult, PackageInformation},"}, {"sha": "48159f5958de8fd93f6447fc450504e5160f5194", "filename": "crates/ide/src/static_index.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c2190ad87c3ed10a63d1df51492d9fc693c9a892/crates%2Fide%2Fsrc%2Fstatic_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2190ad87c3ed10a63d1df51492d9fc693c9a892/crates%2Fide%2Fsrc%2Fstatic_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fstatic_index.rs?ref=c2190ad87c3ed10a63d1df51492d9fc693c9a892", "patch": "@@ -12,12 +12,10 @@ use ide_db::{\n use syntax::{AstNode, SyntaxKind::*, SyntaxToken, TextRange, T};\n \n use crate::{\n-    hover::hover_for_definition, Analysis, Fold, HoverConfig, HoverDocFormat, HoverResult,\n-    InlayHint, InlayHintsConfig, TryToNav,\n-};\n-use crate::{\n+    hover::hover_for_definition,\n     moniker::{crate_for_file, def_to_moniker, MonikerResult},\n-    LifetimeElisionHints,\n+    Analysis, Fold, HoverConfig, HoverDocFormat, HoverResult, InlayHint, InlayHintsConfig,\n+    TryToNav,\n };\n \n /// A static representation of fully analyzed source code.\n@@ -112,8 +110,8 @@ impl StaticIndex<'_> {\n                     parameter_hints: true,\n                     chaining_hints: true,\n                     closure_return_type_hints: true,\n-                    lifetime_elision_hints: LifetimeElisionHints::Never,\n-                    reborrow_hints: false,\n+                    lifetime_elision_hints: crate::LifetimeElisionHints::Never,\n+                    reborrow_hints: crate::ReborrowHints::Never,\n                     hide_named_constructor_hints: false,\n                     param_names_for_lifetime_elision_hints: false,\n                     max_length: Some(25),"}, {"sha": "ab5b349ce9fac955141b7adcb438003ba0bc1b9e", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 31, "deletions": 7, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/c2190ad87c3ed10a63d1df51492d9fc693c9a892/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2190ad87c3ed10a63d1df51492d9fc693c9a892/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=c2190ad87c3ed10a63d1df51492d9fc693c9a892", "patch": "@@ -12,8 +12,7 @@ use std::{ffi::OsString, fmt, iter, path::PathBuf};\n use flycheck::FlycheckConfig;\n use ide::{\n     AssistConfig, CompletionConfig, DiagnosticsConfig, ExprFillDefaultMode, HighlightRelatedConfig,\n-    HoverConfig, HoverDocFormat, InlayHintsConfig, JoinLinesConfig, LifetimeElisionHints, Snippet,\n-    SnippetScope,\n+    HoverConfig, HoverDocFormat, InlayHintsConfig, JoinLinesConfig, Snippet, SnippetScope,\n };\n use ide_db::{\n     imports::insert_use::{ImportGranularity, InsertUseConfig, PrefixKind},\n@@ -263,7 +262,7 @@ config_data! {\n         /// site.\n         inlayHints_parameterHints_enable: bool                     = \"true\",\n         /// Whether to show inlay type hints for compiler inserted reborrows.\n-        inlayHints_reborrowHints_enable: bool                      = \"false\",\n+        inlayHints_reborrowHints_enable: ReborrowHintsDef          = \"\\\"never\\\"\",\n         /// Whether to render leading colons for type hints, and trailing colons for parameter hints.\n         inlayHints_renderColons: bool                              = \"true\",\n         /// Whether to show inlay type hints for variables.\n@@ -986,12 +985,16 @@ impl Config {\n             chaining_hints: self.data.inlayHints_chainingHints_enable,\n             closure_return_type_hints: self.data.inlayHints_closureReturnTypeHints_enable,\n             lifetime_elision_hints: match self.data.inlayHints_lifetimeElisionHints_enable {\n-                LifetimeElisionDef::Always => LifetimeElisionHints::Always,\n-                LifetimeElisionDef::Never => LifetimeElisionHints::Never,\n-                LifetimeElisionDef::SkipTrivial => LifetimeElisionHints::SkipTrivial,\n+                LifetimeElisionDef::Always => ide::LifetimeElisionHints::Always,\n+                LifetimeElisionDef::Never => ide::LifetimeElisionHints::Never,\n+                LifetimeElisionDef::SkipTrivial => ide::LifetimeElisionHints::SkipTrivial,\n             },\n             hide_named_constructor_hints: self.data.inlayHints_typeHints_hideNamedConstructor,\n-            reborrow_hints: self.data.inlayHints_reborrowHints_enable,\n+            reborrow_hints: match self.data.inlayHints_reborrowHints_enable {\n+                ReborrowHintsDef::Always => ide::ReborrowHints::Always,\n+                ReborrowHintsDef::Never => ide::ReborrowHints::Never,\n+                ReborrowHintsDef::Mutable => ide::ReborrowHints::MutableOnly,\n+            },\n             param_names_for_lifetime_elision_hints: self\n                 .data\n                 .inlayHints_lifetimeElisionHints_useParameterNames,\n@@ -1293,6 +1296,7 @@ macro_rules! named_unit_variant {\n mod de_unit_v {\n     named_unit_variant!(all);\n     named_unit_variant!(skip_trivial);\n+    named_unit_variant!(mutable);\n }\n \n #[derive(Deserialize, Debug, Clone, Copy)]\n@@ -1404,6 +1408,17 @@ enum LifetimeElisionDef {\n     SkipTrivial,\n }\n \n+#[derive(Deserialize, Debug, Clone)]\n+#[serde(untagged)]\n+enum ReborrowHintsDef {\n+    #[serde(deserialize_with = \"true_or_always\")]\n+    Always,\n+    #[serde(deserialize_with = \"false_or_never\")]\n+    Never,\n+    #[serde(deserialize_with = \"de_unit_v::mutable\")]\n+    Mutable,\n+}\n+\n #[derive(Deserialize, Debug, Clone)]\n #[serde(rename_all = \"snake_case\")]\n enum ImportPrefixDef {\n@@ -1675,6 +1690,15 @@ fn field_props(field: &str, ty: &str, doc: &[&str], default: &str) -> serde_json\n                 \"Only show lifetime elision hints if a return type is involved.\"\n             ],\n         },\n+        \"ReborrowHintsDef\" => set! {\n+            \"type\": [\"string\", \"boolean\"],\n+            \"enum\": [\"always\", \"never\", \"mutable\"],\n+            \"enumDescriptions\": [\n+                \"Always show reborrow hints.\",\n+                \"Never show reborrow hints.\",\n+                \"Only show mutable reborrow hints.\"\n+            ],\n+        },\n         \"CargoFeatures\" => set! {\n             \"type\": [\"string\", \"array\"],\n             \"items\": { \"type\": \"string\" },"}, {"sha": "e3c2e12b0d65cafdacf4f155331158aadb80dd5c", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2190ad87c3ed10a63d1df51492d9fc693c9a892/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/c2190ad87c3ed10a63d1df51492d9fc693c9a892/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=c2190ad87c3ed10a63d1df51492d9fc693c9a892", "patch": "@@ -365,7 +365,7 @@ Maximum length for inlay hints. Set to null to have an unlimited length.\n Whether to show function parameter name inlay hints at the call\n site.\n --\n-[[rust-analyzer.inlayHints.reborrowHints.enable]]rust-analyzer.inlayHints.reborrowHints.enable (default: `false`)::\n+[[rust-analyzer.inlayHints.reborrowHints.enable]]rust-analyzer.inlayHints.reborrowHints.enable (default: `\"never\"`)::\n +\n --\n Whether to show inlay type hints for compiler inserted reborrows."}, {"sha": "a58f8ca84854d2511289b204b5efed4c5ac43d76", "filename": "editors/code/package.json", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c2190ad87c3ed10a63d1df51492d9fc693c9a892/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/c2190ad87c3ed10a63d1df51492d9fc693c9a892/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=c2190ad87c3ed10a63d1df51492d9fc693c9a892", "patch": "@@ -810,8 +810,21 @@\n                 },\n                 \"rust-analyzer.inlayHints.reborrowHints.enable\": {\n                     \"markdownDescription\": \"Whether to show inlay type hints for compiler inserted reborrows.\",\n-                    \"default\": false,\n-                    \"type\": \"boolean\"\n+                    \"default\": \"never\",\n+                    \"type\": [\n+                        \"string\",\n+                        \"boolean\"\n+                    ],\n+                    \"enum\": [\n+                        \"always\",\n+                        \"never\",\n+                        \"mutable\"\n+                    ],\n+                    \"enumDescriptions\": [\n+                        \"Always show reborrow hints.\",\n+                        \"Never show reborrow hints.\",\n+                        \"Only show mutable reborrow hints.\"\n+                    ]\n                 },\n                 \"rust-analyzer.inlayHints.renderColons\": {\n                     \"markdownDescription\": \"Whether to render leading colons for type hints, and trailing colons for parameter hints.\","}]}