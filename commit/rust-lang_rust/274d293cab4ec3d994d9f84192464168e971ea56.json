{"sha": "274d293cab4ec3d994d9f84192464168e971ea56", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3NGQyOTNjYWI0ZWMzZDk5NGQ5Zjg0MTkyNDY0MTY4ZTk3MWVhNTY=", "commit": {"author": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2018-12-11T21:49:40Z"}, "committer": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2019-01-18T02:39:06Z"}, "message": "Update tests", "tree": {"sha": "c8e01279036692918062ffb3de292fc35f99a09e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8e01279036692918062ffb3de292fc35f99a09e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/274d293cab4ec3d994d9f84192464168e971ea56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/274d293cab4ec3d994d9f84192464168e971ea56", "html_url": "https://github.com/rust-lang/rust/commit/274d293cab4ec3d994d9f84192464168e971ea56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/274d293cab4ec3d994d9f84192464168e971ea56/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f8a77445f8b8bb3322060ea386b50afe52d00e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f8a77445f8b8bb3322060ea386b50afe52d00e8", "html_url": "https://github.com/rust-lang/rust/commit/2f8a77445f8b8bb3322060ea386b50afe52d00e8"}], "stats": {"total": 181, "additions": 88, "deletions": 93}, "files": [{"sha": "8e407070342cfc690304d6b42d872f8b4fcb50ee", "filename": "src/test/ui/nll/closure-requirements/escape-argument-callee.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fescape-argument-callee.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fescape-argument-callee.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fescape-argument-callee.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -9,7 +9,7 @@ LL |         let mut closure = expect_sig(|p, y| *p = y);\n                for<'r, 's, 't0> extern \"rust-call\" fn((&ReLateBound(DebruijnIndex(0), BrNamed(crate0:DefIndex(0:0), 'r)) mut &ReLateBound(DebruijnIndex(0), BrNamed(crate0:DefIndex(0:0), 's)) i32, &ReLateBound(DebruijnIndex(0), BrNamed(crate0:DefIndex(0:0), 't0)) i32))\n            ]\n \n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/escape-argument-callee.rs:26:45\n    |\n LL |         let mut closure = expect_sig(|p, y| *p = y);"}, {"sha": "55e4573e60bbbe11fa6a7ff48b2760e887100c2d", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-fail-no-postdom.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-fail-no-postdom.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-fail-no-postdom.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-fail-no-postdom.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -16,7 +16,7 @@ LL | |         },\n    = note: late-bound region is '_#5r\n    = note: late-bound region is '_#6r\n \n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/propagate-approximated-fail-no-postdom.rs:46:13\n    |\n LL |         |_outlives1, _outlives2, _outlives3, x, y| {"}, {"sha": "1c409a14b728016303b8dc5d8d066d05f5e658a6", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-ref.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.rs?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -41,10 +41,9 @@ fn demand_y<'x, 'y>(_cell_x: &Cell<&'x u32>, _cell_y: &Cell<&'y u32>, _y: &'y u3\n #[rustc_regions]\n fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n-\n         // Only works if 'x: 'y:\n         demand_y(x, y, x.get())\n-        //~^ ERROR unsatisfied lifetime constraints\n+        //~^ ERROR lifetime may not live long enough\n     });\n }\n "}, {"sha": "5863b9bc84094643e8316cf5f3570db2e6aa240f", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-ref.stderr", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -3,10 +3,9 @@ note: External requirements\n    |\n LL |       establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n    |  _______________________________________________^\n-LL | |\n LL | |         // Only works if 'x: 'y:\n LL | |         demand_y(x, y, x.get())\n-LL | |         //~^ ERROR unsatisfied lifetime constraints\n+LL | |         //~^ ERROR lifetime may not live long enough\n LL | |     });\n    | |_____^\n    |\n@@ -24,17 +23,17 @@ note: No external requirements\n    |\n LL | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n LL | |     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n-LL | |\n LL | |         // Only works if 'x: 'y:\n-...  |\n+LL | |         demand_y(x, y, x.get())\n+LL | |         //~^ ERROR lifetime may not live long enough\n LL | |     });\n LL | | }\n    | |_^\n    |\n    = note: defining type: DefId(0/0:6 ~ propagate_approximated_ref[317d]::supply[0]) with substs []\n \n-error: unsatisfied lifetime constraints\n-  --> $DIR/propagate-approximated-ref.rs:46:9\n+error: lifetime may not live long enough\n+  --> $DIR/propagate-approximated-ref.rs:45:9\n    |\n LL | fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n    |           --  -- lifetime `'b` defined here"}, {"sha": "233a5dcab08ab4d4b5589e11a9f22f97bf4f9967", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-val.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.rs?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -34,10 +34,9 @@ fn demand_y<'x, 'y>(_outlives1: Cell<&&'x u32>, _outlives2: Cell<&'y &u32>, _y:\n #[rustc_regions]\n fn test<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n     establish_relationships(cell_a, cell_b, |outlives1, outlives2, x, y| {\n-\n         // Only works if 'x: 'y:\n         demand_y(outlives1, outlives2, x.get())\n-        //~^ ERROR unsatisfied lifetime constraints\n+        //~^ ERROR lifetime may not live long enough\n     });\n }\n "}, {"sha": "b6d9d8529cf5c3d6b4e0448ba6d6a2a7f5623296", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-val.stderr", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -3,10 +3,9 @@ note: External requirements\n    |\n LL |       establish_relationships(cell_a, cell_b, |outlives1, outlives2, x, y| {\n    |  _____________________________________________^\n-LL | |\n LL | |         // Only works if 'x: 'y:\n LL | |         demand_y(outlives1, outlives2, x.get())\n-LL | |         //~^ ERROR unsatisfied lifetime constraints\n+LL | |         //~^ ERROR lifetime may not live long enough\n LL | |     });\n    | |_____^\n    |\n@@ -24,17 +23,17 @@ note: No external requirements\n    |\n LL | / fn test<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n LL | |     establish_relationships(cell_a, cell_b, |outlives1, outlives2, x, y| {\n-LL | |\n LL | |         // Only works if 'x: 'y:\n-...  |\n+LL | |         demand_y(outlives1, outlives2, x.get())\n+LL | |         //~^ ERROR lifetime may not live long enough\n LL | |     });\n LL | | }\n    | |_^\n    |\n    = note: defining type: DefId(0/0:6 ~ propagate_approximated_val[317d]::test[0]) with substs []\n \n-error: unsatisfied lifetime constraints\n-  --> $DIR/propagate-approximated-val.rs:39:9\n+error: lifetime may not live long enough\n+  --> $DIR/propagate-approximated-val.rs:38:9\n    |\n LL | fn test<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n    |         --  -- lifetime `'b` defined here"}, {"sha": "93eb93bdc0638bf5d682dd0a19c2c0102815d5d8", "filename": "src/test/ui/nll/closure-requirements/propagate-fail-to-approximate-longer-no-bounds.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -16,7 +16,7 @@ LL | |     });\n    = note: late-bound region is '_#2r\n    = note: late-bound region is '_#3r\n \n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/propagate-fail-to-approximate-longer-no-bounds.rs:37:9\n    |\n LL |     establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {"}, {"sha": "c7809de88b9222fc302c97f150079e77d97d5582", "filename": "src/test/ui/nll/closure-requirements/propagate-fail-to-approximate-longer-wrong-bounds.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-wrong-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-wrong-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-wrong-bounds.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -16,7 +16,7 @@ LL | |     });\n    = note: late-bound region is '_#3r\n    = note: late-bound region is '_#4r\n \n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/propagate-fail-to-approximate-longer-wrong-bounds.rs:41:9\n    |\n LL |     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {"}, {"sha": "d0a24a267fd4f3aab01b8e363eaa4799df463947", "filename": "src/test/ui/nll/closure-requirements/region-lbr-named-does-not-outlive-static.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr-named-does-not-outlive-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr-named-does-not-outlive-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr-named-does-not-outlive-static.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -1,4 +1,4 @@\n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/region-lbr-named-does-not-outlive-static.rs:9:5\n    |\n LL | fn foo<'a>(x: &'a u32) -> &'static u32 {"}, {"sha": "4d864c6e58868309da9594029e0b6b3fcaef5d0e", "filename": "src/test/ui/nll/closure-requirements/region-lbr1-does-not-outlive-ebr2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr1-does-not-outlive-ebr2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr1-does-not-outlive-ebr2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr1-does-not-outlive-ebr2.rs?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -7,7 +7,7 @@\n \n fn foo<'a, 'b>(x: &'a u32, y: &'b u32) -> &'b u32 {\n     &*x\n-        //~^ ERROR unsatisfied lifetime constraints\n+    //~^ ERROR lifetime may not live long enough\n }\n \n-fn main() { }\n+fn main() {}"}, {"sha": "6dc98a944086f16ae61d298d64a56286757e23ea", "filename": "src/test/ui/nll/closure-requirements/region-lbr1-does-not-outlive-ebr2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr1-does-not-outlive-ebr2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr1-does-not-outlive-ebr2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr1-does-not-outlive-ebr2.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -1,4 +1,4 @@\n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/region-lbr1-does-not-outlive-ebr2.rs:9:5\n    |\n LL | fn foo<'a, 'b>(x: &'a u32, y: &'b u32) -> &'b u32 {"}, {"sha": "4a035d0c9cd8330a788e50463f602325807f8906", "filename": "src/test/ui/nll/closure-requirements/return-wrong-bound-region.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Freturn-wrong-bound-region.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Freturn-wrong-bound-region.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Freturn-wrong-bound-region.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -9,7 +9,7 @@ LL |     expect_sig(|a, b| b); // ought to return `a`\n                for<'r, 's> extern \"rust-call\" fn((&ReLateBound(DebruijnIndex(0), BrNamed(crate0:DefIndex(0:0), 'r)) i32, &ReLateBound(DebruijnIndex(0), BrNamed(crate0:DefIndex(0:0), 's)) i32)) -> &ReLateBound(DebruijnIndex(0), BrNamed(crate0:DefIndex(0:0), 'r)) i32\n            ]\n \n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/return-wrong-bound-region.rs:11:23\n    |\n LL |     expect_sig(|a, b| b); // ought to return `a`"}, {"sha": "7cb5eb736c0e3255e191176e638b78280235e966", "filename": "src/test/ui/nll/issue-48238.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fissue-48238.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fissue-48238.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-48238.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -1,4 +1,4 @@\n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/issue-48238.rs:11:13\n    |\n LL |     move || use_val(&orig); //~ ERROR"}, {"sha": "229bb1777cc5ed63ae0d59e7b42e0365ca6e63a4", "filename": "src/test/ui/nll/issue-50716.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fissue-50716.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fissue-50716.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-50716.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -1,4 +1,4 @@\n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/issue-50716.rs:16:14\n    |\n LL | fn foo<'a, T: 'static>(s: Box<<&'a T as A>::X>)"}, {"sha": "795f4f426ffffedc82c3fac7b762471f32a710fc", "filename": "src/test/ui/nll/issue-52113.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fissue-52113.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fissue-52113.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-52113.rs?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -3,8 +3,8 @@\n #![allow(warnings)]\n #![feature(nll)]\n \n-trait Bazinga { }\n-impl<F> Bazinga for F { }\n+trait Bazinga {}\n+impl<F> Bazinga for F {}\n \n fn produce1<'a>(data: &'a u32) -> impl Bazinga + 'a {\n     let x = move || {\n@@ -21,7 +21,6 @@ fn produce2<'a>(data: &'a mut Vec<&'a u32>, value: &'a u32) -> impl Bazinga + 'a\n     x\n }\n \n-\n fn produce3<'a, 'b: 'a>(data: &'a mut Vec<&'a u32>, value: &'b u32) -> impl Bazinga + 'a {\n     let x = move || {\n         let value: &'a u32 = value;\n@@ -35,7 +34,7 @@ fn produce_err<'a, 'b: 'a>(data: &'b mut Vec<&'b u32>, value: &'a u32) -> impl B\n         let value: &'a u32 = value;\n         data.push(value);\n     };\n-    x   //~ ERROR unsatisfied lifetime constraints\n+    x //~ ERROR lifetime may not live long enough\n }\n \n-fn main() { }\n+fn main() {}"}, {"sha": "ceae16185bbb1b8127f70a4fa6879dec3cbbfdee", "filename": "src/test/ui/nll/issue-52113.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fissue-52113.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fissue-52113.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-52113.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -1,12 +1,12 @@\n-error: unsatisfied lifetime constraints\n-  --> $DIR/issue-52113.rs:38:5\n+error: lifetime may not live long enough\n+  --> $DIR/issue-52113.rs:37:5\n    |\n LL | fn produce_err<'a, 'b: 'a>(data: &'b mut Vec<&'b u32>, value: &'a u32) -> impl Bazinga + 'b {\n    |                --  -- lifetime `'b` defined here\n    |                |\n    |                lifetime `'a` defined here\n ...\n-LL |     x   //~ ERROR unsatisfied lifetime constraints\n+LL |     x //~ ERROR lifetime may not live long enough\n    |     ^ returning this value requires that `'a` must outlive `'b`\n \n error: aborting due to previous error"}, {"sha": "150e67fe094818eecfe00c02a1115de7aeafe340", "filename": "src/test/ui/nll/issue-52742.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fissue-52742.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fissue-52742.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-52742.rs?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -7,14 +7,14 @@ struct Foo<'a, 'b> {\n }\n \n struct Bar<'b> {\n-    z: &'b u32\n+    z: &'b u32,\n }\n \n impl Foo<'_, '_> {\n     fn take_bar(&mut self, b: Bar<'_>) {\n         self.y = b.z\n-        //~^ ERROR unsatisfied lifetime constraints\n+        //~^ ERROR lifetime may not live long enough\n     }\n }\n \n-fn main() { }\n+fn main() {}"}, {"sha": "6b25296c4bda1588d0e30793ad9d672a903629d8", "filename": "src/test/ui/nll/issue-52742.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fissue-52742.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fissue-52742.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-52742.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -1,4 +1,4 @@\n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/issue-52742.rs:15:9\n    |\n LL |     fn take_bar(&mut self, b: Bar<'_>) {"}, {"sha": "deb1034525edb6622bb754018c849764ef4db19d", "filename": "src/test/ui/nll/issue-55394.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fissue-55394.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fissue-55394.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-55394.rs?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -8,7 +8,7 @@ struct Foo<'s> {\n \n impl Foo<'_> {\n     fn new(bar: &mut Bar) -> Self {\n-        Foo { bar } //~ ERROR unsatisfied lifetime constraints\n+        Foo { bar } //~ERROR lifetime may not live long enough\n     }\n }\n "}, {"sha": "bcdd78248eb4b1ae42df318142d751ef4c901b06", "filename": "src/test/ui/nll/issue-55394.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fissue-55394.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fissue-55394.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-55394.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -1,11 +1,11 @@\n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/issue-55394.rs:11:9\n    |\n LL |     fn new(bar: &mut Bar) -> Self {\n    |                 -            ---- return type is Foo<'2>\n    |                 |\n    |                 let's call the lifetime of this reference `'1`\n-LL |         Foo { bar } //~ ERROR unsatisfied lifetime constraints\n+LL |         Foo { bar } //~ERROR lifetime may not live long enough\n    |         ^^^^^^^^^^^ returning this value requires that `'1` must outlive `'2`\n \n error: aborting due to previous error"}, {"sha": "0619ff37d972b55a0c5bfa580e0f354f944d1d10", "filename": "src/test/ui/nll/mir_check_cast_closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_closure.rs?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -5,7 +5,7 @@\n fn bar<'a, 'b>() -> fn(&'a u32, &'b u32) -> &'a u32 {\n     let g: fn(_, _) -> _ = |_x, y| y;\n     g\n-    //~^ ERROR unsatisfied lifetime constraints\n+    //~^ ERROR lifetime may not live long enough\n }\n \n fn main() {}"}, {"sha": "e14cb074c81f877d802f76ce37369b5932f87402", "filename": "src/test/ui/nll/mir_check_cast_closure.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_closure.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -1,4 +1,4 @@\n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/mir_check_cast_closure.rs:7:5\n    |\n LL | fn bar<'a, 'b>() -> fn(&'a u32, &'b u32) -> &'a u32 {"}, {"sha": "be12e313b42e655cd851f49a85180f8a05f627be", "filename": "src/test/ui/nll/mir_check_cast_reify.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_reify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_reify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_reify.rs?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -35,7 +35,7 @@ fn bar<'a>(x: &'a u32) -> &'static u32 {\n     // as part of checking the `ReifyFnPointer`.\n     let f: fn(_) -> _ = foo;\n     f(x)\n-    //~^ ERROR unsatisfied lifetime constraints\n+    //~^ ERROR lifetime may not live long enough\n }\n \n fn main() {}"}, {"sha": "4e8eec330a579c8001148f81be056f0115c27864", "filename": "src/test/ui/nll/mir_check_cast_reify.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_reify.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_reify.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_reify.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -1,4 +1,4 @@\n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/mir_check_cast_reify.rs:37:5\n    |\n LL | fn bar<'a>(x: &'a u32) -> &'static u32 {"}, {"sha": "9df9c0574892431f28ba494aa1df787604d7eef3", "filename": "src/test/ui/nll/mir_check_cast_unsafe_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsafe_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsafe_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsafe_fn.rs?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -7,7 +7,7 @@ fn bar<'a>(input: &'a u32, f: fn(&'a u32) -> &'a u32) -> &'static u32 {\n     // in `g`. These are related via the `UnsafeFnPointer` cast.\n     let g: unsafe fn(_) -> _ = f;\n     unsafe { g(input) }\n-    //~^ ERROR unsatisfied lifetime constraints\n+    //~^ ERROR lifetime may not live long enough\n }\n \n fn main() {}"}, {"sha": "52959850a3332835fdb62d6a55396611acaa6528", "filename": "src/test/ui/nll/mir_check_cast_unsafe_fn.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsafe_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsafe_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsafe_fn.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -1,4 +1,4 @@\n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/mir_check_cast_unsafe_fn.rs:9:14\n    |\n LL | fn bar<'a>(input: &'a u32, f: fn(&'a u32) -> &'a u32) -> &'static u32 {"}, {"sha": "d15c4e4f4672264cd2c992bf006a142e3947bed3", "filename": "src/test/ui/nll/mir_check_cast_unsize.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsize.rs?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -6,7 +6,7 @@ use std::fmt::Debug;\n \n fn bar<'a>(x: &'a u32) -> &'static dyn Debug {\n     x\n-    //~^ ERROR unsatisfied lifetime constraints\n+    //~^ ERROR lifetime may not live long enough\n }\n \n fn main() {}"}, {"sha": "364d6c17ea7f695afb6342f9e1045dcd3947e806", "filename": "src/test/ui/nll/mir_check_cast_unsize.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsize.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsize.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsize.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -1,4 +1,4 @@\n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/mir_check_cast_unsize.rs:8:5\n    |\n LL | fn bar<'a>(x: &'a u32) -> &'static dyn Debug {"}, {"sha": "e8283d1ab5da24e3912ad8312814984579f3e614", "filename": "src/test/ui/nll/ty-outlives/projection-one-region-closure.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -40,7 +40,7 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |\n    = help: consider adding an explicit lifetime bound `T: ReFree(DefId(0/0:8 ~ projection_one_region_closure[317d]::no_relationships_late[0]), BrNamed(crate0:DefIndex(1:16), 'a))`...\n \n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/projection-one-region-closure.rs:45:39\n    |\n LL | fn no_relationships_late<'a, 'b, T>(cell: Cell<&'a ()>, t: T)\n@@ -94,7 +94,7 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |\n    = help: consider adding an explicit lifetime bound `T: ReEarlyBound(0, 'a)`...\n \n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/projection-one-region-closure.rs:56:39\n    |\n LL | fn no_relationships_early<'a, 'b, T>(cell: Cell<&'a ()>, t: T)"}, {"sha": "78a8c803dd972ef3ba84a4a92b9196075e580222", "filename": "src/test/ui/nll/ty-outlives/projection-one-region-trait-bound-closure.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-closure.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -31,7 +31,7 @@ LL | | }\n                T\n            ]\n \n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/projection-one-region-trait-bound-closure.rs:37:39\n    |\n LL | fn no_relationships_late<'a, 'b, T>(cell: Cell<&'a ()>, t: T)\n@@ -76,7 +76,7 @@ LL | | }\n                T\n            ]\n \n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/projection-one-region-trait-bound-closure.rs:47:39\n    |\n LL | fn no_relationships_early<'a, 'b, T>(cell: Cell<&'a ()>, t: T)"}, {"sha": "20edfb33931aff02b02696181587a8865dd53c9c", "filename": "src/test/ui/nll/ty-outlives/projection-two-region-trait-bound-closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.rs?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -85,7 +85,7 @@ where\n     T: Anything<'b, 'b>,\n {\n     with_signature(cell, t, |cell, t| require(cell, t));\n-    //~^ ERROR unsatisfied lifetime constraints\n+    //~^ ERROR lifetime may not live long enough\n }\n \n #[rustc_regions]"}, {"sha": "d8725dc4284f3f1e52ac2c706564ab9071c3fc7e", "filename": "src/test/ui/nll/ty-outlives/projection-two-region-trait-bound-closure.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -217,7 +217,7 @@ LL | | where\n LL | |     T: Anything<'b, 'b>,\n LL | | {\n LL | |     with_signature(cell, t, |cell, t| require(cell, t));\n-LL | |     //~^ ERROR unsatisfied lifetime constraints\n+LL | |     //~^ ERROR lifetime may not live long enough\n LL | | }\n    | |_^\n    |\n@@ -226,7 +226,7 @@ LL | | }\n                T\n            ]\n \n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/projection-two-region-trait-bound-closure.rs:87:29\n    |\n LL | fn two_regions<'a, 'b, T>(cell: Cell<&'a ()>, t: T)"}, {"sha": "bcd141bb406b172072bae87c488ab1070272fb73", "filename": "src/test/ui/nll/type-alias-free-regions.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Ftype-alias-free-regions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Ftype-alias-free-regions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Ftype-alias-free-regions.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -1,4 +1,4 @@\n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/type-alias-free-regions.rs:19:9\n    |\n LL | impl<'a> FromBox<'a> for C<'a> {\n@@ -8,7 +8,7 @@ LL |     fn from_box(b: Box<B>) -> Self {\n LL |         C { f: b } //~ ERROR\n    |         ^^^^^^^^^^ returning this value requires that `'1` must outlive `'a`\n \n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/type-alias-free-regions.rs:29:9\n    |\n LL | impl<'a> FromTuple<'a> for C<'a> {"}, {"sha": "cafdd9257fdc033d1bc4fcec86bd1e45d97b1e1f", "filename": "src/test/ui/nll/user-annotations/closure-substs.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fclosure-substs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fclosure-substs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fclosure-substs.rs?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -5,21 +5,21 @@\n fn foo<'a>() {\n     // Here `x` is free in the closure sig:\n     |x: &'a i32| -> &'static i32 {\n-        return x; //~ ERROR unsatisfied lifetime constraints\n+        return x; //~ ERROR lifetime may not live long enough\n     };\n }\n \n fn foo1() {\n     // Here `x` is bound in the closure sig:\n     |x: &i32| -> &'static i32 {\n-        return x; //~ ERROR unsatisfied lifetime constraints\n+        return x; //~ ERROR lifetime may not live long enough\n     };\n }\n \n fn bar<'a>() {\n     // Here `x` is free in the closure sig:\n     |x: &'a i32, b: fn(&'static i32)| {\n-        b(x); //~ ERROR unsatisfied lifetime constraints\n+        b(x); //~ ERROR lifetime may not live long enough\n     };\n }\n \n@@ -30,4 +30,4 @@ fn bar1() {\n     };\n }\n \n-fn main() { }\n+fn main() {}"}, {"sha": "a46ab61418efb37959cfb90caadef787f0fed6d9", "filename": "src/test/ui/nll/user-annotations/closure-substs.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fclosure-substs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fclosure-substs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fclosure-substs.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -1,27 +1,27 @@\n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/closure-substs.rs:8:16\n    |\n LL | fn foo<'a>() {\n    |        -- lifetime `'a` defined here\n ...\n-LL |         return x; //~ ERROR unsatisfied lifetime constraints\n+LL |         return x; //~ ERROR lifetime may not live long enough\n    |                ^ returning this value requires that `'a` must outlive `'static`\n \n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/closure-substs.rs:15:16\n    |\n LL |     |x: &i32| -> &'static i32 {\n    |         - let's call the lifetime of this reference `'1`\n-LL |         return x; //~ ERROR unsatisfied lifetime constraints\n+LL |         return x; //~ ERROR lifetime may not live long enough\n    |                ^ returning this value requires that `'1` must outlive `'static`\n \n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/closure-substs.rs:22:9\n    |\n LL | fn bar<'a>() {\n    |        -- lifetime `'a` defined here\n ...\n-LL |         b(x); //~ ERROR unsatisfied lifetime constraints\n+LL |         b(x); //~ ERROR lifetime may not live long enough\n    |         ^^^^ argument requires that `'a` must outlive `'static`\n \n error[E0521]: borrowed data escapes outside of closure"}, {"sha": "541a7113ec740a7aa98bcacd7ddfa092e6a5b6dc", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-inherent-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-inherent-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-inherent-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-inherent-1.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -1,4 +1,4 @@\n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/constant-in-expr-inherent-1.rs:10:5\n    |\n LL | fn foo<'a>(_: &'a u32) -> &'static u32 {"}, {"sha": "5b97c12b626b3aa421202eaa8fa7dcd5e22a0cfb", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-normalize.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-normalize.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-normalize.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-normalize.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -1,4 +1,4 @@\n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/constant-in-expr-normalize.rs:20:5\n    |\n LL | fn foo<'a>(_: &'a u32) -> &'static u32 {"}, {"sha": "10e48b5bc348be2a004778f89c8f1a2ebebacff8", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-trait-item-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-1.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -1,4 +1,4 @@\n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/constant-in-expr-trait-item-1.rs:12:5\n    |\n LL | fn foo<'a>(_: &'a u32) -> &'static u32 {"}, {"sha": "5bfa32ec64492f666aaa9f199b1e9f2adde4a37b", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-trait-item-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-2.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -1,4 +1,4 @@\n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/constant-in-expr-trait-item-2.rs:12:5\n    |\n LL | fn foo<'a, T: Foo<'a>>() -> &'static u32 {"}, {"sha": "a1e60db05d08f2c29c6f85fbab39a885f5345414", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-trait-item-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-3.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -1,4 +1,4 @@\n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/constant-in-expr-trait-item-3.rs:12:5\n    |\n LL | fn foo<'a, T: Foo<'a>>() -> &'static u32 {"}, {"sha": "e1de67aa93869e292444b103989a342a06539a03", "filename": "src/test/ui/nll/user-annotations/issue-54124.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fissue-54124.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fissue-54124.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fissue-54124.rs?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -1,8 +1,8 @@\n #![feature(nll)]\n \n fn test<'a>() {\n-    let _:fn(&()) = |_:&'a ()| {}; //~ ERROR unsatisfied lifetime constraints\n-    //~^ ERROR unsatisfied lifetime constraints\n+    let _:fn(&()) = |_:&'a ()| {}; //~ ERROR lifetime may not live long enough\n+    //~^ ERROR lifetime may not live long enough\n }\n \n fn main() {"}, {"sha": "b1c2411e46c01bb28e4ce8c69bcec404a5b59db7", "filename": "src/test/ui/nll/user-annotations/issue-54124.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fissue-54124.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fissue-54124.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fissue-54124.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -1,19 +1,19 @@\n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/issue-54124.rs:4:22\n    |\n LL | fn test<'a>() {\n    |         -- lifetime `'a` defined here\n-LL |     let _:fn(&()) = |_:&'a ()| {}; //~ ERROR unsatisfied lifetime constraints\n+LL |     let _:fn(&()) = |_:&'a ()| {}; //~ ERROR lifetime may not live long enough\n    |                      ^ - let's call the lifetime of this reference `'1`\n    |                      |\n    |                      requires that `'1` must outlive `'a`\n \n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/issue-54124.rs:4:22\n    |\n LL | fn test<'a>() {\n    |         -- lifetime `'a` defined here\n-LL |     let _:fn(&()) = |_:&'a ()| {}; //~ ERROR unsatisfied lifetime constraints\n+LL |     let _:fn(&()) = |_:&'a ()| {}; //~ ERROR lifetime may not live long enough\n    |                      ^ requires that `'a` must outlive `'static`\n \n error: aborting due to 2 previous errors"}, {"sha": "476578e074dac018f5a006957ce9250a58c120a9", "filename": "src/test/ui/nll/user-annotations/patterns.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -148,7 +148,7 @@ LL |         value1: &x, //~ ERROR\n LL | }\n    | - `x` dropped here while still borrowed\n \n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/patterns.rs:113:5\n    |\n LL | fn static_to_a_to_static_through_variable<'a>(x: &'a u32) -> &'static u32 {\n@@ -157,7 +157,7 @@ LL | fn static_to_a_to_static_through_variable<'a>(x: &'a u32) -> &'static u32 {\n LL |     y //~ ERROR\n    |     ^ returning this value requires that `'a` must outlive `'static`\n \n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/patterns.rs:125:5\n    |\n LL | fn static_to_a_to_static_through_tuple<'a>(x: &'a u32) -> &'static u32 {\n@@ -166,7 +166,7 @@ LL | fn static_to_a_to_static_through_tuple<'a>(x: &'a u32) -> &'static u32 {\n LL |     y //~ ERROR\n    |     ^ returning this value requires that `'a` must outlive `'static`\n \n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/patterns.rs:130:5\n    |\n LL | fn static_to_a_to_static_through_struct<'a>(_x: &'a u32) -> &'static u32 {\n@@ -175,7 +175,7 @@ LL |     let Single { value: y }: Single<&'a u32> = Single { value: &22 };\n LL |     y //~ ERROR\n    |     ^ returning this value requires that `'a` must outlive `'static`\n \n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/patterns.rs:134:18\n    |\n LL | fn a_to_static_then_static<'a>(x: &'a u32) -> &'static u32 {"}, {"sha": "d8caf4693b504396b3e73cf2f7ab5c751c150320", "filename": "src/test/ui/nll/user-annotations/wf-self-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fwf-self-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fwf-self-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fwf-self-type.rs?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -9,7 +9,7 @@ impl<'a, 'b> Foo<'a, 'b> {\n }\n \n pub fn foo<'a, 'b>(u: &'b ()) -> &'a () {\n-    Foo::xmute(u) //~ ERROR unsatisfied lifetime constraints\n+    Foo::xmute(u) //~ ERROR lifetime may not live long enough\n }\n \n fn main() {}"}, {"sha": "00500c8d6541fbf3756549e64f1c17a60950fc69", "filename": "src/test/ui/nll/user-annotations/wf-self-type.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fwf-self-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fwf-self-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fwf-self-type.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -1,11 +1,11 @@\n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/wf-self-type.rs:12:5\n    |\n LL | pub fn foo<'a, 'b>(u: &'b ()) -> &'a () {\n    |            --  -- lifetime `'b` defined here\n    |            |\n    |            lifetime `'a` defined here\n-LL |     Foo::xmute(u) //~ ERROR unsatisfied lifetime constraints\n+LL |     Foo::xmute(u) //~ ERROR lifetime may not live long enough\n    |     ^^^^^^^^^^^^^ returning this value requires that `'b` must outlive `'a`\n \n error: aborting due to previous error"}, {"sha": "0d35c09b8ef078bda90aadf935bd224ac9f944ad", "filename": "src/test/ui/nll/where_clauses_in_functions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fwhere_clauses_in_functions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fwhere_clauses_in_functions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fwhere_clauses_in_functions.rs?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -11,7 +11,7 @@ where\n \n fn bar<'a, 'b>(x: &'a u32, y: &'b u32) -> (&'a u32, &'b u32) {\n     foo(x, y)\n-    //~^ ERROR unsatisfied lifetime constraints\n+    //~^ ERROR lifetime may not live long enough\n }\n \n fn main() {}"}, {"sha": "f3b65ec31ac7dcb5678f9152e31decff923c818b", "filename": "src/test/ui/nll/where_clauses_in_functions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fwhere_clauses_in_functions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fwhere_clauses_in_functions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fwhere_clauses_in_functions.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -1,4 +1,4 @@\n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/where_clauses_in_functions.rs:13:5\n    |\n LL | fn bar<'a, 'b>(x: &'a u32, y: &'b u32) -> (&'a u32, &'b u32) {"}, {"sha": "8bc6b2e4a4fbb505e667b853adf4d4c1488214d7", "filename": "src/test/ui/nll/where_clauses_in_structs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fwhere_clauses_in_structs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fwhere_clauses_in_structs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fwhere_clauses_in_structs.rs?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -11,7 +11,7 @@ struct Foo<'a: 'b, 'b> {\n \n fn bar<'a, 'b>(x: Cell<&'a u32>, y: Cell<&'b u32>) {\n     Foo { x, y };\n-    //~^ ERROR unsatisfied lifetime constraints\n+    //~^ ERROR lifetime may not live long enough\n }\n \n fn main() {}"}, {"sha": "e0feb40273f6bf3496e95fae830f85de1cb14165", "filename": "src/test/ui/nll/where_clauses_in_structs.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fwhere_clauses_in_structs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fnll%2Fwhere_clauses_in_structs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fwhere_clauses_in_structs.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -1,4 +1,4 @@\n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/where_clauses_in_structs.rs:13:11\n    |\n LL | fn bar<'a, 'b>(x: Cell<&'a u32>, y: Cell<&'b u32>) {"}, {"sha": "d6cec03e0ff2ecf89b186fff09a8844903dd34d5", "filename": "src/test/ui/regions/regions-static-bound.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.nll.stderr?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -1,4 +1,4 @@\n-error: unsatisfied lifetime constraints\n+error: lifetime may not live long enough\n   --> $DIR/regions-static-bound.rs:9:5\n    |\n LL | fn static_id_wrong_way<'a>(t: &'a ()) -> &'static () where 'static: 'a {"}, {"sha": "c1a15e50a4d0687dd8553b5198a4828b723e45cb", "filename": "src/test/ui/regions/regions-static-bound.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274d293cab4ec3d994d9f84192464168e971ea56/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.rs?ref=274d293cab4ec3d994d9f84192464168e971ea56", "patch": "@@ -7,7 +7,7 @@ fn static_id_indirect<'a,'b>(t: &'a ()) -> &'static ()\n     where 'a: 'b, 'b: 'static { t }\n fn static_id_wrong_way<'a>(t: &'a ()) -> &'static () where 'static: 'a {\n     t //[ll]~ ERROR E0312\n-        //[nll]~^ ERROR unsatisfied lifetime constraints\n+        //[nll]~^ ERROR lifetime may not live long enough\n }\n \n fn error(u: &(), v: &()) {"}]}