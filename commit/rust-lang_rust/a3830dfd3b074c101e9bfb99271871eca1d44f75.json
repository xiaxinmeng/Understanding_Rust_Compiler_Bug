{"sha": "a3830dfd3b074c101e9bfb99271871eca1d44f75", "node_id": "C_kwDOAAsO6NoAKGEzODMwZGZkM2IwNzRjMTAxZTliZmI5OTI3MTg3MWVjYTFkNDRmNzU", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-10-26T18:18:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-26T18:18:22Z"}, "message": "Merge #10641\n\n10641: fix: make `expand_macro` multi-token mapping aware r=spookyvision a=spookyvision\n\n\n\nCo-authored-by: Anatol Ulrich <anatol.ulrich@ferrous-systems.com>\nCo-authored-by: Anatol Ulrich <45840+spookyvision@users.noreply.github.com>", "tree": {"sha": "85b15c5d3f8bdf86043bb948aff5caa65d16462a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85b15c5d3f8bdf86043bb948aff5caa65d16462a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3830dfd3b074c101e9bfb99271871eca1d44f75", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJheEZuCRBK7hj4Ov3rIwAADjEIAFBUsxyVIVqc6oBlmjymi/IH\nV1TZXelExsQaDcXEBbXdnWBNonnr1+WVP0MzY9Wt3MnDLUxj6EXPlcA4dEmwjinb\nUrsz64UO4J1H2a3DXKWB8eVn/5OIusCCL8Fp0bNFMEjpDP5L8pnSPL0YtN1GfQMf\n2I46p961288NYijVLy2xjqjffpcwRfZpJ0mYhI9efHWZ2yPbr7HG2+evEXQvs9gh\nowscRcNYKmQzv5Fx0/3kxEGiCDXzABxcFKQg3MpZ8grWh8SsqMjkij6RAC+XAjWv\n3L/oDehSUcKmXBz7EL5z8RUh9iE6bzLMczp952Ih03eGV8rvI7Mro15hqglpR7A=\n=hqlO\n-----END PGP SIGNATURE-----\n", "payload": "tree 85b15c5d3f8bdf86043bb948aff5caa65d16462a\nparent c48730cb72919df7f1426085872846524b5a3cb2\nparent b42093915ab14fe61688ef1705505dbd859cb89a\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1635272302 +0000\ncommitter GitHub <noreply@github.com> 1635272302 +0000\n\nMerge #10641\n\n10641: fix: make `expand_macro` multi-token mapping aware r=spookyvision a=spookyvision\n\n\n\nCo-authored-by: Anatol Ulrich <anatol.ulrich@ferrous-systems.com>\nCo-authored-by: Anatol Ulrich <45840+spookyvision@users.noreply.github.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3830dfd3b074c101e9bfb99271871eca1d44f75", "html_url": "https://github.com/rust-lang/rust/commit/a3830dfd3b074c101e9bfb99271871eca1d44f75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3830dfd3b074c101e9bfb99271871eca1d44f75/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c48730cb72919df7f1426085872846524b5a3cb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c48730cb72919df7f1426085872846524b5a3cb2", "html_url": "https://github.com/rust-lang/rust/commit/c48730cb72919df7f1426085872846524b5a3cb2"}, {"sha": "b42093915ab14fe61688ef1705505dbd859cb89a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b42093915ab14fe61688ef1705505dbd859cb89a", "html_url": "https://github.com/rust-lang/rust/commit/b42093915ab14fe61688ef1705505dbd859cb89a"}], "stats": {"total": 40, "additions": 28, "deletions": 12}, "files": [{"sha": "c389d895f28501c8a634433c5da56eea8a3a58b3", "filename": "crates/ide/src/expand_macro.rs", "status": "modified", "additions": 28, "deletions": 12, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/a3830dfd3b074c101e9bfb99271871eca1d44f75/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3830dfd3b074c101e9bfb99271871eca1d44f75/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fexpand_macro.rs?ref=a3830dfd3b074c101e9bfb99271871eca1d44f75", "patch": "@@ -32,19 +32,32 @@ pub(crate) fn expand_macro(db: &RootDatabase, position: FilePosition) -> Option<\n         _ => 0,\n     })?;\n \n-    let descended = sema.descend_into_macros_single(tok.clone());\n-    if let Some(attr) = descended.ancestors().find_map(ast::Attr::cast) {\n-        if let Some((path, tt)) = attr.as_simple_call() {\n-            if path == \"derive\" {\n-                let mut tt = tt.syntax().children_with_tokens().skip(1).join(\"\");\n-                tt.pop();\n-                let expansions = sema.expand_derive_macro(&attr)?;\n-                return Some(ExpandedMacro {\n-                    name: tt,\n-                    expansion: expansions.into_iter().map(insert_whitespaces).join(\"\"),\n-                });\n-            }\n+    // due to how Rust Analyzer works internally, we need to special case derive attributes,\n+    // otherwise they might not get found, e.g. here with the cursor at $0 `#[attr]` would expand:\n+    // ```\n+    // #[attr]\n+    // #[derive($0Foo)]\n+    // struct Bar;\n+    // ```\n+\n+    let derive = sema.descend_into_macros(tok.clone()).iter().find_map(|descended| {\n+        let attr = descended.ancestors().find_map(ast::Attr::cast)?;\n+        let (path, tt) = attr.as_simple_call()?;\n+        if path == \"derive\" {\n+            let mut tt = tt.syntax().children_with_tokens().skip(1).join(\"\");\n+            tt.pop();\n+            let expansions = sema.expand_derive_macro(&attr)?;\n+            Some(ExpandedMacro {\n+                name: tt,\n+                expansion: expansions.into_iter().map(insert_whitespaces).join(\"\"),\n+            })\n+        } else {\n+            None\n         }\n+    });\n+\n+    if derive.is_some() {\n+        return derive;\n     }\n \n     // FIXME: Intermix attribute and bang! expansions\n@@ -353,9 +366,12 @@ fn main() {\n     fn macro_expand_derive() {\n         check(\n             r#\"\n+//- proc_macros: identity\n+\n #[rustc_builtin_macro]\n pub macro Clone {}\n \n+#[proc_macros::identity]\n #[derive(C$0lone)]\n struct Foo {}\n \"#,"}]}