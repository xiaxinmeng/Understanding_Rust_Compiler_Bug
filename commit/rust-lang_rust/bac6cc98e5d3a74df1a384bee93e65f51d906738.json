{"sha": "bac6cc98e5d3a74df1a384bee93e65f51d906738", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhYzZjYzk4ZTVkM2E3NGRmMWEzODRiZWU5M2U2NWY1MWQ5MDY3Mzg=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-06-22T08:50:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-06-22T08:50:43Z"}, "message": "Rollup merge of #51664 - jebrosen:pub_parse_methods2, r=Mark-Simulacrum\n\nmake more libsyntax methods public\n\nFollowup for #51502, which was sufficient only for the latest stable release of Rocket. The `master` branch uses a few more. I plan to reimplement the deleted method `parse_seq` in Rocket (see SergioBenitez/Rocket#666), rather than resurrecting it in libsyntax.\n\nr? @Mark-Simulacrum", "tree": {"sha": "54fd3a3cbabb268fc1d6c76eefb98883c10c7a83", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54fd3a3cbabb268fc1d6c76eefb98883c10c7a83"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bac6cc98e5d3a74df1a384bee93e65f51d906738", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbLLhjCRBK7hj4Ov3rIwAAdHIIAAaQBVDYl7OKSZvV55YS1z+N\nBQjmVOjeFr+cWyAVS+hQBQM2mIRUKXokLcg+4may3t/H2zrRDnsopyj/uE+BOC5s\nfmjTxFqUb12OuWUMAHcVB9EkhywXH5ygFf9A7aR3yGQhr5GorqWu8Iq91kWmTIFE\nJl8Z5sju/STj2RsR6O2aJ5lfSOqOqrV/BO2Zn73T6sWW57tdV3I6yRFXFsURtnOh\ntD5w3FiLR6jsySfnQxyLAHu4lO+fgLsQWQl0oWTFL1DjPQnwylMxFjypFQMq3ir3\nz5jr8ITDzYBfqtIzu2yxUlf4mJg2flNp4+AD3bxiHeENn4EvE8bKH65mh9/i7Zw=\n=u9eg\n-----END PGP SIGNATURE-----\n", "payload": "tree 54fd3a3cbabb268fc1d6c76eefb98883c10c7a83\nparent e920d21d78014c58d4bcec646aac2a6bd867408c\nparent 2dcafef621f464e61d7e649ae854d416d704a7c3\nauthor kennytm <kennytm@gmail.com> 1529657443 +0800\ncommitter GitHub <noreply@github.com> 1529657443 +0800\n\nRollup merge of #51664 - jebrosen:pub_parse_methods2, r=Mark-Simulacrum\n\nmake more libsyntax methods public\n\nFollowup for #51502, which was sufficient only for the latest stable release of Rocket. The `master` branch uses a few more. I plan to reimplement the deleted method `parse_seq` in Rocket (see SergioBenitez/Rocket#666), rather than resurrecting it in libsyntax.\n\nr? @Mark-Simulacrum\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bac6cc98e5d3a74df1a384bee93e65f51d906738", "html_url": "https://github.com/rust-lang/rust/commit/bac6cc98e5d3a74df1a384bee93e65f51d906738", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bac6cc98e5d3a74df1a384bee93e65f51d906738/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e920d21d78014c58d4bcec646aac2a6bd867408c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e920d21d78014c58d4bcec646aac2a6bd867408c", "html_url": "https://github.com/rust-lang/rust/commit/e920d21d78014c58d4bcec646aac2a6bd867408c"}, {"sha": "2dcafef621f464e61d7e649ae854d416d704a7c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/2dcafef621f464e61d7e649ae854d416d704a7c3", "html_url": "https://github.com/rust-lang/rust/commit/2dcafef621f464e61d7e649ae854d416d704a7c3"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "b2ce80eef4d3335c84b63884faeab2ce2196c665", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bac6cc98e5d3a74df1a384bee93e65f51d906738/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bac6cc98e5d3a74df1a384bee93e65f51d906738/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=bac6cc98e5d3a74df1a384bee93e65f51d906738", "patch": "@@ -1057,7 +1057,7 @@ impl<'a> Parser<'a> {\n     /// Parse a sequence, not including the closing delimiter. The function\n     /// f must consume tokens until reaching the next separator or\n     /// closing bracket.\n-    fn parse_seq_to_before_end<T, F>(&mut self,\n+    pub fn parse_seq_to_before_end<T, F>(&mut self,\n                                          ket: &token::Token,\n                                          sep: SeqSep,\n                                          f: F)\n@@ -2117,7 +2117,7 @@ impl<'a> Parser<'a> {\n         ExprKind::AssignOp(binop, lhs, rhs)\n     }\n \n-    fn mk_mac_expr(&mut self, span: Span, m: Mac_, attrs: ThinVec<Attribute>) -> P<Expr> {\n+    pub fn mk_mac_expr(&mut self, span: Span, m: Mac_, attrs: ThinVec<Attribute>) -> P<Expr> {\n         P(Expr {\n             id: ast::DUMMY_NODE_ID,\n             node: ExprKind::Mac(codemap::Spanned {node: m, span: span}),\n@@ -7226,7 +7226,7 @@ impl<'a> Parser<'a> {\n         })\n     }\n \n-    fn parse_optional_str(&mut self) -> Option<(Symbol, ast::StrStyle, Option<ast::Name>)> {\n+    pub fn parse_optional_str(&mut self) -> Option<(Symbol, ast::StrStyle, Option<ast::Name>)> {\n         let ret = match self.token {\n             token::Literal(token::Str_(s), suf) => (s, ast::StrStyle::Cooked, suf),\n             token::Literal(token::StrRaw(s, n), suf) => (s, ast::StrStyle::Raw(n), suf),"}]}