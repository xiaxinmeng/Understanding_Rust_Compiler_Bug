{"sha": "1e2905269bf6c6f230204e08f7d400664b630faf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlMjkwNTI2OWJmNmM2ZjIzMDIwNGUwOGY3ZDQwMDY2NGI2MzBmYWY=", "commit": {"author": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-07-26T06:20:04Z"}, "committer": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-07-27T03:28:07Z"}, "message": "Add tests for `self: (&)AssocType`", "tree": {"sha": "a1929604b4d8921bac5b77c7456e69178c02b1a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1929604b4d8921bac5b77c7456e69178c02b1a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e2905269bf6c6f230204e08f7d400664b630faf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e2905269bf6c6f230204e08f7d400664b630faf", "html_url": "https://github.com/rust-lang/rust/commit/1e2905269bf6c6f230204e08f7d400664b630faf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e2905269bf6c6f230204e08f7d400664b630faf/comments", "author": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "committer": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8507b8e42fbe8b763bb8a7375133d95445813946", "url": "https://api.github.com/repos/rust-lang/rust/commits/8507b8e42fbe8b763bb8a7375133d95445813946", "html_url": "https://github.com/rust-lang/rust/commit/8507b8e42fbe8b763bb8a7375133d95445813946"}], "stats": {"total": 124, "additions": 124, "deletions": 0}, "files": [{"sha": "163eb49383a877169f9e6ae0fd8bc69cab7f669a", "filename": "src/test/ui/self/elision/assoc.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/1e2905269bf6c6f230204e08f7d400664b630faf/src%2Ftest%2Fui%2Fself%2Felision%2Fassoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e2905269bf6c6f230204e08f7d400664b630faf/src%2Ftest%2Fui%2Fself%2Felision%2Fassoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fassoc.rs?ref=1e2905269bf6c6f230204e08f7d400664b630faf", "patch": "@@ -0,0 +1,40 @@\n+// check-pass\n+\n+#![feature(arbitrary_self_types)]\n+#![allow(non_snake_case)]\n+\n+use std::rc::Rc;\n+\n+trait Trait {\n+    type AssocType;\n+}\n+\n+struct Struct { }\n+\n+impl Trait for Struct {\n+    type AssocType = Self;\n+}\n+\n+impl Struct {\n+    fn assoc(self: <Struct as Trait>::AssocType, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    fn box_AssocType(self: Box<<Struct as Trait>::AssocType>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    fn rc_AssocType(self: Rc<<Struct as Trait>::AssocType>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    fn box_box_AssocType(self: Box<Box<<Struct as Trait>::AssocType>>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    fn box_rc_AssocType(self: Box<Rc<<Struct as Trait>::AssocType>>, f: &u32) -> &u32 {\n+        f\n+    }\n+}\n+\n+fn main() { }"}, {"sha": "70573598fcb16b4cbd9d90c404e26740601c0378", "filename": "src/test/ui/self/elision/lt-assoc.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/1e2905269bf6c6f230204e08f7d400664b630faf/src%2Ftest%2Fui%2Fself%2Felision%2Flt-assoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e2905269bf6c6f230204e08f7d400664b630faf/src%2Ftest%2Fui%2Fself%2Felision%2Flt-assoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Flt-assoc.rs?ref=1e2905269bf6c6f230204e08f7d400664b630faf", "patch": "@@ -0,0 +1,44 @@\n+// check-pass\n+\n+#![feature(arbitrary_self_types)]\n+#![allow(non_snake_case)]\n+\n+use std::rc::Rc;\n+\n+trait Trait {\n+    type AssocType;\n+}\n+\n+struct Struct<'a> { x: &'a u32 }\n+\n+impl<'a> Trait for Struct<'a> {\n+    type AssocType = Self;\n+}\n+\n+impl<'a> Struct<'a> {\n+    fn take_self(self, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    fn take_AssocType(self: <Struct<'a> as Trait>::AssocType, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    fn take_Box_AssocType(self: Box<<Struct<'a> as Trait>::AssocType>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    fn take_Box_Box_AssocType(self: Box<Box<<Struct<'a> as Trait>::AssocType>>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    fn take_Rc_AssocType(self: Rc<<Struct<'a> as Trait>::AssocType>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    fn take_Box_Rc_AssocType(self: Box<Rc<<Struct<'a> as Trait>::AssocType>>, f: &u32) -> &u32 {\n+        f\n+    }\n+}\n+\n+fn main() { }"}, {"sha": "f9354bc884710e42e21e1adb0d6b2f22d1ec3d25", "filename": "src/test/ui/self/elision/ref-assoc.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/1e2905269bf6c6f230204e08f7d400664b630faf/src%2Ftest%2Fui%2Fself%2Felision%2Fref-assoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e2905269bf6c6f230204e08f7d400664b630faf/src%2Ftest%2Fui%2Fself%2Felision%2Fref-assoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-assoc.rs?ref=1e2905269bf6c6f230204e08f7d400664b630faf", "patch": "@@ -0,0 +1,40 @@\n+// check-pass\n+\n+#![feature(arbitrary_self_types)]\n+#![allow(non_snake_case)]\n+\n+use std::pin::Pin;\n+\n+trait Trait {\n+    type AssocType;\n+}\n+\n+struct Struct { }\n+\n+impl Trait for Struct {\n+    type AssocType = Self;\n+}\n+\n+impl Struct {\n+    fn ref_AssocType(self: &<Struct as Trait>::AssocType, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    fn box_ref_AssocType(self: Box<&<Struct as Trait>::AssocType>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    fn pin_ref_AssocType(self: Pin<&<Struct as Trait>::AssocType>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    fn box_box_ref_AssocType(self: Box<Box<&<Struct as Trait>::AssocType>>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    fn box_pin_ref_AssocType(self: Box<Pin<&<Struct as Trait>::AssocType>>, f: &u32) -> &u32 {\n+        f\n+    }\n+}\n+\n+fn main() { }"}]}