{"sha": "6f173cdba66fd988295b3abe1a355330ddc710eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmMTczY2RiYTY2ZmQ5ODgyOTViM2FiZTFhMzU1MzMwZGRjNzEwZWI=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-12-05T18:07:10Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-12-05T18:07:10Z"}, "message": "rollup merge of #19472: nick29581/iflet\n\nCloses #19469\n\nr?", "tree": {"sha": "dea2e75bb09400376f64d18b0c018f5d792a82ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dea2e75bb09400376f64d18b0c018f5d792a82ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f173cdba66fd988295b3abe1a355330ddc710eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f173cdba66fd988295b3abe1a355330ddc710eb", "html_url": "https://github.com/rust-lang/rust/commit/6f173cdba66fd988295b3abe1a355330ddc710eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f173cdba66fd988295b3abe1a355330ddc710eb/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "560b8f6c593e7a232f78fc071a305927e935d352", "url": "https://api.github.com/repos/rust-lang/rust/commits/560b8f6c593e7a232f78fc071a305927e935d352", "html_url": "https://github.com/rust-lang/rust/commit/560b8f6c593e7a232f78fc071a305927e935d352"}, {"sha": "c200ae5a8a1ab70cfea39ef184e1fd0e87b33181", "url": "https://api.github.com/repos/rust-lang/rust/commits/c200ae5a8a1ab70cfea39ef184e1fd0e87b33181", "html_url": "https://github.com/rust-lang/rust/commit/c200ae5a8a1ab70cfea39ef184e1fd0e87b33181"}], "stats": {"total": 38, "additions": 5, "deletions": 33}, "files": [{"sha": "5ece63fd48d696594cd5bab002fab6791d1befdc", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 3, "deletions": 16, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/6f173cdba66fd988295b3abe1a355330ddc710eb/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f173cdba66fd988295b3abe1a355330ddc710eb/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=6f173cdba66fd988295b3abe1a355330ddc710eb", "patch": "@@ -65,13 +65,13 @@ static KNOWN_FEATURES: &'static [(&'static str, Status)] = &[\n     (\"unboxed_closures\", Active),\n     (\"import_shadowing\", Active),\n     (\"advanced_slice_patterns\", Active),\n-    (\"tuple_indexing\", Active),\n+    (\"tuple_indexing\", Accepted),\n     (\"associated_types\", Active),\n     (\"visible_private_types\", Active),\n     (\"slicing_syntax\", Active),\n \n-    (\"if_let\", Active),\n-    (\"while_let\", Active),\n+    (\"if_let\", Accepted),\n+    (\"while_let\", Accepted),\n \n     // if you change this list without updating src/doc/reference.md, cmr will be sad\n \n@@ -309,24 +309,11 @@ impl<'a, 'v> Visitor<'v> for Context<'a> {\n                                   \"unboxed closures are a work-in-progress \\\n                                    feature with known bugs\");\n             }\n-            ast::ExprTupField(..) => {\n-                self.gate_feature(\"tuple_indexing\",\n-                                  e.span,\n-                                  \"tuple indexing is experimental\");\n-            }\n-            ast::ExprIfLet(..) => {\n-                self.gate_feature(\"if_let\", e.span,\n-                                  \"`if let` syntax is experimental\");\n-            }\n             ast::ExprSlice(..) => {\n                 self.gate_feature(\"slicing_syntax\",\n                                   e.span,\n                                   \"slicing syntax is experimental\");\n             }\n-            ast::ExprWhileLet(..) => {\n-                self.gate_feature(\"while_let\", e.span,\n-                                  \"`while let` syntax is experimental\");\n-            }\n             _ => {}\n         }\n         visit::walk_expr(self, e);"}, {"sha": "1d09143c24d1d42f83913e0697bad8f2714008d0", "filename": "src/test/compile-fail/borrow-tuple-fields.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f173cdba66fd988295b3abe1a355330ddc710eb/src%2Ftest%2Fcompile-fail%2Fborrow-tuple-fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f173cdba66fd988295b3abe1a355330ddc710eb/src%2Ftest%2Fcompile-fail%2Fborrow-tuple-fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrow-tuple-fields.rs?ref=6f173cdba66fd988295b3abe1a355330ddc710eb", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(tuple_indexing)]\n-\n struct Foo(Box<int>, int);\n \n struct Bar(int, int);"}, {"sha": "88b6854bb1d2c3a59df2e43e03f082c2c0a99136", "filename": "src/test/compile-fail/if-let.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f173cdba66fd988295b3abe1a355330ddc710eb/src%2Ftest%2Fcompile-fail%2Fif-let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f173cdba66fd988295b3abe1a355330ddc710eb/src%2Ftest%2Fcompile-fail%2Fif-let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fif-let.rs?ref=6f173cdba66fd988295b3abe1a355330ddc710eb", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules,if_let)]\n+#![feature(macro_rules)]\n \n fn macros() {\n     macro_rules! foo{"}, {"sha": "f64d8fee2d8b3948ab742cf2782ee6ca0d3e7628", "filename": "src/test/compile-fail/issue-18566.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f173cdba66fd988295b3abe1a355330ddc710eb/src%2Ftest%2Fcompile-fail%2Fissue-18566.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f173cdba66fd988295b3abe1a355330ddc710eb/src%2Ftest%2Fcompile-fail%2Fissue-18566.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-18566.rs?ref=6f173cdba66fd988295b3abe1a355330ddc710eb", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(tuple_indexing)]\n-\n struct MyPtr<'a>(&'a mut uint);\n impl<'a> Deref<uint> for MyPtr<'a> {\n     fn deref<'b>(&'b self) -> &'b uint { self.0 }"}, {"sha": "7ca83f21305f15842f9cb4a2e831fd3e4b35c946", "filename": "src/test/compile-fail/issue-19244-1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f173cdba66fd988295b3abe1a355330ddc710eb/src%2Ftest%2Fcompile-fail%2Fissue-19244-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f173cdba66fd988295b3abe1a355330ddc710eb/src%2Ftest%2Fcompile-fail%2Fissue-19244-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-19244-1.rs?ref=6f173cdba66fd988295b3abe1a355330ddc710eb", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(tuple_indexing)]\n-\n const TUP: (uint,) = (42,);\n \n fn main() {"}, {"sha": "b71effa6f861be1f4d779668fe1c37b8ccc0cdb7", "filename": "src/test/compile-fail/lint-unnecessary-parens.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6f173cdba66fd988295b3abe1a355330ddc710eb/src%2Ftest%2Fcompile-fail%2Flint-unnecessary-parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f173cdba66fd988295b3abe1a355330ddc710eb/src%2Ftest%2Fcompile-fail%2Flint-unnecessary-parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-unnecessary-parens.rs?ref=6f173cdba66fd988295b3abe1a355330ddc710eb", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n #![deny(unused_parens)]\n-#![feature(if_let,while_let)]\n \n #[deriving(Eq, PartialEq)]\n struct X { y: bool }"}, {"sha": "e45862a7fc6e451d8fca5563e72420e785db3f29", "filename": "src/test/compile-fail/move-fragments-1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f173cdba66fd988295b3abe1a355330ddc710eb/src%2Ftest%2Fcompile-fail%2Fmove-fragments-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f173cdba66fd988295b3abe1a355330ddc710eb/src%2Ftest%2Fcompile-fail%2Fmove-fragments-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmove-fragments-1.rs?ref=6f173cdba66fd988295b3abe1a355330ddc710eb", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(tuple_indexing)]\n-\n // Test that we correctly compute the move fragments for a fn.\n //\n // Note that the code below is not actually incorrect; the"}, {"sha": "7fcb54e04672dd520165dd28a0f4294d8a93f0a0", "filename": "src/test/compile-fail/move-out-of-tuple-field.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f173cdba66fd988295b3abe1a355330ddc710eb/src%2Ftest%2Fcompile-fail%2Fmove-out-of-tuple-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f173cdba66fd988295b3abe1a355330ddc710eb/src%2Ftest%2Fcompile-fail%2Fmove-out-of-tuple-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmove-out-of-tuple-field.rs?ref=6f173cdba66fd988295b3abe1a355330ddc710eb", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(tuple_indexing)]\n-\n struct Foo(Box<int>);\n \n fn main() {"}, {"sha": "33aeebb36916679b6e03f784a1209aaa378734d8", "filename": "src/test/compile-fail/tuple-index-not-tuple.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f173cdba66fd988295b3abe1a355330ddc710eb/src%2Ftest%2Fcompile-fail%2Ftuple-index-not-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f173cdba66fd988295b3abe1a355330ddc710eb/src%2Ftest%2Fcompile-fail%2Ftuple-index-not-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftuple-index-not-tuple.rs?ref=6f173cdba66fd988295b3abe1a355330ddc710eb", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(tuple_indexing)]\n-\n struct Point { x: int, y: int }\n struct Empty;\n "}, {"sha": "609e34f2274b763e034b22e47c04653f0209b726", "filename": "src/test/compile-fail/tuple-index-out-of-bounds.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f173cdba66fd988295b3abe1a355330ddc710eb/src%2Ftest%2Fcompile-fail%2Ftuple-index-out-of-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f173cdba66fd988295b3abe1a355330ddc710eb/src%2Ftest%2Fcompile-fail%2Ftuple-index-out-of-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftuple-index-out-of-bounds.rs?ref=6f173cdba66fd988295b3abe1a355330ddc710eb", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(tuple_indexing)]\n-\n struct Point(int, int);\n \n fn main() {"}, {"sha": "ccf3d2dd75076ab781cb5dbaf61293fc27300856", "filename": "src/test/compile-fail/while-let.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f173cdba66fd988295b3abe1a355330ddc710eb/src%2Ftest%2Fcompile-fail%2Fwhile-let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f173cdba66fd988295b3abe1a355330ddc710eb/src%2Ftest%2Fcompile-fail%2Fwhile-let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fwhile-let.rs?ref=6f173cdba66fd988295b3abe1a355330ddc710eb", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules,while_let)]\n+#![feature(macro_rules)]\n \n fn macros() {\n     macro_rules! foo{"}]}