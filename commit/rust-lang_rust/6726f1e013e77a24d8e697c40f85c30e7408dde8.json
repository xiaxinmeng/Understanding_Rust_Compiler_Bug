{"sha": "6726f1e013e77a24d8e697c40f85c30e7408dde8", "node_id": "C_kwDOAAsO6NoAKDY3MjZmMWUwMTNlNzdhMjRkOGU2OTdjNDBmODVjMzBlNzQwOGRkZTg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-12T06:12:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-12T06:12:06Z"}, "message": "Rollup merge of #92432 - fee1-dead:constck-impl-constness, r=oli-obk\n\nError when selected impl is not const in constck\n\nCatches bad things when checking a `default_method_body_is_const` body, such as:\n\n```rust\nself.map(/* .. */).is_sorted();\n```\n\nWhen `Map` does not yet have a `const` `impl` for `Iterator`.\n\nr? ```@oli-obk```", "tree": {"sha": "51018f016b6f7e430ed044e6f5948ad0f28da2fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51018f016b6f7e430ed044e6f5948ad0f28da2fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6726f1e013e77a24d8e697c40f85c30e7408dde8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh3nE2CRBK7hj4Ov3rIwAAV10IABbopv79dNCaBMAuGG3jiIAt\nUO8ze9m8tsM21h5ovx+x+C0vb/t09VRGrURex1wSJ3BJTDtCCDQnzIZ9jqqa2xZ6\nPspFxcx1RyOuJgX+a+8pTBws6LefFwreQ1NYL9U/FfVAtYJmSnyWBG6GibAnWBPD\ny2kbU5UVxn2rceFdU7IEEdb3k7ZRGvGcvw6N/UqypNCjPjGcSkN+dLal/xGitMea\nggDisbXanleVlsVJ5HqSYwSncYy3Nu9hhmnSnK0+uA7NrH1VkCdGi9BxV0Vh6Ewy\nW4DCAJh8WLh/Q38exFBvRUoYdeSkqJqCwyP+jI9zH47qDqY/v3etDY2AfEIq/Ao=\n=x9h1\n-----END PGP SIGNATURE-----\n", "payload": "tree 51018f016b6f7e430ed044e6f5948ad0f28da2fb\nparent 677f8f0f4fcc3183a5331bd792759e5f53cd10c2\nparent bf5130b502d3d1c61465c8deded65a1cb3929fbd\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1641967926 +0100\ncommitter GitHub <noreply@github.com> 1641967926 +0100\n\nRollup merge of #92432 - fee1-dead:constck-impl-constness, r=oli-obk\n\nError when selected impl is not const in constck\n\nCatches bad things when checking a `default_method_body_is_const` body, such as:\n\n```rust\nself.map(/* .. */).is_sorted();\n```\n\nWhen `Map` does not yet have a `const` `impl` for `Iterator`.\n\nr? ```@oli-obk```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6726f1e013e77a24d8e697c40f85c30e7408dde8", "html_url": "https://github.com/rust-lang/rust/commit/6726f1e013e77a24d8e697c40f85c30e7408dde8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6726f1e013e77a24d8e697c40f85c30e7408dde8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "677f8f0f4fcc3183a5331bd792759e5f53cd10c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/677f8f0f4fcc3183a5331bd792759e5f53cd10c2", "html_url": "https://github.com/rust-lang/rust/commit/677f8f0f4fcc3183a5331bd792759e5f53cd10c2"}, {"sha": "bf5130b502d3d1c61465c8deded65a1cb3929fbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf5130b502d3d1c61465c8deded65a1cb3929fbd", "html_url": "https://github.com/rust-lang/rust/commit/bf5130b502d3d1c61465c8deded65a1cb3929fbd"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "de4824eb667c4cd21abd0a2c6b3b48dfc1060fbe", "filename": "compiler/rustc_const_eval/src/transform/check_consts/check.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6726f1e013e77a24d8e697c40f85c30e7408dde8/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6726f1e013e77a24d8e697c40f85c30e7408dde8/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs?ref=6726f1e013e77a24d8e697c40f85c30e7408dde8", "patch": "@@ -810,7 +810,7 @@ impl<'tcx> Visitor<'tcx> for Checker<'_, 'tcx> {\n                         param_env,\n                         Binder::dummy(TraitPredicate {\n                             trait_ref,\n-                            constness: ty::BoundConstness::ConstIfConst,\n+                            constness: ty::BoundConstness::NotConst,\n                             polarity: ty::ImplPolarity::Positive,\n                         }),\n                     );\n@@ -829,6 +829,10 @@ impl<'tcx> Visitor<'tcx> for Checker<'_, 'tcx> {\n                             return;\n                         }\n                         Ok(Some(ImplSource::UserDefined(data))) => {\n+                            if let hir::Constness::NotConst = tcx.impl_constness(data.impl_def_id) {\n+                                self.check_op(ops::FnCallNonConst(None));\n+                                return;\n+                            }\n                             let callee_name = tcx.item_name(callee);\n                             if let Some(&did) = tcx\n                                 .associated_item_def_ids(data.impl_def_id)"}, {"sha": "cccb856c2f675f4c71a95ef72aafb04e11ea6926", "filename": "src/test/ui/rfc-2632-const-trait-impl/default-method-body-is-const-same-trait-ck.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6726f1e013e77a24d8e697c40f85c30e7408dde8/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fdefault-method-body-is-const-same-trait-ck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6726f1e013e77a24d8e697c40f85c30e7408dde8/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fdefault-method-body-is-const-same-trait-ck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fdefault-method-body-is-const-same-trait-ck.rs?ref=6726f1e013e77a24d8e697c40f85c30e7408dde8", "patch": "@@ -0,0 +1,17 @@\n+#![feature(const_fn_trait_bound)]\n+#![feature(const_trait_impl)]\n+\n+pub trait Tr {\n+    #[default_method_body_is_const]\n+    fn a(&self) {}\n+\n+    #[default_method_body_is_const]\n+    fn b(&self) {\n+        ().a()\n+        //~^ ERROR calls in constant functions are limited\n+    }\n+}\n+\n+impl Tr for () {}\n+\n+fn main() {}"}, {"sha": "91f4d2fd4b0e847a466caea09db4627d19e2f3e7", "filename": "src/test/ui/rfc-2632-const-trait-impl/default-method-body-is-const-same-trait-ck.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6726f1e013e77a24d8e697c40f85c30e7408dde8/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fdefault-method-body-is-const-same-trait-ck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6726f1e013e77a24d8e697c40f85c30e7408dde8/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fdefault-method-body-is-const-same-trait-ck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fdefault-method-body-is-const-same-trait-ck.stderr?ref=6726f1e013e77a24d8e697c40f85c30e7408dde8", "patch": "@@ -0,0 +1,9 @@\n+error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+  --> $DIR/default-method-body-is-const-same-trait-ck.rs:10:9\n+   |\n+LL |         ().a()\n+   |         ^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0015`."}]}