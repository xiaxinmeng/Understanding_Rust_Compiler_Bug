{"sha": "f907986580887ba8b0f30d91792bae81b394ab91", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5MDc5ODY1ODA4ODdiYThiMGYzMGQ5MTc5MmJhZTgxYjM5NGFiOTE=", "commit": {"author": {"name": "Bastian Kersting", "email": "bastian@cmbt.de", "date": "2020-12-21T17:24:08Z"}, "committer": {"name": "Bastian Kersting", "email": "bastian@cmbt.de", "date": "2021-02-05T19:19:22Z"}, "message": "Added documentation", "tree": {"sha": "c3e843b0787401efbd54e59449d19974189ebeb0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3e843b0787401efbd54e59449d19974189ebeb0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f907986580887ba8b0f30d91792bae81b394ab91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f907986580887ba8b0f30d91792bae81b394ab91", "html_url": "https://github.com/rust-lang/rust/commit/f907986580887ba8b0f30d91792bae81b394ab91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f907986580887ba8b0f30d91792bae81b394ab91/comments", "author": {"login": "1c3t3a", "id": 45260993, "node_id": "MDQ6VXNlcjQ1MjYwOTkz", "avatar_url": "https://avatars.githubusercontent.com/u/45260993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1c3t3a", "html_url": "https://github.com/1c3t3a", "followers_url": "https://api.github.com/users/1c3t3a/followers", "following_url": "https://api.github.com/users/1c3t3a/following{/other_user}", "gists_url": "https://api.github.com/users/1c3t3a/gists{/gist_id}", "starred_url": "https://api.github.com/users/1c3t3a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1c3t3a/subscriptions", "organizations_url": "https://api.github.com/users/1c3t3a/orgs", "repos_url": "https://api.github.com/users/1c3t3a/repos", "events_url": "https://api.github.com/users/1c3t3a/events{/privacy}", "received_events_url": "https://api.github.com/users/1c3t3a/received_events", "type": "User", "site_admin": false}, "committer": {"login": "1c3t3a", "id": 45260993, "node_id": "MDQ6VXNlcjQ1MjYwOTkz", "avatar_url": "https://avatars.githubusercontent.com/u/45260993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1c3t3a", "html_url": "https://github.com/1c3t3a", "followers_url": "https://api.github.com/users/1c3t3a/followers", "following_url": "https://api.github.com/users/1c3t3a/following{/other_user}", "gists_url": "https://api.github.com/users/1c3t3a/gists{/gist_id}", "starred_url": "https://api.github.com/users/1c3t3a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1c3t3a/subscriptions", "organizations_url": "https://api.github.com/users/1c3t3a/orgs", "repos_url": "https://api.github.com/users/1c3t3a/repos", "events_url": "https://api.github.com/users/1c3t3a/events{/privacy}", "received_events_url": "https://api.github.com/users/1c3t3a/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb9c6698ee36570efe79343d746afa3dcd04c7a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb9c6698ee36570efe79343d746afa3dcd04c7a9", "html_url": "https://github.com/rust-lang/rust/commit/eb9c6698ee36570efe79343d746afa3dcd04c7a9"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "84d14b9b48abc2b2a8ebc4e4ba497c326ba75d31", "filename": "clippy_lints/src/semicolon_if_nothing_returned.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f907986580887ba8b0f30d91792bae81b394ab91/clippy_lints%2Fsrc%2Fsemicolon_if_nothing_returned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f907986580887ba8b0f30d91792bae81b394ab91/clippy_lints%2Fsrc%2Fsemicolon_if_nothing_returned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsemicolon_if_nothing_returned.rs?ref=f907986580887ba8b0f30d91792bae81b394ab91", "patch": "@@ -7,24 +7,31 @@ use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n-    /// **What it does:**\n+    /// **What it does:** Looks for blocks of expressions and fires if the last expression returns `()`\n+    /// but is not followed by a semicolon.\n     ///\n-    /// **Why is this bad?**\n+    /// **Why is this bad?** The semicolon might be optional but when\n+    /// extending the block with new code, it doesn't require a change in previous last line.\n+    /// It's also more idiomatic.\n     ///\n     /// **Known problems:** None.\n     ///\n     /// **Example:**\n     ///\n     /// ```rust\n-    /// // example code where clippy issues a warning\n+    /// fn main() {\n+    /// println!(\"Hello world\")\n+    /// }\n     /// ```\n     /// Use instead:\n     /// ```rust\n-    /// // example code which does not raise clippy warning\n+    /// fn main() {\n+    /// println!(\"Hello world\");\n+    /// }\n     /// ```\n     pub SEMICOLON_IF_NOTHING_RETURNED,\n     pedantic,\n-    \"default lint description\"\n+    \"add a semicolon if nothing is returned\"\n }\n \n declare_lint_pass!(SemicolonIfNothingReturned => [SEMICOLON_IF_NOTHING_RETURNED]);"}]}