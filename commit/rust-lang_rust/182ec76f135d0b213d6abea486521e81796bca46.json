{"sha": "182ec76f135d0b213d6abea486521e81796bca46", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4MmVjNzZmMTM1ZDBiMjEzZDZhYmVhNDg2NTIxZTgxNzk2YmNhNDY=", "commit": {"author": {"name": "Alan Du", "email": "alanhdu@gmail.com", "date": "2019-01-05T03:01:11Z"}, "committer": {"name": "Alan Du", "email": "alanhdu@gmail.com", "date": "2019-01-05T03:01:11Z"}, "message": "Address join lines use items right }", "tree": {"sha": "8554a5712f0c4f4e99cf998dba6b8d57fb3c2813", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8554a5712f0c4f4e99cf998dba6b8d57fb3c2813"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/182ec76f135d0b213d6abea486521e81796bca46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/182ec76f135d0b213d6abea486521e81796bca46", "html_url": "https://github.com/rust-lang/rust/commit/182ec76f135d0b213d6abea486521e81796bca46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/182ec76f135d0b213d6abea486521e81796bca46/comments", "author": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fae89605547d684d39e0065fc4286f8608428d5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/fae89605547d684d39e0065fc4286f8608428d5f", "html_url": "https://github.com/rust-lang/rust/commit/fae89605547d684d39e0065fc4286f8608428d5f"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "2befd5266dbd1db3195d2cfa0c176d526fbc105f", "filename": "crates/ra_editor/src/typing.rs", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/182ec76f135d0b213d6abea486521e81796bca46/crates%2Fra_editor%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/182ec76f135d0b213d6abea486521e81796bca46/crates%2Fra_editor%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Ftyping.rs?ref=182ec76f135d0b213d6abea486521e81796bca46", "patch": "@@ -188,10 +188,14 @@ fn remove_newline(\n         edit.delete(TextRange::from_to(prev.range().start(), node.range().end()));\n     } else if prev.kind() == COMMA && next.kind() == R_CURLY {\n         // Removes: comma, newline (incl. surrounding whitespace)\n-        // Adds: a single whitespace\n+        let space = if let Some(USE_TREE) = prev.prev_sibling().map(|p| p.kind()) {\n+            \"\"\n+        } else {\n+            \" \"\n+        };\n         edit.replace(\n             TextRange::from_to(prev.range().start(), node.range().end()),\n-            \" \".to_string(),\n+            space.to_string(),\n         );\n     } else if let (Some(_), Some(next)) = (ast::Comment::cast(prev), ast::Comment::cast(next)) {\n         // Removes: newline (incl. surrounding whitespace), start of the next comment\n@@ -336,7 +340,7 @@ fn foo() {\n     }\n \n     #[test]\n-    fn test_join_lines_use_items() {\n+    fn test_join_lines_use_items_left() {\n         // No space after the '{'\n         check_join_lines(\n             r\"\n@@ -349,6 +353,20 @@ fn foo() {\n         );\n     }\n \n+    #[test]\n+    fn test_join_lines_use_items_right() {\n+        // No space after the '{'\n+        check_join_lines(\n+            r\"\n+use ra_syntax::{\n+<|>    TextUnit, TextRange,\n+};\",\n+            r\"\n+use ra_syntax::{\n+<|>    TextUnit, TextRange};\",\n+        );\n+    }\n+\n     #[test]\n     fn test_join_lines_use_tree() {\n         check_join_lines("}]}