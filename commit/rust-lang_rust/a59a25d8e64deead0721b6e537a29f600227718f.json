{"sha": "a59a25d8e64deead0721b6e537a29f600227718f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1OWEyNWQ4ZTY0ZGVlYWQwNzIxYjZlNTM3YTI5ZjYwMDIyNzcxOGY=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2017-09-18T19:27:19Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2017-09-18T19:56:59Z"}, "message": "core: Implement rfold for Map, Cloned, Chain", "tree": {"sha": "edef44aa34da59b68883c5414b4f55f12e7c65c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edef44aa34da59b68883c5414b4f55f12e7c65c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a59a25d8e64deead0721b6e537a29f600227718f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a59a25d8e64deead0721b6e537a29f600227718f", "html_url": "https://github.com/rust-lang/rust/commit/a59a25d8e64deead0721b6e537a29f600227718f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a59a25d8e64deead0721b6e537a29f600227718f/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31cf26a953fe69c23de49f98676a746fea5dcefb", "url": "https://api.github.com/repos/rust-lang/rust/commits/31cf26a953fe69c23de49f98676a746fea5dcefb", "html_url": "https://github.com/rust-lang/rust/commit/31cf26a953fe69c23de49f98676a746fea5dcefb"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "cee345d52ca290d77723fdbe4d618560b98864c0", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/a59a25d8e64deead0721b6e537a29f600227718f/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a59a25d8e64deead0721b6e537a29f600227718f/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=a59a25d8e64deead0721b6e537a29f600227718f", "patch": "@@ -461,6 +461,12 @@ impl<'a, I, T: 'a> DoubleEndedIterator for Cloned<I>\n     fn next_back(&mut self) -> Option<T> {\n         self.it.next_back().cloned()\n     }\n+\n+    fn rfold<Acc, F>(self, init: Acc, mut f: F) -> Acc\n+        where F: FnMut(Acc, Self::Item) -> Acc,\n+    {\n+        self.it.rfold(init, move |acc, elt| f(acc, elt.clone()))\n+    }\n }\n \n #[stable(feature = \"iter_cloned\", since = \"1.1.0\")]\n@@ -773,6 +779,26 @@ impl<A, B> DoubleEndedIterator for Chain<A, B> where\n             ChainState::Back => self.b.next_back(),\n         }\n     }\n+\n+    fn rfold<Acc, F>(self, init: Acc, mut f: F) -> Acc\n+        where F: FnMut(Acc, Self::Item) -> Acc,\n+    {\n+        let mut accum = init;\n+        match self.state {\n+            ChainState::Both | ChainState::Back => {\n+                accum = self.b.rfold(accum, &mut f);\n+            }\n+            _ => { }\n+        }\n+        match self.state {\n+            ChainState::Both | ChainState::Front => {\n+                accum = self.a.rfold(accum, &mut f);\n+            }\n+            _ => { }\n+        }\n+        accum\n+    }\n+\n }\n \n // Note: *both* must be fused to handle double-ended iterators.\n@@ -1106,6 +1132,13 @@ impl<B, I: DoubleEndedIterator, F> DoubleEndedIterator for Map<I, F> where\n     fn next_back(&mut self) -> Option<B> {\n         self.iter.next_back().map(&mut self.f)\n     }\n+\n+    fn rfold<Acc, G>(self, init: Acc, mut g: G) -> Acc\n+        where G: FnMut(Acc, Self::Item) -> Acc,\n+    {\n+        let mut f = self.f;\n+        self.iter.rfold(init, move |acc, elt| g(acc, f(elt)))\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}