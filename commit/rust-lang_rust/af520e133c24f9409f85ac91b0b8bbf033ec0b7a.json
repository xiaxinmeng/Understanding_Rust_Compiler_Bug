{"sha": "af520e133c24f9409f85ac91b0b8bbf033ec0b7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmNTIwZTEzM2MyNGY5NDA5Zjg1YWM5MWIwYjhiYmYwMzNlYzBiN2E=", "commit": {"author": {"name": "Alexandre Gagnon", "email": "alxgnon@gmail.com", "date": "2014-06-20T03:17:49Z"}, "committer": {"name": "Alexandre Gagnon", "email": "alxgnon@gmail.com", "date": "2014-06-20T03:17:49Z"}, "message": "std::sync::TaskPool: Improve module documentation\n\nThe struct and module doc comments are reformulated. The `execute`\nmethod's documentation are put up to date, and failure information\nis added. A test is also added to address the possible failure.", "tree": {"sha": "c77c4f5f9bbba681ee48c1e5081f930334e13e2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c77c4f5f9bbba681ee48c1e5081f930334e13e2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af520e133c24f9409f85ac91b0b8bbf033ec0b7a", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af520e133c24f9409f85ac91b0b8bbf033ec0b7a", "html_url": "https://github.com/rust-lang/rust/commit/af520e133c24f9409f85ac91b0b8bbf033ec0b7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af520e133c24f9409f85ac91b0b8bbf033ec0b7a/comments", "author": {"login": "alxgnon", "id": 4480082, "node_id": "MDQ6VXNlcjQ0ODAwODI=", "avatar_url": "https://avatars.githubusercontent.com/u/4480082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alxgnon", "html_url": "https://github.com/alxgnon", "followers_url": "https://api.github.com/users/alxgnon/followers", "following_url": "https://api.github.com/users/alxgnon/following{/other_user}", "gists_url": "https://api.github.com/users/alxgnon/gists{/gist_id}", "starred_url": "https://api.github.com/users/alxgnon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alxgnon/subscriptions", "organizations_url": "https://api.github.com/users/alxgnon/orgs", "repos_url": "https://api.github.com/users/alxgnon/repos", "events_url": "https://api.github.com/users/alxgnon/events{/privacy}", "received_events_url": "https://api.github.com/users/alxgnon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alxgnon", "id": 4480082, "node_id": "MDQ6VXNlcjQ0ODAwODI=", "avatar_url": "https://avatars.githubusercontent.com/u/4480082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alxgnon", "html_url": "https://github.com/alxgnon", "followers_url": "https://api.github.com/users/alxgnon/followers", "following_url": "https://api.github.com/users/alxgnon/following{/other_user}", "gists_url": "https://api.github.com/users/alxgnon/gists{/gist_id}", "starred_url": "https://api.github.com/users/alxgnon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alxgnon/subscriptions", "organizations_url": "https://api.github.com/users/alxgnon/orgs", "repos_url": "https://api.github.com/users/alxgnon/repos", "events_url": "https://api.github.com/users/alxgnon/events{/privacy}", "received_events_url": "https://api.github.com/users/alxgnon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "282705c7842713d9809a9fb53223c1e40c3fe860", "url": "https://api.github.com/repos/rust-lang/rust/commits/282705c7842713d9809a9fb53223c1e40c3fe860", "html_url": "https://github.com/rust-lang/rust/commit/282705c7842713d9809a9fb53223c1e40c3fe860"}], "stats": {"total": 30, "additions": 17, "deletions": 13}, "files": [{"sha": "cf95f5b088f18f49e27999f54f5e9be0873669ec", "filename": "src/libstd/sync/task_pool.rs", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/af520e133c24f9409f85ac91b0b8bbf033ec0b7a/src%2Flibstd%2Fsync%2Ftask_pool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af520e133c24f9409f85ac91b0b8bbf033ec0b7a/src%2Flibstd%2Fsync%2Ftask_pool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Ftask_pool.rs?ref=af520e133c24f9409f85ac91b0b8bbf033ec0b7a", "patch": "@@ -8,10 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![allow(missing_doc)]\n-\n-/// A task pool abstraction. Useful for achieving predictable CPU\n-/// parallelism.\n+//! Abstraction of a task pool for basic parallelism.\n \n use core::prelude::*;\n \n@@ -25,6 +22,7 @@ enum Msg<T> {\n     Quit\n }\n \n+/// A task pool used to execute functions in parallel.\n pub struct TaskPool<T> {\n     channels: Vec<Sender<Msg<T>>>,\n     next_index: uint,\n@@ -40,11 +38,13 @@ impl<T> Drop for TaskPool<T> {\n }\n \n impl<T> TaskPool<T> {\n-    /// Spawns a new task pool with `n_tasks` tasks. If the `sched_mode`\n-    /// is None, the tasks run on this scheduler; otherwise, they run on a\n-    /// new scheduler with the given mode. The provided `init_fn_factory`\n-    /// returns a function which, given the index of the task, should return\n-    /// local data to be kept around in that task.\n+    /// Spawns a new task pool with `n_tasks` tasks. The provided\n+    /// `init_fn_factory` returns a function which, given the index of the\n+    /// task, should return local data to be kept around in that task.\n+    ///\n+    /// # Failure\n+    ///\n+    /// This function will fail if `n_tasks` is less than 1.\n     pub fn new(n_tasks: uint,\n                init_fn_factory: || -> proc(uint):Send -> T)\n                -> TaskPool<T> {\n@@ -87,12 +87,16 @@ impl<T> TaskPool<T> {\n \n #[test]\n fn test_task_pool() {\n-    let f: || -> proc(uint):Send -> uint = || {\n-        let g: proc(uint):Send -> uint = proc(i) i;\n-        g\n-    };\n+    let f: || -> proc(uint):Send -> uint = || { proc(i) i };\n     let mut pool = TaskPool::new(4, f);\n     for _ in range(0, 8) {\n         pool.execute(proc(i) println!(\"Hello from thread {}!\", *i));\n     }\n }\n+\n+#[test]\n+#[should_fail]\n+fn test_zero_tasks_failure() {\n+    let f: || -> proc(uint):Send -> uint = || { proc(i) i };\n+    TaskPool::new(0, f);\n+}"}]}