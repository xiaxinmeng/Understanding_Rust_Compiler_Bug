{"sha": "e7fa993d8980c4a0a199a5018a135e792c051117", "node_id": "C_kwDOAAsO6NoAKGU3ZmE5OTNkODk4MGM0YTBhMTk5YTUwMThhMTM1ZTc5MmMwNTExMTc", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-05-26T08:59:01Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-05-26T09:00:06Z"}, "message": "do not prefer substs relate during coherence", "tree": {"sha": "2a56d9e9af70a0dc68ac155808fb03f2fbeed281", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a56d9e9af70a0dc68ac155808fb03f2fbeed281"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7fa993d8980c4a0a199a5018a135e792c051117", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7fa993d8980c4a0a199a5018a135e792c051117", "html_url": "https://github.com/rust-lang/rust/commit/e7fa993d8980c4a0a199a5018a135e792c051117", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7fa993d8980c4a0a199a5018a135e792c051117/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c86212f9bccb4d5ec625b0607053b067732724ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/c86212f9bccb4d5ec625b0607053b067732724ab", "html_url": "https://github.com/rust-lang/rust/commit/c86212f9bccb4d5ec625b0607053b067732724ab"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "b328c1a6dce8a43e5e2653b43e709bbed99cc9df", "filename": "compiler/rustc_trait_selection/src/solve/mod.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e7fa993d8980c4a0a199a5018a135e792c051117/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7fa993d8980c4a0a199a5018a135e792c051117/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fmod.rs?ref=e7fa993d8980c4a0a199a5018a135e792c051117", "patch": "@@ -265,10 +265,18 @@ impl<'a, 'tcx> EvalCtxt<'a, 'tcx> {\n \n                 if let Some(merged) = self.try_merge_responses(&candidates) {\n                     Ok(merged)\n-                } else if let Ok(subst_relate_response) = subst_relate_response {\n-                    Ok(subst_relate_response)\n                 } else {\n-                    self.flounder(&candidates)\n+                    // When relating two aliases and we have ambiguity, we prefer\n+                    // relating the generic arguments of the aliases over normalizing\n+                    // them. This is necessary for inference during typeck.\n+                    //\n+                    // As this is incomplete, we must not do so during coherence.\n+                    match (self.solver_mode(), subst_relate_response) {\n+                        (SolverMode::Normal, Ok(response)) => Ok(response),\n+                        (SolverMode::Normal, Err(NoSolution)) | (SolverMode::Coherence, _) => {\n+                            self.flounder(&candidates)\n+                        }\n+                    }\n                 }\n             }\n         }"}]}