{"sha": "4c9e44fc5f2958706fb747d7ccf4d49f1f384545", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjOWU0NGZjNWYyOTU4NzA2ZmI3NDdkN2NjZjRkNDlmMWYzODQ1NDU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-28T00:55:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-28T00:55:48Z"}, "message": "Rollup merge of #69527 - pnkfelix:issue-69291-dont-run-rustfmt-on-untracked-paths, r=Mark-Simulacrum\n\nIgnore untracked paths when running `rustfmt` on repository.\n\nThis is a step towards resolving #69291\n\n(It might be the only step necessary at the moment; I'm not yet sure.)", "tree": {"sha": "6ff25d61de3fb03ca817043577f4c2183d805111", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ff25d61de3fb03ca817043577f4c2183d805111"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c9e44fc5f2958706fb747d7ccf4d49f1f384545", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeWGUUCRBK7hj4Ov3rIwAAdHIIAFvWHaF/HucFq+wONrpM1gGj\nIKsQu3TMZZ+zWBusUO781a8/og6Om/DYZwUR4wvBQ2r3HS0sw+aE/Ez45g809hfH\nNRnvA2gpfJTrWn3CNIxDRE0XWDDIHVVuX9jwskqBdJ98q4/ETxiamlm+ydpa5P7C\nTR6+0TAq7dnklkJIzjOCLzewbITIO/wixg6EbWBcJ+Q2e6aMBH9g9XQpgjO77ZG4\nYt07zaRksbAa12K5Bz6ptjRbvlU6i1Ps3C+KD4dTRNkk56JGQU+LsJGhHbJ1c+h4\ndQOc0NBwBDaAxOsMZ3/gfsTD6rDiEGZvaaaOh/whogpRr4vdXg8+tY3hk9hDyWU=\n=3qi7\n-----END PGP SIGNATURE-----\n", "payload": "tree 6ff25d61de3fb03ca817043577f4c2183d805111\nparent 0291b6a28946071a59cb171fb854411fe088a551\nparent cac4eeee24b8e17540dfbc28d31f39a732112118\nauthor Dylan DPC <dylan.dpc@gmail.com> 1582851348 +0100\ncommitter GitHub <noreply@github.com> 1582851348 +0100\n\nRollup merge of #69527 - pnkfelix:issue-69291-dont-run-rustfmt-on-untracked-paths, r=Mark-Simulacrum\n\nIgnore untracked paths when running `rustfmt` on repository.\n\nThis is a step towards resolving #69291\n\n(It might be the only step necessary at the moment; I'm not yet sure.)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c9e44fc5f2958706fb747d7ccf4d49f1f384545", "html_url": "https://github.com/rust-lang/rust/commit/4c9e44fc5f2958706fb747d7ccf4d49f1f384545", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c9e44fc5f2958706fb747d7ccf4d49f1f384545/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0291b6a28946071a59cb171fb854411fe088a551", "url": "https://api.github.com/repos/rust-lang/rust/commits/0291b6a28946071a59cb171fb854411fe088a551", "html_url": "https://github.com/rust-lang/rust/commit/0291b6a28946071a59cb171fb854411fe088a551"}, {"sha": "cac4eeee24b8e17540dfbc28d31f39a732112118", "url": "https://api.github.com/repos/rust-lang/rust/commits/cac4eeee24b8e17540dfbc28d31f39a732112118", "html_url": "https://github.com/rust-lang/rust/commit/cac4eeee24b8e17540dfbc28d31f39a732112118"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "a4acb14ee4b149fdf141441764a8f8a4985dbadc", "filename": "src/bootstrap/format.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4c9e44fc5f2958706fb747d7ccf4d49f1f384545/src%2Fbootstrap%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9e44fc5f2958706fb747d7ccf4d49f1f384545/src%2Fbootstrap%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fformat.rs?ref=4c9e44fc5f2958706fb747d7ccf4d49f1f384545", "patch": "@@ -1,7 +1,7 @@\n //! Runs rustfmt on the repository.\n \n use crate::Build;\n-use build_helper::t;\n+use build_helper::{output, t};\n use ignore::WalkBuilder;\n use std::path::Path;\n use std::process::Command;\n@@ -53,6 +53,17 @@ pub fn format(build: &Build, check: bool) {\n     for ignore in rustfmt_config.ignore {\n         ignore_fmt.add(&format!(\"!{}\", ignore)).expect(&ignore);\n     }\n+    let untracked_paths_output = output(\n+        Command::new(\"git\").arg(\"status\").arg(\"--porcelain\").arg(\"--untracked-files=normal\"),\n+    );\n+    let untracked_paths = untracked_paths_output\n+        .lines()\n+        .filter(|entry| entry.starts_with(\"??\"))\n+        .map(|entry| entry.split(\" \").nth(1).expect(\"every git status entry should list a path\"));\n+    for untracked_path in untracked_paths {\n+        eprintln!(\"skip untracked path {} during rustfmt invocations\", untracked_path);\n+        ignore_fmt.add(&format!(\"!{}\", untracked_path)).expect(&untracked_path);\n+    }\n     let ignore_fmt = ignore_fmt.build().unwrap();\n \n     let rustfmt_path = build.config.initial_rustfmt.as_ref().unwrap_or_else(|| {"}]}