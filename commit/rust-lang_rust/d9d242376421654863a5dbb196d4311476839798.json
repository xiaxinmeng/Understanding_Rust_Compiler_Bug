{"sha": "d9d242376421654863a5dbb196d4311476839798", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5ZDI0MjM3NjQyMTY1NDg2M2E1ZGJiMTk2ZDQzMTE0NzY4Mzk3OTg=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-02-22T19:48:16Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-02-23T00:15:48Z"}, "message": "Tweak chain rules", "tree": {"sha": "f5e865605c27e279d5bb91fd8c2aa5e51985a402", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5e865605c27e279d5bb91fd8c2aa5e51985a402"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9d242376421654863a5dbb196d4311476839798", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9d242376421654863a5dbb196d4311476839798", "html_url": "https://github.com/rust-lang/rust/commit/d9d242376421654863a5dbb196d4311476839798", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9d242376421654863a5dbb196d4311476839798/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9eb78a33335b83073c90dd8b065c31f1fb958dcc", "url": "https://api.github.com/repos/rust-lang/rust/commits/9eb78a33335b83073c90dd8b065c31f1fb958dcc", "html_url": "https://github.com/rust-lang/rust/commit/9eb78a33335b83073c90dd8b065c31f1fb958dcc"}], "stats": {"total": 52, "additions": 32, "deletions": 20}, "files": [{"sha": "218702cdbfd7521048e00c4082fd37d37cbc5d92", "filename": "src/chains.rs", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/d9d242376421654863a5dbb196d4311476839798/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9d242376421654863a5dbb196d4311476839798/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=d9d242376421654863a5dbb196d4311476839798", "patch": "@@ -78,7 +78,7 @@\n \n use Shape;\n use rewrite::{Rewrite, RewriteContext};\n-use utils::{wrap_str, first_line_width};\n+use utils::{wrap_str, first_line_width, last_line_width};\n use expr::rewrite_call;\n use config::BlockIndentStyle;\n use macros::convert_try_mac;\n@@ -129,14 +129,26 @@ pub fn rewrite_chain(expr: &ast::Expr, context: &RewriteContext, shape: Shape) -\n     let max_width = try_opt!((shape.width + shape.indent.width() + shape.offset)\n                                  .checked_sub(nested_shape.indent.width() +\n                                               nested_shape.offset));\n-    // The alignement in the shape is only used if we start the item on a new\n-    // line, so we don't need to preserve the offset.\n-    let child_shape = Shape { width: max_width, ..nested_shape };\n-    debug!(\"child_shape {:?}\", child_shape);\n+\n+    let other_child_shape = Shape { width: max_width, ..nested_shape };\n+    let first_child_shape = if extend {\n+        let mut shape = try_opt!(parent_shape.shrink_left(last_line_width(&parent_rewrite)));\n+        shape.offset = shape.offset.checked_sub(context.config.tab_spaces).unwrap_or(0);\n+        shape.indent.block_indent += context.config.tab_spaces;\n+        shape\n+    } else {\n+        other_child_shape\n+    };\n+    debug!(\"child_shapes {:?} {:?}\",\n+           first_child_shape,\n+           other_child_shape);\n+\n+    let child_shape_iter =\n+        Some(first_child_shape).into_iter().chain(::std::iter::repeat(other_child_shape)\n+                                                      .take(subexpr_list.len() - 1));\n+    let iter = subexpr_list.iter().rev().zip(child_shape_iter);\n     let mut rewrites =\n-        try_opt!(subexpr_list.iter()\n-                     .rev()\n-                     .map(|e| rewrite_chain_subexpr(e, total_span, context, child_shape))\n+        try_opt!(iter.map(|(e, shape)| rewrite_chain_subexpr(e, total_span, context, shape))\n                      .collect::<Option<Vec<_>>>());\n \n     // Total of all items excluding the last."}, {"sha": "d0b2c1ee45f57905824fb7a0999a21cd4e4ce25c", "filename": "src/items.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d9d242376421654863a5dbb196d4311476839798/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9d242376421654863a5dbb196d4311476839798/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=d9d242376421654863a5dbb196d4311476839798", "patch": "@@ -1318,9 +1318,9 @@ fn rewrite_explicit_self(explicit_self: &ast::ExplicitSelf,\n             let mut_str = format_mutability(m);\n             match lt {\n                 Some(ref l) => {\n-                    let lifetime_str =\n-                        try_opt!(l.rewrite(context,\n-                                           Shape::legacy(usize::max_value(), Indent::empty())));\n+                    let lifetime_str = try_opt!(l.rewrite(context,\n+                                                          Shape::legacy(usize::max_value(),\n+                                                                        Indent::empty())));\n                     Some(format!(\"&{} {}self\", lifetime_str, mut_str))\n                 }\n                 None => Some(format!(\"&{}self\", mut_str)),\n@@ -1677,13 +1677,12 @@ fn rewrite_args(context: &RewriteContext,\n     // Account for sugary self.\n     // FIXME: the comment for the self argument is dropped. This is blocked\n     // on rust issue #27522.\n-    let min_args = explicit_self.and_then(|explicit_self| {\n-            rewrite_explicit_self(explicit_self, args, context)\n-        })\n-        .map_or(1, |self_str| {\n-            arg_item_strs[0] = self_str;\n-            2\n-        });\n+    let min_args =\n+        explicit_self.and_then(|explicit_self| rewrite_explicit_self(explicit_self, args, context))\n+            .map_or(1, |self_str| {\n+                arg_item_strs[0] = self_str;\n+                2\n+            });\n \n     // Comments between args.\n     let mut arg_items = Vec::new();"}, {"sha": "1344121b5a6982151032bde59753d73f5748966a", "filename": "src/visitor.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d9d242376421654863a5dbb196d4311476839798/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9d242376421654863a5dbb196d4311476839798/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=d9d242376421654863a5dbb196d4311476839798", "patch": "@@ -486,8 +486,9 @@ impl<'a> FmtVisitor<'a> {\n         self.format_missing_with_indent(source!(self, first.span).lo);\n \n         let rewrite = outers.rewrite(&self.get_context(),\n-                     Shape::legacy(self.config.max_width - self.block_indent.width(),\n-                                   self.block_indent))\n+                                     Shape::legacy(self.config.max_width -\n+                                                   self.block_indent.width(),\n+                                                   self.block_indent))\n             .unwrap();\n         self.buffer.push_str(&rewrite);\n         let last = outers.last().unwrap();"}]}