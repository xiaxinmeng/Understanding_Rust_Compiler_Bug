{"sha": "a72bd699cff26175be7156db13758d17bb88813e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3MmJkNjk5Y2ZmMjYxNzViZTcxNTZkYjEzNzU4ZDE3YmI4ODgxM2U=", "commit": {"author": {"name": "Daniel Raloff", "email": "draloff@side2.com", "date": "2014-12-16T08:43:57Z"}, "committer": {"name": "Daniel Raloff", "email": "draloff@side2.com", "date": "2014-12-16T08:43:57Z"}, "message": "added optional method chain indentations for emacs major mode", "tree": {"sha": "0fc4bae868395285004683f725c58d9e0201c631", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0fc4bae868395285004683f725c58d9e0201c631"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a72bd699cff26175be7156db13758d17bb88813e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a72bd699cff26175be7156db13758d17bb88813e", "html_url": "https://github.com/rust-lang/rust/commit/a72bd699cff26175be7156db13758d17bb88813e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a72bd699cff26175be7156db13758d17bb88813e/comments", "author": {"login": "KOMON", "id": 4775234, "node_id": "MDQ6VXNlcjQ3NzUyMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4775234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KOMON", "html_url": "https://github.com/KOMON", "followers_url": "https://api.github.com/users/KOMON/followers", "following_url": "https://api.github.com/users/KOMON/following{/other_user}", "gists_url": "https://api.github.com/users/KOMON/gists{/gist_id}", "starred_url": "https://api.github.com/users/KOMON/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KOMON/subscriptions", "organizations_url": "https://api.github.com/users/KOMON/orgs", "repos_url": "https://api.github.com/users/KOMON/repos", "events_url": "https://api.github.com/users/KOMON/events{/privacy}", "received_events_url": "https://api.github.com/users/KOMON/received_events", "type": "User", "site_admin": false}, "committer": {"login": "KOMON", "id": 4775234, "node_id": "MDQ6VXNlcjQ3NzUyMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4775234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KOMON", "html_url": "https://github.com/KOMON", "followers_url": "https://api.github.com/users/KOMON/followers", "following_url": "https://api.github.com/users/KOMON/following{/other_user}", "gists_url": "https://api.github.com/users/KOMON/gists{/gist_id}", "starred_url": "https://api.github.com/users/KOMON/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KOMON/subscriptions", "organizations_url": "https://api.github.com/users/KOMON/orgs", "repos_url": "https://api.github.com/users/KOMON/repos", "events_url": "https://api.github.com/users/KOMON/events{/privacy}", "received_events_url": "https://api.github.com/users/KOMON/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b497f050081886803682adc081ddb1e8c4a59a57", "url": "https://api.github.com/repos/rust-lang/rust/commits/b497f050081886803682adc081ddb1e8c4a59a57", "html_url": "https://github.com/rust-lang/rust/commit/b497f050081886803682adc081ddb1e8c4a59a57"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "f66df6c0565608a22e0e41a3ff2c00f6261dde93", "filename": "src/etc/emacs/rust-mode.el", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/a72bd699cff26175be7156db13758d17bb88813e/src%2Fetc%2Femacs%2Frust-mode.el", "raw_url": "https://github.com/rust-lang/rust/raw/a72bd699cff26175be7156db13758d17bb88813e/src%2Fetc%2Femacs%2Frust-mode.el", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Femacs%2Frust-mode.el?ref=a72bd699cff26175be7156db13758d17bb88813e", "patch": "@@ -49,6 +49,11 @@\n   :type 'integer\n   :group 'rust-mode)\n \n+(defcustom rust-indent-method-chain nil\n+  \"Indent Rust method chains, aligned by the '.' operators\"\n+  :type 'boolean\n+  :group 'rust-mode)\n+\n (defun rust-paren-level () (nth 0 (syntax-ppss)))\n (defun rust-in-str-or-cmnt () (nth 8 (syntax-ppss)))\n (defun rust-rewind-past-str-cmnt () (goto-char (nth 8 (syntax-ppss))))\n@@ -72,6 +77,15 @@\n \t(backward-word 1))\n       (current-column))))\n \n+(defun rust-align-to-method-chain ()\n+  (save-excursion\n+\t(previous-line)\n+\t(end-of-line)\n+\t(backward-word 1)\n+\t(backward-char)\n+\t(when (looking-at \"\\\\..+\\(.*\\)\\n\")\n+\t  (- (current-column) rust-indent-offset))))\n+\n (defun rust-rewind-to-beginning-of-current-level-expr ()\n   (let ((current-level (rust-paren-level)))\n     (back-to-indentation)\n@@ -94,10 +108,13 @@\n                    ;; the inside of it correctly relative to the outside.\n                    (if (= 0 level)\n                        0\n+\t\t\t\t\t (or\n+\t\t\t\t\t  (when rust-indent-method-chain\n+\t\t\t\t\t\t(rust-align-to-method-chain))\n                      (save-excursion\n                        (backward-up-list)\n                        (rust-rewind-to-beginning-of-current-level-expr)\n-                       (+ (current-column) rust-indent-offset)))))\n+                       (+ (current-column) rust-indent-offset))))))\n              (cond\n               ;; A function return type is indented to the corresponding function arguments\n               ((looking-at \"->\")\n@@ -109,6 +126,16 @@\n               ;; A closing brace is 1 level unindended\n               ((looking-at \"}\") (- baseline rust-indent-offset))\n \n+\t\t\t  ;;Line up method chains by their .'s\n+\t\t\t  ((when (and rust-indent-method-chain\n+\t\t\t\t\t\t  (looking-at \"\\..+\\(.*\\);?\\n\"))\n+\t\t\t\t (or\n+\t\t\t\t  (let ((method-indent (rust-align-to-method-chain)))\n+\t\t\t\t\t(when method-indent\n+\t\t\t\t\t  (+ method-indent rust-indent-offset)))\n+\t\t\t\t  (+ baseline rust-indent-offset))))\n+\n+\t\t\t  \n               ;; Doc comments in /** style with leading * indent to line up the *s\n               ((and (nth 4 (syntax-ppss)) (looking-at \"*\"))\n                (+ 1 baseline))"}]}