{"sha": "2178409df574aa83c5e9e6e7bff62b66c32acf63", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxNzg0MDlkZjU3NGFhODNjNWU5ZTZlN2JmZjYyYjY2YzMyYWNmNjM=", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2020-09-25T04:52:32Z"}, "committer": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2020-09-25T04:52:32Z"}, "message": "Remove some obsolete macros", "tree": {"sha": "430dcfc954b78495eedee0c3114de50e349d9ac0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/430dcfc954b78495eedee0c3114de50e349d9ac0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2178409df574aa83c5e9e6e7bff62b66c32acf63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2178409df574aa83c5e9e6e7bff62b66c32acf63", "html_url": "https://github.com/rust-lang/rust/commit/2178409df574aa83c5e9e6e7bff62b66c32acf63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2178409df574aa83c5e9e6e7bff62b66c32acf63/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7d1f3e797fbb12059203a640adce59f2a359dc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7d1f3e797fbb12059203a640adce59f2a359dc4", "html_url": "https://github.com/rust-lang/rust/commit/b7d1f3e797fbb12059203a640adce59f2a359dc4"}], "stats": {"total": 76, "additions": 11, "deletions": 65}, "files": [{"sha": "591a85af08f1ec7c00c20b7fed763f3aeb4bd0b1", "filename": "crates/core_simd/src/macros.rs", "status": "modified", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/2178409df574aa83c5e9e6e7bff62b66c32acf63/crates%2Fcore_simd%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2178409df574aa83c5e9e6e7bff62b66c32acf63/crates%2Fcore_simd%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fmacros.rs?ref=2178409df574aa83c5e9e6e7bff62b66c32acf63", "patch": "@@ -135,57 +135,6 @@ macro_rules! call_counting_args {\n     };\n }\n \n-/// Calls the macro `$mac` with the specified `$args` followed by counting values from 0 to the\n-/// specified value.\n-macro_rules! call_counting_values {\n-    { 1 => $mac:path => $($args:tt)* } => {\n-        $mac! {\n-            $($args)*\n-            0\n-        }\n-    };\n-    { 2 => $mac:path => $($args:tt)* } => {\n-        $mac! {\n-            $($args)*\n-            0 1\n-        }\n-    };\n-    { 4 => $mac:path => $($args:tt)* } => {\n-        $mac! {\n-            $($args)*\n-            0 1 2 3\n-        }\n-    };\n-    { 8 => $mac:path => $($args:tt)* } => {\n-        $mac! {\n-            $($args)*\n-            0 1 2 3 4 5 6 7\n-        }\n-    };\n-    { 16 => $mac:path => $($args:tt)* } => {\n-        $mac! {\n-            $($args)*\n-            0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n-        }\n-    };\n-    { 32 => $mac:path => $($args:tt)* } => {\n-        $mac! {\n-            $($args)*\n-            0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15\n-            16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\n-        }\n-    };\n-    { 64 => $mac:path => $($args:tt)* } => {\n-        $mac! {\n-            $($args)*\n-            0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15\n-            16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\n-            32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47\n-            48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63\n-        }\n-    };\n-}\n-\n /// Implements common traits on the specified vector `$name`, holding multiple `$lanes` of `$type`.\n macro_rules! base_vector_traits {\n     { $name:path => [$type:ty; $lanes:literal] } => {"}, {"sha": "4c20eab99209d63759577933ba321756069a638a", "filename": "crates/core_simd/src/pointers.rs", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2178409df574aa83c5e9e6e7bff62b66c32acf63/crates%2Fcore_simd%2Fsrc%2Fpointers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2178409df574aa83c5e9e6e7bff62b66c32acf63/crates%2Fcore_simd%2Fsrc%2Fpointers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fpointers.rs?ref=2178409df574aa83c5e9e6e7bff62b66c32acf63", "patch": "@@ -9,6 +9,17 @@ macro_rules! define_pointer_vector {\n         #[repr(C)]\n         pub struct $name<T>($underlying, PhantomData<T>);\n \n+        impl<T> core::fmt::Debug for $name<T> {\n+            fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {\n+                crate::fmt::format(self.as_ref(), f)\n+            }\n+        }\n+        impl<T> core::fmt::Pointer for $name<T> {\n+            fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {\n+                crate::fmt::format_pointer(self.as_ref(), f)\n+            }\n+        }\n+\n         impl<T> Copy for $name<T> {}\n \n         impl<T> Clone for $name<T> {\n@@ -40,8 +51,6 @@ macro_rules! define_pointer_vector {\n             }\n         }\n \n-        call_counting_values! { $lanes => define_pointer_vector => debug $name | *$mut T | }\n-\n         impl<T> $name<T> {\n             /// Construct a vector by setting all lanes to the given value.\n             #[inline]\n@@ -97,18 +106,6 @@ macro_rules! define_pointer_vector {\n             Self(<$underlying>::new($($var as isize),*), PhantomData)\n         }\n     };\n-    { debug $name:ident | $type:ty | $($index:tt)* } => {\n-        impl<T> core::fmt::Debug for $name<T> {\n-            fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {\n-                crate::fmt::format(self.as_ref(), f)\n-            }\n-        }\n-        impl<T> core::fmt::Pointer for $name<T> {\n-            fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {\n-                crate::fmt::format_pointer(self.as_ref(), f)\n-            }\n-        }\n-    }\n }\n \n define_pointer_vector! { #[doc = \"Vector of two mutable pointers\"] mptrx2 => isizex2 => 2, mut }"}]}