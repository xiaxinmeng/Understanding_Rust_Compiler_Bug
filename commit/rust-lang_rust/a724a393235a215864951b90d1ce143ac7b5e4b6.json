{"sha": "a724a393235a215864951b90d1ce143ac7b5e4b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3MjRhMzkzMjM1YTIxNTg2NDk1MWI5MGQxY2UxNDNhYzdiNWU0YjY=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-06-28T07:46:41Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-06-28T07:46:41Z"}, "message": "Reword comments", "tree": {"sha": "a1de930279de0f16d9343a928755ba5e77f8616c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1de930279de0f16d9343a928755ba5e77f8616c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a724a393235a215864951b90d1ce143ac7b5e4b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a724a393235a215864951b90d1ce143ac7b5e4b6", "html_url": "https://github.com/rust-lang/rust/commit/a724a393235a215864951b90d1ce143ac7b5e4b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a724a393235a215864951b90d1ce143ac7b5e4b6/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5dfaacf310bcec345ec38ee76d509e3e23810a95", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dfaacf310bcec345ec38ee76d509e3e23810a95", "html_url": "https://github.com/rust-lang/rust/commit/5dfaacf310bcec345ec38ee76d509e3e23810a95"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "9db5a566bd89bab81935b7287635659aefb8e6fc", "filename": "src/eval_context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a724a393235a215864951b90d1ce143ac7b5e4b6/src%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a724a393235a215864951b90d1ce143ac7b5e4b6/src%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval_context.rs?ref=a724a393235a215864951b90d1ce143ac7b5e4b6", "patch": "@@ -1347,7 +1347,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                     I128 => 16,\n                     Is => self.memory.pointer_size(),\n                 };\n-                // if we cast a ptr to a usize reading it back into a primval shouldn't panic\n+                // if we cast a ptr to an isize, reading it back into a primval shouldn't panic\n                 // Due to read_ptr ignoring the sign, we need to jump around some hoops\n                 match self.memory.read_int(ptr, size) {\n                     Err(EvalError::ReadPointerAsBytes) if size == self.memory.pointer_size() => self.memory.read_ptr(ptr)?,\n@@ -1366,7 +1366,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                     Us => self.memory.pointer_size(),\n                 };\n                 if size == self.memory.pointer_size() {\n-                    // if we cast a ptr to a usize reading it back into a primval shouldn't panic\n+                    // if we cast a ptr to an usize, reading it back into a primval shouldn't panic\n                     self.memory.read_ptr(ptr)?\n                 } else {\n                     PrimVal::from_u128(self.memory.read_uint(ptr, size)?)"}]}