{"sha": "4c8ee9a53190917f9171a3272c8061d926c2fcbe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjOGVlOWE1MzE5MDkxN2Y5MTcxYTMyNzJjODA2MWQ5MjZjMmZjYmU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-04-04T01:04:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-04T01:04:44Z"}, "message": "Merge #8322\n\n8322: Access a body's block def maps via a method r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "90bb5a1a7917695ae540ff8c2056b7b9c29ddcfd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90bb5a1a7917695ae540ff8c2056b7b9c29ddcfd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c8ee9a53190917f9171a3272c8061d926c2fcbe", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgaRCsCRBK7hj4Ov3rIwAAdHIIADFMxpm+Z7tMsiKklOpz7Ipj\n2flp9IC6ftUN8qTyFONxtX1y1/gMh2cFUYhwtdpgYQJ/plHSGeOKdNWynCKx3lzV\nSy+YIITnMzi50gO2ygnxAcG+6q5WfpINCNlFcOfI7EbL9zE8hoOUTmUwVxi8bx6A\nIin35NvA/lkcC9WDtRnd4sF27548EcVmFjxb5Ral4tWONhHa/Gc3mv19PWWZEBBO\nllFqItuDi8usW/CXk+CohT3/P8RWQIRq3Tw6+J049w1xIrzh0bbr3ewEg6cRjVw1\nFrJJ8egS7K/KZYpZaECWrhynrngHb/r7laUizj2W0HMUCSxI+BEda/5ZCGMD+x0=\n=NPpG\n-----END PGP SIGNATURE-----\n", "payload": "tree 90bb5a1a7917695ae540ff8c2056b7b9c29ddcfd\nparent 6b43a518e6d12868ddd749c8ebead343ba823f5b\nparent d8bf9bef800969304440fd2a2a324606a342eaa2\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1617498284 +0000\ncommitter GitHub <noreply@github.com> 1617498284 +0000\n\nMerge #8322\n\n8322: Access a body's block def maps via a method r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c8ee9a53190917f9171a3272c8061d926c2fcbe", "html_url": "https://github.com/rust-lang/rust/commit/4c8ee9a53190917f9171a3272c8061d926c2fcbe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c8ee9a53190917f9171a3272c8061d926c2fcbe/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b43a518e6d12868ddd749c8ebead343ba823f5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b43a518e6d12868ddd749c8ebead343ba823f5b", "html_url": "https://github.com/rust-lang/rust/commit/6b43a518e6d12868ddd749c8ebead343ba823f5b"}, {"sha": "d8bf9bef800969304440fd2a2a324606a342eaa2", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8bf9bef800969304440fd2a2a324606a342eaa2", "html_url": "https://github.com/rust-lang/rust/commit/d8bf9bef800969304440fd2a2a324606a342eaa2"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "ad3d5afbec76f7581c430b9cd788ac148a3c69f0", "filename": "crates/hir_def/src/body.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4c8ee9a53190917f9171a3272c8061d926c2fcbe/crates%2Fhir_def%2Fsrc%2Fbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c8ee9a53190917f9171a3272c8061d926c2fcbe/crates%2Fhir_def%2Fsrc%2Fbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody.rs?ref=4c8ee9a53190917f9171a3272c8061d926c2fcbe", "patch": "@@ -226,7 +226,7 @@ pub struct Body {\n     /// The `ExprId` of the actual body expression.\n     pub body_expr: ExprId,\n     /// Block expressions in this body that may contain inner items.\n-    pub block_scopes: Vec<BlockId>,\n+    block_scopes: Vec<BlockId>,\n     _c: Count<Self>,\n }\n \n@@ -310,6 +310,16 @@ impl Body {\n         db.body_with_source_map(def).0\n     }\n \n+    /// Returns an iterator over all block expressions in this body that define inner items.\n+    pub fn blocks<'a>(\n+        &'a self,\n+        db: &'a dyn DefDatabase,\n+    ) -> impl Iterator<Item = (BlockId, Arc<DefMap>)> + '_ {\n+        self.block_scopes\n+            .iter()\n+            .filter_map(move |block| db.block_def_map(*block).map(|map| (*block, map)))\n+    }\n+\n     fn new(\n         db: &dyn DefDatabase,\n         expander: Expander,"}, {"sha": "f40a7f80d314d43efa58f3500f6bc87992733836", "filename": "crates/hir_def/src/child_by_source.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c8ee9a53190917f9171a3272c8061d926c2fcbe/crates%2Fhir_def%2Fsrc%2Fchild_by_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c8ee9a53190917f9171a3272c8061d926c2fcbe/crates%2Fhir_def%2Fsrc%2Fchild_by_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fchild_by_source.rs?ref=4c8ee9a53190917f9171a3272c8061d926c2fcbe", "patch": "@@ -160,7 +160,7 @@ impl ChildBySource for EnumId {\n impl ChildBySource for DefWithBodyId {\n     fn child_by_source_to(&self, db: &dyn DefDatabase, res: &mut DynMap) {\n         let body = db.body(*self);\n-        for def_map in body.block_scopes.iter().filter_map(|block| db.block_def_map(*block)) {\n+        for (_, def_map) in body.blocks(db) {\n             // All block expressions are merged into the same map, because they logically all add\n             // inner items to the containing `DefWithBodyId`.\n             def_map[def_map.root()].scope.child_by_source_to(db, res);"}, {"sha": "1c9f9ede76d36ec3c9714a3f8a436f24ed9a5d33", "filename": "crates/hir_ty/src/diagnostics/decl_check.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4c8ee9a53190917f9171a3272c8061d926c2fcbe/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c8ee9a53190917f9171a3272c8061d926c2fcbe/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check.rs?ref=4c8ee9a53190917f9171a3272c8061d926c2fcbe", "patch": "@@ -99,8 +99,7 @@ impl<'a, 'b> DeclValidator<'a, 'b> {\n         let body = self.db.body(func.into());\n \n         // Recursively validate inner scope items, such as static variables and constants.\n-        let db = self.db;\n-        for block_def_map in body.block_scopes.iter().filter_map(|block| db.block_def_map(*block)) {\n+        for (_, block_def_map) in body.blocks(self.db.upcast()) {\n             for (_, module) in block_def_map.modules() {\n                 for def_id in module.scope.declarations() {\n                     let mut validator = DeclValidator::new(self.db, self.krate, self.sink);"}, {"sha": "ccfb88c52d0c4dcaf906aaca77f46c325b36ac45", "filename": "crates/hir_ty/src/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c8ee9a53190917f9171a3272c8061d926c2fcbe/crates%2Fhir_ty%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c8ee9a53190917f9171a3272c8061d926c2fcbe/crates%2Fhir_ty%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests.rs?ref=4c8ee9a53190917f9171a3272c8061d926c2fcbe", "patch": "@@ -288,7 +288,7 @@ fn visit_module(\n     }\n \n     fn visit_body(db: &TestDB, body: &Body, cb: &mut dyn FnMut(DefWithBodyId)) {\n-        for def_map in body.block_scopes.iter().filter_map(|block| db.block_def_map(*block)) {\n+        for (_, def_map) in body.blocks(db) {\n             for (mod_id, _) in def_map.modules() {\n                 visit_module(db, &def_map, mod_id, cb);\n             }"}]}