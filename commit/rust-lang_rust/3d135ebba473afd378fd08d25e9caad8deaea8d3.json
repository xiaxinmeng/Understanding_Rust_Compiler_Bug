{"sha": "3d135ebba473afd378fd08d25e9caad8deaea8d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkMTM1ZWJiYTQ3M2FmZDM3OGZkMDhkMjVlOWNhYWQ4ZGVhZWE4ZDM=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-05-25T20:43:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-25T20:43:52Z"}, "message": "Merge pull request #1586 from topecongiro/minor\n\nFix minor bugs", "tree": {"sha": "820124e6a4f84ed000d498147c283e1b14bb06c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/820124e6a4f84ed000d498147c283e1b14bb06c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d135ebba473afd378fd08d25e9caad8deaea8d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d135ebba473afd378fd08d25e9caad8deaea8d3", "html_url": "https://github.com/rust-lang/rust/commit/3d135ebba473afd378fd08d25e9caad8deaea8d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d135ebba473afd378fd08d25e9caad8deaea8d3/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "662811b3f0a4187f1a27eaa9880581329f256d85", "url": "https://api.github.com/repos/rust-lang/rust/commits/662811b3f0a4187f1a27eaa9880581329f256d85", "html_url": "https://github.com/rust-lang/rust/commit/662811b3f0a4187f1a27eaa9880581329f256d85"}, {"sha": "92270ba191e53fa3d9a5dbdc8cc36b5f8749cbd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/92270ba191e53fa3d9a5dbdc8cc36b5f8749cbd7", "html_url": "https://github.com/rust-lang/rust/commit/92270ba191e53fa3d9a5dbdc8cc36b5f8749cbd7"}], "stats": {"total": 77, "additions": 45, "deletions": 32}, "files": [{"sha": "318ec8e59b5878abbfb0c94507791e8fe9c464bb", "filename": "src/expr.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3d135ebba473afd378fd08d25e9caad8deaea8d3/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d135ebba473afd378fd08d25e9caad8deaea8d3/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=3d135ebba473afd378fd08d25e9caad8deaea8d3", "patch": "@@ -1887,13 +1887,11 @@ fn rewrite_index(expr: &ast::Expr,\n         (\"[\", \"]\")\n     };\n \n-    let budget = shape\n-        .width\n-        .checked_sub(expr_str.len() + lbr.len() + rbr.len())\n-        .unwrap_or(0);\n-    let index_str = index.rewrite(context, Shape::legacy(budget, shape.indent));\n-    if let Some(index_str) = index_str {\n-        return Some(format!(\"{}{}{}{}\", expr_str, lbr, index_str, rbr));\n+    let offset = expr_str.len() + lbr.len();\n+    if let Some(index_shape) = shape.visual_indent(offset).sub_width(offset + rbr.len()) {\n+        if let Some(index_str) = index.rewrite(context, index_shape) {\n+            return Some(format!(\"{}{}{}{}\", expr_str, lbr, index_str, rbr));\n+        }\n     }\n \n     let indent = shape.indent.block_indent(&context.config);"}, {"sha": "34d2b6ea5305024d4562d671b46b5920eebc2b85", "filename": "src/items.rs", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/3d135ebba473afd378fd08d25e9caad8deaea8d3/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d135ebba473afd378fd08d25e9caad8deaea8d3/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=3d135ebba473afd378fd08d25e9caad8deaea8d3", "patch": "@@ -1564,7 +1564,12 @@ fn rewrite_fn_base(context: &RewriteContext,\n \n     // Args.\n     let (mut one_line_budget, mut multi_line_budget, mut arg_indent) =\n-        try_opt!(compute_budgets_for_args(context, &result, indent, ret_str_len, newline_brace));\n+        try_opt!(compute_budgets_for_args(context,\n+                                          &result,\n+                                          indent,\n+                                          ret_str_len,\n+                                          newline_brace,\n+                                          has_braces));\n \n     if context.config.fn_args_layout() == IndentStyle::Block {\n         arg_indent = indent.block_indent(context.config);\n@@ -1906,7 +1911,8 @@ fn compute_budgets_for_args(context: &RewriteContext,\n                             result: &str,\n                             indent: Indent,\n                             ret_str_len: usize,\n-                            newline_brace: bool)\n+                            newline_brace: bool,\n+                            has_braces: bool)\n                             -> Option<((usize, usize, Indent))> {\n     debug!(\"compute_budgets_for_args {} {:?}, {}, {}\",\n            result.len(),\n@@ -1915,10 +1921,17 @@ fn compute_budgets_for_args(context: &RewriteContext,\n            newline_brace);\n     // Try keeping everything on the same line.\n     if !result.contains('\\n') {\n-        // 3 = `() `, space is before ret_string.\n-        let mut used_space = indent.width() + result.len() + ret_str_len + 3;\n-        if !newline_brace {\n-            used_space += 2;\n+        // 2 = `()`, 3 = `() `, space is before ret_string.\n+        let overhead = if ret_str_len == 0 { 2 } else { 3 };\n+        let mut used_space = indent.width() + result.len() + ret_str_len + overhead;\n+        if has_braces {\n+            if !newline_brace {\n+                // 2 = `{}`\n+                used_space += 2;\n+            }\n+        } else {\n+            // 1 = `;`\n+            used_space += 1;\n         }\n         let one_line_budget = context\n             .config"}, {"sha": "03f10a1ba38c7cf5ff28fe3820735ba252b57dd5", "filename": "tests/source/issue-1049.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d135ebba473afd378fd08d25e9caad8deaea8d3/tests%2Fsource%2Fissue-1049.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d135ebba473afd378fd08d25e9caad8deaea8d3/tests%2Fsource%2Fissue-1049.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-1049.rs?ref=3d135ebba473afd378fd08d25e9caad8deaea8d3", "patch": "@@ -14,3 +14,5 @@ impl Handle {\n fn veeeeeeeeeeeeeeeeeeeeery_long_name(a: FirstTypeeeeeeeeee, b: SecondTypeeeeeeeeeeeeeeeeeeeeeee) {}\n \n fn veeeeeeeeeeeeeeeeeeeeeery_long_name(a: FirstTypeeeeeeeeee, b: SecondTypeeeeeeeeeeeeeeeeeeeeeee) {}\n+\n+fn veeeeeeeeeeeeeeeeeeeeeeery_long_name(a: FirstTypeeeeeeeeee, b: SecondTypeeeeeeeeeeeeeeeeeeeeeee) {}"}, {"sha": "52d271a44692b527657e6f613e2d3fdf291d805d", "filename": "tests/target/chains-visual.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3d135ebba473afd378fd08d25e9caad8deaea8d3/tests%2Ftarget%2Fchains-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d135ebba473afd378fd08d25e9caad8deaea8d3/tests%2Ftarget%2Fchains-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fchains-visual.rs?ref=3d135ebba473afd378fd08d25e9caad8deaea8d3", "patch": "@@ -83,9 +83,9 @@ fn floaters() {\n             PushParam => {\n                 // params are 1-indexed\n                 stack.push(mparams[match cur.to_digit(10) {\n-                               Some(d) => d as usize - 1,\n-                               None => return Err(\"bad param number\".to_owned()),\n-                           }]\n+                                       Some(d) => d as usize - 1,\n+                                       None => return Err(\"bad param number\".to_owned()),\n+                                   }]\n                            .clone());\n             }\n         }"}, {"sha": "fb6ee2f885f4ac15fb90c03d7f8d7354b3609bde", "filename": "tests/target/chains.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3d135ebba473afd378fd08d25e9caad8deaea8d3/tests%2Ftarget%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d135ebba473afd378fd08d25e9caad8deaea8d3/tests%2Ftarget%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fchains.rs?ref=3d135ebba473afd378fd08d25e9caad8deaea8d3", "patch": "@@ -82,9 +82,9 @@ fn floaters() {\n             PushParam => {\n                 // params are 1-indexed\n                 stack.push(mparams[match cur.to_digit(10) {\n-                    Some(d) => d as usize - 1,\n-                    None => return Err(\"bad param number\".to_owned()),\n-                }].clone());\n+                                       Some(d) => d as usize - 1,\n+                                       None => return Err(\"bad param number\".to_owned()),\n+                                   }].clone());\n             }\n         }\n     }"}, {"sha": "b176820c3e689ae94ad5efc65a541137c6fba72a", "filename": "tests/target/hard-tabs.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3d135ebba473afd378fd08d25e9caad8deaea8d3/tests%2Ftarget%2Fhard-tabs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d135ebba473afd378fd08d25e9caad8deaea8d3/tests%2Ftarget%2Fhard-tabs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fhard-tabs.rs?ref=3d135ebba473afd378fd08d25e9caad8deaea8d3", "patch": "@@ -16,17 +16,7 @@ fn main() {\n \t\t..something\n \t};\n \n-\tfn foo(a: i32,\n-\t       a: i32,\n-\t       a: i32,\n-\t       a: i32,\n-\t       a: i32,\n-\t       a: i32,\n-\t       a: i32,\n-\t       a: i32,\n-\t       a: i32,\n-\t       a: i32,\n-\t       a: i32) {\n+\tfn foo(a: i32, a: i32, a: i32, a: i32, a: i32, a: i32, a: i32, a: i32, a: i32, a: i32, a: i32) {\n \t}\n \n \tlet str = \"AAAAAAAAAAAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAa\";"}, {"sha": "020ac6ff0d9b77b014097e9470b30b6b104148af", "filename": "tests/target/issue-1049.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3d135ebba473afd378fd08d25e9caad8deaea8d3/tests%2Ftarget%2Fissue-1049.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d135ebba473afd378fd08d25e9caad8deaea8d3/tests%2Ftarget%2Fissue-1049.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-1049.rs?ref=3d135ebba473afd378fd08d25e9caad8deaea8d3", "patch": "@@ -16,6 +16,9 @@ impl Handle {\n // Long function without return type that should not be reformated.\n fn veeeeeeeeeeeeeeeeeeeeery_long_name(a: FirstTypeeeeeeeeee, b: SecondTypeeeeeeeeeeeeeeeeeeeeeee) {}\n \n-fn veeeeeeeeeeeeeeeeeeeeeery_long_name(a: FirstTypeeeeeeeeee,\n-                                       b: SecondTypeeeeeeeeeeeeeeeeeeeeeee) {\n+fn veeeeeeeeeeeeeeeeeeeeeery_long_name(a: FirstTypeeeeeeeeee, b: SecondTypeeeeeeeeeeeeeeeeeeeeeee) {\n+}\n+\n+fn veeeeeeeeeeeeeeeeeeeeeeery_long_name(a: FirstTypeeeeeeeeee,\n+                                        b: SecondTypeeeeeeeeeeeeeeeeeeeeeee) {\n }"}, {"sha": "427a8076ad5ec7aaadc934265b6286175ae0d127", "filename": "tests/target/issue-1247.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3d135ebba473afd378fd08d25e9caad8deaea8d3/tests%2Ftarget%2Fissue-1247.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d135ebba473afd378fd08d25e9caad8deaea8d3/tests%2Ftarget%2Fissue-1247.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-1247.rs?ref=3d135ebba473afd378fd08d25e9caad8deaea8d3", "patch": "@@ -0,0 +1,7 @@\n+// rustfmt-max_width: 80\n+\n+fn foo() {\n+    polyfill::slice::fill(&mut self.pending[padding_pos..\n+                                            (self.algorithm.block_len - 8)],\n+                          0);\n+}"}]}