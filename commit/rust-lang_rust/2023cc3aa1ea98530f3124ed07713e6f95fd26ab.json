{"sha": "2023cc3aa1ea98530f3124ed07713e6f95fd26ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwMjNjYzNhYTFlYTk4NTMwZjMxMjRlZDA3NzEzZTZmOTVmZDI2YWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-30T12:32:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-30T12:32:41Z"}, "message": "Auto merge of #84586 - GuillaumeGomez:enforce-rustdoc-gui-test-suite-run, r=Mark-Simulacrum\n\nEnforce rustdoc-gui test-suite run\n\nPart of https://github.com/rust-lang/rust/issues/84550", "tree": {"sha": "3bd461a41011953b4bbd35fcb2f34ca79eb267f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bd461a41011953b4bbd35fcb2f34ca79eb267f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2023cc3aa1ea98530f3124ed07713e6f95fd26ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2023cc3aa1ea98530f3124ed07713e6f95fd26ab", "html_url": "https://github.com/rust-lang/rust/commit/2023cc3aa1ea98530f3124ed07713e6f95fd26ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2023cc3aa1ea98530f3124ed07713e6f95fd26ab/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f60a67025607e74fbee31c2007f8791c2f352b6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f60a67025607e74fbee31c2007f8791c2f352b6a", "html_url": "https://github.com/rust-lang/rust/commit/f60a67025607e74fbee31c2007f8791c2f352b6a"}, {"sha": "5358498b501e35a73e8450840cff2918436143c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/5358498b501e35a73e8450840cff2918436143c6", "html_url": "https://github.com/rust-lang/rust/commit/5358498b501e35a73e8450840cff2918436143c6"}], "stats": {"total": 212, "additions": 135, "deletions": 77}, "files": [{"sha": "fd39944e176fe991405a2a01f9da9c9745e0fb85", "filename": "src/bootstrap/mk/Makefile.in", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2023cc3aa1ea98530f3124ed07713e6f95fd26ab/src%2Fbootstrap%2Fmk%2FMakefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/2023cc3aa1ea98530f3124ed07713e6f95fd26ab/src%2Fbootstrap%2Fmk%2FMakefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fmk%2FMakefile.in?ref=2023cc3aa1ea98530f3124ed07713e6f95fd26ab", "patch": "@@ -45,10 +45,6 @@ check-aux:\n \t\tsrc/tools/cargo \\\n \t\tsrc/tools/cargotest \\\n \t\t$(BOOTSTRAP_ARGS)\n-check-aux-and-gui: check-aux\n-\t$(Q)$(BOOTSTRAP) test --stage 2 \\\n-\t\tsrc/test/rustdoc-gui \\\n-\t\t$(BOOTSTRAP_ARGS)\n check-bootstrap:\n \t$(Q)$(CFG_PYTHON) $(CFG_SRC_DIR)src/bootstrap/bootstrap_test.py\n dist:"}, {"sha": "16b3c6419e83de9656ec90b3c5995f0f47cede2c", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 72, "deletions": 48, "changes": 120, "blob_url": "https://github.com/rust-lang/rust/blob/2023cc3aa1ea98530f3124ed07713e6f95fd26ab/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2023cc3aa1ea98530f3124ed07713e6f95fd26ab/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=2023cc3aa1ea98530f3124ed07713e6f95fd26ab", "patch": "@@ -774,6 +774,24 @@ impl Step for RustdocJSNotStd {\n     }\n }\n \n+fn check_if_browser_ui_test_is_installed_global(npm: &Path, global: bool) -> bool {\n+    let mut command = Command::new(&npm);\n+    command.arg(\"list\").arg(\"--depth=0\");\n+    if global {\n+        command.arg(\"--global\");\n+    }\n+    let lines = command\n+        .output()\n+        .map(|output| String::from_utf8_lossy(&output.stdout).into_owned())\n+        .unwrap_or(String::new());\n+    lines.contains(&\" browser-ui-test@\")\n+}\n+\n+fn check_if_browser_ui_test_is_installed(npm: &Path) -> bool {\n+    check_if_browser_ui_test_is_installed_global(npm, false)\n+        || check_if_browser_ui_test_is_installed_global(npm, true)\n+}\n+\n #[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n pub struct RustdocGUI {\n     pub target: TargetSelection,\n@@ -786,7 +804,17 @@ impl Step for RustdocGUI {\n     const ONLY_HOSTS: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        run.path(\"src/test/rustdoc-gui\")\n+        let builder = run.builder;\n+        let run = run.path(\"src/test/rustdoc-gui\");\n+        run.default_condition(\n+            builder.config.nodejs.is_some()\n+                && builder\n+                    .config\n+                    .npm\n+                    .as_ref()\n+                    .map(|p| check_if_browser_ui_test_is_installed(p))\n+                    .unwrap_or(false),\n+        )\n     }\n \n     fn make_run(run: RunConfig<'_>) {\n@@ -795,58 +823,54 @@ impl Step for RustdocGUI {\n     }\n \n     fn run(self, builder: &Builder<'_>) {\n-        if let (Some(nodejs), Some(npm)) = (&builder.config.nodejs, &builder.config.npm) {\n-            builder.ensure(compile::Std { compiler: self.compiler, target: self.target });\n-\n-            // The goal here is to check if the necessary packages are installed, and if not, we\n-            // display a warning and move on.\n-            let mut command = Command::new(&npm);\n-            command.arg(\"list\").arg(\"--depth=0\");\n-            let lines = command\n-                .output()\n-                .map(|output| String::from_utf8_lossy(&output.stdout).to_string())\n-                .unwrap_or(String::new());\n-            if !lines.contains(&\" browser-ui-test@\") {\n-                println!(\n-                    \"warning: rustdoc-gui test suite cannot be run because npm `browser-ui-test` \\\n-                     dependency is missing\",\n-                );\n-                println!(\n-                    \"If you want to install the `{0}` dependency, run `npm install {0}`\",\n-                    \"browser-ui-test\",\n-                );\n-                return;\n-            }\n+        let nodejs = builder.config.nodejs.as_ref().expect(\"nodejs isn't available\");\n+        let npm = builder.config.npm.as_ref().expect(\"npm isn't available\");\n \n-            let out_dir = builder.test_out(self.target).join(\"rustdoc-gui\");\n+        builder.ensure(compile::Std { compiler: self.compiler, target: self.target });\n \n-            // We remove existing folder to be sure there won't be artifacts remaining.\n-            let _ = fs::remove_dir_all(&out_dir);\n+        // The goal here is to check if the necessary packages are installed, and if not, we\n+        // panic.\n+        if !check_if_browser_ui_test_is_installed(&npm) {\n+            eprintln!(\n+                \"error: rustdoc-gui test suite cannot be run because npm `browser-ui-test` \\\n+                 dependency is missing\",\n+            );\n+            eprintln!(\n+                \"If you want to install the `{0}` dependency, run `npm install {0}`\",\n+                \"browser-ui-test\",\n+            );\n+            panic!(\"Cannot run rustdoc-gui tests\");\n+        }\n \n-            // We generate docs for the libraries present in the rustdoc-gui's src folder.\n-            let libs_dir = builder.build.src.join(\"src/test/rustdoc-gui/src\");\n-            for entry in libs_dir.read_dir().expect(\"read_dir call failed\") {\n-                let entry = entry.expect(\"invalid entry\");\n-                let path = entry.path();\n-                if path.extension().map(|e| e == \"rs\").unwrap_or(false) {\n-                    let mut command = builder.rustdoc_cmd(self.compiler);\n-                    command.arg(path).arg(\"-o\").arg(&out_dir);\n-                    builder.run(&mut command);\n-                }\n-            }\n+        let out_dir = builder.test_out(self.target).join(\"rustdoc-gui\");\n \n-            // We now run GUI tests.\n-            let mut command = Command::new(&nodejs);\n-            command\n-                .arg(builder.build.src.join(\"src/tools/rustdoc-gui/tester.js\"))\n-                .arg(\"--doc-folder\")\n-                .arg(out_dir)\n-                .arg(\"--tests-folder\")\n-                .arg(builder.build.src.join(\"src/test/rustdoc-gui\"));\n-            builder.run(&mut command);\n-        } else {\n-            builder.info(\"No nodejs found, skipping \\\"src/test/rustdoc-gui\\\" tests\");\n+        // We remove existing folder to be sure there won't be artifacts remaining.\n+        let _ = fs::remove_dir_all(&out_dir);\n+\n+        let mut nb_generated = 0;\n+        // We generate docs for the libraries present in the rustdoc-gui's src folder.\n+        let libs_dir = builder.build.src.join(\"src/test/rustdoc-gui/src\");\n+        for entry in libs_dir.read_dir().expect(\"read_dir call failed\") {\n+            let entry = entry.expect(\"invalid entry\");\n+            let path = entry.path();\n+            if path.extension().map(|e| e == \"rs\").unwrap_or(false) {\n+                let mut command = builder.rustdoc_cmd(self.compiler);\n+                command.arg(path).arg(\"-o\").arg(&out_dir);\n+                builder.run(&mut command);\n+                nb_generated += 1;\n+            }\n         }\n+        assert!(nb_generated > 0, \"no documentation was generated...\");\n+\n+        // We now run GUI tests.\n+        let mut command = Command::new(&nodejs);\n+        command\n+            .arg(builder.build.src.join(\"src/tools/rustdoc-gui/tester.js\"))\n+            .arg(\"--doc-folder\")\n+            .arg(out_dir)\n+            .arg(\"--tests-folder\")\n+            .arg(builder.build.src.join(\"src/test/rustdoc-gui\"));\n+        builder.run(&mut command);\n     }\n }\n "}, {"sha": "7f1a5820e22610c9c5cd6390a8dc857752e9b579", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-aux/Dockerfile", "status": "modified", "additions": 2, "deletions": 22, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2023cc3aa1ea98530f3124ed07713e6f95fd26ab/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-aux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/2023cc3aa1ea98530f3124ed07713e6f95fd26ab/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-aux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-aux%2FDockerfile?ref=2023cc3aa1ea98530f3124ed07713e6f95fd26ab", "patch": "@@ -17,27 +17,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   libgl1-mesa-dev \\\n   llvm-dev \\\n   libfreetype6-dev \\\n-  libexpat1-dev \\\n-  libexpat1-dev \\\n-  gnupg \\\n-  apt-utils \\\n-  wget \\\n-  fonts-ipafont-gothic \\\n-  fonts-wqy-zenhei \\\n-  fonts-thai-tlwg \\\n-  fonts-kacst \\\n-  fonts-freefont-ttf \\\n-  libxss1 \\\n-  libxtst6\n-\n-RUN curl -sL https://nodejs.org/dist/v14.4.0/node-v14.4.0-linux-x64.tar.xz | tar -xJ\n-ENV PATH=\"/node-v14.4.0-linux-x64/bin:${PATH}\"\n-\n-# Install required dependencies from browser-UI-test framework\n-# For now, we need to use `--unsafe-perm=true` to go around an issue when npm tries\n-# to create a new folder. For reference:\n-# https://github.com/puppeteer/puppeteer/issues/375\n-RUN npm install browser-ui-test -g --unsafe-perm=true\n+  libexpat1-dev\n \n COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh\n@@ -46,4 +26,4 @@ COPY scripts/cmake.sh /scripts/\n RUN /scripts/cmake.sh\n \n ENV RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu\n-ENV RUST_CHECK_TARGET check-aux-and-gui\n+ENV RUST_CHECK_TARGET check-aux"}, {"sha": "605d988dad712494a96172baede0ecb88e984ad0", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-tools/Dockerfile", "status": "modified", "additions": 55, "deletions": 3, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/2023cc3aa1ea98530f3124ed07713e6f95fd26ab/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/2023cc3aa1ea98530f3124ed07713e6f95fd26ab/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2FDockerfile?ref=2023cc3aa1ea98530f3124ed07713e6f95fd26ab", "patch": "@@ -12,8 +12,48 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   cmake \\\n   libssl-dev \\\n   sudo \\\n-  xz-utils \\\n-  pkg-config\n+  xz-utils\n+\n+# Install dependencies for chromium browser\n+RUN apt-get install -y \\\n+  gconf-service \\\n+  libasound2 \\\n+  libatk1.0-0 \\\n+  libatk-bridge2.0-0 \\\n+  libc6 \\\n+  libcairo2 \\\n+  libcups2 \\\n+  libdbus-1-3 \\\n+  libexpat1 \\\n+  libfontconfig1 \\\n+  libgcc1 \\\n+  libgconf-2-4 \\\n+  libgdk-pixbuf2.0-0 \\\n+  libglib2.0-0 \\\n+  libgtk-3-0 \\\n+  libnspr4 \\\n+  libpango-1.0-0 \\\n+  libpangocairo-1.0-0 \\\n+  libstdc++6 \\\n+  libx11-6 \\\n+  libx11-xcb1 \\\n+  libxcb1 \\\n+  libxcomposite1 \\\n+  libxcursor1 \\\n+  libxdamage1 \\\n+  libxext6 \\\n+  libxfixes3 \\\n+  libxi6 \\\n+  libxrandr2 \\\n+  libxrender1 \\\n+  libxss1 \\\n+  libxtst6 \\\n+  fonts-liberation \\\n+  libappindicator1 \\\n+  libnss3 \\\n+  lsb-release \\\n+  xdg-utils \\\n+  wget\n \n COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh\n@@ -23,7 +63,19 @@ RUN /scripts/cmake.sh\n \n COPY host-x86_64/x86_64-gnu-tools/checktools.sh /tmp/\n \n+RUN curl -sL https://nodejs.org/dist/v14.4.0/node-v14.4.0-linux-x64.tar.xz | tar -xJ\n+ENV PATH=\"/node-v14.4.0-linux-x64/bin:${PATH}\"\n+\n+# For now, we need to use `--unsafe-perm=true` to go around an issue when npm tries\n+# to create a new folder. For reference:\n+# https://github.com/puppeteer/puppeteer/issues/375\n+#\n+# We also specify the version in case we need to update it to go around cache limitations.\n+RUN npm install -g browser-ui-test@0.2.12 --unsafe-perm=true\n+\n ENV RUST_CONFIGURE_ARGS \\\n   --build=x86_64-unknown-linux-gnu \\\n   --save-toolstates=/tmp/toolstate/toolstates.json\n-ENV SCRIPT /tmp/checktools.sh ../x.py\n+\n+ENV SCRIPT /tmp/checktools.sh ../x.py && \\\n+  NODE_PATH=`npm root -g` python3 ../x.py test src/test/rustdoc-gui --stage 2"}, {"sha": "fa738fe70c8e2f7b414da8431883f110f7abcf02", "filename": "src/ci/scripts/should-skip-this.sh", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2023cc3aa1ea98530f3124ed07713e6f95fd26ab/src%2Fci%2Fscripts%2Fshould-skip-this.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2023cc3aa1ea98530f3124ed07713e6f95fd26ab/src%2Fci%2Fscripts%2Fshould-skip-this.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Fshould-skip-this.sh?ref=2023cc3aa1ea98530f3124ed07713e6f95fd26ab", "patch": "@@ -26,6 +26,12 @@ elif ! git diff --quiet \"$BASE_COMMIT\" -- src/tools/clippy src/tools/rustfmt; th\n     # There is not an easy blanket search for subtrees. For now, manually list\n     # the subtrees.\n     echo \"Executing the job since clippy or rustfmt subtree was updated\"\n+elif ! (git diff --quiet \"$BASE_COMMIT\" -- \\\n+         src/test/rustdoc-gui \\\n+         src/librustdoc \\\n+         src/tools/rustdoc-gui); then\n+    # There was a change in either rustdoc or in its GUI tests.\n+    echo \"Executing the job since rustdoc was updated\"\n else\n     echo \"Not executing this job since no submodules nor subtrees were updated\"\n     ciCommandSetEnv SKIP_JOB 1"}]}