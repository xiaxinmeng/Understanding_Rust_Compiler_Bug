{"sha": "816fafd99733c4f11bac05a17ad5416dee49db8c", "node_id": "C_kwDOAAsO6NoAKDgxNmZhZmQ5OTczM2M0ZjExYmFjMDVhMTdhZDU0MTZkZWU0OWRiOGM", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-10-01T10:19:01Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-10-01T10:19:01Z"}, "message": "Parenthesize expressions in if_to_bool_then assist where required", "tree": {"sha": "98da0f81e4ff93bd39a8216fbdbad967e0f85efe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98da0f81e4ff93bd39a8216fbdbad967e0f85efe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/816fafd99733c4f11bac05a17ad5416dee49db8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/816fafd99733c4f11bac05a17ad5416dee49db8c", "html_url": "https://github.com/rust-lang/rust/commit/816fafd99733c4f11bac05a17ad5416dee49db8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/816fafd99733c4f11bac05a17ad5416dee49db8c/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "529b7a4167aab91257da02277c00e5cba245babb", "url": "https://api.github.com/repos/rust-lang/rust/commits/529b7a4167aab91257da02277c00e5cba245babb", "html_url": "https://github.com/rust-lang/rust/commit/529b7a4167aab91257da02277c00e5cba245babb"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "b8c55eb852f4520eb7ff519ea707dc63bfc27cee", "filename": "crates/ide_assists/src/handlers/convert_bool_then.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/816fafd99733c4f11bac05a17ad5416dee49db8c/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_bool_then.rs", "raw_url": "https://github.com/rust-lang/rust/raw/816fafd99733c4f11bac05a17ad5416dee49db8c/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_bool_then.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_bool_then.rs?ref=816fafd99733c4f11bac05a17ad5416dee49db8c", "patch": "@@ -39,7 +39,7 @@ use crate::{\n // }\n // ```\n pub(crate) fn convert_if_to_bool_then(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n-    // todo, applies to match as well\n+    // FIXME applies to match as well\n     let expr = ctx.find_node_at_offset::<ast::IfExpr>()?;\n     if !expr.if_token()?.text_range().contains_inclusive(ctx.offset()) {\n         return None;\n@@ -101,7 +101,29 @@ pub(crate) fn convert_if_to_bool_then(acc: &mut Assists, ctx: &AssistContext) ->\n                 e => e,\n             };\n \n+            let parenthesize = matches!(\n+                cond,\n+                ast::Expr::BinExpr(_)\n+                    | ast::Expr::BlockExpr(_)\n+                    | ast::Expr::BoxExpr(_)\n+                    | ast::Expr::BreakExpr(_)\n+                    | ast::Expr::CastExpr(_)\n+                    | ast::Expr::ClosureExpr(_)\n+                    | ast::Expr::ContinueExpr(_)\n+                    | ast::Expr::ForExpr(_)\n+                    | ast::Expr::IfExpr(_)\n+                    | ast::Expr::LoopExpr(_)\n+                    | ast::Expr::MacroCall(_)\n+                    | ast::Expr::MatchExpr(_)\n+                    | ast::Expr::PrefixExpr(_)\n+                    | ast::Expr::RangeExpr(_)\n+                    | ast::Expr::RefExpr(_)\n+                    | ast::Expr::ReturnExpr(_)\n+                    | ast::Expr::WhileExpr(_)\n+                    | ast::Expr::YieldExpr(_)\n+            );\n             let cond = if invert_cond { invert_boolean_expression(cond) } else { cond };\n+            let cond = if parenthesize { make::expr_paren(cond) } else { cond };\n             let arg_list = make::arg_list(Some(make::expr_closure(None, closure_body)));\n             let mcall = make::expr_method_call(cond, make::name_ref(\"then\"), arg_list);\n             builder.replace(target, mcall.to_string());"}]}