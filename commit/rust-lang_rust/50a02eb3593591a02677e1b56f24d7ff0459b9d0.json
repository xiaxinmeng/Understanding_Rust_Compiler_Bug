{"sha": "50a02eb3593591a02677e1b56f24d7ff0459b9d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwYTAyZWIzNTkzNTkxYTAyNjc3ZTFiNTZmMjRkN2ZmMDQ1OWI5ZDA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-12T15:06:49Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-12T15:14:23Z"}, "message": "Rename ra_parser -> parser", "tree": {"sha": "a17351b1e3addea0a719f38990fea9289b6ef65e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a17351b1e3addea0a719f38990fea9289b6ef65e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50a02eb3593591a02677e1b56f24d7ff0459b9d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50a02eb3593591a02677e1b56f24d7ff0459b9d0", "html_url": "https://github.com/rust-lang/rust/commit/50a02eb3593591a02677e1b56f24d7ff0459b9d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50a02eb3593591a02677e1b56f24d7ff0459b9d0/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6dafc13f5f776980cd2560fb79d3d4790811c96d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6dafc13f5f776980cd2560fb79d3d4790811c96d", "html_url": "https://github.com/rust-lang/rust/commit/6dafc13f5f776980cd2560fb79d3d4790811c96d"}], "stats": {"total": 130, "additions": 65, "deletions": 65}, "files": [{"sha": "095127b99f23b8a06f99f9f13157ad6d94c99707", "filename": "Cargo.lock", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -834,6 +834,13 @@ dependencies = [\n  \"winapi 0.3.9\",\n ]\n \n+[[package]]\n+name = \"parser\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"drop_bomb\",\n+]\n+\n [[package]]\n name = \"paths\"\n version = \"0.1.0\"\n@@ -1018,10 +1025,10 @@ dependencies = [\n  \"arena\",\n  \"either\",\n  \"log\",\n+ \"parser\",\n  \"profile\",\n  \"ra_db\",\n  \"ra_mbe\",\n- \"ra_parser\",\n  \"ra_syntax\",\n  \"rustc-hash\",\n  \"test_utils\",\n@@ -1105,21 +1112,14 @@ name = \"ra_mbe\"\n version = \"0.1.0\"\n dependencies = [\n  \"log\",\n- \"ra_parser\",\n+ \"parser\",\n  \"ra_syntax\",\n  \"rustc-hash\",\n  \"smallvec\",\n  \"test_utils\",\n  \"tt\",\n ]\n \n-[[package]]\n-name = \"ra_parser\"\n-version = \"0.1.0\"\n-dependencies = [\n- \"drop_bomb\",\n-]\n-\n [[package]]\n name = \"ra_proc_macro\"\n version = \"0.1.0\"\n@@ -1190,7 +1190,7 @@ dependencies = [\n  \"expect\",\n  \"itertools\",\n  \"once_cell\",\n- \"ra_parser\",\n+ \"parser\",\n  \"rayon\",\n  \"rowan\",\n  \"rustc-ap-rustc_lexer\","}, {"sha": "358be92d1226471332b45eef9eafae0279efbdc7", "filename": "crates/parser/Cargo.toml", "status": "renamed", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2FCargo.toml?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -1,10 +1,9 @@\n [package]\n-edition = \"2018\"\n-name = \"ra_parser\"\n-version = \"0.1.0\"\n-authors = [\"rust-analyzer developers\"]\n-publish = false\n+name = \"parser\"\n+version = \"0.0.0\"\n license = \"MIT OR Apache-2.0\"\n+authors = [\"rust-analyzer developers\"]\n+edition = \"2018\"\n \n [lib]\n doctest = false", "previous_filename": "crates/ra_parser/Cargo.toml"}, {"sha": "a7d06a815cb383b4f89e0967cc868a3cd8e57ae0", "filename": "crates/parser/src/event.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fevent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fevent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fevent.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "previous_filename": "crates/ra_parser/src/event.rs"}, {"sha": "88468bc9716e0f6087ce0ae29b520de68c798642", "filename": "crates/parser/src/grammar.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "previous_filename": "crates/ra_parser/src/grammar.rs"}, {"sha": "f3158ade300bc208fabfde1627d7e64552858809", "filename": "crates/parser/src/grammar/attributes.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fattributes.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "previous_filename": "crates/ra_parser/src/grammar/attributes.rs"}, {"sha": "3291e3f1469d76cf759658fb643cc2d7a15cafca", "filename": "crates/parser/src/grammar/expressions.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "previous_filename": "crates/ra_parser/src/grammar/expressions.rs"}, {"sha": "0b01d3bc64640f4d3e6aeb69ce3262757a7676cd", "filename": "crates/parser/src/grammar/expressions/atom.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "previous_filename": "crates/ra_parser/src/grammar/expressions/atom.rs"}, {"sha": "d091b0fbb291ace3ffe44a9a038127d1ecfb89bd", "filename": "crates/parser/src/grammar/items.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "previous_filename": "crates/ra_parser/src/grammar/items.rs"}, {"sha": "addfb59d4b1a98377f243d4bbb7c300a053aa10a", "filename": "crates/parser/src/grammar/items/adt.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fadt.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "previous_filename": "crates/ra_parser/src/grammar/items/adt.rs"}, {"sha": "35ad766dcee8882f6bec5aa007182bb8a5590400", "filename": "crates/parser/src/grammar/items/consts.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fconsts.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "previous_filename": "crates/ra_parser/src/grammar/items/consts.rs"}, {"sha": "751ce65f2dc99dee7da126a0db2da3648b51f07e", "filename": "crates/parser/src/grammar/items/traits.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "previous_filename": "crates/ra_parser/src/grammar/items/traits.rs"}, {"sha": "8e836a77e1d4c27b11d39794dff9925b74b83a66", "filename": "crates/parser/src/grammar/items/use_item.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fuse_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fuse_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fuse_item.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "previous_filename": "crates/ra_parser/src/grammar/items/use_item.rs"}, {"sha": "f0da173cc17a9d8c1cf28ec5d526b6f90a765ce5", "filename": "crates/parser/src/grammar/params.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Fparams.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Fparams.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fparams.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "previous_filename": "crates/ra_parser/src/grammar/params.rs"}, {"sha": "b503af1dc9454c0a88b2f57b0c7c2938709f8fff", "filename": "crates/parser/src/grammar/paths.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fpaths.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "previous_filename": "crates/ra_parser/src/grammar/paths.rs"}, {"sha": "716bdc978402bc07346e8acc5925f91d18931158", "filename": "crates/parser/src/grammar/patterns.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "previous_filename": "crates/ra_parser/src/grammar/patterns.rs"}, {"sha": "aef7cd6fbb2d5f86fe2bc537bead3b0dcf68fd1f", "filename": "crates/parser/src/grammar/type_args.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Ftype_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Ftype_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Ftype_args.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "previous_filename": "crates/ra_parser/src/grammar/type_args.rs"}, {"sha": "90dabb4c0f109c703d25e2356c58e5d27442e9be", "filename": "crates/parser/src/grammar/type_params.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Ftype_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Ftype_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Ftype_params.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "previous_filename": "crates/ra_parser/src/grammar/type_params.rs"}, {"sha": "0aa173a52b2f35bbf49802b77d8f38a0847ad6f7", "filename": "crates/parser/src/grammar/types.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fgrammar%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Ftypes.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "previous_filename": "crates/ra_parser/src/grammar/types.rs"}, {"sha": "eeb8ad66bd16b3df4339141b111cbf12c094f47a", "filename": "crates/parser/src/lib.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Flib.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "previous_filename": "crates/ra_parser/src/lib.rs"}, {"sha": "d2487acc3b9c4b6d449db01cc1599e384c3c2060", "filename": "crates/parser/src/parser.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fparser.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "previous_filename": "crates/ra_parser/src/parser.rs"}, {"sha": "63204436c33e453d2b6aebc5cbbf2cdd4f3739ab", "filename": "crates/parser/src/syntax_kind.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fsyntax_kind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fsyntax_kind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fsyntax_kind.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "previous_filename": "crates/ra_parser/src/syntax_kind.rs"}, {"sha": "192ecd864e93ffda16ce7e8b0e324c5b0bf256e1", "filename": "crates/parser/src/syntax_kind/generated.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "previous_filename": "crates/ra_parser/src/syntax_kind/generated.rs"}, {"sha": "994017acfd4409b2912313a9fb5cda9e3eb45ae6", "filename": "crates/parser/src/token_set.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Ftoken_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fparser%2Fsrc%2Ftoken_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Ftoken_set.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "previous_filename": "crates/ra_parser/src/token_set.rs"}, {"sha": "052330fdefad6aee0dc82ee7bc5948fed3eed753", "filename": "crates/ra_hir_expand/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_hir_expand%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_hir_expand%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2FCargo.toml?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -16,7 +16,7 @@ rustc-hash = \"1.0.0\"\n arena = { path = \"../arena\" }\n ra_db = { path = \"../ra_db\" }\n ra_syntax = { path = \"../ra_syntax\" }\n-ra_parser = { path = \"../ra_parser\" }\n+parser = { path = \"../parser\" }\n profile = { path = \"../profile\" }\n tt = { path = \"../tt\" }\n mbe = { path = \"../ra_mbe\", package = \"ra_mbe\" }"}, {"sha": "95e6977f24a35a3bd2ed0c0c317880ce3d476302", "filename": "crates/ra_hir_expand/src/builtin_derive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_derive.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -2,7 +2,7 @@\n \n use log::debug;\n \n-use ra_parser::FragmentKind;\n+use parser::FragmentKind;\n use ra_syntax::{\n     ast::{self, AstNode, GenericParamsOwner, ModuleItemOwner, NameOwner},\n     match_ast,"}, {"sha": "24dc0b4e7fdca2d4008d7b14314b3fdd568ed423", "filename": "crates/ra_hir_expand/src/builtin_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -6,8 +6,8 @@ use crate::{\n \n use either::Either;\n use mbe::parse_to_token_tree;\n+use parser::FragmentKind;\n use ra_db::FileId;\n-use ra_parser::FragmentKind;\n use ra_syntax::ast::{self, AstToken, HasStringValue};\n \n macro_rules! register_builtin {"}, {"sha": "d83c391a90bce0ecb18dfd433e2bf378804071b1", "filename": "crates/ra_hir_expand/src/db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -3,8 +3,8 @@\n use std::sync::Arc;\n \n use mbe::{ExpandResult, MacroRules};\n+use parser::FragmentKind;\n use ra_db::{salsa, SourceDatabase};\n-use ra_parser::FragmentKind;\n use ra_syntax::{algo::diff, AstNode, GreenNode, Parse, SyntaxKind::*, SyntaxNode};\n \n use crate::{"}, {"sha": "dc83044ea4e3d34114642d6cb2329b56055003b5", "filename": "crates/ra_hir_expand/src/eager.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_hir_expand%2Fsrc%2Feager.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_hir_expand%2Fsrc%2Feager.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Feager.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -25,8 +25,8 @@ use crate::{\n     EagerCallLoc, EagerMacroId, InFile, MacroCallId, MacroCallKind, MacroDefId, MacroDefKind,\n };\n \n+use parser::FragmentKind;\n use ra_db::CrateId;\n-use ra_parser::FragmentKind;\n use ra_syntax::{algo::SyntaxRewriter, SyntaxNode};\n use std::sync::Arc;\n "}, {"sha": "38f0ffff81c0aa96434028b06f70131452eccf97", "filename": "crates/ra_hir_expand/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Flib.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -317,7 +317,7 @@ pub struct ExpansionInfo {\n }\n \n pub use mbe::Origin;\n-use ra_parser::FragmentKind;\n+use parser::FragmentKind;\n \n impl ExpansionInfo {\n     pub fn call_node(&self) -> Option<InFile<SyntaxNode>> {"}, {"sha": "e518f73e32cab53a06537650d72889f8609f9be6", "filename": "crates/ra_mbe/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_mbe%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_mbe%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2FCargo.toml?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -10,7 +10,7 @@ doctest = false\n \n [dependencies]\n ra_syntax = { path = \"../ra_syntax\" }\n-ra_parser = { path = \"../ra_parser\" }\n+parser = { path = \"../parser\" }\n tt = { path = \"../tt\" }\n rustc-hash = \"1.1.0\"\n smallvec = \"1.2.0\""}, {"sha": "c752804b29dd5db38e63449dcbb0a13fc6b59bf5", "filename": "crates/ra_mbe/src/mbe_expander/matcher.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_mbe%2Fsrc%2Fmbe_expander%2Fmatcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_mbe%2Fsrc%2Fmbe_expander%2Fmatcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fmbe_expander%2Fmatcher.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -9,7 +9,7 @@ use crate::{\n };\n \n use super::ExpandResult;\n-use ra_parser::{FragmentKind::*, TreeSink};\n+use parser::{FragmentKind::*, TreeSink};\n use ra_syntax::{SmolStr, SyntaxKind};\n use tt::buffer::{Cursor, TokenBuffer};\n \n@@ -285,7 +285,7 @@ impl<'a> TtIter<'a> {\n \n     pub(crate) fn expect_fragment(\n         &mut self,\n-        fragment_kind: ra_parser::FragmentKind,\n+        fragment_kind: parser::FragmentKind,\n     ) -> ExpandResult<Option<tt::TokenTree>> {\n         pub(crate) struct OffsetTokenSink<'a> {\n             pub(crate) cursor: Cursor<'a>,\n@@ -303,7 +303,7 @@ impl<'a> TtIter<'a> {\n             }\n             fn start_node(&mut self, _kind: SyntaxKind) {}\n             fn finish_node(&mut self) {}\n-            fn error(&mut self, _error: ra_parser::ParseError) {\n+            fn error(&mut self, _error: parser::ParseError) {\n                 self.error = true;\n             }\n         }\n@@ -312,7 +312,7 @@ impl<'a> TtIter<'a> {\n         let mut src = SubtreeTokenSource::new(&buffer);\n         let mut sink = OffsetTokenSink { cursor: buffer.begin(), error: false };\n \n-        ra_parser::parse_fragment(&mut src, &mut sink, fragment_kind);\n+        parser::parse_fragment(&mut src, &mut sink, fragment_kind);\n \n         let mut err = None;\n         if !sink.cursor.is_root() || sink.error {"}, {"sha": "1a1cb08cf77f387ca2f3203e9c49af9abc910688", "filename": "crates/ra_mbe/src/subtree_source.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_mbe%2Fsrc%2Fsubtree_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_mbe%2Fsrc%2Fsubtree_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fsubtree_source.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -1,6 +1,6 @@\n //! FIXME: write short doc here\n \n-use ra_parser::{Token, TokenSource};\n+use parser::{Token, TokenSource};\n use ra_syntax::{lex_single_syntax_kind, SmolStr, SyntaxKind, SyntaxKind::*, T};\n use std::cell::{Cell, Ref, RefCell};\n use tt::buffer::{Cursor, TokenBuffer};"}, {"sha": "7b9c88ae6439486e076cfe236835392e9b9588ca", "filename": "crates/ra_mbe/src/syntax_bridge.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -1,6 +1,6 @@\n //! FIXME: write short doc here\n \n-use ra_parser::{FragmentKind, ParseError, TreeSink};\n+use parser::{FragmentKind, ParseError, TreeSink};\n use ra_syntax::{\n     ast::{self, make::tokens::doc_comment},\n     tokenize, AstToken, Parse, SmolStr, SyntaxKind,\n@@ -81,7 +81,7 @@ pub fn token_tree_to_syntax_node(\n     let buffer = TokenBuffer::new(&tokens);\n     let mut token_source = SubtreeTokenSource::new(&buffer);\n     let mut tree_sink = TtTreeSink::new(buffer.begin());\n-    ra_parser::parse_fragment(&mut token_source, &mut tree_sink, fragment_kind);\n+    parser::parse_fragment(&mut token_source, &mut tree_sink, fragment_kind);\n     if tree_sink.roots.len() != 1 {\n         return Err(ExpandError::ConversionError);\n     }\n@@ -715,7 +715,7 @@ impl<'a> TreeSink for TtTreeSink<'a> {\n mod tests {\n     use super::*;\n     use crate::tests::parse_macro;\n-    use ra_parser::TokenSource;\n+    use parser::TokenSource;\n     use ra_syntax::{\n         algo::{insert_children, InsertPosition},\n         ast::AstNode,"}, {"sha": "be39b0e45eeca1035d5eda86c01538a159b7d95b", "filename": "crates/ra_mbe/src/tests.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_mbe%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_mbe%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Ftests.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -1,6 +1,6 @@\n use std::fmt::Write;\n \n-use ra_parser::FragmentKind;\n+use ::parser::FragmentKind;\n use ra_syntax::{ast, AstNode, NodeOrToken, SyntaxKind::IDENT, SyntaxNode, WalkEvent, T};\n use test_utils::assert_eq_text;\n \n@@ -9,9 +9,10 @@ use super::*;\n mod rule_parsing {\n     use ra_syntax::{ast, AstNode};\n \n-    use super::*;\n     use crate::ast_to_token_tree;\n \n+    use super::*;\n+\n     #[test]\n     fn test_valid_arms() {\n         fn check(macro_body: &str) {"}, {"sha": "eec4bd845ed2ae80211b4d0daddfb7a219af08ba", "filename": "crates/ra_syntax/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_syntax%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_syntax%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2FCargo.toml?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -21,7 +21,7 @@ once_cell = \"1.3.1\"\n stdx = { path = \"../stdx\" }\n \n text_edit = { path = \"../text_edit\" }\n-ra_parser = { path = \"../ra_parser\" }\n+parser = { path = \"../parser\" }\n \n # This crate transitively depends on `smol_str` via `rowan`.\n # ideally, `serde` should be enabled by `rust-analyzer`, but we enable it here"}, {"sha": "50c1c157d8722131cf3a137f3ceb4ef2edda58ee", "filename": "crates/ra_syntax/src/ast/node_ext.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_syntax%2Fsrc%2Fast%2Fnode_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_syntax%2Fsrc%2Fast%2Fnode_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fnode_ext.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -4,7 +4,7 @@\n use std::fmt;\n \n use itertools::Itertools;\n-use ra_parser::SyntaxKind;\n+use parser::SyntaxKind;\n \n use crate::{\n     ast::{self, support, AstNode, NameOwner, SyntaxNode},"}, {"sha": "7f8da66af072dc98dc8f73c2b1f2d54efa336fcb", "filename": "crates/ra_syntax/src/lib.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_syntax%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_syntax%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Flib.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -11,7 +11,7 @@\n //!\n //! The most interesting modules here are `syntax_node` (which defines concrete\n //! syntax tree) and `ast` (which defines abstract syntax tree on top of the\n-//! CST). The actual parser live in a separate `ra_parser` crate, though the\n+//! CST). The actual parser live in a separate `parser` crate, though the\n //! lexer lives in this crate.\n //!\n //! See `api_walkthrough` test in this file for a quick API tour!\n@@ -53,7 +53,7 @@ pub use crate::{\n         SyntaxNodeChildren, SyntaxToken, SyntaxTreeBuilder,\n     },\n };\n-pub use ra_parser::{SyntaxKind, T};\n+pub use parser::{SyntaxKind, T};\n pub use rowan::{SmolStr, SyntaxText, TextRange, TextSize, TokenAtOffset, WalkEvent};\n \n /// `Parse` is the result of the parsing: a syntax tree and a collection of\n@@ -169,35 +169,35 @@ impl SourceFile {\n impl ast::Path {\n     /// Returns `text`, parsed as a path, but only if it has no errors.\n     pub fn parse(text: &str) -> Result<Self, ()> {\n-        parsing::parse_text_fragment(text, ra_parser::FragmentKind::Path)\n+        parsing::parse_text_fragment(text, parser::FragmentKind::Path)\n     }\n }\n \n impl ast::Pat {\n     /// Returns `text`, parsed as a pattern, but only if it has no errors.\n     pub fn parse(text: &str) -> Result<Self, ()> {\n-        parsing::parse_text_fragment(text, ra_parser::FragmentKind::Pattern)\n+        parsing::parse_text_fragment(text, parser::FragmentKind::Pattern)\n     }\n }\n \n impl ast::Expr {\n     /// Returns `text`, parsed as an expression, but only if it has no errors.\n     pub fn parse(text: &str) -> Result<Self, ()> {\n-        parsing::parse_text_fragment(text, ra_parser::FragmentKind::Expr)\n+        parsing::parse_text_fragment(text, parser::FragmentKind::Expr)\n     }\n }\n \n impl ast::Item {\n     /// Returns `text`, parsed as an item, but only if it has no errors.\n     pub fn parse(text: &str) -> Result<Self, ()> {\n-        parsing::parse_text_fragment(text, ra_parser::FragmentKind::Item)\n+        parsing::parse_text_fragment(text, parser::FragmentKind::Item)\n     }\n }\n \n impl ast::Type {\n     /// Returns `text`, parsed as an type reference, but only if it has no errors.\n     pub fn parse(text: &str) -> Result<Self, ()> {\n-        parsing::parse_text_fragment(text, ra_parser::FragmentKind::Type)\n+        parsing::parse_text_fragment(text, parser::FragmentKind::Type)\n     }\n }\n "}, {"sha": "68a39eb2103d0a8679c3f19c9bf9444cf9fd6b51", "filename": "crates/ra_syntax/src/parsing.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_syntax%2Fsrc%2Fparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_syntax%2Fsrc%2Fparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -1,4 +1,4 @@\n-//! Lexing, bridging to ra_parser (which does the actual parsing) and\n+//! Lexing, bridging to parser (which does the actual parsing) and\n //! incremental reparsing.\n \n mod lexer;\n@@ -13,15 +13,15 @@ use text_tree_sink::TextTreeSink;\n pub use lexer::*;\n \n pub(crate) use self::reparsing::incremental_reparse;\n-use ra_parser::SyntaxKind;\n+use parser::SyntaxKind;\n \n pub(crate) fn parse_text(text: &str) -> (GreenNode, Vec<SyntaxError>) {\n     let (tokens, lexer_errors) = tokenize(&text);\n \n     let mut token_source = TextTokenSource::new(text, &tokens);\n     let mut tree_sink = TextTreeSink::new(text, &tokens);\n \n-    ra_parser::parse(&mut token_source, &mut tree_sink);\n+    parser::parse(&mut token_source, &mut tree_sink);\n \n     let (tree, mut parser_errors) = tree_sink.finish();\n     parser_errors.extend(lexer_errors);\n@@ -32,7 +32,7 @@ pub(crate) fn parse_text(text: &str) -> (GreenNode, Vec<SyntaxError>) {\n /// Returns `text` parsed as a `T` provided there are no parse errors.\n pub(crate) fn parse_text_fragment<T: AstNode>(\n     text: &str,\n-    fragment_kind: ra_parser::FragmentKind,\n+    fragment_kind: parser::FragmentKind,\n ) -> Result<T, ()> {\n     let (tokens, lexer_errors) = tokenize(&text);\n     if !lexer_errors.is_empty() {\n@@ -44,13 +44,13 @@ pub(crate) fn parse_text_fragment<T: AstNode>(\n \n     // TextTreeSink assumes that there's at least some root node to which it can attach errors and\n     // tokens. We arbitrarily give it a SourceFile.\n-    use ra_parser::TreeSink;\n+    use parser::TreeSink;\n     tree_sink.start_node(SyntaxKind::SOURCE_FILE);\n-    ra_parser::parse_fragment(&mut token_source, &mut tree_sink, fragment_kind);\n+    parser::parse_fragment(&mut token_source, &mut tree_sink, fragment_kind);\n     tree_sink.finish_node();\n \n     let (tree, parser_errors) = tree_sink.finish();\n-    use ra_parser::TokenSource;\n+    use parser::TokenSource;\n     if !parser_errors.is_empty() || token_source.current().kind != SyntaxKind::EOF {\n         return Err(());\n     }"}, {"sha": "4149f856a83d30afa145eeece1dd1b3622f65daf", "filename": "crates/ra_syntax/src/parsing/reparsing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -6,7 +6,7 @@\n //!   - otherwise, we search for the nearest `{}` block which contains the edit\n //!     and try to parse only this block.\n \n-use ra_parser::Reparser;\n+use parser::Reparser;\n use text_edit::Indel;\n \n use crate::{"}, {"sha": "df866dc2b75fbaef22a61e57b53b1434d475b28b", "filename": "crates/ra_syntax/src/parsing/text_token_source.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_token_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_token_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_token_source.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -1,10 +1,10 @@\n //! See `TextTokenSource` docs.\n \n-use ra_parser::TokenSource;\n+use parser::TokenSource;\n \n use crate::{parsing::lexer::Token, SyntaxKind::EOF, TextRange, TextSize};\n \n-/// Implementation of `ra_parser::TokenSource` that takes tokens from source code text.\n+/// Implementation of `parser::TokenSource` that takes tokens from source code text.\n pub(crate) struct TextTokenSource<'t> {\n     text: &'t str,\n     /// token and its start position (non-whitespace/comment tokens)\n@@ -20,15 +20,15 @@ pub(crate) struct TextTokenSource<'t> {\n     token_offset_pairs: Vec<(Token, TextSize)>,\n \n     /// Current token and position\n-    curr: (ra_parser::Token, usize),\n+    curr: (parser::Token, usize),\n }\n \n impl<'t> TokenSource for TextTokenSource<'t> {\n-    fn current(&self) -> ra_parser::Token {\n+    fn current(&self) -> parser::Token {\n         self.curr.0\n     }\n \n-    fn lookahead_nth(&self, n: usize) -> ra_parser::Token {\n+    fn lookahead_nth(&self, n: usize) -> parser::Token {\n         mk_token(self.curr.1 + n, &self.token_offset_pairs)\n     }\n \n@@ -49,7 +49,7 @@ impl<'t> TokenSource for TextTokenSource<'t> {\n     }\n }\n \n-fn mk_token(pos: usize, token_offset_pairs: &[(Token, TextSize)]) -> ra_parser::Token {\n+fn mk_token(pos: usize, token_offset_pairs: &[(Token, TextSize)]) -> parser::Token {\n     let (kind, is_jointed_to_next) = match token_offset_pairs.get(pos) {\n         Some((token, offset)) => (\n             token.kind,\n@@ -60,7 +60,7 @@ fn mk_token(pos: usize, token_offset_pairs: &[(Token, TextSize)]) -> ra_parser::\n         ),\n         None => (EOF, false),\n     };\n-    ra_parser::Token { kind, is_jointed_to_next }\n+    parser::Token { kind, is_jointed_to_next }\n }\n \n impl<'t> TextTokenSource<'t> {"}, {"sha": "c1b5f246d11a05c0215c4e1930e4309a08478de3", "filename": "crates/ra_syntax/src/parsing/text_tree_sink.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_tree_sink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_tree_sink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_tree_sink.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -2,7 +2,7 @@\n \n use std::mem;\n \n-use ra_parser::{ParseError, TreeSink};\n+use parser::{ParseError, TreeSink};\n \n use crate::{\n     parsing::Token,"}, {"sha": "b2abcbfbb361958db65df4f4464619412685ec83", "filename": "crates/ra_syntax/src/syntax_node.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_syntax%2Fsrc%2Fsyntax_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/crates%2Fra_syntax%2Fsrc%2Fsyntax_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fsyntax_node.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -71,7 +71,7 @@ impl SyntaxTreeBuilder {\n         self.inner.finish_node()\n     }\n \n-    pub fn error(&mut self, error: ra_parser::ParseError, text_pos: TextSize) {\n+    pub fn error(&mut self, error: parser::ParseError, text_pos: TextSize) {\n         self.errors.push(SyntaxError::new_at_offset(*error.0, text_pos))\n     }\n }"}, {"sha": "33829c5937101f55b458491bb7087161ccace617", "filename": "docs/dev/README.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/docs%2Fdev%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/docs%2Fdev%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2FREADME.md?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -92,11 +92,11 @@ This is primarily useful for performance optimizations, or for bug minimization.\n \n ## Parser Tests\n \n-Tests for the parser (`ra_parser`) live in the `ra_syntax` crate (see `test_data` directory).\n+Tests for the parser (`parser`) live in the `ra_syntax` crate (see `test_data` directory).\n There are two kinds of tests:\n \n * Manually written test cases in `parser/ok` and `parser/err`\n-* \"Inline\" tests in `parser/inline` (these are generated) from comments in `ra_parser` crate.\n+* \"Inline\" tests in `parser/inline` (these are generated) from comments in `parser` crate.\n \n The purpose of inline tests is not to achieve full coverage by test cases, but to explain to the reader of the code what each particular `if` and `match` is responsible for.\n If you are tempted to add a large inline test, it might be a good idea to leave only the simplest example in place, and move the test to a manual `parser/ok` test."}, {"sha": "21373729c71ee298219b32420d0b15371c9e62a1", "filename": "docs/dev/architecture.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/docs%2Fdev%2Farchitecture.md", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/docs%2Fdev%2Farchitecture.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Farchitecture.md?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -64,7 +64,7 @@ The source for 1 and 2 is in [`ast_src.rs`](https://github.com/rust-analyzer/rus\n \n ## Code Walk-Through\n \n-### `crates/ra_syntax`, `crates/ra_parser`\n+### `crates/ra_syntax`, `crates/parser`\n \n Rust syntax tree structure and parser. See\n [RFC](https://github.com/rust-lang/rfcs/pull/2256) and [./syntax.md](./syntax.md) for some design notes."}, {"sha": "c08062ef4dcf146f7759e2f2c7c94a2fffd6ad29", "filename": "docs/dev/syntax.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/docs%2Fdev%2Fsyntax.md", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/docs%2Fdev%2Fsyntax.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Fsyntax.md?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -11,7 +11,7 @@ The things described are implemented in two places\n * [rowan](https://github.com/rust-analyzer/rowan/tree/v0.9.0) -- a generic library for rowan syntax trees.\n * [ra_syntax](https://github.com/rust-analyzer/rust-analyzer/tree/cf5bdf464cad7ceb9a67e07985a3f4d3799ec0b6/crates/ra_syntax) crate inside rust-analyzer which wraps `rowan` into rust-analyzer specific API.\n   Nothing in rust-analyzer except this crate knows about `rowan`.\n-* [ra_parser](https://github.com/rust-analyzer/rust-analyzer/tree/cf5bdf464cad7ceb9a67e07985a3f4d3799ec0b6/crates/ra_parser) crate parses input tokens into an `ra_syntax` tree\n+* [parser](https://github.com/rust-analyzer/rust-analyzer/tree/cf5bdf464cad7ceb9a67e07985a3f4d3799ec0b6/crates/parser) crate parses input tokens into an `ra_syntax` tree\n \n ## Design Goals\n "}, {"sha": "08e7a10b755d4d46929736e8a74886fa2c40bc9d", "filename": "xtask/src/codegen.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/xtask%2Fsrc%2Fcodegen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/xtask%2Fsrc%2Fcodegen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -24,11 +24,11 @@ pub use self::{\n     gen_syntax::generate_syntax,\n };\n \n-const GRAMMAR_DIR: &str = \"crates/ra_parser/src/grammar\";\n+const GRAMMAR_DIR: &str = \"crates/parser/src/grammar\";\n const OK_INLINE_TESTS_DIR: &str = \"crates/ra_syntax/test_data/parser/inline/ok\";\n const ERR_INLINE_TESTS_DIR: &str = \"crates/ra_syntax/test_data/parser/inline/err\";\n \n-const SYNTAX_KINDS: &str = \"crates/ra_parser/src/syntax_kind/generated.rs\";\n+const SYNTAX_KINDS: &str = \"crates/parser/src/syntax_kind/generated.rs\";\n const AST_NODES: &str = \"crates/ra_syntax/src/ast/generated/nodes.rs\";\n const AST_TOKENS: &str = \"crates/ra_syntax/src/ast/generated/tokens.rs\";\n "}, {"sha": "f1a7e8288e72ece11369a90bbc5c772cfcccbd5a", "filename": "xtask/tests/tidy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50a02eb3593591a02677e1b56f24d7ff0459b9d0/xtask%2Ftests%2Ftidy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a02eb3593591a02677e1b56f24d7ff0459b9d0/xtask%2Ftests%2Ftidy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Ftests%2Ftidy.rs?ref=50a02eb3593591a02677e1b56f24d7ff0459b9d0", "patch": "@@ -196,7 +196,7 @@ impl TidyDocs {\n             \"ra_hir_expand\",\n             \"ra_ide\",\n             \"ra_mbe\",\n-            \"ra_parser\",\n+            \"parser\",\n             \"profile\",\n             \"ra_project_model\",\n             \"ra_syntax\","}]}