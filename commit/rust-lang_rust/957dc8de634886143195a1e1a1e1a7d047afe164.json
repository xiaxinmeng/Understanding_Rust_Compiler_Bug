{"sha": "957dc8de634886143195a1e1a1e1a7d047afe164", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1N2RjOGRlNjM0ODg2MTQzMTk1YTFlMWExZTFhN2QwNDdhZmUxNjQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-21T05:24:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-21T05:24:45Z"}, "message": "Auto merge of #46531 - cramertj:no-mo-modrs, r=nikomatsakis\n\nImplement non-mod.rs mod statements\n\nFixes https://github.com/rust-lang/rust/issues/45385, cc https://github.com/rust-lang/rust/issues/44660\n\nThis will fail tidy right now because it doesn't recognize my UI tests as feature-gate tests. However, I'm not sure if compile-fail will work out either because compile-fail usually requires there to be error patterns in the top-level file, which isn't possible with this feature. What's the recommended way to handle this?", "tree": {"sha": "88b6c1ddee02626930abe44e6b331562a94cfab7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88b6c1ddee02626930abe44e6b331562a94cfab7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/957dc8de634886143195a1e1a1e1a7d047afe164", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/957dc8de634886143195a1e1a1e1a7d047afe164", "html_url": "https://github.com/rust-lang/rust/commit/957dc8de634886143195a1e1a1e1a7d047afe164", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/957dc8de634886143195a1e1a1e1a7d047afe164/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a12706ca7127bbb1ba4930c773595c81e21f87ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/a12706ca7127bbb1ba4930c773595c81e21f87ba", "html_url": "https://github.com/rust-lang/rust/commit/a12706ca7127bbb1ba4930c773595c81e21f87ba"}, {"sha": "1d5977b899e27235f4acb5cfc15a1082e897e8f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d5977b899e27235f4acb5cfc15a1082e897e8f1", "html_url": "https://github.com/rust-lang/rust/commit/1d5977b899e27235f4acb5cfc15a1082e897e8f1"}], "stats": {"total": 672, "additions": 609, "deletions": 63}, "files": [{"sha": "d53335f5be7fb92c61ad7b778138c1d6831a2f56", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -687,7 +687,7 @@ impl<'a> ExtCtxt<'a> {\n                 mark: Mark::root(),\n                 depth: 0,\n                 module: Rc::new(ModuleData { mod_path: Vec::new(), directory: PathBuf::new() }),\n-                directory_ownership: DirectoryOwnership::Owned,\n+                directory_ownership: DirectoryOwnership::Owned { relative: None },\n             },\n             expansions: HashMap::new(),\n         }"}, {"sha": "07ea6a090868893b9ca3af4677329ce702c002e9", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -976,7 +976,8 @@ impl<'a, 'b> Folder for InvocationCollector<'a, 'b> {\n \n                 if inline_module {\n                     if let Some(path) = attr::first_attr_value_str_by_name(&item.attrs, \"path\") {\n-                        self.cx.current_expansion.directory_ownership = DirectoryOwnership::Owned;\n+                        self.cx.current_expansion.directory_ownership =\n+                            DirectoryOwnership::Owned { relative: None };\n                         module.directory.push(&*path.as_str());\n                     } else {\n                         module.directory.push(&*item.ident.name.as_str());\n@@ -988,8 +989,11 @@ impl<'a, 'b> Folder for InvocationCollector<'a, 'b> {\n                         other => PathBuf::from(other.to_string()),\n                     };\n                     let directory_ownership = match path.file_name().unwrap().to_str() {\n-                        Some(\"mod.rs\") => DirectoryOwnership::Owned,\n-                        _ => DirectoryOwnership::UnownedViaMod(false),\n+                        Some(\"mod.rs\") => DirectoryOwnership::Owned { relative: None },\n+                        Some(_) => DirectoryOwnership::Owned {\n+                            relative: Some(item.ident),\n+                        },\n+                        None => DirectoryOwnership::UnownedViaMod(false),\n                     };\n                     path.pop();\n                     module.directory = path;"}, {"sha": "4da485fc9a42ccf0b9981cab7631c0516b1d63bf", "filename": "src/libsyntax/ext/source_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Flibsyntax%2Fext%2Fsource_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Flibsyntax%2Fext%2Fsource_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fsource_util.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -100,7 +100,7 @@ pub fn expand_include<'cx>(cx: &'cx mut ExtCtxt, sp: Span, tts: &[tokenstream::T\n     };\n     // The file will be added to the code map by the parser\n     let path = res_rel_file(cx, sp, file);\n-    let directory_ownership = DirectoryOwnership::Owned;\n+    let directory_ownership = DirectoryOwnership::Owned { relative: None };\n     let p = parse::new_sub_parser_from_file(cx.parse_sess(), &path, directory_ownership, None, sp);\n \n     struct ExpandResult<'a> {"}, {"sha": "1f398ff155cc98c993faf0f8bdc01b8ef6f636a7", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -35,7 +35,7 @@ use visit::{self, FnKind, Visitor};\n use parse::ParseSess;\n use symbol::{keywords, Symbol};\n \n-use std::env;\n+use std::{env, path};\n \n macro_rules! set {\n     (proc_macro) => {{\n@@ -438,6 +438,9 @@ declare_features! (\n \n     // Resolve absolute paths as paths from other crates\n     (active, extern_absolute_paths, \"1.24.0\", Some(44660)),\n+\n+    // `foo.rs` as an alternative to `foo/mod.rs`\n+    (active, non_modrs_mods, \"1.24.0\", Some(44660)),\n );\n \n declare_features! (\n@@ -1311,6 +1314,31 @@ fn contains_novel_literal(item: &ast::MetaItem) -> bool {\n     }\n }\n \n+impl<'a> PostExpansionVisitor<'a> {\n+    fn whole_crate_feature_gates(&mut self) {\n+        for &(ident, span) in &*self.context.parse_sess.non_modrs_mods.borrow() {\n+            if !span.allows_unstable() {\n+                let cx = &self.context;\n+                let level = GateStrength::Hard;\n+                let has_feature = cx.features.non_modrs_mods;\n+                let name = \"non_modrs_mods\";\n+                debug!(\"gate_feature(feature = {:?}, span = {:?}); has? {}\",\n+                        name, span, has_feature);\n+\n+                if !has_feature && !span.allows_unstable() {\n+                    leveled_feature_err(\n+                        cx.parse_sess, name, span, GateIssue::Language,\n+                        \"mod statements in non-mod.rs files are unstable\", level\n+                    )\n+                    .help(&format!(\"on stable builds, rename this file to {}{}mod.rs\",\n+                                   ident, path::MAIN_SEPARATOR))\n+                    .emit();\n+                }\n+            }\n+        }\n+    }\n+}\n+\n impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n     fn visit_attribute(&mut self, attr: &ast::Attribute) {\n         if !attr.span.allows_unstable() {\n@@ -1863,7 +1891,9 @@ pub fn check_crate(krate: &ast::Crate,\n         parse_sess: sess,\n         plugin_attributes,\n     };\n-    visit::walk_crate(&mut PostExpansionVisitor { context: &ctx }, krate);\n+    let visitor = &mut PostExpansionVisitor { context: &ctx };\n+    visitor.whole_crate_feature_gates();\n+    visit::walk_crate(visitor, krate);\n }\n \n #[derive(Clone, Copy, PartialEq, Eq, Hash)]"}, {"sha": "9828995362a35fcadeb4845f065cd770ab2d0f6c", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -1754,6 +1754,7 @@ mod tests {\n             included_mod_stack: RefCell::new(Vec::new()),\n             code_map: cm,\n             missing_fragment_specifiers: RefCell::new(HashSet::new()),\n+            non_modrs_mods: RefCell::new(vec![]),\n         }\n     }\n "}, {"sha": "89a54989f9693af1165c1006a2afd0a7119b3861", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -47,6 +47,9 @@ pub struct ParseSess {\n     pub unstable_features: UnstableFeatures,\n     pub config: CrateConfig,\n     pub missing_fragment_specifiers: RefCell<HashSet<Span>>,\n+    // Spans where a `mod foo;` statement was included in a non-mod.rs file.\n+    // These are used to issue errors if the non_modrs_mods feature is not enabled.\n+    pub non_modrs_mods: RefCell<Vec<(ast::Ident, Span)>>,\n     /// Used to determine and report recursive mod inclusions\n     included_mod_stack: RefCell<Vec<PathBuf>>,\n     code_map: Rc<CodeMap>,\n@@ -70,6 +73,7 @@ impl ParseSess {\n             missing_fragment_specifiers: RefCell::new(HashSet::new()),\n             included_mod_stack: RefCell::new(vec![]),\n             code_map,\n+            non_modrs_mods: RefCell::new(vec![]),\n         }\n     }\n \n@@ -86,7 +90,10 @@ pub struct Directory {\n \n #[derive(Copy, Clone)]\n pub enum DirectoryOwnership {\n-    Owned,\n+    Owned {\n+        // None if `mod.rs`, `Some(\"foo\")` if we're in `foo.rs`\n+        relative: Option<ast::Ident>,\n+    },\n     UnownedViaBlock,\n     UnownedViaMod(bool /* legacy warnings? */),\n }"}, {"sha": "2aac7ef39f2da989b1ed74bec94fede69c64678c", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 90, "deletions": 42, "changes": 132, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -514,7 +514,10 @@ impl<'a> Parser<'a> {\n             restrictions: Restrictions::empty(),\n             obsolete_set: HashSet::new(),\n             recurse_into_file_modules,\n-            directory: Directory { path: PathBuf::new(), ownership: DirectoryOwnership::Owned },\n+            directory: Directory {\n+                path: PathBuf::new(),\n+                ownership: DirectoryOwnership::Owned { relative: None }\n+            },\n             root_module_name: None,\n             expected_tokens: Vec::new(),\n             token_cursor: TokenCursor {\n@@ -5731,7 +5734,7 @@ impl<'a> Parser<'a> {\n     fn push_directory(&mut self, id: Ident, attrs: &[Attribute]) {\n         if let Some(path) = attr::first_attr_value_str_by_name(attrs, \"path\") {\n             self.directory.path.push(&path.as_str());\n-            self.directory.ownership = DirectoryOwnership::Owned;\n+            self.directory.ownership = DirectoryOwnership::Owned { relative: None };\n         } else {\n             self.directory.path.push(&id.name.as_str());\n         }\n@@ -5742,10 +5745,28 @@ impl<'a> Parser<'a> {\n     }\n \n     /// Returns either a path to a module, or .\n-    pub fn default_submod_path(id: ast::Ident, dir_path: &Path, codemap: &CodeMap) -> ModulePath {\n+    pub fn default_submod_path(\n+        id: ast::Ident,\n+        relative: Option<ast::Ident>,\n+        dir_path: &Path,\n+        codemap: &CodeMap) -> ModulePath\n+    {\n+        // If we're in a foo.rs file instead of a mod.rs file,\n+        // we need to look for submodules in\n+        // `./foo/<id>.rs` and `./foo/<id>/mod.rs` rather than\n+        // `./<id>.rs` and `./<id>/mod.rs`.\n+        let relative_prefix_string;\n+        let relative_prefix = if let Some(ident) = relative {\n+            relative_prefix_string = format!(\"{}{}\", ident.name.as_str(), path::MAIN_SEPARATOR);\n+            &relative_prefix_string\n+        } else {\n+            \"\"\n+        };\n+\n         let mod_name = id.to_string();\n-        let default_path_str = format!(\"{}.rs\", mod_name);\n-        let secondary_path_str = format!(\"{}{}mod.rs\", mod_name, path::MAIN_SEPARATOR);\n+        let default_path_str = format!(\"{}{}.rs\", relative_prefix, mod_name);\n+        let secondary_path_str = format!(\"{}{}{}mod.rs\",\n+                                         relative_prefix, mod_name, path::MAIN_SEPARATOR);\n         let default_path = dir_path.join(&default_path_str);\n         let secondary_path = dir_path.join(&secondary_path_str);\n         let default_exists = codemap.file_exists(&default_path);\n@@ -5754,12 +5775,16 @@ impl<'a> Parser<'a> {\n         let result = match (default_exists, secondary_exists) {\n             (true, false) => Ok(ModulePathSuccess {\n                 path: default_path,\n-                directory_ownership: DirectoryOwnership::UnownedViaMod(false),\n+                directory_ownership: DirectoryOwnership::Owned {\n+                    relative: Some(id),\n+                },\n                 warn: false,\n             }),\n             (false, true) => Ok(ModulePathSuccess {\n                 path: secondary_path,\n-                directory_ownership: DirectoryOwnership::Owned,\n+                directory_ownership: DirectoryOwnership::Owned {\n+                    relative: None,\n+                },\n                 warn: false,\n             }),\n             (false, false) => Err(Error::FileNotFoundForModule {\n@@ -5790,57 +5815,80 @@ impl<'a> Parser<'a> {\n         if let Some(path) = Parser::submod_path_from_attr(outer_attrs, &self.directory.path) {\n             return Ok(ModulePathSuccess {\n                 directory_ownership: match path.file_name().and_then(|s| s.to_str()) {\n-                    Some(\"mod.rs\") => DirectoryOwnership::Owned,\n+                    Some(\"mod.rs\") => DirectoryOwnership::Owned { relative: None },\n+                    Some(_) => {\n+                        DirectoryOwnership::Owned { relative: Some(id) }\n+                    }\n                     _ => DirectoryOwnership::UnownedViaMod(true),\n                 },\n                 path,\n                 warn: false,\n             });\n         }\n \n-        let paths = Parser::default_submod_path(id, &self.directory.path, self.sess.codemap());\n+        let relative = match self.directory.ownership {\n+            DirectoryOwnership::Owned { relative } => {\n+                // Push the usage onto the list of non-mod.rs mod uses.\n+                // This is used later for feature-gate error reporting.\n+                if let Some(cur_file_ident) = relative {\n+                    self.sess\n+                        .non_modrs_mods.borrow_mut()\n+                        .push((cur_file_ident, id_sp));\n+                }\n+                relative\n+            },\n+            DirectoryOwnership::UnownedViaBlock |\n+            DirectoryOwnership::UnownedViaMod(_) => None,\n+        };\n+        let paths = Parser::default_submod_path(\n+                        id, relative, &self.directory.path, self.sess.codemap());\n \n-        if let DirectoryOwnership::UnownedViaBlock = self.directory.ownership {\n-            let msg =\n-                \"Cannot declare a non-inline module inside a block unless it has a path attribute\";\n-            let mut err = self.diagnostic().struct_span_err(id_sp, msg);\n-            if paths.path_exists {\n-                let msg = format!(\"Maybe `use` the module `{}` instead of redeclaring it\",\n-                                  paths.name);\n-                err.span_note(id_sp, &msg);\n-            }\n-            Err(err)\n-        } else if let DirectoryOwnership::UnownedViaMod(warn) = self.directory.ownership {\n-            if warn {\n-                if let Ok(result) = paths.result {\n-                    return Ok(ModulePathSuccess { warn: true, ..result });\n+        match self.directory.ownership {\n+            DirectoryOwnership::Owned { .. } => {\n+                paths.result.map_err(|err| self.span_fatal_err(id_sp, err))\n+            },\n+            DirectoryOwnership::UnownedViaBlock => {\n+                let msg =\n+                    \"Cannot declare a non-inline module inside a block \\\n+                    unless it has a path attribute\";\n+                let mut err = self.diagnostic().struct_span_err(id_sp, msg);\n+                if paths.path_exists {\n+                    let msg = format!(\"Maybe `use` the module `{}` instead of redeclaring it\",\n+                                      paths.name);\n+                    err.span_note(id_sp, &msg);\n                 }\n+                Err(err)\n             }\n-            let mut err = self.diagnostic().struct_span_err(id_sp,\n-                \"cannot declare a new module at this location\");\n-            if id_sp != syntax_pos::DUMMY_SP {\n-                let src_path = self.sess.codemap().span_to_filename(id_sp);\n-                if let FileName::Real(src_path) = src_path {\n-                    if let Some(stem) = src_path.file_stem() {\n-                        let mut dest_path = src_path.clone();\n-                        dest_path.set_file_name(stem);\n-                        dest_path.push(\"mod.rs\");\n-                        err.span_note(id_sp,\n+            DirectoryOwnership::UnownedViaMod(warn) => {\n+                if warn {\n+                    if let Ok(result) = paths.result {\n+                        return Ok(ModulePathSuccess { warn: true, ..result });\n+                    }\n+                }\n+                let mut err = self.diagnostic().struct_span_err(id_sp,\n+                    \"cannot declare a new module at this location\");\n+                if id_sp != syntax_pos::DUMMY_SP {\n+                    let src_path = self.sess.codemap().span_to_filename(id_sp);\n+                    if let FileName::Real(src_path) = src_path {\n+                        if let Some(stem) = src_path.file_stem() {\n+                            let mut dest_path = src_path.clone();\n+                            dest_path.set_file_name(stem);\n+                            dest_path.push(\"mod.rs\");\n+                            err.span_note(id_sp,\n                                     &format!(\"maybe move this module `{}` to its own \\\n                                                 directory via `{}`\", src_path.display(),\n                                             dest_path.display()));\n+                        }\n                     }\n                 }\n+                if paths.path_exists {\n+                    err.span_note(id_sp,\n+                                  &format!(\"... or maybe `use` the module `{}` instead \\\n+                                            of possibly redeclaring it\",\n+                                           paths.name));\n+                }\n+                Err(err)\n             }\n-            if paths.path_exists {\n-                err.span_note(id_sp,\n-                              &format!(\"... or maybe `use` the module `{}` instead \\\n-                                        of possibly redeclaring it\",\n-                                       paths.name));\n-            }\n-            Err(err)\n-        } else {\n-            paths.result.map_err(|err| self.span_fatal_err(id_sp, err))\n         }\n     }\n "}, {"sha": "2da07a2cc7210781ade4e21640bc86b6e1d867b9", "filename": "src/test/compile-fail/directory_ownership/backcompat-warnings.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Fbackcompat-warnings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Fbackcompat-warnings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Fbackcompat-warnings.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern: cannot declare a new module at this location\n-// error-pattern: will become a hard error\n+// error-pattern: mod statements in non-mod.rs files are unstable\n \n #[path=\"mod_file_not_owning_aux3.rs\"]\n mod foo;"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/test/compile-fail/directory_ownership/foo/compiletest-ignore-dir", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Ffoo%2Fcompiletest-ignore-dir", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Ffoo%2Fcompiletest-ignore-dir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Ffoo%2Fcompiletest-ignore-dir?ref=957dc8de634886143195a1e1a1e1a7d047afe164"}, {"sha": "fc4bca865c932e390fd8898f1ad3d3d1b93391d4", "filename": "src/test/compile-fail/directory_ownership/foo/mod_file_not_owning/aux2.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Ffoo%2Fmod_file_not_owning%2Faux2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Ffoo%2Fmod_file_not_owning%2Faux2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Ffoo%2Fmod_file_not_owning%2Faux2.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,9 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms."}, {"sha": "fc4bca865c932e390fd8898f1ad3d3d1b93391d4", "filename": "src/test/compile-fail/directory_ownership/foo/mod_file_not_owning_aux2.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Ffoo%2Fmod_file_not_owning_aux2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Ffoo%2Fmod_file_not_owning_aux2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Ffoo%2Fmod_file_not_owning_aux2.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,9 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms."}, {"sha": "ff93fddf9b366e9c75103c793c5539e57c582d82", "filename": "src/test/compile-fail/directory_ownership/mod_file_not_owning.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Fmod_file_not_owning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Fmod_file_not_owning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Fmod_file_not_owning.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern: cannot declare a new module at this location\n+// error-pattern: mod statements in non-mod.rs files are unstable\n \n mod mod_file_not_owning_aux1;\n "}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/test/compile-fail/directory_ownership/mod_file_not_owning_aux1/compiletest-ignore-dir", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Fmod_file_not_owning_aux1%2Fcompiletest-ignore-dir", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Fmod_file_not_owning_aux1%2Fcompiletest-ignore-dir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Fmod_file_not_owning_aux1%2Fcompiletest-ignore-dir?ref=957dc8de634886143195a1e1a1e1a7d047afe164"}, {"sha": "fc4bca865c932e390fd8898f1ad3d3d1b93391d4", "filename": "src/test/compile-fail/directory_ownership/mod_file_not_owning_aux1/mod_file_not_owning_aux2.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Fmod_file_not_owning_aux1%2Fmod_file_not_owning_aux2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Fmod_file_not_owning_aux1%2Fmod_file_not_owning_aux2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Fmod_file_not_owning_aux1%2Fmod_file_not_owning_aux2.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,9 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms."}, {"sha": "0cffb7cc9e51732c2f42766eaedf64be616fa91d", "filename": "src/test/compile-fail/directory_ownership/unowned_mod_with_path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Funowned_mod_with_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Funowned_mod_with_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdirectory_ownership%2Funowned_mod_with_path.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern: cannot declare a new module at this location\n+// error-pattern: mod statements in non-mod.rs files are unstable\n \n // This is not a directory owner since the file name is not \"mod.rs\".\n #[path = \"mod_file_not_owning_aux1.rs\"]"}, {"sha": "7d37c6d9399543c1b9a28a72897c9630069c5d83", "filename": "src/test/run-pass/non_modrs_mods/foors_mod.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Ffoors_mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Ffoors_mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Ffoors_mod.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+//\n+// ignore-test: not a test, used by non_modrs_mods.rs\n+\n+pub mod inner_modrs_mod;\n+pub mod inner_foors_mod;"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/test/run-pass/non_modrs_mods/foors_mod/compiletest-ignore-dir", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Ffoors_mod%2Fcompiletest-ignore-dir", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Ffoors_mod%2Fcompiletest-ignore-dir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Ffoors_mod%2Fcompiletest-ignore-dir?ref=957dc8de634886143195a1e1a1e1a7d047afe164"}, {"sha": "77cab972352bd77d0554c07da2fea4dda04fe76a", "filename": "src/test/run-pass/non_modrs_mods/foors_mod/inner_foors_mod.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Ffoors_mod%2Finner_foors_mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Ffoors_mod%2Finner_foors_mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Ffoors_mod%2Finner_foors_mod.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod innest;"}, {"sha": "b61667cfd882ce02e3a44b5141adea3352a211f1", "filename": "src/test/run-pass/non_modrs_mods/foors_mod/inner_foors_mod/innest.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Ffoors_mod%2Finner_foors_mod%2Finnest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Ffoors_mod%2Finner_foors_mod%2Finnest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Ffoors_mod%2Finner_foors_mod%2Finnest.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn foo() {}"}, {"sha": "b61667cfd882ce02e3a44b5141adea3352a211f1", "filename": "src/test/run-pass/non_modrs_mods/foors_mod/inner_modrs_mod/innest.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Ffoors_mod%2Finner_modrs_mod%2Finnest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Ffoors_mod%2Finner_modrs_mod%2Finnest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Ffoors_mod%2Finner_modrs_mod%2Finnest.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn foo() {}"}, {"sha": "77cab972352bd77d0554c07da2fea4dda04fe76a", "filename": "src/test/run-pass/non_modrs_mods/foors_mod/inner_modrs_mod/mod.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Ffoors_mod%2Finner_modrs_mod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Ffoors_mod%2Finner_modrs_mod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Ffoors_mod%2Finner_modrs_mod%2Fmod.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod innest;"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/test/run-pass/non_modrs_mods/modrs_mod/compiletest-ignore-dir", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fmodrs_mod%2Fcompiletest-ignore-dir", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fmodrs_mod%2Fcompiletest-ignore-dir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fmodrs_mod%2Fcompiletest-ignore-dir?ref=957dc8de634886143195a1e1a1e1a7d047afe164"}, {"sha": "77cab972352bd77d0554c07da2fea4dda04fe76a", "filename": "src/test/run-pass/non_modrs_mods/modrs_mod/inner_foors_mod.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fmodrs_mod%2Finner_foors_mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fmodrs_mod%2Finner_foors_mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fmodrs_mod%2Finner_foors_mod.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod innest;"}, {"sha": "b61667cfd882ce02e3a44b5141adea3352a211f1", "filename": "src/test/run-pass/non_modrs_mods/modrs_mod/inner_foors_mod/innest.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fmodrs_mod%2Finner_foors_mod%2Finnest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fmodrs_mod%2Finner_foors_mod%2Finnest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fmodrs_mod%2Finner_foors_mod%2Finnest.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn foo() {}"}, {"sha": "b61667cfd882ce02e3a44b5141adea3352a211f1", "filename": "src/test/run-pass/non_modrs_mods/modrs_mod/inner_modrs_mod/innest.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fmodrs_mod%2Finner_modrs_mod%2Finnest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fmodrs_mod%2Finner_modrs_mod%2Finnest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fmodrs_mod%2Finner_modrs_mod%2Finnest.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn foo() {}"}, {"sha": "77cab972352bd77d0554c07da2fea4dda04fe76a", "filename": "src/test/run-pass/non_modrs_mods/modrs_mod/inner_modrs_mod/mod.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fmodrs_mod%2Finner_modrs_mod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fmodrs_mod%2Finner_modrs_mod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fmodrs_mod%2Finner_modrs_mod%2Fmod.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod innest;"}, {"sha": "9e3f10f12ed63916e14646e5909b90b8b0ad217e", "filename": "src/test/run-pass/non_modrs_mods/modrs_mod/mod.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fmodrs_mod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fmodrs_mod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fmodrs_mod%2Fmod.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,12 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod inner_modrs_mod;\n+pub mod inner_foors_mod;"}, {"sha": "eab8112b85543d0c404731ecb6e78e91087a5098", "filename": "src/test/run-pass/non_modrs_mods/non_modrs_mods.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fnon_modrs_mods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fnon_modrs_mods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fnon_modrs_mods.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+//\n+// ignore-pretty issue #37195\n+#![feature(non_modrs_mods)]\n+\n+pub mod modrs_mod;\n+pub mod foors_mod;\n+\n+#[path = \"some_crazy_attr_mod_dir/arbitrary_name.rs\"]\n+pub mod attr_mod;\n+\n+pub fn main() {\n+    modrs_mod::inner_modrs_mod::innest::foo();\n+    modrs_mod::inner_foors_mod::innest::foo();\n+    foors_mod::inner_modrs_mod::innest::foo();\n+    foors_mod::inner_foors_mod::innest::foo();\n+    attr_mod::inner_modrs_mod::innest::foo();\n+}"}, {"sha": "226e6fda0a41fdd9c28e63cd0866528357046423", "filename": "src/test/run-pass/non_modrs_mods/some_crazy_attr_mod_dir/arbitrary_name.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fsome_crazy_attr_mod_dir%2Farbitrary_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fsome_crazy_attr_mod_dir%2Farbitrary_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fsome_crazy_attr_mod_dir%2Farbitrary_name.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod inner_modrs_mod;"}, {"sha": "b61667cfd882ce02e3a44b5141adea3352a211f1", "filename": "src/test/run-pass/non_modrs_mods/some_crazy_attr_mod_dir/attr_mod/inner_modrs_mod/innest.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fsome_crazy_attr_mod_dir%2Fattr_mod%2Finner_modrs_mod%2Finnest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fsome_crazy_attr_mod_dir%2Fattr_mod%2Finner_modrs_mod%2Finnest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fsome_crazy_attr_mod_dir%2Fattr_mod%2Finner_modrs_mod%2Finnest.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn foo() {}"}, {"sha": "77cab972352bd77d0554c07da2fea4dda04fe76a", "filename": "src/test/run-pass/non_modrs_mods/some_crazy_attr_mod_dir/attr_mod/inner_modrs_mod/mod.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fsome_crazy_attr_mod_dir%2Fattr_mod%2Finner_modrs_mod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fsome_crazy_attr_mod_dir%2Fattr_mod%2Finner_modrs_mod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fsome_crazy_attr_mod_dir%2Fattr_mod%2Finner_modrs_mod%2Fmod.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod innest;"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/test/run-pass/non_modrs_mods/some_crazy_attr_mod_dir/compiletest-ignore-dir", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fsome_crazy_attr_mod_dir%2Fcompiletest-ignore-dir", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fsome_crazy_attr_mod_dir%2Fcompiletest-ignore-dir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnon_modrs_mods%2Fsome_crazy_attr_mod_dir%2Fcompiletest-ignore-dir?ref=957dc8de634886143195a1e1a1e1a7d047afe164"}, {"sha": "18ca5d09798bcb198fad5483cdb00cab58067da4", "filename": "src/test/ui/invalid-module-declaration/invalid-module-declaration.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Finvalid-module-declaration%2Finvalid-module-declaration.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Finvalid-module-declaration%2Finvalid-module-declaration.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finvalid-module-declaration%2Finvalid-module-declaration.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n+// ignore-windows\n \n // error-pattern: cannot declare a new module at this location\n // error-pattern: maybe move this module"}, {"sha": "58df416030c541a7611f5c8a96f11769869f14f0", "filename": "src/test/ui/invalid-module-declaration/invalid-module-declaration.stderr", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Finvalid-module-declaration%2Finvalid-module-declaration.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Finvalid-module-declaration%2Finvalid-module-declaration.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finvalid-module-declaration%2Finvalid-module-declaration.stderr?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -1,14 +1,10 @@\n-error: cannot declare a new module at this location\n+error[E0583]: file not found for module `baz`\n   --> $DIR/auxiliary/foo/bar.rs:11:9\n    |\n 11 | pub mod baz;\n    |         ^^^\n    |\n-note: maybe move this module `$DIR/auxiliary/foo/bar.rs` to its own directory via `$DIR/auxiliary/foo/bar/mod.rs`\n-  --> $DIR/auxiliary/foo/bar.rs:11:9\n-   |\n-11 | pub mod baz;\n-   |         ^^^\n+   = help: name the file either bar/baz.rs or bar/baz/mod.rs inside the directory \"$DIR/auxiliary/foo\"\n \n error: aborting due to previous error\n "}, {"sha": "7262a26397cb81f5ca74bcd198731f46790db059", "filename": "src/test/ui/missing_non_modrs_mod/foo.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fmissing_non_modrs_mod%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fmissing_non_modrs_mod%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing_non_modrs_mod%2Ffoo.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+//\n+// ignore-test this is just a helper for the real test in this dir\n+\n+mod missing;"}, {"sha": "9c95f45939367ebdcd76267e6cd0c678ba62c03a", "filename": "src/test/ui/missing_non_modrs_mod/missing_non_modrs_mod.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fmissing_non_modrs_mod%2Fmissing_non_modrs_mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fmissing_non_modrs_mod%2Fmissing_non_modrs_mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing_non_modrs_mod%2Fmissing_non_modrs_mod.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-windows\n+\n+mod foo;\n+fn main() {}"}, {"sha": "3ba71d32a31a6a427373fc5c2fe5fa2d6d9c72a9", "filename": "src/test/ui/missing_non_modrs_mod/missing_non_modrs_mod.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fmissing_non_modrs_mod%2Fmissing_non_modrs_mod.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fmissing_non_modrs_mod%2Fmissing_non_modrs_mod.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing_non_modrs_mod%2Fmissing_non_modrs_mod.stderr?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,10 @@\n+error[E0583]: file not found for module `missing`\n+  --> $DIR/foo.rs:13:5\n+   |\n+13 | mod missing;\n+   |     ^^^^^^^\n+   |\n+   = help: name the file either foo/missing.rs or foo/missing/mod.rs inside the directory \"$DIR\"\n+\n+error: aborting due to previous error\n+"}, {"sha": "7d37c6d9399543c1b9a28a72897c9630069c5d83", "filename": "src/test/ui/non_modrs_mods/foors_mod.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Ffoors_mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Ffoors_mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon_modrs_mods%2Ffoors_mod.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+//\n+// ignore-test: not a test, used by non_modrs_mods.rs\n+\n+pub mod inner_modrs_mod;\n+pub mod inner_foors_mod;"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/test/ui/non_modrs_mods/foors_mod/compiletest-ignore-dir", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Ffoors_mod%2Fcompiletest-ignore-dir", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Ffoors_mod%2Fcompiletest-ignore-dir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon_modrs_mods%2Ffoors_mod%2Fcompiletest-ignore-dir?ref=957dc8de634886143195a1e1a1e1a7d047afe164"}, {"sha": "77cab972352bd77d0554c07da2fea4dda04fe76a", "filename": "src/test/ui/non_modrs_mods/foors_mod/inner_foors_mod.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Ffoors_mod%2Finner_foors_mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Ffoors_mod%2Finner_foors_mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon_modrs_mods%2Ffoors_mod%2Finner_foors_mod.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod innest;"}, {"sha": "b61667cfd882ce02e3a44b5141adea3352a211f1", "filename": "src/test/ui/non_modrs_mods/foors_mod/inner_foors_mod/innest.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Ffoors_mod%2Finner_foors_mod%2Finnest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Ffoors_mod%2Finner_foors_mod%2Finnest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon_modrs_mods%2Ffoors_mod%2Finner_foors_mod%2Finnest.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn foo() {}"}, {"sha": "b61667cfd882ce02e3a44b5141adea3352a211f1", "filename": "src/test/ui/non_modrs_mods/foors_mod/inner_modrs_mod/innest.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Ffoors_mod%2Finner_modrs_mod%2Finnest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Ffoors_mod%2Finner_modrs_mod%2Finnest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon_modrs_mods%2Ffoors_mod%2Finner_modrs_mod%2Finnest.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn foo() {}"}, {"sha": "77cab972352bd77d0554c07da2fea4dda04fe76a", "filename": "src/test/ui/non_modrs_mods/foors_mod/inner_modrs_mod/mod.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Ffoors_mod%2Finner_modrs_mod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Ffoors_mod%2Finner_modrs_mod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon_modrs_mods%2Ffoors_mod%2Finner_modrs_mod%2Fmod.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod innest;"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/test/ui/non_modrs_mods/modrs_mod/compiletest-ignore-dir", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fmodrs_mod%2Fcompiletest-ignore-dir", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fmodrs_mod%2Fcompiletest-ignore-dir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fmodrs_mod%2Fcompiletest-ignore-dir?ref=957dc8de634886143195a1e1a1e1a7d047afe164"}, {"sha": "77cab972352bd77d0554c07da2fea4dda04fe76a", "filename": "src/test/ui/non_modrs_mods/modrs_mod/inner_foors_mod.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fmodrs_mod%2Finner_foors_mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fmodrs_mod%2Finner_foors_mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fmodrs_mod%2Finner_foors_mod.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod innest;"}, {"sha": "b61667cfd882ce02e3a44b5141adea3352a211f1", "filename": "src/test/ui/non_modrs_mods/modrs_mod/inner_foors_mod/innest.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fmodrs_mod%2Finner_foors_mod%2Finnest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fmodrs_mod%2Finner_foors_mod%2Finnest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fmodrs_mod%2Finner_foors_mod%2Finnest.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn foo() {}"}, {"sha": "b61667cfd882ce02e3a44b5141adea3352a211f1", "filename": "src/test/ui/non_modrs_mods/modrs_mod/inner_modrs_mod/innest.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fmodrs_mod%2Finner_modrs_mod%2Finnest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fmodrs_mod%2Finner_modrs_mod%2Finnest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fmodrs_mod%2Finner_modrs_mod%2Finnest.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn foo() {}"}, {"sha": "77cab972352bd77d0554c07da2fea4dda04fe76a", "filename": "src/test/ui/non_modrs_mods/modrs_mod/inner_modrs_mod/mod.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fmodrs_mod%2Finner_modrs_mod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fmodrs_mod%2Finner_modrs_mod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fmodrs_mod%2Finner_modrs_mod%2Fmod.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod innest;"}, {"sha": "9e3f10f12ed63916e14646e5909b90b8b0ad217e", "filename": "src/test/ui/non_modrs_mods/modrs_mod/mod.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fmodrs_mod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fmodrs_mod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fmodrs_mod%2Fmod.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,12 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod inner_modrs_mod;\n+pub mod inner_foors_mod;"}, {"sha": "9dc85f4d3f92d7948f11bc3eacd9223484033a91", "filename": "src/test/ui/non_modrs_mods/non_modrs_mods.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fnon_modrs_mods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fnon_modrs_mods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fnon_modrs_mods.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+//\n+// Tests the formatting of the feature-gate errors for non_modrs_mods\n+//\n+// gate-test-non_modrs_mods\n+// ignore-windows\n+// ignore-pretty issue #37195\n+pub mod modrs_mod;\n+pub mod foors_mod;\n+\n+#[path = \"some_crazy_attr_mod_dir/arbitrary_name.rs\"]\n+pub mod attr_mod;\n+\n+pub fn main() {\n+    modrs_mod::inner_modrs_mod::innest::foo();\n+    modrs_mod::inner_foors_mod::innest::foo();\n+    foors_mod::inner_modrs_mod::innest::foo();\n+    foors_mod::inner_foors_mod::innest::foo();\n+    attr_mod::inner_modrs_mod::innest::foo();\n+}"}, {"sha": "b4b524786cd7ce01eb8827d1a64a3ba2d134376e", "filename": "src/test/ui/non_modrs_mods/non_modrs_mods.stderr", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fnon_modrs_mods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fnon_modrs_mods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fnon_modrs_mods.stderr?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,47 @@\n+error: mod statements in non-mod.rs files are unstable (see issue #44660)\n+  --> $DIR/modrs_mod/inner_foors_mod.rs:11:9\n+   |\n+11 | pub mod innest;\n+   |         ^^^^^^\n+   |\n+   = help: add #![feature(non_modrs_mods)] to the crate attributes to enable\n+   = help: on stable builds, rename this file to inner_foors_mod/mod.rs\n+\n+error: mod statements in non-mod.rs files are unstable (see issue #44660)\n+  --> $DIR/foors_mod.rs:13:9\n+   |\n+13 | pub mod inner_modrs_mod;\n+   |         ^^^^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(non_modrs_mods)] to the crate attributes to enable\n+   = help: on stable builds, rename this file to foors_mod/mod.rs\n+\n+error: mod statements in non-mod.rs files are unstable (see issue #44660)\n+  --> $DIR/foors_mod.rs:14:9\n+   |\n+14 | pub mod inner_foors_mod;\n+   |         ^^^^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(non_modrs_mods)] to the crate attributes to enable\n+   = help: on stable builds, rename this file to foors_mod/mod.rs\n+\n+error: mod statements in non-mod.rs files are unstable (see issue #44660)\n+  --> $DIR/foors_mod/inner_foors_mod.rs:11:9\n+   |\n+11 | pub mod innest;\n+   |         ^^^^^^\n+   |\n+   = help: add #![feature(non_modrs_mods)] to the crate attributes to enable\n+   = help: on stable builds, rename this file to inner_foors_mod/mod.rs\n+\n+error: mod statements in non-mod.rs files are unstable (see issue #44660)\n+  --> $DIR/some_crazy_attr_mod_dir/arbitrary_name.rs:11:9\n+   |\n+11 | pub mod inner_modrs_mod;\n+   |         ^^^^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(non_modrs_mods)] to the crate attributes to enable\n+   = help: on stable builds, rename this file to attr_mod/mod.rs\n+\n+error: aborting due to 5 previous errors\n+"}, {"sha": "226e6fda0a41fdd9c28e63cd0866528357046423", "filename": "src/test/ui/non_modrs_mods/some_crazy_attr_mod_dir/arbitrary_name.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fsome_crazy_attr_mod_dir%2Farbitrary_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fsome_crazy_attr_mod_dir%2Farbitrary_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fsome_crazy_attr_mod_dir%2Farbitrary_name.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod inner_modrs_mod;"}, {"sha": "b61667cfd882ce02e3a44b5141adea3352a211f1", "filename": "src/test/ui/non_modrs_mods/some_crazy_attr_mod_dir/attr_mod/inner_modrs_mod/innest.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fsome_crazy_attr_mod_dir%2Fattr_mod%2Finner_modrs_mod%2Finnest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fsome_crazy_attr_mod_dir%2Fattr_mod%2Finner_modrs_mod%2Finnest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fsome_crazy_attr_mod_dir%2Fattr_mod%2Finner_modrs_mod%2Finnest.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn foo() {}"}, {"sha": "77cab972352bd77d0554c07da2fea4dda04fe76a", "filename": "src/test/ui/non_modrs_mods/some_crazy_attr_mod_dir/attr_mod/inner_modrs_mod/mod.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fsome_crazy_attr_mod_dir%2Fattr_mod%2Finner_modrs_mod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fsome_crazy_attr_mod_dir%2Fattr_mod%2Finner_modrs_mod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fsome_crazy_attr_mod_dir%2Fattr_mod%2Finner_modrs_mod%2Fmod.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod innest;"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/test/ui/non_modrs_mods/some_crazy_attr_mod_dir/compiletest-ignore-dir", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fsome_crazy_attr_mod_dir%2Fcompiletest-ignore-dir", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fsome_crazy_attr_mod_dir%2Fcompiletest-ignore-dir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon_modrs_mods%2Fsome_crazy_attr_mod_dir%2Fcompiletest-ignore-dir?ref=957dc8de634886143195a1e1a1e1a7d047afe164"}, {"sha": "3156e93cc72bcb67d8a547f713d6916a9276156d", "filename": "src/tools/tidy/src/features.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -93,7 +93,8 @@ pub fn check(path: &Path, bad: &mut bool, quiet: bool) {\n                        &path.join(\"test/ui\"),\n                        &path.join(\"test/compile-fail\"),\n                        &path.join(\"test/compile-fail-fulldeps\"),\n-                       &path.join(\"test/parse-fail\"),],\n+                       &path.join(\"test/parse-fail\"),\n+                       &path.join(\"test/ui\"),],\n                      &mut |path| super::filter_dirs(path),\n                      &mut |file| {\n         let filename = file.file_name().unwrap().to_string_lossy();"}, {"sha": "b29e505c3b09eb99f62ff6f10a84850fbd5e9ca7", "filename": "src/tools/toolstate.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftools%2Ftoolstate.toml", "raw_url": "https://github.com/rust-lang/rust/raw/957dc8de634886143195a1e1a1e1a7d047afe164/src%2Ftools%2Ftoolstate.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftoolstate.toml?ref=957dc8de634886143195a1e1a1e1a7d047afe164", "patch": "@@ -29,8 +29,8 @@ miri = \"Broken\"\n clippy = \"Testing\"\n \n # ping @nrc\n-rls = \"Testing\"\n+rls = \"Broken\"\n \n # ping @nrc\n # when breaking rustfmt, always break rls as well\n-rustfmt = \"Testing\"\n+rustfmt = \"Broken\""}]}