{"sha": "214894275722249e434d24507771b6fef789df55", "node_id": "C_kwDOAAsO6NoAKDIxNDg5NDI3NTcyMjI0OWU0MzRkMjQ1MDc3NzFiNmZlZjc4OWRmNTU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-27T19:34:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-27T19:34:14Z"}, "message": "Rollup merge of #106599 - MikailBag:patch-1, r=jyn514\n\nChange memory ordering in System wrapper example\n\nCurrently, the `SeqCst` ordering is used, which seems unnecessary:\n+ Even `Relaxed` ordering guarantees that all updates are atomic and are executed in total order\n+ User code only reads atomic for monitoring purposes, no \"happens-before\" relationships with actual allocations and deallocations are needed for this\n\nIf argumentation above is correct, I propose changing ordering to `Relaxed` to clarify that no synchronization is required here, and improve performance (if somebody copy-pastes this example into their code).", "tree": {"sha": "53ef944a48fa06dcbee2670ba28364ea6c271495", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53ef944a48fa06dcbee2670ba28364ea6c271495"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/214894275722249e434d24507771b6fef789df55", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkSs42CRBK7hj4Ov3rIwAA3o0IAI+YhP6D2uO0HqlFkYvED3qn\nFS3hU+E2WNJVb5RG8hZkABwSwpRJQtA4ThzYZvs8HQgQjMB0/PVZGS5Gq5CtpA1/\n2L+jC6YZiUH9u2/BYrjYDAJNaiApkJbIvUV+ZpXwoVgdEdKNESj323TphLf+ZL9V\nfs+VmhNOWxoQEXUx5JB7hX7Y7oqCamTCXxAt/xndhIITZhTQrhFws9rpC0OplC9u\npt98QaQbb/z77AzYB4k+13rv63BTqQHylwHDIvxZuAwBbs2pGoIlzo+ThcAu0xsz\nngzaTnLEp8E0ygunpT2cp1WpYqpRy8xineTYuTKhRFLQIOwaUpqBQvxud8g4n94=\n=E8dh\n-----END PGP SIGNATURE-----\n", "payload": "tree 53ef944a48fa06dcbee2670ba28364ea6c271495\nparent aa22867caf32ee63a0bf7d626225e142a2129ca4\nparent 7b9f64475ed51fbf8221ecb8c7f4fc9e71fa1d53\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1682624054 +0200\ncommitter GitHub <noreply@github.com> 1682624054 +0200\n\nRollup merge of #106599 - MikailBag:patch-1, r=jyn514\n\nChange memory ordering in System wrapper example\n\nCurrently, the `SeqCst` ordering is used, which seems unnecessary:\n+ Even `Relaxed` ordering guarantees that all updates are atomic and are executed in total order\n+ User code only reads atomic for monitoring purposes, no \"happens-before\" relationships with actual allocations and deallocations are needed for this\n\nIf argumentation above is correct, I propose changing ordering to `Relaxed` to clarify that no synchronization is required here, and improve performance (if somebody copy-pastes this example into their code).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/214894275722249e434d24507771b6fef789df55", "html_url": "https://github.com/rust-lang/rust/commit/214894275722249e434d24507771b6fef789df55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/214894275722249e434d24507771b6fef789df55/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa22867caf32ee63a0bf7d626225e142a2129ca4", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa22867caf32ee63a0bf7d626225e142a2129ca4", "html_url": "https://github.com/rust-lang/rust/commit/aa22867caf32ee63a0bf7d626225e142a2129ca4"}, {"sha": "7b9f64475ed51fbf8221ecb8c7f4fc9e71fa1d53", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b9f64475ed51fbf8221ecb8c7f4fc9e71fa1d53", "html_url": "https://github.com/rust-lang/rust/commit/7b9f64475ed51fbf8221ecb8c7f4fc9e71fa1d53"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "ec774e62debbff1a881c2fe94ad5b7f90e232bcd", "filename": "library/std/src/alloc.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/214894275722249e434d24507771b6fef789df55/library%2Fstd%2Fsrc%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214894275722249e434d24507771b6fef789df55/library%2Fstd%2Fsrc%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Falloc.rs?ref=214894275722249e434d24507771b6fef789df55", "patch": "@@ -93,7 +93,7 @@ pub use alloc_crate::alloc::*;\n ///\n /// ```rust\n /// use std::alloc::{System, GlobalAlloc, Layout};\n-/// use std::sync::atomic::{AtomicUsize, Ordering::SeqCst};\n+/// use std::sync::atomic::{AtomicUsize, Ordering::Relaxed};\n ///\n /// struct Counter;\n ///\n@@ -103,22 +103,22 @@ pub use alloc_crate::alloc::*;\n ///     unsafe fn alloc(&self, layout: Layout) -> *mut u8 {\n ///         let ret = System.alloc(layout);\n ///         if !ret.is_null() {\n-///             ALLOCATED.fetch_add(layout.size(), SeqCst);\n+///             ALLOCATED.fetch_add(layout.size(), Relaxed);\n ///         }\n ///         ret\n ///     }\n ///\n ///     unsafe fn dealloc(&self, ptr: *mut u8, layout: Layout) {\n ///         System.dealloc(ptr, layout);\n-///         ALLOCATED.fetch_sub(layout.size(), SeqCst);\n+///         ALLOCATED.fetch_sub(layout.size(), Relaxed);\n ///     }\n /// }\n ///\n /// #[global_allocator]\n /// static A: Counter = Counter;\n ///\n /// fn main() {\n-///     println!(\"allocated bytes before main: {}\", ALLOCATED.load(SeqCst));\n+///     println!(\"allocated bytes before main: {}\", ALLOCATED.load(Relaxed));\n /// }\n /// ```\n ///"}]}