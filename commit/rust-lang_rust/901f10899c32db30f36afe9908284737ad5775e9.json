{"sha": "901f10899c32db30f36afe9908284737ad5775e9", "node_id": "C_kwDOAAsO6NoAKDkwMWYxMDg5OWMzMmRiMzBmMzZhZmU5OTA4Mjg0NzM3YWQ1Nzc1ZTk", "commit": {"author": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2023-03-27T22:56:28Z"}, "committer": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2023-03-28T00:09:31Z"}, "message": "Add `#[inline]` to CStr trait implementations", "tree": {"sha": "184a1c84983f8dc7cc1e97b737ea622ddd6f28aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/184a1c84983f8dc7cc1e97b737ea622ddd6f28aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/901f10899c32db30f36afe9908284737ad5775e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/901f10899c32db30f36afe9908284737ad5775e9", "html_url": "https://github.com/rust-lang/rust/commit/901f10899c32db30f36afe9908284737ad5775e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/901f10899c32db30f36afe9908284737ad5775e9/comments", "author": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd19135b044cd21a9c3ae7ae87620bf41a208066", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd19135b044cd21a9c3ae7ae87620bf41a208066", "html_url": "https://github.com/rust-lang/rust/commit/dd19135b044cd21a9c3ae7ae87620bf41a208066"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "4a5306ccaa7923f60632b428782fdd27bff0cf24", "filename": "library/core/src/ffi/c_str.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/901f10899c32db30f36afe9908284737ad5775e9/library%2Fcore%2Fsrc%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/901f10899c32db30f36afe9908284737ad5775e9/library%2Fcore%2Fsrc%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fffi%2Fc_str.rs?ref=901f10899c32db30f36afe9908284737ad5775e9", "patch": "@@ -172,6 +172,7 @@ impl fmt::Debug for CStr {\n \n #[stable(feature = \"cstr_default\", since = \"1.10.0\")]\n impl Default for &CStr {\n+    #[inline]\n     fn default() -> Self {\n         const SLICE: &[c_char] = &[0];\n         // SAFETY: `SLICE` is indeed pointing to a valid nul-terminated string.\n@@ -623,6 +624,7 @@ impl CStr {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl PartialEq for CStr {\n+    #[inline]\n     fn eq(&self, other: &CStr) -> bool {\n         self.to_bytes().eq(other.to_bytes())\n     }\n@@ -631,12 +633,14 @@ impl PartialEq for CStr {\n impl Eq for CStr {}\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl PartialOrd for CStr {\n+    #[inline]\n     fn partial_cmp(&self, other: &CStr) -> Option<Ordering> {\n         self.to_bytes().partial_cmp(&other.to_bytes())\n     }\n }\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Ord for CStr {\n+    #[inline]\n     fn cmp(&self, other: &CStr) -> Ordering {\n         self.to_bytes().cmp(&other.to_bytes())\n     }\n@@ -646,6 +650,7 @@ impl Ord for CStr {\n impl ops::Index<ops::RangeFrom<usize>> for CStr {\n     type Output = CStr;\n \n+    #[inline]\n     fn index(&self, index: ops::RangeFrom<usize>) -> &CStr {\n         let bytes = self.to_bytes_with_nul();\n         // we need to manually check the starting index to account for the null"}]}