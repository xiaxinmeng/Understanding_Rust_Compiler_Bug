{"sha": "feab095d65d1e60a0d4d78f66c3f14ce1bc88f10", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlYWIwOTVkNjVkMWU2MGEwZDRkNzhmNjZjM2YxNGNlMWJjODhmMTA=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-01-24T18:43:33Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-01-25T00:24:31Z"}, "message": "Convert core::pipes::{Packet,Chan_,Port_} into structs", "tree": {"sha": "03cf4c639cb6f371da1346e6d6c74bf4564afbb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03cf4c639cb6f371da1346e6d6c74bf4564afbb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/feab095d65d1e60a0d4d78f66c3f14ce1bc88f10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/feab095d65d1e60a0d4d78f66c3f14ce1bc88f10", "html_url": "https://github.com/rust-lang/rust/commit/feab095d65d1e60a0d4d78f66c3f14ce1bc88f10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/feab095d65d1e60a0d4d78f66c3f14ce1bc88f10/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90734a0d3378b26f7800fc0ffdaa3a6897839514", "url": "https://api.github.com/repos/rust-lang/rust/commits/90734a0d3378b26f7800fc0ffdaa3a6897839514", "html_url": "https://github.com/rust-lang/rust/commit/90734a0d3378b26f7800fc0ffdaa3a6897839514"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "c7cd098394c57d66c0a0b90c27dfb503b1b29390", "filename": "src/libcore/pipes.rs", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/feab095d65d1e60a0d4d78f66c3f14ce1bc88f10/src%2Flibcore%2Fpipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/feab095d65d1e60a0d4d78f66c3f14ce1bc88f10/src%2Flibcore%2Fpipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpipes.rs?ref=feab095d65d1e60a0d4d78f66c3f14ce1bc88f10", "patch": "@@ -201,10 +201,10 @@ impl PacketHeader {\n }\n \n #[doc(hidden)]\n-pub type Packet<T: Owned> = {\n+pub struct Packet<T: Owned> {\n     header: PacketHeader,\n     mut payload: Option<T>,\n-};\n+}\n \n #[doc(hidden)]\n pub trait HasBuffer {\n@@ -223,19 +223,19 @@ impl<T: Owned> Packet<T>: HasBuffer {\n \n #[doc(hidden)]\n pub fn mk_packet<T: Owned>() -> Packet<T> {\n-    {\n+    Packet {\n         header: PacketHeader(),\n-        mut payload: None\n+        payload: None,\n     }\n }\n \n #[doc(hidden)]\n fn unibuffer<T: Owned>() -> ~Buffer<Packet<T>> {\n     let b = ~{\n         header: BufferHeader(),\n-        data: {\n+        data: Packet {\n             header: PacketHeader(),\n-            mut payload: None,\n+            payload: None,\n         }\n     };\n \n@@ -1011,15 +1011,19 @@ pub trait Peekable<T> {\n }\n \n #[doc(hidden)]\n-type Chan_<T:Owned> = { mut endp: Option<streamp::client::Open<T>> };\n+struct Chan_<T:Owned> {\n+    mut endp: Option<streamp::client::Open<T>>,\n+}\n \n /// An endpoint that can send many messages.\n pub enum Chan<T:Owned> {\n     Chan_(Chan_<T>)\n }\n \n #[doc(hidden)]\n-type Port_<T:Owned> = { mut endp: Option<streamp::server::Open<T>> };\n+struct Port_<T:Owned> {\n+    mut endp: Option<streamp::server::Open<T>>,\n+}\n \n /// An endpoint that can receive many messages.\n pub enum Port<T:Owned> {\n@@ -1034,7 +1038,7 @@ These allow sending or receiving an unlimited number of messages.\n pub fn stream<T:Owned>() -> (Port<T>, Chan<T>) {\n     let (c, s) = streamp::init();\n \n-    (Port_({ mut endp: Some(move s) }), Chan_({ mut endp: Some(move c) }))\n+    (Port_(Port_ { endp: Some(s) }), Chan_(Chan_{ endp: Some(c) }))\n }\n \n impl<T: Owned> Chan<T>: GenericChan<T> {"}]}