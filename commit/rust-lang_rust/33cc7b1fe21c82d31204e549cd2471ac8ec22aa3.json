{"sha": "33cc7b1fe21c82d31204e549cd2471ac8ec22aa3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzY2M3YjFmZTIxYzgyZDMxMjA0ZTU0OWNkMjQ3MWFjOGVjMjJhYTM=", "commit": {"author": {"name": "Ryan Levick", "email": "me@ryanlevick.com", "date": "2021-07-01T10:29:20Z"}, "committer": {"name": "Ryan Levick", "email": "me@ryanlevick.com", "date": "2021-07-01T10:29:20Z"}, "message": "New force_warn diagnostic builder and ensure cap-lints doesn't reduce force_warn level", "tree": {"sha": "6f60870bfaaaa7c5377f11f33b0dc9b84d9bda46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f60870bfaaaa7c5377f11f33b0dc9b84d9bda46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33cc7b1fe21c82d31204e549cd2471ac8ec22aa3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33cc7b1fe21c82d31204e549cd2471ac8ec22aa3", "html_url": "https://github.com/rust-lang/rust/commit/33cc7b1fe21c82d31204e549cd2471ac8ec22aa3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33cc7b1fe21c82d31204e549cd2471ac8ec22aa3/comments", "author": {"login": "rylev", "id": 1327285, "node_id": "MDQ6VXNlcjEzMjcyODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1327285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rylev", "html_url": "https://github.com/rylev", "followers_url": "https://api.github.com/users/rylev/followers", "following_url": "https://api.github.com/users/rylev/following{/other_user}", "gists_url": "https://api.github.com/users/rylev/gists{/gist_id}", "starred_url": "https://api.github.com/users/rylev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rylev/subscriptions", "organizations_url": "https://api.github.com/users/rylev/orgs", "repos_url": "https://api.github.com/users/rylev/repos", "events_url": "https://api.github.com/users/rylev/events{/privacy}", "received_events_url": "https://api.github.com/users/rylev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rylev", "id": 1327285, "node_id": "MDQ6VXNlcjEzMjcyODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1327285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rylev", "html_url": "https://github.com/rylev", "followers_url": "https://api.github.com/users/rylev/followers", "following_url": "https://api.github.com/users/rylev/following{/other_user}", "gists_url": "https://api.github.com/users/rylev/gists{/gist_id}", "starred_url": "https://api.github.com/users/rylev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rylev/subscriptions", "organizations_url": "https://api.github.com/users/rylev/orgs", "repos_url": "https://api.github.com/users/rylev/repos", "events_url": "https://api.github.com/users/rylev/events{/privacy}", "received_events_url": "https://api.github.com/users/rylev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3d6905053ad60e836717976e6e4d38de67888f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3d6905053ad60e836717976e6e4d38de67888f9", "html_url": "https://github.com/rust-lang/rust/commit/a3d6905053ad60e836717976e6e4d38de67888f9"}], "stats": {"total": 82, "additions": 67, "deletions": 15}, "files": [{"sha": "a5e11541c8b4c6676dd69121b308167565371904", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/33cc7b1fe21c82d31204e549cd2471ac8ec22aa3/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33cc7b1fe21c82d31204e549cd2471ac8ec22aa3/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=33cc7b1fe21c82d31204e549cd2471ac8ec22aa3", "patch": "@@ -521,12 +521,24 @@ impl Handler {\n     }\n \n     /// Construct a builder at the `Warning` level at the given `span` and with the `msg`.\n+    /// Cancel the builder if warnings cannot be emitted\n     pub fn struct_span_warn(&self, span: impl Into<MultiSpan>, msg: &str) -> DiagnosticBuilder<'_> {\n         let mut result = self.struct_warn(msg);\n         result.set_span(span);\n         result\n     }\n \n+    /// Construct a builder at the `Warning` level at the given `span` and with the `msg`.\n+    pub fn struct_span_force_warn(\n+        &self,\n+        span: impl Into<MultiSpan>,\n+        msg: &str,\n+    ) -> DiagnosticBuilder<'_> {\n+        let mut result = self.struct_force_warn(msg);\n+        result.set_span(span);\n+        result\n+    }\n+\n     /// Construct a builder at the `Allow` level at the given `span` and with the `msg`.\n     pub fn struct_span_allow(\n         &self,\n@@ -552,6 +564,7 @@ impl Handler {\n     }\n \n     /// Construct a builder at the `Warning` level with the `msg`.\n+    /// Cancel the builder if warnings cannot be emitted\n     pub fn struct_warn(&self, msg: &str) -> DiagnosticBuilder<'_> {\n         let mut result = DiagnosticBuilder::new(self, Level::Warning, msg);\n         if !self.flags.can_emit_warnings {\n@@ -560,6 +573,11 @@ impl Handler {\n         result\n     }\n \n+    /// Construct a builder at the `Warning` level with the `msg`.\n+    pub fn struct_force_warn(&self, msg: &str) -> DiagnosticBuilder<'_> {\n+        DiagnosticBuilder::new(self, Level::Warning, msg)\n+    }\n+\n     /// Construct a builder at the `Allow` level with the `msg`.\n     pub fn struct_allow(&self, msg: &str) -> DiagnosticBuilder<'_> {\n         DiagnosticBuilder::new(self, Level::Allow, msg)"}, {"sha": "b5eab8be17fb8a790e4a638e24de774332cba316", "filename": "compiler/rustc_middle/src/lint.rs", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/33cc7b1fe21c82d31204e549cd2471ac8ec22aa3/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33cc7b1fe21c82d31204e549cd2471ac8ec22aa3/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flint.rs?ref=33cc7b1fe21c82d31204e549cd2471ac8ec22aa3", "patch": "@@ -108,8 +108,13 @@ impl LintLevelSets {\n             }\n         }\n \n-        // Ensure that we never exceed the `--cap-lints` argument.\n-        level = cmp::min(level, self.lint_cap);\n+        // Ensure that we never exceed the `--cap-lints` argument\n+        // unless the source is a --force-warn\n+        level = if let LintLevelSource::CommandLine(_, Level::ForceWarn) = src {\n+            level\n+        } else {\n+            cmp::min(level, self.lint_cap)\n+        };\n \n         if let Some(driver_level) = sess.driver_lint_caps.get(&LintId::of(lint)) {\n             // Ensure that we never exceed driver level.\n@@ -257,22 +262,14 @@ pub fn struct_lint_level<'s, 'd>(\n                     } else {\n                         sess.struct_allow(\"\")\n                     }\n-                } else if is_force_warn {\n-                    let mut err = if let Some(span) = span {\n-                        sess.struct_span_warn(span, \"\")\n-                    } else {\n-                        sess.struct_warn(\"\")\n-                    };\n-                    // Ensure force-warn warns even if the diagnostic has\n-                    // been canceled for reasons like `--cap-lints`\n-                    err.level = rustc_errors::Level::Warning;\n-                    err\n                 } else {\n                     return;\n                 }\n             }\n-            (Level::Warn | Level::ForceWarn, Some(span)) => sess.struct_span_warn(span, \"\"),\n-            (Level::Warn | Level::ForceWarn, None) => sess.struct_warn(\"\"),\n+            (Level::Warn, Some(span)) => sess.struct_span_warn(span, \"\"),\n+            (Level::Warn, None) => sess.struct_warn(\"\"),\n+            (Level::ForceWarn, Some(span)) => sess.struct_span_force_warn(span, \"\"),\n+            (Level::ForceWarn, None) => sess.struct_force_warn(\"\"),\n             (Level::Deny | Level::Forbid, Some(span)) => sess.struct_span_err(span, \"\"),\n             (Level::Deny | Level::Forbid, None) => sess.struct_err(\"\"),\n         };"}, {"sha": "f6b7797c2e3b17dc8c97e9bc1458e617f3e10ebd", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/33cc7b1fe21c82d31204e549cd2471ac8ec22aa3/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33cc7b1fe21c82d31204e549cd2471ac8ec22aa3/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=33cc7b1fe21c82d31204e549cd2471ac8ec22aa3", "patch": "@@ -369,6 +369,13 @@ impl Session {\n     pub fn struct_span_warn<S: Into<MultiSpan>>(&self, sp: S, msg: &str) -> DiagnosticBuilder<'_> {\n         self.diagnostic().struct_span_warn(sp, msg)\n     }\n+    pub fn struct_span_force_warn<S: Into<MultiSpan>>(\n+        &self,\n+        sp: S,\n+        msg: &str,\n+    ) -> DiagnosticBuilder<'_> {\n+        self.diagnostic().struct_span_force_warn(sp, msg)\n+    }\n     pub fn struct_span_warn_with_code<S: Into<MultiSpan>>(\n         &self,\n         sp: S,\n@@ -380,6 +387,9 @@ impl Session {\n     pub fn struct_warn(&self, msg: &str) -> DiagnosticBuilder<'_> {\n         self.diagnostic().struct_warn(msg)\n     }\n+    pub fn struct_force_warn(&self, msg: &str) -> DiagnosticBuilder<'_> {\n+        self.diagnostic().struct_force_warn(msg)\n+    }\n     pub fn struct_span_allow<S: Into<MultiSpan>>(&self, sp: S, msg: &str) -> DiagnosticBuilder<'_> {\n         self.diagnostic().struct_span_allow(sp, msg)\n     }"}, {"sha": "bcfe6e5a5bd6e8a4b61bee859b3d59b6d5933ba0", "filename": "src/test/ui/lint/force-warn/force-warn-cap-lints-warn.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/33cc7b1fe21c82d31204e549cd2471ac8ec22aa3/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-cap-lints-warn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33cc7b1fe21c82d31204e549cd2471ac8ec22aa3/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-cap-lints-warn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-cap-lints-warn.rs?ref=33cc7b1fe21c82d31204e549cd2471ac8ec22aa3", "patch": "@@ -0,0 +1,15 @@\n+// compile-flags: --cap-lints warn  --force-warns rust-2021-compatibility -Zunstable-options\n+// check-pass\n+#![allow(ellipsis_inclusive_range_patterns)]\n+\n+pub fn f() -> bool {\n+    let x = 123;\n+    match x {\n+        0...100 => true,\n+        //~^ WARN range patterns are deprecated\n+        //~| WARN this is accepted in the current edition\n+        _ => false,\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "07e786ce7d2663745aac2ab0dfb9c7b5c52d5afe", "filename": "src/test/ui/lint/force-warn/force-warn-cap-lints-warn.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/33cc7b1fe21c82d31204e549cd2471ac8ec22aa3/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-cap-lints-warn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33cc7b1fe21c82d31204e549cd2471ac8ec22aa3/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-cap-lints-warn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-cap-lints-warn.stderr?ref=33cc7b1fe21c82d31204e549cd2471ac8ec22aa3", "patch": "@@ -0,0 +1,12 @@\n+warning: `...` range patterns are deprecated\n+  --> $DIR/force-warn-cap-lints-warn.rs:8:10\n+   |\n+LL |         0...100 => true,\n+   |          ^^^ help: use `..=` for an inclusive range\n+   |\n+   = note: `--force-warns ellipsis-inclusive-range-patterns` implied by `--force-warns rust-2021-compatibility`\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n+   = note: for more information, see issue #80165 <https://github.com/rust-lang/rust/issues/80165>\n+\n+warning: 1 warning emitted\n+"}, {"sha": "e364897ec4ecb3e30328f39ebedc99a482cb9dd2", "filename": "src/test/ui/lint/force-warn/force-warns-cap-lints-allow.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/33cc7b1fe21c82d31204e549cd2471ac8ec22aa3/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warns-cap-lints-allow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33cc7b1fe21c82d31204e549cd2471ac8ec22aa3/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warns-cap-lints-allow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warns-cap-lints-allow.rs?ref=33cc7b1fe21c82d31204e549cd2471ac8ec22aa3", "previous_filename": "src/test/ui/lint/force-warn/force-warns-cap-lints.rs"}, {"sha": "21532024f1c4ae90ba8090d5a4d582f3f6b91efa", "filename": "src/test/ui/lint/force-warn/force-warns-cap-lints-allow.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33cc7b1fe21c82d31204e549cd2471ac8ec22aa3/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warns-cap-lints-allow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33cc7b1fe21c82d31204e549cd2471ac8ec22aa3/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warns-cap-lints-allow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warns-cap-lints-allow.stderr?ref=33cc7b1fe21c82d31204e549cd2471ac8ec22aa3", "patch": "@@ -1,5 +1,5 @@\n warning: trait objects without an explicit `dyn` are deprecated\n-  --> $DIR/force-warns-cap-lints.rs:6:25\n+  --> $DIR/force-warns-cap-lints-allow.rs:6:25\n    |\n LL | pub fn function(_x: Box<SomeTrait>) {}\n    |                         ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`", "previous_filename": "src/test/ui/lint/force-warn/force-warns-cap-lints.stderr"}]}