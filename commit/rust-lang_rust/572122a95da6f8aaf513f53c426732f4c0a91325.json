{"sha": "572122a95da6f8aaf513f53c426732f4c0a91325", "node_id": "C_kwDOAAsO6NoAKDU3MjEyMmE5NWRhNmY4YWFmNTEzZjUzYzQyNjczMmY0YzBhOTEzMjU", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2022-11-10T02:28:38Z"}, "committer": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2022-11-10T02:28:38Z"}, "message": "Add missing pointer tests and rename pointer cast fns to match scalars", "tree": {"sha": "137e0638e25518974e00dac3bfa6baa4712b8cec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/137e0638e25518974e00dac3bfa6baa4712b8cec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/572122a95da6f8aaf513f53c426732f4c0a91325", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/572122a95da6f8aaf513f53c426732f4c0a91325", "html_url": "https://github.com/rust-lang/rust/commit/572122a95da6f8aaf513f53c426732f4c0a91325", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/572122a95da6f8aaf513f53c426732f4c0a91325/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de30820035cb42d05f49575811a9f33661985e67", "url": "https://api.github.com/repos/rust-lang/rust/commits/de30820035cb42d05f49575811a9f33661985e67", "html_url": "https://github.com/rust-lang/rust/commit/de30820035cb42d05f49575811a9f33661985e67"}], "stats": {"total": 64, "additions": 60, "deletions": 4}, "files": [{"sha": "0ef9802b5e219c43294157dee2752adb29279e94", "filename": "crates/core_simd/src/elements/const_ptr.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/572122a95da6f8aaf513f53c426732f4c0a91325/crates%2Fcore_simd%2Fsrc%2Felements%2Fconst_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/572122a95da6f8aaf513f53c426732f4c0a91325/crates%2Fcore_simd%2Fsrc%2Felements%2Fconst_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Felements%2Fconst_ptr.rs?ref=572122a95da6f8aaf513f53c426732f4c0a91325", "patch": "@@ -19,7 +19,9 @@ pub trait SimdConstPtr: Copy + Sealed {\n     fn is_null(self) -> Self::Mask;\n \n     /// Changes constness without changing the type.\n-    fn as_mut(self) -> Self::MutPtr;\n+    ///\n+    /// Equivalent to calling [`pointer::cast_mut`] on each lane.\n+    fn cast_mut(self) -> Self::MutPtr;\n \n     /// Gets the \"address\" portion of the pointer.\n     ///\n@@ -85,7 +87,7 @@ where\n     }\n \n     #[inline]\n-    fn as_mut(self) -> Self::MutPtr {\n+    fn cast_mut(self) -> Self::MutPtr {\n         self.cast_ptr()\n     }\n "}, {"sha": "d87986b4a091cea9be41e186582725fc98465500", "filename": "crates/core_simd/src/elements/mut_ptr.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/572122a95da6f8aaf513f53c426732f4c0a91325/crates%2Fcore_simd%2Fsrc%2Felements%2Fmut_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/572122a95da6f8aaf513f53c426732f4c0a91325/crates%2Fcore_simd%2Fsrc%2Felements%2Fmut_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Felements%2Fmut_ptr.rs?ref=572122a95da6f8aaf513f53c426732f4c0a91325", "patch": "@@ -19,7 +19,9 @@ pub trait SimdMutPtr: Copy + Sealed {\n     fn is_null(self) -> Self::Mask;\n \n     /// Changes constness without changing the type.\n-    fn as_const(self) -> Self::ConstPtr;\n+    ///\n+    /// Equivalent to calling [`pointer::cast_const`] on each lane.\n+    fn cast_const(self) -> Self::ConstPtr;\n \n     /// Gets the \"address\" portion of the pointer.\n     ///\n@@ -80,7 +82,7 @@ where\n     }\n \n     #[inline]\n-    fn as_const(self) -> Self::ConstPtr {\n+    fn cast_const(self) -> Self::ConstPtr {\n         self.cast_ptr()\n     }\n "}, {"sha": "2b0008624ad8afbff2d5bfc5debff72385560dc2", "filename": "crates/core_simd/tests/pointers.rs", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/572122a95da6f8aaf513f53c426732f4c0a91325/crates%2Fcore_simd%2Ftests%2Fpointers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/572122a95da6f8aaf513f53c426732f4c0a91325/crates%2Fcore_simd%2Ftests%2Fpointers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Ftests%2Fpointers.rs?ref=572122a95da6f8aaf513f53c426732f4c0a91325", "patch": "@@ -21,6 +21,22 @@ macro_rules! common_tests {\n                 );\n             }\n \n+            fn with_addr<const LANES: usize>() {\n+                test_helpers::test_binary_elementwise(\n+                    &Simd::<*$constness u32, LANES>::with_addr,\n+                    &<*$constness u32>::with_addr,\n+                    &|_, _| true,\n+                );\n+            }\n+\n+            fn expose_addr<const LANES: usize>() {\n+                test_helpers::test_unary_elementwise(\n+                    &Simd::<*$constness u32, LANES>::expose_addr,\n+                    &<*$constness u32>::expose_addr,\n+                    &|_| true,\n+                );\n+            }\n+\n             fn wrapping_offset<const LANES: usize>() {\n                 test_helpers::test_binary_elementwise(\n                     &Simd::<*$constness u32, LANES>::wrapping_offset,\n@@ -51,9 +67,45 @@ macro_rules! common_tests {\n mod const_ptr {\n     use super::*;\n     common_tests! { const }\n+\n+    test_helpers::test_lanes! {\n+        fn cast_mut<const LANES: usize>() {\n+            test_helpers::test_unary_elementwise(\n+                &Simd::<*const u32, LANES>::cast_mut,\n+                &<*const u32>::cast_mut,\n+                &|_| true,\n+            );\n+        }\n+\n+        fn from_exposed_addr<const LANES: usize>() {\n+            test_helpers::test_unary_elementwise(\n+                &Simd::<*const u32, LANES>::from_exposed_addr,\n+                &core::ptr::from_exposed_addr::<u32>,\n+                &|_| true,\n+            );\n+        }\n+    }\n }\n \n mod mut_ptr {\n     use super::*;\n     common_tests! { mut }\n+\n+    test_helpers::test_lanes! {\n+        fn cast_const<const LANES: usize>() {\n+            test_helpers::test_unary_elementwise(\n+                &Simd::<*mut u32, LANES>::cast_const,\n+                &<*mut u32>::cast_const,\n+                &|_| true,\n+            );\n+        }\n+\n+        fn from_exposed_addr<const LANES: usize>() {\n+            test_helpers::test_unary_elementwise(\n+                &Simd::<*mut u32, LANES>::from_exposed_addr,\n+                &core::ptr::from_exposed_addr_mut::<u32>,\n+                &|_| true,\n+            );\n+        }\n+    }\n }"}]}