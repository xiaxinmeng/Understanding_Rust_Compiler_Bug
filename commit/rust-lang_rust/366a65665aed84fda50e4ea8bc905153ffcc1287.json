{"sha": "366a65665aed84fda50e4ea8bc905153ffcc1287", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2NmE2NTY2NWFlZDg0ZmRhNTBlNGVhOGJjOTA1MTUzZmZjYzEyODc=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2018-02-16T01:12:04Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2018-02-16T02:12:26Z"}, "message": "Consider paths passed to x.py to be root-relative.\n\nWe'd previously assumed that these paths would be relative to the src\ndir, and that for example our various CI scripts would, when calling\nx.py, use `../x.py build ../src/tools/...` but this isn't the case --\nthey use `../x.py` without using the relevant source-relative path.\n\nWe eventually may want to make this (actually somewhat logical) change,\nbut this is not that time.", "tree": {"sha": "1dbfddda7ea00071f5c9234ea231e32dd335e5a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1dbfddda7ea00071f5c9234ea231e32dd335e5a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/366a65665aed84fda50e4ea8bc905153ffcc1287", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/366a65665aed84fda50e4ea8bc905153ffcc1287", "html_url": "https://github.com/rust-lang/rust/commit/366a65665aed84fda50e4ea8bc905153ffcc1287", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/366a65665aed84fda50e4ea8bc905153ffcc1287/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e78ecd2e70961e64040598a019febec44959f7dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/e78ecd2e70961e64040598a019febec44959f7dd", "html_url": "https://github.com/rust-lang/rust/commit/e78ecd2e70961e64040598a019febec44959f7dd"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "7345b284dc70aa210089904afa9560eebe0c5346", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/366a65665aed84fda50e4ea8bc905153ffcc1287/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/366a65665aed84fda50e4ea8bc905153ffcc1287/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=366a65665aed84fda50e4ea8bc905153ffcc1287", "patch": "@@ -385,6 +385,10 @@ impl<'a> Builder<'a> {\n             Subcommand::Clean { .. } => panic!(),\n         };\n \n+        if paths[0] == Path::new(\"nonexistent/path/to/trigger/cargo/metadata\") {\n+            return;\n+        }\n+\n         let builder = Builder {\n             build,\n             top_stage: build.config.stage.unwrap_or(2),"}, {"sha": "42b949527e09dda2bec9818903aa65bd974fb795", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/366a65665aed84fda50e4ea8bc905153ffcc1287/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/366a65665aed84fda50e4ea8bc905153ffcc1287/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=366a65665aed84fda50e4ea8bc905153ffcc1287", "patch": "@@ -278,9 +278,7 @@ Arguments:\n         let src = matches.opt_str(\"src\").map(PathBuf::from)\n             .or_else(|| env::var_os(\"SRC\").map(PathBuf::from))\n             .unwrap_or(cwd.clone());\n-        let paths = matches.free[1..].iter().map(|p| {\n-            cwd.join(p).strip_prefix(&src).expect(\"paths passed to be inside checkout\").into()\n-        }).collect::<Vec<PathBuf>>();\n+        let paths = matches.free[1..].iter().map(|p| p.into()).collect::<Vec<PathBuf>>();\n \n         let cfg_file = matches.opt_str(\"config\").map(PathBuf::from).or_else(|| {\n             if fs::metadata(\"config.toml\").is_ok() {\n@@ -380,9 +378,7 @@ Arguments:\n             cmd,\n             incremental: matches.opt_present(\"incremental\"),\n             exclude: split(matches.opt_strs(\"exclude\"))\n-                .into_iter().map(|p| {\n-                    cwd.join(p).strip_prefix(&src).expect(\"paths to be inside checkout\").into()\n-                }).collect::<Vec<_>>(),\n+                .into_iter().map(|p| p.into()).collect::<Vec<_>>(),\n             src,\n         }\n     }"}]}