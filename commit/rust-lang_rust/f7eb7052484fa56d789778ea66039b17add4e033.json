{"sha": "f7eb7052484fa56d789778ea66039b17add4e033", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3ZWI3MDUyNDg0ZmE1NmQ3ODk3NzhlYTY2MDM5YjE3YWRkNGUwMzM=", "commit": {"author": {"name": "OGINO Masanori", "email": "masanori.ogino@gmail.com", "date": "2014-02-08T05:37:34Z"}, "committer": {"name": "OGINO Masanori", "email": "masanori.ogino@gmail.com", "date": "2014-02-08T06:08:44Z"}, "message": "Fix unused import warnings.\n\nSigned-off-by: OGINO Masanori <masanori.ogino@gmail.com>", "tree": {"sha": "1d4c6caad2339316fad7f9892066286be3640d01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d4c6caad2339316fad7f9892066286be3640d01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7eb7052484fa56d789778ea66039b17add4e033", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7eb7052484fa56d789778ea66039b17add4e033", "html_url": "https://github.com/rust-lang/rust/commit/f7eb7052484fa56d789778ea66039b17add4e033", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7eb7052484fa56d789778ea66039b17add4e033/comments", "author": {"login": "omasanori", "id": 167209, "node_id": "MDQ6VXNlcjE2NzIwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/167209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omasanori", "html_url": "https://github.com/omasanori", "followers_url": "https://api.github.com/users/omasanori/followers", "following_url": "https://api.github.com/users/omasanori/following{/other_user}", "gists_url": "https://api.github.com/users/omasanori/gists{/gist_id}", "starred_url": "https://api.github.com/users/omasanori/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omasanori/subscriptions", "organizations_url": "https://api.github.com/users/omasanori/orgs", "repos_url": "https://api.github.com/users/omasanori/repos", "events_url": "https://api.github.com/users/omasanori/events{/privacy}", "received_events_url": "https://api.github.com/users/omasanori/received_events", "type": "User", "site_admin": false}, "committer": {"login": "omasanori", "id": 167209, "node_id": "MDQ6VXNlcjE2NzIwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/167209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omasanori", "html_url": "https://github.com/omasanori", "followers_url": "https://api.github.com/users/omasanori/followers", "following_url": "https://api.github.com/users/omasanori/following{/other_user}", "gists_url": "https://api.github.com/users/omasanori/gists{/gist_id}", "starred_url": "https://api.github.com/users/omasanori/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omasanori/subscriptions", "organizations_url": "https://api.github.com/users/omasanori/orgs", "repos_url": "https://api.github.com/users/omasanori/repos", "events_url": "https://api.github.com/users/omasanori/events{/privacy}", "received_events_url": "https://api.github.com/users/omasanori/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd071eeeb8acc4ef616a18c468e889d2aa7782c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd071eeeb8acc4ef616a18c468e889d2aa7782c2", "html_url": "https://github.com/rust-lang/rust/commit/dd071eeeb8acc4ef616a18c468e889d2aa7782c2"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "0d45d5bdbab436333041ff76d218a754bfa1c148", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f7eb7052484fa56d789778ea66039b17add4e033/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7eb7052484fa56d789778ea66039b17add4e033/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=f7eb7052484fa56d789778ea66039b17add4e033", "patch": "@@ -1181,7 +1181,6 @@ mod test {\n     use getopts::getopts;\n     use syntax::attr;\n     use syntax::attr::AttrMetaMethods;\n-    use syntax::diagnostic;\n \n     // When the user supplies --test we should implicitly supply --cfg test\n     #[test]"}, {"sha": "3aa3e020500eac6662bb46358516bfad712d5bdb", "filename": "src/libstd/unit.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f7eb7052484fa56d789778ea66039b17add4e033/src%2Flibstd%2Funit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7eb7052484fa56d789778ea66039b17add4e033/src%2Flibstd%2Funit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funit.rs?ref=f7eb7052484fa56d789778ea66039b17add4e033", "patch": "@@ -12,6 +12,7 @@\n \n #[cfg(not(test))]\n use default::Default;\n+#[cfg(not(test))]\n use cmp::{Eq, Equal, Ord, Ordering, TotalEq, TotalOrd};\n \n #[cfg(not(test))]"}, {"sha": "0d98a632c6c929fc93b6516bfdae0c2581cfbfe6", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f7eb7052484fa56d789778ea66039b17add4e033/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7eb7052484fa56d789778ea66039b17add4e033/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=f7eb7052484fa56d789778ea66039b17add4e033", "patch": "@@ -890,17 +890,15 @@ fn original_span(cx: &ExtCtxt) -> @codemap::ExpnInfo {\n mod test {\n     use super::*;\n     use ast;\n-    use ast::{Attribute_, AttrOuter, MetaWord, EMPTY_CTXT};\n-    use ast_util::{get_sctable, mtwt_marksof, mtwt_resolve, new_rename};\n+    use ast::{Attribute_, AttrOuter, MetaWord};\n+    use ast_util::{get_sctable, mtwt_marksof, mtwt_resolve};\n     use ast_util;\n     use codemap;\n     use codemap::Spanned;\n-    use fold::*;\n     use ext::base::{CrateLoader, MacroCrate};\n     use parse;\n-    use parse::token::{fresh_mark, gensym, intern};\n     use parse::token;\n-    use util::parser_testing::{string_to_crate, string_to_crate_and_sess};\n+    use util::parser_testing::{string_to_crate_and_sess};\n     use util::parser_testing::{string_to_pat, strs_to_idents};\n     use visit;\n     use visit::Visitor;"}]}