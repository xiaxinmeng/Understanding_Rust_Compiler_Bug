{"sha": "d8552d114c3b2cedbc485ebe26d7b784c0845bd8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4NTUyZDExNGMzYjJjZWRiYzQ4NWViZTI2ZDdiNzg0YzA4NDViZDg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-08T09:48:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-08T09:48:38Z"}, "message": "Merge #4781\n\n4781: Remove redundancy in syntax highlighting tests r=matklad a=ltentrup\n\nFollow up from #4683. Improves syntax highlighting testing by introducing a function that contains the boilerplate comparison code. Keeps the `ra_fixture` argument in the first position, thus, the editor syntax highlighting injection still works.\n\nCo-authored-by: Leander Tentrup <leander.tentrup@gmail.com>", "tree": {"sha": "f269ccb60670a534294133a45fa2cfb66ce421ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f269ccb60670a534294133a45fa2cfb66ce421ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8552d114c3b2cedbc485ebe26d7b784c0845bd8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe3gl2CRBK7hj4Ov3rIwAAdHIIAGaXpIxeJ9PJ1KRrGOwN//kM\nuJxxPrvtcVr4JHccNJF2MggW+O1Ua26crdA8mq6woAOE5XKmXZywx7ccrCFiVhaq\niCKk9XmctsDTX23Pw6KWxg4aVwHFyyTvPtz0NGM/SWKW2qxlMBCX5wsti+ZT7wkl\nbKmji1t1jj//7emToPUVEHG6N6TmT2vKc3tLsolrfY2MHNUMWDmL9WAFvIBqj+bk\n+ohh7lrPOMQMzrb/tR2p3S82OnTsmOKavT9b0YXR09tIXiDI2qPcEXjDJ5ZEZY+P\nLewaC4Ums8/B/k4xK46DEOFBD51lVwaS4kEMmRsKMIVKvQUv27uxH8WaER08/Iw=\n=utC7\n-----END PGP SIGNATURE-----\n", "payload": "tree f269ccb60670a534294133a45fa2cfb66ce421ea\nparent bb0d4600fff40565ed679c0d879c7a9256570b61\nparent 65943c058583f912175f2cfde64ff2a0d92809b6\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1591609718 +0000\ncommitter GitHub <noreply@github.com> 1591609718 +0000\n\nMerge #4781\n\n4781: Remove redundancy in syntax highlighting tests r=matklad a=ltentrup\n\nFollow up from #4683. Improves syntax highlighting testing by introducing a function that contains the boilerplate comparison code. Keeps the `ra_fixture` argument in the first position, thus, the editor syntax highlighting injection still works.\n\nCo-authored-by: Leander Tentrup <leander.tentrup@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8552d114c3b2cedbc485ebe26d7b784c0845bd8", "html_url": "https://github.com/rust-lang/rust/commit/d8552d114c3b2cedbc485ebe26d7b784c0845bd8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8552d114c3b2cedbc485ebe26d7b784c0845bd8/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb0d4600fff40565ed679c0d879c7a9256570b61", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb0d4600fff40565ed679c0d879c7a9256570b61", "html_url": "https://github.com/rust-lang/rust/commit/bb0d4600fff40565ed679c0d879c7a9256570b61"}, {"sha": "65943c058583f912175f2cfde64ff2a0d92809b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/65943c058583f912175f2cfde64ff2a0d92809b6", "html_url": "https://github.com/rust-lang/rust/commit/65943c058583f912175f2cfde64ff2a0d92809b6"}], "stats": {"total": 59, "additions": 27, "deletions": 32}, "files": [{"sha": "5e42c5b55b4201f19f20afebfad352c68e20fad2", "filename": "crates/ra_ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 27, "deletions": 32, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/d8552d114c3b2cedbc485ebe26d7b784c0845bd8/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8552d114c3b2cedbc485ebe26d7b784c0845bd8/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=d8552d114c3b2cedbc485ebe26d7b784c0845bd8", "patch": "@@ -7,9 +7,21 @@ use crate::{\n     FileRange, TextRange,\n };\n \n+/// Highlights the code given by the `ra_fixture` argument, renders the\n+/// result as HTML, and compares it with the HTML file given as `snapshot`.\n+/// Note that the `snapshot` file is overwritten by the rendered HTML.\n+fn check_highlighting(ra_fixture: &str, snapshot: &str, rainbow: bool) {\n+    let (analysis, file_id) = single_file(ra_fixture);\n+    let dst_file = project_dir().join(snapshot);\n+    let actual_html = &analysis.highlight_as_html(file_id, rainbow).unwrap();\n+    let expected_html = &read_text(&dst_file);\n+    fs::write(dst_file, &actual_html).unwrap();\n+    assert_eq_text!(expected_html, actual_html);\n+}\n+\n #[test]\n fn test_highlighting() {\n-    let (analysis, file_id) = single_file(\n+    check_highlighting(\n         r#\"\n #[derive(Clone, Debug)]\n struct Foo {\n@@ -84,17 +96,14 @@ impl<T> Option<T> {\n }\n \"#\n         .trim(),\n+        \"crates/ra_ide/src/snapshots/highlighting.html\",\n+        false,\n     );\n-    let dst_file = project_dir().join(\"crates/ra_ide/src/snapshots/highlighting.html\");\n-    let actual_html = &analysis.highlight_as_html(file_id, false).unwrap();\n-    let expected_html = &read_text(&dst_file);\n-    fs::write(dst_file, &actual_html).unwrap();\n-    assert_eq_text!(expected_html, actual_html);\n }\n \n #[test]\n fn test_rainbow_highlighting() {\n-    let (analysis, file_id) = single_file(\n+    check_highlighting(\n         r#\"\n fn main() {\n     let hello = \"hello\";\n@@ -110,12 +119,9 @@ fn bar() {\n }\n \"#\n         .trim(),\n+        \"crates/ra_ide/src/snapshots/rainbow_highlighting.html\",\n+        true,\n     );\n-    let dst_file = project_dir().join(\"crates/ra_ide/src/snapshots/rainbow_highlighting.html\");\n-    let actual_html = &analysis.highlight_as_html(file_id, true).unwrap();\n-    let expected_html = &read_text(&dst_file);\n-    fs::write(dst_file, &actual_html).unwrap();\n-    assert_eq_text!(expected_html, actual_html);\n }\n \n #[test]\n@@ -153,7 +159,7 @@ fn test_ranges() {\n \n #[test]\n fn test_flattening() {\n-    let (analysis, file_id) = single_file(\n+    check_highlighting(\n         r##\"\n fn fixture(ra_fixture: &str) {}\n \n@@ -167,13 +173,9 @@ fn main() {\n     );\n }\"##\n         .trim(),\n+        \"crates/ra_ide/src/snapshots/highlight_injection.html\",\n+        false,\n     );\n-\n-    let dst_file = project_dir().join(\"crates/ra_ide/src/snapshots/highlight_injection.html\");\n-    let actual_html = &analysis.highlight_as_html(file_id, false).unwrap();\n-    let expected_html = &read_text(&dst_file);\n-    fs::write(dst_file, &actual_html).unwrap();\n-    assert_eq_text!(expected_html, actual_html);\n }\n \n #[test]\n@@ -192,7 +194,7 @@ macro_rules! test {}\n fn test_string_highlighting() {\n     // The format string detection is based on macro-expansion,\n     // thus, we have to copy the macro definition from `std`\n-    let (analysis, file_id) = single_file(\n+    check_highlighting(\n         r#\"\n macro_rules! println {\n     ($($arg:tt)*) => ({\n@@ -250,18 +252,14 @@ fn main() {\n     println!(\"{\u043d\u0438\u0447\u043e\u0441\u0438}\", \u043d\u0438\u0447\u043e\u0441\u0438 = 92);\n }\"#\n         .trim(),\n+        \"crates/ra_ide/src/snapshots/highlight_strings.html\",\n+        false,\n     );\n-\n-    let dst_file = project_dir().join(\"crates/ra_ide/src/snapshots/highlight_strings.html\");\n-    let actual_html = &analysis.highlight_as_html(file_id, false).unwrap();\n-    let expected_html = &read_text(&dst_file);\n-    fs::write(dst_file, &actual_html).unwrap();\n-    assert_eq_text!(expected_html, actual_html);\n }\n \n #[test]\n fn test_unsafe_highlighting() {\n-    let (analysis, file_id) = single_file(\n+    check_highlighting(\n         r#\"\n unsafe fn unsafe_fn() {}\n \n@@ -282,10 +280,7 @@ fn main() {\n }\n \"#\n         .trim(),\n+        \"crates/ra_ide/src/snapshots/highlight_unsafe.html\",\n+        false,\n     );\n-    let dst_file = project_dir().join(\"crates/ra_ide/src/snapshots/highlight_unsafe.html\");\n-    let actual_html = &analysis.highlight_as_html(file_id, false).unwrap();\n-    let expected_html = &read_text(&dst_file);\n-    fs::write(dst_file, &actual_html).unwrap();\n-    assert_eq_text!(expected_html, actual_html);\n }"}]}