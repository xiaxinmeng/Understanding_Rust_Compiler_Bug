{"sha": "c8d9a2dbdbf422ad2c3acaa9583846ebab02ae9a", "node_id": "C_kwDOAAsO6NoAKGM4ZDlhMmRiZGJmNDIyYWQyYzNhY2FhOTU4Mzg0NmViYWIwMmFlOWE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-20T13:45:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-20T13:45:21Z"}, "message": "Auto merge of #12327 - jonas-schievink:lambda-to-closure, r=jonas-schievink\n\ninternal: Rename `Expr::Lambda` to `Expr::Closure`\n\nThey're never really called \"Lambda\"s in Rust, so let's call them \"Closures\" consistently.", "tree": {"sha": "12e23790b4e80893390b18f980ab43954fb71978", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12e23790b4e80893390b18f980ab43954fb71978"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8d9a2dbdbf422ad2c3acaa9583846ebab02ae9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8d9a2dbdbf422ad2c3acaa9583846ebab02ae9a", "html_url": "https://github.com/rust-lang/rust/commit/c8d9a2dbdbf422ad2c3acaa9583846ebab02ae9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8d9a2dbdbf422ad2c3acaa9583846ebab02ae9a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b65e00aeaa16e0a7478053c7f6a3f6fc0234235", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b65e00aeaa16e0a7478053c7f6a3f6fc0234235", "html_url": "https://github.com/rust-lang/rust/commit/1b65e00aeaa16e0a7478053c7f6a3f6fc0234235"}, {"sha": "60a2ab4c676964311d8eaca733323c221cc466e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/60a2ab4c676964311d8eaca733323c221cc466e1", "html_url": "https://github.com/rust-lang/rust/commit/60a2ab4c676964311d8eaca733323c221cc466e1"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "0f9f0e0e1c5ac59b963bca9c9904694884d9079d", "filename": "crates/hir-def/src/body/lower.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c8d9a2dbdbf422ad2c3acaa9583846ebab02ae9a/crates%2Fhir-def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8d9a2dbdbf422ad2c3acaa9583846ebab02ae9a/crates%2Fhir-def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fbody%2Flower.rs?ref=c8d9a2dbdbf422ad2c3acaa9583846ebab02ae9a", "patch": "@@ -452,7 +452,12 @@ impl ExprCollector<'_> {\n                     .map(|it| Interned::new(TypeRef::from_ast(&self.ctx(), it)));\n                 let body = self.collect_expr_opt(e.body());\n                 self.alloc_expr(\n-                    Expr::Lambda { args: args.into(), arg_types: arg_types.into(), ret_type, body },\n+                    Expr::Closure {\n+                        args: args.into(),\n+                        arg_types: arg_types.into(),\n+                        ret_type,\n+                        body,\n+                    },\n                     syntax_ptr,\n                 )\n             }"}, {"sha": "c9ab19e59bc1f69250572e7c3ed37b7e954575db", "filename": "crates/hir-def/src/body/scope.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c8d9a2dbdbf422ad2c3acaa9583846ebab02ae9a/crates%2Fhir-def%2Fsrc%2Fbody%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8d9a2dbdbf422ad2c3acaa9583846ebab02ae9a/crates%2Fhir-def%2Fsrc%2Fbody%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fbody%2Fscope.rs?ref=c8d9a2dbdbf422ad2c3acaa9583846ebab02ae9a", "patch": "@@ -197,7 +197,7 @@ fn compute_expr_scopes(expr: ExprId, body: &Body, scopes: &mut ExprScopes, scope\n             let mut scope = scopes.new_labeled_scope(*scope, make_label(label));\n             compute_expr_scopes(*body_expr, body, scopes, &mut scope);\n         }\n-        Expr::Lambda { args, body: body_expr, .. } => {\n+        Expr::Closure { args, body: body_expr, .. } => {\n             let mut scope = scopes.new_scope(*scope);\n             scopes.add_params_bindings(body, scope, args);\n             compute_expr_scopes(*body_expr, body, scopes, &mut scope);"}, {"sha": "fd09e651c99cfa8ebe42b3671b3302c5c9fe64b9", "filename": "crates/hir-def/src/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c8d9a2dbdbf422ad2c3acaa9583846ebab02ae9a/crates%2Fhir-def%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8d9a2dbdbf422ad2c3acaa9583846ebab02ae9a/crates%2Fhir-def%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fexpr.rs?ref=c8d9a2dbdbf422ad2c3acaa9583846ebab02ae9a", "patch": "@@ -165,7 +165,7 @@ pub enum Expr {\n         base: ExprId,\n         index: ExprId,\n     },\n-    Lambda {\n+    Closure {\n         args: Box<[PatId]>,\n         arg_types: Box<[Option<Interned<TypeRef>>]>,\n         ret_type: Option<Interned<TypeRef>>,\n@@ -286,7 +286,7 @@ impl Expr {\n                     f(expr);\n                 }\n             }\n-            Expr::Lambda { body, .. } => {\n+            Expr::Closure { body, .. } => {\n                 f(*body);\n             }\n             Expr::BinaryOp { lhs, rhs, .. } => {"}, {"sha": "2e645bf52ba9057a5edcd8c1249144f5b656a289", "filename": "crates/hir-ty/src/infer/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c8d9a2dbdbf422ad2c3acaa9583846ebab02ae9a/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8d9a2dbdbf422ad2c3acaa9583846ebab02ae9a/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs?ref=c8d9a2dbdbf422ad2c3acaa9583846ebab02ae9a", "patch": "@@ -218,7 +218,7 @@ impl<'a> InferenceContext<'a> {\n                 self.diverges = Diverges::Maybe;\n                 TyBuilder::unit()\n             }\n-            Expr::Lambda { body, args, ret_type, arg_types } => {\n+            Expr::Closure { body, args, ret_type, arg_types } => {\n                 assert_eq!(args.len(), arg_types.len());\n \n                 let mut sig_tys = Vec::new();\n@@ -1058,7 +1058,7 @@ impl<'a> InferenceContext<'a> {\n             for (idx, ((&arg, param_ty), expected_ty)) in\n                 args.iter().zip(param_iter).zip(expected_iter).enumerate()\n             {\n-                let is_closure = matches!(&self.body[arg], Expr::Lambda { .. });\n+                let is_closure = matches!(&self.body[arg], Expr::Closure { .. });\n                 if is_closure != check_closures {\n                     continue;\n                 }"}]}