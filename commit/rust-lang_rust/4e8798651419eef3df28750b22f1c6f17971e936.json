{"sha": "4e8798651419eef3df28750b22f1c6f17971e936", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlODc5ODY1MTQxOWVlZjNkZjI4NzUwYjIyZjFjNmYxNzk3MWU5MzY=", "commit": {"author": {"name": "flo-l", "email": "lacknerflo@gmail.com", "date": "2016-06-02T20:19:20Z"}, "committer": {"name": "flo-l", "email": "lacknerflo@gmail.com", "date": "2016-06-05T19:03:38Z"}, "message": "add documentation on howto build just rustc without libstd to the build system", "tree": {"sha": "566ef33f5aac35f09c7f18b4fd7578385a20c833", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/566ef33f5aac35f09c7f18b4fd7578385a20c833"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e8798651419eef3df28750b22f1c6f17971e936", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e8798651419eef3df28750b22f1c6f17971e936", "html_url": "https://github.com/rust-lang/rust/commit/4e8798651419eef3df28750b22f1c6f17971e936", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e8798651419eef3df28750b22f1c6f17971e936/comments", "author": {"login": "flo-l", "id": 5130545, "node_id": "MDQ6VXNlcjUxMzA1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5130545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flo-l", "html_url": "https://github.com/flo-l", "followers_url": "https://api.github.com/users/flo-l/followers", "following_url": "https://api.github.com/users/flo-l/following{/other_user}", "gists_url": "https://api.github.com/users/flo-l/gists{/gist_id}", "starred_url": "https://api.github.com/users/flo-l/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flo-l/subscriptions", "organizations_url": "https://api.github.com/users/flo-l/orgs", "repos_url": "https://api.github.com/users/flo-l/repos", "events_url": "https://api.github.com/users/flo-l/events{/privacy}", "received_events_url": "https://api.github.com/users/flo-l/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flo-l", "id": 5130545, "node_id": "MDQ6VXNlcjUxMzA1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5130545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flo-l", "html_url": "https://github.com/flo-l", "followers_url": "https://api.github.com/users/flo-l/followers", "following_url": "https://api.github.com/users/flo-l/following{/other_user}", "gists_url": "https://api.github.com/users/flo-l/gists{/gist_id}", "starred_url": "https://api.github.com/users/flo-l/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flo-l/subscriptions", "organizations_url": "https://api.github.com/users/flo-l/orgs", "repos_url": "https://api.github.com/users/flo-l/repos", "events_url": "https://api.github.com/users/flo-l/events{/privacy}", "received_events_url": "https://api.github.com/users/flo-l/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "298730e7032cd55809423773da397cd5c7d827d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/298730e7032cd55809423773da397cd5c7d827d4", "html_url": "https://github.com/rust-lang/rust/commit/298730e7032cd55809423773da397cd5c7d827d4"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "60935770781817a63c3ea9b6a19260ee33118b54", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4e8798651419eef3df28750b22f1c6f17971e936/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/4e8798651419eef3df28750b22f1c6f17971e936/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=4e8798651419eef3df28750b22f1c6f17971e936", "patch": "@@ -108,7 +108,8 @@ root.\n There are large number of options accepted by this script to alter the\n configuration used later in the build process. Some options to note:\n \n-- `--enable-debug` - Build a debug version of the compiler (disables optimizations)\n+- `--enable-debug` - Build a debug version of the compiler (disables optimizations,\n+    which speeds up compilation of stage1 rustc)\n - `--enable-optimize` - Enable optimizations (can be used with `--enable-debug`\n     to make a debug build with optimizations)\n - `--disable-valgrind-rpass` - Don't run tests with valgrind\n@@ -128,6 +129,12 @@ Some common make targets are:\n   cases we don't need to build the stage2 compiler, so we can save time by not\n   building it. The stage1 compiler is a fully functioning compiler and\n   (probably) will be enough to determine if your change works as expected.\n+- `make $host/stage1/bin/rustc` - Where $host is a target triple like x86_64-unknown-linux-gnu.\n+  This will build just rustc, without libstd. This is the fastest way to recompile after\n+  you changed only rustc source code. Note however that the resulting rustc binary\n+  won't have a stdlib to link against by default. You can build libstd once with\n+  `make rustc-stage1`, rustc will pick it up afterwards. libstd is only guaranteed to\n+  work if recompiled, so if there are any issues recompile it.\n - `make check` - build the full compiler & run all tests (takes a while). This\n   is what gets run by the continuous integration system against your pull\n   request. You should run this before submitting to make sure your tests pass"}, {"sha": "20e2e19305e1b98a34f5a073b490b29267085571", "filename": "Makefile.in", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4e8798651419eef3df28750b22f1c6f17971e936/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/4e8798651419eef3df28750b22f1c6f17971e936/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=4e8798651419eef3df28750b22f1c6f17971e936", "patch": "@@ -62,6 +62,8 @@\n #   * tidy - Basic style check, show highest rustc error code and\n #     the status of language and lib features\n #   * rustc-stage$(stage) - Only build up to a specific stage\n+#   * $host/stage1/bin/rustc - Only build stage1 rustc, not libstd. For further\n+#     information see \"Rust recipes for build system success\" below.\n #\n # Then mix in some of these environment variables to harness the\n # ultimate power of The Rust Build System.\n@@ -93,6 +95,15 @@\n #     // Modifying libstd? Use this command to run unit tests just on your change\n #     make check-stage1-std NO_REBUILD=1 NO_BENCH=1\n #\n+#     // Modifying just rustc?\n+#     // Compile rustc+libstd once\n+#     make rustc-stage1\n+#     // From now on use this command to rebuild just rustc and reuse the previously built libstd\n+#     // $host is a target triple, eg. x86_64-unknown-linux-gnu\n+#     // The resulting binary is located at $host/stage1/bin/rustc.\n+#     // If there are any issues with libstd recompile it with the command above.\n+#     make $host/stage1/bin/rustc\n+#\n #     // Added a run-pass test? Use this to test running your test\n #     make check-stage1-rpass TESTNAME=my-shiny-new-test\n #"}]}