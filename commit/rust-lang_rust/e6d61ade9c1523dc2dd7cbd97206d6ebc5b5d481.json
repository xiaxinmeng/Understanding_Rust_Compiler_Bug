{"sha": "e6d61ade9c1523dc2dd7cbd97206d6ebc5b5d481", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2ZDYxYWRlOWMxNTIzZGMyZGQ3Y2JkOTcyMDZkNmViYzViNWQ0ODE=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-07T16:14:47Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-07T16:20:07Z"}, "message": "Use slice_as_mut_ptr instead of first_ptr_mut.\n\nThis function was renamed.", "tree": {"sha": "b94de93eabdb4d3ff94286cc61bea261c051b775", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b94de93eabdb4d3ff94286cc61bea261c051b775"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6d61ade9c1523dc2dd7cbd97206d6ebc5b5d481", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6d61ade9c1523dc2dd7cbd97206d6ebc5b5d481", "html_url": "https://github.com/rust-lang/rust/commit/e6d61ade9c1523dc2dd7cbd97206d6ebc5b5d481", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6d61ade9c1523dc2dd7cbd97206d6ebc5b5d481/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ae3b509768774a9d351b939d18d5cb421b6ed3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ae3b509768774a9d351b939d18d5cb421b6ed3b", "html_url": "https://github.com/rust-lang/rust/commit/8ae3b509768774a9d351b939d18d5cb421b6ed3b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "c549208b2d793e934fff07e97afde657e1aa08ff", "filename": "library/std/src/sys/cloudabi/condvar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6d61ade9c1523dc2dd7cbd97206d6ebc5b5d481/library%2Fstd%2Fsrc%2Fsys%2Fcloudabi%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6d61ade9c1523dc2dd7cbd97206d6ebc5b5d481/library%2Fstd%2Fsrc%2Fsys%2Fcloudabi%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fcloudabi%2Fcondvar.rs?ref=e6d61ade9c1523dc2dd7cbd97206d6ebc5b5d481", "patch": "@@ -124,7 +124,7 @@ impl Condvar {\n         let mut nevents: mem::MaybeUninit<usize> = mem::MaybeUninit::uninit();\n         let ret = abi::poll(\n             subscriptions.as_ptr(),\n-            mem::MaybeUninit::first_ptr_mut(&mut events),\n+            mem::MaybeUninit::slice_as_mut_ptr(&mut events),\n             2,\n             nevents.as_mut_ptr(),\n         );"}]}