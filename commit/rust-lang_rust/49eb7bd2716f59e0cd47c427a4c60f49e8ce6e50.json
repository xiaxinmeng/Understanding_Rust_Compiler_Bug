{"sha": "49eb7bd2716f59e0cd47c427a4c60f49e8ce6e50", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5ZWI3YmQyNzE2ZjU5ZTBjZDQ3YzQyN2E0YzYwZjQ5ZThjZTZlNTA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-11T14:46:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-11T14:46:04Z"}, "message": "auto merge of #9039 : singingboyo/rust/update-for-expr-docs, r=thestinger\n\nThe old documentation for for loops/expressions has been quite wrong since the change to iterators.  This updates the docs to make them relevant to how for loops work now, if not very in-depth.  There may be a need for updates giving more depth on how they work, such as detailing what method calls they make, but I don't know enough about the implementation to include that.", "tree": {"sha": "43c8cee858759f89e5e2ab5b3292fc7edd31577d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43c8cee858759f89e5e2ab5b3292fc7edd31577d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49eb7bd2716f59e0cd47c427a4c60f49e8ce6e50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49eb7bd2716f59e0cd47c427a4c60f49e8ce6e50", "html_url": "https://github.com/rust-lang/rust/commit/49eb7bd2716f59e0cd47c427a4c60f49e8ce6e50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49eb7bd2716f59e0cd47c427a4c60f49e8ce6e50/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67ed30cd5eab9af1976a994c50d146a3dbeccad4", "url": "https://api.github.com/repos/rust-lang/rust/commits/67ed30cd5eab9af1976a994c50d146a3dbeccad4", "html_url": "https://github.com/rust-lang/rust/commit/67ed30cd5eab9af1976a994c50d146a3dbeccad4"}, {"sha": "8f31377514db2b31227251472258fb2c971af6c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f31377514db2b31227251472258fb2c971af6c3", "html_url": "https://github.com/rust-lang/rust/commit/8f31377514db2b31227251472258fb2c971af6c3"}], "stats": {"total": 21, "additions": 4, "deletions": 17}, "files": [{"sha": "730f78ea0820e2569126489f4f59818e2349bb96", "filename": "doc/rust.md", "status": "modified", "additions": 4, "deletions": 17, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/49eb7bd2716f59e0cd47c427a4c60f49e8ce6e50/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/49eb7bd2716f59e0cd47c427a4c60f49e8ce6e50/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=49eb7bd2716f59e0cd47c427a4c60f49e8ce6e50", "patch": "@@ -2459,25 +2459,12 @@ do k(3) |j| {\n ### For expressions\n \n ~~~~~~~~{.ebnf .gram}\n-for_expr : \"for\" expr [ '|' ident_list '|' ] ? '{' block '}' ;\n+for_expr : \"for\" pat \"in\" expr '{' block '}' ;\n ~~~~~~~~\n \n-A _for expression_ is similar to a [`do` expression](#do-expressions),\n-in that it provides a special block-form of lambda expression,\n-suited to passing the `block` function to a higher-order function implementing a loop.\n-\n-In contrast to a `do` expression, a `for` expression is designed to work\n-with methods such as `each` and `times`, that require the body block to\n-return a boolean. The `for` expression accommodates this by implicitly\n-returning `true` at the end of each block, unless a `break` expression\n-is evaluated.\n-\n-In addition, [`break`](#break-expressions) and [`loop`](#loop-expressions) expressions\n-are rewritten inside `for` expressions in the same way that `return` expressions are,\n-with a combination of local flag variables,\n-and early boolean-valued returns from the `block` function,\n-such that the meaning of `break` and `loop` is preserved in a primitive loop\n-when rewritten as a `for` loop controlled by a higher order function.\n+A `for` expression is a syntactic construct for looping\n+over elements provided by an implementation of\n+`std::iterator::Iterator`.\n \n An example of a for loop over the contents of a vector:\n "}]}