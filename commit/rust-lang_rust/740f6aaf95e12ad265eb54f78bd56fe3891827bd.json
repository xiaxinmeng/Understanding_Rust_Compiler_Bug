{"sha": "740f6aaf95e12ad265eb54f78bd56fe3891827bd", "node_id": "C_kwDOAAsO6NoAKDc0MGY2YWFmOTVlMTJhZDI2NWViNTRmNzhiZDU2ZmUzODkxODI3YmQ", "commit": {"author": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2023-01-12T03:19:08Z"}, "committer": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2023-01-12T03:19:08Z"}, "message": "Fix rendering 'const' for intrinsics", "tree": {"sha": "c1bc01cb6b136864f4fc0b45cca9b76427c378bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1bc01cb6b136864f4fc0b45cca9b76427c378bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/740f6aaf95e12ad265eb54f78bd56fe3891827bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/740f6aaf95e12ad265eb54f78bd56fe3891827bd", "html_url": "https://github.com/rust-lang/rust/commit/740f6aaf95e12ad265eb54f78bd56fe3891827bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/740f6aaf95e12ad265eb54f78bd56fe3891827bd/comments", "author": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e4f90061cc4bc566f99ab21b1f101182b10cf0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e4f90061cc4bc566f99ab21b1f101182b10cf0c", "html_url": "https://github.com/rust-lang/rust/commit/1e4f90061cc4bc566f99ab21b1f101182b10cf0c"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "87de41fde63c5e27ce9b4b333c81814347eaf33d", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/740f6aaf95e12ad265eb54f78bd56fe3891827bd/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/740f6aaf95e12ad265eb54f78bd56fe3891827bd/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=740f6aaf95e12ad265eb54f78bd56fe3891827bd", "patch": "@@ -676,15 +676,23 @@ impl Item {\n         }\n         let header = match *self.kind {\n             ItemKind::ForeignFunctionItem(_) => {\n-                let abi = tcx.fn_sig(self.item_id.as_def_id().unwrap()).abi();\n+                let def_id = self.item_id.as_def_id().unwrap();\n+                let abi = tcx.fn_sig(def_id).abi();\n                 hir::FnHeader {\n                     unsafety: if abi == Abi::RustIntrinsic {\n                         intrinsic_operation_unsafety(tcx, self.item_id.as_def_id().unwrap())\n                     } else {\n                         hir::Unsafety::Unsafe\n                     },\n                     abi,\n-                    constness: hir::Constness::NotConst,\n+                    constness: if abi == Abi::RustIntrinsic\n+                        && tcx.is_const_fn(def_id)\n+                        && is_unstable_const_fn(tcx, def_id).is_none()\n+                    {\n+                        hir::Constness::Const\n+                    } else {\n+                        hir::Constness::NotConst\n+                    },\n                     asyncness: hir::IsAsync::NotAsync,\n                 }\n             }"}, {"sha": "2fc486d01dae02b1ed7f2260b001690d96a82fb5", "filename": "tests/rustdoc/const-intrinsic.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/740f6aaf95e12ad265eb54f78bd56fe3891827bd/tests%2Frustdoc%2Fconst-intrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/740f6aaf95e12ad265eb54f78bd56fe3891827bd/tests%2Frustdoc%2Fconst-intrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fconst-intrinsic.rs?ref=740f6aaf95e12ad265eb54f78bd56fe3891827bd", "patch": "@@ -0,0 +1,25 @@\n+#![feature(intrinsics)]\n+#![feature(staged_api)]\n+\n+#![crate_name = \"foo\"]\n+#![stable(since=\"1.0.0\", feature=\"rust1\")]\n+\n+extern \"rust-intrinsic\" {\n+    // @has 'foo/fn.transmute.html'\n+    // @has - '//pre[@class=\"rust fn\"]' 'pub const unsafe extern \"rust-intrinsic\" fn transmute<T, U>(_: T) -> U'\n+    #[stable(since=\"1.0.0\", feature=\"rust1\")]\n+    #[rustc_const_stable(feature = \"const_transmute\", since = \"1.56.0\")]\n+    pub fn transmute<T, U>(_: T) -> U;\n+\n+    // @has 'foo/fn.unreachable.html'\n+    // @has - '//pre[@class=\"rust fn\"]' 'pub unsafe extern \"rust-intrinsic\" fn unreachable() -> !'\n+    #[stable(since=\"1.0.0\", feature=\"rust1\")]\n+    pub fn unreachable() -> !;\n+}\n+\n+extern \"C\" {\n+    // @has 'foo/fn.needs_drop.html'\n+    // @has - '//pre[@class=\"rust fn\"]' 'pub unsafe extern \"C\" fn needs_drop() -> !'\n+    #[stable(since=\"1.0.0\", feature=\"rust1\")]\n+    pub fn needs_drop() -> !;\n+}"}]}