{"sha": "12386da38aa46eff4c229fdbfb2496ce0a4c5b7e", "node_id": "C_kwDOAAsO6NoAKDEyMzg2ZGEzOGFhNDZlZmY0YzIyOWZkYmZiMjQ5NmNlMGE0YzViN2U", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2022-08-21T05:07:04Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2022-08-21T05:07:04Z"}, "message": "bootstrap: Remove some unused fields from the tool_extended macro.", "tree": {"sha": "d6654775f4a5e840563bff6a6f8feca298218f4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6654775f4a5e840563bff6a6f8feca298218f4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12386da38aa46eff4c229fdbfb2496ce0a4c5b7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12386da38aa46eff4c229fdbfb2496ce0a4c5b7e", "html_url": "https://github.com/rust-lang/rust/commit/12386da38aa46eff4c229fdbfb2496ce0a4c5b7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12386da38aa46eff4c229fdbfb2496ce0a4c5b7e/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "468887ef91e46847dff57b6b234cff0fad17cb71", "url": "https://api.github.com/repos/rust-lang/rust/commits/468887ef91e46847dff57b6b234cff0fad17cb71", "html_url": "https://github.com/rust-lang/rust/commit/468887ef91e46847dff57b6b234cff0fad17cb71"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "570da20e7d60dc9aab12314ecea4dc65d0b0dac6", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/12386da38aa46eff4c229fdbfb2496ce0a4c5b7e/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12386da38aa46eff4c229fdbfb2496ce0a4c5b7e/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=12386da38aa46eff4c229fdbfb2496ce0a4c5b7e", "patch": "@@ -778,12 +778,10 @@ impl Step for RustAnalyzerProcMacroSrv {\n macro_rules! tool_extended {\n     (($sel:ident, $builder:ident),\n        $($name:ident,\n-       $toolstate:ident,\n        $path:expr,\n        $tool_name:expr,\n        stable = $stable:expr,\n        $(in_tree = $in_tree:expr,)?\n-       $(submodule = $submodule:literal,)?\n        $(tool_std = $tool_std:literal,)?\n        $extra_deps:block;)+) => {\n         $(\n@@ -828,7 +826,6 @@ macro_rules! tool_extended {\n             #[allow(unused_mut)]\n             fn run(mut $sel, $builder: &Builder<'_>) -> Option<PathBuf> {\n                 $extra_deps\n-                $( $builder.update_submodule(&Path::new(\"src\").join(\"tools\").join($submodule)); )?\n                 $builder.ensure(ToolBuild {\n                     compiler: $sel.compiler,\n                     target: $sel.target,\n@@ -854,12 +851,12 @@ macro_rules! tool_extended {\n // Note: Most submodule updates for tools are handled by bootstrap.py, since they're needed just to\n // invoke Cargo to build bootstrap. See the comment there for more details.\n tool_extended!((self, builder),\n-    Cargofmt, rustfmt, \"src/tools/rustfmt\", \"cargo-fmt\", stable=true, in_tree=true, {};\n-    CargoClippy, clippy, \"src/tools/clippy\", \"cargo-clippy\", stable=true, in_tree=true, {};\n-    Clippy, clippy, \"src/tools/clippy\", \"clippy-driver\", stable=true, in_tree=true, {};\n-    Miri, miri, \"src/tools/miri\", \"miri\", stable=false, {};\n-    CargoMiri, miri, \"src/tools/miri/cargo-miri\", \"cargo-miri\", stable=false, {};\n-    Rls, rls, \"src/tools/rls\", \"rls\", stable=true, {\n+    Cargofmt, \"src/tools/rustfmt\", \"cargo-fmt\", stable=true, in_tree=true, {};\n+    CargoClippy, \"src/tools/clippy\", \"cargo-clippy\", stable=true, in_tree=true, {};\n+    Clippy, \"src/tools/clippy\", \"clippy-driver\", stable=true, in_tree=true, {};\n+    Miri, \"src/tools/miri\", \"miri\", stable=false, {};\n+    CargoMiri, \"src/tools/miri/cargo-miri\", \"cargo-miri\", stable=false, {};\n+    Rls, \"src/tools/rls\", \"rls\", stable=true, {\n         builder.ensure(Clippy {\n             compiler: self.compiler,\n             target: self.target,\n@@ -870,8 +867,8 @@ tool_extended!((self, builder),\n     // FIXME: tool_std is not quite right, we shouldn't allow nightly features.\n     // But `builder.cargo` doesn't know how to handle ToolBootstrap in stages other than 0,\n     // and this is close enough for now.\n-    RustDemangler, rust_demangler, \"src/tools/rust-demangler\", \"rust-demangler\", stable=false, in_tree=true, tool_std=true, {};\n-    Rustfmt, rustfmt, \"src/tools/rustfmt\", \"rustfmt\", stable=true, in_tree=true, {};\n+    RustDemangler, \"src/tools/rust-demangler\", \"rust-demangler\", stable=false, in_tree=true, tool_std=true, {};\n+    Rustfmt, \"src/tools/rustfmt\", \"rustfmt\", stable=true, in_tree=true, {};\n );\n \n impl<'a> Builder<'a> {"}]}