{"sha": "62f1bb047bdbb02b08e4e50a9716af2da6799241", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyZjFiYjA0N2JkYmIwMmIwOGU0ZTUwYTk3MTZhZjJkYTY3OTkyNDE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-22T09:01:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-22T09:01:17Z"}, "message": "auto merge of #15871 : dotdash/rust/unnamed_fmtstr, r=pcwalton", "tree": {"sha": "55885791d66ad7bc6f4bfeb0b61631ef5be15406", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55885791d66ad7bc6f4bfeb0b61631ef5be15406"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62f1bb047bdbb02b08e4e50a9716af2da6799241", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62f1bb047bdbb02b08e4e50a9716af2da6799241", "html_url": "https://github.com/rust-lang/rust/commit/62f1bb047bdbb02b08e4e50a9716af2da6799241", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62f1bb047bdbb02b08e4e50a9716af2da6799241/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d43e4474aba98d99e2778dcdcd5b0515b7b8176", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d43e4474aba98d99e2778dcdcd5b0515b7b8176", "html_url": "https://github.com/rust-lang/rust/commit/8d43e4474aba98d99e2778dcdcd5b0515b7b8176"}, {"sha": "1654f08e030a59c6438347cd822a82a3da0abbc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/1654f08e030a59c6438347cd822a82a3da0abbc7", "html_url": "https://github.com/rust-lang/rust/commit/1654f08e030a59c6438347cd822a82a3da0abbc7"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "b00924c15901612a509bf93d0f53e7e3d730f5da", "filename": "src/libsyntax/ext/format.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/62f1bb047bdbb02b08e4e50a9716af2da6799241/src%2Flibsyntax%2Fext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62f1bb047bdbb02b08e4e50a9716af2da6799241/src%2Flibsyntax%2Fext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fformat.rs?ref=62f1bb047bdbb02b08e4e50a9716af2da6799241", "patch": "@@ -319,14 +319,19 @@ impl<'a, 'b> Context<'a, 'b> {\n     /// These attributes are applied to all statics that this syntax extension\n     /// will generate.\n     fn static_attrs(&self) -> Vec<ast::Attribute> {\n+        // Flag statics as `inline` so LLVM can merge duplicate globals as much\n+        // as possible (which we're generating a whole lot of).\n+        let unnamed = self.ecx.meta_word(self.fmtsp, InternedString::new(\"inline\"));\n+        let unnamed = self.ecx.attribute(self.fmtsp, unnamed);\n+\n         // Do not warn format string as dead code\n         let dead_code = self.ecx.meta_word(self.fmtsp,\n                                            InternedString::new(\"dead_code\"));\n         let allow_dead_code = self.ecx.meta_list(self.fmtsp,\n                                                  InternedString::new(\"allow\"),\n                                                  vec!(dead_code));\n         let allow_dead_code = self.ecx.attribute(self.fmtsp, allow_dead_code);\n-        return vec!(allow_dead_code);\n+        return vec!(unnamed, allow_dead_code);\n     }\n \n     fn rtpath(&self, s: &str) -> Vec<ast::Ident> {"}]}