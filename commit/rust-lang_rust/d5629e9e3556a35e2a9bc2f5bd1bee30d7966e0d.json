{"sha": "d5629e9e3556a35e2a9bc2f5bd1bee30d7966e0d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1NjI5ZTllMzU1NmEzNWUyYTliYzJmNWJkMWJlZTMwZDc5NjZlMGQ=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-07-08T14:34:26Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-07-08T14:34:26Z"}, "message": "Rollup merge of #26784 - birkenfeld:patch-2, r=steveklabnik\n\n* fix probable copy-paste error in BufWriter.get_mut()\r\n* more consistent punctuation", "tree": {"sha": "a3b38022b679efd5d8497438e958935990ac74cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3b38022b679efd5d8497438e958935990ac74cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5629e9e3556a35e2a9bc2f5bd1bee30d7966e0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5629e9e3556a35e2a9bc2f5bd1bee30d7966e0d", "html_url": "https://github.com/rust-lang/rust/commit/d5629e9e3556a35e2a9bc2f5bd1bee30d7966e0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5629e9e3556a35e2a9bc2f5bd1bee30d7966e0d/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19d8bfff154c830bbe471ddeedfcf197b7458576", "url": "https://api.github.com/repos/rust-lang/rust/commits/19d8bfff154c830bbe471ddeedfcf197b7458576", "html_url": "https://github.com/rust-lang/rust/commit/19d8bfff154c830bbe471ddeedfcf197b7458576"}, {"sha": "df73abedd585a0f797eb393264fc01ff5a442c40", "url": "https://api.github.com/repos/rust-lang/rust/commits/df73abedd585a0f797eb393264fc01ff5a442c40", "html_url": "https://github.com/rust-lang/rust/commit/df73abedd585a0f797eb393264fc01ff5a442c40"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "d389a0be117bb53143028b744337bfd538e2fd55", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d5629e9e3556a35e2a9bc2f5bd1bee30d7966e0d/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5629e9e3556a35e2a9bc2f5bd1bee30d7966e0d/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=d5629e9e3556a35e2a9bc2f5bd1bee30d7966e0d", "patch": "@@ -21,7 +21,7 @@ use io::{self, DEFAULT_BUF_SIZE, Error, ErrorKind, SeekFrom};\n use ptr;\n use iter;\n \n-/// Wraps a `Read` and buffers input from it\n+/// Wraps a `Read` and buffers input from it.\n ///\n /// It can be excessively inefficient to work directly with a `Read` instance.\n /// For example, every call to `read` on `TcpStream` results in a system call.\n@@ -54,13 +54,13 @@ pub struct BufReader<R> {\n }\n \n impl<R: Read> BufReader<R> {\n-    /// Creates a new `BufReader` with a default buffer capacity\n+    /// Creates a new `BufReader` with a default buffer capacity.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn new(inner: R) -> BufReader<R> {\n         BufReader::with_capacity(DEFAULT_BUF_SIZE, inner)\n     }\n \n-    /// Creates a new `BufReader` with the specified buffer capacity\n+    /// Creates a new `BufReader` with the specified buffer capacity.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn with_capacity(cap: usize, inner: R) -> BufReader<R> {\n         let mut buf = Vec::with_capacity(cap);\n@@ -183,7 +183,7 @@ impl<R: Seek> Seek for BufReader<R> {\n     }\n }\n \n-/// Wraps a Writer and buffers output to it\n+/// Wraps a Writer and buffers output to it.\n ///\n /// It can be excessively inefficient to work directly with a `Write`. For\n /// example, every call to `write` on `TcpStream` results in a system call. A\n@@ -205,13 +205,13 @@ pub struct BufWriter<W: Write> {\n pub struct IntoInnerError<W>(W, Error);\n \n impl<W: Write> BufWriter<W> {\n-    /// Creates a new `BufWriter` with a default buffer capacity\n+    /// Creates a new `BufWriter` with a default buffer capacity.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn new(inner: W) -> BufWriter<W> {\n         BufWriter::with_capacity(DEFAULT_BUF_SIZE, inner)\n     }\n \n-    /// Creates a new `BufWriter` with the specified buffer capacity\n+    /// Creates a new `BufWriter` with the specified buffer capacity.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn with_capacity(cap: usize, inner: W) -> BufWriter<W> {\n         BufWriter {\n@@ -253,11 +253,11 @@ impl<W: Write> BufWriter<W> {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn get_ref(&self) -> &W { self.inner.as_ref().unwrap() }\n \n-    /// Gets a mutable reference to the underlying write.\n+    /// Gets a mutable reference to the underlying writer.\n     ///\n     /// # Warning\n     ///\n-    /// It is inadvisable to directly read from the underlying writer.\n+    /// It is inadvisable to directly write to the underlying writer.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn get_mut(&mut self) -> &mut W { self.inner.as_mut().unwrap() }\n "}]}