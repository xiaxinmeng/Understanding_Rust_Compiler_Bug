{"sha": "9d54ebe550167c1c9ef0bad56046a382a04dc604", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkNTRlYmU1NTAxNjdjMWM5ZWYwYmFkNTYwNDZhMzgyYTA0ZGM2MDQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-20T11:31:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-20T11:31:30Z"}, "message": "Auto merge of #43271 - Nashenas88:nll, r=nikomatsakis\n\nAdd empty MIR pass for non-lexical lifetimes\n\nThis is the first step for #43234.", "tree": {"sha": "d209535d3334486959f3789913865fbe03106995", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d209535d3334486959f3789913865fbe03106995"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d54ebe550167c1c9ef0bad56046a382a04dc604", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d54ebe550167c1c9ef0bad56046a382a04dc604", "html_url": "https://github.com/rust-lang/rust/commit/9d54ebe550167c1c9ef0bad56046a382a04dc604", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d54ebe550167c1c9ef0bad56046a382a04dc604/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1edbc3df0d051902916ead8e81db16a6f546f973", "url": "https://api.github.com/repos/rust-lang/rust/commits/1edbc3df0d051902916ead8e81db16a6f546f973", "html_url": "https://github.com/rust-lang/rust/commit/1edbc3df0d051902916ead8e81db16a6f546f973"}, {"sha": "7a966b4328277bc35f9ce264897f2241b2646dcd", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a966b4328277bc35f9ce264897f2241b2646dcd", "html_url": "https://github.com/rust-lang/rust/commit/7a966b4328277bc35f9ce264897f2241b2646dcd"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "3e9ee9b2700a53b8ced2c9630973918415aae7d7", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d54ebe550167c1c9ef0bad56046a382a04dc604/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d54ebe550167c1c9ef0bad56046a382a04dc604/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=9d54ebe550167c1c9ef0bad56046a382a04dc604", "patch": "@@ -1060,6 +1060,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n                      \"insert profiling code\"),\n     relro_level: Option<RelroLevel> = (None, parse_relro_level, [TRACKED],\n         \"choose which RELRO level to use\"),\n+    nll: bool = (false, parse_bool, [UNTRACKED],\n+                 \"run the non-lexical lifetimes MIR pass\"),\n }\n \n pub fn default_lib_output() -> CrateType {"}, {"sha": "7faf78ce638ba0104dce0ba342d35adefbb55337", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9d54ebe550167c1c9ef0bad56046a382a04dc604/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d54ebe550167c1c9ef0bad56046a382a04dc604/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=9d54ebe550167c1c9ef0bad56046a382a04dc604", "patch": "@@ -938,6 +938,7 @@ pub fn phase_3_run_analysis_passes<'tcx, F, R>(sess: &'tcx Session,\n     passes.push_pass(MIR_VALIDATED,\n                      mir::transform::simplify_branches::SimplifyBranches::new(\"initial\"));\n     passes.push_pass(MIR_VALIDATED, mir::transform::simplify::SimplifyCfg::new(\"qualify-consts\"));\n+    passes.push_pass(MIR_VALIDATED, mir::transform::nll::NLL);\n \n     // Optimizations begin.\n     passes.push_pass(MIR_OPTIMIZED, mir::transform::no_landing_pads::NoLandingPads);"}, {"sha": "c9c8ad0e0eb637b111cf2aa06293e2e2f0679112", "filename": "src/librustc_mir/transform/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9d54ebe550167c1c9ef0bad56046a382a04dc604/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d54ebe550167c1c9ef0bad56046a382a04dc604/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fmod.rs?ref=9d54ebe550167c1c9ef0bad56046a382a04dc604", "patch": "@@ -40,6 +40,7 @@ pub mod deaggregator;\n pub mod instcombine;\n pub mod copy_prop;\n pub mod inline;\n+pub mod nll;\n \n pub(crate) fn provide(providers: &mut Providers) {\n     self::qualify_consts::provide(providers);"}, {"sha": "3273b4ff347e562d224844c70954cef3f799d13d", "filename": "src/librustc_mir/transform/nll.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/9d54ebe550167c1c9ef0bad56046a382a04dc604/src%2Flibrustc_mir%2Ftransform%2Fnll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d54ebe550167c1c9ef0bad56046a382a04dc604/src%2Flibrustc_mir%2Ftransform%2Fnll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fnll.rs?ref=9d54ebe550167c1c9ef0bad56046a382a04dc604", "patch": "@@ -0,0 +1,47 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use rustc::ty::TyCtxt;\n+use rustc::mir::Mir;\n+use rustc::mir::visit::MutVisitor;\n+use rustc::mir::transform::{MirPass, MirSource};\n+\n+#[allow(dead_code)]\n+struct NLLVisitor<'a, 'tcx: 'a> {\n+    tcx: TyCtxt<'a, 'tcx, 'tcx>,\n+}\n+\n+impl<'a, 'tcx> NLLVisitor<'a, 'tcx> {\n+    pub fn new(tcx: TyCtxt<'a, 'tcx, 'tcx>) -> Self {\n+        NLLVisitor {\n+            tcx: tcx\n+        }\n+    }\n+}\n+\n+impl<'a, 'tcx> MutVisitor<'tcx> for NLLVisitor<'a, 'tcx> {\n+    // FIXME: Nashenas88: implement me!\n+}\n+\n+// MIR Pass for non-lexical lifetimes\n+pub struct NLL;\n+\n+impl MirPass for NLL {\n+    fn run_pass<'a, 'tcx>(&self,\n+                          tcx: TyCtxt<'a, 'tcx, 'tcx>,\n+                          _: MirSource,\n+                          mir: &mut Mir<'tcx>) {\n+        if tcx.sess.opts.debugging_opts.nll {\n+            // Clone mir so we can mutate it without disturbing the rest\n+            // of the compiler\n+            NLLVisitor::new(tcx).visit_mir(&mut mir.clone());\n+        }\n+    }\n+}\n\\ No newline at end of file"}]}