{"sha": "a53a098b72d40e3dc2f6f843477b907af1049765", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1M2EwOThiNzJkNDBlM2RjMmY2Zjg0MzQ3N2I5MDdhZjEwNDk3NjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-15T18:17:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-15T18:17:22Z"}, "message": "Auto merge of #26293 - mihneadb:rustdoc-search-orphan-methods, r=alexcrichton\n\nIn https://github.com/rust-lang/rust/pull/23289, I did not include the type information for searching for orphan methods (methods that are defined in a module and implemented in another - doing this causes rustdoc sometimes to first find the impl before the actual type).\r\n\r\nThis PR fixes this. By merging this, searches for `char -> bool` will also find `is_alphabetic`, for example (which otherwise was only found for `charext -> bool`).\r\n\r\n\r\ncc @alexcrichton", "tree": {"sha": "432c271ec1b39279855bc2f8ee18b4b21173860e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/432c271ec1b39279855bc2f8ee18b4b21173860e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a53a098b72d40e3dc2f6f843477b907af1049765", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a53a098b72d40e3dc2f6f843477b907af1049765", "html_url": "https://github.com/rust-lang/rust/commit/a53a098b72d40e3dc2f6f843477b907af1049765", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a53a098b72d40e3dc2f6f843477b907af1049765/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9b801582872a72bc234088afc74fa468158ea02", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9b801582872a72bc234088afc74fa468158ea02", "html_url": "https://github.com/rust-lang/rust/commit/d9b801582872a72bc234088afc74fa468158ea02"}, {"sha": "434684bc9e84561f4b7195b9fdf1c0af97389a0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/434684bc9e84561f4b7195b9fdf1c0af97389a0b", "html_url": "https://github.com/rust-lang/rust/commit/434684bc9e84561f4b7195b9fdf1c0af97389a0b"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "0080b5e5f223f6af1b6abf306d9a1b2ad7427a24", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a53a098b72d40e3dc2f6f843477b907af1049765/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a53a098b72d40e3dc2f6f843477b907af1049765/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=a53a098b72d40e3dc2f6f843477b907af1049765", "patch": "@@ -456,13 +456,15 @@ fn build_index(krate: &clean::Crate, cache: &mut Cache) -> io::Result<String> {\n             let did = ast_util::local_def(pid);\n             match paths.get(&did) {\n                 Some(&(ref fqp, _)) => {\n+                    // Needed to determine `self` type.\n+                    let parent_basename = Some(fqp[fqp.len() - 1].clone());\n                     search_index.push(IndexItem {\n                         ty: shortty(item),\n                         name: item.name.clone().unwrap(),\n                         path: fqp[..fqp.len() - 1].connect(\"::\"),\n                         desc: shorter(item.doc_value()),\n                         parent: Some(did),\n-                        search_type: None,\n+                        search_type: get_index_search_type(&item, parent_basename),\n                     });\n                 },\n                 None => {}"}]}