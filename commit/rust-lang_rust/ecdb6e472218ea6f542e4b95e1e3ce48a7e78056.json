{"sha": "ecdb6e472218ea6f542e4b95e1e3ce48a7e78056", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjZGI2ZTQ3MjIxOGVhNmY1NDJlNGI5NWUxZTNjZTQ4YTdlNzgwNTY=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-06-04T19:21:25Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-06-05T19:01:40Z"}, "message": "remove unused get_ident_interner's", "tree": {"sha": "3f9a827b57b76e634cdd80400aceba32fbe345d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f9a827b57b76e634cdd80400aceba32fbe345d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecdb6e472218ea6f542e4b95e1e3ce48a7e78056", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecdb6e472218ea6f542e4b95e1e3ce48a7e78056", "html_url": "https://github.com/rust-lang/rust/commit/ecdb6e472218ea6f542e4b95e1e3ce48a7e78056", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecdb6e472218ea6f542e4b95e1e3ce48a7e78056/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8dad2bb2814fec7f8593f54b5d95e892a09596ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/8dad2bb2814fec7f8593f54b5d95e892a09596ab", "html_url": "https://github.com/rust-lang/rust/commit/8dad2bb2814fec7f8593f54b5d95e892a09596ab"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "1175175c2d6b96cba4cce87a53636896f7238796", "filename": "src/librustdoc/extract.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ecdb6e472218ea6f542e4b95e1e3ce48a7e78056/src%2Flibrustdoc%2Fextract.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecdb6e472218ea6f542e4b95e1e3ce48a7e78056/src%2Flibrustdoc%2Fextract.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fextract.rs?ref=ecdb6e472218ea6f542e4b95e1e3ce48a7e78056", "patch": "@@ -18,7 +18,6 @@ use doc;\n \n use core::vec;\n use syntax::ast;\n-use syntax;\n use syntax::parse::token::{ident_interner, ident_to_str};\n use syntax::parse::token;\n "}, {"sha": "82336addb62fc6ef0d3fb0814712e73fe60f9f9b", "filename": "src/librustdoc/tystr_pass.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ecdb6e472218ea6f542e4b95e1e3ce48a7e78056/src%2Flibrustdoc%2Ftystr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecdb6e472218ea6f542e4b95e1e3ce48a7e78056/src%2Flibrustdoc%2Ftystr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftystr_pass.rs?ref=ecdb6e472218ea6f542e4b95e1e3ce48a7e78056", "patch": "@@ -24,6 +24,7 @@ use pass::Pass;\n use core::vec;\n use syntax::ast;\n use syntax::print::pprust;\n+use syntax::parse::token;\n use syntax::ast_map;\n \n pub fn mk_pass() -> Pass {\n@@ -76,7 +77,7 @@ fn get_fn_sig(srv: astsrv::Srv, fn_id: doc::AstId) -> Option<~str> {\n                 node: ast::foreign_item_fn(ref decl, purity, ref tys), _\n             }, _, _, _) => {\n                 Some(pprust::fun_to_str(decl, purity, ident, None, tys,\n-                                        extract::interner()))\n+                                       token::get_ident_interner()))\n             }\n             _ => fail!(\"get_fn_sig: fn_id not bound to a fn item\")\n         }"}, {"sha": "cc819a00f7d0213607d1551a0841dda54163acae", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ecdb6e472218ea6f542e4b95e1e3ce48a7e78056/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecdb6e472218ea6f542e4b95e1e3ce48a7e78056/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=ecdb6e472218ea6f542e4b95e1e3ce48a7e78056", "patch": "@@ -19,7 +19,7 @@ use diagnostic::span_handler;\n use ext;\n use parse;\n use parse::token;\n-use parse::token::{ident_to_str, intern, get_ident_interner, str_to_ident};\n+use parse::token::{ident_to_str, intern, str_to_ident};\n \n use core::hashmap::HashMap;\n use core::vec;"}, {"sha": "47c22c438a8ae33888a378b3d1e982f0edeae4b0", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ecdb6e472218ea6f542e4b95e1e3ce48a7e78056/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecdb6e472218ea6f542e4b95e1e3ce48a7e78056/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=ecdb6e472218ea6f542e4b95e1e3ce48a7e78056", "patch": "@@ -25,7 +25,7 @@ use ext::base::*;\n use fold::*;\n use parse;\n use parse::{parse_item_from_source_str};\n-use parse::token::{get_ident_interner, ident_to_str, intern};\n+use parse::token::{ident_to_str, intern};\n \n use core::vec;\n \n@@ -217,7 +217,6 @@ pub fn expand_item_mac(extsbox: @mut SyntaxEnv,\n     };\n \n     let extname = &pth.idents[0];\n-    let interner = get_ident_interner();\n     let extnamestr = ident_to_str(extname);\n     let expanded = match (*extsbox).find(&extname.name) {\n         None => cx.span_fatal(pth.span,\n@@ -735,7 +734,7 @@ mod test {\n     use codemap;\n     use codemap::spanned;\n     use parse;\n-    use parse::token::{gensym, get_ident_interner};\n+    use parse::token::{gensym};\n     use core::io;\n     use core::option::{None, Some};\n     use util::parser_testing::{string_to_item, string_to_pat, strs_to_idents};"}, {"sha": "7f7e607d37f84207996feb39f2aa69de0a1881c9", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ecdb6e472218ea6f542e4b95e1e3ce48a7e78056/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecdb6e472218ea6f542e4b95e1e3ce48a7e78056/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=ecdb6e472218ea6f542e4b95e1e3ce48a7e78056", "patch": "@@ -341,9 +341,10 @@ mod test {\n     use codemap::{span, BytePos, spanned};\n     use opt_vec;\n     use ast;\n+    use ast::{new_ident};\n     use abi;\n     use parse::parser::Parser;\n-    use parse::token::{str_to_ident};\n+    use parse::token::{intern, str_to_ident};\n     use util::parser_testing::{string_to_tts_and_sess, string_to_parser};\n     use util::parser_testing::{string_to_expr, string_to_item};\n     use util::parser_testing::{string_to_stmt};"}]}