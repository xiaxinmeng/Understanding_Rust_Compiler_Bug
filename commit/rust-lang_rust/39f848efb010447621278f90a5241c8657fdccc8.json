{"sha": "39f848efb010447621278f90a5241c8657fdccc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5Zjg0OGVmYjAxMDQ0NzYyMTI3OGY5MGE1MjQxYzg2NTdmZGNjYzg=", "commit": {"author": {"name": "Maxim Zholobak", "email": "ghostcheka@gmail.com", "date": "2017-11-23T13:10:23Z"}, "committer": {"name": "Maxim Zholobak", "email": "ghostcheka@gmail.com", "date": "2017-11-23T13:10:23Z"}, "message": "Add module population and case of enum in place of expression", "tree": {"sha": "943719f7e40cab2c2c13d53297161da1f0327d14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/943719f7e40cab2c2c13d53297161da1f0327d14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39f848efb010447621278f90a5241c8657fdccc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39f848efb010447621278f90a5241c8657fdccc8", "html_url": "https://github.com/rust-lang/rust/commit/39f848efb010447621278f90a5241c8657fdccc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39f848efb010447621278f90a5241c8657fdccc8/comments", "author": {"login": "Menschenkindlein", "id": 581380, "node_id": "MDQ6VXNlcjU4MTM4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/581380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Menschenkindlein", "html_url": "https://github.com/Menschenkindlein", "followers_url": "https://api.github.com/users/Menschenkindlein/followers", "following_url": "https://api.github.com/users/Menschenkindlein/following{/other_user}", "gists_url": "https://api.github.com/users/Menschenkindlein/gists{/gist_id}", "starred_url": "https://api.github.com/users/Menschenkindlein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Menschenkindlein/subscriptions", "organizations_url": "https://api.github.com/users/Menschenkindlein/orgs", "repos_url": "https://api.github.com/users/Menschenkindlein/repos", "events_url": "https://api.github.com/users/Menschenkindlein/events{/privacy}", "received_events_url": "https://api.github.com/users/Menschenkindlein/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Menschenkindlein", "id": 581380, "node_id": "MDQ6VXNlcjU4MTM4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/581380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Menschenkindlein", "html_url": "https://github.com/Menschenkindlein", "followers_url": "https://api.github.com/users/Menschenkindlein/followers", "following_url": "https://api.github.com/users/Menschenkindlein/following{/other_user}", "gists_url": "https://api.github.com/users/Menschenkindlein/gists{/gist_id}", "starred_url": "https://api.github.com/users/Menschenkindlein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Menschenkindlein/subscriptions", "organizations_url": "https://api.github.com/users/Menschenkindlein/orgs", "repos_url": "https://api.github.com/users/Menschenkindlein/repos", "events_url": "https://api.github.com/users/Menschenkindlein/events{/privacy}", "received_events_url": "https://api.github.com/users/Menschenkindlein/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08c81c1a797322c68479263f5600eed8c6c2aabe", "url": "https://api.github.com/repos/rust-lang/rust/commits/08c81c1a797322c68479263f5600eed8c6c2aabe", "html_url": "https://github.com/rust-lang/rust/commit/08c81c1a797322c68479263f5600eed8c6c2aabe"}], "stats": {"total": 40, "additions": 31, "deletions": 9}, "files": [{"sha": "fb9ba9a09bbefd5b75660ebc220373fea6d9604b", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/39f848efb010447621278f90a5241c8657fdccc8/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39f848efb010447621278f90a5241c8657fdccc8/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=39f848efb010447621278f90a5241c8657fdccc8", "patch": "@@ -2599,13 +2599,14 @@ impl<'a> Resolver<'a> {\n                         }\n                         _ => {}\n                     },\n-                    (Def::Enum(..), PathSource::TupleStruct) => {\n+                    (Def::Enum(..), PathSource::TupleStruct)\n+                        | (Def::Enum(..), PathSource::Expr(..))  => {\n                         if let Some(variants) = this.collect_enum_variants(def) {\n                             err.note(&format!(\"did you mean to use one \\\n                                                of the following variants?\\n{}\",\n                                 variants.iter()\n-                                    .map(|suggestion| format!(\"- `{}`\",\n-                                                              path_names_to_string(suggestion)))\n+                                    .map(|suggestion| path_names_to_string(suggestion))\n+                                    .map(|suggestion| format!(\"- `{}`\", suggestion))\n                                     .collect::<Vec<_>>()\n                                     .join(\"\\n\")));\n \n@@ -3559,6 +3560,8 @@ impl<'a> Resolver<'a> {\n         }\n \n         self.find_module(enum_def).map(|(enum_module, enum_import_suggestion)| {\n+            self.populate_module_if_necessary(enum_module);\n+\n             let mut variants = Vec::new();\n             enum_module.for_each_child_stable(|ident, _, name_binding| {\n                 if let Def::Variant(..) = name_binding.def() {"}, {"sha": "923b0984d063bb480fd376f50c827579e28f3fdd", "filename": "src/test/ui/did_you_mean/issue-43871-enum-instead-of-variant.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/39f848efb010447621278f90a5241c8657fdccc8/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39f848efb010447621278f90a5241c8657fdccc8/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.rs?ref=39f848efb010447621278f90a5241c8657fdccc8", "patch": "@@ -8,12 +8,20 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+enum Example { Ex(String), NotEx }\n+\n fn result_test() {\n     let x = Option(1);\n \n     if let Option(_) = x {\n         println!(\"It is OK.\");\n     }\n+\n+    let y = Example::Ex(String::from(\"test\"));\n+\n+    if let Example(_) = y {\n+        println!(\"It is OK.\");\n+    }\n }\n \n fn main() {}"}, {"sha": "8371413c5a2525c0d4f94e872da6cd826efb5d92", "filename": "src/test/ui/did_you_mean/issue-43871-enum-instead-of-variant.stderr", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/39f848efb010447621278f90a5241c8657fdccc8/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39f848efb010447621278f90a5241c8657fdccc8/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.stderr?ref=39f848efb010447621278f90a5241c8657fdccc8", "patch": "@@ -1,21 +1,32 @@\n error[E0423]: expected function, found enum `Option`\n-  --> $DIR/issue-43871-enum-instead-of-variant.rs:12:13\n+  --> $DIR/issue-43871-enum-instead-of-variant.rs:14:13\n+   |\n+14 |     let x = Option(1);\n+   |             ^^^^^^\n    |\n-12 |     let x = Option(1);\n-   |             ^^^^^^ not a function\n    = note: did you mean to use one of the following variants?\n            - `std::prelude::v1::Option::None`\n            - `std::prelude::v1::Option::Some`\n \n error[E0532]: expected tuple struct/variant, found enum `Option`\n-  --> $DIR/issue-43871-enum-instead-of-variant.rs:14:12\n+  --> $DIR/issue-43871-enum-instead-of-variant.rs:16:12\n    |\n-14 |     if let Option(_) = x {\n+16 |     if let Option(_) = x {\n    |            ^^^^^^\n    |\n    = note: did you mean to use one of the following variants?\n            - `std::prelude::v1::Option::None`\n            - `std::prelude::v1::Option::Some`\n \n-error: aborting due to previous error\n+error[E0532]: expected tuple struct/variant, found enum `Example`\n+  --> $DIR/issue-43871-enum-instead-of-variant.rs:22:12\n+   |\n+22 |     if let Example(_) = y {\n+   |            ^^^^^^^\n+   |\n+   = note: did you mean to use one of the following variants?\n+           - `Example::Ex`\n+           - `Example::NotEx`\n+\n+error: aborting due to 3 previous errors\n "}]}