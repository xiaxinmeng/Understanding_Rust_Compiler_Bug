{"sha": "0b38596e8811adb1a69e1a43e6f51cdebc0e4f9b", "node_id": "C_kwDOAAsO6NoAKDBiMzg1OTZlODgxMWFkYjFhNjllMWE0M2U2ZjUxY2RlYmMwZTRmOWI", "commit": {"author": {"name": "Miguel Guarniz", "email": "mi9uel9@gmail.com", "date": "2022-04-09T17:58:46Z"}, "committer": {"name": "Miguel Guarniz", "email": "mi9uel9@gmail.com", "date": "2022-04-09T17:58:46Z"}, "message": "use ItemId.def_id and avoid fetching Item", "tree": {"sha": "b3fb446288a27d7737dfc5301b48800617acde03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3fb446288a27d7737dfc5301b48800617acde03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b38596e8811adb1a69e1a43e6f51cdebc0e4f9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b38596e8811adb1a69e1a43e6f51cdebc0e4f9b", "html_url": "https://github.com/rust-lang/rust/commit/0b38596e8811adb1a69e1a43e6f51cdebc0e4f9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b38596e8811adb1a69e1a43e6f51cdebc0e4f9b/comments", "author": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f983d2658ba88e1ef2a0f21fbeef842a91d49d1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f983d2658ba88e1ef2a0f21fbeef842a91d49d1b", "html_url": "https://github.com/rust-lang/rust/commit/f983d2658ba88e1ef2a0f21fbeef842a91d49d1b"}], "stats": {"total": 28, "additions": 12, "deletions": 16}, "files": [{"sha": "51bba3ddcf746c53f87531561ed6ee229a98bd0c", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 12, "deletions": 16, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/0b38596e8811adb1a69e1a43e6f51cdebc0e4f9b/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b38596e8811adb1a69e1a43e6f51cdebc0e4f9b/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=0b38596e8811adb1a69e1a43e6f51cdebc0e4f9b", "patch": "@@ -1787,23 +1787,19 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n             FxHashMap::default();\n \n         for id in tcx.hir().items() {\n-            match tcx.hir().def_kind(id.def_id) {\n-                DefKind::Impl => {\n-                    let item = tcx.hir().item(id);\n-                    if let Some(trait_ref) = tcx.impl_trait_ref(item.def_id.to_def_id()) {\n-                        let simplified_self_ty = fast_reject::simplify_type(\n-                            self.tcx,\n-                            trait_ref.self_ty(),\n-                            TreatParams::AsPlaceholders,\n-                        );\n-\n-                        fx_hash_map\n-                            .entry(trait_ref.def_id)\n-                            .or_default()\n-                            .push((item.def_id.local_def_index, simplified_self_ty));\n-                    }\n+            if matches!(tcx.hir().def_kind(id.def_id), DefKind::Impl) {\n+                if let Some(trait_ref) = tcx.impl_trait_ref(id.def_id.to_def_id()) {\n+                    let simplified_self_ty = fast_reject::simplify_type(\n+                        self.tcx,\n+                        trait_ref.self_ty(),\n+                        TreatParams::AsPlaceholders,\n+                    );\n+\n+                    fx_hash_map\n+                        .entry(trait_ref.def_id)\n+                        .or_default()\n+                        .push((id.def_id.local_def_index, simplified_self_ty));\n                 }\n-                _ => continue,\n             }\n         }\n "}]}