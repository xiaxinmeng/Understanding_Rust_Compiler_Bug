{"sha": "ecf2a9b75ec591db6e89f4bde391b87f35c2ea08", "node_id": "C_kwDOAAsO6NoAKGVjZjJhOWI3NWVjNTkxZGI2ZTg5ZjRiZGUzOTFiODdmMzVjMmVhMDg", "commit": {"author": {"name": "Ezra Shaw", "email": "ezrasure@outlook.com", "date": "2023-04-13T08:29:41Z"}, "committer": {"name": "Ezra Shaw", "email": "ezrasure@outlook.com", "date": "2023-04-13T08:29:41Z"}, "message": "fix: skip implied bounds if unconstrained lifetime exists", "tree": {"sha": "a69def31d66dee17d3f9f2d1f633804206b58ea9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a69def31d66dee17d3f9f2d1f633804206b58ea9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecf2a9b75ec591db6e89f4bde391b87f35c2ea08", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEINUdoc4Vb1yVx04IZ6vxb7Ds2HAFAmQ3vYsACgkQZ6vxb7Ds\n2HCmaBAAhfTwRuH/ZaucJWwBugUQd2ECldNR9Ges5dzE9SCPqW2lB9exirgpqLkt\nqV3JiaCAnM6ICXvVUJGZSk/iApe5qYP8sizFd2nLn9r4Qbw18V7ChTmFFow+T+6i\n3AWPsbTspwUrpJJh65iso24e0NnUriBr4DFpa+Q414bSVp79TK5ZgSHbtuyySRRi\navurkbc++kQh+1c/y6EsZXcDOOaEwgT0k4wm2wW2k5kVwYwHst0p18gwGPEpwyl6\nKTMdabr1VDN4JERmCuJLFSGUmZoizC9fSR5nxJoGr9MmxN2czDt20+ToUr6vGgsN\nXU6Xb3KNw5/j1cZsHVX89BA1XoRF5M3UC7rBKN1l0UKykjVdjZkNqOoDZR+Zsvtq\neszcW9XfNl335pszDcoQF6V4B/QCsGU7vaDKToU6/lWBOvDP0u9+iASZqZUanuj3\nZYcdkm46I7EVPju9BJZr4JlfFYUphXAS7KA9K2rQd7ubfOiCaTiOeuIalT3GloGR\nGgGqlb+8Tw1UDeh1+jz5zEVJ6XzSgfA6sxw1PYalTpz/zCBhAeWu++XvRAO7RxdG\npnU4fG2YWxiHgCuzZKG5zOyBR7UevKneIC7cmQ46klnjeYn+uhISSHVVAEBBb74W\nOrJft9/TOl5bAAXSgDdZZFmHgrdPFbioQra9foFJmh4Dk11RbZQ=\n=fuW4\n-----END PGP SIGNATURE-----", "payload": "tree a69def31d66dee17d3f9f2d1f633804206b58ea9\nparent a29dada983fa8d44f789d3a64408b7ad4f4c3487\nauthor Ezra Shaw <ezrasure@outlook.com> 1681374581 +1200\ncommitter Ezra Shaw <ezrasure@outlook.com> 1681374581 +1200\n\nfix: skip implied bounds if unconstrained lifetime exists\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecf2a9b75ec591db6e89f4bde391b87f35c2ea08", "html_url": "https://github.com/rust-lang/rust/commit/ecf2a9b75ec591db6e89f4bde391b87f35c2ea08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecf2a9b75ec591db6e89f4bde391b87f35c2ea08/comments", "author": {"login": "Ezrashaw", "id": 38062690, "node_id": "MDQ6VXNlcjM4MDYyNjkw", "avatar_url": "https://avatars.githubusercontent.com/u/38062690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ezrashaw", "html_url": "https://github.com/Ezrashaw", "followers_url": "https://api.github.com/users/Ezrashaw/followers", "following_url": "https://api.github.com/users/Ezrashaw/following{/other_user}", "gists_url": "https://api.github.com/users/Ezrashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ezrashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ezrashaw/subscriptions", "organizations_url": "https://api.github.com/users/Ezrashaw/orgs", "repos_url": "https://api.github.com/users/Ezrashaw/repos", "events_url": "https://api.github.com/users/Ezrashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/Ezrashaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ezrashaw", "id": 38062690, "node_id": "MDQ6VXNlcjM4MDYyNjkw", "avatar_url": "https://avatars.githubusercontent.com/u/38062690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ezrashaw", "html_url": "https://github.com/Ezrashaw", "followers_url": "https://api.github.com/users/Ezrashaw/followers", "following_url": "https://api.github.com/users/Ezrashaw/following{/other_user}", "gists_url": "https://api.github.com/users/Ezrashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ezrashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ezrashaw/subscriptions", "organizations_url": "https://api.github.com/users/Ezrashaw/orgs", "repos_url": "https://api.github.com/users/Ezrashaw/repos", "events_url": "https://api.github.com/users/Ezrashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/Ezrashaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a29dada983fa8d44f789d3a64408b7ad4f4c3487", "url": "https://api.github.com/repos/rust-lang/rust/commits/a29dada983fa8d44f789d3a64408b7ad4f4c3487", "html_url": "https://github.com/rust-lang/rust/commit/a29dada983fa8d44f789d3a64408b7ad4f4c3487"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "64be4a55708adf83e11dc2f5436995881aeb1a99", "filename": "compiler/rustc_trait_selection/src/traits/outlives_bounds.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ecf2a9b75ec591db6e89f4bde391b87f35c2ea08/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Foutlives_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecf2a9b75ec591db6e89f4bde391b87f35c2ea08/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Foutlives_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Foutlives_bounds.rs?ref=ecf2a9b75ec591db6e89f4bde391b87f35c2ea08", "patch": "@@ -55,7 +55,16 @@ impl<'a, 'tcx: 'a> InferCtxtExt<'a, 'tcx> for InferCtxt<'tcx> {\n     ) -> Vec<OutlivesBound<'tcx>> {\n         let ty = self.resolve_vars_if_possible(ty);\n         let ty = OpportunisticRegionResolver::new(self).fold_ty(ty);\n-        assert!(!ty.needs_infer());\n+\n+        // We must avoid processing constrained lifetime variables in implied\n+        // bounds. See #110161 for context.\n+        if ty.needs_infer() {\n+            self.tcx.sess.delay_span_bug(\n+                self.tcx.source_span_untracked(body_id),\n+                \"skipped implied_outlives_bounds due to unconstrained lifetimes\",\n+            );\n+            return vec![];\n+        }\n \n         let span = self.tcx.def_span(body_id);\n         let result = param_env"}, {"sha": "ca75026ffe84239c1d2ced83fdb3050fb4b86bf7", "filename": "tests/ui/implied-bounds/issue-110161.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ecf2a9b75ec591db6e89f4bde391b87f35c2ea08/tests%2Fui%2Fimplied-bounds%2Fissue-110161.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecf2a9b75ec591db6e89f4bde391b87f35c2ea08/tests%2Fui%2Fimplied-bounds%2Fissue-110161.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplied-bounds%2Fissue-110161.rs?ref=ecf2a9b75ec591db6e89f4bde391b87f35c2ea08", "patch": "@@ -0,0 +1,24 @@\n+// ICE regression relating to unconstrained lifetimes in implied\n+// bounds. See #110161.\n+\n+// compile-flags: --crate-type=lib\n+\n+trait Trait {\n+    type Ty;\n+}\n+\n+// erroneous `Ty` impl\n+impl Trait for () {\n+//~^ ERROR not all trait items implemented, missing: `Ty` [E0046]\n+}\n+\n+// `'lt` is not constrained by the erroneous `Ty`\n+impl<'lt, T> Trait for Box<T>\n+where\n+    T: Trait<Ty = &'lt ()>,\n+{\n+    type Ty = &'lt ();\n+}\n+\n+// unconstrained lifetime appears in implied bounds\n+fn test(_: <Box<()> as Trait>::Ty) {}"}, {"sha": "c76b47376264e42cb7e70d304a29023f4d907a45", "filename": "tests/ui/implied-bounds/issue-110161.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ecf2a9b75ec591db6e89f4bde391b87f35c2ea08/tests%2Fui%2Fimplied-bounds%2Fissue-110161.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ecf2a9b75ec591db6e89f4bde391b87f35c2ea08/tests%2Fui%2Fimplied-bounds%2Fissue-110161.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplied-bounds%2Fissue-110161.stderr?ref=ecf2a9b75ec591db6e89f4bde391b87f35c2ea08", "patch": "@@ -0,0 +1,12 @@\n+error[E0046]: not all trait items implemented, missing: `Ty`\n+  --> $DIR/issue-110161.rs:11:1\n+   |\n+LL |     type Ty;\n+   |     ------- `Ty` from trait\n+...\n+LL | impl Trait for () {\n+   | ^^^^^^^^^^^^^^^^^ missing `Ty` in implementation\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0046`."}]}