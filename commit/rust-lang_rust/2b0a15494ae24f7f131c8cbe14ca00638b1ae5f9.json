{"sha": "2b0a15494ae24f7f131c8cbe14ca00638b1ae5f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiMGExNTQ5NGFlMjRmN2YxMzFjOGNiZTE0Y2EwMDYzOGIxYWU1Zjk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-08-04T21:15:47Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-08-04T21:37:06Z"}, "message": "rustdoc: Put field instantiation in declaration order.\n\ncc #12466", "tree": {"sha": "fe99b5f5b071c3c92bafb0b366c419db3fed575b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe99b5f5b071c3c92bafb0b366c419db3fed575b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b0a15494ae24f7f131c8cbe14ca00638b1ae5f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b0a15494ae24f7f131c8cbe14ca00638b1ae5f9", "html_url": "https://github.com/rust-lang/rust/commit/2b0a15494ae24f7f131c8cbe14ca00638b1ae5f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b0a15494ae24f7f131c8cbe14ca00638b1ae5f9/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08d44f5512e624eadfedf32d41f19ece13dd5fb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/08d44f5512e624eadfedf32d41f19ece13dd5fb4", "html_url": "https://github.com/rust-lang/rust/commit/08d44f5512e624eadfedf32d41f19ece13dd5fb4"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "d35d074daeadbf9de0b3a277df753fdb7218d66f", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2b0a15494ae24f7f131c8cbe14ca00638b1ae5f9/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b0a15494ae24f7f131c8cbe14ca00638b1ae5f9/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=2b0a15494ae24f7f131c8cbe14ca00638b1ae5f9", "patch": "@@ -745,9 +745,9 @@ impl<'a> SourceCollector<'a> {\n         let desc = format!(\"Source to the Rust file `{}`.\", filename);\n         let page = layout::Page {\n             title: title.as_slice(),\n-            description: desc.as_slice(),\n             ty: \"source\",\n             root_path: root_path.as_slice(),\n+            description: desc.as_slice(),\n         };\n         try!(layout::render(&mut w as &mut Writer, &self.cx.layout,\n                             &page, &(\"\"), &Source(contents)));\n@@ -1078,9 +1078,9 @@ impl Context {\n                                this.layout.krate);\n             let page = layout::Page {\n                 ty: \"mod\",\n-                description: desc.as_slice(),\n                 root_path: this.root_path.as_slice(),\n                 title: title.as_slice(),\n+                description: desc.as_slice(),\n             };\n             let html_dst = &this.dst.join(\"stability.html\");\n             let mut html_out = BufferedWriter::new(try!(File::create(html_dst)));\n@@ -1139,9 +1139,9 @@ impl Context {\n             };\n             let page = layout::Page {\n                 ty: tyname,\n-                description: desc.as_slice(),\n                 root_path: cx.root_path.as_slice(),\n                 title: title.as_slice(),\n+                description: desc.as_slice(),\n             };\n \n             markdown::reset_headers();"}]}