{"sha": "8cd6633499a17f861c79952887754864081cfa29", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjZDY2MzM0OTlhMTdmODYxYzc5OTUyODg3NzU0ODY0MDgxY2ZhMjk=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-08-06T07:34:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-06T07:34:44Z"}, "message": "Merge pull request #2892 from topecongiro/issue-2884\n\nExplicitly handle semicolon after the item in statement position", "tree": {"sha": "23594eef12fee0afb94c44fa9a4bfe485ee47a49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23594eef12fee0afb94c44fa9a4bfe485ee47a49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cd6633499a17f861c79952887754864081cfa29", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbZ/oUCRBK7hj4Ov3rIwAAdHIIAGpVlunopbZM5zZvyjGIMJr9\nGQ0KxqVRoxB3FbKWWKNl9wAuH7wgToZr5dR5mLM5y+L60pk8jJ2rQwmeqkD+/7OF\nhk97oweqsMVWAtLpw3vZHADv5+QW+OK+7ixkFIq+FDuJlb+t29Fbc1j3H28v0LFN\nRs87dKnQGlBcQFWvlqbIBCyUamkbsn9Phb33uiLAaCL0gWMSKIC03OExxptppaOg\nwoX0BN6WBxdaHiwkTeqPxjTEue+puBL+lXXFw8h3EKQzkI8kEfloQ2vjQp5RcLTS\nFFa57oe0GAn1n4iocqx+W5rdFfZaRQsKW82DeFeeHwWlxpLqdknszqGucJsKTvE=\n=mE9+\n-----END PGP SIGNATURE-----\n", "payload": "tree 23594eef12fee0afb94c44fa9a4bfe485ee47a49\nparent f6a76c443e7dbae08e43d4f7746474f61ba49ae0\nparent d96e3ca604a1299b7688e4008e28b76fb525f2be\nauthor Nick Cameron <nrc@ncameron.org> 1533540884 +1200\ncommitter GitHub <noreply@github.com> 1533540884 +1200\n\nMerge pull request #2892 from topecongiro/issue-2884\n\nExplicitly handle semicolon after the item in statement position"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cd6633499a17f861c79952887754864081cfa29", "html_url": "https://github.com/rust-lang/rust/commit/8cd6633499a17f861c79952887754864081cfa29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cd6633499a17f861c79952887754864081cfa29/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6a76c443e7dbae08e43d4f7746474f61ba49ae0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6a76c443e7dbae08e43d4f7746474f61ba49ae0", "html_url": "https://github.com/rust-lang/rust/commit/f6a76c443e7dbae08e43d4f7746474f61ba49ae0"}, {"sha": "d96e3ca604a1299b7688e4008e28b76fb525f2be", "url": "https://api.github.com/repos/rust-lang/rust/commits/d96e3ca604a1299b7688e4008e28b76fb525f2be", "html_url": "https://github.com/rust-lang/rust/commit/d96e3ca604a1299b7688e4008e28b76fb525f2be"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "c80cd78a992b1f2c85896b7dc87d5782caa42eda", "filename": "src/visitor.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8cd6633499a17f861c79952887754864081cfa29/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cd6633499a17f861c79952887754864081cfa29/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=8cd6633499a17f861c79952887754864081cfa29", "patch": "@@ -90,6 +90,8 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n         match stmt.node {\n             ast::StmtKind::Item(ref item) => {\n                 self.visit_item(item);\n+                // Handle potential `;` after the item.\n+                self.format_missing(stmt.span.hi());\n             }\n             ast::StmtKind::Local(..) | ast::StmtKind::Expr(..) | ast::StmtKind::Semi(..) => {\n                 if contains_skip(get_attrs_from_stmt(stmt)) {"}, {"sha": "56f90808ab7963d3b37870ab2d06c2b2ff35f564", "filename": "tests/source/expr.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8cd6633499a17f861c79952887754864081cfa29/tests%2Fsource%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cd6633499a17f861c79952887754864081cfa29/tests%2Fsource%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fexpr.rs?ref=8cd6633499a17f861c79952887754864081cfa29", "patch": "@@ -60,6 +60,9 @@ some_ridiculously_loooooooooooooooooooooong_function(10000 * 30000000000 + 40000\n         // Check subformatting\n         aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa + aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n     }\n+\n+    // #2884\n+    let _ = [0; {struct Foo; impl Foo {const fn get(&self) -> usize {5}}; Foo.get()}];\n }\n \n fn bar() {"}, {"sha": "370e31bdabec82b7da3ac24553aa8bba2fa0f4e7", "filename": "tests/target/expr.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8cd6633499a17f861c79952887754864081cfa29/tests%2Ftarget%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cd6633499a17f861c79952887754864081cfa29/tests%2Ftarget%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr.rs?ref=8cd6633499a17f861c79952887754864081cfa29", "patch": "@@ -88,6 +88,17 @@ fn foo() -> bool {\n         aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n             + aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n     }\n+\n+    // #2884\n+    let _ = [0; {\n+        struct Foo;\n+        impl Foo {\n+            const fn get(&self) -> usize {\n+                5\n+            }\n+        };\n+        Foo.get()\n+    }];\n }\n \n fn bar() {"}]}