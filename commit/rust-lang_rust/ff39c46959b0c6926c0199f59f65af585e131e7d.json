{"sha": "ff39c46959b0c6926c0199f59f65af585e131e7d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmMzljNDY5NTliMGM2OTI2YzAxOTlmNTlmNjVhZjU4NWUxMzFlN2Q=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-03-02T00:30:58Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-03-06T03:41:27Z"}, "message": "Box some fields to reduce `Context` size\n\nReduced from 152 bytes to 88 bytes.", "tree": {"sha": "07b0e7194fbe0a23adcd6df54754d9fadfa33268", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07b0e7194fbe0a23adcd6df54754d9fadfa33268"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff39c46959b0c6926c0199f59f65af585e131e7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff39c46959b0c6926c0199f59f65af585e131e7d", "html_url": "https://github.com/rust-lang/rust/commit/ff39c46959b0c6926c0199f59f65af585e131e7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff39c46959b0c6926c0199f59f65af585e131e7d/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c51a66d674c32b3d8eeebcd1ae276611e9f4c12", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c51a66d674c32b3d8eeebcd1ae276611e9f4c12", "html_url": "https://github.com/rust-lang/rust/commit/4c51a66d674c32b3d8eeebcd1ae276611e9f4c12"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "23c2a92510590191e2332c8e55b4f50f869685f8", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ff39c46959b0c6926c0199f59f65af585e131e7d/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff39c46959b0c6926c0199f59f65af585e131e7d/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=ff39c46959b0c6926c0199f59f65af585e131e7d", "patch": "@@ -53,10 +53,10 @@ crate struct Context<'tcx> {\n     /// publicly reused items to redirect to the right location.\n     pub(super) render_redirect_pages: bool,\n     /// The map used to ensure all generated 'id=' attributes are unique.\n-    pub(super) id_map: RefCell<IdMap>,\n+    pub(super) id_map: Box<RefCell<IdMap>>,\n     /// Tracks section IDs for `Deref` targets so they match in both the main\n     /// body and the sidebar.\n-    pub(super) deref_id_map: RefCell<FxHashMap<DefId, String>>,\n+    pub(super) deref_id_map: Box<RefCell<FxHashMap<DefId, String>>>,\n     /// Shared mutable state.\n     ///\n     /// Issue for improving the situation: [#82381][]\n@@ -77,7 +77,7 @@ crate struct Context<'tcx> {\n \n // `Context` is cloned a lot, so we don't want the size to grow unexpectedly.\n #[cfg(target_arch = \"x86_64\")]\n-rustc_data_structures::static_assert_size!(Context<'_>, 152);\n+rustc_data_structures::static_assert_size!(Context<'_>, 88);\n \n impl<'tcx> Context<'tcx> {\n     pub(super) fn path(&self, filename: &str) -> PathBuf {\n@@ -421,8 +421,8 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n             current: Vec::new(),\n             dst,\n             render_redirect_pages: false,\n-            id_map: RefCell::new(id_map),\n-            deref_id_map: RefCell::new(FxHashMap::default()),\n+            id_map: Box::new(RefCell::new(id_map)),\n+            deref_id_map: Box::new(RefCell::new(FxHashMap::default())),\n             shared: Rc::new(scx),\n             cache: Rc::new(cache),\n         };"}]}