{"sha": "8455468d0d0a253e5c0bbce5410b6976c84dbd02", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0NTU0NjhkMGQwYTI1M2U1YzBiYmNlNTQxMGI2OTc2Yzg0ZGJkMDI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-10-12T14:04:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-10-12T14:04:00Z"}, "message": "Rollup merge of #54755 - lucasloisp:document-reference-address-eq, r=QuietMisdreavus\n\nDocuments reference equality by address (#54197)\n\nClarification of the use of `ptr::eq` to test equality of references via address by pointer coercion,  regarding issue #54197 .\n\nThe same example as in `ptr::eq` docs is shown here to clarify that\n`PartialEq` compares values pointed-to instead of via address (which can be desired in some cases)", "tree": {"sha": "00c8ee5ff503fd1806a906d6bc2ce86fc3031d71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00c8ee5ff503fd1806a906d6bc2ce86fc3031d71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8455468d0d0a253e5c0bbce5410b6976c84dbd02", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbwKnQCRBK7hj4Ov3rIwAAdHIIAB9xUeW/W8JT2Y5Nb0GvKrWh\nVFrm41ZUf2JMqcVFajIWh0Ybz9DqiXcLnTUXFS9sfdp3uAJ1zq63eDdrtROeuKae\nOtIKuKJtXbFXAtyXzmjfIvUCzgGDCvmA53vd95UP3uC9lsWSK6EQEWrz4gt2I0Xq\nddjm13F16j3DPMXQ+fJNeKZ+kfxn7qGUL98Q+5XPEhHONNUcrJCfcB9nWd/Ttoz+\n+pzOGnYQLaWxPk/83QDFlSRELA5kIjBO6YqzGJ/orN+ej647Ymb3wGkpXZKE0CgR\nYIR0i1lgeZXCqIqztQT6zwliGcO31w4fRL3NIA9MvXa8DBQWn9LlrQQIVkRI3iM=\n=sgp+\n-----END PGP SIGNATURE-----\n", "payload": "tree 00c8ee5ff503fd1806a906d6bc2ce86fc3031d71\nparent 849a0e9c40ef79efec0802334fe10406ea3e7256\nparent 68236e088d8b5694eb4097c1ad8302b92e36fd4a\nauthor kennytm <kennytm@gmail.com> 1539353040 +0800\ncommitter GitHub <noreply@github.com> 1539353040 +0800\n\nRollup merge of #54755 - lucasloisp:document-reference-address-eq, r=QuietMisdreavus\n\nDocuments reference equality by address (#54197)\n\nClarification of the use of `ptr::eq` to test equality of references via address by pointer coercion,  regarding issue #54197 .\n\nThe same example as in `ptr::eq` docs is shown here to clarify that\n`PartialEq` compares values pointed-to instead of via address (which can be desired in some cases)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8455468d0d0a253e5c0bbce5410b6976c84dbd02", "html_url": "https://github.com/rust-lang/rust/commit/8455468d0d0a253e5c0bbce5410b6976c84dbd02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8455468d0d0a253e5c0bbce5410b6976c84dbd02/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "849a0e9c40ef79efec0802334fe10406ea3e7256", "url": "https://api.github.com/repos/rust-lang/rust/commits/849a0e9c40ef79efec0802334fe10406ea3e7256", "html_url": "https://github.com/rust-lang/rust/commit/849a0e9c40ef79efec0802334fe10406ea3e7256"}, {"sha": "68236e088d8b5694eb4097c1ad8302b92e36fd4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/68236e088d8b5694eb4097c1ad8302b92e36fd4a", "html_url": "https://github.com/rust-lang/rust/commit/68236e088d8b5694eb4097c1ad8302b92e36fd4a"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "3b432d05132095adc8206d36e022275c51ebb321", "filename": "src/libstd/primitive_docs.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/8455468d0d0a253e5c0bbce5410b6976c84dbd02/src%2Flibstd%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8455468d0d0a253e5c0bbce5410b6976c84dbd02/src%2Flibstd%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprimitive_docs.rs?ref=8455468d0d0a253e5c0bbce5410b6976c84dbd02", "patch": "@@ -908,11 +908,36 @@ mod prim_usize { }\n /// `&mut T` references can be freely coerced into `&T` references with the same referent type, and\n /// references with longer lifetimes can be freely coerced into references with shorter ones.\n ///\n+/// Reference equality by address, instead of comparing the values pointed to, is accomplished via\n+/// implicit reference-pointer coercion and raw pointer equality via [`ptr::eq`], while\n+/// [`PartialEq`] compares values.\n+///\n+/// [`ptr::eq`]: ptr/fn.eq.html\n+/// [`PartialEq`]: cmp/trait.PartialEq.html\n+///\n+/// ```\n+/// use std::ptr;\n+///\n+/// let five = 5;\n+/// let other_five = 5;\n+/// let five_ref = &five;\n+/// let same_five_ref = &five;\n+/// let other_five_ref = &other_five;\n+///\n+/// assert!(five_ref == same_five_ref);\n+/// assert!(five_ref == other_five_ref);\n+///\n+/// assert!(ptr::eq(five_ref, same_five_ref));\n+/// assert!(!ptr::eq(five_ref, other_five_ref));\n+/// ```\n+///\n /// For more information on how to use references, see [the book's section on \"References and\n /// Borrowing\"][book-refs].\n ///\n /// [book-refs]: ../book/second-edition/ch04-02-references-and-borrowing.html\n ///\n+/// # Trait implementations\n+///\n /// The following traits are implemented for all `&T`, regardless of the type of its referent:\n ///\n /// * [`Copy`]"}]}