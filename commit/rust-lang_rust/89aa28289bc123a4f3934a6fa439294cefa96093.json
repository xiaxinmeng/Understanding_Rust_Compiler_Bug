{"sha": "89aa28289bc123a4f3934a6fa439294cefa96093", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5YWEyODI4OWJjMTIzYTRmMzkzNGE2ZmE0MzkyOTRjZWZhOTYwOTM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-31T23:20:42Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-31T23:20:58Z"}, "message": "rustc: Use fewer boxes in typestate", "tree": {"sha": "9bda4de03719f4034b6fc981081fb8dfde67d5ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9bda4de03719f4034b6fc981081fb8dfde67d5ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89aa28289bc123a4f3934a6fa439294cefa96093", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89aa28289bc123a4f3934a6fa439294cefa96093", "html_url": "https://github.com/rust-lang/rust/commit/89aa28289bc123a4f3934a6fa439294cefa96093", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89aa28289bc123a4f3934a6fa439294cefa96093/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57f399bd638c211005e8565609e928db33ebf864", "url": "https://api.github.com/repos/rust-lang/rust/commits/57f399bd638c211005e8565609e928db33ebf864", "html_url": "https://github.com/rust-lang/rust/commit/57f399bd638c211005e8565609e928db33ebf864"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "345cf32e0b2ae0d7ca6310398d1a2f2c44205cba", "filename": "src/rustc/middle/tstate/ann.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/89aa28289bc123a4f3934a6fa439294cefa96093/src%2Frustc%2Fmiddle%2Ftstate%2Fann.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89aa28289bc123a4f3934a6fa439294cefa96093/src%2Frustc%2Fmiddle%2Ftstate%2Fann.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftstate%2Fann.rs?ref=89aa28289bc123a4f3934a6fa439294cefa96093", "patch": "@@ -31,15 +31,15 @@ type poststate = t;\n  */\n \n /* named thus so as not to confuse with prestate and poststate */\n-type pre_and_post = @{precondition: precond, postcondition: postcond};\n+type pre_and_post = {precondition: precond, postcondition: postcond};\n \n \n /* FIXME: once it's implemented: */\n \n //  : ((*.precondition).nbits == (*.postcondition).nbits);\n type pre_and_post_state = {prestate: prestate, poststate: poststate};\n \n-type ts_ann = @{conditions: pre_and_post, states: pre_and_post_state};\n+type ts_ann = {conditions: pre_and_post, states: pre_and_post_state};\n \n fn true_precond(num_vars: uint) -> precond { ret create_tritv(num_vars); }\n \n@@ -58,8 +58,8 @@ fn false_postcond(num_vars: uint) -> postcond {\n }\n \n fn empty_pre_post(num_vars: uint) -> pre_and_post {\n-    ret @{precondition: empty_prestate(num_vars),\n-          postcondition: empty_poststate(num_vars)};\n+    ret {precondition: empty_prestate(num_vars),\n+         postcondition: empty_poststate(num_vars)};\n }\n \n fn empty_states(num_vars: uint) -> pre_and_post_state {\n@@ -68,8 +68,8 @@ fn empty_states(num_vars: uint) -> pre_and_post_state {\n }\n \n fn empty_ann(num_vars: uint) -> ts_ann {\n-    ret @{conditions: empty_pre_post(num_vars),\n-          states: empty_states(num_vars)};\n+    ret {conditions: empty_pre_post(num_vars),\n+         states: empty_states(num_vars)};\n }\n \n fn get_pre(&&p: pre_and_post) -> precond { ret p.precondition; }\n@@ -224,8 +224,8 @@ fn ann_prestate(a: ts_ann) -> prestate { ret a.states.prestate; }\n fn ann_poststate(a: ts_ann) -> poststate { ret a.states.poststate; }\n \n fn pp_clone(p: pre_and_post) -> pre_and_post {\n-    ret @{precondition: clone(p.precondition),\n-          postcondition: clone(p.postcondition)};\n+    ret {precondition: clone(p.precondition),\n+         postcondition: clone(p.postcondition)};\n }\n \n fn clone(p: prestate) -> prestate { ret tritv_clone(p); }"}, {"sha": "714efaa471a8b0f2aef18017be0faa77008ee834", "filename": "src/rustc/middle/tstate/bitvectors.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/89aa28289bc123a4f3934a6fa439294cefa96093/src%2Frustc%2Fmiddle%2Ftstate%2Fbitvectors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89aa28289bc123a4f3934a6fa439294cefa96093/src%2Frustc%2Fmiddle%2Ftstate%2Fbitvectors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftstate%2Fbitvectors.rs?ref=89aa28289bc123a4f3934a6fa439294cefa96093", "patch": "@@ -80,8 +80,8 @@ fn seq_preconds(fcx: fn_ctxt, pps: [pre_and_post]) -> precond {\n                 let next_first_post = clone(first.postcondition);\n                 seq_tritv(next_first_post, second.postcondition);\n                 idx += 1u;\n-                first = @{precondition: next_first,\n-                          postcondition: next_first_post};\n+                first = {precondition: next_first,\n+                         postcondition: next_first_post};\n             } else { ret first.precondition; }\n         }\n     }"}, {"sha": "062ec0f38f8d04ac8f2e3eed7be16ba564e2f1d2", "filename": "src/rustc/middle/tstate/pre_post_conditions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/89aa28289bc123a4f3934a6fa439294cefa96093/src%2Frustc%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89aa28289bc123a4f3934a6fa439294cefa96093/src%2Frustc%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs?ref=89aa28289bc123a4f3934a6fa439294cefa96093", "patch": "@@ -413,8 +413,8 @@ fn find_pre_post_expr(fcx: fn_ctxt, e: @expr) {\n         }\n         let antec_pp = pp_clone(expr_pp(fcx.ccx, ex));\n         let e_pp =\n-            @{precondition: empty_prestate(num_local_vars),\n-              postcondition: false_postcond(num_local_vars)};\n+            {precondition: empty_prestate(num_local_vars),\n+             postcondition: false_postcond(num_local_vars)};\n         let g = bind combine_pp(antec_pp, fcx, _, _);\n         let alts_overall_pp =\n             vec::foldl(e_pp, alt_pps, g);"}]}