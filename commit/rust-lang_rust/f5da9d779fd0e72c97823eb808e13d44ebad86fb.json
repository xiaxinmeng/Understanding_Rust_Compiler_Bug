{"sha": "f5da9d779fd0e72c97823eb808e13d44ebad86fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1ZGE5ZDc3OWZkMGU3MmM5NzgyM2ViODA4ZTEzZDQ0ZWJhZDg2ZmI=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-05-03T02:26:25Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-05-03T02:26:25Z"}, "message": "Format source codes", "tree": {"sha": "9bdf015f9dcc8a019542ee0b8a4f40adbeb59bbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9bdf015f9dcc8a019542ee0b8a4f40adbeb59bbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5da9d779fd0e72c97823eb808e13d44ebad86fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5da9d779fd0e72c97823eb808e13d44ebad86fb", "html_url": "https://github.com/rust-lang/rust/commit/f5da9d779fd0e72c97823eb808e13d44ebad86fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5da9d779fd0e72c97823eb808e13d44ebad86fb/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e91d498b8f771ed9ddc1abbedf4d261883d4d505", "url": "https://api.github.com/repos/rust-lang/rust/commits/e91d498b8f771ed9ddc1abbedf4d261883d4d505", "html_url": "https://github.com/rust-lang/rust/commit/e91d498b8f771ed9ddc1abbedf4d261883d4d505"}], "stats": {"total": 35, "additions": 11, "deletions": 24}, "files": [{"sha": "b52d790ed371feb2290c71761bf8ccdf4b750cab", "filename": "src/file_lines.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f5da9d779fd0e72c97823eb808e13d44ebad86fb/src%2Ffile_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5da9d779fd0e72c97823eb808e13d44ebad86fb/src%2Ffile_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffile_lines.rs?ref=f5da9d779fd0e72c97823eb808e13d44ebad86fb", "patch": "@@ -123,10 +123,8 @@ impl FileLines {\n             Some(ref map) => map,\n         };\n \n-        match canonicalize_path_string(range.file_name()).and_then(|canonical| {\n-                                                                       map.get_vec(&canonical)\n-                                                                           .ok_or(())\n-                                                                   }) {\n+        match canonicalize_path_string(range.file_name())\n+                  .and_then(|canonical| map.get_vec(&canonical).ok_or(())) {\n             Ok(ranges) => ranges.iter().any(|r| r.contains(Range::from(range))),\n             Err(_) => false,\n         }\n@@ -140,10 +138,8 @@ impl FileLines {\n             Some(ref map) => map,\n         };\n \n-        match canonicalize_path_string(range.file_name()).and_then(|canonical| {\n-                                                                       map.get_vec(&canonical)\n-                                                                           .ok_or(())\n-                                                                   }) {\n+        match canonicalize_path_string(range.file_name())\n+                  .and_then(|canonical| map.get_vec(&canonical).ok_or(())) {\n             Ok(ranges) => ranges.iter().any(|r| r.intersects(Range::from(range))),\n             Err(_) => false,\n         }"}, {"sha": "0b2ca5a52cbb8dbe3740921385cebf49abee66ac", "filename": "src/items.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f5da9d779fd0e72c97823eb808e13d44ebad86fb/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5da9d779fd0e72c97823eb808e13d44ebad86fb/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=f5da9d779fd0e72c97823eb808e13d44ebad86fb", "patch": "@@ -278,8 +278,7 @@ impl<'a> FmtVisitor<'a> {\n             result.push(' ');\n         }\n \n-        self.single_line_fn(&result, block)\n-            .or_else(|| Some(result))\n+        self.single_line_fn(&result, block).or_else(|| Some(result))\n     }\n \n     pub fn rewrite_required_fn(&mut self,\n@@ -912,9 +911,7 @@ fn format_struct_struct(context: &RewriteContext,\n         let snippet = context.snippet(mk_sp(body_lo, span.hi - BytePos(1)));\n         if snippet.trim().is_empty() {\n             // `struct S {}`\n-        } else if snippet\n-                      .trim_right_matches(&[' ', '\\t'][..])\n-                      .ends_with('\\n') {\n+        } else if snippet.trim_right_matches(&[' ', '\\t'][..]).ends_with('\\n') {\n             // fix indent\n             result.push_str(&snippet.trim_right());\n             result.push('\\n');\n@@ -1030,9 +1027,7 @@ fn format_tuple_struct(context: &RewriteContext,\n         let snippet = context.snippet(mk_sp(body_lo, context.codemap.span_before(span, \")\")));\n         if snippet.is_empty() {\n             // `struct S ()`\n-        } else if snippet\n-                      .trim_right_matches(&[' ', '\\t'][..])\n-                      .ends_with('\\n') {\n+        } else if snippet.trim_right_matches(&[' ', '\\t'][..]).ends_with('\\n') {\n             result.push_str(&snippet.trim_right());\n             result.push('\\n');\n             result.push_str(&offset.to_string(context.config));\n@@ -1229,8 +1224,7 @@ impl Rewrite for ast::StructField {\n         let type_offset = shape.indent.block_indent(context.config);\n         let rewrite_type_in_next_line = || {\n             let budget = try_opt!(context.config.max_width.checked_sub(type_offset.width()));\n-            self.ty\n-                .rewrite(context, Shape::legacy(budget, type_offset))\n+            self.ty.rewrite(context, Shape::legacy(budget, type_offset))\n         };\n \n         let last_line_width = last_line_width(&result) + type_annotation_spacing.1.len();"}, {"sha": "37a569ce67ddbb29a192d93cf72e1c2e275453cd", "filename": "src/string.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f5da9d779fd0e72c97823eb808e13d44ebad86fb/src%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5da9d779fd0e72c97823eb808e13d44ebad86fb/src%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstring.rs?ref=f5da9d779fd0e72c97823eb808e13d44ebad86fb", "patch": "@@ -51,10 +51,7 @@ pub fn rewrite_string<'a>(orig: &str, fmt: &StringFormat<'a>) -> Option<String>\n     let ender_length = fmt.line_end.len();\n     // If we cannot put at least a single character per line, the rewrite won't\n     // succeed.\n-    let max_chars = try_opt!(shape\n-                                 .width\n-                                 .checked_sub(fmt.opener.len() + ender_length + 1)) +\n-                    1;\n+    let max_chars = try_opt!(shape.width.checked_sub(fmt.opener.len() + ender_length + 1)) + 1;\n \n     // Snip a line at a time from `orig` until it is used up. Push the snippet\n     // onto result."}, {"sha": "e2a95c66832455dc142e50188372dc1622622386", "filename": "src/types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f5da9d779fd0e72c97823eb808e13d44ebad86fb/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5da9d779fd0e72c97823eb808e13d44ebad86fb/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=f5da9d779fd0e72c97823eb808e13d44ebad86fb", "patch": "@@ -704,9 +704,9 @@ fn rewrite_bare_fn(bare_fn: &ast::BareFnTy,\n                                       .lifetimes\n                                       .iter()\n                                       .map(|l| {\n-                                               l.rewrite(context,\n+            l.rewrite(context,\n                       Shape::legacy(try_opt!(shape.width.checked_sub(6)), shape.indent + 4))\n-                                           })\n+        })\n                                       .intersperse(Some(\", \".to_string()))\n                                       .collect::<Option<String>>()));\n         result.push_str(\"> \");"}]}