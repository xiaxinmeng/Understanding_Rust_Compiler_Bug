{"sha": "bddb266089deb0cb879caeff1bb9aa860746e062", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkZGIyNjYwODlkZWIwY2I4NzljYWVmZjFiYjlhYTg2MDc0NmUwNjI=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-07-02T13:13:39Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-07-02T15:24:09Z"}, "message": "typeck: check for infer before type impls trait\n\nThis commit checks that the target type of the cast (an error related\nto which is being reported) does not have types to be inferred before\nchecking if it implements the `From` trait.\n\nSigned-off-by: David Wood <david@davidtw.co>", "tree": {"sha": "3597b0358ef4d06ddd246ae581365dbcb2af3c57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3597b0358ef4d06ddd246ae581365dbcb2af3c57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bddb266089deb0cb879caeff1bb9aa860746e062", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEfgm2/wUjk9OnjxlyJZLnbIc4H9kFAl79/BkACgkQJZLnbIc4\nH9l+3g/8D4jQ3IH/6SM4PpaxLlChHxGf/bM/w56EpZYCKd3O9jPjnbrFx2o+bSl4\nvh0orzcKDO5Q5bJQ8T/xeXCXFC7yX2xPyGE5bt/MdcIY27JvdXt5nLCydZxaPy0B\nq5dHt4+DWSWuYoG7I1dXqqs6qOLiXq5D2i/dP9+qWuOx7NhkmwGkSdHj1es2Sj6w\nhF9+5vDHsAJEfwEB/eO3gDXxE2FfIpdFpiFHMxxbTz1xQSk7xG9JM/9V2Ua+HO/V\nZ8kfooqiE6YIju4IpN+h5n/6IlW0a7RSMTXouIY5SNpu2s1O/zR9kaYp0dKUfyi7\nBdpoUwkt7cioMY8BtPOV/1lFD/gg53ddGWuoAgSdBKhvVrGg0E3YJXjnkxK4HdPk\nBJ2vbhZ71wS+ZbudYXrynulqZiDXb2El6caeDrgpTsH+W17U1FVHYyUtB+m4fvrh\nps/04oj6LbOaFATe+xTyDcFLxd//euUJEeKpJJV3dtPzjrYlLzfnMBGqn0LKkAzX\niNjsumCp7oiflRHRULAW8dKmzEvP1ymqUau/gZO/YUV/6alXsPFJbCX7ScpHlqY9\npF8vHfYGu682UgX3kpC92xYsCzYjLVrvgNUZeuuVFUOfAMpaPL3RkM770MyYst3J\n5Vd0K6PtbOM2bJz3AlWlp7xrTwBSs7nlnXxSzGep+bMjmjH+KyU=\n=beBu\n-----END PGP SIGNATURE-----", "payload": "tree 3597b0358ef4d06ddd246ae581365dbcb2af3c57\nparent 9491f18c5de3ff1c4bf9c3fdacf52d9859e26f7c\nauthor David Wood <david@davidtw.co> 1593695619 +0100\ncommitter David Wood <david@davidtw.co> 1593703449 +0100\n\ntypeck: check for infer before type impls trait\n\nThis commit checks that the target type of the cast (an error related\nto which is being reported) does not have types to be inferred before\nchecking if it implements the `From` trait.\n\nSigned-off-by: David Wood <david@davidtw.co>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bddb266089deb0cb879caeff1bb9aa860746e062", "html_url": "https://github.com/rust-lang/rust/commit/bddb266089deb0cb879caeff1bb9aa860746e062", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bddb266089deb0cb879caeff1bb9aa860746e062/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9491f18c5de3ff1c4bf9c3fdacf52d9859e26f7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9491f18c5de3ff1c4bf9c3fdacf52d9859e26f7c", "html_url": "https://github.com/rust-lang/rust/commit/9491f18c5de3ff1c4bf9c3fdacf52d9859e26f7c"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "8948e5a3e00db252ad7b5253e6a8a15c6079b351", "filename": "src/librustc_typeck/check/cast.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bddb266089deb0cb879caeff1bb9aa860746e062/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bddb266089deb0cb879caeff1bb9aa860746e062/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs?ref=bddb266089deb0cb879caeff1bb9aa860746e062", "patch": "@@ -387,6 +387,7 @@ impl<'a, 'tcx> CastCheck<'tcx> {\n                             // Check for infer types because cases like `Option<{integer}>` would\n                             // panic otherwise.\n                             if !expr_ty.has_infer_types()\n+                                && !ty.has_infer_types()\n                                 && fcx.tcx.type_implements_trait((\n                                     from_trait,\n                                     ty,"}, {"sha": "2f1ec8c6d6227a6e624119447f29e43bc16d1247", "filename": "src/test/ui/issues/issue-73886.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bddb266089deb0cb879caeff1bb9aa860746e062/src%2Ftest%2Fui%2Fissues%2Fissue-73886.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bddb266089deb0cb879caeff1bb9aa860746e062/src%2Ftest%2Fui%2Fissues%2Fissue-73886.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-73886.rs?ref=bddb266089deb0cb879caeff1bb9aa860746e062", "patch": "@@ -0,0 +1,6 @@\n+fn main() {\n+    let _ = &&[0] as &[_];\n+    //~^ ERROR non-primitive cast: `&&[i32; 1]` as `&[_]`\n+    let _ = 7u32 as Option<_>;\n+    //~^ ERROR non-primitive cast: `u32` as `std::option::Option<_>`\n+}"}, {"sha": "e8ab7db6b82c2e91cea279893d7d5d58be9e1969", "filename": "src/test/ui/issues/issue-73886.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/bddb266089deb0cb879caeff1bb9aa860746e062/src%2Ftest%2Fui%2Fissues%2Fissue-73886.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bddb266089deb0cb879caeff1bb9aa860746e062/src%2Ftest%2Fui%2Fissues%2Fissue-73886.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-73886.stderr?ref=bddb266089deb0cb879caeff1bb9aa860746e062", "patch": "@@ -0,0 +1,15 @@\n+error[E0605]: non-primitive cast: `&&[i32; 1]` as `&[_]`\n+  --> $DIR/issue-73886.rs:2:13\n+   |\n+LL |     let _ = &&[0] as &[_];\n+   |             ^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object\n+\n+error[E0605]: non-primitive cast: `u32` as `std::option::Option<_>`\n+  --> $DIR/issue-73886.rs:4:13\n+   |\n+LL |     let _ = 7u32 as Option<_>;\n+   |             ^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0605`."}]}