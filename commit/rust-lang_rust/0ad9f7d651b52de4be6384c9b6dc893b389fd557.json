{"sha": "0ad9f7d651b52de4be6384c9b6dc893b389fd557", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhZDlmN2Q2NTFiNTJkZTRiZTYzODRjOWI2ZGM4OTNiMzg5ZmQ1NTc=", "commit": {"author": {"name": "Vardan Margaryan", "email": "v.t.margaryan@gmail.com", "date": "2020-05-10T15:33:12Z"}, "committer": {"name": "Vardan Margaryan", "email": "v.t.margaryan@gmail.com", "date": "2020-05-14T19:36:46Z"}, "message": "Fix trivial cases of new match_wildcard_for_single_variants lint", "tree": {"sha": "594c5a221b14e939fbe1c54fd277c290793a72f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/594c5a221b14e939fbe1c54fd277c290793a72f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ad9f7d651b52de4be6384c9b6dc893b389fd557", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ad9f7d651b52de4be6384c9b6dc893b389fd557", "html_url": "https://github.com/rust-lang/rust/commit/0ad9f7d651b52de4be6384c9b6dc893b389fd557", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ad9f7d651b52de4be6384c9b6dc893b389fd557/comments", "author": {"login": "vtmargaryan", "id": 8739550, "node_id": "MDQ6VXNlcjg3Mzk1NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8739550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtmargaryan", "html_url": "https://github.com/vtmargaryan", "followers_url": "https://api.github.com/users/vtmargaryan/followers", "following_url": "https://api.github.com/users/vtmargaryan/following{/other_user}", "gists_url": "https://api.github.com/users/vtmargaryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtmargaryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtmargaryan/subscriptions", "organizations_url": "https://api.github.com/users/vtmargaryan/orgs", "repos_url": "https://api.github.com/users/vtmargaryan/repos", "events_url": "https://api.github.com/users/vtmargaryan/events{/privacy}", "received_events_url": "https://api.github.com/users/vtmargaryan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vtmargaryan", "id": 8739550, "node_id": "MDQ6VXNlcjg3Mzk1NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8739550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtmargaryan", "html_url": "https://github.com/vtmargaryan", "followers_url": "https://api.github.com/users/vtmargaryan/followers", "following_url": "https://api.github.com/users/vtmargaryan/following{/other_user}", "gists_url": "https://api.github.com/users/vtmargaryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtmargaryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtmargaryan/subscriptions", "organizations_url": "https://api.github.com/users/vtmargaryan/orgs", "repos_url": "https://api.github.com/users/vtmargaryan/repos", "events_url": "https://api.github.com/users/vtmargaryan/events{/privacy}", "received_events_url": "https://api.github.com/users/vtmargaryan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94e4b5ec316993200d75276b4e7c16a059bf3a57", "url": "https://api.github.com/repos/rust-lang/rust/commits/94e4b5ec316993200d75276b4e7c16a059bf3a57", "html_url": "https://github.com/rust-lang/rust/commit/94e4b5ec316993200d75276b4e7c16a059bf3a57"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "4c604cd01075e66f783ce87beb7a7f062a82dd19", "filename": "clippy_lints/src/float_literal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ad9f7d651b52de4be6384c9b6dc893b389fd557/clippy_lints%2Fsrc%2Ffloat_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ad9f7d651b52de4be6384c9b6dc893b389fd557/clippy_lints%2Fsrc%2Ffloat_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffloat_literal.rs?ref=0ad9f7d651b52de4be6384c9b6dc893b389fd557", "patch": "@@ -77,7 +77,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for FloatLiteral {\n                 let type_suffix = match lit_float_ty {\n                     LitFloatType::Suffixed(FloatTy::F32) => Some(\"f32\"),\n                     LitFloatType::Suffixed(FloatTy::F64) => Some(\"f64\"),\n-                    _ => None\n+                    LitFloatType::Unsuffixed => None\n                 };\n                 let (is_whole, mut float_str) = match fty {\n                     FloatTy::F32 => {"}, {"sha": "552222eba2ee2164abbd717f8d92f1db0cfd1cb0", "filename": "clippy_lints/src/misc_early.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ad9f7d651b52de4be6384c9b6dc893b389fd557/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ad9f7d651b52de4be6384c9b6dc893b389fd557/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=0ad9f7d651b52de4be6384c9b6dc893b389fd557", "patch": "@@ -379,7 +379,7 @@ impl EarlyLintPass for MiscEarlyLints {\n             let left_binding = match left {\n                 BindingMode::ByRef(Mutability::Mut) => \"ref mut \",\n                 BindingMode::ByRef(Mutability::Not) => \"ref \",\n-                _ => \"\",\n+                BindingMode::ByValue(..) => \"\",\n             };\n \n             if let PatKind::Wild = right.kind {"}, {"sha": "9cfc8d1913497882f4da26a404b768d7ceaf0b28", "filename": "clippy_lints/src/missing_const_for_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ad9f7d651b52de4be6384c9b6dc893b389fd557/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ad9f7d651b52de4be6384c9b6dc893b389fd557/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs?ref=0ad9f7d651b52de4be6384c9b6dc893b389fd557", "patch": "@@ -113,7 +113,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingConstForFn {\n                     return;\n                 }\n             },\n-            _ => return,\n+            FnKind::Closure(..) => return,\n         }\n \n         let mir = cx.tcx.optimized_mir(def_id);"}, {"sha": "c099c5533339cb35b9ee0a464d1b83451e37c009", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ad9f7d651b52de4be6384c9b6dc893b389fd557/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ad9f7d651b52de4be6384c9b6dc893b389fd557/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=0ad9f7d651b52de4be6384c9b6dc893b389fd557", "patch": "@@ -86,7 +86,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessPassByValue {\n                 }\n             },\n             FnKind::Method(..) => (),\n-            _ => return,\n+            FnKind::Closure(..) => return,\n         }\n \n         // Exclude non-inherent impls"}, {"sha": "8e0cb94317affc2ce1bf3c0e81d3407fda751bf9", "filename": "clippy_lints/src/trivially_copy_pass_by_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ad9f7d651b52de4be6384c9b6dc893b389fd557/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ad9f7d651b52de4be6384c9b6dc893b389fd557/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs?ref=0ad9f7d651b52de4be6384c9b6dc893b389fd557", "patch": "@@ -161,7 +161,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for TriviallyCopyPassByRef {\n                 }\n             },\n             FnKind::Method(..) => (),\n-            _ => return,\n+            FnKind::Closure(..) => return,\n         }\n \n         // Exclude non-inherent impls"}, {"sha": "a3df9d5ccbd161e22dab653a5b2fea127932ebf2", "filename": "tests/compile-test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ad9f7d651b52de4be6384c9b6dc893b389fd557/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ad9f7d651b52de4be6384c9b6dc893b389fd557/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=0ad9f7d651b52de4be6384c9b6dc893b389fd557", "patch": "@@ -44,7 +44,7 @@ fn third_party_crates() -> String {\n     for entry in fs::read_dir(dep_dir).unwrap() {\n         let path = match entry {\n             Ok(entry) => entry.path(),\n-            _ => continue,\n+            Err(_) => continue,\n         };\n         if let Some(name) = path.file_name().and_then(OsStr::to_str) {\n             for dep in CRATES {"}]}