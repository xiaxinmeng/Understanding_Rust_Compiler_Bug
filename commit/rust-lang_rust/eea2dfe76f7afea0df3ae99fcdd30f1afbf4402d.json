{"sha": "eea2dfe76f7afea0df3ae99fcdd30f1afbf4402d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlYTJkZmU3NmY3YWZlYTBkZjNhZTk5ZmNkZDMwZjFhZmJmNDQwMmQ=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-02-05T04:11:10Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-02-05T04:11:10Z"}, "message": "Fold some overlooked spans.", "tree": {"sha": "3c363661f2cea54ea6c6bcdb9af49aa62b8c5995", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c363661f2cea54ea6c6bcdb9af49aa62b8c5995"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eea2dfe76f7afea0df3ae99fcdd30f1afbf4402d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eea2dfe76f7afea0df3ae99fcdd30f1afbf4402d", "html_url": "https://github.com/rust-lang/rust/commit/eea2dfe76f7afea0df3ae99fcdd30f1afbf4402d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eea2dfe76f7afea0df3ae99fcdd30f1afbf4402d/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "faa82eb46c800857756ddc5458623a906a9f103e", "url": "https://api.github.com/repos/rust-lang/rust/commits/faa82eb46c800857756ddc5458623a906a9f103e", "html_url": "https://github.com/rust-lang/rust/commit/faa82eb46c800857756ddc5458623a906a9f103e"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "c01ac3107b6d858c9a5ab99733755e3af78e5b74", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/eea2dfe76f7afea0df3ae99fcdd30f1afbf4402d/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eea2dfe76f7afea0df3ae99fcdd30f1afbf4402d/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=eea2dfe76f7afea0df3ae99fcdd30f1afbf4402d", "patch": "@@ -734,7 +734,7 @@ pub fn noop_fold_where_clause<T: Folder>(\n         predicates: predicates.move_map(|predicate| {\n             fld.fold_where_predicate(predicate)\n         }),\n-        span,\n+        span: fld.new_span(span),\n     }\n }\n \n@@ -1111,7 +1111,7 @@ pub fn noop_fold_pat<T: Folder>(p: P<Pat>, folder: &mut T) -> P<Pat> {\n             PatKind::Range(e1, e2, Spanned { span, node }) => {\n                 PatKind::Range(folder.fold_expr(e1),\n                                folder.fold_expr(e2),\n-                               Spanned { span, node })\n+                               Spanned { node, span: folder.new_span(span) })\n             },\n             PatKind::Slice(before, slice, after) => {\n                 PatKind::Slice(before.move_map(|x| folder.fold_pat(x)),\n@@ -1342,15 +1342,20 @@ pub fn noop_fold_stmt_kind<T: Folder>(node: StmtKind, folder: &mut T) -> SmallVe\n     }\n }\n \n-pub fn noop_fold_vis<T: Folder>(vis: Visibility, folder: &mut T) -> Visibility {\n-    match vis.node {\n-        VisibilityKind::Restricted { path, id } => {\n-            respan(vis.span, VisibilityKind::Restricted {\n-                path: path.map(|path| folder.fold_path(path)),\n-                id: folder.new_id(id),\n-            })\n-        }\n-        _ => vis,\n+pub fn noop_fold_vis<T: Folder>(Spanned { node, span }: Visibility, folder: &mut T) -> Visibility {\n+    Visibility {\n+        node: match node {\n+            VisibilityKind::Public => VisibilityKind::Public,\n+            VisibilityKind::Crate(sugar) => VisibilityKind::Crate(sugar),\n+            VisibilityKind::Restricted { path, id } => {\n+                VisibilityKind::Restricted {\n+                    path: path.map(|path| folder.fold_path(path)),\n+                    id: folder.new_id(id),\n+                }\n+            }\n+            VisibilityKind::Inherited => VisibilityKind::Inherited,\n+        },\n+        span: folder.new_span(span),\n     }\n }\n "}]}