{"sha": "5d64b3d329cdd0452dc2fde1435998bd3e036538", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkNjRiM2QzMjljZGQwNDUyZGMyZmRlMTQzNTk5OGJkM2UwMzY1Mzg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-10-02T18:32:19Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-10-02T18:32:19Z"}, "message": "document `ret_coercion` and `ret_coercion_span`", "tree": {"sha": "79031b38b3143a46163d61e17c2fa6756e274be2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79031b38b3143a46163d61e17c2fa6756e274be2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d64b3d329cdd0452dc2fde1435998bd3e036538", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d64b3d329cdd0452dc2fde1435998bd3e036538", "html_url": "https://github.com/rust-lang/rust/commit/5d64b3d329cdd0452dc2fde1435998bd3e036538", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d64b3d329cdd0452dc2fde1435998bd3e036538/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9991321135e0b6cfcc95c91b738879f68c4cf7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9991321135e0b6cfcc95c91b738879f68c4cf7c", "html_url": "https://github.com/rust-lang/rust/commit/a9991321135e0b6cfcc95c91b738879f68c4cf7c"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "b1de54c692d2b34c5622ede9487da5f795822e26", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5d64b3d329cdd0452dc2fde1435998bd3e036538/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d64b3d329cdd0452dc2fde1435998bd3e036538/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=5d64b3d329cdd0452dc2fde1435998bd3e036538", "patch": "@@ -562,7 +562,19 @@ pub struct FnCtxt<'a, 'tcx> {\n     // if type checking is run in parallel.\n     err_count_on_creation: usize,\n \n+    /// If `Some`, this stores coercion information for returned\n+    /// expressions. If `None`, this is in a context where return is\n+    /// inappropriate, such as a const expression.\n+    ///\n+    /// This is a `RefCell<DynamicCoerceMany>`, which means that we\n+    /// can track all the return expressions and then use them to\n+    /// compute a useful coercion from the set, similar to a match\n+    /// expression or other branching context. You can use methods\n+    /// like `expected_ty` to access the declared return type (if\n+    /// any).\n     ret_coercion: Option<RefCell<DynamicCoerceMany<'tcx>>>,\n+\n+    /// First span of a return site that we find. Used in error messages.\n     ret_coercion_span: RefCell<Option<Span>>,\n \n     yield_ty: Option<Ty<'tcx>>,"}]}