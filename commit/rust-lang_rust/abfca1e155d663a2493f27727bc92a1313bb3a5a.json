{"sha": "abfca1e155d663a2493f27727bc92a1313bb3a5a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiZmNhMWUxNTVkNjYzYTI0OTNmMjc3MjdiYzkyYTEzMTNiYjNhNWE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-13T22:23:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-13T22:23:44Z"}, "message": "Rollup merge of #59858 - mark-i-m:dup-matcher-bindings-3, r=Centril\n\nMake duplicate matcher bindings a hard error\n\nr? @Centril\n\nCloses #57742", "tree": {"sha": "ca85827c5c062b52073a7b5c7b734f506c1ab69b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca85827c5c062b52073a7b5c7b734f506c1ab69b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abfca1e155d663a2493f27727bc92a1313bb3a5a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcsmFwCRBK7hj4Ov3rIwAAdHIIAH5eBey44mdFPqZ/fUYX5u0c\ngxQ+USO+KHbGynAPAjM7N2Su2WjJN7Fvrj/4lAAs43iluFp9C1a3fhWp2InVhGck\nxCrl8lDuaRxd6ih/u7vfy7URbuLaj492BDOhZVgRwnIogQ1P9JL6pc4xWUc/gzfr\nrlWl8VFXBmeF9OjvB6tKb0kDeunzKa21XRTOINz0/HppZqVee1C8eA6L07eTrEAe\nN7Vs99bxJqYIe8uweE/svDJQSGuQYX7Q0qZqvQBa6l2lPEjYpipeaEer98Xe3GhF\nJAJJFWKOB8KqIof70xVDKy3wc6n41nDrDuj7JgcPsU48OlGKK6+qz+CfWUnwdI4=\n=intE\n-----END PGP SIGNATURE-----\n", "payload": "tree ca85827c5c062b52073a7b5c7b734f506c1ab69b\nparent 8af5c8f4cb1dcf52a2ff1d403c06e68775c2b681\nparent e149dc02a44f87d0dacba470db709b822b16db88\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1555194224 +0200\ncommitter GitHub <noreply@github.com> 1555194224 +0200\n\nRollup merge of #59858 - mark-i-m:dup-matcher-bindings-3, r=Centril\n\nMake duplicate matcher bindings a hard error\n\nr? @Centril\n\nCloses #57742\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abfca1e155d663a2493f27727bc92a1313bb3a5a", "html_url": "https://github.com/rust-lang/rust/commit/abfca1e155d663a2493f27727bc92a1313bb3a5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abfca1e155d663a2493f27727bc92a1313bb3a5a/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8af5c8f4cb1dcf52a2ff1d403c06e68775c2b681", "url": "https://api.github.com/repos/rust-lang/rust/commits/8af5c8f4cb1dcf52a2ff1d403c06e68775c2b681", "html_url": "https://github.com/rust-lang/rust/commit/8af5c8f4cb1dcf52a2ff1d403c06e68775c2b681"}, {"sha": "e149dc02a44f87d0dacba470db709b822b16db88", "url": "https://api.github.com/repos/rust-lang/rust/commits/e149dc02a44f87d0dacba470db709b822b16db88", "html_url": "https://github.com/rust-lang/rust/commit/e149dc02a44f87d0dacba470db709b822b16db88"}], "stats": {"total": 105, "additions": 44, "deletions": 61}, "files": [{"sha": "28a2a1eaf6b492e8f44e6871f3dc69e33a6a290e", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/abfca1e155d663a2493f27727bc92a1313bb3a5a/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abfca1e155d663a2493f27727bc92a1313bb3a5a/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=abfca1e155d663a2493f27727bc92a1313bb3a5a", "patch": "@@ -352,12 +352,6 @@ declare_lint! {\n     \"outlives requirements can be inferred\"\n }\n \n-declare_lint! {\n-    pub DUPLICATE_MATCHER_BINDING_NAME,\n-    Deny,\n-    \"duplicate macro matcher binding name\"\n-}\n-\n /// Some lints that are buffered from `libsyntax`. See `syntax::early_buffered_lints`.\n pub mod parser {\n     declare_lint! {\n@@ -462,7 +456,6 @@ declare_lint_pass! {\n         DEPRECATED_IN_FUTURE,\n         AMBIGUOUS_ASSOCIATED_ITEMS,\n         NESTED_IMPL_TRAIT,\n-        DUPLICATE_MATCHER_BINDING_NAME,\n         MUTABLE_BORROW_RESERVATION_CONFLICT,\n     ]\n }"}, {"sha": "112c247d4d663c763d91b97328d137bf57b33279", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/abfca1e155d663a2493f27727bc92a1313bb3a5a/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abfca1e155d663a2493f27727bc92a1313bb3a5a/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=abfca1e155d663a2493f27727bc92a1313bb3a5a", "patch": "@@ -26,7 +26,7 @@ use rustc_data_structures::sync::{self, Lrc};\n use crate::hir::def_id::{CrateNum, LOCAL_CRATE};\n use crate::hir::intravisit;\n use crate::hir;\n-use crate::lint::builtin::{BuiltinLintDiagnostics, DUPLICATE_MATCHER_BINDING_NAME};\n+use crate::lint::builtin::BuiltinLintDiagnostics;\n use crate::lint::builtin::parser::{QUESTION_MARK_MACRO_SEP, ILL_FORMED_ATTRIBUTE_INPUT};\n use crate::session::{Session, DiagnosticMessageId};\n use crate::ty::TyCtxt;\n@@ -82,7 +82,6 @@ impl Lint {\n         match lint_id {\n             BufferedEarlyLintId::QuestionMarkMacroSep => QUESTION_MARK_MACRO_SEP,\n             BufferedEarlyLintId::IllFormedAttributeInput => ILL_FORMED_ATTRIBUTE_INPUT,\n-            BufferedEarlyLintId::DuplicateMacroMatcherBindingName => DUPLICATE_MATCHER_BINDING_NAME,\n         }\n     }\n "}, {"sha": "4a2d6dc68ae596afe32f32b66b323cb5da86ffdd", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/abfca1e155d663a2493f27727bc92a1313bb3a5a/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abfca1e155d663a2493f27727bc92a1313bb3a5a/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=abfca1e155d663a2493f27727bc92a1313bb3a5a", "patch": "@@ -428,11 +428,6 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n             reference: \"issue #57644 <https://github.com/rust-lang/rust/issues/57644>\",\n             edition: None,\n         },\n-        FutureIncompatibleInfo {\n-            id: LintId::of(DUPLICATE_MATCHER_BINDING_NAME),\n-            reference: \"issue #57593 <https://github.com/rust-lang/rust/issues/57593>\",\n-            edition: None,\n-        },\n         FutureIncompatibleInfo {\n             id: LintId::of(NESTED_IMPL_TRAIT),\n             reference: \"issue #59014 <https://github.com/rust-lang/rust/issues/59014>\",\n@@ -494,6 +489,8 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n         \"no longer a warning, #[no_mangle] statics always exported\");\n     store.register_removed(\"bad_repr\",\n         \"replaced with a generic attribute input check\");\n+    store.register_removed(\"duplicate_matcher_binding_name\",\n+        \"converted into hard error, see https://github.com/rust-lang/rust/issues/57742\");\n }\n \n pub fn register_internals(store: &mut lint::LintStore, sess: Option<&Session>) {"}, {"sha": "977e6d4587709be238c9b86080c42c7ee20e54d2", "filename": "src/libsyntax/early_buffered_lints.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abfca1e155d663a2493f27727bc92a1313bb3a5a/src%2Flibsyntax%2Fearly_buffered_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abfca1e155d663a2493f27727bc92a1313bb3a5a/src%2Flibsyntax%2Fearly_buffered_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fearly_buffered_lints.rs?ref=abfca1e155d663a2493f27727bc92a1313bb3a5a", "patch": "@@ -12,8 +12,6 @@ pub enum BufferedEarlyLintId {\n     /// Usage of `?` as a macro separator is deprecated.\n     QuestionMarkMacroSep,\n     IllFormedAttributeInput,\n-    /// Usage of a duplicate macro matcher binding name.\n-    DuplicateMacroMatcherBindingName,\n }\n \n /// Stores buffered lint info which can later be passed to `librustc`."}, {"sha": "b1b9d25b3d56b52624a75c10023cf69f25a099f3", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/abfca1e155d663a2493f27727bc92a1313bb3a5a/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abfca1e155d663a2493f27727bc92a1313bb3a5a/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=abfca1e155d663a2493f27727bc92a1313bb3a5a", "patch": "@@ -497,22 +497,14 @@ fn check_lhs_duplicate_matcher_bindings(\n     node_id: ast::NodeId,\n ) -> bool {\n     use self::quoted::TokenTree;\n-    use crate::early_buffered_lints::BufferedEarlyLintId;\n     for tt in tts {\n         match *tt {\n             TokenTree::MetaVarDecl(span, name, _kind) => {\n                 if let Some(&prev_span) = metavar_names.get(&name) {\n-                    // FIXME(mark-i-m): in a few cycles, make this a hard error.\n-                    // sess.span_diagnostic\n-                    //     .struct_span_err(span, \"duplicate matcher binding\")\n-                    //     .span_note(prev_span, \"previous declaration was here\")\n-                    //     .emit();\n-                    sess.buffer_lint(\n-                        BufferedEarlyLintId::DuplicateMacroMatcherBindingName,\n-                        crate::source_map::MultiSpan::from(vec![prev_span, span]),\n-                        node_id,\n-                        \"duplicate matcher binding\"\n-                    );\n+                    sess.span_diagnostic\n+                        .struct_span_err(span, \"duplicate matcher binding\")\n+                        .span_note(prev_span, \"previous declaration was here\")\n+                        .emit();\n                     return false;\n                 } else {\n                     metavar_names.insert(name, span);"}, {"sha": "7d39dc0a52f2ecb226f980f6d9107fa78ec68718", "filename": "src/test/ui/macros/macro-multiple-matcher-bindings.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/abfca1e155d663a2493f27727bc92a1313bb3a5a/src%2Ftest%2Fui%2Fmacros%2Fmacro-multiple-matcher-bindings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abfca1e155d663a2493f27727bc92a1313bb3a5a/src%2Ftest%2Fui%2Fmacros%2Fmacro-multiple-matcher-bindings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-multiple-matcher-bindings.rs?ref=abfca1e155d663a2493f27727bc92a1313bb3a5a", "patch": "@@ -1,16 +1,11 @@\n // Test that duplicate matcher binding names are caught at declaration time, rather than at macro\n // invocation time.\n-//\n-// FIXME(mark-i-m): Update this when it becomes a hard error.\n-\n-// compile-pass\n \n #![allow(unused_macros)]\n-#![warn(duplicate_matcher_binding_name)]\n \n macro_rules! foo1 {\n-    ($a:ident, $a:ident) => {}; //~WARNING duplicate matcher binding\n-    ($a:ident, $a:path) => {};  //~WARNING duplicate matcher binding\n+    ($a:ident, $a:ident) => {}; //~ERROR duplicate matcher binding\n+    ($a:ident, $a:path) => {};  //~ERROR duplicate matcher binding\n }\n \n macro_rules! foo2 {\n@@ -19,8 +14,8 @@ macro_rules! foo2 {\n }\n \n macro_rules! foo3 {\n-    ($a:ident, $($a:ident),*) => {}; //~WARNING duplicate matcher binding\n-    ($($a:ident)+ # $($($a:path),+);*) => {}; //~WARNING duplicate matcher binding\n+    ($a:ident, $($a:ident),*) => {}; //~ERROR duplicate matcher binding\n+    ($($a:ident)+ # $($($a:path),+);*) => {}; //~ERROR duplicate matcher binding\n }\n \n fn main() {}"}, {"sha": "65362388d7de168a2e3c6ba414278fd068d90cc7", "filename": "src/test/ui/macros/macro-multiple-matcher-bindings.stderr", "status": "modified", "additions": 33, "deletions": 24, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/abfca1e155d663a2493f27727bc92a1313bb3a5a/src%2Ftest%2Fui%2Fmacros%2Fmacro-multiple-matcher-bindings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abfca1e155d663a2493f27727bc92a1313bb3a5a/src%2Ftest%2Fui%2Fmacros%2Fmacro-multiple-matcher-bindings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-multiple-matcher-bindings.stderr?ref=abfca1e155d663a2493f27727bc92a1313bb3a5a", "patch": "@@ -1,41 +1,50 @@\n-warning: duplicate matcher binding\n-  --> $DIR/macro-multiple-matcher-bindings.rs:12:6\n+error: duplicate matcher binding\n+  --> $DIR/macro-multiple-matcher-bindings.rs:7:16\n    |\n LL |     ($a:ident, $a:ident) => {};\n-   |      ^^^^^^^^  ^^^^^^^^\n+   |                ^^^^^^^^\n    |\n-note: lint level defined here\n-  --> $DIR/macro-multiple-matcher-bindings.rs:9:9\n+note: previous declaration was here\n+  --> $DIR/macro-multiple-matcher-bindings.rs:7:6\n    |\n-LL | #![warn(duplicate_matcher_binding_name)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #57593 <https://github.com/rust-lang/rust/issues/57593>\n+LL |     ($a:ident, $a:ident) => {};\n+   |      ^^^^^^^^\n \n-warning: duplicate matcher binding\n-  --> $DIR/macro-multiple-matcher-bindings.rs:13:6\n+error: duplicate matcher binding\n+  --> $DIR/macro-multiple-matcher-bindings.rs:8:16\n    |\n LL |     ($a:ident, $a:path) => {};\n-   |      ^^^^^^^^  ^^^^^^^\n+   |                ^^^^^^^\n+   |\n+note: previous declaration was here\n+  --> $DIR/macro-multiple-matcher-bindings.rs:8:6\n    |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #57593 <https://github.com/rust-lang/rust/issues/57593>\n+LL |     ($a:ident, $a:path) => {};\n+   |      ^^^^^^^^\n \n-warning: duplicate matcher binding\n-  --> $DIR/macro-multiple-matcher-bindings.rs:22:6\n+error: duplicate matcher binding\n+  --> $DIR/macro-multiple-matcher-bindings.rs:17:18\n    |\n LL |     ($a:ident, $($a:ident),*) => {};\n-   |      ^^^^^^^^    ^^^^^^^^\n+   |                  ^^^^^^^^\n+   |\n+note: previous declaration was here\n+  --> $DIR/macro-multiple-matcher-bindings.rs:17:6\n    |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #57593 <https://github.com/rust-lang/rust/issues/57593>\n+LL |     ($a:ident, $($a:ident),*) => {};\n+   |      ^^^^^^^^\n \n-warning: duplicate matcher binding\n-  --> $DIR/macro-multiple-matcher-bindings.rs:23:8\n+error: duplicate matcher binding\n+  --> $DIR/macro-multiple-matcher-bindings.rs:18:25\n    |\n LL |     ($($a:ident)+ # $($($a:path),+);*) => {};\n-   |        ^^^^^^^^         ^^^^^^^\n+   |                         ^^^^^^^\n+   |\n+note: previous declaration was here\n+  --> $DIR/macro-multiple-matcher-bindings.rs:18:8\n    |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #57593 <https://github.com/rust-lang/rust/issues/57593>\n+LL |     ($($a:ident)+ # $($($a:path),+);*) => {};\n+   |        ^^^^^^^^\n+\n+error: aborting due to 4 previous errors\n "}]}