{"sha": "dd582dac67e35365dff25c8a299c6e7e0f08dd3e", "node_id": "C_kwDOAAsO6NoAKGRkNTgyZGFjNjdlMzUzNjVkZmYyNWM4YTI5OWM2ZTdlMGYwOGRkM2U", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-15T13:47:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-15T13:47:29Z"}, "message": "Auto merge of #14157 - Veykril:inlay, r=Veykril\n\nAdjust binding mode inlay hints to render better with @ patterns", "tree": {"sha": "534fec05c7c6b106148fc21ee625bd8f1851f62a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/534fec05c7c6b106148fc21ee625bd8f1851f62a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd582dac67e35365dff25c8a299c6e7e0f08dd3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd582dac67e35365dff25c8a299c6e7e0f08dd3e", "html_url": "https://github.com/rust-lang/rust/commit/dd582dac67e35365dff25c8a299c6e7e0f08dd3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd582dac67e35365dff25c8a299c6e7e0f08dd3e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a04054ac3969334d4f907ab751fdd339a1506a2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a04054ac3969334d4f907ab751fdd339a1506a2c", "html_url": "https://github.com/rust-lang/rust/commit/a04054ac3969334d4f907ab751fdd339a1506a2c"}, {"sha": "585919006674d11d3ec38d26ab3ec04506ac1909", "url": "https://api.github.com/repos/rust-lang/rust/commits/585919006674d11d3ec38d26ab3ec04506ac1909", "html_url": "https://github.com/rust-lang/rust/commit/585919006674d11d3ec38d26ab3ec04506ac1909"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "5d9729263c270381b4e7c9dfd81754fa22e64775", "filename": "crates/ide/src/inlay_hints/binding_mode.rs", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/dd582dac67e35365dff25c8a299c6e7e0f08dd3e/crates%2Fide%2Fsrc%2Finlay_hints%2Fbinding_mode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd582dac67e35365dff25c8a299c6e7e0f08dd3e/crates%2Fide%2Fsrc%2Finlay_hints%2Fbinding_mode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints%2Fbinding_mode.rs?ref=dd582dac67e35365dff25c8a299c6e7e0f08dd3e", "patch": "@@ -29,8 +29,17 @@ pub(super) fn hints(\n             _ => None,\n         })\n         .last();\n-    let range =\n-        outer_paren_pat.as_ref().map_or_else(|| pat.syntax(), |it| it.syntax()).text_range();\n+    let range = outer_paren_pat.as_ref().map_or_else(\n+        || match pat {\n+            // for ident patterns that @ bind a name, render the un-ref patterns in front of the inner pattern\n+            // instead of the name as that makes it more clear and doesn't really change the outcome\n+            ast::Pat::IdentPat(it) => {\n+                it.pat().map_or_else(|| it.syntax().text_range(), |it| it.syntax().text_range())\n+            }\n+            it => it.syntax().text_range(),\n+        },\n+        |it| it.syntax().text_range(),\n+    );\n     let pattern_adjustments = sema.pattern_adjustments(pat);\n     pattern_adjustments.iter().for_each(|ty| {\n         let reference = ty.is_reference();\n@@ -123,4 +132,20 @@ fn __(\n }\"#,\n         );\n     }\n+\n+    #[test]\n+    fn hints_binding_modes_complex_ident_pat() {\n+        check_with_config(\n+            InlayHintsConfig { binding_mode_hints: true, ..DISABLED_CONFIG },\n+            r#\"\n+struct Struct {\n+    field: &'static str,\n+}\n+fn foo(s @ Struct { field, .. }: &Struct) {}\n+     //^^^^^^^^^^^^^^^^^^^^^^^^ref\n+         //^^^^^^^^^^^^^^^^^^^^&\n+                  //^^^^^ref\n+\"#,\n+        );\n+    }\n }"}]}