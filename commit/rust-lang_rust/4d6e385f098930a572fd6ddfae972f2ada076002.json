{"sha": "4d6e385f098930a572fd6ddfae972f2ada076002", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkNmUzODVmMDk4OTMwYTU3MmZkNmRkZmFlOTcyZjJhZGEwNzYwMDI=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-05-25T04:35:09Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-05-25T06:50:46Z"}, "message": "Refactoring: introduce one_line_budget", "tree": {"sha": "709662422d2dd30966ad82db614f5a727fd6617c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/709662422d2dd30966ad82db614f5a727fd6617c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d6e385f098930a572fd6ddfae972f2ada076002", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d6e385f098930a572fd6ddfae972f2ada076002", "html_url": "https://github.com/rust-lang/rust/commit/4d6e385f098930a572fd6ddfae972f2ada076002", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d6e385f098930a572fd6ddfae972f2ada076002/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "635fdc662a376ba98a25e15056b27319ac97628d", "url": "https://api.github.com/repos/rust-lang/rust/commits/635fdc662a376ba98a25e15056b27319ac97628d", "html_url": "https://github.com/rust-lang/rust/commit/635fdc662a376ba98a25e15056b27319ac97628d"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "07f1c80fc3d117bc5de867ed024d862d558142a9", "filename": "src/expr.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4d6e385f098930a572fd6ddfae972f2ada076002/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d6e385f098930a572fd6ddfae972f2ada076002/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=4d6e385f098930a572fd6ddfae972f2ada076002", "patch": "@@ -1765,6 +1765,7 @@ fn rewrite_call_args(context: &RewriteContext,\n         config: context.config,\n     };\n \n+    let one_line_budget = min(one_line_width, context.config.fn_call_width());\n     let almost_no_newline =\n         item_vec\n             .iter()\n@@ -1774,17 +1775,17 @@ fn rewrite_call_args(context: &RewriteContext,\n     let extendable = almost_no_newline &&\n                      item_vec.iter().fold(0, |acc, item| {\n         acc + item.item.as_ref().map_or(0, |s| 2 + first_line_width(s))\n-    }) <= min(one_line_width, context.config.fn_call_width()) + 2;\n+    }) <= one_line_budget + 2;\n \n     match write_list(&item_vec, &fmt) {\n         // If arguments do not fit in a single line and do not contain newline,\n         // try to put it on the next line. Try this only when we are in block mode\n         // and not rewriting macro.\n         Some(ref s) if context.config.fn_call_style() == IndentStyle::Block &&\n                        !context.inside_macro &&\n-                       (!can_be_overflowed(context, args) && args.len() == 1 && s.contains('\\n') ||\n-                        first_line_width(s) > one_line_width ||\n-                        first_line_width(s) > context.config.fn_call_width()) => {\n+                       ((!can_be_overflowed(context, args) && args.len() == 1 &&\n+                         s.contains('\\n')) ||\n+                        first_line_width(s) > one_line_budget) => {\n             fmt.trailing_separator = SeparatorTactic::Vertical;\n             fmt.tactic = DefinitiveListTactic::Vertical;\n             write_list(&item_vec, &fmt).map(|rw| (false, rw))"}]}