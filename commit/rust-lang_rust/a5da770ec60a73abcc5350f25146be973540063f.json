{"sha": "a5da770ec60a73abcc5350f25146be973540063f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1ZGE3NzBlYzYwYTczYWJjYzUzNTBmMjUxNDZiZTk3MzU0MDA2M2Y=", "commit": {"author": {"name": "Alan Du", "email": "alanhdu@gmail.com", "date": "2018-10-17T23:25:37Z"}, "committer": {"name": "Alan Du", "email": "alanhdu@gmail.com", "date": "2018-10-17T23:42:23Z"}, "message": "Fix function calls", "tree": {"sha": "d0384d6a786c3a07689dc4dff04209207487b76b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0384d6a786c3a07689dc4dff04209207487b76b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5da770ec60a73abcc5350f25146be973540063f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5da770ec60a73abcc5350f25146be973540063f", "html_url": "https://github.com/rust-lang/rust/commit/a5da770ec60a73abcc5350f25146be973540063f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5da770ec60a73abcc5350f25146be973540063f/comments", "author": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc8024de51261d252b1ad88566db6e246d14ee16", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc8024de51261d252b1ad88566db6e246d14ee16", "html_url": "https://github.com/rust-lang/rust/commit/fc8024de51261d252b1ad88566db6e246d14ee16"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "dced99b07731e820986206a7a8bb9228e3aa7c94", "filename": "crates/ra_analysis/src/descriptors.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a5da770ec60a73abcc5350f25146be973540063f/crates%2Fra_analysis%2Fsrc%2Fdescriptors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5da770ec60a73abcc5350f25146be973540063f/crates%2Fra_analysis%2Fsrc%2Fdescriptors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdescriptors.rs?ref=a5da770ec60a73abcc5350f25146be973540063f", "patch": "@@ -183,8 +183,7 @@ impl Link {\n         root: ast::Root<'a>,\n     ) -> ast::Module<'a> {\n         modules(root)\n-            .filter(|(name, _)| name == &tree.link(self).name)\n-            .next()\n+            .find(|(name, _)| name == &tree.link(self).name)\n             .unwrap()\n             .1\n     }"}, {"sha": "b4faf0b5bc0bf556d16190d17e5427c85dcb6b36", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a5da770ec60a73abcc5350f25146be973540063f/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5da770ec60a73abcc5350f25146be973540063f/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=a5da770ec60a73abcc5350f25146be973540063f", "patch": "@@ -393,7 +393,7 @@ impl AnalysisImpl {\n \n                                 // If we have a method call eat the first param since it's just self.\n                                 if has_self {\n-                                    commas = commas + 1;\n+                                    commas += 1;\n                                 }\n \n                                 current_parameter = Some(commas);"}, {"sha": "5a457d14829b4793c919429f50735c9b7662dee6", "filename": "crates/ra_editor/src/typing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a5da770ec60a73abcc5350f25146be973540063f/crates%2Fra_editor%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5da770ec60a73abcc5350f25146be973540063f/crates%2Fra_editor%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Ftyping.rs?ref=a5da770ec60a73abcc5350f25146be973540063f", "patch": "@@ -58,7 +58,7 @@ pub fn join_lines(file: &File, range: TextRange) -> LocalEdit {\n pub fn on_enter(file: &File, offset: TextUnit) -> Option<LocalEdit> {\n     let comment = find_leaf_at_offset(file.syntax(), offset)\n         .left_biased()\n-        .and_then(|it| ast::Comment::cast(it))?;\n+        .and_then(ast::Comment::cast)?;\n \n     if let ast::CommentFlavor::Multiline = comment.flavor() {\n         return None;"}, {"sha": "c07eb01404dcb63bf1e9ca30eca66ce8b94c2189", "filename": "crates/ra_lsp_server/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a5da770ec60a73abcc5350f25146be973540063f/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5da770ec60a73abcc5350f25146be973540063f/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs?ref=a5da770ec60a73abcc5350f25146be973540063f", "patch": "@@ -18,7 +18,7 @@ fn main() -> Result<()> {\n         .directory(\"log\")\n         .start()?;\n     info!(\"lifecycle: server started\");\n-    match ::std::panic::catch_unwind(|| main_inner()) {\n+    match ::std::panic::catch_unwind(main_inner) {\n         Ok(res) => {\n             info!(\"lifecycle: terminating process with {:?}\", res);\n             res"}, {"sha": "3e58e6f544039cf8dbe103ac15ebe0b79af53e89", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a5da770ec60a73abcc5350f25146be973540063f/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5da770ec60a73abcc5350f25146be973540063f/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=a5da770ec60a73abcc5350f25146be973540063f", "patch": "@@ -289,8 +289,8 @@ pub fn handle_runnables(\n                 .filter_map(|ws| {\n                     let tgt = ws.target_by_root(path)?;\n                     Some((\n-                        tgt.package(ws).name(ws).clone(),\n-                        tgt.name(ws).clone(),\n+                        tgt.package(ws).name(ws),\n+                        tgt.name(ws),\n                         tgt.kind(ws),\n                     ))\n                 })"}, {"sha": "cedb67baef659984b78445c95080bbddc791febe", "filename": "crates/ra_lsp_server/src/project_model.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a5da770ec60a73abcc5350f25146be973540063f/crates%2Fra_lsp_server%2Fsrc%2Fproject_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5da770ec60a73abcc5350f25146be973540063f/crates%2Fra_lsp_server%2Fsrc%2Fproject_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fproject_model.rs?ref=a5da770ec60a73abcc5350f25146be973540063f", "patch": "@@ -173,7 +173,6 @@ pub fn workspace_loader() -> (Worker<PathBuf, Result<CargoWorkspace>>, ThreadWat\n         1,\n         |input_receiver, output_sender| {\n             input_receiver\n-                .into_iter()\n                 .map(|path| CargoWorkspace::from_cargo_metadata(path.as_path()))\n                 .for_each(|it| output_sender.send(it))\n         },"}, {"sha": "6e317d85462224cc629988a8b734eeba92dad81c", "filename": "crates/ra_lsp_server/src/vfs.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a5da770ec60a73abcc5350f25146be973540063f/crates%2Fra_lsp_server%2Fsrc%2Fvfs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5da770ec60a73abcc5350f25146be973540063f/crates%2Fra_lsp_server%2Fsrc%2Fvfs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fvfs.rs?ref=a5da770ec60a73abcc5350f25146be973540063f", "patch": "@@ -24,7 +24,6 @@ pub fn roots_loader() -> (Worker<PathBuf, (PathBuf, Vec<FileEvent>)>, ThreadWatc\n         128,\n         |input_receiver, output_sender| {\n             input_receiver\n-                .into_iter()\n                 .map(|path| {\n                     debug!(\"loading {} ...\", path.as_path().display());\n                     let events = load_root(path.as_path());"}, {"sha": "4c291b9c4dfe6fa4b59295d425bf395398ee0a86", "filename": "crates/ra_syntax/src/lexer/ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a5da770ec60a73abcc5350f25146be973540063f/crates%2Fra_syntax%2Fsrc%2Flexer%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5da770ec60a73abcc5350f25146be973540063f/crates%2Fra_syntax%2Fsrc%2Flexer%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Flexer%2Fptr.rs?ref=a5da770ec60a73abcc5350f25146be973540063f", "patch": "@@ -31,7 +31,7 @@ impl<'s> Ptr<'s> {\n     /// For example, 0 will return the current token, 1 will return the next, etc.\n     pub fn nth(&self, n: u32) -> Option<char> {\n         let mut chars = self.chars().peekable();\n-        chars.by_ref().skip(n as usize).next()\n+        chars.by_ref().nth(n as usize)\n     }\n \n     /// Checks whether the current character is `c`."}, {"sha": "eae01b1d5e72d2fc92f25d0ee0fc8ee8471668ca", "filename": "crates/ra_syntax/src/reparsing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a5da770ec60a73abcc5350f25146be973540063f/crates%2Fra_syntax%2Fsrc%2Freparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5da770ec60a73abcc5350f25146be973540063f/crates%2Fra_syntax%2Fsrc%2Freparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Freparsing.rs?ref=a5da770ec60a73abcc5350f25146be973540063f", "patch": "@@ -135,7 +135,7 @@ fn find_reparsable_node(\n }\n \n fn is_balanced(tokens: &[Token]) -> bool {\n-    if tokens.len() == 0\n+    if tokens.is_empty()\n         || tokens.first().unwrap().kind != L_CURLY\n         || tokens.last().unwrap().kind != R_CURLY\n     {"}, {"sha": "8ee02724da1a851decaadfd632471712b829aad1", "filename": "crates/ra_syntax/src/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a5da770ec60a73abcc5350f25146be973540063f/crates%2Fra_syntax%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5da770ec60a73abcc5350f25146be973540063f/crates%2Fra_syntax%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Futils.rs?ref=a5da770ec60a73abcc5350f25146be973540063f", "patch": "@@ -5,7 +5,7 @@ use std::fmt::Write;\n \n /// Parse a file and create a string representation of the resulting parse tree.\n pub fn dump_tree(syntax: SyntaxNodeRef) -> String {\n-    let mut errors: Vec<_> = syntax.root_data().iter().cloned().collect();\n+    let mut errors: Vec<_> = syntax.root_data().to_vec();\n     errors.sort_by_key(|e| e.offset);\n     let mut err_pos = 0;\n     let mut level = 0;"}]}