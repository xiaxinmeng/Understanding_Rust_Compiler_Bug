{"sha": "346f6e4f7d364b009d0feb66162314abfd06c81b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0NmY2ZTRmN2QzNjRiMDA5ZDBmZWI2NjE2MjMxNGFiZmQwNmM4MWI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-31T12:08:04Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-31T12:08:04Z"}, "message": "impl type&trait", "tree": {"sha": "08247447f613e855ed2dc68dd9102528b252cb4d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08247447f613e855ed2dc68dd9102528b252cb4d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/346f6e4f7d364b009d0feb66162314abfd06c81b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/346f6e4f7d364b009d0feb66162314abfd06c81b", "html_url": "https://github.com/rust-lang/rust/commit/346f6e4f7d364b009d0feb66162314abfd06c81b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/346f6e4f7d364b009d0feb66162314abfd06c81b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9dcb79a60225cd127f1bd9f8653ff5da525d9af0", "url": "https://api.github.com/repos/rust-lang/rust/commits/9dcb79a60225cd127f1bd9f8653ff5da525d9af0", "html_url": "https://github.com/rust-lang/rust/commit/9dcb79a60225cd127f1bd9f8653ff5da525d9af0"}], "stats": {"total": 105, "additions": 92, "deletions": 13}, "files": [{"sha": "c7450b761dda329e6fb32f139fd87d55dec0bbd6", "filename": "src/parser/grammar/items/traits.rs", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/346f6e4f7d364b009d0feb66162314abfd06c81b/src%2Fparser%2Fgrammar%2Fitems%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/346f6e4f7d364b009d0feb66162314abfd06c81b/src%2Fparser%2Fgrammar%2Fitems%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fgrammar%2Fitems%2Ftraits.rs?ref=346f6e4f7d364b009d0feb66162314abfd06c81b", "patch": "@@ -14,7 +14,47 @@ pub(super) fn trait_item(p: &mut Parser) {\n pub(super) fn impl_item(p: &mut Parser) {\n     assert!(p.at(IMPL_KW));\n     p.bump();\n-    p.expect(IDENT);\n+    if choose_type_params_over_qpath(p) {\n+        type_params::list(p);\n+    }\n+\n+    // TODO: never type\n+    // impl ! {}\n+\n+    // test impl_item_neg\n+    // impl !Send for X {}\n+    p.eat(EXCL);\n+    types::type_(p);\n+    if p.eat(FOR_KW) {\n+        types::type_(p);\n+    }\n+    type_params::where_clause(p);\n     p.expect(L_CURLY);\n     p.expect(R_CURLY);\n }\n+\n+fn choose_type_params_over_qpath(p: &Parser) -> bool {\n+    // There's an ambiguity between generic parameters and qualified paths in impls.\n+    // If we see `<` it may start both, so we have to inspect some following tokens.\n+    // The following combinations can only start generics,\n+    // but not qualified paths (with one exception):\n+    //     `<` `>` - empty generic parameters\n+    //     `<` `#` - generic parameters with attributes\n+    //     `<` (LIFETIME|IDENT) `>` - single generic parameter\n+    //     `<` (LIFETIME|IDENT) `,` - first generic parameter in a list\n+    //     `<` (LIFETIME|IDENT) `:` - generic parameter with bounds\n+    //     `<` (LIFETIME|IDENT) `=` - generic parameter with a default\n+    // The only truly ambiguous case is\n+    //     `<` IDENT `>` `::` IDENT ...\n+    // we disambiguate it in favor of generics (`impl<T> ::absolute::Path<T> { ... }`)\n+    // because this is what almost always expected in practice, qualified paths in impls\n+    // (`impl <Type>::AssocTy { ... }`) aren't even allowed by type checker at the moment.\n+    if !p.at(L_ANGLE) {\n+        return false;\n+    }\n+    if p.nth(1) == POUND || p.nth(1) == R_ANGLE {\n+        return true;\n+    }\n+    (p.nth(1) == LIFETIME || p.nth(1) == IDENT)\n+        && (p.nth(2) == R_ANGLE || p.nth(2) == COMMA || p.nth(2) == COLON || p.nth(2) == EQ)\n+}"}, {"sha": "d21782b458e4239cf52f43492569a2143668cabd", "filename": "tests/data/parser/inline/0008_unsafe_impl.txt", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/346f6e4f7d364b009d0feb66162314abfd06c81b/tests%2Fdata%2Fparser%2Finline%2F0008_unsafe_impl.txt", "raw_url": "https://github.com/rust-lang/rust/raw/346f6e4f7d364b009d0feb66162314abfd06c81b/tests%2Fdata%2Fparser%2Finline%2F0008_unsafe_impl.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0008_unsafe_impl.txt?ref=346f6e4f7d364b009d0feb66162314abfd06c81b", "patch": "@@ -3,9 +3,13 @@ FILE@[0; 19)\n     UNSAFE_KW@[0; 6)\n     WHITESPACE@[6; 7)\n     IMPL_KW@[7; 11)\n-    WHITESPACE@[11; 12)\n-    IDENT@[12; 15) \"Foo\"\n-    WHITESPACE@[15; 16)\n+    PATH_TYPE@[11; 16)\n+      PATH@[11; 16)\n+        PATH_SEGMENT@[11; 16)\n+          NAME_REF@[11; 16)\n+            WHITESPACE@[11; 12)\n+            IDENT@[12; 15) \"Foo\"\n+            WHITESPACE@[15; 16)\n     L_CURLY@[16; 17)\n     R_CURLY@[17; 18)\n     WHITESPACE@[18; 19)"}, {"sha": "a89008c8a9364cde479b387c4fb66bd08487a216", "filename": "tests/data/parser/inline/0010_unsafe_default_impl.txt", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/346f6e4f7d364b009d0feb66162314abfd06c81b/tests%2Fdata%2Fparser%2Finline%2F0010_unsafe_default_impl.txt", "raw_url": "https://github.com/rust-lang/rust/raw/346f6e4f7d364b009d0feb66162314abfd06c81b/tests%2Fdata%2Fparser%2Finline%2F0010_unsafe_default_impl.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0010_unsafe_default_impl.txt?ref=346f6e4f7d364b009d0feb66162314abfd06c81b", "patch": "@@ -5,9 +5,13 @@ FILE@[0; 27)\n     DEFAULT_KW@[7; 14)\n     WHITESPACE@[14; 15)\n     IMPL_KW@[15; 19)\n-    WHITESPACE@[19; 20)\n-    IDENT@[20; 23) \"Foo\"\n-    WHITESPACE@[23; 24)\n+    PATH_TYPE@[19; 24)\n+      PATH@[19; 24)\n+        PATH_SEGMENT@[19; 24)\n+          NAME_REF@[19; 24)\n+            WHITESPACE@[19; 20)\n+            IDENT@[20; 23) \"Foo\"\n+            WHITESPACE@[23; 24)\n     L_CURLY@[24; 25)\n     R_CURLY@[25; 26)\n     WHITESPACE@[26; 27)"}, {"sha": "3718aea3b1c1fcaed2542faf15b641a7964b0f61", "filename": "tests/data/parser/inline/0046_default_impl.txt", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/346f6e4f7d364b009d0feb66162314abfd06c81b/tests%2Fdata%2Fparser%2Finline%2F0046_default_impl.txt", "raw_url": "https://github.com/rust-lang/rust/raw/346f6e4f7d364b009d0feb66162314abfd06c81b/tests%2Fdata%2Fparser%2Finline%2F0046_default_impl.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0046_default_impl.txt?ref=346f6e4f7d364b009d0feb66162314abfd06c81b", "patch": "@@ -3,9 +3,13 @@ FILE@[0; 20)\n     DEFAULT_KW@[0; 7)\n     WHITESPACE@[7; 8)\n     IMPL_KW@[8; 12)\n-    WHITESPACE@[12; 13)\n-    IDENT@[13; 16) \"Foo\"\n-    WHITESPACE@[16; 17)\n+    PATH_TYPE@[12; 17)\n+      PATH@[12; 17)\n+        PATH_SEGMENT@[12; 17)\n+          NAME_REF@[12; 17)\n+            WHITESPACE@[12; 13)\n+            IDENT@[13; 16) \"Foo\"\n+            WHITESPACE@[16; 17)\n     L_CURLY@[17; 18)\n     R_CURLY@[18; 19)\n     WHITESPACE@[19; 20)"}, {"sha": "90f11e8a27c46e1e27c4467702c3cbd4bccc8a7d", "filename": "tests/data/parser/inline/0047_impl_item.txt", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/346f6e4f7d364b009d0feb66162314abfd06c81b/tests%2Fdata%2Fparser%2Finline%2F0047_impl_item.txt", "raw_url": "https://github.com/rust-lang/rust/raw/346f6e4f7d364b009d0feb66162314abfd06c81b/tests%2Fdata%2Fparser%2Finline%2F0047_impl_item.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0047_impl_item.txt?ref=346f6e4f7d364b009d0feb66162314abfd06c81b", "patch": "@@ -1,9 +1,13 @@\n FILE@[0; 12)\n   IMPL_ITEM@[0; 12)\n     IMPL_KW@[0; 4)\n-    WHITESPACE@[4; 5)\n-    IDENT@[5; 8) \"Foo\"\n-    WHITESPACE@[8; 9)\n+    PATH_TYPE@[4; 9)\n+      PATH@[4; 9)\n+        PATH_SEGMENT@[4; 9)\n+          NAME_REF@[4; 9)\n+            WHITESPACE@[4; 5)\n+            IDENT@[5; 8) \"Foo\"\n+            WHITESPACE@[8; 9)\n     L_CURLY@[9; 10)\n     R_CURLY@[10; 11)\n     WHITESPACE@[11; 12)"}, {"sha": "b7527c8705acb07589470ae7a882cf2b9c7cabb9", "filename": "tests/data/parser/inline/0048_impl_item_neg.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/346f6e4f7d364b009d0feb66162314abfd06c81b/tests%2Fdata%2Fparser%2Finline%2F0048_impl_item_neg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/346f6e4f7d364b009d0feb66162314abfd06c81b/tests%2Fdata%2Fparser%2Finline%2F0048_impl_item_neg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0048_impl_item_neg.rs?ref=346f6e4f7d364b009d0feb66162314abfd06c81b", "patch": "@@ -0,0 +1 @@\n+impl !Send for X {}"}, {"sha": "1b75814340781320ccc947b623bf75b6b7ba93f6", "filename": "tests/data/parser/inline/0048_impl_item_neg.txt", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/346f6e4f7d364b009d0feb66162314abfd06c81b/tests%2Fdata%2Fparser%2Finline%2F0048_impl_item_neg.txt", "raw_url": "https://github.com/rust-lang/rust/raw/346f6e4f7d364b009d0feb66162314abfd06c81b/tests%2Fdata%2Fparser%2Finline%2F0048_impl_item_neg.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0048_impl_item_neg.txt?ref=346f6e4f7d364b009d0feb66162314abfd06c81b", "patch": "@@ -0,0 +1,22 @@\n+FILE@[0; 20)\n+  IMPL_ITEM@[0; 20)\n+    IMPL_KW@[0; 4)\n+    WHITESPACE@[4; 5)\n+    EXCL@[5; 6)\n+    PATH_TYPE@[6; 11)\n+      PATH@[6; 11)\n+        PATH_SEGMENT@[6; 11)\n+          NAME_REF@[6; 11)\n+            IDENT@[6; 10) \"Send\"\n+            WHITESPACE@[10; 11)\n+    FOR_KW@[11; 14)\n+    PATH_TYPE@[14; 17)\n+      PATH@[14; 17)\n+        PATH_SEGMENT@[14; 17)\n+          NAME_REF@[14; 17)\n+            WHITESPACE@[14; 15)\n+            IDENT@[15; 16) \"X\"\n+            WHITESPACE@[16; 17)\n+    L_CURLY@[17; 18)\n+    R_CURLY@[18; 19)\n+    WHITESPACE@[19; 20)"}]}