{"sha": "23a76a8ab5f7b29a1eb7aca5f3e4c4a9b866d5b7", "node_id": "C_kwDOAAsO6NoAKDIzYTc2YThhYjVmN2IyOWExZWI3YWNhNWYzZTRjNGE5Yjg2NmQ1Yjc", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-20T06:14:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-20T06:14:55Z"}, "message": "Auto merge of #110527 - nnethercote:lazy-graph, r=lqd\n\nIn `LexicalResolver`, don't construct graph unless necessary.\n\nA small but easy perf win.\n\nr? `@jackh726`", "tree": {"sha": "3aac85f06daa3551062e97ba2c9bde3dc540a942", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3aac85f06daa3551062e97ba2c9bde3dc540a942"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23a76a8ab5f7b29a1eb7aca5f3e4c4a9b866d5b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23a76a8ab5f7b29a1eb7aca5f3e4c4a9b866d5b7", "html_url": "https://github.com/rust-lang/rust/commit/23a76a8ab5f7b29a1eb7aca5f3e4c4a9b866d5b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23a76a8ab5f7b29a1eb7aca5f3e4c4a9b866d5b7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7fde08365c4c3cfc9a9f8a6a02693b789adbe6da", "url": "https://api.github.com/repos/rust-lang/rust/commits/7fde08365c4c3cfc9a9f8a6a02693b789adbe6da", "html_url": "https://github.com/rust-lang/rust/commit/7fde08365c4c3cfc9a9f8a6a02693b789adbe6da"}, {"sha": "8e6c9e06945b245d7ce4b99561508583ddca574d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e6c9e06945b245d7ce4b99561508583ddca574d", "html_url": "https://github.com/rust-lang/rust/commit/8e6c9e06945b245d7ce4b99561508583ddca574d"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "df15cab00b4879af8c781989c152b6e089b138d1", "filename": "compiler/rustc_infer/src/infer/lexical_region_resolve/mod.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/23a76a8ab5f7b29a1eb7aca5f3e4c4a9b866d5b7/compiler%2Frustc_infer%2Fsrc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23a76a8ab5f7b29a1eb7aca5f3e4c4a9b866d5b7/compiler%2Frustc_infer%2Fsrc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Flexical_region_resolve%2Fmod.rs?ref=23a76a8ab5f7b29a1eb7aca5f3e4c4a9b866d5b7", "patch": "@@ -131,10 +131,9 @@ impl<'cx, 'tcx> LexicalResolver<'cx, 'tcx> {\n             self.dump_constraints();\n         }\n \n-        let graph = self.construct_graph();\n         self.expansion(&mut var_data);\n         self.collect_errors(&mut var_data, errors);\n-        self.collect_var_errors(&var_data, &graph, errors);\n+        self.collect_var_errors(&var_data, errors);\n         var_data\n     }\n \n@@ -622,7 +621,6 @@ impl<'cx, 'tcx> LexicalResolver<'cx, 'tcx> {\n     fn collect_var_errors(\n         &self,\n         var_data: &LexicalRegionResolutions<'tcx>,\n-        graph: &RegionGraph<'tcx>,\n         errors: &mut Vec<RegionResolutionError<'tcx>>,\n     ) {\n         debug!(\"collect_var_errors, var_data = {:#?}\", var_data.values);\n@@ -640,6 +638,10 @@ impl<'cx, 'tcx> LexicalResolver<'cx, 'tcx> {\n         // overlapping locations.\n         let mut dup_vec = IndexVec::from_elem_n(None, self.num_vars());\n \n+        // Only construct the graph when necessary, because it's moderately\n+        // expensive.\n+        let mut graph = None;\n+\n         for (node_vid, value) in var_data.values.iter_enumerated() {\n             match *value {\n                 VarValue::Empty(_) | VarValue::Value(_) => { /* Inference successful */ }\n@@ -672,7 +674,8 @@ impl<'cx, 'tcx> LexicalResolver<'cx, 'tcx> {\n                     // influence the constraints on this value for\n                     // richer diagnostics in `static_impl_trait`.\n \n-                    self.collect_error_for_expanding_node(graph, &mut dup_vec, node_vid, errors);\n+                    let g = graph.get_or_insert_with(|| self.construct_graph());\n+                    self.collect_error_for_expanding_node(g, &mut dup_vec, node_vid, errors);\n                 }\n             }\n         }"}]}