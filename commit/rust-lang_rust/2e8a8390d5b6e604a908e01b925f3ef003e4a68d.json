{"sha": "2e8a8390d5b6e604a908e01b925f3ef003e4a68d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlOGE4MzkwZDViNmU2MDRhOTA4ZTAxYjkyNWYzZWYwMDNlNGE2OGQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-28T20:34:17Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-28T20:34:17Z"}, "message": "stdlib: Rename the 'ls_' param in list functions to 'ls'", "tree": {"sha": "5f4205a87889c22a2fc1b230f12349e84692a95f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f4205a87889c22a2fc1b230f12349e84692a95f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e8a8390d5b6e604a908e01b925f3ef003e4a68d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e8a8390d5b6e604a908e01b925f3ef003e4a68d", "html_url": "https://github.com/rust-lang/rust/commit/2e8a8390d5b6e604a908e01b925f3ef003e4a68d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e8a8390d5b6e604a908e01b925f3ef003e4a68d/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1da99cdf687e91e5df579d518a8b16871b0686a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/1da99cdf687e91e5df579d518a8b16871b0686a1", "html_url": "https://github.com/rust-lang/rust/commit/1da99cdf687e91e5df579d518a8b16871b0686a1"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "2b22fb97c8e6779f450bdb27e9eb1794d7ed55c2", "filename": "src/lib/list.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2e8a8390d5b6e604a908e01b925f3ef003e4a68d/src%2Flib%2Flist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e8a8390d5b6e604a908e01b925f3ef003e4a68d/src%2Flib%2Flist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Flist.rs?ref=2e8a8390d5b6e604a908e01b925f3ef003e4a68d", "patch": "@@ -40,13 +40,13 @@ and so on, returning the accumulated result.\n \n Parameters:\n \n-ls_ - The list to fold\n+ls - The list to fold\n u - The initial value\n f - The function to apply\n */\n-fn foldl<T, U>(ls_: list<T>, u: U, f: block(T, U) -> U) -> U {\n+fn foldl<T, U>(ls: list<T>, u: U, f: block(T, U) -> U) -> U {\n     let accum: U = u;\n-    let ls = ls_;\n+    let ls = ls;\n     while true {\n         alt ls {\n           cons(hd, tl) { accum = f(hd, accum); ls = *tl; }\n@@ -65,8 +65,8 @@ Apply function `f` to each element of `v`, starting from the first.\n When function `f` returns true then an option containing the element\n is returned. If `f` matches no elements then none is returned.\n */\n-fn find<T, U>(ls_: list<T>, f: block(T) -> option::t<U>) -> option::t<U> {\n-    let ls = ls_;\n+fn find<T, U>(ls: list<T>, f: block(T) -> option::t<U>) -> option::t<U> {\n+    let ls = ls;\n     while true {\n         alt ls {\n           cons(hd, tl) {\n@@ -83,8 +83,8 @@ Function: has\n \n Returns true if a list contains an element with the given value\n */\n-fn has<T>(ls_: list<T>, elt: T) -> bool {\n-    let ls = ls_;\n+fn has<T>(ls: list<T>, elt: T) -> bool {\n+    let ls = ls;\n     while true {\n         alt ls {\n           cons(hd, tl) { if elt == hd { ret true; } else { ls = *tl; } }"}]}