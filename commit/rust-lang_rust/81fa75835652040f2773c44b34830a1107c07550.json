{"sha": "81fa75835652040f2773c44b34830a1107c07550", "node_id": "C_kwDOAAsO6NoAKDgxZmE3NTgzNTY1MjA0MGYyNzczYzQ0YjM0ODMwYTExMDdjMDc1NTA", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2021-11-09T03:44:02Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2021-11-09T03:44:02Z"}, "message": "Improve variable naming 2", "tree": {"sha": "4d23d03de980c1d93904181b75b7e7e52d1363ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d23d03de980c1d93904181b75b7e7e52d1363ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81fa75835652040f2773c44b34830a1107c07550", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81fa75835652040f2773c44b34830a1107c07550", "html_url": "https://github.com/rust-lang/rust/commit/81fa75835652040f2773c44b34830a1107c07550", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81fa75835652040f2773c44b34830a1107c07550/comments", "author": null, "committer": null, "parents": [{"sha": "c8f909ee54f74b5fefa0d16afe92188368c9ccac", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8f909ee54f74b5fefa0d16afe92188368c9ccac", "html_url": "https://github.com/rust-lang/rust/commit/c8f909ee54f74b5fefa0d16afe92188368c9ccac"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "97a19d55ccfac86ef875b91613d92a9dbff09607", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/81fa75835652040f2773c44b34830a1107c07550/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81fa75835652040f2773c44b34830a1107c07550/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=81fa75835652040f2773c44b34830a1107c07550", "patch": "@@ -1601,17 +1601,17 @@ fn all_ranges<'tcx>(cx: &LateContext<'tcx>, arms: &'tcx [Arm<'_>], ty: Ty<'tcx>)\n         .filter_map(|arm| {\n             if let Arm { pat, guard: None, .. } = *arm {\n                 if let PatKind::Range(ref lhs, ref rhs, range_end) = pat.kind {\n-                    let lhs = match lhs {\n+                    let lhs_const = match lhs {\n                         Some(lhs) => constant(cx, cx.typeck_results(), lhs)?.0,\n                         None => miri_to_const(ty.numeric_min_val(cx.tcx)?)?,\n                     };\n-                    let rhs = match rhs {\n+                    let rhs_const = match rhs {\n                         Some(rhs) => constant(cx, cx.typeck_results(), rhs)?.0,\n                         None => miri_to_const(ty.numeric_max_val(cx.tcx)?)?,\n                     };\n \n-                    let lhs_val = lhs.int_value(cx, ty)?;\n-                    let rhs_val = rhs.int_value(cx, ty)?;\n+                    let lhs_val = lhs_const.int_value(cx, ty)?;\n+                    let rhs_val = rhs_const.int_value(cx, ty)?;\n \n                     let rhs_bound = match range_end {\n                         RangeEnd::Included => EndBound::Included(rhs_val),"}]}