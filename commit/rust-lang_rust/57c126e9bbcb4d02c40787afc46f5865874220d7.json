{"sha": "57c126e9bbcb4d02c40787afc46f5865874220d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3YzEyNmU5YmJjYjRkMDJjNDA3ODdhZmM0NmY1ODY1ODc0MjIwZDc=", "commit": {"author": {"name": "Young-il Choi", "email": "duddlf.choi@samsung.com", "date": "2013-05-01T09:50:23Z"}, "committer": {"name": "Young-il Choi", "email": "duddlf.choi@samsung.com", "date": "2013-05-01T09:50:23Z"}, "message": "mk: test.mk expanded to ARM test automation", "tree": {"sha": "d678644c8188457bf6aa588df0d17eb189cc8754", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d678644c8188457bf6aa588df0d17eb189cc8754"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57c126e9bbcb4d02c40787afc46f5865874220d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57c126e9bbcb4d02c40787afc46f5865874220d7", "html_url": "https://github.com/rust-lang/rust/commit/57c126e9bbcb4d02c40787afc46f5865874220d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57c126e9bbcb4d02c40787afc46f5865874220d7/comments", "author": {"login": "yichoi", "id": 3222276, "node_id": "MDQ6VXNlcjMyMjIyNzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3222276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yichoi", "html_url": "https://github.com/yichoi", "followers_url": "https://api.github.com/users/yichoi/followers", "following_url": "https://api.github.com/users/yichoi/following{/other_user}", "gists_url": "https://api.github.com/users/yichoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/yichoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yichoi/subscriptions", "organizations_url": "https://api.github.com/users/yichoi/orgs", "repos_url": "https://api.github.com/users/yichoi/repos", "events_url": "https://api.github.com/users/yichoi/events{/privacy}", "received_events_url": "https://api.github.com/users/yichoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yichoi", "id": 3222276, "node_id": "MDQ6VXNlcjMyMjIyNzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3222276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yichoi", "html_url": "https://github.com/yichoi", "followers_url": "https://api.github.com/users/yichoi/followers", "following_url": "https://api.github.com/users/yichoi/following{/other_user}", "gists_url": "https://api.github.com/users/yichoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/yichoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yichoi/subscriptions", "organizations_url": "https://api.github.com/users/yichoi/orgs", "repos_url": "https://api.github.com/users/yichoi/repos", "events_url": "https://api.github.com/users/yichoi/events{/privacy}", "received_events_url": "https://api.github.com/users/yichoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dca88701a311c7dffec1ee5e990df9570647ba03", "url": "https://api.github.com/repos/rust-lang/rust/commits/dca88701a311c7dffec1ee5e990df9570647ba03", "html_url": "https://github.com/rust-lang/rust/commit/dca88701a311c7dffec1ee5e990df9570647ba03"}], "stats": {"total": 113, "additions": 108, "deletions": 5}, "files": [{"sha": "9b01c4af80fdd1466f191961bce8951d094a1c27", "filename": "mk/tests.mk", "status": "modified", "additions": 108, "deletions": 5, "changes": 113, "blob_url": "https://github.com/rust-lang/rust/blob/57c126e9bbcb4d02c40787afc46f5865874220d7/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/57c126e9bbcb4d02c40787afc46f5865874220d7/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=57c126e9bbcb4d02c40787afc46f5865874220d7", "patch": "@@ -92,6 +92,48 @@ endef\n $(foreach target,$(CFG_TARGET_TRIPLES), \\\n   $(eval $(call DEF_TARGET_COMMANDS,$(target))))\n \n+# Target specific variables \n+# for arm-linux-androidabi\n+define DEF_RUNNABLE_STATUS\n+CFG_RUNNABLE_$(1)=$(2)\n+endef\n+\n+$(foreach target,$(CFG_TARGET_TRIPLES), \\\n+  $(if $(findstring $(target),$(CFG_BUILD_TRIPLE)), \\\n+    $(info check: $(target) test set is runnable \\\n+      $(eval $(call DEF_RUNNABLE_STATUS,$(target),true))), \\\n+    $(if $(findstring $(target),\"arm-linux-androideabi\"), \\\n+      $(if $(findstring adb,$(shell which adb)), \\\n+        $(if $(findstring device,$(shell adb devices 2>/dev/null | grep -E '^[A-Za-z0-9]+[[:blank:]]+device')), \\\n+          $(info check: $(target) test set is runnable \\\n+            $(info check: adb device attached) \\\n+            $(eval $(call DEF_RUNNABLE_STATUS,$(target),true))), \\\n+          $(info check: $(target) test set is not runnable \\\n+            $(info check: adb device not attached) \\\n+            $(eval $(call DEF_RUNNABLE_STATUS,$(target),false))) \\\n+        ), \\\n+        $(info check: $(target) test set is not runnable \\\n+          $(info check: adb not found) \\\n+          $(eval $(call DEF_RUNNABLE_STATUS,$(target),false))) \\\n+      ), \\\n+      $(info check: $(target) test set is not runnable \\\n+        $(eval $(call DEF_RUNNABLE_STATUS,$(target),false)) \\\n+      ) \\\n+    ) \\\n+  ) \\\n+)\n+\n+ifeq ($(CFG_RUNNABLE_arm-linux-androideabi),true)\n+CFG_ADB_DEVICE=true\n+CFG_ADB_PATH := $(shell which adb)\n+CFG_ADB_TEST_DIR=/system/tmp\n+\n+$(info check: device $(CFG_ADB_TEST_DIR) \\\n+ $(shell $(CFG_ADB_PATH) shell mkdir $(CFG_ADB_TEST_DIR) 1>/dev/null) \\\n+ $(shell $(CFG_ADB_PATH) shell rm $(CFG_ADB_TEST_DIR)/*-arm-linux-androideabi 1>/dev/null) \\\n+ $(shell $(CFG_ADB_PATH) shell rm $(CFG_ADB_TEST_DIR)/*.so 1>/dev/null) \\\n+ )\n+endif\n \n ######################################################################\n # Main test targets\n@@ -319,11 +361,52 @@ $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4)): \\\n \t&& touch $$@\n endef\n \n+define DEF_TEST_CRATE_RULES_arm-linux-androideabi\n+check-stage$(1)-T-$(2)-H-$(3)-$(4)-exec: $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4))\n+\n+$$(call TEST_OK_FILE,$(1),$(2),$(3),$(4)): \\\n+\t\t$(3)/test/$(4)test.stage$(1)-$(2)$$(X_$(2))\n+\t@$$(call E, run: $$< via adb)\n+\t@$(CFG_ADB_PATH) push $$< $(CFG_ADB_TEST_DIR)\n+\t@$(CFG_ADB_PATH) shell $(CFG_ADB_TEST_DIR)/`echo $$< | sed 's/.*\\///'` \\\n+\t\t--logfile $(CFG_ADB_TEST_DIR)/check-stage$(1)-T-$(2)-H-$(3)-$(4).log > \\\n+\t\ttmp/check-stage$(1)-T-$(2)-H-$(3)-$(4).tmp\n+\t@cat tmp/check-stage$(1)-T-$(2)-H-$(3)-$(4).tmp\n+\t@touch tmp/check-stage$(1)-T-$(2)-H-$(3)-$(4).log\n+\t@$(CFG_ADB_PATH) pull $(CFG_ADB_TEST_DIR)/check-stage$(1)-T-$(2)-H-$(3)-$(4).log tmp/\n+\t@$(CFG_ADB_PATH) shell rm $(CFG_ADB_TEST_DIR)/check-stage$(1)-T-$(2)-H-$(3)-$(4).log\n+\t@if grep -q \"result: ok\" tmp/check-stage$(1)-T-$(2)-H-$(3)-$(4).tmp; \\\n+\tthen \\\n+\t\trm tmp/check-stage$(1)-T-$(2)-H-$(3)-$(4).tmp; \\\n+\t\ttouch $$@; \\\n+\telse \\\n+\t\trm tmp/check-stage$(1)-T-$(2)-H-$(3)-$(4).tmp; \\\n+\t\texit 101; \\\n+\tfi\n+endef\n+\n+define DEF_TEST_CRATE_RULES_null\n+check-stage$(1)-T-$(2)-H-$(3)-$(4)-exec: $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4))\n+\n+$$(call TEST_OK_FILE,$(1),$(2),$(3),$(4)): \\\n+\t\t$(3)/test/$(4)test.stage$(1)-$(2)$$(X_$(2))\n+\t@$$(call E, run: skipped $$< )\n+\t@touch $$@\n+endef\n+\n $(foreach host,$(CFG_HOST_TRIPLES), \\\n  $(foreach target,$(CFG_TARGET_TRIPLES), \\\n   $(foreach stage,$(STAGES), \\\n    $(foreach crate, $(TEST_CRATES), \\\n-    $(eval $(call DEF_TEST_CRATE_RULES,$(stage),$(target),$(host),$(crate)))))))\n+    $(if $(findstring $(target),$(CFG_BUILD_TRIPLE)), \\\n+     $(eval $(call DEF_TEST_CRATE_RULES,$(stage),$(target),$(host),$(crate))), \\\n+     $(if $(findstring $(target),\"arm-linux-androideabi\"), \\\n+      $(if $(findstring $(CFG_RUNNABLE_arm-linux-androideabi),\"true\"), \\\n+       $(eval $(call DEF_TEST_CRATE_RULES_arm-linux-androideabi,$(stage),$(target),$(host),$(crate))), \\\n+       $(eval $(call DEF_TEST_CRATE_RULES_null,$(stage),$(target),$(host),$(crate))) \\\n+      ), \\\n+      $(eval $(call DEF_TEST_CRATE_RULES_null,$(stage),$(target),$(host),$(crate))) \\\n+     )))))) \n \n \n ######################################################################\n@@ -414,15 +497,35 @@ TEST_SREQ$(1)_T_$(2)_H_$(3) = \\\n \n # Rules for the cfail/rfail/rpass/bench/perf test runner\n \n+ifeq ($(CFG_ADB_DEVICE),true)\n+\n CTEST_COMMON_ARGS$(1)-T-$(2)-H-$(3) :=\t\t\t\t\t\t\\\n \t\t--compile-lib-path $$(HLIB$(1)_H_$(3))\t\t\t\t\\\n         --run-lib-path $$(TLIB$(1)_T_$(2)_H_$(3))\t\t\t\\\n         --rustc-path $$(HBIN$(1)_H_$(3))/rustc$$(X_$(3))\t\t\t\\\n         --aux-base $$(S)src/test/auxiliary/                 \\\n         --stage-id stage$(1)-$(2)\t\t\t\t\t\t\t\\\n+        --host $(3)                                         \\\n+        --target $(2)                                       \\\n+        --adb-path=$(CFG_ADB_PATH)                          \\\n         --rustcflags \"$(RUSTC_FLAGS_$(2)) $$(CFG_RUSTC_FLAGS) --target=$(2)\" \\\n         $$(CTEST_TESTARGS)\n \n+else\n+\n+CTEST_COMMON_ARGS$(1)-T-$(2)-H-$(3) :=\t\t\t\t\t\t\\\n+\t\t--compile-lib-path $$(HLIB$(1)_H_$(3))\t\t\t\t\\\n+        --run-lib-path $$(TLIB$(1)_T_$(2)_H_$(3))\t\t\t\\\n+        --rustc-path $$(HBIN$(1)_H_$(3))/rustc$$(X_$(3))\t\t\t\\\n+        --aux-base $$(S)src/test/auxiliary/                 \\\n+        --stage-id stage$(1)-$(2)\t\t\t\t\t\t\t\\\n+        --host $(3)                                         \\\n+        --target $(2)                                       \\\n+        --rustcflags \"$(RUSTC_FLAGS_$(2)) $$(CFG_RUSTC_FLAGS) --target=$(2)\" \\\n+        $$(CTEST_TESTARGS)\n+\n+endif\n+\n CTEST_DEPS_rpass_$(1)-T-$(2)-H-$(3) = $$(RPASS_TESTS)\n CTEST_DEPS_rpass_full_$(1)-T-$(2)-H-$(3) = $$(RPASS_FULL_TESTS) $$(TLIBRUSTC_DEFAULT$(1)_T_$(2)_H_$(3))\n CTEST_DEPS_rfail_$(1)-T-$(2)-H-$(3) = $$(RFAIL_TESTS)\n@@ -454,7 +557,7 @@ ifeq ($$(CTEST_DISABLE_$(4)),)\n $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4)): \\\n \t\t$$(TEST_SREQ$(1)_T_$(2)_H_$(3)) \\\n                 $$(CTEST_DEPS_$(4)_$(1)-T-$(2)-H-$(3))\n-\t@$$(call E, run $(4): $$<)\n+\t@$$(call E, run $(4) [$(2)]: $$<)\n \t$$(Q)$$(call CFG_RUN_CTEST_$(2),$(1),$$<,$(3)) \\\n \t\t$$(CTEST_ARGS$(1)-T-$(2)-H-$(3)-$(4)) \\\n \t\t--logfile $$(call TEST_LOG_FILE,$(1),$(2),$(3),$(4)) \\\n@@ -465,7 +568,7 @@ else\n $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4)): \\\n \t\t$$(TEST_SREQ$(1)_T_$(2)_H_$(3)) \\\n                 $$(CTEST_DEPS_$(4)_$(1)-T-$(2)-H-$(3))\n-\t@$$(call E, run $(4): $$<)\n+\t@$$(call E, run $(4) [$(2)]: $$<)\n \t@$$(call E, warning: tests disabled: $$(CTEST_DISABLE_$(4)))\n \ttouch $$@\n \n@@ -506,7 +609,7 @@ check-stage$(1)-T-$(2)-H-$(3)-$(4)-exec: $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4\n $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4)): \\\n \t        $$(TEST_SREQ$(1)_T_$(2)_H_$(3))\t\t\\\n \t        $$(PRETTY_DEPS_$(4))\n-\t@$$(call E, run pretty-rpass: $$<)\n+\t@$$(call E, run pretty-rpass [$(2)]: $$<)\n \t$$(Q)$$(call CFG_RUN_CTEST_$(2),$(1),$$<,$(3)) \\\n \t\t$$(PRETTY_ARGS$(1)-T-$(2)-H-$(3)-$(4)) \\\n \t\t--logfile $$(call TEST_LOG_FILE,$(1),$(2),$(3),$(4)) \\\n@@ -533,7 +636,7 @@ check-stage$(1)-T-$(2)-H-$(3)-doc-$(4)-exec: $$(call TEST_OK_FILE,$(1),$(2),$(3)\n $$(call TEST_OK_FILE,$(1),$(2),$(3),doc-$(4)): \\\n \t        $$(TEST_SREQ$(1)_T_$(2)_H_$(3))\t\t\\\n                 doc-$(4)-extract$(3)\n-\t@$$(call E, run doc-$(4): $$<)\n+\t@$$(call E, run doc-$(4) [$(2)]: $$<)\n \t$$(Q)$$(call CFG_RUN_CTEST_$(2),$(1),$$<,$(3)) \\\n                 $$(DOC_TEST_ARGS$(1)-T-$(2)-H-$(3)-doc-$(4)) \\\n \t\t--logfile $$(call TEST_LOG_FILE,$(1),$(2),$(3),doc-$(4)) \\"}]}