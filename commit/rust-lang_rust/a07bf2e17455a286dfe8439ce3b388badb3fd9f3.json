{"sha": "a07bf2e17455a286dfe8439ce3b388badb3fd9f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwN2JmMmUxNzQ1NWEyODZkZmU4NDM5Y2UzYjM4OGJhZGIzZmQ5ZjM=", "commit": {"author": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2021-04-22T22:49:13Z"}, "committer": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2021-04-22T22:49:13Z"}, "message": "Fix ICE if original_span(fn_sig) returns a span not in body sourcefile\n\nFixes: #84421", "tree": {"sha": "7e8605235d10806d3b4ad5b2356b13f745947a31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e8605235d10806d3b4ad5b2356b13f745947a31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a07bf2e17455a286dfe8439ce3b388badb3fd9f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a07bf2e17455a286dfe8439ce3b388badb3fd9f3", "html_url": "https://github.com/rust-lang/rust/commit/a07bf2e17455a286dfe8439ce3b388badb3fd9f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a07bf2e17455a286dfe8439ce3b388badb3fd9f3/comments", "author": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ccf171242bb00dd17ac4b844e6afe77fabd04b78", "url": "https://api.github.com/repos/rust-lang/rust/commits/ccf171242bb00dd17ac4b844e6afe77fabd04b78", "html_url": "https://github.com/rust-lang/rust/commit/ccf171242bb00dd17ac4b844e6afe77fabd04b78"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "60757178bec0b2bf27fb19ea6037471f8620eba3", "filename": "compiler/rustc_mir/src/transform/coverage/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a07bf2e17455a286dfe8439ce3b388badb3fd9f3/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a07bf2e17455a286dfe8439ce3b388badb3fd9f3/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fmod.rs?ref=a07bf2e17455a286dfe8439ce3b388badb3fd9f3", "patch": "@@ -111,7 +111,8 @@ impl<'a, 'tcx> Instrumentor<'a, 'tcx> {\n         let body_span = hir_body.value.span;\n         let source_file = source_map.lookup_source_file(body_span.lo());\n         let fn_sig_span = match some_fn_sig.filter(|fn_sig| {\n-            Lrc::ptr_eq(&source_file, &source_map.lookup_source_file(fn_sig.span.hi()))\n+            fn_sig.span.ctxt() == body_span.ctxt()\n+                && Lrc::ptr_eq(&source_file, &source_map.lookup_source_file(fn_sig.span.hi()))\n         }) {\n             Some(fn_sig) => fn_sig.span.with_hi(body_span.lo()),\n             None => body_span.shrink_to_lo(),"}, {"sha": "249f5e835cd78ddae823ff0fd42f3ffe032fffa9", "filename": "compiler/rustc_mir/src/transform/coverage/spans.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a07bf2e17455a286dfe8439ce3b388badb3fd9f3/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fspans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a07bf2e17455a286dfe8439ce3b388badb3fd9f3/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fspans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fspans.rs?ref=a07bf2e17455a286dfe8439ce3b388badb3fd9f3", "patch": "@@ -240,13 +240,13 @@ impl<'a, 'tcx> CoverageSpans<'a, 'tcx> {\n     /// to be).\n     pub(super) fn generate_coverage_spans(\n         mir_body: &'a mir::Body<'tcx>,\n-        fn_sig_span: Span,\n+        fn_sig_span: Span, // Ensured to be same SourceFile and SyntaxContext as `body_span`\n         body_span: Span,\n         basic_coverage_blocks: &'a CoverageGraph,\n     ) -> Vec<CoverageSpan> {\n         let mut coverage_spans = CoverageSpans {\n             mir_body,\n-            fn_sig_span: fn_sig_source_span(fn_sig_span, body_span),\n+            fn_sig_span,\n             body_span,\n             basic_coverage_blocks,\n             sorted_spans_iter: None,\n@@ -731,11 +731,6 @@ pub(super) fn filtered_terminator_span(\n     }\n }\n \n-#[inline]\n-fn fn_sig_source_span(fn_sig_span: Span, body_span: Span) -> Span {\n-    original_sp(fn_sig_span, body_span).with_ctxt(body_span.ctxt())\n-}\n-\n #[inline]\n fn function_source_span(span: Span, body_span: Span) -> Span {\n     let span = original_sp(span, body_span).with_ctxt(body_span.ctxt());"}]}