{"sha": "7696aca55f8f5820cbe80a2b455616f10a81af83", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2OTZhY2E1NWY4ZjU4MjBjYmU4MGEyYjQ1NTYxNmYxMGE4MWFmODM=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-31T08:41:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-31T08:41:22Z"}, "message": "Rollup merge of #88450 - notriddle:notriddle/maybe_whole_expr, r=cjgillot\n\nfix(rustc_parse): correct span in `maybe_whole_expr!`\n\nFixes #87812", "tree": {"sha": "07b3cc54ae0784e1576aabbc71f80f129d7ea84b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07b3cc54ae0784e1576aabbc71f80f129d7ea84b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7696aca55f8f5820cbe80a2b455616f10a81af83", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhLesyCRBK7hj4Ov3rIwAATocIAKUmkzTNdXh/wXtq6pgARHdj\n3mmyk7NsmnEBu8tz/pstf2e4LkJtZ+VaLJrMJ0jF/nLy6YqfzXT0uN94zuGSar3X\n2e0ZGF8LdqcuBh0235QcXBnIL1euxk39FT0dpAQl6E2vLakuv5+oNEnuuOpae0Ce\nMF6616Avlruj3E+MIWV5TnJOlWzXb4+RrLIvNaXtk4xgIYR2zhLDbU7HSXs8ZlHa\nsutsR6Lv3ur4+K/sxLQpHoJyuV4Yg9empbw6pybm55NcSj7JacUm15YEJ4bf3A9d\n0AFXsNugFOrflhlRmnfs1XhyGcJ/w8oKNUB9sdObQy9JJ5fDeA/XVH/YMKBvnQc=\n=CO5n\n-----END PGP SIGNATURE-----\n", "payload": "tree 07b3cc54ae0784e1576aabbc71f80f129d7ea84b\nparent 2013792641122d7d4d5181ee596796df6b7ee85e\nparent f7c0566b1209fc7c29d9621cb482acdf58dabd65\nauthor Mara Bos <m-ou.se@m-ou.se> 1630399282 +0200\ncommitter GitHub <noreply@github.com> 1630399282 +0200\n\nRollup merge of #88450 - notriddle:notriddle/maybe_whole_expr, r=cjgillot\n\nfix(rustc_parse): correct span in `maybe_whole_expr!`\n\nFixes #87812\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7696aca55f8f5820cbe80a2b455616f10a81af83", "html_url": "https://github.com/rust-lang/rust/commit/7696aca55f8f5820cbe80a2b455616f10a81af83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7696aca55f8f5820cbe80a2b455616f10a81af83/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2013792641122d7d4d5181ee596796df6b7ee85e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2013792641122d7d4d5181ee596796df6b7ee85e", "html_url": "https://github.com/rust-lang/rust/commit/2013792641122d7d4d5181ee596796df6b7ee85e"}, {"sha": "f7c0566b1209fc7c29d9621cb482acdf58dabd65", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7c0566b1209fc7c29d9621cb482acdf58dabd65", "html_url": "https://github.com/rust-lang/rust/commit/f7c0566b1209fc7c29d9621cb482acdf58dabd65"}], "stats": {"total": 66, "additions": 64, "deletions": 2}, "files": [{"sha": "a1d3e9adba013e91d0ecd36745bd928bac6d32cf", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7696aca55f8f5820cbe80a2b455616f10a81af83/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7696aca55f8f5820cbe80a2b455616f10a81af83/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=7696aca55f8f5820cbe80a2b455616f10a81af83", "patch": "@@ -41,7 +41,7 @@ macro_rules! maybe_whole_expr {\n                     let path = path.clone();\n                     $p.bump();\n                     return Ok($p.mk_expr(\n-                        $p.token.span,\n+                        $p.prev_token.span,\n                         ExprKind::Path(None, path),\n                         AttrVec::new(),\n                     ));\n@@ -50,7 +50,7 @@ macro_rules! maybe_whole_expr {\n                     let block = block.clone();\n                     $p.bump();\n                     return Ok($p.mk_expr(\n-                        $p.token.span,\n+                        $p.prev_token.span,\n                         ExprKind::Block(block, None),\n                         AttrVec::new(),\n                     ));"}, {"sha": "b88780876db064c7397d7abd10c05c354041eb61", "filename": "src/test/ui/parser/issue-87812-path.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7696aca55f8f5820cbe80a2b455616f10a81af83/src%2Ftest%2Fui%2Fparser%2Fissue-87812-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7696aca55f8f5820cbe80a2b455616f10a81af83/src%2Ftest%2Fui%2Fparser%2Fissue-87812-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-87812-path.rs?ref=7696aca55f8f5820cbe80a2b455616f10a81af83", "patch": "@@ -0,0 +1,11 @@\n+macro_rules! foo {\n+    ( $f:path ) => {{\n+        let _: usize = $f; //~ERROR\n+    }};\n+}\n+\n+struct Baz;\n+\n+fn main() {\n+    foo!(Baz);\n+}"}, {"sha": "0c8e6fdd3076a44b5b51de58d6feafe5a89c6c50", "filename": "src/test/ui/parser/issue-87812-path.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7696aca55f8f5820cbe80a2b455616f10a81af83/src%2Ftest%2Fui%2Fparser%2Fissue-87812-path.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7696aca55f8f5820cbe80a2b455616f10a81af83/src%2Ftest%2Fui%2Fparser%2Fissue-87812-path.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-87812-path.stderr?ref=7696aca55f8f5820cbe80a2b455616f10a81af83", "patch": "@@ -0,0 +1,16 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-87812-path.rs:3:24\n+   |\n+LL |         let _: usize = $f;\n+   |                -----   ^^ expected `usize`, found struct `Baz`\n+   |                |\n+   |                expected due to this\n+...\n+LL |     foo!(Baz);\n+   |     ---------- in this macro invocation\n+   |\n+   = note: this error originates in the macro `foo` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "0ba87b995443f4e73bc3b2433458492f0626fdbb", "filename": "src/test/ui/parser/issue-87812.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7696aca55f8f5820cbe80a2b455616f10a81af83/src%2Ftest%2Fui%2Fparser%2Fissue-87812.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7696aca55f8f5820cbe80a2b455616f10a81af83/src%2Ftest%2Fui%2Fparser%2Fissue-87812.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-87812.rs?ref=7696aca55f8f5820cbe80a2b455616f10a81af83", "patch": "@@ -0,0 +1,13 @@\n+#![deny(break_with_label_and_loop)]\n+\n+macro_rules! foo {\n+    ( $f:block ) => {\n+        '_l: loop {\n+            break '_l $f; //~ERROR\n+        }\n+    };\n+}\n+\n+fn main() {\n+    let x = foo!({ 3 });\n+}"}, {"sha": "d61ee23a50b5b3aad0c30dd952e907818d781ea1", "filename": "src/test/ui/parser/issue-87812.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7696aca55f8f5820cbe80a2b455616f10a81af83/src%2Ftest%2Fui%2Fparser%2Fissue-87812.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7696aca55f8f5820cbe80a2b455616f10a81af83/src%2Ftest%2Fui%2Fparser%2Fissue-87812.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-87812.stderr?ref=7696aca55f8f5820cbe80a2b455616f10a81af83", "patch": "@@ -0,0 +1,22 @@\n+error: this labeled break expression is easy to confuse with an unlabeled break with a labeled value expression\n+  --> $DIR/issue-87812.rs:6:13\n+   |\n+LL |             break '_l $f;\n+   |             ^^^^^^^^^^^^\n+...\n+LL |     let x = foo!({ 3 });\n+   |             ----------- in this macro invocation\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-87812.rs:1:9\n+   |\n+LL | #![deny(break_with_label_and_loop)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   = note: this error originates in the macro `foo` (in Nightly builds, run with -Z macro-backtrace for more info)\n+help: wrap this expression in parentheses\n+   |\n+LL |             break '_l ($f);\n+   |                       +  +\n+\n+error: aborting due to previous error\n+"}]}