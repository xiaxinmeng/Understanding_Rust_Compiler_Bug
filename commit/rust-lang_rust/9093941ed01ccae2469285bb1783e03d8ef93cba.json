{"sha": "9093941ed01ccae2469285bb1783e03d8ef93cba", "node_id": "C_kwDOAAsO6NoAKDkwOTM5NDFlZDAxY2NhZTI0NjkyODViYjE3ODNlMDNkOGVmOTNjYmE", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-04-08T23:09:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-08T23:09:18Z"}, "message": "Merge #11943\n\n11943: fix: Don't create `hir::Local`s from const path patterns r=Veykril a=Veykril\n\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/11941\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "4765eb32e9ec9ccd391bcaef60798dc1f179f4ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4765eb32e9ec9ccd391bcaef60798dc1f179f4ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9093941ed01ccae2469285bb1783e03d8ef93cba", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiUMCeCRBK7hj4Ov3rIwAAPsEIAFmb2o74aMz6/aMMRCdUpyJj\n/83btDPaTPQefuvAoIgaAS6/xpxLewPQjI/npOr817jWqUOQ7ZIl7T4FYNo16dmc\nbiCKE63eohPp4asYpXjhg0LVGTeebFS4BUhh7YwLpCnDnN1WAgyuUXxTUet542nM\nCxZtWyB8NVQa4OKDx1qIsUj/lUXVxWfm/or8XHkcSPfKUM/RMgSwUwPq4zvSQ8JZ\n6kvQKwJ+q1DeDpvi8UrjRcn2utz1kSpHaO8Pe+J5jB7syX8RG8sv+J2e4stvsXq5\naf1gZyvyidZRQECxaiJXtCaIOSBWDqap9zMQfeRR+UGTiIYn43khEwm0nrbaok8=\n=Nuns\n-----END PGP SIGNATURE-----\n", "payload": "tree 4765eb32e9ec9ccd391bcaef60798dc1f179f4ac\nparent e11959a82ba6728c6a1851827a3e657d16229c23\nparent 9050db2e80ee0190cc4a6eddc972a5e19bc9f926\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1649459358 +0000\ncommitter GitHub <noreply@github.com> 1649459358 +0000\n\nMerge #11943\n\n11943: fix: Don't create `hir::Local`s from const path patterns r=Veykril a=Veykril\n\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/11941\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9093941ed01ccae2469285bb1783e03d8ef93cba", "html_url": "https://github.com/rust-lang/rust/commit/9093941ed01ccae2469285bb1783e03d8ef93cba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9093941ed01ccae2469285bb1783e03d8ef93cba/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e11959a82ba6728c6a1851827a3e657d16229c23", "url": "https://api.github.com/repos/rust-lang/rust/commits/e11959a82ba6728c6a1851827a3e657d16229c23", "html_url": "https://github.com/rust-lang/rust/commit/e11959a82ba6728c6a1851827a3e657d16229c23"}, {"sha": "9050db2e80ee0190cc4a6eddc972a5e19bc9f926", "url": "https://api.github.com/repos/rust-lang/rust/commits/9050db2e80ee0190cc4a6eddc972a5e19bc9f926", "html_url": "https://github.com/rust-lang/rust/commit/9050db2e80ee0190cc4a6eddc972a5e19bc9f926"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "5c4cfa7b45a53fa275411abafba764083f39baf5", "filename": "crates/hir/src/semantics/source_to_def.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9093941ed01ccae2469285bb1783e03d8ef93cba/crates%2Fhir%2Fsrc%2Fsemantics%2Fsource_to_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9093941ed01ccae2469285bb1783e03d8ef93cba/crates%2Fhir%2Fsrc%2Fsemantics%2Fsource_to_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics%2Fsource_to_def.rs?ref=9093941ed01ccae2469285bb1783e03d8ef93cba", "patch": "@@ -213,10 +213,15 @@ impl SourceToDefCtx<'_, '_> {\n         src: InFile<ast::IdentPat>,\n     ) -> Option<(DefWithBodyId, PatId)> {\n         let container = self.find_pat_or_label_container(src.syntax())?;\n-        let (_body, source_map) = self.db.body_with_source_map(container);\n+        let (body, source_map) = self.db.body_with_source_map(container);\n         let src = src.map(ast::Pat::from);\n         let pat_id = source_map.node_pat(src.as_ref())?;\n-        Some((container, pat_id))\n+        // the pattern could resolve to a constant, verify that that is not the case\n+        if let crate::Pat::Bind { .. } = body[pat_id] {\n+            Some((container, pat_id))\n+        } else {\n+            None\n+        }\n     }\n     pub(super) fn self_param_to_def(\n         &mut self,"}, {"sha": "65dc2a0d51108571f810941f2ecb14e284587dc4", "filename": "crates/ide_assists/src/handlers/inline_local_variable.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9093941ed01ccae2469285bb1783e03d8ef93cba/crates%2Fide_assists%2Fsrc%2Fhandlers%2Finline_local_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9093941ed01ccae2469285bb1783e03d8ef93cba/crates%2Fide_assists%2Fsrc%2Fhandlers%2Finline_local_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Finline_local_variable.rs?ref=9093941ed01ccae2469285bb1783e03d8ef93cba", "patch": "@@ -935,6 +935,20 @@ fn f() {\n         0\n     };\n }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn test_inline_let_unit_struct() {\n+        check_assist_not_applicable(\n+            inline_local_variable,\n+            r#\"\n+struct S;\n+fn f() {\n+    let S$0 = S;\n+    S;\n+}\n \"#,\n         );\n     }"}]}