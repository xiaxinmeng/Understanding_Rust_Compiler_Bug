{"sha": "22a702d016b25b8c800b9707a5bd416fb6623b79", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyYTcwMmQwMTZiMjViOGM4MDBiOTcwN2E1YmQ0MTZmYjY2MjNiNzk=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-06-08T14:49:41Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-06-23T19:32:37Z"}, "message": "Add check on constant to ensure it's up to date", "tree": {"sha": "6bd6e43fd976321630e3a58021372d6d5cdf1b49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bd6e43fd976321630e3a58021372d6d5cdf1b49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22a702d016b25b8c800b9707a5bd416fb6623b79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22a702d016b25b8c800b9707a5bd416fb6623b79", "html_url": "https://github.com/rust-lang/rust/commit/22a702d016b25b8c800b9707a5bd416fb6623b79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22a702d016b25b8c800b9707a5bd416fb6623b79/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23e5ed1288018a9b17b0b741dd6c36b98c9a415e", "url": "https://api.github.com/repos/rust-lang/rust/commits/23e5ed1288018a9b17b0b741dd6c36b98c9a415e", "html_url": "https://github.com/rust-lang/rust/commit/23e5ed1288018a9b17b0b741dd6c36b98c9a415e"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "b6775589e972c2cd99ec6963e7c29d31145d32a5", "filename": "src/tools/tidy/src/error_codes_check.rs", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/22a702d016b25b8c800b9707a5bd416fb6623b79/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22a702d016b25b8c800b9707a5bd416fb6623b79/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs?ref=22a702d016b25b8c800b9707a5bd416fb6623b79", "patch": "@@ -11,10 +11,10 @@ use regex::Regex;\n \n // A few of those error codes can't be tested but all the others can and *should* be tested!\n const EXEMPTED_FROM_TEST: &[&str] = &[\n-    \"E0227\", \"E0279\", \"E0280\", \"E0313\", \"E0314\", \"E0315\", \"E0377\", \"E0461\", \"E0462\", \"E0464\",\n-    \"E0465\", \"E0473\", \"E0474\", \"E0475\", \"E0476\", \"E0479\", \"E0480\", \"E0481\", \"E0482\", \"E0483\",\n-    \"E0484\", \"E0485\", \"E0486\", \"E0487\", \"E0488\", \"E0489\", \"E0514\", \"E0519\", \"E0523\", \"E0553\",\n-    \"E0554\", \"E0570\", \"E0629\", \"E0630\", \"E0640\", \"E0717\", \"E0729\",\n+    \"E0227\", \"E0279\", \"E0280\", \"E0313\", \"E0315\", \"E0377\", \"E0461\", \"E0462\", \"E0464\", \"E0465\",\n+    \"E0473\", \"E0474\", \"E0475\", \"E0476\", \"E0479\", \"E0480\", \"E0481\", \"E0482\", \"E0483\", \"E0484\",\n+    \"E0485\", \"E0486\", \"E0487\", \"E0488\", \"E0489\", \"E0514\", \"E0519\", \"E0523\", \"E0554\", \"E0570\",\n+    \"E0640\", \"E0717\", \"E0729\",\n ];\n \n // Some error codes don't have any tests apparently...\n@@ -293,6 +293,27 @@ pub fn check(paths: &[&Path], bad: &mut bool) {\n             }\n         }\n     }\n+    if errors.is_empty() {\n+        // Checking if local constants need to be cleaned.\n+        for err_code in EXEMPTED_FROM_TEST {\n+            match error_codes.get(err_code.to_owned()) {\n+                Some(status) => {\n+                    if status.has_test {\n+                        errors.push(format!(\n+                            \"{} error code has a test and therefore should be \\\n+                            removed from the `EXEMPTED_FROM_TEST` constant\",\n+                            err_code\n+                        ));\n+                    }\n+                }\n+                None => errors.push(format!(\n+                    \"{} error code isn't used anymore and therefore should be removed \\\n+                        from `EXEMPTED_FROM_TEST` constant\",\n+                    err_code\n+                )),\n+            }\n+        }\n+    }\n     errors.sort();\n     for err in &errors {\n         eprintln!(\"{}\", err);"}]}