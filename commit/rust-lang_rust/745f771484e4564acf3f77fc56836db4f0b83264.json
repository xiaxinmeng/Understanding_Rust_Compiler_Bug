{"sha": "745f771484e4564acf3f77fc56836db4f0b83264", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0NWY3NzE0ODRlNDU2NGFjZjNmNzdmYzU2ODM2ZGI0ZjBiODMyNjQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-04T01:19:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-04T01:19:55Z"}, "message": "Rollup merge of #67845 - jumbatm:also-unconst-hack-abs, r=oli-obk\n\nAlso remove const-hack for abs\n\nCloses #67842.\n\nr? @oli-obk", "tree": {"sha": "d736ed8757b6dc4704a8ae35214e56f928710be1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d736ed8757b6dc4704a8ae35214e56f928710be1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/745f771484e4564acf3f77fc56836db4f0b83264", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeD+g7CRBK7hj4Ov3rIwAAdHIIALHslea0k/tMaCty+kPNE5Ww\naJKuhBKfp7hPg2JJaPQ776F0xYAsjUGf+3t3h12TwwhAzAVIJV1G1yz96/2INLx3\n1aZ6mlj353aG9icSPjvkNd8t5qhkNIoKRx4UorI3jD84F16rRnAW/mlDYZU970g0\n/lI1itn51fE968ClKr/ExJq/MJa2vCNCYHbsRV/xBZf0dQrwupISa2W/Pr5ynNlf\nxfGP7UvswE7+Zpuiac33yDg+InIpDF8qFPy1KOUy5oEER9LOCTEaSinoXYIG90px\nayo2rVzE5dDqQh7tLrRgoajdHGR9Q9zAJOhm60AHPOgwSP/wzAij8s7NcHR5aTc=\n=Zkod\n-----END PGP SIGNATURE-----\n", "payload": "tree d736ed8757b6dc4704a8ae35214e56f928710be1\nparent 689e29f0f58641d4c4532463b13af7c656ae84b8\nparent ae002c1d84a2a8e8a272a3c0db28b7402064f072\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1578100795 +0100\ncommitter GitHub <noreply@github.com> 1578100795 +0100\n\nRollup merge of #67845 - jumbatm:also-unconst-hack-abs, r=oli-obk\n\nAlso remove const-hack for abs\n\nCloses #67842.\n\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/745f771484e4564acf3f77fc56836db4f0b83264", "html_url": "https://github.com/rust-lang/rust/commit/745f771484e4564acf3f77fc56836db4f0b83264", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/745f771484e4564acf3f77fc56836db4f0b83264/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "689e29f0f58641d4c4532463b13af7c656ae84b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/689e29f0f58641d4c4532463b13af7c656ae84b8", "html_url": "https://github.com/rust-lang/rust/commit/689e29f0f58641d4c4532463b13af7c656ae84b8"}, {"sha": "ae002c1d84a2a8e8a272a3c0db28b7402064f072", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae002c1d84a2a8e8a272a3c0db28b7402064f072", "html_url": "https://github.com/rust-lang/rust/commit/ae002c1d84a2a8e8a272a3c0db28b7402064f072"}], "stats": {"total": 24, "additions": 6, "deletions": 18}, "files": [{"sha": "605ab98219f91473330cf5f29545a9264761166b", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/745f771484e4564acf3f77fc56836db4f0b83264/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/745f771484e4564acf3f77fc56836db4f0b83264/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=745f771484e4564acf3f77fc56836db4f0b83264", "patch": "@@ -1997,27 +1997,15 @@ $EndFeature, \"\n ```\"),\n             #[stable(feature = \"rust1\", since = \"1.0.0\")]\n             #[rustc_const_stable(feature = \"const_int_methods\", since = \"1.32.0\")]\n+            #[allow_internal_unstable(const_if_match)]\n             #[inline]\n             #[rustc_inherit_overflow_checks]\n             pub const fn abs(self) -> Self {\n-                // Note that the #[inline] above means that the overflow\n-                // semantics of the subtraction depend on the crate we're being\n-                // inlined into.\n-\n-                // sign is -1 (all ones) for negative numbers, 0 otherwise.\n-                let sign = self >> ($BITS - 1);\n-                // For positive self, sign == 0 so the expression is simply\n-                // (self ^ 0) - 0 == self == abs(self).\n-                //\n-                // For negative self, self ^ sign == self ^ all_ones.\n-                // But all_ones ^ self == all_ones - self == -1 - self.\n-                // So for negative numbers, (self ^ sign) - sign is\n-                // (-1 - self) - -1 == -self == abs(self).\n-                //\n-                // The subtraction overflows when self is min_value(), because\n-                // (-1 - min_value()) - -1 is max_value() - -1 which overflows.\n-                // This is exactly when we want self.abs() to overflow.\n-                (self ^ sign) - sign\n+                if self.is_negative() {\n+                    -self\n+                } else {\n+                    self\n+                }\n             }\n         }\n "}]}