{"sha": "7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "node_id": "C_kwDOAAsO6NoAKDdjZDliZjVhZjMzMjUwOTg4ZGVlYjFlNWIwNTc1ZDU1YmFiM2QwMWI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-01T15:18:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-01T15:18:57Z"}, "message": "Auto merge of #7866 - rust-lang:edition-2021-tests, r=Manishearth\n\nupdate most tests to 2021 edition\n\nSome tests would no longer work at all, so I added `edition:2015` or `edition:2018` to them.\n\nNotably 2021 panics are not yet detected correctly. Once ready, this closes #7842.\n\n---\n\nchangelog: none", "tree": {"sha": "1e2734500103bcd0e2c749deba40c640a04f5393", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e2734500103bcd0e2c749deba40c640a04f5393"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "html_url": "https://github.com/rust-lang/rust/commit/7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "310ecb0a5c0d9161679c256052822f34c6eb548a", "url": "https://api.github.com/repos/rust-lang/rust/commits/310ecb0a5c0d9161679c256052822f34c6eb548a", "html_url": "https://github.com/rust-lang/rust/commit/310ecb0a5c0d9161679c256052822f34c6eb548a"}, {"sha": "a4ede72b3d2bea7ff3877e431139e7ae7c11d276", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4ede72b3d2bea7ff3877e431139e7ae7c11d276", "html_url": "https://github.com/rust-lang/rust/commit/a4ede72b3d2bea7ff3877e431139e7ae7c11d276"}], "stats": {"total": 1055, "additions": 525, "deletions": 530}, "files": [{"sha": "cbf3a6515cfbaa4da3e49c822b5812645f99fe54", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -28,7 +28,7 @@ tempfile = { version = \"3.2\", optional = true }\n \n [dev-dependencies]\n cargo_metadata = \"0.12\"\n-compiletest_rs = { version = \"0.7\", features = [\"tmp\"] }\n+compiletest_rs = { version = \"0.7.1\", features = [\"tmp\"] }\n tester = \"0.9\"\n regex = \"1.5\"\n # This is used by the `collect-metadata` alias."}, {"sha": "f25cf1d3ef56185243762a4f3296f4f7ca2eca98", "filename": "tests/compile-test.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -104,7 +104,10 @@ fn extern_flags() -> String {\n }\n \n fn default_config() -> compiletest::Config {\n-    let mut config = compiletest::Config::default();\n+    let mut config = compiletest::Config {\n+        edition: Some(\"2021\".into()),\n+        ..compiletest::Config::default()\n+    };\n \n     if let Ok(filters) = env::var(\"TESTNAME\") {\n         config.filters = filters.split(',').map(std::string::ToString::to_string).collect();"}, {"sha": "e678c896fd3e3b3dc8e7bcba92fb5b641a6f8797", "filename": "tests/ui-toml/functions_maxlines/test.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui-toml%2Ffunctions_maxlines%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui-toml%2Ffunctions_maxlines%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ffunctions_maxlines%2Ftest.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,3 @@\n-// edition:2018\n-\n #![warn(clippy::too_many_lines)]\n \n // This function should be considered one line."}, {"sha": "d736bf899735a5cfb5ed02eef151b4c20cbd635f", "filename": "tests/ui-toml/functions_maxlines/test.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui-toml%2Ffunctions_maxlines%2Ftest.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui-toml%2Ffunctions_maxlines%2Ftest.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ffunctions_maxlines%2Ftest.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,5 @@\n error: this function has too many lines (2/1)\n-  --> $DIR/test.rs:20:1\n+  --> $DIR/test.rs:18:1\n    |\n LL | / fn too_many_lines() {\n LL | |     println!(\"This is bad.\");\n@@ -10,7 +10,7 @@ LL | | }\n    = note: `-D clippy::too-many-lines` implied by `-D warnings`\n \n error: this function has too many lines (4/1)\n-  --> $DIR/test.rs:26:1\n+  --> $DIR/test.rs:24:1\n    |\n LL | / async fn async_too_many_lines() {\n LL | |     println!(\"This is bad.\");\n@@ -19,7 +19,7 @@ LL | | }\n    | |_^\n \n error: this function has too many lines (4/1)\n-  --> $DIR/test.rs:32:1\n+  --> $DIR/test.rs:30:1\n    |\n LL | / fn closure_too_many_lines() {\n LL | |     let _ = {\n@@ -30,7 +30,7 @@ LL | | }\n    | |_^\n \n error: this function has too many lines (2/1)\n-  --> $DIR/test.rs:54:1\n+  --> $DIR/test.rs:52:1\n    |\n LL | / fn comment_before_code() {\n LL | |     let _ = \"test\";"}, {"sha": "cb516d0f97783fee0b7b4a71c3cc9336a5072c64", "filename": "tests/ui/assertions_on_constants.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fassertions_on_constants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fassertions_on_constants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassertions_on_constants.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,3 +1,4 @@\n+//FIXME: suggestions are wrongly expanded, this should be fixed along with #7843\n #![allow(non_fmt_panics)]\n \n macro_rules! assert_const {\n@@ -6,15 +7,14 @@ macro_rules! assert_const {\n         debug_assert!($len < 0);\n     };\n }\n-\n fn main() {\n     assert!(true);\n     assert!(false);\n     assert!(true, \"true message\");\n     assert!(false, \"false message\");\n \n     let msg = \"panic message\";\n-    assert!(false, msg.to_uppercase());\n+    assert!(false, \"{}\", msg.to_uppercase());\n \n     const B: bool = true;\n     assert!(B);"}, {"sha": "ec80ec702fb574ad4cf6380b9e7b2179230a8c84", "filename": "tests/ui/assertions_on_constants.stderr", "status": "modified", "additions": 5, "deletions": 14, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fassertions_on_constants.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fassertions_on_constants.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassertions_on_constants.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -26,22 +26,13 @@ LL |     assert!(true, \"true message\");\n    = help: remove it\n    = note: this error originates in the macro `assert` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: `assert!(false, \"false message\")` should probably be replaced\n+error: `assert!(false, $crate::const_format_args!($($t)+))` should probably be replaced\n   --> $DIR/assertions_on_constants.rs:14:5\n    |\n LL |     assert!(false, \"false message\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: use `panic!(\"false message\")` or `unreachable!(\"false message\")`\n-   = note: this error originates in the macro `assert` (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n-error: `assert!(false, msg.to_uppercase())` should probably be replaced\n-  --> $DIR/assertions_on_constants.rs:17:5\n-   |\n-LL |     assert!(false, msg.to_uppercase());\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: use `panic!(msg.to_uppercase())` or `unreachable!(msg.to_uppercase())`\n+   = help: use `panic!($crate::const_format_args!($($t)+))` or `unreachable!($crate::const_format_args!($($t)+))`\n    = note: this error originates in the macro `assert` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: `assert!(true)` will be optimized out by the compiler\n@@ -62,13 +53,13 @@ LL |     assert!(C);\n    = help: use `panic!()` or `unreachable!()`\n    = note: this error originates in the macro `assert` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: `assert!(false, \"C message\")` should probably be replaced\n+error: `assert!(false, $crate::const_format_args!($($t)+))` should probably be replaced\n   --> $DIR/assertions_on_constants.rs:24:5\n    |\n LL |     assert!(C, \"C message\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: use `panic!(\"C message\")` or `unreachable!(\"C message\")`\n+   = help: use `panic!($crate::const_format_args!($($t)+))` or `unreachable!($crate::const_format_args!($($t)+))`\n    = note: this error originates in the macro `assert` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: `debug_assert!(true)` will be optimized out by the compiler\n@@ -80,5 +71,5 @@ LL |     debug_assert!(true);\n    = help: remove it\n    = note: this error originates in the macro `$crate::assert` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to 9 previous errors\n+error: aborting due to 8 previous errors\n "}, {"sha": "e20b58269b93e60485b68b74618b3bc4a6fe77d3", "filename": "tests/ui/async_yields_async.fixed", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fasync_yields_async.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fasync_yields_async.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync_yields_async.fixed?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,4 @@\n // run-rustfix\n-// edition:2018\n \n #![feature(async_closure)]\n #![warn(clippy::async_yields_async)]"}, {"sha": "c1dfa398450250f6d67a6d1290e34c139865d8e1", "filename": "tests/ui/async_yields_async.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fasync_yields_async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fasync_yields_async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync_yields_async.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,4 @@\n // run-rustfix\n-// edition:2018\n \n #![feature(async_closure)]\n #![warn(clippy::async_yields_async)]"}, {"sha": "b0c4215e7ddf1be1c4bbcaeb031e3896096f9386", "filename": "tests/ui/async_yields_async.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fasync_yields_async.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fasync_yields_async.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync_yields_async.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,5 @@\n error: an async construct yields a type which is itself awaitable\n-  --> $DIR/async_yields_async.rs:40:9\n+  --> $DIR/async_yields_async.rs:39:9\n    |\n LL |        let _h = async {\n    |   ____________________-\n@@ -20,7 +20,7 @@ LL +         }.await\n    |\n \n error: an async construct yields a type which is itself awaitable\n-  --> $DIR/async_yields_async.rs:45:9\n+  --> $DIR/async_yields_async.rs:44:9\n    |\n LL |       let _i = async {\n    |  ____________________-\n@@ -33,7 +33,7 @@ LL | |     };\n    | |_____- outer async construct\n \n error: an async construct yields a type which is itself awaitable\n-  --> $DIR/async_yields_async.rs:51:9\n+  --> $DIR/async_yields_async.rs:50:9\n    |\n LL |        let _j = async || {\n    |   _______________________-\n@@ -53,7 +53,7 @@ LL +         }.await\n    |\n \n error: an async construct yields a type which is itself awaitable\n-  --> $DIR/async_yields_async.rs:56:9\n+  --> $DIR/async_yields_async.rs:55:9\n    |\n LL |       let _k = async || {\n    |  _______________________-\n@@ -66,7 +66,7 @@ LL | |     };\n    | |_____- outer async construct\n \n error: an async construct yields a type which is itself awaitable\n-  --> $DIR/async_yields_async.rs:58:23\n+  --> $DIR/async_yields_async.rs:57:23\n    |\n LL |     let _l = async || CustomFutureType;\n    |                       ^^^^^^^^^^^^^^^^\n@@ -76,7 +76,7 @@ LL |     let _l = async || CustomFutureType;\n    |                       help: consider awaiting this value: `CustomFutureType.await`\n \n error: an async construct yields a type which is itself awaitable\n-  --> $DIR/async_yields_async.rs:64:9\n+  --> $DIR/async_yields_async.rs:63:9\n    |\n LL |       let _m = async || {\n    |  _______________________-"}, {"sha": "dd6640a387a23877548f96c8b6a40185b27c7cfd", "filename": "tests/ui/await_holding_lock.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fawait_holding_lock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fawait_holding_lock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fawait_holding_lock.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// edition:2018\n #![warn(clippy::await_holding_lock)]\n \n use std::sync::Mutex;"}, {"sha": "ddfb104cdfbd07ab1207f133e075182b3d409d0e", "filename": "tests/ui/await_holding_lock.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fawait_holding_lock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fawait_holding_lock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fawait_holding_lock.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,26 +1,26 @@\n error: this MutexGuard is held across an 'await' point. Consider using an async-aware Mutex type or ensuring the MutexGuard is dropped before calling await\n-  --> $DIR/await_holding_lock.rs:7:9\n+  --> $DIR/await_holding_lock.rs:6:9\n    |\n LL |     let guard = x.lock().unwrap();\n    |         ^^^^^\n    |\n    = note: `-D clippy::await-holding-lock` implied by `-D warnings`\n note: these are all the await points this lock is held through\n-  --> $DIR/await_holding_lock.rs:7:5\n+  --> $DIR/await_holding_lock.rs:6:5\n    |\n LL | /     let guard = x.lock().unwrap();\n LL | |     baz().await\n LL | | }\n    | |_^\n \n error: this MutexGuard is held across an 'await' point. Consider using an async-aware Mutex type or ensuring the MutexGuard is dropped before calling await\n-  --> $DIR/await_holding_lock.rs:28:9\n+  --> $DIR/await_holding_lock.rs:27:9\n    |\n LL |     let guard = x.lock().unwrap();\n    |         ^^^^^\n    |\n note: these are all the await points this lock is held through\n-  --> $DIR/await_holding_lock.rs:28:5\n+  --> $DIR/await_holding_lock.rs:27:5\n    |\n LL | /     let guard = x.lock().unwrap();\n LL | |\n@@ -32,27 +32,27 @@ LL | | }\n    | |_^\n \n error: this MutexGuard is held across an 'await' point. Consider using an async-aware Mutex type or ensuring the MutexGuard is dropped before calling await\n-  --> $DIR/await_holding_lock.rs:41:13\n+  --> $DIR/await_holding_lock.rs:40:13\n    |\n LL |         let guard = x.lock().unwrap();\n    |             ^^^^^\n    |\n note: these are all the await points this lock is held through\n-  --> $DIR/await_holding_lock.rs:41:9\n+  --> $DIR/await_holding_lock.rs:40:9\n    |\n LL | /         let guard = x.lock().unwrap();\n LL | |         baz().await\n LL | |     };\n    | |_____^\n \n error: this MutexGuard is held across an 'await' point. Consider using an async-aware Mutex type or ensuring the MutexGuard is dropped before calling await\n-  --> $DIR/await_holding_lock.rs:53:13\n+  --> $DIR/await_holding_lock.rs:52:13\n    |\n LL |         let guard = x.lock().unwrap();\n    |             ^^^^^\n    |\n note: these are all the await points this lock is held through\n-  --> $DIR/await_holding_lock.rs:53:9\n+  --> $DIR/await_holding_lock.rs:52:9\n    |\n LL | /         let guard = x.lock().unwrap();\n LL | |         baz().await"}, {"sha": "23b7095de3a39ae31a36bbc37a7b625c38bec5b3", "filename": "tests/ui/await_holding_refcell_ref.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fawait_holding_refcell_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fawait_holding_refcell_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fawait_holding_refcell_ref.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// edition:2018\n #![warn(clippy::await_holding_refcell_ref)]\n \n use std::cell::RefCell;"}, {"sha": "67cc0032be2f46742725351dd9beca969d458b4e", "filename": "tests/ui/await_holding_refcell_ref.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fawait_holding_refcell_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fawait_holding_refcell_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fawait_holding_refcell_ref.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,40 +1,40 @@\n error: this RefCell Ref is held across an 'await' point. Consider ensuring the Ref is dropped before calling await\n-  --> $DIR/await_holding_refcell_ref.rs:7:9\n+  --> $DIR/await_holding_refcell_ref.rs:6:9\n    |\n LL |     let b = x.borrow();\n    |         ^\n    |\n    = note: `-D clippy::await-holding-refcell-ref` implied by `-D warnings`\n note: these are all the await points this ref is held through\n-  --> $DIR/await_holding_refcell_ref.rs:7:5\n+  --> $DIR/await_holding_refcell_ref.rs:6:5\n    |\n LL | /     let b = x.borrow();\n LL | |     baz().await\n LL | | }\n    | |_^\n \n error: this RefCell Ref is held across an 'await' point. Consider ensuring the Ref is dropped before calling await\n-  --> $DIR/await_holding_refcell_ref.rs:12:9\n+  --> $DIR/await_holding_refcell_ref.rs:11:9\n    |\n LL |     let b = x.borrow_mut();\n    |         ^\n    |\n note: these are all the await points this ref is held through\n-  --> $DIR/await_holding_refcell_ref.rs:12:5\n+  --> $DIR/await_holding_refcell_ref.rs:11:5\n    |\n LL | /     let b = x.borrow_mut();\n LL | |     baz().await\n LL | | }\n    | |_^\n \n error: this RefCell Ref is held across an 'await' point. Consider ensuring the Ref is dropped before calling await\n-  --> $DIR/await_holding_refcell_ref.rs:33:9\n+  --> $DIR/await_holding_refcell_ref.rs:32:9\n    |\n LL |     let b = x.borrow_mut();\n    |         ^\n    |\n note: these are all the await points this ref is held through\n-  --> $DIR/await_holding_refcell_ref.rs:33:5\n+  --> $DIR/await_holding_refcell_ref.rs:32:5\n    |\n LL | /     let b = x.borrow_mut();\n LL | |\n@@ -46,13 +46,13 @@ LL | | }\n    | |_^\n \n error: this RefCell Ref is held across an 'await' point. Consider ensuring the Ref is dropped before calling await\n-  --> $DIR/await_holding_refcell_ref.rs:45:9\n+  --> $DIR/await_holding_refcell_ref.rs:44:9\n    |\n LL |     let b = x.borrow_mut();\n    |         ^\n    |\n note: these are all the await points this ref is held through\n-  --> $DIR/await_holding_refcell_ref.rs:45:5\n+  --> $DIR/await_holding_refcell_ref.rs:44:5\n    |\n LL | /     let b = x.borrow_mut();\n LL | |\n@@ -64,27 +64,27 @@ LL | | }\n    | |_^\n \n error: this RefCell Ref is held across an 'await' point. Consider ensuring the Ref is dropped before calling await\n-  --> $DIR/await_holding_refcell_ref.rs:60:13\n+  --> $DIR/await_holding_refcell_ref.rs:59:13\n    |\n LL |         let b = x.borrow_mut();\n    |             ^\n    |\n note: these are all the await points this ref is held through\n-  --> $DIR/await_holding_refcell_ref.rs:60:9\n+  --> $DIR/await_holding_refcell_ref.rs:59:9\n    |\n LL | /         let b = x.borrow_mut();\n LL | |         baz().await\n LL | |     };\n    | |_____^\n \n error: this RefCell Ref is held across an 'await' point. Consider ensuring the Ref is dropped before calling await\n-  --> $DIR/await_holding_refcell_ref.rs:72:13\n+  --> $DIR/await_holding_refcell_ref.rs:71:13\n    |\n LL |         let b = x.borrow_mut();\n    |             ^\n    |\n note: these are all the await points this ref is held through\n-  --> $DIR/await_holding_refcell_ref.rs:72:9\n+  --> $DIR/await_holding_refcell_ref.rs:71:9\n    |\n LL | /         let b = x.borrow_mut();\n LL | |         baz().await"}, {"sha": "9b68cac7ff4854abc60352d7c8cbff472604cf44", "filename": "tests/ui/crashes/ice-3969.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fcrashes%2Fice-3969.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fcrashes%2Fice-3969.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-3969.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -7,7 +7,6 @@\n // in type inference.\n #![feature(trivial_bounds)]\n #![allow(unused)]\n-\n trait A {}\n \n impl A for i32 {}\n@@ -22,9 +21,9 @@ where\n \n fn unsized_local()\n where\n-    for<'a> Dst<A + 'a>: Sized,\n+    for<'a> Dst<dyn A + 'a>: Sized,\n {\n-    let x: Dst<A> = *(Box::new(Dst { x: 1 }) as Box<Dst<A>>);\n+    let x: Dst<dyn A> = *(Box::new(Dst { x: 1 }) as Box<Dst<dyn A>>);\n }\n \n fn return_str() -> str"}, {"sha": "79018080886c0561d33fc88fe31890911f4ccd9f", "filename": "tests/ui/crashes/ice-3969.stderr", "status": "modified", "additions": 24, "deletions": 20, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fcrashes%2Fice-3969.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fcrashes%2Fice-3969.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-3969.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,30 +1,34 @@\n-error: trait objects without an explicit `dyn` are deprecated\n-  --> $DIR/ice-3969.rs:25:17\n+error: trait bound str: std::marker::Sized does not depend on any type or lifetime parameters\n+  --> $DIR/ice-3969.rs:20:10\n    |\n-LL |     for<'a> Dst<A + 'a>: Sized,\n-   |                 ^^^^^^ help: use `dyn`: `dyn A + 'a`\n+LL |     str: Sized;\n+   |          ^^^^^\n    |\n-   = note: `-D bare-trait-objects` implied by `-D warnings`\n-   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n-   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+   = note: `-D trivial-bounds` implied by `-D warnings`\n \n-error: trait objects without an explicit `dyn` are deprecated\n-  --> $DIR/ice-3969.rs:27:16\n+error: trait bound for<'a> Dst<(dyn A + 'a)>: std::marker::Sized does not depend on any type or lifetime parameters\n+  --> $DIR/ice-3969.rs:24:30\n    |\n-LL |     let x: Dst<A> = *(Box::new(Dst { x: 1 }) as Box<Dst<A>>);\n-   |                ^ help: use `dyn`: `dyn A`\n+LL |     for<'a> Dst<dyn A + 'a>: Sized,\n+   |                              ^^^^^\n+\n+error: trait bound str: std::marker::Sized does not depend on any type or lifetime parameters\n+  --> $DIR/ice-3969.rs:31:10\n    |\n-   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n-   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+LL |     str: Sized,\n+   |          ^^^^^\n \n-error: trait objects without an explicit `dyn` are deprecated\n-  --> $DIR/ice-3969.rs:27:57\n+error: trait bound std::string::String: std::ops::Neg does not depend on any type or lifetime parameters\n+  --> $DIR/ice-3969.rs:38:13\n    |\n-LL |     let x: Dst<A> = *(Box::new(Dst { x: 1 }) as Box<Dst<A>>);\n-   |                                                         ^ help: use `dyn`: `dyn A`\n+LL |     String: ::std::ops::Neg<Output = String>,\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: trait bound i32: std::iter::Iterator does not depend on any type or lifetime parameters\n+  --> $DIR/ice-3969.rs:45:10\n    |\n-   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n-   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+LL |     i32: Iterator,\n+   |          ^^^^^^^^\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 5 previous errors\n "}, {"sha": "f463f78a99ab738bc0117ad3391817145323c146", "filename": "tests/ui/crashes/ice-5207.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fcrashes%2Fice-5207.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fcrashes%2Fice-5207.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-5207.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,3 @@\n-// edition:2018\n-\n // Regression test for https://github.com/rust-lang/rust-clippy/issues/5207\n \n pub async fn bar<'a, T: 'a>(_: T) {}"}, {"sha": "0ccf0aae9d74298099fd483995d2d73ce76763b3", "filename": "tests/ui/crashes/ice-6252.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fcrashes%2Fice-6252.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fcrashes%2Fice-6252.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-6252.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,6 +1,5 @@\n // originally from glacier fixed/77919.rs\n // encountered errors resolving bounds after type-checking\n-\n trait TypeVal<T> {\n     const VAL: T;\n }"}, {"sha": "926ae39cc218d8ecc4ca644225c5e709bae05a6b", "filename": "tests/ui/crashes/ice-6252.stderr", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fcrashes%2Fice-6252.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fcrashes%2Fice-6252.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-6252.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,24 +1,28 @@\n error[E0412]: cannot find type `PhantomData` in this scope\n-  --> $DIR/ice-6252.rs:9:9\n+  --> $DIR/ice-6252.rs:8:9\n    |\n LL |     _n: PhantomData,\n    |         ^^^^^^^^^^^ not found in this scope\n    |\n-help: consider importing this struct\n+help: consider importing one of these items\n+   |\n+LL | use serde::__private::PhantomData;\n    |\n LL | use std::marker::PhantomData;\n    |\n+LL | use core::marker::PhantomData;\n+   |\n \n error[E0412]: cannot find type `VAL` in this scope\n-  --> $DIR/ice-6252.rs:11:63\n+  --> $DIR/ice-6252.rs:10:63\n    |\n LL | impl<N, M> TypeVal<usize> for Multiply<N, M> where N: TypeVal<VAL> {}\n    |          -                                                    ^^^ not found in this scope\n    |          |\n    |          help: you might be missing a type parameter: `, VAL`\n \n error[E0046]: not all trait items implemented, missing: `VAL`\n-  --> $DIR/ice-6252.rs:11:1\n+  --> $DIR/ice-6252.rs:10:1\n    |\n LL |     const VAL: T;\n    |     ------------- `VAL` from trait"}, {"sha": "4ad0d351372f7559de26a2a84d6974f0cdf3643a", "filename": "tests/ui/crashes/ice-7231.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fcrashes%2Fice-7231.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fcrashes%2Fice-7231.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-7231.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// edition:2018\n #![allow(clippy::never_loop)]\n \n async fn f() {"}, {"sha": "901eb4e50398888f50747c1ba2a496703474d82e", "filename": "tests/ui/crashes/used_underscore_binding_macro.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fcrashes%2Fused_underscore_binding_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fcrashes%2Fused_underscore_binding_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fused_underscore_binding_macro.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,3 @@\n-// edition:2018\n-\n use serde::Deserialize;\n \n /// Tests that we do not lint for unused underscores in a `MacroAttribute`"}, {"sha": "c5de412556567ffe6718fc9ada4471dcb5e4cc8b", "filename": "tests/ui/debug_assert_with_mut_call.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fdebug_assert_with_mut_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fdebug_assert_with_mut_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdebug_assert_with_mut_call.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,9 +1,9 @@\n-// compile-flags: --edition=2018\n #![feature(custom_inner_attributes)]\n #![rustfmt::skip]\n #![warn(clippy::debug_assert_with_mut_call)]\n #![allow(clippy::redundant_closure_call)]\n \n+\n struct S;\n \n impl S {"}, {"sha": "e27f9fea708ee16c0bcfd889cf27ad6ed7b39b8d", "filename": "tests/ui/diverging_sub_expression.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fdiverging_sub_expression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fdiverging_sub_expression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdiverging_sub_expression.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,6 +1,5 @@\n #![warn(clippy::diverging_sub_expression)]\n #![allow(clippy::match_same_arms, clippy::logic_bug)]\n-\n #[allow(clippy::empty_loop)]\n fn diverge() -> ! {\n     loop {}"}, {"sha": "c712a6a7e38eaf1433c0aee8f46e4897612370a7", "filename": "tests/ui/diverging_sub_expression.stderr", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fdiverging_sub_expression.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fdiverging_sub_expression.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdiverging_sub_expression.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,40 +1,48 @@\n error: sub-expression diverges\n-  --> $DIR/diverging_sub_expression.rs:20:10\n+  --> $DIR/diverging_sub_expression.rs:19:10\n    |\n LL |     b || diverge();\n    |          ^^^^^^^^^\n    |\n    = note: `-D clippy::diverging-sub-expression` implied by `-D warnings`\n \n error: sub-expression diverges\n-  --> $DIR/diverging_sub_expression.rs:21:10\n+  --> $DIR/diverging_sub_expression.rs:20:10\n    |\n LL |     b || A.foo();\n    |          ^^^^^^^\n \n error: sub-expression diverges\n-  --> $DIR/diverging_sub_expression.rs:30:26\n+  --> $DIR/diverging_sub_expression.rs:29:26\n    |\n LL |             6 => true || return,\n    |                          ^^^^^^\n \n error: sub-expression diverges\n-  --> $DIR/diverging_sub_expression.rs:31:26\n+  --> $DIR/diverging_sub_expression.rs:30:26\n    |\n LL |             7 => true || continue,\n    |                          ^^^^^^^^\n \n error: sub-expression diverges\n-  --> $DIR/diverging_sub_expression.rs:34:26\n+  --> $DIR/diverging_sub_expression.rs:33:26\n    |\n LL |             3 => true || diverge(),\n    |                          ^^^^^^^^^\n \n error: sub-expression diverges\n-  --> $DIR/diverging_sub_expression.rs:39:26\n+  --> $DIR/diverging_sub_expression.rs:36:30\n+   |\n+LL |                 _ => true || panic!(\"boo\"),\n+   |                              ^^^^^^^^^^^^^\n+   |\n+   = note: this error originates in the macro `$crate::panic::panic_2021` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: sub-expression diverges\n+  --> $DIR/diverging_sub_expression.rs:38:26\n    |\n LL |             _ => true || break,\n    |                          ^^^^^\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 7 previous errors\n "}, {"sha": "30fdd3b087371226352c9b07dd81f60119f744b3", "filename": "tests/ui/doc_errors.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fdoc_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fdoc_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc_errors.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// edition:2018\n #![warn(clippy::missing_errors_doc)]\n #![allow(clippy::result_unit_err)]\n #![allow(clippy::unnecessary_wraps)]"}, {"sha": "c7b616e2897087c01ee59976e37fe287afb6dbbc", "filename": "tests/ui/doc_errors.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fdoc_errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fdoc_errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc_errors.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,5 @@\n error: docs for function returning `Result` missing `# Errors` section\n-  --> $DIR/doc_errors.rs:8:1\n+  --> $DIR/doc_errors.rs:7:1\n    |\n LL | / pub fn pub_fn_missing_errors_header() -> Result<(), ()> {\n LL | |     unimplemented!();\n@@ -9,47 +9,47 @@ LL | | }\n    = note: `-D clippy::missing-errors-doc` implied by `-D warnings`\n \n error: docs for function returning `Result` missing `# Errors` section\n-  --> $DIR/doc_errors.rs:12:1\n+  --> $DIR/doc_errors.rs:11:1\n    |\n LL | / pub async fn async_pub_fn_missing_errors_header() -> Result<(), ()> {\n LL | |     unimplemented!();\n LL | | }\n    | |_^\n \n error: docs for function returning `Result` missing `# Errors` section\n-  --> $DIR/doc_errors.rs:17:1\n+  --> $DIR/doc_errors.rs:16:1\n    |\n LL | / pub fn pub_fn_returning_io_result() -> io::Result<()> {\n LL | |     unimplemented!();\n LL | | }\n    | |_^\n \n error: docs for function returning `Result` missing `# Errors` section\n-  --> $DIR/doc_errors.rs:22:1\n+  --> $DIR/doc_errors.rs:21:1\n    |\n LL | / pub async fn async_pub_fn_returning_io_result() -> io::Result<()> {\n LL | |     unimplemented!();\n LL | | }\n    | |_^\n \n error: docs for function returning `Result` missing `# Errors` section\n-  --> $DIR/doc_errors.rs:52:5\n+  --> $DIR/doc_errors.rs:51:5\n    |\n LL | /     pub fn pub_method_missing_errors_header() -> Result<(), ()> {\n LL | |         unimplemented!();\n LL | |     }\n    | |_____^\n \n error: docs for function returning `Result` missing `# Errors` section\n-  --> $DIR/doc_errors.rs:57:5\n+  --> $DIR/doc_errors.rs:56:5\n    |\n LL | /     pub async fn async_pub_method_missing_errors_header() -> Result<(), ()> {\n LL | |         unimplemented!();\n LL | |     }\n    | |_____^\n \n error: docs for function returning `Result` missing `# Errors` section\n-  --> $DIR/doc_errors.rs:86:5\n+  --> $DIR/doc_errors.rs:85:5\n    |\n LL |     fn trait_method_missing_errors_header() -> Result<(), ()>;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "aad78319d48209549db51ff8e3de027a5b4a8b59", "filename": "tests/ui/eval_order_dependence.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Feval_order_dependence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Feval_order_dependence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feval_order_dependence.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,3 @@\n-// edition:2018\n-\n #[warn(clippy::eval_order_dependence)]\n #[allow(\n     unused_assignments,"}, {"sha": "7c6265a08790deee6d8df446b49846dab095e770", "filename": "tests/ui/eval_order_dependence.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Feval_order_dependence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Feval_order_dependence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feval_order_dependence.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,48 +1,48 @@\n error: unsequenced read of `x`\n-  --> $DIR/eval_order_dependence.rs:16:9\n+  --> $DIR/eval_order_dependence.rs:14:9\n    |\n LL |     } + x;\n    |         ^\n    |\n    = note: `-D clippy::eval-order-dependence` implied by `-D warnings`\n note: whether read occurs before this write depends on evaluation order\n-  --> $DIR/eval_order_dependence.rs:14:9\n+  --> $DIR/eval_order_dependence.rs:12:9\n    |\n LL |         x = 1;\n    |         ^^^^^\n \n error: unsequenced read of `x`\n-  --> $DIR/eval_order_dependence.rs:19:5\n+  --> $DIR/eval_order_dependence.rs:17:5\n    |\n LL |     x += {\n    |     ^\n    |\n note: whether read occurs before this write depends on evaluation order\n-  --> $DIR/eval_order_dependence.rs:20:9\n+  --> $DIR/eval_order_dependence.rs:18:9\n    |\n LL |         x = 20;\n    |         ^^^^^^\n \n error: unsequenced read of `x`\n-  --> $DIR/eval_order_dependence.rs:32:12\n+  --> $DIR/eval_order_dependence.rs:30:12\n    |\n LL |         a: x,\n    |            ^\n    |\n note: whether read occurs before this write depends on evaluation order\n-  --> $DIR/eval_order_dependence.rs:34:13\n+  --> $DIR/eval_order_dependence.rs:32:13\n    |\n LL |             x = 6;\n    |             ^^^^^\n \n error: unsequenced read of `x`\n-  --> $DIR/eval_order_dependence.rs:41:9\n+  --> $DIR/eval_order_dependence.rs:39:9\n    |\n LL |         x += {\n    |         ^\n    |\n note: whether read occurs before this write depends on evaluation order\n-  --> $DIR/eval_order_dependence.rs:42:13\n+  --> $DIR/eval_order_dependence.rs:40:13\n    |\n LL |             x = 20;\n    |             ^^^^^^"}, {"sha": "4e0f08a1215c0401fa8f18493fb8ad0a833dcd63", "filename": "tests/ui/fallible_impl_from.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Ffallible_impl_from.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Ffallible_impl_from.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffallible_impl_from.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -38,7 +38,7 @@ note: potential failure(s)\n    |\n LL |             panic!();\n    |             ^^^^^^^^\n-   = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)\n+   = note: this error originates in the macro `$crate::panic::panic_2021` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: consider implementing `TryFrom` instead\n   --> $DIR/fallible_impl_from.rs:35:1\n@@ -65,7 +65,7 @@ LL |         } else if s.parse::<u32>().unwrap() != 42 {\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^\n LL |             panic!(\"{:?}\", s);\n    |             ^^^^^^^^^^^^^^^^^\n-   = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)\n+   = note: this error originates in the macro `$crate::panic::panic_2021` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: consider implementing `TryFrom` instead\n   --> $DIR/fallible_impl_from.rs:53:1\n@@ -87,7 +87,7 @@ LL |         if s.parse::<u32>().ok().unwrap() != 42 {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n LL |             panic!(\"{:?}\", s);\n    |             ^^^^^^^^^^^^^^^^^\n-   = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)\n+   = note: this error originates in the macro `$crate::panic::panic_2021` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to 4 previous errors\n "}, {"sha": "858036692d68f401d36c464754b82662f150c540", "filename": "tests/ui/future_not_send.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Ffuture_not_send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Ffuture_not_send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffuture_not_send.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// edition:2018\n #![warn(clippy::future_not_send)]\n \n use std::cell::Cell;"}, {"sha": "3cc05e2fdbec65c0b9574b0c45b924f63bcd6ca5", "filename": "tests/ui/future_not_send.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Ffuture_not_send.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Ffuture_not_send.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffuture_not_send.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,12 +1,12 @@\n error: future cannot be sent between threads safely\n-  --> $DIR/future_not_send.rs:8:62\n+  --> $DIR/future_not_send.rs:7:62\n    |\n LL | async fn private_future(rc: Rc<[u8]>, cell: &Cell<usize>) -> bool {\n    |                                                              ^^^^ future returned by `private_future` is not `Send`\n    |\n    = note: `-D clippy::future-not-send` implied by `-D warnings`\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/future_not_send.rs:9:5\n+  --> $DIR/future_not_send.rs:8:5\n    |\n LL | async fn private_future(rc: Rc<[u8]>, cell: &Cell<usize>) -> bool {\n    |                         -- has type `std::rc::Rc<[u8]>` which is not `Send`\n@@ -16,7 +16,7 @@ LL | }\n    | - `rc` is later dropped here\n    = note: `std::rc::Rc<[u8]>` doesn't implement `std::marker::Send`\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/future_not_send.rs:9:5\n+  --> $DIR/future_not_send.rs:8:5\n    |\n LL | async fn private_future(rc: Rc<[u8]>, cell: &Cell<usize>) -> bool {\n    |                                       ---- has type `&std::cell::Cell<usize>` which is not `Send`\n@@ -27,13 +27,13 @@ LL | }\n    = note: `std::cell::Cell<usize>` doesn't implement `std::marker::Sync`\n \n error: future cannot be sent between threads safely\n-  --> $DIR/future_not_send.rs:12:42\n+  --> $DIR/future_not_send.rs:11:42\n    |\n LL | pub async fn public_future(rc: Rc<[u8]>) {\n    |                                          ^ future returned by `public_future` is not `Send`\n    |\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/future_not_send.rs:13:5\n+  --> $DIR/future_not_send.rs:12:5\n    |\n LL | pub async fn public_future(rc: Rc<[u8]>) {\n    |                            -- has type `std::rc::Rc<[u8]>` which is not `Send`\n@@ -44,45 +44,45 @@ LL | }\n    = note: `std::rc::Rc<[u8]>` doesn't implement `std::marker::Send`\n \n error: future cannot be sent between threads safely\n-  --> $DIR/future_not_send.rs:20:63\n+  --> $DIR/future_not_send.rs:19:63\n    |\n LL | async fn private_future2(rc: Rc<[u8]>, cell: &Cell<usize>) -> bool {\n    |                                                               ^^^^ future returned by `private_future2` is not `Send`\n    |\n note: captured value is not `Send`\n-  --> $DIR/future_not_send.rs:20:26\n+  --> $DIR/future_not_send.rs:19:26\n    |\n LL | async fn private_future2(rc: Rc<[u8]>, cell: &Cell<usize>) -> bool {\n    |                          ^^ has type `std::rc::Rc<[u8]>` which is not `Send`\n    = note: `std::rc::Rc<[u8]>` doesn't implement `std::marker::Send`\n note: captured value is not `Send` because `&` references cannot be sent unless their referent is `Sync`\n-  --> $DIR/future_not_send.rs:20:40\n+  --> $DIR/future_not_send.rs:19:40\n    |\n LL | async fn private_future2(rc: Rc<[u8]>, cell: &Cell<usize>) -> bool {\n    |                                        ^^^^ has type `&std::cell::Cell<usize>` which is not `Send`, because `std::cell::Cell<usize>` is not `Sync`\n    = note: `std::cell::Cell<usize>` doesn't implement `std::marker::Sync`\n \n error: future cannot be sent between threads safely\n-  --> $DIR/future_not_send.rs:24:43\n+  --> $DIR/future_not_send.rs:23:43\n    |\n LL | pub async fn public_future2(rc: Rc<[u8]>) {}\n    |                                           ^ future returned by `public_future2` is not `Send`\n    |\n note: captured value is not `Send`\n-  --> $DIR/future_not_send.rs:24:29\n+  --> $DIR/future_not_send.rs:23:29\n    |\n LL | pub async fn public_future2(rc: Rc<[u8]>) {}\n    |                             ^^ has type `std::rc::Rc<[u8]>` which is not `Send`\n    = note: `std::rc::Rc<[u8]>` doesn't implement `std::marker::Send`\n \n error: future cannot be sent between threads safely\n-  --> $DIR/future_not_send.rs:35:39\n+  --> $DIR/future_not_send.rs:34:39\n    |\n LL |     async fn private_future(&self) -> usize {\n    |                                       ^^^^^ future returned by `private_future` is not `Send`\n    |\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/future_not_send.rs:36:9\n+  --> $DIR/future_not_send.rs:35:9\n    |\n LL |     async fn private_future(&self) -> usize {\n    |                             ----- has type `&Dummy` which is not `Send`\n@@ -94,13 +94,13 @@ LL |     }\n    = note: `std::rc::Rc<[u8]>` doesn't implement `std::marker::Sync`\n \n error: future cannot be sent between threads safely\n-  --> $DIR/future_not_send.rs:40:39\n+  --> $DIR/future_not_send.rs:39:39\n    |\n LL |     pub async fn public_future(&self) {\n    |                                       ^ future returned by `public_future` is not `Send`\n    |\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/future_not_send.rs:41:9\n+  --> $DIR/future_not_send.rs:40:9\n    |\n LL |     pub async fn public_future(&self) {\n    |                                ----- has type `&Dummy` which is not `Send`\n@@ -111,13 +111,13 @@ LL |     }\n    = note: `std::rc::Rc<[u8]>` doesn't implement `std::marker::Sync`\n \n error: future cannot be sent between threads safely\n-  --> $DIR/future_not_send.rs:50:37\n+  --> $DIR/future_not_send.rs:49:37\n    |\n LL | async fn generic_future<T>(t: T) -> T\n    |                                     ^ future returned by `generic_future` is not `Send`\n    |\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/future_not_send.rs:55:5\n+  --> $DIR/future_not_send.rs:54:5\n    |\n LL |     let rt = &t;\n    |         -- has type `&T` which is not `Send`\n@@ -129,13 +129,13 @@ LL | }\n    = note: `T` doesn't implement `std::marker::Sync`\n \n error: future cannot be sent between threads safely\n-  --> $DIR/future_not_send.rs:66:34\n+  --> $DIR/future_not_send.rs:65:34\n    |\n LL | async fn unclear_future<T>(t: T) {}\n    |                                  ^ future returned by `unclear_future` is not `Send`\n    |\n note: captured value is not `Send`\n-  --> $DIR/future_not_send.rs:66:28\n+  --> $DIR/future_not_send.rs:65:28\n    |\n LL | async fn unclear_future<T>(t: T) {}\n    |                            ^ has type `T` which is not `Send`"}, {"sha": "fd96ca3f466eabe7cc9ed034040925a658f274c9", "filename": "tests/ui/implicit_hasher.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fimplicit_hasher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fimplicit_hasher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_hasher.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// edition:2018\n // aux-build:implicit_hasher_macros.rs\n #![deny(clippy::implicit_hasher)]\n #![allow(unused)]"}, {"sha": "59b0fba2a4cfee460b8e2d120a91b01fb1c3d952", "filename": "tests/ui/implicit_hasher.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fimplicit_hasher.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fimplicit_hasher.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_hasher.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,11 +1,11 @@\n error: impl for `HashMap` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:17:35\n+  --> $DIR/implicit_hasher.rs:16:35\n    |\n LL | impl<K: Hash + Eq, V> Foo<i8> for HashMap<K, V> {\n    |                                   ^^^^^^^^^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/implicit_hasher.rs:3:9\n+  --> $DIR/implicit_hasher.rs:2:9\n    |\n LL | #![deny(clippy::implicit_hasher)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n@@ -19,7 +19,7 @@ LL |         (HashMap::default(), HashMap::with_capacity_and_hasher(10, Default:\n    |          ~~~~~~~~~~~~~~~~~~  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: impl for `HashMap` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:26:36\n+  --> $DIR/implicit_hasher.rs:25:36\n    |\n LL | impl<K: Hash + Eq, V> Foo<i8> for (HashMap<K, V>,) {\n    |                                    ^^^^^^^^^^^^^\n@@ -34,7 +34,7 @@ LL |         ((HashMap::default(),), (HashMap::with_capacity_and_hasher(10, Defa\n    |           ~~~~~~~~~~~~~~~~~~     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: impl for `HashMap` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:31:19\n+  --> $DIR/implicit_hasher.rs:30:19\n    |\n LL | impl Foo<i16> for HashMap<String, String> {\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^\n@@ -49,7 +49,7 @@ LL |         (HashMap::default(), HashMap::with_capacity_and_hasher(10, Default:\n    |          ~~~~~~~~~~~~~~~~~~  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: impl for `HashSet` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:48:32\n+  --> $DIR/implicit_hasher.rs:47:32\n    |\n LL | impl<T: Hash + Eq> Foo<i8> for HashSet<T> {\n    |                                ^^^^^^^^^^\n@@ -64,7 +64,7 @@ LL |         (HashSet::default(), HashSet::with_capacity_and_hasher(10, Default:\n    |          ~~~~~~~~~~~~~~~~~~  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: impl for `HashSet` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:53:19\n+  --> $DIR/implicit_hasher.rs:52:19\n    |\n LL | impl Foo<i16> for HashSet<String> {\n    |                   ^^^^^^^^^^^^^^^\n@@ -79,7 +79,7 @@ LL |         (HashSet::default(), HashSet::with_capacity_and_hasher(10, Default:\n    |          ~~~~~~~~~~~~~~~~~~  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: parameter of type `HashMap` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:70:23\n+  --> $DIR/implicit_hasher.rs:69:23\n    |\n LL | pub fn foo(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n    |                       ^^^^^^^^^^^^^^^^^\n@@ -90,7 +90,7 @@ LL | pub fn foo<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32, S>, _s\n    |           +++++++++++++++++++++++++++++            ~~~~~~~~~~~~~~~~~~~~\n \n error: parameter of type `HashSet` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:70:53\n+  --> $DIR/implicit_hasher.rs:69:53\n    |\n LL | pub fn foo(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n    |                                                     ^^^^^^^^^^^^\n@@ -101,7 +101,7 @@ LL | pub fn foo<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32>, _set:\n    |           +++++++++++++++++++++++++++++                                          ~~~~~~~~~~~~~~~\n \n error: impl for `HashMap` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:74:43\n+  --> $DIR/implicit_hasher.rs:73:43\n    |\n LL |         impl<K: Hash + Eq, V> Foo<u8> for HashMap<K, V> {\n    |                                           ^^^^^^^^^^^^^\n@@ -120,7 +120,7 @@ LL |                 (HashMap::default(), HashMap::with_capacity_and_hasher(10,\n    |                  ~~~~~~~~~~~~~~~~~~  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: parameter of type `HashMap` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:82:33\n+  --> $DIR/implicit_hasher.rs:81:33\n    |\n LL |         pub fn $name(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n    |                                 ^^^^^^^^^^^^^^^^^\n@@ -135,7 +135,7 @@ LL |         pub fn $name<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i\n    |                     +++++++++++++++++++++++++++++            ~~~~~~~~~~~~~~~~~~~~\n \n error: parameter of type `HashSet` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:82:63\n+  --> $DIR/implicit_hasher.rs:81:63\n    |\n LL |         pub fn $name(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n    |                                                               ^^^^^^^^^^^^\n@@ -150,7 +150,7 @@ LL |         pub fn $name<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i\n    |                     +++++++++++++++++++++++++++++                                          ~~~~~~~~~~~~~~~\n \n error: parameter of type `HashMap` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:101:35\n+  --> $DIR/implicit_hasher.rs:100:35\n    |\n LL | pub async fn election_vote(_data: HashMap<i32, i32>) {}\n    |                                   ^^^^^^^^^^^^^^^^^"}, {"sha": "a51f7bc6a29ffff52a301b84053f3c8f58bddc53", "filename": "tests/ui/implicit_return.fixed", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fimplicit_return.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fimplicit_return.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_return.fixed?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// edition:2018\n // run-rustfix\n \n #![warn(clippy::implicit_return)]"}, {"sha": "03f8ec49d51e5457a57e2c9a71e30669fb984b1d", "filename": "tests/ui/implicit_return.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fimplicit_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fimplicit_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_return.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// edition:2018\n // run-rustfix\n \n #![warn(clippy::implicit_return)]"}, {"sha": "522bc3bf895a7a3159dccdb74e56fe032c10c483", "filename": "tests/ui/implicit_return.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fimplicit_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fimplicit_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_return.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,91 +1,91 @@\n error: missing `return` statement\n-  --> $DIR/implicit_return.rs:13:5\n+  --> $DIR/implicit_return.rs:12:5\n    |\n LL |     true\n    |     ^^^^ help: add `return` as shown: `return true`\n    |\n    = note: `-D clippy::implicit-return` implied by `-D warnings`\n \n error: missing `return` statement\n-  --> $DIR/implicit_return.rs:17:15\n+  --> $DIR/implicit_return.rs:16:15\n    |\n LL |     if true { true } else { false }\n    |               ^^^^ help: add `return` as shown: `return true`\n \n error: missing `return` statement\n-  --> $DIR/implicit_return.rs:17:29\n+  --> $DIR/implicit_return.rs:16:29\n    |\n LL |     if true { true } else { false }\n    |                             ^^^^^ help: add `return` as shown: `return false`\n \n error: missing `return` statement\n-  --> $DIR/implicit_return.rs:23:17\n+  --> $DIR/implicit_return.rs:22:17\n    |\n LL |         true => false,\n    |                 ^^^^^ help: add `return` as shown: `return false`\n \n error: missing `return` statement\n-  --> $DIR/implicit_return.rs:24:20\n+  --> $DIR/implicit_return.rs:23:20\n    |\n LL |         false => { true },\n    |                    ^^^^ help: add `return` as shown: `return true`\n \n error: missing `return` statement\n-  --> $DIR/implicit_return.rs:37:9\n+  --> $DIR/implicit_return.rs:36:9\n    |\n LL |         break true;\n    |         ^^^^^^^^^^ help: change `break` to `return` as shown: `return true`\n \n error: missing `return` statement\n-  --> $DIR/implicit_return.rs:44:13\n+  --> $DIR/implicit_return.rs:43:13\n    |\n LL |             break true;\n    |             ^^^^^^^^^^ help: change `break` to `return` as shown: `return true`\n \n error: missing `return` statement\n-  --> $DIR/implicit_return.rs:52:13\n+  --> $DIR/implicit_return.rs:51:13\n    |\n LL |             break true;\n    |             ^^^^^^^^^^ help: change `break` to `return` as shown: `return true`\n \n error: missing `return` statement\n-  --> $DIR/implicit_return.rs:70:18\n+  --> $DIR/implicit_return.rs:69:18\n    |\n LL |     let _ = || { true };\n    |                  ^^^^ help: add `return` as shown: `return true`\n \n error: missing `return` statement\n-  --> $DIR/implicit_return.rs:71:16\n+  --> $DIR/implicit_return.rs:70:16\n    |\n LL |     let _ = || true;\n    |                ^^^^ help: add `return` as shown: `return true`\n \n error: missing `return` statement\n-  --> $DIR/implicit_return.rs:79:5\n+  --> $DIR/implicit_return.rs:78:5\n    |\n LL |     format!(\"test {}\", \"test\")\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return format!(\"test {}\", \"test\")`\n \n error: missing `return` statement\n-  --> $DIR/implicit_return.rs:88:5\n+  --> $DIR/implicit_return.rs:87:5\n    |\n LL |     m!(true, false)\n    |     ^^^^^^^^^^^^^^^ help: add `return` as shown: `return m!(true, false)`\n \n error: missing `return` statement\n-  --> $DIR/implicit_return.rs:94:13\n+  --> $DIR/implicit_return.rs:93:13\n    |\n LL |             break true;\n    |             ^^^^^^^^^^ help: change `break` to `return` as shown: `return true`\n \n error: missing `return` statement\n-  --> $DIR/implicit_return.rs:99:17\n+  --> $DIR/implicit_return.rs:98:17\n    |\n LL |                 break 'outer false;\n    |                 ^^^^^^^^^^^^^^^^^^ help: change `break` to `return` as shown: `return false`\n \n error: missing `return` statement\n-  --> $DIR/implicit_return.rs:114:5\n+  --> $DIR/implicit_return.rs:113:5\n    |\n LL | /     loop {\n LL | |         m!(true);\n@@ -100,7 +100,7 @@ LL +     }\n    |\n \n error: missing `return` statement\n-  --> $DIR/implicit_return.rs:128:5\n+  --> $DIR/implicit_return.rs:127:5\n    |\n LL |     true\n    |     ^^^^ help: add `return` as shown: `return true`"}, {"sha": "eb66d1afddce39dfce67d421a7229232b52b2b6f", "filename": "tests/ui/inconsistent_struct_constructor.fixed", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Finconsistent_struct_constructor.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Finconsistent_struct_constructor.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finconsistent_struct_constructor.fixed?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,4 @@\n // run-rustfix\n-// edition:2018\n #![warn(clippy::inconsistent_struct_constructor)]\n #![allow(clippy::redundant_field_names)]\n #![allow(clippy::unnecessary_operation)]"}, {"sha": "5caadc7c62083fb2b214df04ded3b16e2bb665f7", "filename": "tests/ui/inconsistent_struct_constructor.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Finconsistent_struct_constructor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Finconsistent_struct_constructor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finconsistent_struct_constructor.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,4 @@\n // run-rustfix\n-// edition:2018\n #![warn(clippy::inconsistent_struct_constructor)]\n #![allow(clippy::redundant_field_names)]\n #![allow(clippy::unnecessary_operation)]"}, {"sha": "c90189e964f09e68cea01babbb5d25ba03689909", "filename": "tests/ui/inconsistent_struct_constructor.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Finconsistent_struct_constructor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Finconsistent_struct_constructor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finconsistent_struct_constructor.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,13 +1,13 @@\n error: struct constructor field order is inconsistent with struct definition field order\n-  --> $DIR/inconsistent_struct_constructor.rs:34:9\n+  --> $DIR/inconsistent_struct_constructor.rs:33:9\n    |\n LL |         Foo { y, x, z };\n    |         ^^^^^^^^^^^^^^^ help: try: `Foo { x, y, z }`\n    |\n    = note: `-D clippy::inconsistent-struct-constructor` implied by `-D warnings`\n \n error: struct constructor field order is inconsistent with struct definition field order\n-  --> $DIR/inconsistent_struct_constructor.rs:56:9\n+  --> $DIR/inconsistent_struct_constructor.rs:55:9\n    |\n LL | /         Foo {\n LL | |             z,"}, {"sha": "463a48b24a321e5ed8a91c20fee0029c35876f42", "filename": "tests/ui/issue-7447.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fissue-7447.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fissue-7447.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissue-7447.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -0,0 +1,19 @@\n+error: sub-expression diverges\n+  --> $DIR/issue-7447.rs:23:15\n+   |\n+LL |     byte_view(panic!());\n+   |               ^^^^^^^^\n+   |\n+   = note: `-D clippy::diverging-sub-expression` implied by `-D warnings`\n+   = note: this error originates in the macro `$crate::panic::panic_2021` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: sub-expression diverges\n+  --> $DIR/issue-7447.rs:24:19\n+   |\n+LL |     group_entries(panic!());\n+   |                   ^^^^^^^^\n+   |\n+   = note: this error originates in the macro `$crate::panic::panic_2021` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "d9d48189bd74e741f381f9449783ecefd5cce514", "filename": "tests/ui/issue_4266.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fissue_4266.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fissue_4266.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissue_4266.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// edition:2018\n #![allow(dead_code)]\n \n async fn sink1<'a>(_: &'a str) {} // lint"}, {"sha": "20419457b47f0ee3018f9ec888939e1d96cfbae4", "filename": "tests/ui/issue_4266.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fissue_4266.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fissue_4266.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissue_4266.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,13 +1,13 @@\n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/issue_4266.rs:4:1\n+  --> $DIR/issue_4266.rs:3:1\n    |\n LL | async fn sink1<'a>(_: &'a str) {} // lint\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::needless-lifetimes` implied by `-D warnings`\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/issue_4266.rs:8:1\n+  --> $DIR/issue_4266.rs:7:1\n    |\n LL | async fn one_to_one<'a>(s: &'a str) -> &'a str {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "1e938e72b57775356d326a9f0bac9dcae6b57525", "filename": "tests/ui/len_without_is_empty.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Flen_without_is_empty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Flen_without_is_empty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flen_without_is_empty.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,3 @@\n-// edition:2018\n-\n #![warn(clippy::len_without_is_empty)]\n #![allow(dead_code, unused)]\n "}, {"sha": "a1f48f7610b44857edf7f6f8f9e6dbbc520c1a0d", "filename": "tests/ui/len_without_is_empty.stderr", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Flen_without_is_empty.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Flen_without_is_empty.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flen_without_is_empty.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,93 +1,93 @@\n error: struct `PubOne` has a public `len` method, but no `is_empty` method\n-  --> $DIR/len_without_is_empty.rs:9:5\n+  --> $DIR/len_without_is_empty.rs:7:5\n    |\n LL |     pub fn len(&self) -> isize {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::len-without-is-empty` implied by `-D warnings`\n \n error: trait `PubTraitsToo` has a `len` method but no (possibly inherited) `is_empty` method\n-  --> $DIR/len_without_is_empty.rs:57:1\n+  --> $DIR/len_without_is_empty.rs:55:1\n    |\n LL | / pub trait PubTraitsToo {\n LL | |     fn len(&self) -> isize;\n LL | | }\n    | |_^\n \n error: struct `HasIsEmpty` has a public `len` method, but a private `is_empty` method\n-  --> $DIR/len_without_is_empty.rs:70:5\n+  --> $DIR/len_without_is_empty.rs:68:5\n    |\n LL |     pub fn len(&self) -> isize {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: `is_empty` defined here\n-  --> $DIR/len_without_is_empty.rs:74:5\n+  --> $DIR/len_without_is_empty.rs:72:5\n    |\n LL |     fn is_empty(&self) -> bool {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: struct `HasWrongIsEmpty` has a public `len` method, but the `is_empty` method has an unexpected signature\n-  --> $DIR/len_without_is_empty.rs:82:5\n+  --> $DIR/len_without_is_empty.rs:80:5\n    |\n LL |     pub fn len(&self) -> isize {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: `is_empty` defined here\n-  --> $DIR/len_without_is_empty.rs:86:5\n+  --> $DIR/len_without_is_empty.rs:84:5\n    |\n LL |     pub fn is_empty(&self, x: u32) -> bool {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: expected signature: `(&self) -> bool`\n \n error: struct `MismatchedSelf` has a public `len` method, but the `is_empty` method has an unexpected signature\n-  --> $DIR/len_without_is_empty.rs:94:5\n+  --> $DIR/len_without_is_empty.rs:92:5\n    |\n LL |     pub fn len(self) -> isize {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: `is_empty` defined here\n-  --> $DIR/len_without_is_empty.rs:98:5\n+  --> $DIR/len_without_is_empty.rs:96:5\n    |\n LL |     pub fn is_empty(&self) -> bool {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: expected signature: `(self) -> bool`\n \n error: trait `DependsOnFoo` has a `len` method but no (possibly inherited) `is_empty` method\n-  --> $DIR/len_without_is_empty.rs:173:1\n+  --> $DIR/len_without_is_empty.rs:171:1\n    |\n LL | / pub trait DependsOnFoo: Foo {\n LL | |     fn len(&mut self) -> usize;\n LL | | }\n    | |_^\n \n error: struct `OptionalLen3` has a public `len` method, but the `is_empty` method has an unexpected signature\n-  --> $DIR/len_without_is_empty.rs:218:5\n+  --> $DIR/len_without_is_empty.rs:216:5\n    |\n LL |     pub fn len(&self) -> usize {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: `is_empty` defined here\n-  --> $DIR/len_without_is_empty.rs:223:5\n+  --> $DIR/len_without_is_empty.rs:221:5\n    |\n LL |     pub fn is_empty(&self) -> Option<bool> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: expected signature: `(&self) -> bool`\n \n error: struct `ResultLen` has a public `len` method, but the `is_empty` method has an unexpected signature\n-  --> $DIR/len_without_is_empty.rs:230:5\n+  --> $DIR/len_without_is_empty.rs:228:5\n    |\n LL |     pub fn len(&self) -> Result<usize, ()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: `is_empty` defined here\n-  --> $DIR/len_without_is_empty.rs:235:5\n+  --> $DIR/len_without_is_empty.rs:233:5\n    |\n LL |     pub fn is_empty(&self) -> Option<bool> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: expected signature: `(&self) -> bool` or `(&self) -> Result<bool>\n \n error: this returns a `Result<_, ()>`\n-  --> $DIR/len_without_is_empty.rs:230:5\n+  --> $DIR/len_without_is_empty.rs:228:5\n    |\n LL |     pub fn len(&self) -> Result<usize, ()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -96,23 +96,23 @@ LL |     pub fn len(&self) -> Result<usize, ()> {\n    = help: use a custom `Error` type instead\n \n error: this returns a `Result<_, ()>`\n-  --> $DIR/len_without_is_empty.rs:242:5\n+  --> $DIR/len_without_is_empty.rs:240:5\n    |\n LL |     pub fn len(&self) -> Result<usize, ()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use a custom `Error` type instead\n \n error: this returns a `Result<_, ()>`\n-  --> $DIR/len_without_is_empty.rs:246:5\n+  --> $DIR/len_without_is_empty.rs:244:5\n    |\n LL |     pub fn is_empty(&self) -> Result<bool, ()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use a custom `Error` type instead\n \n error: this returns a `Result<_, ()>`\n-  --> $DIR/len_without_is_empty.rs:253:5\n+  --> $DIR/len_without_is_empty.rs:251:5\n    |\n LL |     pub fn len(&self) -> Result<usize, ()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "9171558f3a2d74d1f79d2c9b62d6a3282db33b82", "filename": "tests/ui/macro_use_imports.fixed", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmacro_use_imports.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmacro_use_imports.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacro_use_imports.fixed?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// compile-flags: --edition 2018\n // aux-build:macro_rules.rs\n // aux-build:macro_use_helper.rs\n // aux-build:proc_macro_derive.rs"}, {"sha": "cd01fd43f6d325eefb79e07d1bc71753ef1a164c", "filename": "tests/ui/macro_use_imports.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmacro_use_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmacro_use_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacro_use_imports.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// compile-flags: --edition 2018\n // aux-build:macro_rules.rs\n // aux-build:macro_use_helper.rs\n // aux-build:proc_macro_derive.rs"}, {"sha": "f8c86c8d9179f8af918b684eb9294c18ea4a7008", "filename": "tests/ui/macro_use_imports.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmacro_use_imports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmacro_use_imports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacro_use_imports.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,28 +1,28 @@\n error: `macro_use` attributes are no longer needed in the Rust 2018 edition\n-  --> $DIR/macro_use_imports.rs:19:5\n+  --> $DIR/macro_use_imports.rs:18:5\n    |\n LL |     #[macro_use]\n    |     ^^^^^^^^^^^^ help: remove the attribute and import the macro directly, try: `use mac::{pub_macro, inner_mod_macro, function_macro, ty_macro, pub_in_private_macro};`\n    |\n    = note: `-D clippy::macro-use-imports` implied by `-D warnings`\n \n error: `macro_use` attributes are no longer needed in the Rust 2018 edition\n-  --> $DIR/macro_use_imports.rs:25:5\n+  --> $DIR/macro_use_imports.rs:20:5\n    |\n LL |     #[macro_use]\n-   |     ^^^^^^^^^^^^ help: remove the attribute and import the macro directly, try: `use mac::inner::nested::string_add;`\n+   |     ^^^^^^^^^^^^ help: remove the attribute and import the macro directly, try: `use mini_mac::ClippyMiniMacroTest;`\n \n error: `macro_use` attributes are no longer needed in the Rust 2018 edition\n-  --> $DIR/macro_use_imports.rs:21:5\n+  --> $DIR/macro_use_imports.rs:22:5\n    |\n LL |     #[macro_use]\n-   |     ^^^^^^^^^^^^ help: remove the attribute and import the macro directly, try: `use mini_mac::ClippyMiniMacroTest;`\n+   |     ^^^^^^^^^^^^ help: remove the attribute and import the macro directly, try: `use mac::{inner::foofoo, inner::try_err};`\n \n error: `macro_use` attributes are no longer needed in the Rust 2018 edition\n-  --> $DIR/macro_use_imports.rs:23:5\n+  --> $DIR/macro_use_imports.rs:24:5\n    |\n LL |     #[macro_use]\n-   |     ^^^^^^^^^^^^ help: remove the attribute and import the macro directly, try: `use mac::{inner::foofoo, inner::try_err};`\n+   |     ^^^^^^^^^^^^ help: remove the attribute and import the macro directly, try: `use mac::inner::nested::string_add;`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "8943bc80897e087eda2b66eca7c95b7d608f6b3b", "filename": "tests/ui/manual_assert.fixed", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmanual_assert.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmanual_assert.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_assert.fixed?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,6 @@\n+// edition:2018\n // run-rustfix\n+//FIXME: This does not correctly match in edition 2021, see #7843\n #![warn(clippy::manual_assert)]\n \n fn main() {"}, {"sha": "4c474777e8dd6b3204790e3c383da520798a470b", "filename": "tests/ui/manual_assert.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmanual_assert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmanual_assert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_assert.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,6 @@\n+// edition:2018\n // run-rustfix\n+//FIXME: This does not correctly match in edition 2021, see #7843\n #![warn(clippy::manual_assert)]\n \n fn main() {"}, {"sha": "a8e907d25db3b8d485d0a271161f856374bd3229", "filename": "tests/ui/manual_assert.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmanual_assert.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmanual_assert.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_assert.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,5 @@\n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:19:5\n+  --> $DIR/manual_assert.rs:21:5\n    |\n LL | /     if !a.is_empty() {\n LL | |         panic!(\"qaqaq{:?}\", a);\n@@ -9,47 +9,47 @@ LL | |     }\n    = note: `-D clippy::manual-assert` implied by `-D warnings`\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:22:5\n+  --> $DIR/manual_assert.rs:24:5\n    |\n LL | /     if !a.is_empty() {\n LL | |         panic!(\"qwqwq\");\n LL | |     }\n    | |_____^ help: try: `assert!(a.is_empty(), \"qwqwq\");`\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:39:5\n+  --> $DIR/manual_assert.rs:41:5\n    |\n LL | /     if b.is_empty() {\n LL | |         panic!(\"panic1\");\n LL | |     }\n    | |_____^ help: try: `assert!(!b.is_empty(), \"panic1\");`\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:42:5\n+  --> $DIR/manual_assert.rs:44:5\n    |\n LL | /     if b.is_empty() && a.is_empty() {\n LL | |         panic!(\"panic2\");\n LL | |     }\n    | |_____^ help: try: `assert!(!(b.is_empty() && a.is_empty()), \"panic2\");`\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:45:5\n+  --> $DIR/manual_assert.rs:47:5\n    |\n LL | /     if a.is_empty() && !b.is_empty() {\n LL | |         panic!(\"panic3\");\n LL | |     }\n    | |_____^ help: try: `assert!(!(a.is_empty() && !b.is_empty()), \"panic3\");`\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:48:5\n+  --> $DIR/manual_assert.rs:50:5\n    |\n LL | /     if b.is_empty() || a.is_empty() {\n LL | |         panic!(\"panic4\");\n LL | |     }\n    | |_____^ help: try: `assert!(!(b.is_empty() || a.is_empty()), \"panic4\");`\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:51:5\n+  --> $DIR/manual_assert.rs:53:5\n    |\n LL | /     if a.is_empty() || !b.is_empty() {\n LL | |         panic!(\"panic5\");"}, {"sha": "136cc96be70cafa57951fc7edd89c784892803b1", "filename": "tests/ui/manual_async_fn.fixed", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmanual_async_fn.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmanual_async_fn.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_async_fn.fixed?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,4 @@\n // run-rustfix\n-// edition:2018\n #![warn(clippy::manual_async_fn)]\n #![allow(unused)]\n "}, {"sha": "ddc453ffdb7500958c5e26cbf62a65a4859640f7", "filename": "tests/ui/manual_async_fn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmanual_async_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmanual_async_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_async_fn.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,4 @@\n // run-rustfix\n-// edition:2018\n #![warn(clippy::manual_async_fn)]\n #![allow(unused)]\n "}, {"sha": "7435f46074c8167287b383f5cee7f67c3e5afb0f", "filename": "tests/ui/manual_async_fn.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmanual_async_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmanual_async_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_async_fn.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,5 @@\n error: this function can be simplified using the `async fn` syntax\n-  --> $DIR/manual_async_fn.rs:8:1\n+  --> $DIR/manual_async_fn.rs:7:1\n    |\n LL | fn fut() -> impl Future<Output = i32> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -15,7 +15,7 @@ LL | fn fut() -> impl Future<Output = i32> { 42 }\n    |                                       ~~~~~~\n \n error: this function can be simplified using the `async fn` syntax\n-  --> $DIR/manual_async_fn.rs:13:1\n+  --> $DIR/manual_async_fn.rs:12:1\n    |\n LL | fn fut2() ->impl Future<Output = i32> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -30,7 +30,7 @@ LL | fn fut2() ->impl Future<Output = i32> { 42 }\n    |                                       ~~~~~~\n \n error: this function can be simplified using the `async fn` syntax\n-  --> $DIR/manual_async_fn.rs:18:1\n+  --> $DIR/manual_async_fn.rs:17:1\n    |\n LL | fn fut3()-> impl Future<Output = i32> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -45,7 +45,7 @@ LL | fn fut3()-> impl Future<Output = i32> { 42 }\n    |                                       ~~~~~~\n \n error: this function can be simplified using the `async fn` syntax\n-  --> $DIR/manual_async_fn.rs:22:1\n+  --> $DIR/manual_async_fn.rs:21:1\n    |\n LL | fn empty_fut() -> impl Future<Output = ()> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -60,7 +60,7 @@ LL | fn empty_fut() -> impl Future<Output = ()> {}\n    |                                            ~~\n \n error: this function can be simplified using the `async fn` syntax\n-  --> $DIR/manual_async_fn.rs:27:1\n+  --> $DIR/manual_async_fn.rs:26:1\n    |\n LL | fn empty_fut2() ->impl Future<Output = ()> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -75,7 +75,7 @@ LL | fn empty_fut2() ->impl Future<Output = ()> {}\n    |                                            ~~\n \n error: this function can be simplified using the `async fn` syntax\n-  --> $DIR/manual_async_fn.rs:32:1\n+  --> $DIR/manual_async_fn.rs:31:1\n    |\n LL | fn empty_fut3()-> impl Future<Output = ()> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -90,7 +90,7 @@ LL | fn empty_fut3()-> impl Future<Output = ()> {}\n    |                                            ~~\n \n error: this function can be simplified using the `async fn` syntax\n-  --> $DIR/manual_async_fn.rs:36:1\n+  --> $DIR/manual_async_fn.rs:35:1\n    |\n LL | fn core_fut() -> impl core::future::Future<Output = i32> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -105,7 +105,7 @@ LL | fn core_fut() -> impl core::future::Future<Output = i32> { 42 }\n    |                                                          ~~~~~~\n \n error: this function can be simplified using the `async fn` syntax\n-  --> $DIR/manual_async_fn.rs:58:5\n+  --> $DIR/manual_async_fn.rs:57:5\n    |\n LL |     fn inh_fut() -> impl Future<Output = i32> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -125,7 +125,7 @@ LL +             let c = 21;\n  ...\n \n error: this function can be simplified using the `async fn` syntax\n-  --> $DIR/manual_async_fn.rs:93:1\n+  --> $DIR/manual_async_fn.rs:92:1\n    |\n LL | fn elided(_: &i32) -> impl Future<Output = i32> + '_ {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -140,7 +140,7 @@ LL | fn elided(_: &i32) -> impl Future<Output = i32> + '_ { 42 }\n    |                                                      ~~~~~~\n \n error: this function can be simplified using the `async fn` syntax\n-  --> $DIR/manual_async_fn.rs:102:1\n+  --> $DIR/manual_async_fn.rs:101:1\n    |\n LL | fn explicit<'a, 'b>(_: &'a i32, _: &'b i32) -> impl Future<Output = i32> + 'a + 'b {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "294d79abc0459fe481a9125f07b1fd8faf67ac69", "filename": "tests/ui/manual_map_option.fixed", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmanual_map_option.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmanual_map_option.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_map_option.fixed?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// edition:2018\n // run-rustfix\n \n #![warn(clippy::manual_map)]"}, {"sha": "d11bf5ecb825ae28a1ae76ba6f1594199e37dfc8", "filename": "tests/ui/manual_map_option.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmanual_map_option.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmanual_map_option.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_map_option.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// edition:2018\n // run-rustfix\n \n #![warn(clippy::manual_map)]"}, {"sha": "0036b8151ded0514259d03687784e3597716b977", "filename": "tests/ui/manual_map_option.stderr", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmanual_map_option.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmanual_map_option.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_map_option.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,5 @@\n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:15:5\n+  --> $DIR/manual_map_option.rs:14:5\n    |\n LL | /     match Some(0) {\n LL | |         Some(_) => Some(2),\n@@ -10,7 +10,7 @@ LL | |     };\n    = note: `-D clippy::manual-map` implied by `-D warnings`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:20:5\n+  --> $DIR/manual_map_option.rs:19:5\n    |\n LL | /     match Some(0) {\n LL | |         Some(x) => Some(x + 1),\n@@ -19,7 +19,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(0).map(|x| x + 1)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:25:5\n+  --> $DIR/manual_map_option.rs:24:5\n    |\n LL | /     match Some(\"\") {\n LL | |         Some(x) => Some(x.is_empty()),\n@@ -28,7 +28,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(\"\").map(|x| x.is_empty())`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:30:5\n+  --> $DIR/manual_map_option.rs:29:5\n    |\n LL | /     if let Some(x) = Some(0) {\n LL | |         Some(!x)\n@@ -38,7 +38,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(0).map(|x| !x)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:37:5\n+  --> $DIR/manual_map_option.rs:36:5\n    |\n LL | /     match Some(0) {\n LL | |         Some(x) => { Some(std::convert::identity(x)) }\n@@ -47,7 +47,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(0).map(std::convert::identity)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:42:5\n+  --> $DIR/manual_map_option.rs:41:5\n    |\n LL | /     match Some(&String::new()) {\n LL | |         Some(x) => Some(str::len(x)),\n@@ -56,7 +56,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(&String::new()).map(|x| str::len(x))`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:52:5\n+  --> $DIR/manual_map_option.rs:51:5\n    |\n LL | /     match &Some([0, 1]) {\n LL | |         Some(x) => Some(x[0]),\n@@ -65,7 +65,7 @@ LL | |     };\n    | |_____^ help: try this: `Some([0, 1]).as_ref().map(|x| x[0])`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:57:5\n+  --> $DIR/manual_map_option.rs:56:5\n    |\n LL | /     match &Some(0) {\n LL | |         &Some(x) => Some(x * 2),\n@@ -74,7 +74,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(0).map(|x| x * 2)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:62:5\n+  --> $DIR/manual_map_option.rs:61:5\n    |\n LL | /     match Some(String::new()) {\n LL | |         Some(ref x) => Some(x.is_empty()),\n@@ -83,7 +83,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(String::new()).as_ref().map(|x| x.is_empty())`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:67:5\n+  --> $DIR/manual_map_option.rs:66:5\n    |\n LL | /     match &&Some(String::new()) {\n LL | |         Some(x) => Some(x.len()),\n@@ -92,7 +92,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(String::new()).as_ref().map(|x| x.len())`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:72:5\n+  --> $DIR/manual_map_option.rs:71:5\n    |\n LL | /     match &&Some(0) {\n LL | |         &&Some(x) => Some(x + x),\n@@ -101,7 +101,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(0).map(|x| x + x)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:85:9\n+  --> $DIR/manual_map_option.rs:84:9\n    |\n LL | /         match &mut Some(String::new()) {\n LL | |             Some(x) => Some(x.push_str(\"\")),\n@@ -110,7 +110,7 @@ LL | |         };\n    | |_________^ help: try this: `Some(String::new()).as_mut().map(|x| x.push_str(\"\"))`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:91:5\n+  --> $DIR/manual_map_option.rs:90:5\n    |\n LL | /     match &mut Some(String::new()) {\n LL | |         Some(ref x) => Some(x.len()),\n@@ -119,7 +119,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(String::new()).as_ref().map(|x| x.len())`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:96:5\n+  --> $DIR/manual_map_option.rs:95:5\n    |\n LL | /     match &mut &Some(String::new()) {\n LL | |         Some(x) => Some(x.is_empty()),\n@@ -128,7 +128,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(String::new()).as_ref().map(|x| x.is_empty())`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:101:5\n+  --> $DIR/manual_map_option.rs:100:5\n    |\n LL | /     match Some((0, 1, 2)) {\n LL | |         Some((x, y, z)) => Some(x + y + z),\n@@ -137,7 +137,7 @@ LL | |     };\n    | |_____^ help: try this: `Some((0, 1, 2)).map(|(x, y, z)| x + y + z)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:106:5\n+  --> $DIR/manual_map_option.rs:105:5\n    |\n LL | /     match Some([1, 2, 3]) {\n LL | |         Some([first, ..]) => Some(first),\n@@ -146,7 +146,7 @@ LL | |     };\n    | |_____^ help: try this: `Some([1, 2, 3]).map(|[first, ..]| first)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:111:5\n+  --> $DIR/manual_map_option.rs:110:5\n    |\n LL | /     match &Some((String::new(), \"test\")) {\n LL | |         Some((x, y)) => Some((y, x)),\n@@ -155,7 +155,7 @@ LL | |     };\n    | |_____^ help: try this: `Some((String::new(), \"test\")).as_ref().map(|(x, y)| (y, x))`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:169:5\n+  --> $DIR/manual_map_option.rs:168:5\n    |\n LL | /     match Some(0) {\n LL | |         Some(x) => Some(vec![x]),\n@@ -164,7 +164,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(0).map(|x| vec![x])`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:174:5\n+  --> $DIR/manual_map_option.rs:173:5\n    |\n LL | /     match option_env!(\"\") {\n LL | |         Some(x) => Some(String::from(x)),\n@@ -173,7 +173,7 @@ LL | |     };\n    | |_____^ help: try this: `option_env!(\"\").map(String::from)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:194:12\n+  --> $DIR/manual_map_option.rs:193:12\n    |\n LL |       } else if let Some(x) = Some(0) {\n    |  ____________^\n@@ -184,7 +184,7 @@ LL | |     };\n    | |_____^ help: try this: `{ Some(0).map(|x| x + 1) }`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:202:12\n+  --> $DIR/manual_map_option.rs:201:12\n    |\n LL |       } else if let Some(x) = Some(0) {\n    |  ____________^"}, {"sha": "010cb7e03015e90d099bf11a3fa78cc6f571c9b4", "filename": "tests/ui/match_wild_err_arm.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmatch_wild_err_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmatch_wild_err_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_wild_err_arm.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,10 +1,12 @@\n+//edition:2015\n+//FIXME: The lint only triggers once on edition 2021, so I'm leaving this at 2015 for now.\n+\n #![feature(exclusive_range_pattern)]\n #![allow(clippy::match_same_arms)]\n #![warn(clippy::match_wild_err_arm)]\n \n fn match_wild_err_arm() {\n     let x: Result<i32, &str> = Ok(3);\n-\n     match x {\n         Ok(3) => println!(\"ok\"),\n         Ok(_) => println!(\"ok\"),"}, {"sha": "d5ec722d5691b7e0c7df5d979323b8201c6c1817", "filename": "tests/ui/match_wild_err_arm.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmatch_wild_err_arm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmatch_wild_err_arm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_wild_err_arm.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,5 @@\n error: `Err(_)` matches all errors\n-  --> $DIR/match_wild_err_arm.rs:11:9\n+  --> $DIR/match_wild_err_arm.rs:13:9\n    |\n LL |         Err(_) => panic!(\"err\"),\n    |         ^^^^^^\n@@ -8,23 +8,23 @@ LL |         Err(_) => panic!(\"err\"),\n    = note: match each error separately or use the error output, or use `.except(msg)` if the error case is unreachable\n \n error: `Err(_)` matches all errors\n-  --> $DIR/match_wild_err_arm.rs:17:9\n+  --> $DIR/match_wild_err_arm.rs:19:9\n    |\n LL |         Err(_) => panic!(),\n    |         ^^^^^^\n    |\n    = note: match each error separately or use the error output, or use `.except(msg)` if the error case is unreachable\n \n error: `Err(_)` matches all errors\n-  --> $DIR/match_wild_err_arm.rs:23:9\n+  --> $DIR/match_wild_err_arm.rs:25:9\n    |\n LL |         Err(_) => {\n    |         ^^^^^^\n    |\n    = note: match each error separately or use the error output, or use `.except(msg)` if the error case is unreachable\n \n error: `Err(_e)` matches all errors\n-  --> $DIR/match_wild_err_arm.rs:31:9\n+  --> $DIR/match_wild_err_arm.rs:33:9\n    |\n LL |         Err(_e) => panic!(),\n    |         ^^^^^^^"}, {"sha": "977ce54327b3d984a4f61fca7c2967b734a3ce57", "filename": "tests/ui/methods.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,4 @@\n // aux-build:option_helpers.rs\n-// edition:2018\n \n #![warn(clippy::all, clippy::pedantic)]\n #![allow("}, {"sha": "b63672dd6fdbb546dac805e74727f9bf8982851f", "filename": "tests/ui/methods.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmethods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmethods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,5 @@\n error: methods called `new` usually return `Self`\n-  --> $DIR/methods.rs:105:5\n+  --> $DIR/methods.rs:104:5\n    |\n LL | /     fn new() -> i32 {\n LL | |         0\n@@ -9,7 +9,7 @@ LL | |     }\n    = note: `-D clippy::new-ret-no-self` implied by `-D warnings`\n \n error: called `filter(..).next()` on an `Iterator`. This is more succinctly expressed by calling `.find(..)` instead\n-  --> $DIR/methods.rs:126:13\n+  --> $DIR/methods.rs:125:13\n    |\n LL |       let _ = v.iter().filter(|&x| {\n    |  _____________^"}, {"sha": "148531c285d3d310ed9011992604cf8a5d4c4b43", "filename": "tests/ui/missing-doc.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmissing-doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmissing-doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing-doc.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -3,7 +3,6 @@\n // injected intrinsics by the compiler.\n #![allow(dead_code)]\n #![feature(global_asm)]\n-\n //! Some garbage docs for the crate here\n #![doc = \"More garbage\"]\n \n@@ -90,10 +89,10 @@ mod internal_impl {\n }\n /// dox\n pub mod public_interface {\n-    pub use internal_impl::documented as foo;\n-    pub use internal_impl::globbed::*;\n-    pub use internal_impl::undocumented1 as bar;\n-    pub use internal_impl::{documented, undocumented2};\n+    pub use crate::internal_impl::documented as foo;\n+    pub use crate::internal_impl::globbed::*;\n+    pub use crate::internal_impl::undocumented1 as bar;\n+    pub use crate::internal_impl::{documented, undocumented2};\n }\n \n fn main() {}"}, {"sha": "7a3a448c9d6c2730e407e220b73297e57e576119", "filename": "tests/ui/missing-doc.stderr", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmissing-doc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmissing-doc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing-doc.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,43 +1,43 @@\n error: missing documentation for a type alias\n-  --> $DIR/missing-doc.rs:10:1\n+  --> $DIR/missing-doc.rs:9:1\n    |\n LL | type Typedef = String;\n    | ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::missing-docs-in-private-items` implied by `-D warnings`\n \n error: missing documentation for a type alias\n-  --> $DIR/missing-doc.rs:11:1\n+  --> $DIR/missing-doc.rs:10:1\n    |\n LL | pub type PubTypedef = String;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a module\n-  --> $DIR/missing-doc.rs:13:1\n+  --> $DIR/missing-doc.rs:12:1\n    |\n LL | mod module_no_dox {}\n    | ^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a module\n-  --> $DIR/missing-doc.rs:14:1\n+  --> $DIR/missing-doc.rs:13:1\n    |\n LL | pub mod pub_module_no_dox {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing-doc.rs:18:1\n+  --> $DIR/missing-doc.rs:17:1\n    |\n LL | pub fn foo2() {}\n    | ^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing-doc.rs:19:1\n+  --> $DIR/missing-doc.rs:18:1\n    |\n LL | fn foo3() {}\n    | ^^^^^^^^^^^^\n \n error: missing documentation for an enum\n-  --> $DIR/missing-doc.rs:33:1\n+  --> $DIR/missing-doc.rs:32:1\n    |\n LL | / enum Baz {\n LL | |     BazA { a: isize, b: isize },\n@@ -46,75 +46,75 @@ LL | | }\n    | |_^\n \n error: missing documentation for a variant\n-  --> $DIR/missing-doc.rs:34:5\n+  --> $DIR/missing-doc.rs:33:5\n    |\n LL |     BazA { a: isize, b: isize },\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a struct field\n-  --> $DIR/missing-doc.rs:34:12\n+  --> $DIR/missing-doc.rs:33:12\n    |\n LL |     BazA { a: isize, b: isize },\n    |            ^^^^^^^^\n \n error: missing documentation for a struct field\n-  --> $DIR/missing-doc.rs:34:22\n+  --> $DIR/missing-doc.rs:33:22\n    |\n LL |     BazA { a: isize, b: isize },\n    |                      ^^^^^^^^\n \n error: missing documentation for a variant\n-  --> $DIR/missing-doc.rs:35:5\n+  --> $DIR/missing-doc.rs:34:5\n    |\n LL |     BarB,\n    |     ^^^^\n \n error: missing documentation for an enum\n-  --> $DIR/missing-doc.rs:38:1\n+  --> $DIR/missing-doc.rs:37:1\n    |\n LL | / pub enum PubBaz {\n LL | |     PubBazA { a: isize },\n LL | | }\n    | |_^\n \n error: missing documentation for a variant\n-  --> $DIR/missing-doc.rs:39:5\n+  --> $DIR/missing-doc.rs:38:5\n    |\n LL |     PubBazA { a: isize },\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a struct field\n-  --> $DIR/missing-doc.rs:39:15\n+  --> $DIR/missing-doc.rs:38:15\n    |\n LL |     PubBazA { a: isize },\n    |               ^^^^^^^^\n \n error: missing documentation for a constant\n-  --> $DIR/missing-doc.rs:59:1\n+  --> $DIR/missing-doc.rs:58:1\n    |\n LL | const FOO: u32 = 0;\n    | ^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a constant\n-  --> $DIR/missing-doc.rs:66:1\n+  --> $DIR/missing-doc.rs:65:1\n    |\n LL | pub const FOO4: u32 = 0;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a static\n-  --> $DIR/missing-doc.rs:68:1\n+  --> $DIR/missing-doc.rs:67:1\n    |\n LL | static BAR: u32 = 0;\n    | ^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a static\n-  --> $DIR/missing-doc.rs:75:1\n+  --> $DIR/missing-doc.rs:74:1\n    |\n LL | pub static BAR4: u32 = 0;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a module\n-  --> $DIR/missing-doc.rs:77:1\n+  --> $DIR/missing-doc.rs:76:1\n    |\n LL | / mod internal_impl {\n LL | |     /// dox\n@@ -126,31 +126,31 @@ LL | | }\n    | |_^\n \n error: missing documentation for a function\n-  --> $DIR/missing-doc.rs:80:5\n+  --> $DIR/missing-doc.rs:79:5\n    |\n LL |     pub fn undocumented1() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing-doc.rs:81:5\n+  --> $DIR/missing-doc.rs:80:5\n    |\n LL |     pub fn undocumented2() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing-doc.rs:82:5\n+  --> $DIR/missing-doc.rs:81:5\n    |\n LL |     fn undocumented3() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing-doc.rs:87:9\n+  --> $DIR/missing-doc.rs:86:9\n    |\n LL |         pub fn also_undocumented1() {}\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing-doc.rs:88:9\n+  --> $DIR/missing-doc.rs:87:9\n    |\n LL |         fn also_undocumented2() {}\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "7dc44529206d551a423dbfea3762038b3b610074", "filename": "tests/ui/missing_panics_doc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmissing_panics_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmissing_panics_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_panics_doc.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,6 +1,5 @@\n #![warn(clippy::missing_panics_doc)]\n #![allow(clippy::option_map_unit_fn)]\n-\n fn main() {}\n \n /// This needs to be documented"}, {"sha": "60282939ef0334008f00c7d78ea12693c2b22595", "filename": "tests/ui/missing_panics_doc.stderr", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmissing_panics_doc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fmissing_panics_doc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_panics_doc.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,5 @@\n error: docs for function which may panic missing `# Panics` section\n-  --> $DIR/missing_panics_doc.rs:7:1\n+  --> $DIR/missing_panics_doc.rs:6:1\n    |\n LL | / pub fn unwrap() {\n LL | |     let result = Err(\"Hi\");\n@@ -9,43 +9,43 @@ LL | | }\n    |\n    = note: `-D clippy::missing-panics-doc` implied by `-D warnings`\n note: first possible panic found here\n-  --> $DIR/missing_panics_doc.rs:9:5\n+  --> $DIR/missing_panics_doc.rs:8:5\n    |\n LL |     result.unwrap()\n    |     ^^^^^^^^^^^^^^^\n \n error: docs for function which may panic missing `# Panics` section\n-  --> $DIR/missing_panics_doc.rs:13:1\n+  --> $DIR/missing_panics_doc.rs:12:1\n    |\n LL | / pub fn panic() {\n LL | |     panic!(\"This function panics\")\n LL | | }\n    | |_^\n    |\n note: first possible panic found here\n-  --> $DIR/missing_panics_doc.rs:14:5\n+  --> $DIR/missing_panics_doc.rs:13:5\n    |\n LL |     panic!(\"This function panics\")\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)\n+   = note: this error originates in the macro `$crate::panic::panic_2021` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: docs for function which may panic missing `# Panics` section\n-  --> $DIR/missing_panics_doc.rs:18:1\n+  --> $DIR/missing_panics_doc.rs:17:1\n    |\n LL | / pub fn todo() {\n LL | |     todo!()\n LL | | }\n    | |_^\n    |\n note: first possible panic found here\n-  --> $DIR/missing_panics_doc.rs:19:5\n+  --> $DIR/missing_panics_doc.rs:18:5\n    |\n LL |     todo!()\n    |     ^^^^^^^\n    = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: docs for function which may panic missing `# Panics` section\n-  --> $DIR/missing_panics_doc.rs:23:1\n+  --> $DIR/missing_panics_doc.rs:22:1\n    |\n LL | / pub fn inner_body(opt: Option<u32>) {\n LL | |     opt.map(|x| {\n@@ -57,29 +57,29 @@ LL | | }\n    | |_^\n    |\n note: first possible panic found here\n-  --> $DIR/missing_panics_doc.rs:26:13\n+  --> $DIR/missing_panics_doc.rs:25:13\n    |\n LL |             panic!()\n    |             ^^^^^^^^\n-   = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)\n+   = note: this error originates in the macro `$crate::panic::panic_2021` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: docs for function which may panic missing `# Panics` section\n-  --> $DIR/missing_panics_doc.rs:32:1\n+  --> $DIR/missing_panics_doc.rs:31:1\n    |\n LL | / pub fn unreachable_and_panic() {\n LL | |     if true { unreachable!() } else { panic!() }\n LL | | }\n    | |_^\n    |\n note: first possible panic found here\n-  --> $DIR/missing_panics_doc.rs:33:39\n+  --> $DIR/missing_panics_doc.rs:32:39\n    |\n LL |     if true { unreachable!() } else { panic!() }\n    |                                       ^^^^^^^^\n-   = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)\n+   = note: this error originates in the macro `$crate::panic::panic_2021` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: docs for function which may panic missing `# Panics` section\n-  --> $DIR/missing_panics_doc.rs:37:1\n+  --> $DIR/missing_panics_doc.rs:36:1\n    |\n LL | / pub fn assert_eq() {\n LL | |     let x = 0;\n@@ -88,14 +88,14 @@ LL | | }\n    | |_^\n    |\n note: first possible panic found here\n-  --> $DIR/missing_panics_doc.rs:39:5\n+  --> $DIR/missing_panics_doc.rs:38:5\n    |\n LL |     assert_eq!(x, 0);\n    |     ^^^^^^^^^^^^^^^^\n    = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: docs for function which may panic missing `# Panics` section\n-  --> $DIR/missing_panics_doc.rs:43:1\n+  --> $DIR/missing_panics_doc.rs:42:1\n    |\n LL | / pub fn assert_ne() {\n LL | |     let x = 0;\n@@ -104,7 +104,7 @@ LL | | }\n    | |_^\n    |\n note: first possible panic found here\n-  --> $DIR/missing_panics_doc.rs:45:5\n+  --> $DIR/missing_panics_doc.rs:44:5\n    |\n LL |     assert_ne!(x, 0);\n    |     ^^^^^^^^^^^^^^^^"}, {"sha": "04b6283da3c3b88d8a5b16c44edfd5d53133dbe6", "filename": "tests/ui/needless_borrow_pat.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fneedless_borrow_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fneedless_borrow_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow_pat.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// edition:2018\n // FIXME: run-rustfix waiting on multi-span suggestions\n \n #![warn(clippy::needless_borrow)]"}, {"sha": "db3b52b8850e1cfd252e3eda54933f1abe4f8b60", "filename": "tests/ui/needless_borrow_pat.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fneedless_borrow_pat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fneedless_borrow_pat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow_pat.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,13 +1,13 @@\n error: this pattern creates a reference to a reference\n-  --> $DIR/needless_borrow_pat.rs:60:14\n+  --> $DIR/needless_borrow_pat.rs:59:14\n    |\n LL |         Some(ref x) => x,\n    |              ^^^^^ help: try this: `x`\n    |\n    = note: `-D clippy::needless-borrow` implied by `-D warnings`\n \n error: this pattern creates a reference to a reference\n-  --> $DIR/needless_borrow_pat.rs:66:14\n+  --> $DIR/needless_borrow_pat.rs:65:14\n    |\n LL |         Some(ref x) => *x,\n    |              ^^^^^\n@@ -18,7 +18,7 @@ LL |         Some(x) => x,\n    |              ~     ~\n \n error: this pattern creates a reference to a reference\n-  --> $DIR/needless_borrow_pat.rs:72:14\n+  --> $DIR/needless_borrow_pat.rs:71:14\n    |\n LL |         Some(ref x) => {\n    |              ^^^^^\n@@ -31,19 +31,19 @@ LL ~             f1(x);\n    |\n \n error: this pattern creates a reference to a reference\n-  --> $DIR/needless_borrow_pat.rs:82:14\n+  --> $DIR/needless_borrow_pat.rs:81:14\n    |\n LL |         Some(ref x) => m1!(x),\n    |              ^^^^^ help: try this: `x`\n \n error: this pattern creates a reference to a reference\n-  --> $DIR/needless_borrow_pat.rs:87:15\n+  --> $DIR/needless_borrow_pat.rs:86:15\n    |\n LL |     let _ = |&ref x: &&String| {\n    |               ^^^^^ help: try this: `x`\n \n error: this pattern creates a reference to a reference\n-  --> $DIR/needless_borrow_pat.rs:92:10\n+  --> $DIR/needless_borrow_pat.rs:91:10\n    |\n LL |     let (ref y,) = (&x,);\n    |          ^^^^^\n@@ -55,13 +55,13 @@ LL ~     let _: &String = y;\n    |\n \n error: this pattern creates a reference to a reference\n-  --> $DIR/needless_borrow_pat.rs:102:14\n+  --> $DIR/needless_borrow_pat.rs:101:14\n    |\n LL |         Some(ref x) => x.0,\n    |              ^^^^^ help: try this: `x`\n \n error: this pattern creates a reference to a reference\n-  --> $DIR/needless_borrow_pat.rs:112:14\n+  --> $DIR/needless_borrow_pat.rs:111:14\n    |\n LL |         E::A(ref x) | E::B(ref x) => *x,\n    |              ^^^^^         ^^^^^\n@@ -72,13 +72,13 @@ LL |         E::A(x) | E::B(x) => x,\n    |              ~         ~     ~\n \n error: this pattern creates a reference to a reference\n-  --> $DIR/needless_borrow_pat.rs:118:21\n+  --> $DIR/needless_borrow_pat.rs:117:21\n    |\n LL |         if let Some(ref x) = Some(&String::new());\n    |                     ^^^^^ help: try this: `x`\n \n error: this pattern creates a reference to a reference\n-  --> $DIR/needless_borrow_pat.rs:126:12\n+  --> $DIR/needless_borrow_pat.rs:125:12\n    |\n LL | fn f2<'a>(&ref x: &&'a String) -> &'a String {\n    |            ^^^^^\n@@ -91,13 +91,13 @@ LL ~     x\n    |\n \n error: this pattern creates a reference to a reference\n-  --> $DIR/needless_borrow_pat.rs:133:11\n+  --> $DIR/needless_borrow_pat.rs:132:11\n    |\n LL |     fn f(&ref x: &&String) {\n    |           ^^^^^ help: try this: `x`\n \n error: this pattern creates a reference to a reference\n-  --> $DIR/needless_borrow_pat.rs:141:11\n+  --> $DIR/needless_borrow_pat.rs:140:11\n    |\n LL |     fn f(&ref x: &&String) {\n    |           ^^^^^"}, {"sha": "812ce7163cd50ab215cd7130493b1e816d71ccf4", "filename": "tests/ui/needless_return.fixed", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fneedless_return.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fneedless_return.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.fixed?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,4 @@\n // run-rustfix\n-// edition:2018\n \n #![feature(let_else)]\n #![allow(unused)]"}, {"sha": "c42567b517c9115819b3446d5c5281c0da273884", "filename": "tests/ui/needless_return.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fneedless_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fneedless_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,4 @@\n // run-rustfix\n-// edition:2018\n \n #![feature(let_else)]\n #![allow(unused)]"}, {"sha": "74dda971fdabb632633f4a125ba15d6e2d5ad1a3", "filename": "tests/ui/needless_return.stderr", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fneedless_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fneedless_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,193 +1,193 @@\n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:25:5\n+  --> $DIR/needless_return.rs:24:5\n    |\n LL |     return true;\n    |     ^^^^^^^^^^^^ help: remove `return`: `true`\n    |\n    = note: `-D clippy::needless-return` implied by `-D warnings`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:29:5\n+  --> $DIR/needless_return.rs:28:5\n    |\n LL |     return true;\n    |     ^^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:34:9\n+  --> $DIR/needless_return.rs:33:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:36:9\n+  --> $DIR/needless_return.rs:35:9\n    |\n LL |         return false;\n    |         ^^^^^^^^^^^^^ help: remove `return`: `false`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:42:17\n+  --> $DIR/needless_return.rs:41:17\n    |\n LL |         true => return false,\n    |                 ^^^^^^^^^^^^ help: remove `return`: `false`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:44:13\n+  --> $DIR/needless_return.rs:43:13\n    |\n LL |             return true;\n    |             ^^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:51:9\n+  --> $DIR/needless_return.rs:50:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:53:16\n+  --> $DIR/needless_return.rs:52:16\n    |\n LL |     let _ = || return true;\n    |                ^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:61:5\n+  --> $DIR/needless_return.rs:60:5\n    |\n LL |     return;\n    |     ^^^^^^^ help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:66:9\n+  --> $DIR/needless_return.rs:65:9\n    |\n LL |         return;\n    |         ^^^^^^^ help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:68:9\n+  --> $DIR/needless_return.rs:67:9\n    |\n LL |         return;\n    |         ^^^^^^^ help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:75:14\n+  --> $DIR/needless_return.rs:74:14\n    |\n LL |         _ => return,\n    |              ^^^^^^ help: replace `return` with an empty block: `{}`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:90:9\n+  --> $DIR/needless_return.rs:89:9\n    |\n LL |         return String::from(\"test\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `String::from(\"test\")`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:92:9\n+  --> $DIR/needless_return.rs:91:9\n    |\n LL |         return String::new();\n    |         ^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `String::new()`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:113:32\n+  --> $DIR/needless_return.rs:112:32\n    |\n LL |         bar.unwrap_or_else(|_| return)\n    |                                ^^^^^^ help: replace `return` with an empty block: `{}`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:118:13\n+  --> $DIR/needless_return.rs:117:13\n    |\n LL |             return;\n    |             ^^^^^^^ help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:120:20\n+  --> $DIR/needless_return.rs:119:20\n    |\n LL |         let _ = || return;\n    |                    ^^^^^^ help: replace `return` with an empty block: `{}`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:126:32\n+  --> $DIR/needless_return.rs:125:32\n    |\n LL |         res.unwrap_or_else(|_| return Foo)\n    |                                ^^^^^^^^^^ help: remove `return`: `Foo`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:135:5\n+  --> $DIR/needless_return.rs:134:5\n    |\n LL |     return true;\n    |     ^^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:139:5\n+  --> $DIR/needless_return.rs:138:5\n    |\n LL |     return true;\n    |     ^^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:144:9\n+  --> $DIR/needless_return.rs:143:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:146:9\n+  --> $DIR/needless_return.rs:145:9\n    |\n LL |         return false;\n    |         ^^^^^^^^^^^^^ help: remove `return`: `false`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:152:17\n+  --> $DIR/needless_return.rs:151:17\n    |\n LL |         true => return false,\n    |                 ^^^^^^^^^^^^ help: remove `return`: `false`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:154:13\n+  --> $DIR/needless_return.rs:153:13\n    |\n LL |             return true;\n    |             ^^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:161:9\n+  --> $DIR/needless_return.rs:160:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:163:16\n+  --> $DIR/needless_return.rs:162:16\n    |\n LL |     let _ = || return true;\n    |                ^^^^^^^^^^^ help: remove `return`: `true`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:171:5\n+  --> $DIR/needless_return.rs:170:5\n    |\n LL |     return;\n    |     ^^^^^^^ help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:176:9\n+  --> $DIR/needless_return.rs:175:9\n    |\n LL |         return;\n    |         ^^^^^^^ help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:178:9\n+  --> $DIR/needless_return.rs:177:9\n    |\n LL |         return;\n    |         ^^^^^^^ help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:185:14\n+  --> $DIR/needless_return.rs:184:14\n    |\n LL |         _ => return,\n    |              ^^^^^^ help: replace `return` with an empty block: `{}`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:200:9\n+  --> $DIR/needless_return.rs:199:9\n    |\n LL |         return String::from(\"test\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `String::from(\"test\")`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:202:9\n+  --> $DIR/needless_return.rs:201:9\n    |\n LL |         return String::new();\n    |         ^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `String::new()`"}, {"sha": "961f6f409ddd2202916bfe14c17111d208359592", "filename": "tests/ui/non_expressive_names.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnon_expressive_names.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -15,8 +15,8 @@ struct InstSplit {\n impl MaybeInst {\n     fn fill(&mut self) {\n         let filled = match *self {\n-            MaybeInst::Split1(goto1) => panic!(1),\n-            MaybeInst::Split2(goto2) => panic!(2),\n+            MaybeInst::Split1(goto1) => panic!(\"1\"),\n+            MaybeInst::Split2(goto2) => panic!(\"2\"),\n             _ => unimplemented!(),\n         };\n         unimplemented!()"}, {"sha": "9cb6a9d1ecc9bc9e91c0cf071c748ab45a962711", "filename": "tests/ui/option_if_let_else.fixed", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Foption_if_let_else.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Foption_if_let_else.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_if_let_else.fixed?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// edition:2018\n // run-rustfix\n #![warn(clippy::option_if_let_else)]\n #![allow(clippy::redundant_closure, clippy::ref_option_ref, clippy::equatable_if_let)]"}, {"sha": "b3ba5eb870a693e65053cf50bbc1c914520fbe4a", "filename": "tests/ui/option_if_let_else.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Foption_if_let_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Foption_if_let_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_if_let_else.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// edition:2018\n // run-rustfix\n #![warn(clippy::option_if_let_else)]\n #![allow(clippy::redundant_closure, clippy::ref_option_ref, clippy::equatable_if_let)]"}, {"sha": "685bb48ea37bc05baf1945d6a66b7c12f69c0934", "filename": "tests/ui/option_if_let_else.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Foption_if_let_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Foption_if_let_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_if_let_else.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,5 @@\n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:7:5\n+  --> $DIR/option_if_let_else.rs:6:5\n    |\n LL | /     if let Some(x) = string {\n LL | |         (true, x)\n@@ -11,19 +11,19 @@ LL | |     }\n    = note: `-D clippy::option-if-let-else` implied by `-D warnings`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:25:13\n+  --> $DIR/option_if_let_else.rs:24:13\n    |\n LL |     let _ = if let Some(s) = *string { s.len() } else { 0 };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `string.map_or(0, |s| s.len())`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:26:13\n+  --> $DIR/option_if_let_else.rs:25:13\n    |\n LL |     let _ = if let Some(s) = &num { s } else { &0 };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `num.as_ref().map_or(&0, |s| s)`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:27:13\n+  --> $DIR/option_if_let_else.rs:26:13\n    |\n LL |       let _ = if let Some(s) = &mut num {\n    |  _____________^\n@@ -43,13 +43,13 @@ LL ~     });\n    |\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:33:13\n+  --> $DIR/option_if_let_else.rs:32:13\n    |\n LL |     let _ = if let Some(ref s) = num { s } else { &0 };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `num.as_ref().map_or(&0, |s| s)`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:34:13\n+  --> $DIR/option_if_let_else.rs:33:13\n    |\n LL |       let _ = if let Some(mut s) = num {\n    |  _____________^\n@@ -69,7 +69,7 @@ LL ~     });\n    |\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:40:13\n+  --> $DIR/option_if_let_else.rs:39:13\n    |\n LL |       let _ = if let Some(ref mut s) = num {\n    |  _____________^\n@@ -89,7 +89,7 @@ LL ~     });\n    |\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:49:5\n+  --> $DIR/option_if_let_else.rs:48:5\n    |\n LL | /     if let Some(x) = arg {\n LL | |         let y = x * x;\n@@ -108,7 +108,7 @@ LL +     })\n    |\n \n error: use Option::map_or_else instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:62:13\n+  --> $DIR/option_if_let_else.rs:61:13\n    |\n LL |       let _ = if let Some(x) = arg {\n    |  _____________^\n@@ -120,7 +120,7 @@ LL | |     };\n    | |_____^ help: try: `arg.map_or_else(|| side_effect(), |x| x)`\n \n error: use Option::map_or_else instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:71:13\n+  --> $DIR/option_if_let_else.rs:70:13\n    |\n LL |       let _ = if let Some(x) = arg {\n    |  _____________^\n@@ -143,13 +143,13 @@ LL ~     }, |x| x * x * x * x);\n    |\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:100:13\n+  --> $DIR/option_if_let_else.rs:99:13\n    |\n LL |     let _ = if let Some(x) = optional { x + 2 } else { 5 };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `optional.map_or(5, |x| x + 2)`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:109:13\n+  --> $DIR/option_if_let_else.rs:108:13\n    |\n LL |       let _ = if let Some(x) = Some(0) {\n    |  _____________^\n@@ -171,13 +171,13 @@ LL ~         });\n    |\n \n error: use Option::map_or_else instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:137:13\n+  --> $DIR/option_if_let_else.rs:136:13\n    |\n LL |     let _ = if let Some(x) = Some(0) { s.len() + x } else { s.len() };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Some(0).map_or_else(|| s.len(), |x| s.len() + x)`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:141:13\n+  --> $DIR/option_if_let_else.rs:140:13\n    |\n LL |       let _ = if let Some(x) = Some(0) {\n    |  _____________^"}, {"sha": "e75eb1b6eadd85ca225d830e3cb8ffe96bf584fa", "filename": "tests/ui/panic_in_result_fn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fpanic_in_result_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fpanic_in_result_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanic_in_result_fn.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,6 +1,5 @@\n #![warn(clippy::panic_in_result_fn)]\n #![allow(clippy::unnecessary_wraps)]\n-\n struct A;\n \n impl A {"}, {"sha": "78d09b8b2108a134b0c91a4c37e5bbd238de6387", "filename": "tests/ui/panic_in_result_fn.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fpanic_in_result_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fpanic_in_result_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanic_in_result_fn.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,5 @@\n error: used `unimplemented!()`, `unreachable!()`, `todo!()`, `panic!()` or assertion in a function that returns `Result`\n-  --> $DIR/panic_in_result_fn.rs:7:5\n+  --> $DIR/panic_in_result_fn.rs:6:5\n    |\n LL | /     fn result_with_panic() -> Result<bool, String> // should emit lint\n LL | |     {\n@@ -10,14 +10,14 @@ LL | |     }\n    = note: `-D clippy::panic-in-result-fn` implied by `-D warnings`\n    = help: `unimplemented!()`, `unreachable!()`, `todo!()`, `panic!()` or assertions should not be used in a function that returns `Result` as `Result` is expected to return an error instead of crashing\n note: return Err() instead of panicking\n-  --> $DIR/panic_in_result_fn.rs:9:9\n+  --> $DIR/panic_in_result_fn.rs:8:9\n    |\n LL |         panic!(\"error\");\n    |         ^^^^^^^^^^^^^^^\n-   = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)\n+   = note: this error originates in the macro `$crate::panic::panic_2021` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: used `unimplemented!()`, `unreachable!()`, `todo!()`, `panic!()` or assertion in a function that returns `Result`\n-  --> $DIR/panic_in_result_fn.rs:12:5\n+  --> $DIR/panic_in_result_fn.rs:11:5\n    |\n LL | /     fn result_with_unimplemented() -> Result<bool, String> // should emit lint\n LL | |     {\n@@ -27,14 +27,14 @@ LL | |     }\n    |\n    = help: `unimplemented!()`, `unreachable!()`, `todo!()`, `panic!()` or assertions should not be used in a function that returns `Result` as `Result` is expected to return an error instead of crashing\n note: return Err() instead of panicking\n-  --> $DIR/panic_in_result_fn.rs:14:9\n+  --> $DIR/panic_in_result_fn.rs:13:9\n    |\n LL |         unimplemented!();\n    |         ^^^^^^^^^^^^^^^^\n    = note: this error originates in the macro `unimplemented` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: used `unimplemented!()`, `unreachable!()`, `todo!()`, `panic!()` or assertion in a function that returns `Result`\n-  --> $DIR/panic_in_result_fn.rs:17:5\n+  --> $DIR/panic_in_result_fn.rs:16:5\n    |\n LL | /     fn result_with_unreachable() -> Result<bool, String> // should emit lint\n LL | |     {\n@@ -44,14 +44,14 @@ LL | |     }\n    |\n    = help: `unimplemented!()`, `unreachable!()`, `todo!()`, `panic!()` or assertions should not be used in a function that returns `Result` as `Result` is expected to return an error instead of crashing\n note: return Err() instead of panicking\n-  --> $DIR/panic_in_result_fn.rs:19:9\n+  --> $DIR/panic_in_result_fn.rs:18:9\n    |\n LL |         unreachable!();\n    |         ^^^^^^^^^^^^^^\n    = note: this error originates in the macro `unreachable` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: used `unimplemented!()`, `unreachable!()`, `todo!()`, `panic!()` or assertion in a function that returns `Result`\n-  --> $DIR/panic_in_result_fn.rs:22:5\n+  --> $DIR/panic_in_result_fn.rs:21:5\n    |\n LL | /     fn result_with_todo() -> Result<bool, String> // should emit lint\n LL | |     {\n@@ -61,14 +61,14 @@ LL | |     }\n    |\n    = help: `unimplemented!()`, `unreachable!()`, `todo!()`, `panic!()` or assertions should not be used in a function that returns `Result` as `Result` is expected to return an error instead of crashing\n note: return Err() instead of panicking\n-  --> $DIR/panic_in_result_fn.rs:24:9\n+  --> $DIR/panic_in_result_fn.rs:23:9\n    |\n LL |         todo!(\"Finish this\");\n    |         ^^^^^^^^^^^^^^^^^^^^\n    = note: this error originates in the macro `todo` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: used `unimplemented!()`, `unreachable!()`, `todo!()`, `panic!()` or assertion in a function that returns `Result`\n-  --> $DIR/panic_in_result_fn.rs:53:1\n+  --> $DIR/panic_in_result_fn.rs:52:1\n    |\n LL | / fn function_result_with_panic() -> Result<bool, String> // should emit lint\n LL | | {\n@@ -78,14 +78,14 @@ LL | | }\n    |\n    = help: `unimplemented!()`, `unreachable!()`, `todo!()`, `panic!()` or assertions should not be used in a function that returns `Result` as `Result` is expected to return an error instead of crashing\n note: return Err() instead of panicking\n-  --> $DIR/panic_in_result_fn.rs:55:5\n+  --> $DIR/panic_in_result_fn.rs:54:5\n    |\n LL |     panic!(\"error\");\n    |     ^^^^^^^^^^^^^^^\n-   = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)\n+   = note: this error originates in the macro `$crate::panic::panic_2021` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: used `unimplemented!()`, `unreachable!()`, `todo!()`, `panic!()` or assertion in a function that returns `Result`\n-  --> $DIR/panic_in_result_fn.rs:68:1\n+  --> $DIR/panic_in_result_fn.rs:67:1\n    |\n LL | / fn main() -> Result<(), String> {\n LL | |     todo!(\"finish main method\");\n@@ -95,7 +95,7 @@ LL | | }\n    |\n    = help: `unimplemented!()`, `unreachable!()`, `todo!()`, `panic!()` or assertions should not be used in a function that returns `Result` as `Result` is expected to return an error instead of crashing\n note: return Err() instead of panicking\n-  --> $DIR/panic_in_result_fn.rs:69:5\n+  --> $DIR/panic_in_result_fn.rs:68:5\n    |\n LL |     todo!(\"finish main method\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "16b40dcd902869d7184cb1d6b384139166d04380", "filename": "tests/ui/redundant_clone.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fredundant_clone.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fredundant_clone.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_clone.fixed?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -196,7 +196,7 @@ fn clone_then_move_cloned() {\n     fn foo<F: Fn()>(_: &Alpha, _: F) {}\n     let x = Alpha;\n     // ok, data is moved while the clone is in use.\n-    foo(&x.clone(), move || {\n+    foo(&x, move || {\n         let _ = x;\n     });\n "}, {"sha": "9f59017b26199cad1ae2acb9fe1b96c8048ac363", "filename": "tests/ui/redundant_clone.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fredundant_clone.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fredundant_clone.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_clone.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -167,5 +167,17 @@ note: cloned value is neither consumed nor mutated\n LL |     let y = x.clone().join(\"matthias\");\n    |             ^^^^^^^^^\n \n-error: aborting due to 14 previous errors\n+error: redundant clone\n+  --> $DIR/redundant_clone.rs:199:11\n+   |\n+LL |     foo(&x.clone(), move || {\n+   |           ^^^^^^^^ help: remove this\n+   |\n+note: this value is dropped without further use\n+  --> $DIR/redundant_clone.rs:199:10\n+   |\n+LL |     foo(&x.clone(), move || {\n+   |          ^\n+\n+error: aborting due to 15 previous errors\n "}, {"sha": "fe742a4c2f4c5acd69d1300242eb59bb0de67aa2", "filename": "tests/ui/ref_binding_to_reference.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fref_binding_to_reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fref_binding_to_reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fref_binding_to_reference.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// edition:2018\n // FIXME: run-rustfix waiting on multi-span suggestions\n \n #![warn(clippy::ref_binding_to_reference)]"}, {"sha": "c5856e15fa987b3a4c19737019941430373606ce", "filename": "tests/ui/ref_binding_to_reference.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fref_binding_to_reference.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fref_binding_to_reference.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fref_binding_to_reference.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,5 @@\n error: this pattern creates a reference to a reference\n-  --> $DIR/ref_binding_to_reference.rs:31:14\n+  --> $DIR/ref_binding_to_reference.rs:30:14\n    |\n LL |         Some(ref x) => x,\n    |              ^^^^^\n@@ -11,7 +11,7 @@ LL |         Some(x) => &x,\n    |              ~     ~~\n \n error: this pattern creates a reference to a reference\n-  --> $DIR/ref_binding_to_reference.rs:37:14\n+  --> $DIR/ref_binding_to_reference.rs:36:14\n    |\n LL |         Some(ref x) => {\n    |              ^^^^^\n@@ -25,7 +25,7 @@ LL ~             &x\n    |\n \n error: this pattern creates a reference to a reference\n-  --> $DIR/ref_binding_to_reference.rs:47:14\n+  --> $DIR/ref_binding_to_reference.rs:46:14\n    |\n LL |         Some(ref x) => m2!(x),\n    |              ^^^^^\n@@ -36,7 +36,7 @@ LL |         Some(x) => m2!(&x),\n    |              ~         ~~\n \n error: this pattern creates a reference to a reference\n-  --> $DIR/ref_binding_to_reference.rs:52:15\n+  --> $DIR/ref_binding_to_reference.rs:51:15\n    |\n LL |     let _ = |&ref x: &&String| {\n    |               ^^^^^\n@@ -48,7 +48,7 @@ LL ~         let _: &&String = &x;\n    |\n \n error: this pattern creates a reference to a reference\n-  --> $DIR/ref_binding_to_reference.rs:58:12\n+  --> $DIR/ref_binding_to_reference.rs:57:12\n    |\n LL | fn f2<'a>(&ref x: &&'a String) -> &'a String {\n    |            ^^^^^\n@@ -61,7 +61,7 @@ LL ~     x\n    |\n \n error: this pattern creates a reference to a reference\n-  --> $DIR/ref_binding_to_reference.rs:65:11\n+  --> $DIR/ref_binding_to_reference.rs:64:11\n    |\n LL |     fn f(&ref x: &&String) {\n    |           ^^^^^\n@@ -73,7 +73,7 @@ LL ~         let _: &&String = &x;\n    |\n \n error: this pattern creates a reference to a reference\n-  --> $DIR/ref_binding_to_reference.rs:73:11\n+  --> $DIR/ref_binding_to_reference.rs:72:11\n    |\n LL |     fn f(&ref x: &&String) {\n    |           ^^^^^"}, {"sha": "d7e8d02bd1998fbab6b24867d1ec325556a6e72f", "filename": "tests/ui/should_impl_trait/corner_cases.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fshould_impl_trait%2Fcorner_cases.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fshould_impl_trait%2Fcorner_cases.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshould_impl_trait%2Fcorner_cases.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,3 @@\n-// edition:2018\n-\n #![warn(clippy::all, clippy::pedantic)]\n #![allow(\n     clippy::missing_errors_doc,"}, {"sha": "ea962f943173aed4359f392e9ee99de13e9b8ec4", "filename": "tests/ui/should_impl_trait/method_list_1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fshould_impl_trait%2Fmethod_list_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fshould_impl_trait%2Fmethod_list_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshould_impl_trait%2Fmethod_list_1.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,3 @@\n-// edition:2018\n-\n #![warn(clippy::all, clippy::pedantic)]\n #![allow(\n     clippy::missing_errors_doc,"}, {"sha": "bf8b47d5626d283095c5df5db7ed86cccc2ffb40", "filename": "tests/ui/should_impl_trait/method_list_1.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fshould_impl_trait%2Fmethod_list_1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fshould_impl_trait%2Fmethod_list_1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshould_impl_trait%2Fmethod_list_1.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,5 @@\n error: method `add` can be confused for the standard trait method `std::ops::Add::add`\n-  --> $DIR/method_list_1.rs:26:5\n+  --> $DIR/method_list_1.rs:24:5\n    |\n LL | /     pub fn add(self, other: T) -> T {\n LL | |         unimplemented!()\n@@ -10,7 +10,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::Add` or choosing a less ambiguous method name\n \n error: method `as_mut` can be confused for the standard trait method `std::convert::AsMut::as_mut`\n-  --> $DIR/method_list_1.rs:30:5\n+  --> $DIR/method_list_1.rs:28:5\n    |\n LL | /     pub fn as_mut(&mut self) -> &mut T {\n LL | |         unimplemented!()\n@@ -20,7 +20,7 @@ LL | |     }\n    = help: consider implementing the trait `std::convert::AsMut` or choosing a less ambiguous method name\n \n error: method `as_ref` can be confused for the standard trait method `std::convert::AsRef::as_ref`\n-  --> $DIR/method_list_1.rs:34:5\n+  --> $DIR/method_list_1.rs:32:5\n    |\n LL | /     pub fn as_ref(&self) -> &T {\n LL | |         unimplemented!()\n@@ -30,7 +30,7 @@ LL | |     }\n    = help: consider implementing the trait `std::convert::AsRef` or choosing a less ambiguous method name\n \n error: method `bitand` can be confused for the standard trait method `std::ops::BitAnd::bitand`\n-  --> $DIR/method_list_1.rs:38:5\n+  --> $DIR/method_list_1.rs:36:5\n    |\n LL | /     pub fn bitand(self, rhs: T) -> T {\n LL | |         unimplemented!()\n@@ -40,7 +40,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::BitAnd` or choosing a less ambiguous method name\n \n error: method `bitor` can be confused for the standard trait method `std::ops::BitOr::bitor`\n-  --> $DIR/method_list_1.rs:42:5\n+  --> $DIR/method_list_1.rs:40:5\n    |\n LL | /     pub fn bitor(self, rhs: Self) -> Self {\n LL | |         unimplemented!()\n@@ -50,7 +50,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::BitOr` or choosing a less ambiguous method name\n \n error: method `bitxor` can be confused for the standard trait method `std::ops::BitXor::bitxor`\n-  --> $DIR/method_list_1.rs:46:5\n+  --> $DIR/method_list_1.rs:44:5\n    |\n LL | /     pub fn bitxor(self, rhs: Self) -> Self {\n LL | |         unimplemented!()\n@@ -60,7 +60,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::BitXor` or choosing a less ambiguous method name\n \n error: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n-  --> $DIR/method_list_1.rs:50:5\n+  --> $DIR/method_list_1.rs:48:5\n    |\n LL | /     pub fn borrow(&self) -> &str {\n LL | |         unimplemented!()\n@@ -70,7 +70,7 @@ LL | |     }\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n \n error: method `borrow_mut` can be confused for the standard trait method `std::borrow::BorrowMut::borrow_mut`\n-  --> $DIR/method_list_1.rs:54:5\n+  --> $DIR/method_list_1.rs:52:5\n    |\n LL | /     pub fn borrow_mut(&mut self) -> &mut str {\n LL | |         unimplemented!()\n@@ -80,7 +80,7 @@ LL | |     }\n    = help: consider implementing the trait `std::borrow::BorrowMut` or choosing a less ambiguous method name\n \n error: method `clone` can be confused for the standard trait method `std::clone::Clone::clone`\n-  --> $DIR/method_list_1.rs:58:5\n+  --> $DIR/method_list_1.rs:56:5\n    |\n LL | /     pub fn clone(&self) -> Self {\n LL | |         unimplemented!()\n@@ -90,7 +90,7 @@ LL | |     }\n    = help: consider implementing the trait `std::clone::Clone` or choosing a less ambiguous method name\n \n error: method `cmp` can be confused for the standard trait method `std::cmp::Ord::cmp`\n-  --> $DIR/method_list_1.rs:62:5\n+  --> $DIR/method_list_1.rs:60:5\n    |\n LL | /     pub fn cmp(&self, other: &Self) -> Self {\n LL | |         unimplemented!()\n@@ -100,7 +100,7 @@ LL | |     }\n    = help: consider implementing the trait `std::cmp::Ord` or choosing a less ambiguous method name\n \n error: method `deref` can be confused for the standard trait method `std::ops::Deref::deref`\n-  --> $DIR/method_list_1.rs:70:5\n+  --> $DIR/method_list_1.rs:68:5\n    |\n LL | /     pub fn deref(&self) -> &Self {\n LL | |         unimplemented!()\n@@ -110,7 +110,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::Deref` or choosing a less ambiguous method name\n \n error: method `deref_mut` can be confused for the standard trait method `std::ops::DerefMut::deref_mut`\n-  --> $DIR/method_list_1.rs:74:5\n+  --> $DIR/method_list_1.rs:72:5\n    |\n LL | /     pub fn deref_mut(&mut self) -> &mut Self {\n LL | |         unimplemented!()\n@@ -120,7 +120,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::DerefMut` or choosing a less ambiguous method name\n \n error: method `div` can be confused for the standard trait method `std::ops::Div::div`\n-  --> $DIR/method_list_1.rs:78:5\n+  --> $DIR/method_list_1.rs:76:5\n    |\n LL | /     pub fn div(self, rhs: Self) -> Self {\n LL | |         unimplemented!()\n@@ -130,7 +130,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::Div` or choosing a less ambiguous method name\n \n error: method `drop` can be confused for the standard trait method `std::ops::Drop::drop`\n-  --> $DIR/method_list_1.rs:82:5\n+  --> $DIR/method_list_1.rs:80:5\n    |\n LL | /     pub fn drop(&mut self) {\n LL | |         unimplemented!()"}, {"sha": "b663568806d218dd9e8ac3bb6d2206acad140550", "filename": "tests/ui/should_impl_trait/method_list_2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fshould_impl_trait%2Fmethod_list_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fshould_impl_trait%2Fmethod_list_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshould_impl_trait%2Fmethod_list_2.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,3 @@\n-// edition:2018\n-\n #![warn(clippy::all, clippy::pedantic)]\n #![allow(\n     clippy::missing_errors_doc,"}, {"sha": "426fe3b1adc9de12e9ba88e9f51a034407d6d007", "filename": "tests/ui/should_impl_trait/method_list_2.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fshould_impl_trait%2Fmethod_list_2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fshould_impl_trait%2Fmethod_list_2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshould_impl_trait%2Fmethod_list_2.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,5 @@\n error: method `eq` can be confused for the standard trait method `std::cmp::PartialEq::eq`\n-  --> $DIR/method_list_2.rs:27:5\n+  --> $DIR/method_list_2.rs:25:5\n    |\n LL | /     pub fn eq(&self, other: &Self) -> bool {\n LL | |         unimplemented!()\n@@ -10,7 +10,7 @@ LL | |     }\n    = help: consider implementing the trait `std::cmp::PartialEq` or choosing a less ambiguous method name\n \n error: method `from_iter` can be confused for the standard trait method `std::iter::FromIterator::from_iter`\n-  --> $DIR/method_list_2.rs:31:5\n+  --> $DIR/method_list_2.rs:29:5\n    |\n LL | /     pub fn from_iter<T>(iter: T) -> Self {\n LL | |         unimplemented!()\n@@ -20,7 +20,7 @@ LL | |     }\n    = help: consider implementing the trait `std::iter::FromIterator` or choosing a less ambiguous method name\n \n error: method `from_str` can be confused for the standard trait method `std::str::FromStr::from_str`\n-  --> $DIR/method_list_2.rs:35:5\n+  --> $DIR/method_list_2.rs:33:5\n    |\n LL | /     pub fn from_str(s: &str) -> Result<Self, Self> {\n LL | |         unimplemented!()\n@@ -30,7 +30,7 @@ LL | |     }\n    = help: consider implementing the trait `std::str::FromStr` or choosing a less ambiguous method name\n \n error: method `hash` can be confused for the standard trait method `std::hash::Hash::hash`\n-  --> $DIR/method_list_2.rs:39:5\n+  --> $DIR/method_list_2.rs:37:5\n    |\n LL | /     pub fn hash(&self, state: &mut T) {\n LL | |         unimplemented!()\n@@ -40,7 +40,7 @@ LL | |     }\n    = help: consider implementing the trait `std::hash::Hash` or choosing a less ambiguous method name\n \n error: method `index` can be confused for the standard trait method `std::ops::Index::index`\n-  --> $DIR/method_list_2.rs:43:5\n+  --> $DIR/method_list_2.rs:41:5\n    |\n LL | /     pub fn index(&self, index: usize) -> &Self {\n LL | |         unimplemented!()\n@@ -50,7 +50,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::Index` or choosing a less ambiguous method name\n \n error: method `index_mut` can be confused for the standard trait method `std::ops::IndexMut::index_mut`\n-  --> $DIR/method_list_2.rs:47:5\n+  --> $DIR/method_list_2.rs:45:5\n    |\n LL | /     pub fn index_mut(&mut self, index: usize) -> &mut Self {\n LL | |         unimplemented!()\n@@ -60,7 +60,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::IndexMut` or choosing a less ambiguous method name\n \n error: method `into_iter` can be confused for the standard trait method `std::iter::IntoIterator::into_iter`\n-  --> $DIR/method_list_2.rs:51:5\n+  --> $DIR/method_list_2.rs:49:5\n    |\n LL | /     pub fn into_iter(self) -> Self {\n LL | |         unimplemented!()\n@@ -70,7 +70,7 @@ LL | |     }\n    = help: consider implementing the trait `std::iter::IntoIterator` or choosing a less ambiguous method name\n \n error: method `mul` can be confused for the standard trait method `std::ops::Mul::mul`\n-  --> $DIR/method_list_2.rs:55:5\n+  --> $DIR/method_list_2.rs:53:5\n    |\n LL | /     pub fn mul(self, rhs: Self) -> Self {\n LL | |         unimplemented!()\n@@ -80,7 +80,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::Mul` or choosing a less ambiguous method name\n \n error: method `neg` can be confused for the standard trait method `std::ops::Neg::neg`\n-  --> $DIR/method_list_2.rs:59:5\n+  --> $DIR/method_list_2.rs:57:5\n    |\n LL | /     pub fn neg(self) -> Self {\n LL | |         unimplemented!()\n@@ -90,7 +90,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::Neg` or choosing a less ambiguous method name\n \n error: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n-  --> $DIR/method_list_2.rs:63:5\n+  --> $DIR/method_list_2.rs:61:5\n    |\n LL | /     pub fn next(&mut self) -> Option<Self> {\n LL | |         unimplemented!()\n@@ -100,7 +100,7 @@ LL | |     }\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n \n error: method `not` can be confused for the standard trait method `std::ops::Not::not`\n-  --> $DIR/method_list_2.rs:67:5\n+  --> $DIR/method_list_2.rs:65:5\n    |\n LL | /     pub fn not(self) -> Self {\n LL | |         unimplemented!()\n@@ -110,7 +110,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::Not` or choosing a less ambiguous method name\n \n error: method `rem` can be confused for the standard trait method `std::ops::Rem::rem`\n-  --> $DIR/method_list_2.rs:71:5\n+  --> $DIR/method_list_2.rs:69:5\n    |\n LL | /     pub fn rem(self, rhs: Self) -> Self {\n LL | |         unimplemented!()\n@@ -120,7 +120,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::Rem` or choosing a less ambiguous method name\n \n error: method `shl` can be confused for the standard trait method `std::ops::Shl::shl`\n-  --> $DIR/method_list_2.rs:75:5\n+  --> $DIR/method_list_2.rs:73:5\n    |\n LL | /     pub fn shl(self, rhs: Self) -> Self {\n LL | |         unimplemented!()\n@@ -130,7 +130,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::Shl` or choosing a less ambiguous method name\n \n error: method `shr` can be confused for the standard trait method `std::ops::Shr::shr`\n-  --> $DIR/method_list_2.rs:79:5\n+  --> $DIR/method_list_2.rs:77:5\n    |\n LL | /     pub fn shr(self, rhs: Self) -> Self {\n LL | |         unimplemented!()\n@@ -140,7 +140,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::Shr` or choosing a less ambiguous method name\n \n error: method `sub` can be confused for the standard trait method `std::ops::Sub::sub`\n-  --> $DIR/method_list_2.rs:83:5\n+  --> $DIR/method_list_2.rs:81:5\n    |\n LL | /     pub fn sub(self, rhs: Self) -> Self {\n LL | |         unimplemented!()"}, {"sha": "4c40739d6f553874865157ad7c9cb06a1051ea0a", "filename": "tests/ui/single_component_path_imports.fixed", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fsingle_component_path_imports.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fsingle_component_path_imports.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_component_path_imports.fixed?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,4 @@\n // run-rustfix\n-// edition:2018\n #![warn(clippy::single_component_path_imports)]\n #![allow(unused_imports)]\n "}, {"sha": "9280bab3c71b5cae19b6d4f7e57b47bb7a5a478f", "filename": "tests/ui/single_component_path_imports.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fsingle_component_path_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fsingle_component_path_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_component_path_imports.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,4 @@\n // run-rustfix\n-// edition:2018\n #![warn(clippy::single_component_path_imports)]\n #![allow(unused_imports)]\n "}, {"sha": "509c88ac256a8c0dc99ecdbcac0a8dd6fe97529f", "filename": "tests/ui/single_component_path_imports.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fsingle_component_path_imports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fsingle_component_path_imports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_component_path_imports.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,13 +1,13 @@\n error: this import is redundant\n-  --> $DIR/single_component_path_imports.rs:24:5\n+  --> $DIR/single_component_path_imports.rs:23:5\n    |\n LL |     use regex;\n    |     ^^^^^^^^^^ help: remove it entirely\n    |\n    = note: `-D clippy::single-component-path-imports` implied by `-D warnings`\n \n error: this import is redundant\n-  --> $DIR/single_component_path_imports.rs:6:1\n+  --> $DIR/single_component_path_imports.rs:5:1\n    |\n LL | use regex;\n    | ^^^^^^^^^^ help: remove it entirely"}, {"sha": "e43f5d381aaa1087a928a49d86529693a74fdba9", "filename": "tests/ui/single_component_path_imports_macro.fixed", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fsingle_component_path_imports_macro.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fsingle_component_path_imports_macro.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_component_path_imports_macro.fixed?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,4 @@\n // run-rustfix\n-// edition:2018\n #![warn(clippy::single_component_path_imports)]\n #![allow(unused_imports)]\n "}, {"sha": "3c65ca3054c6919eb859317608a43151ea71eb5c", "filename": "tests/ui/single_component_path_imports_macro.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fsingle_component_path_imports_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fsingle_component_path_imports_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_component_path_imports_macro.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,4 @@\n // run-rustfix\n-// edition:2018\n #![warn(clippy::single_component_path_imports)]\n #![allow(unused_imports)]\n "}, {"sha": "37d5176129ff30a2d06733b35c2b2c9b5404574f", "filename": "tests/ui/single_component_path_imports_macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fsingle_component_path_imports_macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fsingle_component_path_imports_macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_component_path_imports_macro.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,5 @@\n error: this import is redundant\n-  --> $DIR/single_component_path_imports_macro.rs:16:1\n+  --> $DIR/single_component_path_imports_macro.rs:15:1\n    |\n LL | use m2; // fail\n    | ^^^^^^^ help: remove it entirely"}, {"sha": "c75beb747861882c0a158a46a92b67ca5af5af6e", "filename": "tests/ui/single_component_path_imports_nested_first.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fsingle_component_path_imports_nested_first.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fsingle_component_path_imports_nested_first.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_component_path_imports_nested_first.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// edition:2018\n #![warn(clippy::single_component_path_imports)]\n #![allow(unused_imports)]\n "}, {"sha": "cf990be1b9ff1cea7a0efe5c9509652b1a1ec271", "filename": "tests/ui/single_component_path_imports_nested_first.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fsingle_component_path_imports_nested_first.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fsingle_component_path_imports_nested_first.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_component_path_imports_nested_first.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,5 @@\n error: this import is redundant\n-  --> $DIR/single_component_path_imports_nested_first.rs:14:10\n+  --> $DIR/single_component_path_imports_nested_first.rs:13:10\n    |\n LL |     use {regex, serde};\n    |          ^^^^^\n@@ -8,15 +8,15 @@ LL |     use {regex, serde};\n    = help: remove this import\n \n error: this import is redundant\n-  --> $DIR/single_component_path_imports_nested_first.rs:14:17\n+  --> $DIR/single_component_path_imports_nested_first.rs:13:17\n    |\n LL |     use {regex, serde};\n    |                 ^^^^^\n    |\n    = help: remove this import\n \n error: this import is redundant\n-  --> $DIR/single_component_path_imports_nested_first.rs:5:1\n+  --> $DIR/single_component_path_imports_nested_first.rs:4:1\n    |\n LL | use regex;\n    | ^^^^^^^^^^ help: remove it entirely"}, {"sha": "48e8e530261bea39d8b1586d2f60cde8233ee65a", "filename": "tests/ui/single_component_path_imports_self_after.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fsingle_component_path_imports_self_after.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fsingle_component_path_imports_self_after.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_component_path_imports_self_after.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// edition:2018\n #![warn(clippy::single_component_path_imports)]\n #![allow(unused_imports)]\n "}, {"sha": "4fb0cf40b6e00d40bb2c0345a28457af33695442", "filename": "tests/ui/single_component_path_imports_self_before.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fsingle_component_path_imports_self_before.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fsingle_component_path_imports_self_before.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_component_path_imports_self_before.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// edition:2018\n #![warn(clippy::single_component_path_imports)]\n #![allow(unused_imports)]\n "}, {"sha": "2a3a506a57b1437310918767ad1fa55ab0987052", "filename": "tests/ui/unused_async.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Funused_async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Funused_async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_async.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// edition:2018\n #![warn(clippy::unused_async)]\n \n async fn foo() -> i32 {"}, {"sha": "cc6096d65d9f351a016e0fcd7423ac12405ba587", "filename": "tests/ui/unused_async.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Funused_async.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Funused_async.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_async.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,5 @@\n error: unused `async` for function with no await statements\n-  --> $DIR/unused_async.rs:4:1\n+  --> $DIR/unused_async.rs:3:1\n    |\n LL | / async fn foo() -> i32 {\n LL | |     4"}, {"sha": "4e33e343ce0e9c414b42abf6d5e73d6b488392c6", "filename": "tests/ui/use_self.fixed", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fuse_self.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fuse_self.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuse_self.fixed?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,4 @@\n // run-rustfix\n-// edition:2018\n // aux-build:proc_macro_derive.rs\n \n #![warn(clippy::use_self)]"}, {"sha": "7b621ff9bcabf5be14250e8740311b04516047b8", "filename": "tests/ui/use_self.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuse_self.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,4 @@\n // run-rustfix\n-// edition:2018\n // aux-build:proc_macro_derive.rs\n \n #![warn(clippy::use_self)]"}, {"sha": "ecb78b3f9721b0b575a4a153e08e9833f63917b5", "filename": "tests/ui/use_self.stderr", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fuse_self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fuse_self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuse_self.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,169 +1,169 @@\n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:23:21\n+  --> $DIR/use_self.rs:22:21\n    |\n LL |         fn new() -> Foo {\n    |                     ^^^ help: use the applicable keyword: `Self`\n    |\n    = note: `-D clippy::use-self` implied by `-D warnings`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:24:13\n+  --> $DIR/use_self.rs:23:13\n    |\n LL |             Foo {}\n    |             ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:26:22\n+  --> $DIR/use_self.rs:25:22\n    |\n LL |         fn test() -> Foo {\n    |                      ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:27:13\n+  --> $DIR/use_self.rs:26:13\n    |\n LL |             Foo::new()\n    |             ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:32:25\n+  --> $DIR/use_self.rs:31:25\n    |\n LL |         fn default() -> Foo {\n    |                         ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:33:13\n+  --> $DIR/use_self.rs:32:13\n    |\n LL |             Foo::new()\n    |             ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:98:24\n+  --> $DIR/use_self.rs:97:24\n    |\n LL |         fn bad(foos: &[Foo]) -> impl Iterator<Item = &Foo> {\n    |                        ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:98:55\n+  --> $DIR/use_self.rs:97:55\n    |\n LL |         fn bad(foos: &[Foo]) -> impl Iterator<Item = &Foo> {\n    |                                                       ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:113:13\n+  --> $DIR/use_self.rs:112:13\n    |\n LL |             TS(0)\n    |             ^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:148:29\n+  --> $DIR/use_self.rs:147:29\n    |\n LL |                 fn bar() -> Bar {\n    |                             ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:149:21\n+  --> $DIR/use_self.rs:148:21\n    |\n LL |                     Bar { foo: Foo {} }\n    |                     ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:160:21\n+  --> $DIR/use_self.rs:159:21\n    |\n LL |         fn baz() -> Foo {\n    |                     ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:161:13\n+  --> $DIR/use_self.rs:160:13\n    |\n LL |             Foo {}\n    |             ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:178:21\n+  --> $DIR/use_self.rs:177:21\n    |\n LL |             let _ = Enum::B(42);\n    |                     ^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:179:21\n+  --> $DIR/use_self.rs:178:21\n    |\n LL |             let _ = Enum::C { field: true };\n    |                     ^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:180:21\n+  --> $DIR/use_self.rs:179:21\n    |\n LL |             let _ = Enum::A;\n    |                     ^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:222:13\n+  --> $DIR/use_self.rs:221:13\n    |\n LL |             nested::A::fun_1();\n    |             ^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:223:13\n+  --> $DIR/use_self.rs:222:13\n    |\n LL |             nested::A::A;\n    |             ^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:225:13\n+  --> $DIR/use_self.rs:224:13\n    |\n LL |             nested::A {};\n    |             ^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:244:13\n+  --> $DIR/use_self.rs:243:13\n    |\n LL |             TestStruct::from_something()\n    |             ^^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:258:25\n+  --> $DIR/use_self.rs:257:25\n    |\n LL |         async fn g() -> S {\n    |                         ^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:259:13\n+  --> $DIR/use_self.rs:258:13\n    |\n LL |             S {}\n    |             ^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:263:16\n+  --> $DIR/use_self.rs:262:16\n    |\n LL |             &p[S::A..S::B]\n    |                ^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:263:22\n+  --> $DIR/use_self.rs:262:22\n    |\n LL |             &p[S::A..S::B]\n    |                      ^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:286:29\n+  --> $DIR/use_self.rs:285:29\n    |\n LL |         fn foo(value: T) -> Foo<T> {\n    |                             ^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:287:13\n+  --> $DIR/use_self.rs:286:13\n    |\n LL |             Foo::<T> { value }\n    |             ^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:459:13\n+  --> $DIR/use_self.rs:458:13\n    |\n LL |             A::new::<submod::B>(submod::B {})\n    |             ^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:496:13\n+  --> $DIR/use_self.rs:495:13\n    |\n LL |             S2::new()\n    |             ^^ help: use the applicable keyword: `Self`"}, {"sha": "21d66d5df79ecfa0a8b1727424d38ffb1134081f", "filename": "tests/ui/used_underscore_binding.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fused_underscore_binding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fused_underscore_binding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fused_underscore_binding.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// edition:2018\n // aux-build:proc_macro_derive.rs\n \n #![feature(rustc_private)]"}, {"sha": "790b849210c9b35875ff2c9b8c4d47f4c54017cd", "filename": "tests/ui/used_underscore_binding.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fused_underscore_binding.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fused_underscore_binding.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fused_underscore_binding.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,37 +1,37 @@\n error: used binding `_foo` which is prefixed with an underscore. A leading underscore signals that a binding will not be used\n-  --> $DIR/used_underscore_binding.rs:26:5\n+  --> $DIR/used_underscore_binding.rs:25:5\n    |\n LL |     _foo + 1\n    |     ^^^^\n    |\n    = note: `-D clippy::used-underscore-binding` implied by `-D warnings`\n \n error: used binding `_foo` which is prefixed with an underscore. A leading underscore signals that a binding will not be used\n-  --> $DIR/used_underscore_binding.rs:31:20\n+  --> $DIR/used_underscore_binding.rs:30:20\n    |\n LL |     println!(\"{}\", _foo);\n    |                    ^^^^\n \n error: used binding `_foo` which is prefixed with an underscore. A leading underscore signals that a binding will not be used\n-  --> $DIR/used_underscore_binding.rs:32:16\n+  --> $DIR/used_underscore_binding.rs:31:16\n    |\n LL |     assert_eq!(_foo, _foo);\n    |                ^^^^\n \n error: used binding `_foo` which is prefixed with an underscore. A leading underscore signals that a binding will not be used\n-  --> $DIR/used_underscore_binding.rs:32:22\n+  --> $DIR/used_underscore_binding.rs:31:22\n    |\n LL |     assert_eq!(_foo, _foo);\n    |                      ^^^^\n \n error: used binding `_underscore_field` which is prefixed with an underscore. A leading underscore signals that a binding will not be used\n-  --> $DIR/used_underscore_binding.rs:45:5\n+  --> $DIR/used_underscore_binding.rs:44:5\n    |\n LL |     s._underscore_field += 1;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: used binding `_i` which is prefixed with an underscore. A leading underscore signals that a binding will not be used\n-  --> $DIR/used_underscore_binding.rs:100:16\n+  --> $DIR/used_underscore_binding.rs:99:16\n    |\n LL |         uses_i(_i);\n    |                ^^"}, {"sha": "8402c33a4cd5fb695d37116caf003763dcf186bd", "filename": "tests/ui/wildcard_imports.fixed", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fwildcard_imports.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fwildcard_imports.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_imports.fixed?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,8 +1,13 @@\n+// edition:2015\n // run-rustfix\n // aux-build:wildcard_imports_helper.rs\n \n+// the 2015 edition here is needed because edition 2018 changed the module system\n+// (see https://doc.rust-lang.org/edition-guide/rust-2018/path-changes.html) which means the lint\n+// no longer detects some of the cases starting with Rust 2018.\n+// FIXME: We should likely add another edition 2021 test case for this lint\n+\n #![warn(clippy::wildcard_imports)]\n-//#![allow(clippy::redundant_pub_crate)]\n #![allow(unused)]\n #![allow(clippy::unnecessary_wraps)]\n #![warn(unused_imports)]"}, {"sha": "faaeaade9b02bff03b30793a73638ba5a3a560eb", "filename": "tests/ui/wildcard_imports.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fwildcard_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fwildcard_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_imports.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,8 +1,13 @@\n+// edition:2015\n // run-rustfix\n // aux-build:wildcard_imports_helper.rs\n \n+// the 2015 edition here is needed because edition 2018 changed the module system\n+// (see https://doc.rust-lang.org/edition-guide/rust-2018/path-changes.html) which means the lint\n+// no longer detects some of the cases starting with Rust 2018.\n+// FIXME: We should likely add another edition 2021 test case for this lint\n+\n #![warn(clippy::wildcard_imports)]\n-//#![allow(clippy::redundant_pub_crate)]\n #![allow(unused)]\n #![allow(clippy::unnecessary_wraps)]\n #![warn(unused_imports)]"}, {"sha": "7534a65ec9bd56c0878846b81663d05ef269cb92", "filename": "tests/ui/wildcard_imports.stderr", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fwildcard_imports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fwildcard_imports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_imports.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,129 +1,129 @@\n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:12:5\n+  --> $DIR/wildcard_imports.rs:17:5\n    |\n LL | use crate::fn_mod::*;\n    |     ^^^^^^^^^^^^^^^^ help: try: `crate::fn_mod::foo`\n    |\n    = note: `-D clippy::wildcard-imports` implied by `-D warnings`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:13:5\n+  --> $DIR/wildcard_imports.rs:18:5\n    |\n LL | use crate::mod_mod::*;\n    |     ^^^^^^^^^^^^^^^^^ help: try: `crate::mod_mod::inner_mod`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:14:5\n+  --> $DIR/wildcard_imports.rs:19:5\n    |\n LL | use crate::multi_fn_mod::*;\n    |     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `crate::multi_fn_mod::{multi_bar, multi_foo, multi_inner_mod}`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:16:5\n+  --> $DIR/wildcard_imports.rs:21:5\n    |\n LL | use crate::struct_mod::*;\n    |     ^^^^^^^^^^^^^^^^^^^^ help: try: `crate::struct_mod::{A, inner_struct_mod}`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:20:5\n+  --> $DIR/wildcard_imports.rs:25:5\n    |\n LL | use wildcard_imports_helper::inner::inner_for_self_import::*;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `wildcard_imports_helper::inner::inner_for_self_import::inner_extern_bar`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:21:5\n+  --> $DIR/wildcard_imports.rs:26:5\n    |\n LL | use wildcard_imports_helper::*;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `wildcard_imports_helper::{ExternA, extern_foo}`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:92:13\n+  --> $DIR/wildcard_imports.rs:97:13\n    |\n LL |         use crate::fn_mod::*;\n    |             ^^^^^^^^^^^^^^^^ help: try: `crate::fn_mod::foo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:98:75\n+  --> $DIR/wildcard_imports.rs:103:75\n    |\n LL |         use wildcard_imports_helper::inner::inner_for_self_import::{self, *};\n    |                                                                           ^ help: try: `inner_extern_foo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:99:13\n+  --> $DIR/wildcard_imports.rs:104:13\n    |\n LL |         use wildcard_imports_helper::*;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `wildcard_imports_helper::{ExternA, extern_foo}`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:110:20\n+  --> $DIR/wildcard_imports.rs:115:20\n    |\n LL |         use self::{inner::*, inner2::*};\n    |                    ^^^^^^^^ help: try: `inner::inner_foo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:110:30\n+  --> $DIR/wildcard_imports.rs:115:30\n    |\n LL |         use self::{inner::*, inner2::*};\n    |                              ^^^^^^^^^ help: try: `inner2::inner_bar`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:117:13\n+  --> $DIR/wildcard_imports.rs:122:13\n    |\n LL |         use wildcard_imports_helper::*;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `wildcard_imports_helper::{ExternExportedEnum, ExternExportedStruct, extern_exported}`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:146:9\n+  --> $DIR/wildcard_imports.rs:151:9\n    |\n LL |     use crate::in_fn_test::*;\n    |         ^^^^^^^^^^^^^^^^^^^^ help: try: `crate::in_fn_test::{ExportedEnum, ExportedStruct, exported}`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:155:9\n+  --> $DIR/wildcard_imports.rs:160:9\n    |\n LL |     use crate:: in_fn_test::  * ;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `crate:: in_fn_test::exported`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:156:9\n+  --> $DIR/wildcard_imports.rs:161:9\n    |\n LL |       use crate:: fn_mod::\n    |  _________^\n LL | |         *;\n    | |_________^ help: try: `crate:: fn_mod::foo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:167:13\n+  --> $DIR/wildcard_imports.rs:172:13\n    |\n LL |         use super::*;\n    |             ^^^^^^^^ help: try: `super::foofoo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:202:17\n+  --> $DIR/wildcard_imports.rs:207:17\n    |\n LL |             use super::*;\n    |                 ^^^^^^^^ help: try: `super::insidefoo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:210:13\n+  --> $DIR/wildcard_imports.rs:215:13\n    |\n LL |         use super_imports::*;\n    |             ^^^^^^^^^^^^^^^^ help: try: `super_imports::foofoo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:219:17\n+  --> $DIR/wildcard_imports.rs:224:17\n    |\n LL |             use super::super::*;\n    |                 ^^^^^^^^^^^^^^^ help: try: `super::super::foofoo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:228:13\n+  --> $DIR/wildcard_imports.rs:233:13\n    |\n LL |         use super::super::super_imports::*;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `super::super::super_imports::foofoo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:236:13\n+  --> $DIR/wildcard_imports.rs:241:13\n    |\n LL |         use super::*;\n    |             ^^^^^^^^ help: try: `super::foofoo`"}, {"sha": "1b9da8a55e53fe8796ff7b92ee9b393db29b25bd", "filename": "tests/ui/wrong_self_convention.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fwrong_self_convention.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fwrong_self_convention.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrong_self_convention.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// edition:2018\n #![warn(clippy::wrong_self_convention)]\n #![allow(dead_code)]\n "}, {"sha": "590ee6d9c529d6493b8e29b755c2d3e07f982b2b", "filename": "tests/ui/wrong_self_convention.stderr", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fwrong_self_convention.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fwrong_self_convention.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrong_self_convention.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,5 @@\n error: methods called `from_*` usually take no `self`\n-  --> $DIR/wrong_self_convention.rs:17:17\n+  --> $DIR/wrong_self_convention.rs:16:17\n    |\n LL |     fn from_i32(self) {}\n    |                 ^^^^\n@@ -8,183 +8,183 @@ LL |     fn from_i32(self) {}\n    = help: consider choosing a less ambiguous name\n \n error: methods called `from_*` usually take no `self`\n-  --> $DIR/wrong_self_convention.rs:23:21\n+  --> $DIR/wrong_self_convention.rs:22:21\n    |\n LL |     pub fn from_i64(self) {}\n    |                     ^^^^\n    |\n    = help: consider choosing a less ambiguous name\n \n error: methods called `as_*` usually take `self` by reference or `self` by mutable reference\n-  --> $DIR/wrong_self_convention.rs:35:15\n+  --> $DIR/wrong_self_convention.rs:34:15\n    |\n LL |     fn as_i32(self) {}\n    |               ^^^^\n    |\n    = help: consider choosing a less ambiguous name\n \n error: methods called `into_*` usually take `self` by value\n-  --> $DIR/wrong_self_convention.rs:37:17\n+  --> $DIR/wrong_self_convention.rs:36:17\n    |\n LL |     fn into_i32(&self) {}\n    |                 ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n \n error: methods called `is_*` usually take `self` by reference or no `self`\n-  --> $DIR/wrong_self_convention.rs:39:15\n+  --> $DIR/wrong_self_convention.rs:38:15\n    |\n LL |     fn is_i32(self) {}\n    |               ^^^^\n    |\n    = help: consider choosing a less ambiguous name\n \n error: methods with the following characteristics: (`to_*` and `self` type is not `Copy`) usually take `self` by reference\n-  --> $DIR/wrong_self_convention.rs:41:15\n+  --> $DIR/wrong_self_convention.rs:40:15\n    |\n LL |     fn to_i32(self) {}\n    |               ^^^^\n    |\n    = help: consider choosing a less ambiguous name\n \n error: methods called `from_*` usually take no `self`\n-  --> $DIR/wrong_self_convention.rs:43:17\n+  --> $DIR/wrong_self_convention.rs:42:17\n    |\n LL |     fn from_i32(self) {}\n    |                 ^^^^\n    |\n    = help: consider choosing a less ambiguous name\n \n error: methods called `as_*` usually take `self` by reference or `self` by mutable reference\n-  --> $DIR/wrong_self_convention.rs:45:19\n+  --> $DIR/wrong_self_convention.rs:44:19\n    |\n LL |     pub fn as_i64(self) {}\n    |                   ^^^^\n    |\n    = help: consider choosing a less ambiguous name\n \n error: methods called `into_*` usually take `self` by value\n-  --> $DIR/wrong_self_convention.rs:46:21\n+  --> $DIR/wrong_self_convention.rs:45:21\n    |\n LL |     pub fn into_i64(&self) {}\n    |                     ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n \n error: methods called `is_*` usually take `self` by reference or no `self`\n-  --> $DIR/wrong_self_convention.rs:47:19\n+  --> $DIR/wrong_self_convention.rs:46:19\n    |\n LL |     pub fn is_i64(self) {}\n    |                   ^^^^\n    |\n    = help: consider choosing a less ambiguous name\n \n error: methods with the following characteristics: (`to_*` and `self` type is not `Copy`) usually take `self` by reference\n-  --> $DIR/wrong_self_convention.rs:48:19\n+  --> $DIR/wrong_self_convention.rs:47:19\n    |\n LL |     pub fn to_i64(self) {}\n    |                   ^^^^\n    |\n    = help: consider choosing a less ambiguous name\n \n error: methods called `from_*` usually take no `self`\n-  --> $DIR/wrong_self_convention.rs:49:21\n+  --> $DIR/wrong_self_convention.rs:48:21\n    |\n LL |     pub fn from_i64(self) {}\n    |                     ^^^^\n    |\n    = help: consider choosing a less ambiguous name\n \n error: methods called `as_*` usually take `self` by reference or `self` by mutable reference\n-  --> $DIR/wrong_self_convention.rs:94:19\n+  --> $DIR/wrong_self_convention.rs:93:19\n    |\n LL |         fn as_i32(self) {}\n    |                   ^^^^\n    |\n    = help: consider choosing a less ambiguous name\n \n error: methods called `into_*` usually take `self` by value\n-  --> $DIR/wrong_self_convention.rs:97:25\n+  --> $DIR/wrong_self_convention.rs:96:25\n    |\n LL |         fn into_i32_ref(&self) {}\n    |                         ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n \n error: methods called `is_*` usually take `self` by reference or no `self`\n-  --> $DIR/wrong_self_convention.rs:99:19\n+  --> $DIR/wrong_self_convention.rs:98:19\n    |\n LL |         fn is_i32(self) {}\n    |                   ^^^^\n    |\n    = help: consider choosing a less ambiguous name\n \n error: methods called `from_*` usually take no `self`\n-  --> $DIR/wrong_self_convention.rs:103:21\n+  --> $DIR/wrong_self_convention.rs:102:21\n    |\n LL |         fn from_i32(self) {}\n    |                     ^^^^\n    |\n    = help: consider choosing a less ambiguous name\n \n error: methods called `as_*` usually take `self` by reference or `self` by mutable reference\n-  --> $DIR/wrong_self_convention.rs:118:19\n+  --> $DIR/wrong_self_convention.rs:117:19\n    |\n LL |         fn as_i32(self);\n    |                   ^^^^\n    |\n    = help: consider choosing a less ambiguous name\n \n error: methods called `into_*` usually take `self` by value\n-  --> $DIR/wrong_self_convention.rs:121:25\n+  --> $DIR/wrong_self_convention.rs:120:25\n    |\n LL |         fn into_i32_ref(&self);\n    |                         ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n \n error: methods called `is_*` usually take `self` by reference or no `self`\n-  --> $DIR/wrong_self_convention.rs:123:19\n+  --> $DIR/wrong_self_convention.rs:122:19\n    |\n LL |         fn is_i32(self);\n    |                   ^^^^\n    |\n    = help: consider choosing a less ambiguous name\n \n error: methods called `from_*` usually take no `self`\n-  --> $DIR/wrong_self_convention.rs:127:21\n+  --> $DIR/wrong_self_convention.rs:126:21\n    |\n LL |         fn from_i32(self);\n    |                     ^^^^\n    |\n    = help: consider choosing a less ambiguous name\n \n error: methods called `into_*` usually take `self` by value\n-  --> $DIR/wrong_self_convention.rs:145:25\n+  --> $DIR/wrong_self_convention.rs:144:25\n    |\n LL |         fn into_i32_ref(&self);\n    |                         ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n \n error: methods called `from_*` usually take no `self`\n-  --> $DIR/wrong_self_convention.rs:151:21\n+  --> $DIR/wrong_self_convention.rs:150:21\n    |\n LL |         fn from_i32(self);\n    |                     ^^^^\n    |\n    = help: consider choosing a less ambiguous name\n \n error: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n-  --> $DIR/wrong_self_convention.rs:175:22\n+  --> $DIR/wrong_self_convention.rs:174:22\n    |\n LL |         fn to_u64_v2(&self) -> u64 {\n    |                      ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n \n error: methods with the following characteristics: (`to_*` and `self` type is not `Copy`) usually take `self` by reference\n-  --> $DIR/wrong_self_convention.rs:184:19\n+  --> $DIR/wrong_self_convention.rs:183:19\n    |\n LL |         fn to_u64(self) -> u64 {\n    |                   ^^^^"}, {"sha": "a8fe8331133778ebcf934b4b234c07c430f484c9", "filename": "tests/ui/wrong_self_convention2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fwrong_self_convention2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fwrong_self_convention2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrong_self_convention2.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// edition:2018\n #![warn(clippy::wrong_self_convention)]\n #![allow(dead_code)]\n "}, {"sha": "5bdc47f91f65b42b1376b18a7a661926c6d3805b", "filename": "tests/ui/wrong_self_convention2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fwrong_self_convention2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fwrong_self_convention2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrong_self_convention2.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,5 @@\n error: methods called `from_*` usually take no `self`\n-  --> $DIR/wrong_self_convention2.rs:55:29\n+  --> $DIR/wrong_self_convention2.rs:54:29\n    |\n LL |         pub fn from_be_self(self) -> Self {\n    |                             ^^^^\n@@ -8,7 +8,7 @@ LL |         pub fn from_be_self(self) -> Self {\n    = help: consider choosing a less ambiguous name\n \n error: methods called `from_*` usually take no `self`\n-  --> $DIR/wrong_self_convention2.rs:64:25\n+  --> $DIR/wrong_self_convention2.rs:63:25\n    |\n LL |         fn from_be_self(self) -> Self;\n    |                         ^^^^"}, {"sha": "5bb2116bd339af9ef01ddc281abb2d70416a5610", "filename": "tests/ui/wrong_self_conventions_mut.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fwrong_self_conventions_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fwrong_self_conventions_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrong_self_conventions_mut.rs?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,4 +1,3 @@\n-// edition:2018\n #![warn(clippy::wrong_self_convention)]\n #![allow(dead_code)]\n "}, {"sha": "8665d8dc9a9dea4f7b1ed03b3b5a26084fdf11d3", "filename": "tests/ui/wrong_self_conventions_mut.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fwrong_self_conventions_mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd9bf5af33250988deeb1e5b0575d55bab3d01b/tests%2Fui%2Fwrong_self_conventions_mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrong_self_conventions_mut.stderr?ref=7cd9bf5af33250988deeb1e5b0575d55bab3d01b", "patch": "@@ -1,5 +1,5 @@\n error: methods with the following characteristics: (`to_*` and `self` type is not `Copy`) usually take `self` by reference\n-  --> $DIR/wrong_self_conventions_mut.rs:15:24\n+  --> $DIR/wrong_self_conventions_mut.rs:14:24\n    |\n LL |         pub fn to_many(&mut self) -> Option<&mut [T]> {\n    |                        ^^^^^^^^^\n@@ -8,7 +8,7 @@ LL |         pub fn to_many(&mut self) -> Option<&mut [T]> {\n    = help: consider choosing a less ambiguous name\n \n error: methods with the following characteristics: (`to_*` and `*_mut`) usually take `self` by mutable reference\n-  --> $DIR/wrong_self_conventions_mut.rs:23:28\n+  --> $DIR/wrong_self_conventions_mut.rs:22:28\n    |\n LL |         pub fn to_many_mut(&self) -> Option<&[T]> {\n    |                            ^^^^^"}]}