{"sha": "5c873be9c323f15f102720fe9085e2c4e982bb6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjODczYmU5YzMyM2YxNWYxMDI3MjBmZTkwODVlMmM0ZTk4MmJiNmQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-11-22T13:14:37Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-11-23T04:09:46Z"}, "message": "Improve slice indexing assertion", "tree": {"sha": "19069d321998941841a2e5cf231f2a3d1a43bc58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19069d321998941841a2e5cf231f2a3d1a43bc58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c873be9c323f15f102720fe9085e2c4e982bb6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c873be9c323f15f102720fe9085e2c4e982bb6d", "html_url": "https://github.com/rust-lang/rust/commit/5c873be9c323f15f102720fe9085e2c4e982bb6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c873be9c323f15f102720fe9085e2c4e982bb6d/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0f9a39e5ca3530c0d3a639ba068d4264de904c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0f9a39e5ca3530c0d3a639ba068d4264de904c7", "html_url": "https://github.com/rust-lang/rust/commit/c0f9a39e5ca3530c0d3a639ba068d4264de904c7"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "890ca43580bfa4a36215cf688304d4d4e1af5e40", "filename": "src/libcore/slice.rs", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/5c873be9c323f15f102720fe9085e2c4e982bb6d/src%2Flibcore%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c873be9c323f15f102720fe9085e2c4e982bb6d/src%2Flibcore%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice.rs?ref=5c873be9c323f15f102720fe9085e2c4e982bb6d", "patch": "@@ -566,14 +566,29 @@ impl<T> ops::IndexMut<usize> for [T] {\n     }\n }\n \n+#[inline(never)]\n+#[cold]\n+fn slice_index_len_fail(index: usize, len: usize) -> ! {\n+    panic!(\"index {} out of range for slice of length {}\", index, len);\n+}\n+\n+#[inline(never)]\n+#[cold]\n+fn slice_index_order_fail(index: usize, end: usize) -> ! {\n+    panic!(\"slice index starts at {} but ends at {}\", index, end);\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T> ops::Index<ops::Range<usize>> for [T] {\n     type Output = [T];\n \n     #[inline]\n     fn index(&self, index: ops::Range<usize>) -> &[T] {\n-        assert!(index.start <= index.end);\n-        assert!(index.end <= self.len());\n+        if index.start > index.end {\n+            slice_index_order_fail(index.start, index.end);\n+        } else if index.end > self.len() {\n+            slice_index_len_fail(index.end, self.len());\n+        }\n         unsafe {\n             from_raw_parts (\n                 self.as_ptr().offset(index.start as isize),\n@@ -614,8 +629,11 @@ impl<T> ops::Index<RangeFull> for [T] {\n impl<T> ops::IndexMut<ops::Range<usize>> for [T] {\n     #[inline]\n     fn index_mut(&mut self, index: ops::Range<usize>) -> &mut [T] {\n-        assert!(index.start <= index.end);\n-        assert!(index.end <= self.len());\n+        if index.start > index.end {\n+            slice_index_order_fail(index.start, index.end);\n+        } else if index.end > self.len() {\n+            slice_index_len_fail(index.end, self.len());\n+        }\n         unsafe {\n             from_raw_parts_mut(\n                 self.as_mut_ptr().offset(index.start as isize),"}]}