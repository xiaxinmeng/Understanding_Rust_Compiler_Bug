{"sha": "c1de90cdb255c476cc6b08ba9b2031e259dabfab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxZGU5MGNkYjI1NWM0NzZjYzZiMDhiYTliMjAzMWUyNTlkYWJmYWI=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-05-02T03:30:05Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-05-02T03:30:05Z"}, "message": "rustc: remove ty::LegacyDtor", "tree": {"sha": "87ff9cbdce2eef1d87d81e3a573e86f76bb80454", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87ff9cbdce2eef1d87d81e3a573e86f76bb80454"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1de90cdb255c476cc6b08ba9b2031e259dabfab", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1de90cdb255c476cc6b08ba9b2031e259dabfab", "html_url": "https://github.com/rust-lang/rust/commit/c1de90cdb255c476cc6b08ba9b2031e259dabfab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1de90cdb255c476cc6b08ba9b2031e259dabfab/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4bdc3f50040301bdcd372e320044f8fb2efb76f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4bdc3f50040301bdcd372e320044f8fb2efb76f", "html_url": "https://github.com/rust-lang/rust/commit/b4bdc3f50040301bdcd372e320044f8fb2efb76f"}], "stats": {"total": 27, "additions": 7, "deletions": 20}, "files": [{"sha": "1f90b009ec65688300fde3b07b20d9d3446372f9", "filename": "src/librustc/middle/trans/glue.rs", "status": "modified", "additions": 7, "deletions": 19, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c1de90cdb255c476cc6b08ba9b2031e259dabfab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1de90cdb255c476cc6b08ba9b2031e259dabfab/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs?ref=c1de90cdb255c476cc6b08ba9b2031e259dabfab", "patch": "@@ -443,11 +443,8 @@ pub fn make_free_glue(bcx: block, v: ValueRef, t: ty::t) {\n         // Call the dtor if there is one\n         match ty::ty_dtor(bcx.tcx(), did) {\n             ty::NoDtor => bcx,\n-            ty::LegacyDtor(ref dt_id) => {\n-                trans_struct_drop(bcx, t, v, *dt_id, did, substs, false)\n-            }\n             ty::TraitDtor(ref dt_id) => {\n-                trans_struct_drop(bcx, t, v, *dt_id, did, substs, true)\n+                trans_struct_drop(bcx, t, v, *dt_id, did, substs)\n             }\n         }\n       }\n@@ -461,8 +458,7 @@ pub fn trans_struct_drop(bcx: block,\n                          v0: ValueRef,\n                          dtor_did: ast::def_id,\n                          class_did: ast::def_id,\n-                         substs: &ty::substs,\n-                         take_ref: bool)\n+                         substs: &ty::substs)\n                       -> block {\n     let repr = adt::represent_type(bcx.ccx(), t);\n     let drop_flag = adt::trans_drop_flag_ptr(bcx, repr, v0);\n@@ -484,15 +480,10 @@ pub fn trans_struct_drop(bcx: block,\n         // (self)\n         assert!((params.len() == 2));\n \n-        // If we need to take a reference to the class (because it's using\n-        // the Drop trait), do so now.\n-        let llval;\n-        if take_ref {\n-            llval = alloca(bcx, val_ty(v0));\n-            Store(bcx, v0, llval);\n-        } else {\n-            llval = v0;\n-        }\n+        // Take a reference to the class (because it's using the Drop trait),\n+        // do so now.\n+        let llval = alloca(bcx, val_ty(v0));\n+        Store(bcx, v0, llval);\n \n         let self_arg = PointerCast(bcx, llval, params[1]);\n         let args = ~[C_null(T_ptr(T_i8())), self_arg];\n@@ -534,10 +525,7 @@ pub fn make_drop_glue(bcx: block, v0: ValueRef, t: ty::t) {\n         let tcx = bcx.tcx();\n         match ty::ty_dtor(tcx, did) {\n           ty::TraitDtor(dtor) => {\n-            trans_struct_drop(bcx, t, v0, dtor, did, substs, true)\n-          }\n-          ty::LegacyDtor(dtor) => {\n-            trans_struct_drop(bcx, t, v0, dtor, did, substs, false)\n+            trans_struct_drop(bcx, t, v0, dtor, did, substs)\n           }\n           ty::NoDtor => {\n             // No dtor? Just the default case"}, {"sha": "e5f9dcb263a80fca2af84ee8116c6209c3100a87", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c1de90cdb255c476cc6b08ba9b2031e259dabfab/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1de90cdb255c476cc6b08ba9b2031e259dabfab/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=c1de90cdb255c476cc6b08ba9b2031e259dabfab", "patch": "@@ -3728,7 +3728,6 @@ pub fn item_path_str(cx: ctxt, id: ast::def_id) -> ~str {\n \n pub enum DtorKind {\n     NoDtor,\n-    LegacyDtor(def_id),\n     TraitDtor(def_id)\n }\n "}]}