{"sha": "aadff8560b8b10842f444e00c9d33648b706d97b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhZGZmODU2MGI4YjEwODQyZjQ0NGUwMGM5ZDMzNjQ4YjcwNmQ5N2I=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-07-24T13:05:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-07-24T13:05:55Z"}, "message": "Auto merge of #852 - lzutao:rustup, r=RalfJung\n\n build: Fix build after rust-lang/rust#60951", "tree": {"sha": "caa7d98a68c6c46bb2970382663df3cf85d6cf20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/caa7d98a68c6c46bb2970382663df3cf85d6cf20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aadff8560b8b10842f444e00c9d33648b706d97b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aadff8560b8b10842f444e00c9d33648b706d97b", "html_url": "https://github.com/rust-lang/rust/commit/aadff8560b8b10842f444e00c9d33648b706d97b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aadff8560b8b10842f444e00c9d33648b706d97b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "310649bb8e528c8cc91a6467569ba474f22b2271", "url": "https://api.github.com/repos/rust-lang/rust/commits/310649bb8e528c8cc91a6467569ba474f22b2271", "html_url": "https://github.com/rust-lang/rust/commit/310649bb8e528c8cc91a6467569ba474f22b2271"}, {"sha": "fd71fbea0f5e9f13bf33b0b1a78f3e6d5897b542", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd71fbea0f5e9f13bf33b0b1a78f3e6d5897b542", "html_url": "https://github.com/rust-lang/rust/commit/fd71fbea0f5e9f13bf33b0b1a78f3e6d5897b542"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "973a5105980c8e767272389aafb8174a0a4b8c6e", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aadff8560b8b10842f444e00c9d33648b706d97b/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/aadff8560b8b10842f444e00c9d33648b706d97b/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=aadff8560b8b10842f444e00c9d33648b706d97b", "patch": "@@ -1 +1 @@\n-1301422a6c2e8916560b8cc2f0564f38d8858a75\n+a7f28678bbf4e16893bb6a718e427504167a9494"}, {"sha": "1ce485682c770df2b681660aea927dc2a54184d6", "filename": "src/operator.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/aadff8560b8b10842f444e00c9d33648b706d97b/src%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aadff8560b8b10842f444e00c9d33648b706d97b/src%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foperator.rs?ref=aadff8560b8b10842f444e00c9d33648b706d97b", "patch": "@@ -64,12 +64,12 @@ impl<'mir, 'tcx> EvalContextExt<'tcx> for super::MiriEvalContext<'mir, 'tcx> {\n             assert!(right.layout.ty.is_integral());\n             let l_bits = self.force_bits(left.imm.to_scalar()?, left.layout.size)?;\n             let r_bits = self.force_bits(right.imm.to_scalar()?, right.layout.size)?;\n-            \n+\n             let left = ImmTy::from_scalar(Scalar::from_uint(l_bits, left.layout.size), left.layout);\n             let right = ImmTy::from_scalar(Scalar::from_uint(r_bits, left.layout.size), right.layout);\n \n             return self.binary_op(bin_op, left, right);\n-        } \n+        }\n \n         // Operations that support fat pointers\n         match bin_op {\n@@ -298,11 +298,12 @@ impl<'mir, 'tcx> EvalContextExt<'tcx> for super::MiriEvalContext<'mir, 'tcx> {\n         pointee_ty: Ty<'tcx>,\n         offset: i64,\n     ) -> InterpResult<'tcx, Scalar<Tag>> {\n+        use rustc::mir::interpret::InterpError::Panic;\n         // FIXME: assuming here that type size is less than `i64::max_value()`.\n         let pointee_size = self.layout_of(pointee_ty)?.size.bytes() as i64;\n         let offset = offset\n             .checked_mul(pointee_size)\n-            .ok_or_else(|| InterpError::Overflow(mir::BinOp::Mul))?;\n+            .ok_or_else(|| Panic(PanicMessage::Overflow(mir::BinOp::Mul)))?;\n         // Now let's see what kind of pointer this is.\n         let ptr = if offset == 0 {\n             match ptr {"}, {"sha": "bcfcda2fd01c57d72e77307fa10c42cfce4e35a5", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aadff8560b8b10842f444e00c9d33648b706d97b/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aadff8560b8b10842f444e00c9d33648b706d97b/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=aadff8560b8b10842f444e00c9d33648b706d97b", "patch": "@@ -128,6 +128,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         dest: Option<PlaceTy<'tcx, Tag>>,\n         ret: Option<mir::BasicBlock>,\n     ) -> InterpResult<'tcx> {\n+        use rustc::mir::interpret::InterpError::Panic;\n         let this = self.eval_context_mut();\n         let attrs = this.tcx.get_attrs(def_id);\n         let link_name = match attr::first_attr_value_str_by_name(&attrs, sym::link_name) {\n@@ -167,7 +168,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             \"calloc\" => {\n                 let items = this.read_scalar(args[0])?.to_usize(this)?;\n                 let len = this.read_scalar(args[1])?.to_usize(this)?;\n-                let size = items.checked_mul(len).ok_or_else(|| InterpError::Overflow(mir::BinOp::Mul))?;\n+                let size = items.checked_mul(len).ok_or_else(|| Panic(PanicMessage::Overflow(mir::BinOp::Mul)))?;\n                 let res = this.malloc(size, /*zero_init:*/ true, MiriMemoryKind::C);\n                 this.write_scalar(res, dest)?;\n             }"}]}