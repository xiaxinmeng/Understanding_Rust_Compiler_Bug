{"sha": "0fa1c1662f993343018c6f0dd25ad3eea83e8f63", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmYTFjMTY2MmY5OTMzNDMwMThjNmYwZGQyNWFkM2VlYTgzZThmNjM=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-05-08T14:08:59Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-05-08T14:08:59Z"}, "message": "Fallout to compile-fail tests.\n\nThis change is worrisome to me, both because:\n\n1. I thought the rules in RFC 599 imply that the `Box<Trait>` without `'static`\n   in the first case would expand to the second case, but their behaviors\n   here differ.  And,\n\n2. The explicit handling of `'static` should mean `dropck` has no application\n   here and thus we should have seen no change to the expected error messages.\n   Nonetheless, the error messages changed.", "tree": {"sha": "67b7c3dc26ce7f8551bcd62cfe77c7e370f9cc20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67b7c3dc26ce7f8551bcd62cfe77c7e370f9cc20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0fa1c1662f993343018c6f0dd25ad3eea83e8f63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0fa1c1662f993343018c6f0dd25ad3eea83e8f63", "html_url": "https://github.com/rust-lang/rust/commit/0fa1c1662f993343018c6f0dd25ad3eea83e8f63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0fa1c1662f993343018c6f0dd25ad3eea83e8f63/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8d4bb4ce36d3de897fa3a63bf14cd8d4de45cea", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8d4bb4ce36d3de897fa3a63bf14cd8d4de45cea", "html_url": "https://github.com/rust-lang/rust/commit/d8d4bb4ce36d3de897fa3a63bf14cd8d4de45cea"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "f73b06653012afd294d024861c13acbc9ca49975", "filename": "src/test/compile-fail/unboxed-closures-failed-recursive-fn-1.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0fa1c1662f993343018c6f0dd25ad3eea83e8f63/src%2Ftest%2Fcompile-fail%2Funboxed-closures-failed-recursive-fn-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fa1c1662f993343018c6f0dd25ad3eea83e8f63/src%2Ftest%2Fcompile-fail%2Funboxed-closures-failed-recursive-fn-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funboxed-closures-failed-recursive-fn-1.rs?ref=0fa1c1662f993343018c6f0dd25ad3eea83e8f63", "patch": "@@ -22,12 +22,24 @@ fn a() {\n     let mut factorial: Option<Box<Fn(u32) -> u32>> = None;\n \n     let f = |x: u32| -> u32 {\n+        //~^ ERROR `factorial` does not live long enough\n+        let g = factorial.as_ref().unwrap();\n+        if x == 0 {1} else {x * g(x-1)}\n+    };\n+\n+    factorial = Some(Box::new(f));\n+}\n+\n+fn b() {\n+    let mut factorial: Option<Box<Fn(u32) -> u32 + 'static>> = None;\n+\n+    let f = |x: u32| -> u32 {\n+        //~^ ERROR closure may outlive the current function, but it borrows `factorial`\n         let g = factorial.as_ref().unwrap();\n         if x == 0 {1} else {x * g(x-1)}\n     };\n \n     factorial = Some(Box::new(f));\n-    //~^ ERROR cannot assign to `factorial` because it is borrowed\n }\n \n fn main() { }"}]}