{"sha": "7853dac66245d88bace4cdc62b38837aa3e54568", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4NTNkYWM2NjI0NWQ4OGJhY2U0Y2RjNjJiMzg4MzdhYTNlNTQ1Njg=", "commit": {"author": {"name": "xd009642", "email": "danielmckenna93@gmail.com", "date": "2019-07-26T15:46:47Z"}, "committer": {"name": "xd009642", "email": "danielmckenna93@gmail.com", "date": "2019-07-26T15:46:47Z"}, "message": "Responded to comments and fixed compile bug\n\nRemoved the hash of `let c: fn(_,_) -> _ = ExprKind::Cast` and\nfixed compile issue by collecting HirVec into an actual Vec", "tree": {"sha": "42221ef8eb1dba16982cae47bde125bdb6a3b059", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42221ef8eb1dba16982cae47bde125bdb6a3b059"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7853dac66245d88bace4cdc62b38837aa3e54568", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7853dac66245d88bace4cdc62b38837aa3e54568", "html_url": "https://github.com/rust-lang/rust/commit/7853dac66245d88bace4cdc62b38837aa3e54568", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7853dac66245d88bace4cdc62b38837aa3e54568/comments", "author": {"login": "xd009642", "id": 3472518, "node_id": "MDQ6VXNlcjM0NzI1MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3472518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xd009642", "html_url": "https://github.com/xd009642", "followers_url": "https://api.github.com/users/xd009642/followers", "following_url": "https://api.github.com/users/xd009642/following{/other_user}", "gists_url": "https://api.github.com/users/xd009642/gists{/gist_id}", "starred_url": "https://api.github.com/users/xd009642/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xd009642/subscriptions", "organizations_url": "https://api.github.com/users/xd009642/orgs", "repos_url": "https://api.github.com/users/xd009642/repos", "events_url": "https://api.github.com/users/xd009642/events{/privacy}", "received_events_url": "https://api.github.com/users/xd009642/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xd009642", "id": 3472518, "node_id": "MDQ6VXNlcjM0NzI1MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3472518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xd009642", "html_url": "https://github.com/xd009642", "followers_url": "https://api.github.com/users/xd009642/followers", "following_url": "https://api.github.com/users/xd009642/following{/other_user}", "gists_url": "https://api.github.com/users/xd009642/gists{/gist_id}", "starred_url": "https://api.github.com/users/xd009642/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xd009642/subscriptions", "organizations_url": "https://api.github.com/users/xd009642/orgs", "repos_url": "https://api.github.com/users/xd009642/repos", "events_url": "https://api.github.com/users/xd009642/events{/privacy}", "received_events_url": "https://api.github.com/users/xd009642/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0259179c3c867e9b25894bf8139145d34359acc", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0259179c3c867e9b25894bf8139145d34359acc", "html_url": "https://github.com/rust-lang/rust/commit/c0259179c3c867e9b25894bf8139145d34359acc"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "cb836eac3a6f1355a512e23b86a7fa8fd494617e", "filename": "clippy_lints/src/trait_bounds.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7853dac66245d88bace4cdc62b38837aa3e54568/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7853dac66245d88bace4cdc62b38837aa3e54568/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrait_bounds.rs?ref=7853dac66245d88bace4cdc62b38837aa3e54568", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::{in_macro, span_help_and_lint, SpanlessHash};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n-use rustc::{declare_tool_lint, lint_array, impl_lint_pass};\n+use rustc::{declare_tool_lint, impl_lint_pass};\n use rustc_data_structures::fx::FxHashMap;\n use rustc::hir::*;\n \n@@ -29,7 +29,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for TraitBounds {\n         for bound in &gen.where_clause.predicates {\n             if let WherePredicate::BoundPredicate(ref p) = bound {\n                 let h = hash(&p.bounded_ty);\n-                if let Some(ref v) = map.insert(h, p.bounds) {\n+                if let Some(ref v) = map.insert(h, p.bounds.iter().collect::<Vec<_>>()) {\n                     let mut hint_string = format!(\"consider combining the bounds: `{:?}: \", p.bounded_ty);\n                     for b in v.iter() {\n                         hint_string.push_str(&format!(\"{:?}, \", b));"}, {"sha": "703c9fac1dac837287272af97f8f09c3c5033458", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7853dac66245d88bace4cdc62b38837aa3e54568/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7853dac66245d88bace4cdc62b38837aa3e54568/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=7853dac66245d88bace4cdc62b38837aa3e54568", "patch": "@@ -3,7 +3,7 @@ use crate::utils::differing_macro_contexts;\n use rustc::hir::ptr::P;\n use rustc::hir::*;\n use rustc::lint::LateContext;\n-use rustc::ty::{self, TypeckTables};\n+use rustc::ty::TypeckTables;\n use std::collections::hash_map::DefaultHasher;\n use std::hash::{Hash, Hasher};\n use syntax::ast::Name;\n@@ -439,8 +439,6 @@ impl<'a, 'tcx> SpanlessHash<'a, 'tcx> {\n                 self.hash_exprs(args);\n             },\n             ExprKind::Cast(ref e, ref ty) => {\n-                let c: fn(_, _) -> _ = ExprKind::Cast;\n-                c.hash(&mut self.s);\n                 self.hash_expr(e);\n                 self.hash_ty(ty);\n             },"}]}