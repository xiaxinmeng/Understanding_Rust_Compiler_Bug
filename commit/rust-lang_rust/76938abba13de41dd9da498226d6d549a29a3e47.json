{"sha": "76938abba13de41dd9da498226d6d549a29a3e47", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2OTM4YWJiYTEzZGU0MWRkOWRhNDk4MjI2ZDZkNTQ5YTI5YTNlNDc=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-08T14:33:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-08T14:33:37Z"}, "message": "Rollup merge of #63332 - marmistrz:truncate, r=alexcrichton\n\nAdd an overflow check in truncate implementation for Unix.\n\nCloses #63326.\ncc @alexcrichton", "tree": {"sha": "d6cfffd61f4816cb8856397c68a77d1e9d23a782", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6cfffd61f4816cb8856397c68a77d1e9d23a782"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76938abba13de41dd9da498226d6d549a29a3e47", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdTDLBCRBK7hj4Ov3rIwAAdHIIABjr2wR25JonbVFvt3aOD2V8\nC+uytxsr9/MiPTBjAZJoWh2OzEb3PukriR+fPbT7ygmNrLVDC9ZqhjQq43kp+gl5\nlx3g720V/Eva7pmYveNvc4K7Pg76zAKf90XaxdB/4dpcxfmvgAxCr6HmED76Mn3I\nakJ7R3+f/MBFeDsAAZ4d+sB11hnAzNLijSV8022xgf79ihRGHmzgO299RxT/kN+A\net8C4RmRrwjjAu2gC8sVvW/4XkC4w5J2p7MizyWkJDOVfNIEBT5LV36E9C9k7AWv\nd4MZy5jJNRSkYZ6xUz9+W496bJ6uyhFjvhp4yyks6oJfnije05WF09Qr3VfBEDw=\n=ar4i\n-----END PGP SIGNATURE-----\n", "payload": "tree d6cfffd61f4816cb8856397c68a77d1e9d23a782\nparent 8fe2d9c4e9693c5988bcebe81c9d1e046c9e791a\nparent 3adbf63b119d26edf1997e974d0727791d6f4060\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1565274817 +0200\ncommitter GitHub <noreply@github.com> 1565274817 +0200\n\nRollup merge of #63332 - marmistrz:truncate, r=alexcrichton\n\nAdd an overflow check in truncate implementation for Unix.\n\nCloses #63326.\ncc @alexcrichton\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76938abba13de41dd9da498226d6d549a29a3e47", "html_url": "https://github.com/rust-lang/rust/commit/76938abba13de41dd9da498226d6d549a29a3e47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76938abba13de41dd9da498226d6d549a29a3e47/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fe2d9c4e9693c5988bcebe81c9d1e046c9e791a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fe2d9c4e9693c5988bcebe81c9d1e046c9e791a", "html_url": "https://github.com/rust-lang/rust/commit/8fe2d9c4e9693c5988bcebe81c9d1e046c9e791a"}, {"sha": "3adbf63b119d26edf1997e974d0727791d6f4060", "url": "https://api.github.com/repos/rust-lang/rust/commits/3adbf63b119d26edf1997e974d0727791d6f4060", "html_url": "https://github.com/rust-lang/rust/commit/3adbf63b119d26edf1997e974d0727791d6f4060"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "5f76875bd66c4c2fd34692ecbb2bc071ec024c96", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/76938abba13de41dd9da498226d6d549a29a3e47/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76938abba13de41dd9da498226d6d549a29a3e47/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=76938abba13de41dd9da498226d6d549a29a3e47", "patch": "@@ -468,6 +468,8 @@ impl File {\n     /// # Errors\n     ///\n     /// This function will return an error if the file is not opened for writing.\n+    /// Also, std::io::ErrorKind::InvalidInput will be returned if the desired\n+    /// length would cause an overflow due to the implementation specifics.\n     ///\n     /// # Examples\n     ///"}, {"sha": "3b1eb86b84fe19ecfe5e24bcd08837647757abcf", "filename": "src/libstd/sys/unix/fs.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/76938abba13de41dd9da498226d6d549a29a3e47/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76938abba13de41dd9da498226d6d549a29a3e47/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffs.rs?ref=76938abba13de41dd9da498226d6d549a29a3e47", "patch": "@@ -557,9 +557,15 @@ impl File {\n         return crate::sys::android::ftruncate64(self.0.raw(), size);\n \n         #[cfg(not(target_os = \"android\"))]\n-        return cvt_r(|| unsafe {\n-            ftruncate64(self.0.raw(), size as off64_t)\n-        }).map(|_| ());\n+        {\n+            use crate::convert::TryInto;\n+            let size: off64_t = size\n+                .try_into()\n+                .map_err(|e| io::Error::new(io::ErrorKind::InvalidInput, e))?;\n+            cvt_r(|| unsafe {\n+                ftruncate64(self.0.raw(), size)\n+            }).map(|_| ())\n+        }\n     }\n \n     pub fn read(&self, buf: &mut [u8]) -> io::Result<usize> {"}]}