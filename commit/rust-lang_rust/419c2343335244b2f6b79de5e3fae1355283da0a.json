{"sha": "419c2343335244b2f6b79de5e3fae1355283da0a", "node_id": "C_kwDOAAsO6NoAKDQxOWMyMzQzMzM1MjQ0YjJmNmI3OWRlNWUzZmFlMTM1NTI4M2RhMGE", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-09T15:46:16Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-09T15:46:16Z"}, "message": "internal: move test", "tree": {"sha": "f383fabae772499087b7e0ae6740783ba3960735", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f383fabae772499087b7e0ae6740783ba3960735"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/419c2343335244b2f6b79de5e3fae1355283da0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/419c2343335244b2f6b79de5e3fae1355283da0a", "html_url": "https://github.com/rust-lang/rust/commit/419c2343335244b2f6b79de5e3fae1355283da0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/419c2343335244b2f6b79de5e3fae1355283da0a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1cfa51ef5d1de85c555e3fb2722a64612cf40ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1cfa51ef5d1de85c555e3fb2722a64612cf40ca", "html_url": "https://github.com/rust-lang/rust/commit/b1cfa51ef5d1de85c555e3fb2722a64612cf40ca"}], "stats": {"total": 112, "additions": 60, "deletions": 52}, "files": [{"sha": "eaf04ec6c2b4b4f0fb138b96fdfe356f0710ac76", "filename": "crates/hir_def/src/macro_expansion_tests/mbe.rs", "status": "modified", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/419c2343335244b2f6b79de5e3fae1355283da0a/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/419c2343335244b2f6b79de5e3fae1355283da0a/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs?ref=419c2343335244b2f6b79de5e3fae1355283da0a", "patch": "@@ -415,3 +415,63 @@ x![(a b)];\n \"#]],\n     )\n }\n+\n+#[test]\n+fn test_expand_to_item_list() {\n+    check(\n+        r#\"\n+macro_rules! structs {\n+    ($($i:ident),*) => { $(struct $i { field: u32 } )* }\n+}\n+\n+// +tree\n+structs!(Foo, Bar);\n+            \"#,\n+        expect![[r#\"\n+macro_rules! structs {\n+    ($($i:ident),*) => { $(struct $i { field: u32 } )* }\n+}\n+\n+struct Foo {\n+    field:u32\n+}\n+struct Bar {\n+    field:u32\n+}\n+// MACRO_ITEMS@0..40\n+//   STRUCT@0..20\n+//     STRUCT_KW@0..6 \"struct\"\n+//     NAME@6..9\n+//       IDENT@6..9 \"Foo\"\n+//     RECORD_FIELD_LIST@9..20\n+//       L_CURLY@9..10 \"{\"\n+//       RECORD_FIELD@10..19\n+//         NAME@10..15\n+//           IDENT@10..15 \"field\"\n+//         COLON@15..16 \":\"\n+//         PATH_TYPE@16..19\n+//           PATH@16..19\n+//             PATH_SEGMENT@16..19\n+//               NAME_REF@16..19\n+//                 IDENT@16..19 \"u32\"\n+//       R_CURLY@19..20 \"}\"\n+//   STRUCT@20..40\n+//     STRUCT_KW@20..26 \"struct\"\n+//     NAME@26..29\n+//       IDENT@26..29 \"Bar\"\n+//     RECORD_FIELD_LIST@29..40\n+//       L_CURLY@29..30 \"{\"\n+//       RECORD_FIELD@30..39\n+//         NAME@30..35\n+//           IDENT@30..35 \"field\"\n+//         COLON@35..36 \":\"\n+//         PATH_TYPE@36..39\n+//           PATH@36..39\n+//             PATH_SEGMENT@36..39\n+//               NAME_REF@36..39\n+//                 IDENT@36..39 \"u32\"\n+//       R_CURLY@39..40 \"}\"\n+\n+            \"#]],\n+    );\n+}"}, {"sha": "cb4b73d610c12a02018c196eafeed179e96d7a21", "filename": "crates/mbe/src/tests/expand.rs", "status": "modified", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/419c2343335244b2f6b79de5e3fae1355283da0a/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/419c2343335244b2f6b79de5e3fae1355283da0a/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs?ref=419c2343335244b2f6b79de5e3fae1355283da0a", "patch": "@@ -71,58 +71,6 @@ macro_rules! foobar {\n     assert_eq!(get_text(tt::TokenId(13), T!['{']), \"{\");\n }\n \n-#[test]\n-fn test_expand_to_item_list() {\n-    let tree = parse_macro(\n-        \"\n-            macro_rules! structs {\n-                ($($i:ident),*) => {\n-                    $(struct $i { field: u32 } )*\n-                }\n-            }\n-            \",\n-    )\n-    .expand_items(\"structs!(Foo, Bar);\");\n-    assert_eq!(\n-        format!(\"{:#?}\", tree).trim(),\n-        r#\"\n-MACRO_ITEMS@0..40\n-  STRUCT@0..20\n-    STRUCT_KW@0..6 \"struct\"\n-    NAME@6..9\n-      IDENT@6..9 \"Foo\"\n-    RECORD_FIELD_LIST@9..20\n-      L_CURLY@9..10 \"{\"\n-      RECORD_FIELD@10..19\n-        NAME@10..15\n-          IDENT@10..15 \"field\"\n-        COLON@15..16 \":\"\n-        PATH_TYPE@16..19\n-          PATH@16..19\n-            PATH_SEGMENT@16..19\n-              NAME_REF@16..19\n-                IDENT@16..19 \"u32\"\n-      R_CURLY@19..20 \"}\"\n-  STRUCT@20..40\n-    STRUCT_KW@20..26 \"struct\"\n-    NAME@26..29\n-      IDENT@26..29 \"Bar\"\n-    RECORD_FIELD_LIST@29..40\n-      L_CURLY@29..30 \"{\"\n-      RECORD_FIELD@30..39\n-        NAME@30..35\n-          IDENT@30..35 \"field\"\n-        COLON@35..36 \":\"\n-        PATH_TYPE@36..39\n-          PATH@36..39\n-            PATH_SEGMENT@36..39\n-              NAME_REF@36..39\n-                IDENT@36..39 \"u32\"\n-      R_CURLY@39..40 \"}\"\"#\n-            .trim()\n-    );\n-}\n-\n fn to_subtree(tt: &tt::TokenTree) -> &tt::Subtree {\n     if let tt::TokenTree::Subtree(subtree) = tt {\n         return subtree;"}]}