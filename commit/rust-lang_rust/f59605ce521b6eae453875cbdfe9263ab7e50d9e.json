{"sha": "f59605ce521b6eae453875cbdfe9263ab7e50d9e", "node_id": "C_kwDOAAsO6NoAKGY1OTYwNWNlNTIxYjZlYWU0NTM4NzVjYmRmZTkyNjNhYjdlNTBkOWU", "commit": {"author": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2022-09-05T22:39:32Z"}, "committer": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2022-09-11T03:05:56Z"}, "message": "In CI set the GC interval to 1 for Linux only", "tree": {"sha": "fb934fd3e6b8f35c9d35694c975d4280099757f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb934fd3e6b8f35c9d35694c975d4280099757f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f59605ce521b6eae453875cbdfe9263ab7e50d9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f59605ce521b6eae453875cbdfe9263ab7e50d9e", "html_url": "https://github.com/rust-lang/rust/commit/f59605ce521b6eae453875cbdfe9263ab7e50d9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f59605ce521b6eae453875cbdfe9263ab7e50d9e/comments", "author": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d61d4c6af76e10a45cd743048d56f7c35d0b22ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/d61d4c6af76e10a45cd743048d56f7c35d0b22ea", "html_url": "https://github.com/rust-lang/rust/commit/d61d4c6af76e10a45cd743048d56f7c35d0b22ea"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "fde575922dd11111d724f30069f11347b9764616", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f59605ce521b6eae453875cbdfe9263ab7e50d9e/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/f59605ce521b6eae453875cbdfe9263ab7e50d9e/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=f59605ce521b6eae453875cbdfe9263ab7e50d9e", "patch": "@@ -34,6 +34,10 @@ jobs:\n     steps:\n       - uses: actions/checkout@v3\n \n+      - name: Set the tag GC interval to 1 on linux\n+        if: runner.os == 'macOS'\n+        run: echo \"MIRIFLAGS=-Zmiri-tag-gc=1\" >> $GITHUB_ENV\n+\n       # We install gnu-tar because BSD tar is buggy on macOS builders of GHA.\n       # See <https://github.com/actions/cache/issues/403>.\n       - name: Install GNU tar"}, {"sha": "aa322e54a31da02da19282f7ee4d2b55761c5c53", "filename": "ci.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f59605ce521b6eae453875cbdfe9263ab7e50d9e/ci.sh", "raw_url": "https://github.com/rust-lang/rust/raw/f59605ce521b6eae453875cbdfe9263ab7e50d9e/ci.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci.sh?ref=f59605ce521b6eae453875cbdfe9263ab7e50d9e", "patch": "@@ -31,7 +31,7 @@ function run_tests {\n     # optimizations up all the way).\n     # Optimizations change diagnostics (mostly backtraces), so we don't check them\n     #FIXME(#2155): we want to only run the pass and panic tests here, not the fail tests.\n-    MIRIFLAGS=\"-O -Zmir-opt-level=4\" MIRI_SKIP_UI_CHECKS=1 ./miri test -- tests/{pass,panic}\n+    MIRIFLAGS=\"${MIRIFLAGS:-} -O -Zmir-opt-level=4\" MIRI_SKIP_UI_CHECKS=1 ./miri test -- tests/{pass,panic}\n   fi\n \n   ## test-cargo-miri"}, {"sha": "60fe2a91adf73d607bbffbe89f99176b0f06a1ce", "filename": "src/machine.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f59605ce521b6eae453875cbdfe9263ab7e50d9e/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f59605ce521b6eae453875cbdfe9263ab7e50d9e/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=f59605ce521b6eae453875cbdfe9263ab7e50d9e", "patch": "@@ -1015,6 +1015,7 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'mir, 'tcx> {\n \n     fn before_terminator(ecx: &mut InterpCx<'mir, 'tcx, Self>) -> InterpResult<'tcx> {\n         ecx.machine.basic_block_count += 1u64; // a u64 that is only incremented by 1 will \"never\" overflow\n+        ecx.machine.since_gc += 1;\n         // Possibly report our progress.\n         if let Some(report_progress) = ecx.machine.report_progress {\n             if ecx.machine.basic_block_count % u64::from(report_progress) == 0 {\n@@ -1028,13 +1029,9 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'mir, 'tcx> {\n         // stacks.\n         // When debug assertions are enabled, run the GC as often as possible so that any cases\n         // where it mistakenly removes an important tag become visible.\n-        if cfg!(debug_assertions)\n-            || (ecx.machine.gc_interval > 0 && ecx.machine.since_gc >= ecx.machine.gc_interval)\n-        {\n+        if ecx.machine.gc_interval > 0 && ecx.machine.since_gc >= ecx.machine.gc_interval {\n             ecx.machine.since_gc = 0;\n             ecx.garbage_collect_tags()?;\n-        } else {\n-            ecx.machine.since_gc += 1;\n         }\n \n         // These are our preemption points."}]}