{"sha": "1b132a2f413f2bd1ae7dea0e8f3519b2765a5a71", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiMTMyYTJmNDEzZjJiZDFhZTdkZWEwZThmMzUxOWIyNzY1YTVhNzE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-02T21:24:27Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-02T21:31:21Z"}, "message": "be less British", "tree": {"sha": "eeef45faa7fdf70db61f3021fa2d3b7beeca5857", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eeef45faa7fdf70db61f3021fa2d3b7beeca5857"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b132a2f413f2bd1ae7dea0e8f3519b2765a5a71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b132a2f413f2bd1ae7dea0e8f3519b2765a5a71", "html_url": "https://github.com/rust-lang/rust/commit/1b132a2f413f2bd1ae7dea0e8f3519b2765a5a71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b132a2f413f2bd1ae7dea0e8f3519b2765a5a71/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf048cc115860cc110865f460f3f2b9b4308ad92", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf048cc115860cc110865f460f3f2b9b4308ad92", "html_url": "https://github.com/rust-lang/rust/commit/cf048cc115860cc110865f460f3f2b9b4308ad92"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "ab1af155a4bc49555edee1b1f4bdae76bdf8b6df", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1b132a2f413f2bd1ae7dea0e8f3519b2765a5a71/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b132a2f413f2bd1ae7dea0e8f3519b2765a5a71/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=1b132a2f413f2bd1ae7dea0e8f3519b2765a5a71", "patch": "@@ -341,16 +341,16 @@ impl fmt::Debug for InvalidProgramInfo<'tcx> {\n }\n \n #[derive(Clone, RustcEncodable, RustcDecodable, HashStable)]\n-pub enum UndefinedBehaviourInfo {\n+pub enum UndefinedBehaviorInfo {\n     /// Handle cases which for which we do not have a fixed variant.\n     Ub(String),\n     /// Unreachable code was executed.\n     Unreachable,\n }\n \n-impl fmt::Debug for UndefinedBehaviourInfo {\n+impl fmt::Debug for UndefinedBehaviorInfo {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        use UndefinedBehaviourInfo::*;\n+        use UndefinedBehaviorInfo::*;\n         match self {\n             Ub(ref msg) =>\n                 write!(f, \"{}\", msg),\n@@ -572,7 +572,7 @@ pub enum InterpError<'tcx> {\n     /// The program panicked.\n     Panic(PanicInfo<u64>),\n     /// The program caused undefined behavior.\n-    UndefinedBehaviour(UndefinedBehaviourInfo),\n+    UndefinedBehavior(UndefinedBehaviorInfo),\n     /// The program did something the interpreter does not support (some of these *might* be UB\n     /// but the interpreter is not sure).\n     Unsupported(UnsupportedOpInfo<'tcx>),\n@@ -603,7 +603,7 @@ impl fmt::Debug for InterpError<'_> {\n                 write!(f, \"{:?}\", msg),\n             InvalidProgram(ref msg) =>\n                 write!(f, \"{:?}\", msg),\n-            UndefinedBehaviour(ref msg) =>\n+            UndefinedBehavior(ref msg) =>\n                 write!(f, \"{:?}\", msg),\n             ResourceExhaustion(ref msg) =>\n                 write!(f, \"{:?}\", msg),"}, {"sha": "855232b333483e4b0a6185af4a311da5eb77c0fd", "filename": "src/librustc/mir/interpret/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1b132a2f413f2bd1ae7dea0e8f3519b2765a5a71/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b132a2f413f2bd1ae7dea0e8f3519b2765a5a71/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs?ref=1b132a2f413f2bd1ae7dea0e8f3519b2765a5a71", "patch": "@@ -21,8 +21,8 @@ macro_rules! err_inval {\n #[macro_export]\n macro_rules! err_ub {\n     ($($tt:tt)*) => {\n-        $crate::mir::interpret::InterpError::UndefinedBehaviour(\n-            $crate::mir::interpret::UndefinedBehaviourInfo::$($tt)*\n+        $crate::mir::interpret::InterpError::UndefinedBehavior(\n+            $crate::mir::interpret::UndefinedBehaviorInfo::$($tt)*\n         )\n     };\n }\n@@ -78,7 +78,7 @@ mod pointer;\n pub use self::error::{\n     InterpErrorInfo, InterpResult, InterpError, AssertMessage, ConstEvalErr, struct_error,\n     FrameInfo, ConstEvalRawResult, ConstEvalResult, ErrorHandled, PanicInfo, UnsupportedOpInfo,\n-    InvalidProgramInfo, ResourceExhaustionInfo, UndefinedBehaviourInfo,\n+    InvalidProgramInfo, ResourceExhaustionInfo, UndefinedBehaviorInfo,\n };\n \n pub use self::value::{Scalar, ScalarMaybeUndef, RawConst, ConstValue};"}, {"sha": "38d26d0ba50a483ee94f9699334f9b6b35d3bf42", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b132a2f413f2bd1ae7dea0e8f3519b2765a5a71/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b132a2f413f2bd1ae7dea0e8f3519b2765a5a71/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=1b132a2f413f2bd1ae7dea0e8f3519b2765a5a71", "patch": "@@ -260,7 +260,7 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n                 match diagnostic.error {\n                     Exit(_) => bug!(\"the CTFE program cannot exit\"),\n                     Unsupported(_)\n-                    | UndefinedBehaviour(_)\n+                    | UndefinedBehavior(_)\n                     | InvalidProgram(_)\n                     | ResourceExhaustion(_) => {\n                         // Ignore these errors."}]}