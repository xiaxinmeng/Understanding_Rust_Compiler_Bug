{"sha": "3cf413e4c29f4100efbf6841e2fb3876565f5638", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjZjQxM2U0YzI5ZjQxMDBlZmJmNjg0MWUyZmIzODc2NTY1ZjU2Mzg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-01-30T11:22:54Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-01-30T11:22:54Z"}, "message": "remove inadequate comment", "tree": {"sha": "1b0e62e6c9dbc4e4aa7cd5ab8882d1d6d33f99fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b0e62e6c9dbc4e4aa7cd5ab8882d1d6d33f99fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cf413e4c29f4100efbf6841e2fb3876565f5638", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cf413e4c29f4100efbf6841e2fb3876565f5638", "html_url": "https://github.com/rust-lang/rust/commit/3cf413e4c29f4100efbf6841e2fb3876565f5638", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cf413e4c29f4100efbf6841e2fb3876565f5638/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0adfe4d459482240d0614990fcb0ea112d48cf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0adfe4d459482240d0614990fcb0ea112d48cf4", "html_url": "https://github.com/rust-lang/rust/commit/e0adfe4d459482240d0614990fcb0ea112d48cf4"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "a70285d5152a7e7f36e8f7cd69f54ec2645be120", "filename": "tests/run-pass/stacked-borrows/stacked-borrows.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3cf413e4c29f4100efbf6841e2fb3876565f5638/tests%2Frun-pass%2Fstacked-borrows%2Fstacked-borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cf413e4c29f4100efbf6841e2fb3876565f5638/tests%2Frun-pass%2Fstacked-borrows%2Fstacked-borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fstacked-borrows%2Fstacked-borrows.rs?ref=3cf413e4c29f4100efbf6841e2fb3876565f5638", "patch": "@@ -119,9 +119,6 @@ fn direct_mut_to_const_raw() {\n // Make sure that we can create two raw pointers from a mutable reference and use them both.\n fn two_raw() { unsafe {\n     let x = &mut 0;\n-    // Given the implicit reborrows, the only reason this currently works is that we\n-    // do not track raw pointers: The creation of `y2` reborrows `x` and thus pops\n-    // `y1` off the stack.\n     let y1 = x as *mut _;\n     let y2 = x as *mut _;\n     *y1 += 2;"}]}