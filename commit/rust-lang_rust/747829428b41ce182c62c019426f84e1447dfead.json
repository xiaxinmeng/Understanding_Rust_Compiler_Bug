{"sha": "747829428b41ce182c62c019426f84e1447dfead", "node_id": "C_kwDOAAsO6NoAKDc0NzgyOTQyOGI0MWNlMTgyYzYyYzAxOTQyNmY4NGUxNDQ3ZGZlYWQ", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-15T18:50:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-15T18:50:46Z"}, "message": "Rollup merge of #95749 - compiler-errors:ambig, r=oli-obk\n\nonly downgrade selection Error -> Ambiguous if type error is in predicate\n\nThat is, we don't care if there's a TypeError type in the ParamEnv.\n\nFixes #95408", "tree": {"sha": "e23d0eafbde7bddfc4ef6739d4204a24765df900", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e23d0eafbde7bddfc4ef6739d4204a24765df900"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/747829428b41ce182c62c019426f84e1447dfead", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiWb6HCRBK7hj4Ov3rIwAAVlUIACFaJ8C4+XKY617q1G9kP0ER\nD7QArVZzesn5kR9VLW8dNgzCxiRfPjWOvy4jx6AnIKfESvf9yFcs0RsYepqPIDeE\nQew2V1ADWdvNVKXCaIf7sTHRPOPavM4cAHiRARqQ3rn7riVvQdNmPt7EWQMga0Vt\nONE4UydwRNZjMquUYgfMJxFn7duj8BoBvIVr3u+kl/vfaZyVvN6LTgtVSmL1x58q\nid0HzyDLfefpfWPJhRB3JRvx0GCC3VfoohAWim1ecFN+WcWb0W1w3Av/jLSlMvV+\ncoo/LbZI4ZIvPbri86nGNovyLJEqijhoYYxXpWha89Ps87NpX3+s5T2l6+pjIfk=\n=yuks\n-----END PGP SIGNATURE-----\n", "payload": "tree e23d0eafbde7bddfc4ef6739d4204a24765df900\nparent bdbf0998f3e6f323b680594cad66c7e792c861f4\nparent 7bd22e29d0d604e594ba03b51bd8c3fc82959215\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1650048646 +0200\ncommitter GitHub <noreply@github.com> 1650048646 +0200\n\nRollup merge of #95749 - compiler-errors:ambig, r=oli-obk\n\nonly downgrade selection Error -> Ambiguous if type error is in predicate\n\nThat is, we don't care if there's a TypeError type in the ParamEnv.\n\nFixes #95408\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/747829428b41ce182c62c019426f84e1447dfead", "html_url": "https://github.com/rust-lang/rust/commit/747829428b41ce182c62c019426f84e1447dfead", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/747829428b41ce182c62c019426f84e1447dfead/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdbf0998f3e6f323b680594cad66c7e792c861f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdbf0998f3e6f323b680594cad66c7e792c861f4", "html_url": "https://github.com/rust-lang/rust/commit/bdbf0998f3e6f323b680594cad66c7e792c861f4"}, {"sha": "7bd22e29d0d604e594ba03b51bd8c3fc82959215", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bd22e29d0d604e594ba03b51bd8c3fc82959215", "html_url": "https://github.com/rust-lang/rust/commit/7bd22e29d0d604e594ba03b51bd8c3fc82959215"}], "stats": {"total": 52, "additions": 25, "deletions": 27}, "files": [{"sha": "dbb6c54fcd93b4962b178e35e1dec680a20083b2", "filename": "compiler/rustc_trait_selection/src/traits/select/candidate_assembly.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/747829428b41ce182c62c019426f84e1447dfead/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/747829428b41ce182c62c019426f84e1447dfead/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs?ref=747829428b41ce182c62c019426f84e1447dfead", "patch": "@@ -231,8 +231,8 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n             // `Err(Unimplemented)` to `Ok(None)`. This helps us avoid\n             // emitting additional spurious errors, since we're guaranteed\n             // to have emitted at least one.\n-            if stack.obligation.references_error() {\n-                debug!(\"no results for error type, treating as ambiguous\");\n+            if stack.obligation.predicate.references_error() {\n+                debug!(?stack.obligation.predicate, \"found error type in predicate, treating as ambiguous\");\n                 return Ok(None);\n             }\n             return Err(Unimplemented);"}, {"sha": "e48ab4aa96fb979fcfbcb5a1ec2e4e9ebc7a0f29", "filename": "src/test/ui/functions-closures/fn-help-with-err-generic-is-not-function.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/747829428b41ce182c62c019426f84e1447dfead/src%2Ftest%2Fui%2Ffunctions-closures%2Ffn-help-with-err-generic-is-not-function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/747829428b41ce182c62c019426f84e1447dfead/src%2Ftest%2Fui%2Ffunctions-closures%2Ffn-help-with-err-generic-is-not-function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffunctions-closures%2Ffn-help-with-err-generic-is-not-function.rs?ref=747829428b41ce182c62c019426f84e1447dfead", "patch": "@@ -8,15 +8,7 @@ where\n     //~^ ERROR cannot find type `T` in this scope\n     //~| NOTE not found in this scope\n {\n-    // The part where it claims that there is no method named `len` is a bug. Feel free to fix it.\n-    // This test is intended to ensure that a different bug, where it claimed\n-    // that `v` was a function, does not regress.\n     fn method(v: Vec<u8>) { v.len(); }\n-    //~^ ERROR type annotations needed\n-    //~| NOTE cannot infer type\n-    //~| NOTE type must be known at this point\n-    //~| ERROR no method named `len`\n-    //~| NOTE private field, not a method\n }\n \n fn main() {}"}, {"sha": "26bdf460f5e4d5c4c3671585607cc821b1ad586b", "filename": "src/test/ui/functions-closures/fn-help-with-err-generic-is-not-function.stderr", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/747829428b41ce182c62c019426f84e1447dfead/src%2Ftest%2Fui%2Ffunctions-closures%2Ffn-help-with-err-generic-is-not-function.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/747829428b41ce182c62c019426f84e1447dfead/src%2Ftest%2Fui%2Ffunctions-closures%2Ffn-help-with-err-generic-is-not-function.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffunctions-closures%2Ffn-help-with-err-generic-is-not-function.stderr?ref=747829428b41ce182c62c019426f84e1447dfead", "patch": "@@ -12,21 +12,6 @@ error[E0412]: cannot find type `T` in this scope\n LL |     T: Copy,\n    |     ^ not found in this scope\n \n-error[E0282]: type annotations needed\n-  --> $DIR/fn-help-with-err-generic-is-not-function.rs:14:31\n-   |\n-LL |     fn method(v: Vec<u8>) { v.len(); }\n-   |                               ^^^ cannot infer type\n-   |\n-   = note: type must be known at this point\n-\n-error[E0599]: no method named `len` found for struct `Vec<u8>` in the current scope\n-  --> $DIR/fn-help-with-err-generic-is-not-function.rs:14:31\n-   |\n-LL |     fn method(v: Vec<u8>) { v.len(); }\n-   |                               ^^^ private field, not a method\n-\n-error: aborting due to 4 previous errors\n+error: aborting due to 2 previous errors\n \n-Some errors have detailed explanations: E0282, E0412, E0599.\n-For more information about an error, try `rustc --explain E0282`.\n+For more information about this error, try `rustc --explain E0412`."}, {"sha": "ec96c61c63e3ab813b2a025f3f9cd0ba993d72be", "filename": "src/test/ui/typeck/autoderef-with-param-env-error.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/747829428b41ce182c62c019426f84e1447dfead/src%2Ftest%2Fui%2Ftypeck%2Fautoderef-with-param-env-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/747829428b41ce182c62c019426f84e1447dfead/src%2Ftest%2Fui%2Ftypeck%2Fautoderef-with-param-env-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fautoderef-with-param-env-error.rs?ref=747829428b41ce182c62c019426f84e1447dfead", "patch": "@@ -0,0 +1,9 @@\n+fn foo()\n+where\n+    T: Send,\n+    //~^ cannot find type `T` in this scope\n+{\n+    let s = \"abc\".to_string();\n+}\n+\n+fn main() {}"}, {"sha": "cde800336dd3d5ac813e0ffe17de1535cbfe5aeb", "filename": "src/test/ui/typeck/autoderef-with-param-env-error.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/747829428b41ce182c62c019426f84e1447dfead/src%2Ftest%2Fui%2Ftypeck%2Fautoderef-with-param-env-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/747829428b41ce182c62c019426f84e1447dfead/src%2Ftest%2Fui%2Ftypeck%2Fautoderef-with-param-env-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fautoderef-with-param-env-error.stderr?ref=747829428b41ce182c62c019426f84e1447dfead", "patch": "@@ -0,0 +1,12 @@\n+error[E0412]: cannot find type `T` in this scope\n+  --> $DIR/autoderef-with-param-env-error.rs:3:5\n+   |\n+LL | fn foo()\n+   |       - help: you might be missing a type parameter: `<T>`\n+LL | where\n+LL |     T: Send,\n+   |     ^ not found in this scope\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0412`."}]}