{"sha": "1d53340e041c74b3b38dec0011305a36d3f7a9fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkNTMzNDBlMDQxYzc0YjNiMzhkZWMwMDExMzA1YTM2ZDNmN2E5ZmQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-29T23:38:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-29T23:38:29Z"}, "message": "Rollup merge of #74904 - joshtriplett:typo-fix, r=jonas-schievink\n\nFix some typos in src/librustdoc/clean/auto_trait.rs", "tree": {"sha": "0c970b8f54c149cf5f454ef1d83ab5bc64315f46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c970b8f54c149cf5f454ef1d83ab5bc64315f46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d53340e041c74b3b38dec0011305a36d3f7a9fd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfIgh2CRBK7hj4Ov3rIwAAdHIIAKUX9DWs7Y4/00J77sEhF4Ha\no1iSSROreyCsqf5/U8E0SZDK6L34UMuPFMNc3gbukD5LtJXeDkUTdD6rSZSyCug0\nRSWKkwWkfeQDjn8qarO8N8KNb2TIm/YPBYarZUXrhBH+kGTP/aUIQUGslWxcdBpf\ncGJsTiKVXITfiXA2+9RRWjTZcYpVy8ot4FOEURMU5Qf0fGM6fHILMkVY02co1s0N\nTAb1IzsfTjs89bvCnauj//QQUUlgqoRw4LwR9Ov6+O42uckymjil64tL7e1BCu0x\nVroWgljOL7uYRiudtBaZ4kYi8CQMwwEYpTTHa6ZxYGIH9stXsnj+x+gfoh5U/Ws=\n=wSya\n-----END PGP SIGNATURE-----\n", "payload": "tree 0c970b8f54c149cf5f454ef1d83ab5bc64315f46\nparent 0f9b7bd80fbb96c7743b86b154f8882918b5737f\nparent 82766cb78ae41547e1e331ef0cb417a637ea0e6e\nauthor Manish Goregaokar <manishsmail@gmail.com> 1596065909 -0700\ncommitter GitHub <noreply@github.com> 1596065909 -0700\n\nRollup merge of #74904 - joshtriplett:typo-fix, r=jonas-schievink\n\nFix some typos in src/librustdoc/clean/auto_trait.rs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d53340e041c74b3b38dec0011305a36d3f7a9fd", "html_url": "https://github.com/rust-lang/rust/commit/1d53340e041c74b3b38dec0011305a36d3f7a9fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d53340e041c74b3b38dec0011305a36d3f7a9fd/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f9b7bd80fbb96c7743b86b154f8882918b5737f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f9b7bd80fbb96c7743b86b154f8882918b5737f", "html_url": "https://github.com/rust-lang/rust/commit/0f9b7bd80fbb96c7743b86b154f8882918b5737f"}, {"sha": "82766cb78ae41547e1e331ef0cb417a637ea0e6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/82766cb78ae41547e1e331ef0cb417a637ea0e6e", "html_url": "https://github.com/rust-lang/rust/commit/82766cb78ae41547e1e331ef0cb417a637ea0e6e"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "b170b4131464af2947f850c7ffd99ee989ad5109", "filename": "src/librustdoc/clean/auto_trait.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1d53340e041c74b3b38dec0011305a36d3f7a9fd/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d53340e041c74b3b38dec0011305a36d3f7a9fd/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs?ref=1d53340e041c74b3b38dec0011305a36d3f7a9fd", "patch": "@@ -430,14 +430,14 @@ impl<'a, 'tcx> AutoTraitFinder<'a, 'tcx> {\n     }\n \n     // Converts the calculated ParamEnv and lifetime information to a clean::Generics, suitable for\n-    // display on the docs page. Cleaning the Predicates produces sub-optimal WherePredicate's,\n+    // display on the docs page. Cleaning the Predicates produces sub-optimal `WherePredicate`s,\n     // so we fix them up:\n     //\n     // * Multiple bounds for the same type are coalesced into one: e.g., 'T: Copy', 'T: Debug'\n     // becomes 'T: Copy + Debug'\n     // * Fn bounds are handled specially - instead of leaving it as 'T: Fn(), <T as Fn::Output> =\n     // K', we use the dedicated syntax 'T: Fn() -> K'\n-    // * We explcitly add a '?Sized' bound if we didn't find any 'Sized' predicates for a type\n+    // * We explicitly add a '?Sized' bound if we didn't find any 'Sized' predicates for a type\n     fn param_env_to_generics(\n         &self,\n         tcx: TyCtxt<'tcx>,\n@@ -588,7 +588,7 @@ impl<'a, 'tcx> AutoTraitFinder<'a, 'tcx> {\n                                         .args;\n \n                                     match args {\n-                                        // Convert somethiung like '<T as Iterator::Item> = u8'\n+                                        // Convert something like '<T as Iterator::Item> = u8'\n                                         // to 'T: Iterator<Item=u8>'\n                                         GenericArgs::AngleBracketed {\n                                             ref mut bindings, ..\n@@ -712,7 +712,7 @@ impl<'a, 'tcx> AutoTraitFinder<'a, 'tcx> {\n     // since FxHasher has different behavior for 32-bit and 64-bit platforms.\n     //\n     // Obviously, it's extremely undesirable for documentation rendering\n-    // to be depndent on the platform it's run on. Apart from being confusing\n+    // to be dependent on the platform it's run on. Apart from being confusing\n     // to end users, it makes writing tests much more difficult, as predicates\n     // can appear in any order in the final result.\n     //"}]}