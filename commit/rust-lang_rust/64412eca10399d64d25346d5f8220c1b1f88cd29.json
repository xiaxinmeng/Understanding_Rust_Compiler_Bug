{"sha": "64412eca10399d64d25346d5f8220c1b1f88cd29", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0NDEyZWNhMTAzOTlkNjRkMjUzNDZkNWY4MjIwYzFiMWY4OGNkMjk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-04-25T20:30:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-04-25T20:30:36Z"}, "message": "auto merge of #6055 : cmr/rust/incoming, r=graydon,brson", "tree": {"sha": "60239e0ddcee700ec2bccabeffe6a3a4df6c88e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60239e0ddcee700ec2bccabeffe6a3a4df6c88e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64412eca10399d64d25346d5f8220c1b1f88cd29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64412eca10399d64d25346d5f8220c1b1f88cd29", "html_url": "https://github.com/rust-lang/rust/commit/64412eca10399d64d25346d5f8220c1b1f88cd29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64412eca10399d64d25346d5f8220c1b1f88cd29/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0604468fd540b4356ba28bf9a6d26b56b73d5b3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0604468fd540b4356ba28bf9a6d26b56b73d5b3b", "html_url": "https://github.com/rust-lang/rust/commit/0604468fd540b4356ba28bf9a6d26b56b73d5b3b"}, {"sha": "91fb7b282de4877e72f22f42b4535e3c76732264", "url": "https://api.github.com/repos/rust-lang/rust/commits/91fb7b282de4877e72f22f42b4535e3c76732264", "html_url": "https://github.com/rust-lang/rust/commit/91fb7b282de4877e72f22f42b4535e3c76732264"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "a56f69f4ae9fff4465d0a1029976c3cce041f266", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/64412eca10399d64d25346d5f8220c1b1f88cd29/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64412eca10399d64d25346d5f8220c1b1f88cd29/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=64412eca10399d64d25346d5f8220c1b1f88cd29", "patch": "@@ -173,6 +173,7 @@ pub fn from_slice<T:Copy>(t: &[T]) -> ~[T] {\n     from_fn(t.len(), |i| t[i])\n }\n \n+/// Creates a new vector with a capacity of `capacity`\n pub fn with_capacity<T>(capacity: uint) -> ~[T] {\n     let mut vec = ~[];\n     reserve(&mut vec, capacity);\n@@ -1565,6 +1566,16 @@ pub fn each_permutation<T:Copy>(v: &[T], put: &fn(ts: &[T]) -> bool) {\n     }\n }\n \n+// see doc below\n+#[cfg(stage0)] // XXX: lifetimes!\n+pub fn windowed<T>(n: uint, v: &[T], it: &fn(&[T]) -> bool) {\n+    assert!(1u <= n);\n+    if n > v.len() { return; }\n+    for uint::range(0, v.len() - n + 1) |i| {\n+        if !it(v.slice(i, i+n)) { return }\n+    }\n+}\n+\n /**\n  * Iterate over all contiguous windows of length `n` of the vector `v`.\n  *\n@@ -1579,14 +1590,6 @@ pub fn each_permutation<T:Copy>(v: &[T], put: &fn(ts: &[T]) -> bool) {\n  * ~~~\n  *\n  */\n-#[cfg(stage0)] // XXX: lifetimes!\n-pub fn windowed<T>(n: uint, v: &[T], it: &fn(&[T]) -> bool) {\n-    assert!(1u <= n);\n-    if n > v.len() { return; }\n-    for uint::range(0, v.len() - n + 1) |i| {\n-        if !it(v.slice(i, i+n)) { return }\n-    }\n-}\n #[cfg(stage1)]\n #[cfg(stage2)]\n #[cfg(stage3)]"}]}