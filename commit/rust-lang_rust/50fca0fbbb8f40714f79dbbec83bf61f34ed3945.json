{"sha": "50fca0fbbb8f40714f79dbbec83bf61f34ed3945", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwZmNhMGZiYmI4ZjQwNzE0Zjc5ZGJiZWM4M2JmNjFmMzRlZDM5NDU=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-04-01T12:58:31Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-04-01T12:58:31Z"}, "message": "std: fix Cell's Show instance.\n\nPreviously it was printing the address of the Unsafe contained in the\nCell (i.e. the address of the Cell itself). This is clearly useless, and\nwas presumably a mistake due to writing `*&` instead of `&*`.\n\nHowever, this later expression is likely also incorrect, since it takes\na reference into a Cell while other user code is executing (i.e. the\nShow instance for the contained type), hence the contents should just be\ncopied out.", "tree": {"sha": "557e59830af936367fb71b3077738927ca22071b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/557e59830af936367fb71b3077738927ca22071b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50fca0fbbb8f40714f79dbbec83bf61f34ed3945", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50fca0fbbb8f40714f79dbbec83bf61f34ed3945", "html_url": "https://github.com/rust-lang/rust/commit/50fca0fbbb8f40714f79dbbec83bf61f34ed3945", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50fca0fbbb8f40714f79dbbec83bf61f34ed3945/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8ef9fd9c9f642ce7b8aed82782a1ed745d08d64", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8ef9fd9c9f642ce7b8aed82782a1ed745d08d64", "html_url": "https://github.com/rust-lang/rust/commit/b8ef9fd9c9f642ce7b8aed82782a1ed745d08d64"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "eb114e895103aca49f89a243df8ea2b898284ebc", "filename": "src/libstd/cell.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/50fca0fbbb8f40714f79dbbec83bf61f34ed3945/src%2Flibstd%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50fca0fbbb8f40714f79dbbec83bf61f34ed3945/src%2Flibstd%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcell.rs?ref=50fca0fbbb8f40714f79dbbec83bf61f34ed3945", "patch": "@@ -61,9 +61,9 @@ impl<T:Eq + Copy> Eq for Cell<T> {\n     }\n }\n \n-impl<T: fmt::Show> fmt::Show for Cell<T> {\n+impl<T: Copy + fmt::Show> fmt::Show for Cell<T> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        write!(f.buf, r\"Cell \\{ value: {} \\}\", unsafe{*&self.value.get()})\n+        write!(f.buf, r\"Cell \\{ value: {} \\}\", self.get())\n     }\n }\n \n@@ -265,6 +265,17 @@ mod test {\n         assert_eq!(y.get(), (30, 40));\n     }\n \n+    #[test]\n+    fn cell_has_sensible_show() {\n+        use str::StrSlice;\n+\n+        let x = Cell::new(\"foo bar\");\n+        assert!(format!(\"{}\", x).contains(x.get()));\n+\n+        x.set(\"baz qux\");\n+        assert!(format!(\"{}\", x).contains(x.get()));\n+    }\n+\n     #[test]\n     fn double_imm_borrow() {\n         let x = RefCell::new(0);"}]}