{"sha": "b80576fba633e1fc214c9f6900d7ca3424bda6d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4MDU3NmZiYTYzM2UxZmMyMTRjOWY2OTAwZDdjYTM0MjRiZGE2ZDA=", "commit": {"author": {"name": "Takayuki Nakata", "email": "f.seasons017@gmail.com", "date": "2020-09-07T23:34:51Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-09-10T16:05:04Z"}, "message": "Some refactoring", "tree": {"sha": "05f36218b3c6abbc496315b345faa29702608832", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05f36218b3c6abbc496315b345faa29702608832"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b80576fba633e1fc214c9f6900d7ca3424bda6d0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl9aTrAACgkQaTCGhp1Q\nZjf4ThAAiOLoZONJ7QZu4Yv31Fm3FXb5a/0fqRQO1LcDOk6LQLwzqpZDSa3leNbn\nKSJYsVpWaqpnskTRtT+2wwpXM/heGt/KGoHGXrDElo8VgnXhnozducl7shFqvQ9B\n0ZnNujkPG+40OwKjZZ8FEl0irFSI2GvdBBZjSR0UCwmaC7HH4HI265W22xaIPZ6a\njDUBQHlC57HoLkOzMb73MaO6z2UbGMR7wYML5sjtmR8NG9tsmpiZrSVCwg27L3ta\n8Y73kWzDhhvZLmjFf/GELwJ/fXuf6KicRVTlmHz7V9D+bGWsbHCrAj+XxZuxynQB\nW4nzHEIC0xVtPBzdSZ9WrPTr3LWBuQ0LJkqqe6KgcUJjr4e2sLvx89TnLnjhHcKD\nMrnHPbUyuG5KVgQtrJrBdn8lUNXZ61/ofcx72Sgng7EdUkjrOSL6NtHOdvly6CZO\n1LndElOjdRFbJTyFnTl+zBPogVW45xSvE0z+OdAdqgdKrjkR7s3Ys8fi+YWk/5fm\nG5Jh3X1KiC0Ha3ajmgBxhld9yxt5Jhz8PhnyiYaZ2FLFndEbU+WcraedreRLgr4Y\nOhcJuZRnooWTX5dR9jfHKBrP/j2v+H2S5/Bc+Ud8FI9kjZxP+ulp8R/ErZO+MAX/\nxg0FmZMqVoIVV8qJU+H86+g8oPjVES0EgnJZdp0sRODwHG+c1cI=\n=VoYd\n-----END PGP SIGNATURE-----", "payload": "tree 05f36218b3c6abbc496315b345faa29702608832\nparent 0117ea2b016133145f9e02e27421ac3672b42f57\nauthor Takayuki Nakata <f.seasons017@gmail.com> 1599521691 +0900\ncommitter flip1995 <hello@philkrones.com> 1599753904 +0200\n\nSome refactoring\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b80576fba633e1fc214c9f6900d7ca3424bda6d0", "html_url": "https://github.com/rust-lang/rust/commit/b80576fba633e1fc214c9f6900d7ca3424bda6d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b80576fba633e1fc214c9f6900d7ca3424bda6d0/comments", "author": {"login": "giraffate", "id": 17407489, "node_id": "MDQ6VXNlcjE3NDA3NDg5", "avatar_url": "https://avatars.githubusercontent.com/u/17407489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giraffate", "html_url": "https://github.com/giraffate", "followers_url": "https://api.github.com/users/giraffate/followers", "following_url": "https://api.github.com/users/giraffate/following{/other_user}", "gists_url": "https://api.github.com/users/giraffate/gists{/gist_id}", "starred_url": "https://api.github.com/users/giraffate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giraffate/subscriptions", "organizations_url": "https://api.github.com/users/giraffate/orgs", "repos_url": "https://api.github.com/users/giraffate/repos", "events_url": "https://api.github.com/users/giraffate/events{/privacy}", "received_events_url": "https://api.github.com/users/giraffate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0117ea2b016133145f9e02e27421ac3672b42f57", "url": "https://api.github.com/repos/rust-lang/rust/commits/0117ea2b016133145f9e02e27421ac3672b42f57", "html_url": "https://github.com/rust-lang/rust/commit/0117ea2b016133145f9e02e27421ac3672b42f57"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "c59185bd7bd153c2b5acf0a2841356f7503ad192", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b80576fba633e1fc214c9f6900d7ca3424bda6d0/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b80576fba633e1fc214c9f6900d7ca3424bda6d0/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=b80576fba633e1fc214c9f6900d7ca3424bda6d0", "patch": "@@ -1131,6 +1131,10 @@ fn detect_same_item_push<'tcx>(\n     body: &'tcx Expr<'_>,\n     _: &'tcx Expr<'_>,\n ) {\n+    if !matches!(pat.kind, PatKind::Wild) {\n+        return;\n+    }\n+\n     // Determine whether it is safe to lint the body\n     let mut same_item_push_visitor = SameItemPushVisitor {\n         should_lint: true,\n@@ -1149,8 +1153,8 @@ fn detect_same_item_push<'tcx>(\n                 .map_or(false, |id| implements_trait(cx, ty, id, &[]))\n             {\n                 // Make sure that the push does not involve possibly mutating values\n-                if let PatKind::Wild = pat.kind {\n-                    if let ExprKind::Path(ref qpath) = pushed_item.kind {\n+                match pushed_item.kind {\n+                    ExprKind::Path(ref qpath) => {\n                         match qpath_res(cx, qpath, pushed_item.hir_id) {\n                             // immutable bindings that are initialized with literal or constant\n                             Res::Local(hir_id) => {\n@@ -1161,7 +1165,7 @@ fn detect_same_item_push<'tcx>(\n                                     if !matches!(bind_ann, BindingAnnotation::RefMut | BindingAnnotation::Mutable);\n                                     let parent_node = cx.tcx.hir().get_parent_node(hir_id);\n                                     if let Some(Node::Local(parent_let_expr)) = cx.tcx.hir().find(parent_node);\n-                                    if let rustc_hir::Local { init: Some(init), .. } = parent_let_expr;\n+                                    if let Some(init) = parent_let_expr.init;\n                                     then {\n                                         match init.kind {\n                                             // immutable bindings that are initialized with literal\n@@ -1181,10 +1185,9 @@ fn detect_same_item_push<'tcx>(\n                             Res::Def(DefKind::Const, ..) => emit_lint(cx, vec, pushed_item),\n                             _ => {},\n                         }\n-                    } else if let ExprKind::Lit(..) = pushed_item.kind {\n-                        // literal\n-                        emit_lint(cx, vec, pushed_item);\n-                    }\n+                    },\n+                    ExprKind::Lit(..) => emit_lint(cx, vec, pushed_item),\n+                    _ => {},\n                 }\n             }\n         }"}]}