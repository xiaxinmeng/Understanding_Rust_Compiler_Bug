{"sha": "43fd6446add0bcf237f3fe15b7d715eceee2a08c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzZmQ2NDQ2YWRkMGJjZjIzN2YzZmUxNWI3ZDcxNWVjZWVlMmEwOGM=", "commit": {"author": {"name": "Ricky Taylor", "email": "rickytaylor26@gmail.com", "date": "2014-11-08T21:59:09Z"}, "committer": {"name": "Ricky Taylor", "email": "rickytaylor26@gmail.com", "date": "2014-11-13T22:38:39Z"}, "message": "Make std::io::Buffer object-safe.\n\n[breaking-change]\nAny uses of Buffer::lines() and Buffer::chars() will need to use the new trait std::io::BufferPrelude.", "tree": {"sha": "6522fd8e643ba0ac20d1a0869da0de95766df24e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6522fd8e643ba0ac20d1a0869da0de95766df24e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43fd6446add0bcf237f3fe15b7d715eceee2a08c", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43fd6446add0bcf237f3fe15b7d715eceee2a08c", "html_url": "https://github.com/rust-lang/rust/commit/43fd6446add0bcf237f3fe15b7d715eceee2a08c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43fd6446add0bcf237f3fe15b7d715eceee2a08c/comments", "author": {"login": "ricky26", "id": 262786, "node_id": "MDQ6VXNlcjI2Mjc4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/262786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricky26", "html_url": "https://github.com/ricky26", "followers_url": "https://api.github.com/users/ricky26/followers", "following_url": "https://api.github.com/users/ricky26/following{/other_user}", "gists_url": "https://api.github.com/users/ricky26/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricky26/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricky26/subscriptions", "organizations_url": "https://api.github.com/users/ricky26/orgs", "repos_url": "https://api.github.com/users/ricky26/repos", "events_url": "https://api.github.com/users/ricky26/events{/privacy}", "received_events_url": "https://api.github.com/users/ricky26/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ricky26", "id": 262786, "node_id": "MDQ6VXNlcjI2Mjc4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/262786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricky26", "html_url": "https://github.com/ricky26", "followers_url": "https://api.github.com/users/ricky26/followers", "following_url": "https://api.github.com/users/ricky26/following{/other_user}", "gists_url": "https://api.github.com/users/ricky26/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricky26/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricky26/subscriptions", "organizations_url": "https://api.github.com/users/ricky26/orgs", "repos_url": "https://api.github.com/users/ricky26/repos", "events_url": "https://api.github.com/users/ricky26/events{/privacy}", "received_events_url": "https://api.github.com/users/ricky26/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15ba87f0314fda5e81603f37ae5f40e2022bcfc1", "url": "https://api.github.com/repos/rust-lang/rust/commits/15ba87f0314fda5e81603f37ae5f40e2022bcfc1", "html_url": "https://github.com/rust-lang/rust/commit/15ba87f0314fda5e81603f37ae5f40e2022bcfc1"}], "stats": {"total": 37, "additions": 25, "deletions": 12}, "files": [{"sha": "54197ab2e01bc73ba9d2b7899d3eff66221aa0e0", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 24, "deletions": 11, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/43fd6446add0bcf237f3fe15b7d715eceee2a08c/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43fd6446add0bcf237f3fe15b7d715eceee2a08c/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=43fd6446add0bcf237f3fe15b7d715eceee2a08c", "patch": "@@ -1402,16 +1402,6 @@ pub trait Buffer: Reader {\n         )\n     }\n \n-    /// Create an iterator that reads a line on each iteration until EOF.\n-    ///\n-    /// # Error\n-    ///\n-    /// Any error other than `EndOfFile` that is produced by the underlying Reader\n-    /// is returned by the iterator and should be handled by the caller.\n-    fn lines<'r>(&'r mut self) -> Lines<'r, Self> {\n-        Lines { buffer: self }\n-    }\n-\n     /// Reads a sequence of bytes leading up to a specified delimiter. Once the\n     /// specified byte is encountered, reading ceases and the bytes up to and\n     /// including the delimiter are returned.\n@@ -1487,17 +1477,36 @@ pub trait Buffer: Reader {\n             None => Err(standard_error(InvalidInput))\n         }\n     }\n+}\n \n+/// Extension methods for the Buffer trait which are included in the prelude.\n+pub trait BufferPrelude {\n     /// Create an iterator that reads a utf8-encoded character on each iteration\n     /// until EOF.\n     ///\n     /// # Error\n     ///\n     /// Any error other than `EndOfFile` that is produced by the underlying Reader\n     /// is returned by the iterator and should be handled by the caller.\n-    fn chars<'r>(&'r mut self) -> Chars<'r, Self> {\n+    fn chars<'r>(&'r mut self) -> Chars<'r, Self>;\n+\n+    /// Create an iterator that reads a line on each iteration until EOF.\n+    ///\n+    /// # Error\n+    ///\n+    /// Any error other than `EndOfFile` that is produced by the underlying Reader\n+    /// is returned by the iterator and should be handled by the caller.\n+    fn lines<'r>(&'r mut self) -> Lines<'r, Self>;\n+}\n+\n+impl<T: Buffer> BufferPrelude for T {\n+    fn chars<'r>(&'r mut self) -> Chars<'r, T> {\n         Chars { buffer: self }\n     }\n+\n+    fn lines<'r>(&'r mut self) -> Lines<'r, T> {\n+        Lines { buffer: self }\n+    }\n }\n \n /// When seeking, the resulting cursor is offset from a base by the offset given\n@@ -1968,4 +1977,8 @@ mod tests {\n         assert_eq!(format!(\"{}\", ALL_PERMISSIONS), \"0777\".to_string());\n         assert_eq!(format!(\"{}\", USER_READ | USER_WRITE | OTHER_WRITE), \"0602\".to_string());\n     }\n+\n+    fn _ensure_buffer_is_object_safe<T: Buffer>(x: &T) -> &Buffer {\n+        x as &Buffer\n+    }\n }"}, {"sha": "2238bedbe68b5b0455c3fa1885699a0791137789", "filename": "src/libstd/prelude.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/43fd6446add0bcf237f3fe15b7d715eceee2a08c/src%2Flibstd%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43fd6446add0bcf237f3fe15b7d715eceee2a08c/src%2Flibstd%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprelude.rs?ref=43fd6446add0bcf237f3fe15b7d715eceee2a08c", "patch": "@@ -75,7 +75,7 @@\n #[doc(no_inline)] pub use path::{GenericPath, Path, PosixPath, WindowsPath};\n #[doc(no_inline)] pub use ptr::{RawPtr, RawMutPtr};\n #[doc(no_inline)] pub use result::{Result, Ok, Err};\n-#[doc(no_inline)] pub use io::{Buffer, Writer, Reader, Seek};\n+#[doc(no_inline)] pub use io::{Buffer, Writer, Reader, Seek, BufferPrelude};\n #[doc(no_inline)] pub use str::{Str, StrVector, StrPrelude};\n #[doc(no_inline)] pub use str::{IntoMaybeOwned, StrAllocating, UnicodeStrPrelude};\n #[doc(no_inline)] pub use to_string::{ToString, IntoStr};"}]}