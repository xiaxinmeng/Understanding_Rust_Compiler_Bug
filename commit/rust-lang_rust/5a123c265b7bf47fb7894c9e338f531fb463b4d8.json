{"sha": "5a123c265b7bf47fb7894c9e338f531fb463b4d8", "node_id": "C_kwDOAAsO6NoAKDVhMTIzYzI2NWI3YmY0N2ZiNzg5NGM5ZTMzOGY1MzFmYjQ2M2I0ZDg", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-12-05T10:18:16Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-01-15T20:17:34Z"}, "message": "Add fast path to `opt_local_def_id`.", "tree": {"sha": "d5091b4d83e22fff295a7471f0f914ea0e6192b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5091b4d83e22fff295a7471f0f914ea0e6192b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a123c265b7bf47fb7894c9e338f531fb463b4d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a123c265b7bf47fb7894c9e338f531fb463b4d8", "html_url": "https://github.com/rust-lang/rust/commit/5a123c265b7bf47fb7894c9e338f531fb463b4d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a123c265b7bf47fb7894c9e338f531fb463b4d8/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec4bcaac450279b029f3480b8b8f1b82ab36a5eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec4bcaac450279b029f3480b8b8f1b82ab36a5eb", "html_url": "https://github.com/rust-lang/rust/commit/ec4bcaac450279b029f3480b8b8f1b82ab36a5eb"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "30c75f35fc3cc8d55ba650497aac2042cfe787fc", "filename": "compiler/rustc_middle/src/hir/map/mod.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5a123c265b7bf47fb7894c9e338f531fb463b4d8/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a123c265b7bf47fb7894c9e338f531fb463b4d8/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs?ref=5a123c265b7bf47fb7894c9e338f531fb463b4d8", "patch": "@@ -200,8 +200,12 @@ impl<'hir> Map<'hir> {\n \n     #[inline]\n     pub fn opt_local_def_id(&self, hir_id: HirId) -> Option<LocalDefId> {\n-        // FIXME(#85914) is this access safe for incr. comp.?\n-        self.tcx.untracked_resolutions.definitions.opt_hir_id_to_local_def_id(hir_id)\n+        if hir_id.local_id == ItemLocalId::new(0) {\n+            Some(hir_id.owner)\n+        } else {\n+            // FIXME(#85914) is this access safe for incr. comp.?\n+            self.tcx.untracked_resolutions.definitions.opt_hir_id_to_local_def_id(hir_id)\n+        }\n     }\n \n     #[inline]"}]}