{"sha": "ed9227abbdb14728777691c0d595a93c57a796bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkOTIyN2FiYmRiMTQ3Mjg3Nzc2OTFjMGQ1OTVhOTNjNTdhNzk2YmY=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-05T22:49:37Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-05T22:49:37Z"}, "message": "Make adjustments for comments", "tree": {"sha": "8e468f8e02e737ac30b25d43d09b2b6cc2a6f356", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e468f8e02e737ac30b25d43d09b2b6cc2a6f356"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed9227abbdb14728777691c0d595a93c57a796bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed9227abbdb14728777691c0d595a93c57a796bf", "html_url": "https://github.com/rust-lang/rust/commit/ed9227abbdb14728777691c0d595a93c57a796bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed9227abbdb14728777691c0d595a93c57a796bf/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c8b3c38f1a5a0270b29fa01f14c9db0b255ea43", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c8b3c38f1a5a0270b29fa01f14c9db0b255ea43", "html_url": "https://github.com/rust-lang/rust/commit/5c8b3c38f1a5a0270b29fa01f14c9db0b255ea43"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "1ebff4115101118c318533d00437da67ce59c6ad", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ed9227abbdb14728777691c0d595a93c57a796bf/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed9227abbdb14728777691c0d595a93c57a796bf/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=ed9227abbdb14728777691c0d595a93c57a796bf", "patch": "@@ -593,9 +593,13 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n             let ty = self.monomorphize(val.ty)?;\n             self.layout_of(ty)\n         })?;\n-        let op = match val.val {\n-            ConstValue::Param(_) => return Err(EvalErrorKind::TooGeneric.into()),\n+        let val = match val.val {\n+            ConstValue::Param(_) => self.monomorphize(val)?.val,\n             ConstValue::Infer(_) => bug!(),\n+            val => val,\n+        };\n+        let op = match val {\n+            ConstValue::Param(_) | ConstValue::Infer(_) => unreachable!(),\n             ConstValue::ByRef(ptr, alloc) => {\n                 // We rely on mutability being set correctly in that allocation to prevent writes\n                 // where none should happen -- and for `static mut`, we copy on demand anyway."}, {"sha": "4350bfcdc7a96978af07ba2242aa83ba2bd1c13b", "filename": "src/librustc_mir/monomorphize/collector.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ed9227abbdb14728777691c0d595a93c57a796bf/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed9227abbdb14728777691c0d595a93c57a796bf/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs?ref=ed9227abbdb14728777691c0d595a93c57a796bf", "patch": "@@ -467,14 +467,13 @@ fn check_type_length_limit<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n {\n     let type_length = instance.substs.types().flat_map(|ty| ty.walk()).count();\n     let const_length = instance.substs.consts()\n-        .filter_map(|ct| {\n-            if let ty::LazyConst::Evaluated(ct) = ct {\n-                Some(ct.ty.walk())\n-            } else {\n-                None\n-            }\n+        .flat_map(|ct| {\n+            let ty = match ct {\n+                ty::LazyConst::Evaluated(ct) => ct.ty,\n+                ty::LazyConst::Unevaluated(def_id, _) => tcx.type_of(*def_id),\n+            };\n+            ty.walk()\n         })\n-        .flatten()\n         .count();\n     debug!(\" => type length={}, const length={}\", type_length, const_length);\n "}]}