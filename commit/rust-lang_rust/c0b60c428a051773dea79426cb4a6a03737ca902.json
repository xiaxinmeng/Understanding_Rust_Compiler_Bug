{"sha": "c0b60c428a051773dea79426cb4a6a03737ca902", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwYjYwYzQyOGEwNTE3NzNkZWE3OTQyNmNiNGE2YTAzNzM3Y2E5MDI=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-02-12T14:34:10Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-03-14T21:52:31Z"}, "message": "Replace `HirBody` with `hir_owner_items` in tests", "tree": {"sha": "7c4f108761911cfbf70e41b547ac9eee74b018be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c4f108761911cfbf70e41b547ac9eee74b018be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0b60c428a051773dea79426cb4a6a03737ca902", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0b60c428a051773dea79426cb4a6a03737ca902", "html_url": "https://github.com/rust-lang/rust/commit/c0b60c428a051773dea79426cb4a6a03737ca902", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0b60c428a051773dea79426cb4a6a03737ca902/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "739a1ef11336f61e3bc6dc80fecabb39f8f7b742", "url": "https://api.github.com/repos/rust-lang/rust/commits/739a1ef11336f61e3bc6dc80fecabb39f8f7b742", "html_url": "https://github.com/rust-lang/rust/commit/739a1ef11336f61e3bc6dc80fecabb39f8f7b742"}], "stats": {"total": 711, "additions": 356, "deletions": 355}, "files": [{"sha": "cfc0a5e1498c8bc0ef0a9b480c1e4d3e1fd5ce51", "filename": "src/librustc_incremental/persist/dirty_clean.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -53,8 +53,9 @@ const BASE_FN: &[&str] = &[\n \n /// DepNodes for Hir, which is pretty much everything\n const BASE_HIR: &[&str] = &[\n-    // Hir and HirBody should be computed for all nodes\n-    \"Hir\", \"HirBody\",\n+    // hir_owner and hir_owner_items should be computed for all nodes\n+    label_strs::hir_owner,\n+    label_strs::hir_owner_items,\n ];\n \n /// `impl` implementation of struct/trait"}, {"sha": "86f64dc45b7c429d3d6fe1ac7ca2c85260145d5b", "filename": "src/librustc_metadata/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -142,7 +142,7 @@ provide! { <'tcx> tcx, def_id, other, cdata,\n         cdata.get_deprecation(def_id.index).map(DeprecationEntry::external)\n     }\n     item_attrs => { cdata.get_item_attrs(def_id.index, tcx.sess) }\n-    // FIXME(#38501) We've skipped a `read` on the `HirBody` of\n+    // FIXME(#38501) We've skipped a `read` on the `hir_owner_items` of\n     // a `fn` when encoding, so the dep-tracking wouldn't work.\n     // This is only used by rustdoc anyway, which shouldn't have\n     // incremental recompilation ever enabled."}, {"sha": "e5478e5ec905746fc62f5df1e7f5460f25711d3b", "filename": "src/test/incremental/hashes/call_expressions.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fcall_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fcall_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fcall_expressions.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -25,7 +25,7 @@ pub fn change_callee_function() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_callee_function() {\n     callee2(1, 2)\n@@ -40,7 +40,7 @@ pub fn change_argument_function() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_argument_function() {\n     callee1(1, 3)\n@@ -57,8 +57,8 @@ mod change_callee_indirectly_function {\n \n     #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n \n \n     pub fn change_callee_indirectly_function() {\n@@ -81,7 +81,7 @@ pub fn change_callee_method() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_callee_method() {\n     let s = Struct;\n@@ -98,7 +98,7 @@ pub fn change_argument_method() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_argument_method() {\n     let s = Struct;\n@@ -115,7 +115,7 @@ pub fn change_ufcs_callee_method() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_ufcs_callee_method() {\n     let s = Struct;\n@@ -132,7 +132,7 @@ pub fn change_argument_method_ufcs() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_argument_method_ufcs() {\n     let s = Struct;\n@@ -149,9 +149,9 @@ pub fn change_to_ufcs() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-// One might think this would be expanded in the HirBody/Mir, but it actually\n+// One might think this would be expanded in the hir_owner_items/Mir, but it actually\n // results in slightly different Hir/Mir.\n pub fn change_to_ufcs() {\n     let s = Struct;\n@@ -171,7 +171,7 @@ pub mod change_ufcs_callee_indirectly {\n     #[cfg(not(cfail1))]\n     use super::Struct2 as Struct;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir,typeck_tables_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n \n "}, {"sha": "3d9db340f637520480951773632d71b05a76d563", "filename": "src/test/incremental/hashes/closure_expressions.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fclosure_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fclosure_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fclosure_expressions.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -21,7 +21,7 @@ pub fn change_closure_body() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_closure_body() {\n     let _ = || 3u32;\n@@ -37,7 +37,7 @@ pub fn add_parameter() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, optimized_mir, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_parameter() {\n     let x = 0u32;\n@@ -53,7 +53,7 @@ pub fn change_parameter_pattern() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_parameter_pattern() {\n     let _ = |(x,): (u32,)| x;\n@@ -68,7 +68,7 @@ pub fn add_move() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_move() {\n     let _ = move || 1;\n@@ -84,7 +84,7 @@ pub fn add_type_ascription_to_parameter() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_type_ascription_to_parameter() {\n     let closure = |x: u32| x + 1u32;\n@@ -101,7 +101,7 @@ pub fn change_parameter_type() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, optimized_mir, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_parameter_type() {\n     let closure = |x: u16| (x as u64) + 1;"}, {"sha": "ef4598ab3b631341373cfcedcb26b66fc6086730", "filename": "src/test/incremental/hashes/consts.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fconsts.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -19,7 +19,7 @@\n const CONST_VISIBILITY: u8 = 0;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub const CONST_VISIBILITY: u8 = 0;\n \n@@ -29,7 +29,7 @@ pub const CONST_VISIBILITY: u8 = 0;\n const CONST_CHANGE_TYPE_1: i32 = 0;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n const CONST_CHANGE_TYPE_1: u32 = 0;\n \n@@ -39,13 +39,13 @@ const CONST_CHANGE_TYPE_1: u32 = 0;\n const CONST_CHANGE_TYPE_2: Option<u32> = None;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n const CONST_CHANGE_TYPE_2: Option<u64> = None;\n \n \n // Change value between simple literals\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n const CONST_CHANGE_VALUE_1: i16 = {\n     #[cfg(cfail1)]\n@@ -57,7 +57,7 @@ const CONST_CHANGE_VALUE_1: i16 = {\n \n \n // Change value between expressions\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n const CONST_CHANGE_VALUE_2: i16 = {\n     #[cfg(cfail1)]\n@@ -67,7 +67,7 @@ const CONST_CHANGE_VALUE_2: i16 = {\n     { 1 + 2 }\n };\n \n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n const CONST_CHANGE_VALUE_3: i16 = {\n     #[cfg(cfail1)]\n@@ -77,7 +77,7 @@ const CONST_CHANGE_VALUE_3: i16 = {\n     { 2 * 3 }\n };\n \n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n const CONST_CHANGE_VALUE_4: i16 = {\n     #[cfg(cfail1)]\n@@ -99,11 +99,11 @@ mod const_change_type_indirectly {\n     #[cfg(not(cfail1))]\n     use super::ReferencedType2 as Type;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,type_of\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     const CONST_CHANGE_TYPE_INDIRECTLY_1: Type = Type;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,type_of\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     const CONST_CHANGE_TYPE_INDIRECTLY_2: Option<Type> = None;\n }"}, {"sha": "703e62d5fe1ea57b91ed5b164f527c6547700ff3", "filename": "src/test/incremental/hashes/enum_constructors.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fenum_constructors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fenum_constructors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fenum_constructors.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -34,7 +34,7 @@ pub fn change_field_value_struct_like() -> Enum {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,optimized_mir,mir_built\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_field_value_struct_like() -> Enum {\n     Enum::Struct {\n@@ -57,7 +57,7 @@ pub fn change_field_order_struct_like() -> Enum {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n // FIXME(michaelwoerister):Interesting. I would have thought that that changes the MIR. And it\n // would if it were not all constants\n@@ -96,7 +96,7 @@ pub fn change_constructor_path_struct_like() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built,typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,optimized_mir,mir_built,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_constructor_path_struct_like() {\n     let _ = Enum2::Struct {\n@@ -119,7 +119,7 @@ pub fn change_constructor_variant_struct_like() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,optimized_mir,mir_built\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_constructor_variant_struct_like() {\n     let _ = Enum2::Struct2 {\n@@ -139,7 +139,7 @@ pub mod change_constructor_path_indirectly_struct_like {\n \n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"fn_sig,Hir,HirBody,optimized_mir,mir_built,\\\n+        except=\"fn_sig,Hir,hir_owner_items,optimized_mir,mir_built,\\\n                 typeck_tables_of\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n@@ -161,7 +161,7 @@ pub mod change_constructor_variant_indirectly_struct_like {\n     #[cfg(not(cfail1))]\n     use super::Enum2::Struct2 as Variant;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,optimized_mir,mir_built\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn function() -> Enum2 {\n         Variant {\n@@ -180,7 +180,7 @@ pub fn change_field_value_tuple_like() -> Enum {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,optimized_mir,mir_built\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_field_value_tuple_like() -> Enum {\n     Enum::Tuple(0, 1, 3)\n@@ -197,7 +197,7 @@ pub fn change_constructor_path_tuple_like() {\n #[cfg(not(cfail1))]\n #[rustc_clean(\n     cfg=\"cfail2\",\n-    except=\"HirBody,optimized_mir,mir_built,typeck_tables_of\"\n+    except=\"hir_owner_items,optimized_mir,mir_built,typeck_tables_of\"\n )]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_constructor_path_tuple_like() {\n@@ -215,7 +215,7 @@ pub fn change_constructor_variant_tuple_like() {\n #[cfg(not(cfail1))]\n #[rustc_clean(\n     cfg=\"cfail2\",\n-    except=\"HirBody,optimized_mir,mir_built,typeck_tables_of\"\n+    except=\"hir_owner_items,optimized_mir,mir_built,typeck_tables_of\"\n )]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_constructor_variant_tuple_like() {\n@@ -232,7 +232,7 @@ pub mod change_constructor_path_indirectly_tuple_like {\n \n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"fn_sig,Hir,HirBody,optimized_mir,mir_built,\\\n+        except=\"fn_sig,Hir,hir_owner_items,optimized_mir,mir_built,\\\n                 typeck_tables_of\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n@@ -251,7 +251,7 @@ pub mod change_constructor_variant_indirectly_tuple_like {\n     #[cfg(not(cfail1))]\n     use super::Enum2::Tuple2 as Variant;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built,typeck_tables_of\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,optimized_mir,mir_built,typeck_tables_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn function() -> Enum2 {\n         Variant(0, 1, 2)\n@@ -278,7 +278,7 @@ pub fn change_constructor_path_c_like() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built,typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,optimized_mir,mir_built,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_constructor_path_c_like() {\n     let _ = Clike2::B;\n@@ -293,7 +293,7 @@ pub fn change_constructor_variant_c_like() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,optimized_mir,mir_built\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_constructor_variant_c_like() {\n     let _ = Clike::C;\n@@ -309,7 +309,7 @@ pub mod change_constructor_path_indirectly_c_like {\n \n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"fn_sig,Hir,HirBody,optimized_mir,mir_built,\\\n+        except=\"fn_sig,Hir,hir_owner_items,optimized_mir,mir_built,\\\n                 typeck_tables_of\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n@@ -328,7 +328,7 @@ pub mod change_constructor_variant_indirectly_c_like {\n     #[cfg(not(cfail1))]\n     use super::Clike::B as Variant;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,optimized_mir,mir_built\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn function() -> Clike {\n         Variant"}, {"sha": "3925d2227015a454445b818733477dcf0e104d2c", "filename": "src/test/incremental/hashes/enum_defs.rs", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fenum_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fenum_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fenum_defs.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -26,7 +26,7 @@\n enum EnumVisibility { A }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub enum EnumVisibility {\n     A\n@@ -42,7 +42,7 @@ enum EnumChangeNameCStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumChangeNameCStyleVariant {\n     Variant1,\n@@ -59,7 +59,7 @@ enum EnumChangeNameTupleStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumChangeNameTupleStyleVariant {\n     Variant1,\n@@ -76,7 +76,7 @@ enum EnumChangeNameStructStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumChangeNameStructStyleVariant {\n     Variant1,\n@@ -93,7 +93,7 @@ enum EnumChangeValueCStyleVariant0 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumChangeValueCStyleVariant0 {\n     Variant1,\n@@ -109,7 +109,7 @@ enum EnumChangeValueCStyleVariant1 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumChangeValueCStyleVariant1 {\n     Variant1,\n@@ -125,7 +125,7 @@ enum EnumAddCStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumAddCStyleVariant {\n     Variant1,\n@@ -142,7 +142,7 @@ enum EnumRemoveCStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumRemoveCStyleVariant {\n     Variant1,\n@@ -157,7 +157,7 @@ enum EnumAddTupleStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumAddTupleStyleVariant {\n     Variant1,\n@@ -174,7 +174,7 @@ enum EnumRemoveTupleStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumRemoveTupleStyleVariant {\n     Variant1,\n@@ -189,7 +189,7 @@ enum EnumAddStructStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumAddStructStyleVariant {\n     Variant1,\n@@ -206,7 +206,7 @@ enum EnumRemoveStructStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumRemoveStructStyleVariant {\n     Variant1,\n@@ -221,7 +221,7 @@ enum EnumChangeFieldTypeTupleStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumChangeFieldTypeTupleStyleVariant {\n     Variant1(u32,\n@@ -238,7 +238,7 @@ enum EnumChangeFieldTypeStructStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumChangeFieldTypeStructStyleVariant {\n     Variant1,\n@@ -257,7 +257,7 @@ enum EnumChangeFieldNameStructStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumChangeFieldNameStructStyleVariant {\n     Variant1 { a: u32, c: u32 },\n@@ -272,7 +272,7 @@ enum EnumChangeOrderTupleStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumChangeOrderTupleStyleVariant {\n     Variant1(\n@@ -289,7 +289,7 @@ enum EnumChangeFieldOrderStructStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumChangeFieldOrderStructStyleVariant {\n     Variant1 { b: f32, a: u32 },\n@@ -304,7 +304,7 @@ enum EnumAddFieldTupleStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumAddFieldTupleStyleVariant {\n     Variant1(u32, u32, u32),\n@@ -319,7 +319,7 @@ enum EnumAddFieldStructStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumAddFieldStructStyleVariant {\n     Variant1 { a: u32, b: u32, c: u32 },\n@@ -335,7 +335,7 @@ enum EnumAddMustUse {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[must_use]\n enum EnumAddMustUse {\n@@ -353,7 +353,7 @@ enum EnumAddReprC {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[repr(C)]\n enum EnumAddReprC {\n@@ -531,7 +531,7 @@ enum EnumSwapUsageTypeParameters<A, B> {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumSwapUsageTypeParameters<A, B> {\n     Variant1 {\n@@ -552,7 +552,7 @@ enum EnumSwapUsageLifetimeParameters<'a, 'b> {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumSwapUsageLifetimeParameters<'a, 'b> {\n     Variant1 {\n@@ -577,7 +577,7 @@ mod change_field_type_indirectly_tuple_style {\n     #[cfg(not(cfail1))]\n     use super::ReferencedType2 as FieldType;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     enum TupleStyle {\n         Variant1(\n@@ -595,7 +595,7 @@ mod change_field_type_indirectly_struct_style {\n     #[cfg(not(cfail1))]\n     use super::ReferencedType2 as FieldType;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     enum StructStyle {\n         Variant1 {\n@@ -618,7 +618,7 @@ mod change_trait_bound_indirectly {\n     #[cfg(not(cfail1))]\n     use super::ReferencedTrait2 as Trait;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,predicates_of\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,predicates_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     enum Enum<T: Trait> {\n         Variant1(T)\n@@ -634,7 +634,7 @@ mod change_trait_bound_indirectly_where {\n     #[cfg(not(cfail1))]\n     use super::ReferencedTrait2 as Trait;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,predicates_of\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,predicates_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     enum Enum<T> where T: Trait {\n         Variant1(T)"}, {"sha": "76d33aa20857a525caa1b1fdb3c5257e244c8d76", "filename": "src/test/incremental/hashes/exported_vs_not.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fexported_vs_not.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fexported_vs_not.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fexported_vs_not.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -7,7 +7,7 @@\n #![crate_type=\"rlib\"]\n \n // Case 1: The function body is not exported to metadata. If the body changes,\n-//         the hash of the HirBody node should change, but not the hash of\n+//         the hash of the hir_owner_items node should change, but not the hash of\n //         either the Hir or the Metadata node.\n \n #[cfg(cfail1)]\n@@ -16,7 +16,7 @@ pub fn body_not_exported_to_metadata() -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn body_not_exported_to_metadata() -> u32 {\n     2\n@@ -35,7 +35,7 @@ pub fn body_exported_to_metadata_because_of_inline() -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[inline]\n pub fn body_exported_to_metadata_because_of_inline() -> u32 {\n@@ -55,7 +55,7 @@ pub fn body_exported_to_metadata_because_of_generic() -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[inline]\n pub fn body_exported_to_metadata_because_of_generic() -> u32 {"}, {"sha": "3e54dafd9ac0e5f6d2a32f39f21a5b4d83e69215", "filename": "src/test/incremental/hashes/for_loops.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Ffor_loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Ffor_loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ffor_loops.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -25,7 +25,7 @@ pub fn change_loop_body() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_loop_body() {\n     let mut _x = 0;\n@@ -48,7 +48,7 @@ pub fn change_iteration_variable_name() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_iteration_variable_name() {\n     let mut _x = 0;\n@@ -71,7 +71,7 @@ pub fn change_iteration_variable_pattern() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, optimized_mir, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_iteration_variable_pattern() {\n     let mut _x = 0;\n@@ -94,7 +94,7 @@ pub fn change_iterable() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, promoted_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, promoted_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_iterable() {\n     let mut _x = 0;\n@@ -116,7 +116,7 @@ pub fn add_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, optimized_mir, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_break() {\n     let mut _x = 0;\n@@ -139,7 +139,7 @@ pub fn add_loop_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_loop_label() {\n     let mut _x = 0;\n@@ -162,7 +162,7 @@ pub fn add_loop_label_to_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_loop_label_to_break() {\n     let mut _x = 0;\n@@ -187,7 +187,7 @@ pub fn change_break_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_break_label() {\n     let mut _x = 0;\n@@ -212,7 +212,7 @@ pub fn add_loop_label_to_continue() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_loop_label_to_continue() {\n     let mut _x = 0;\n@@ -237,7 +237,7 @@ pub fn change_continue_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_continue_label() {\n     let mut _x = 0;\n@@ -262,7 +262,7 @@ pub fn change_continue_to_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_continue_to_break() {\n     let mut _x = 0;"}, {"sha": "3109af2d393549f11194e3cef082ec1ea787b6bb", "filename": "src/test/incremental/hashes/function_interfaces.rs", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -23,7 +23,7 @@ pub fn add_parameter() {}\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg = \"cfail2\",\n-              except = \"Hir, HirBody, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n+              except = \"Hir, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn add_parameter(p: i32) {}\n \n@@ -34,7 +34,7 @@ pub fn add_parameter(p: i32) {}\n pub fn add_return_type() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn add_return_type() -> () {}\n \n@@ -46,7 +46,7 @@ pub fn type_of_parameter(p: i32) {}\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg = \"cfail2\",\n-              except = \"Hir, HirBody, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n+              except = \"Hir, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn type_of_parameter(p: i64) {}\n \n@@ -58,7 +58,7 @@ pub fn type_of_parameter_ref(p: &i32) {}\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg = \"cfail2\",\n-              except = \"Hir, HirBody, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n+              except = \"Hir, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn type_of_parameter_ref(p: &mut i32) {}\n \n@@ -70,7 +70,7 @@ pub fn order_of_parameters(p1: i32, p2: i64) {}\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg = \"cfail2\",\n-              except = \"Hir, HirBody, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n+              except = \"Hir, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn order_of_parameters(p2: i64, p1: i32) {}\n \n@@ -82,7 +82,7 @@ pub fn make_unsafe() {}\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg = \"cfail2\",\n-              except = \"Hir, HirBody, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n+              except = \"Hir, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub unsafe fn make_unsafe() {}\n \n@@ -93,7 +93,7 @@ pub unsafe fn make_unsafe() {}\n pub fn make_extern() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, typeck_tables_of, fn_sig\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items, typeck_tables_of, fn_sig\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub extern \"C\" fn make_extern() {}\n \n@@ -105,7 +105,7 @@ pub fn type_parameter() {}\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg = \"cfail2\",\n-              except = \"Hir, HirBody, generics_of, type_of, predicates_of\")]\n+              except = \"Hir, hir_owner_items, generics_of, type_of, predicates_of\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn type_parameter<T>() {}\n \n@@ -116,7 +116,7 @@ pub fn type_parameter<T>() {}\n pub fn lifetime_parameter() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, generics_of\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items, generics_of\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn lifetime_parameter<'a>() {}\n \n@@ -127,7 +127,7 @@ pub fn lifetime_parameter<'a>() {}\n pub fn trait_bound<T>() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, predicates_of\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items, predicates_of\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn trait_bound<T: Eq>() {}\n \n@@ -138,7 +138,7 @@ pub fn trait_bound<T: Eq>() {}\n pub fn builtin_bound<T>() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, predicates_of\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items, predicates_of\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn builtin_bound<T: Send>() {}\n \n@@ -150,7 +150,7 @@ pub fn lifetime_bound<'a, T>() {}\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg = \"cfail2\",\n-              except = \"Hir, HirBody, generics_of, type_of, predicates_of\")]\n+              except = \"Hir, hir_owner_items, generics_of, type_of, predicates_of\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn lifetime_bound<'a, T: 'a>() {}\n \n@@ -161,7 +161,7 @@ pub fn lifetime_bound<'a, T: 'a>() {}\n pub fn second_trait_bound<T: Eq>() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, predicates_of\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items, predicates_of\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn second_trait_bound<T: Eq + Clone>() {}\n \n@@ -172,7 +172,7 @@ pub fn second_trait_bound<T: Eq + Clone>() {}\n pub fn second_builtin_bound<T: Send>() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, predicates_of\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items, predicates_of\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn second_builtin_bound<T: Send + Sized>() {}\n \n@@ -184,7 +184,7 @@ pub fn second_lifetime_bound<'a, 'b, T: 'a>() {}\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg = \"cfail2\",\n-              except = \"Hir, HirBody, generics_of, type_of, predicates_of\")]\n+              except = \"Hir, hir_owner_items, generics_of, type_of, predicates_of\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn second_lifetime_bound<'a, 'b, T: 'a + 'b>() {}\n \n@@ -195,7 +195,7 @@ pub fn second_lifetime_bound<'a, 'b, T: 'a + 'b>() {}\n pub fn inline() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items\")]\n #[rustc_clean(cfg = \"cfail3\")]\n #[inline]\n pub fn inline() {}\n@@ -208,7 +208,7 @@ pub fn inline() {}\n pub fn inline_never() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items\")]\n #[rustc_clean(cfg = \"cfail3\")]\n #[inline(never)]\n pub fn inline_never() {}\n@@ -220,7 +220,7 @@ pub fn inline_never() {}\n pub fn no_mangle() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items\")]\n #[rustc_clean(cfg = \"cfail3\")]\n #[no_mangle]\n pub fn no_mangle() {}\n@@ -232,7 +232,7 @@ pub fn no_mangle() {}\n pub fn linkage() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items\")]\n #[rustc_clean(cfg = \"cfail3\")]\n #[linkage = \"weak_odr\"]\n pub fn linkage() {}\n@@ -246,7 +246,7 @@ pub fn return_impl_trait() -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, typeck_tables_of, fn_sig\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items, typeck_tables_of, fn_sig\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn return_impl_trait() -> impl Clone {\n     0\n@@ -280,7 +280,7 @@ pub mod change_return_type_indirectly {\n     use super::ReferencedType2 as ReturnType;\n \n     #[rustc_clean(cfg = \"cfail2\",\n-                  except = \"Hir, HirBody, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n+                  except = \"Hir, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n     #[rustc_clean(cfg = \"cfail3\")]\n     pub fn indirect_return_type() -> ReturnType {\n         ReturnType {}\n@@ -297,7 +297,7 @@ pub mod change_parameter_type_indirectly {\n     use super::ReferencedType2 as ParameterType;\n \n     #[rustc_clean(cfg = \"cfail2\",\n-                  except = \"Hir, HirBody, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n+                  except = \"Hir, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n     #[rustc_clean(cfg = \"cfail3\")]\n     pub fn indirect_parameter_type(p: ParameterType) {}\n }\n@@ -314,7 +314,7 @@ pub mod change_trait_bound_indirectly {\n     #[cfg(not(cfail1))]\n     use super::ReferencedTrait2 as Trait;\n \n-    #[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, predicates_of\")]\n+    #[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items, predicates_of\")]\n     #[rustc_clean(cfg = \"cfail3\")]\n     pub fn indirect_trait_bound<T: Trait>(p: T) {}\n }\n@@ -328,7 +328,7 @@ pub mod change_trait_bound_indirectly_in_where_clause {\n     #[cfg(not(cfail1))]\n     use super::ReferencedTrait2 as Trait;\n \n-    #[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, predicates_of\")]\n+    #[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items, predicates_of\")]\n     #[rustc_clean(cfg = \"cfail3\")]\n     pub fn indirect_trait_bound_where<T>(p: T)\n     where"}, {"sha": "93bdc0322bb71662b3524e6042c5c3f664523a56", "filename": "src/test/incremental/hashes/if_expressions.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fif_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fif_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fif_expressions.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -25,7 +25,7 @@ pub fn change_condition(x: bool) -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_condition(x: bool) -> u32 {\n     if !x {\n@@ -46,7 +46,7 @@ pub fn change_then_branch(x: bool) -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_then_branch(x: bool) -> u32 {\n     if x {\n@@ -69,7 +69,7 @@ pub fn change_else_branch(x: bool) -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_else_branch(x: bool) -> u32 {\n     if x {\n@@ -94,7 +94,7 @@ pub fn add_else_branch(x: bool) -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_else_branch(x: bool) -> u32 {\n     let mut ret = 1;\n@@ -120,7 +120,7 @@ pub fn change_condition_if_let(x: Option<u32>) -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_condition_if_let(x: Option<u32>) -> u32 {\n     if let Some(_) = x {\n@@ -143,7 +143,7 @@ pub fn change_then_branch_if_let(x: Option<u32>) -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_then_branch_if_let(x: Option<u32>) -> u32 {\n     if let Some(x) = x {\n@@ -166,7 +166,7 @@ pub fn change_else_branch_if_let(x: Option<u32>) -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_else_branch_if_let(x: Option<u32>) -> u32 {\n     if let Some(x) = x {\n@@ -191,7 +191,7 @@ pub fn add_else_branch_if_let(x: Option<u32>) -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_else_branch_if_let(x: Option<u32>) -> u32 {\n     let mut ret = 1;"}, {"sha": "2a0eacd4dc13e13374bb09744ad551d1257ff871", "filename": "src/test/incremental/hashes/indexing_expressions.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Findexing_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Findexing_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Findexing_expressions.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -22,8 +22,8 @@ fn change_simple_index(slice: &[u32]) -> u32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n fn change_simple_index(slice: &[u32]) -> u32 {\n     slice[4]\n }\n@@ -39,8 +39,8 @@ fn change_lower_bound(slice: &[u32]) -> &[u32] {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n fn change_lower_bound(slice: &[u32]) -> &[u32] {\n     &slice[2..5]\n }\n@@ -56,8 +56,8 @@ fn change_upper_bound(slice: &[u32]) -> &[u32] {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n fn change_upper_bound(slice: &[u32]) -> &[u32] {\n     &slice[3..7]\n }\n@@ -73,8 +73,8 @@ fn add_lower_bound(slice: &[u32]) -> &[u32] {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n fn add_lower_bound(slice: &[u32]) -> &[u32] {\n     &slice[3..4]\n }\n@@ -90,8 +90,8 @@ fn add_upper_bound(slice: &[u32]) -> &[u32] {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n fn add_upper_bound(slice: &[u32]) -> &[u32] {\n     &slice[3..7]\n }\n@@ -107,8 +107,8 @@ fn change_mutability(slice: &mut [u32]) -> u32 {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n fn change_mutability(slice: &mut [u32]) -> u32 {\n     (&slice[3..5])[0]\n }\n@@ -124,8 +124,8 @@ fn exclusive_to_inclusive_range(slice: &[u32]) -> &[u32] {\n #[cfg(not(cfail1))]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n fn exclusive_to_inclusive_range(slice: &[u32]) -> &[u32] {\n     &slice[3..=7]\n }"}, {"sha": "f4fb601d07bd560da4f3a9c32b9ad638d3ed54a1", "filename": "src/test/incremental/hashes/inherent_impls.rs", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -23,7 +23,7 @@ impl Foo {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,associated_item_def_ids\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,associated_item_def_ids\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail3\")]\n@@ -44,7 +44,7 @@ impl Foo {\n impl Foo {\n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"HirBody,optimized_mir,promoted_mir,mir_built,typeck_tables_of\"\n+        except=\"hir_owner_items,optimized_mir,promoted_mir,mir_built,typeck_tables_of\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn method_body() {\n@@ -68,7 +68,7 @@ impl Foo {\n impl Foo {\n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"HirBody,optimized_mir,promoted_mir,mir_built,typeck_tables_of\"\n+        except=\"hir_owner_items,optimized_mir,promoted_mir,mir_built,typeck_tables_of\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     #[inline]\n@@ -85,10 +85,10 @@ impl Foo {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n-    #[rustc_clean(cfg=\"cfail2\", except=\"associated_item,Hir,HirBody\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"associated_item,Hir,hir_owner_items\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method_privacy() { }\n }\n@@ -100,7 +100,7 @@ impl Foo {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_dirty(cfg=\"cfail2\", except=\"type_of,predicates_of,promoted_mir\")]\n@@ -120,7 +120,7 @@ impl Foo {\n impl Foo {\n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"Hir,HirBody,fn_sig,typeck_tables_of,optimized_mir,mir_built\"\n+        except=\"Hir,hir_owner_items,fn_sig,typeck_tables_of,optimized_mir,mir_built\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn method_selfmutness(&mut self) { }\n@@ -135,7 +135,7 @@ impl Foo {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,associated_item_def_ids\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,associated_item_def_ids\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\")]\n@@ -160,7 +160,7 @@ impl Foo {\n impl Foo {\n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"Hir,HirBody,fn_sig,typeck_tables_of,optimized_mir,mir_built\"\n+        except=\"Hir,hir_owner_items,fn_sig,typeck_tables_of,optimized_mir,mir_built\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn add_method_parameter(&self, _: i32) { }\n@@ -178,7 +178,7 @@ impl Foo {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n-    #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,optimized_mir,mir_built\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn change_method_parameter_name(&self, b: i64) { }\n }\n@@ -197,7 +197,7 @@ impl Foo {\n impl Foo {\n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"Hir,HirBody,fn_sig,optimized_mir,mir_built,typeck_tables_of\")]\n+        except=\"Hir,hir_owner_items,fn_sig,optimized_mir,mir_built,typeck_tables_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn change_method_return_type(&self) -> u8 { 0 }\n }\n@@ -214,7 +214,7 @@ impl Foo {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     #[inline]\n     pub fn make_method_inline(&self) -> u8 { 0 }\n@@ -232,7 +232,7 @@ impl Foo {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n-    #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,optimized_mir,mir_built\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn change_method_parameter_order(&self, b: i64, a: i64) { }\n }\n@@ -251,7 +251,7 @@ impl Foo {\n impl Foo {\n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"Hir,HirBody,fn_sig,typeck_tables_of,optimized_mir,mir_built\"\n+        except=\"Hir,hir_owner_items,fn_sig,typeck_tables_of,optimized_mir,mir_built\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub unsafe fn make_method_unsafe(&self) { }\n@@ -269,7 +269,7 @@ impl Foo {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,fn_sig,typeck_tables_of\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,fn_sig,typeck_tables_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub extern fn make_method_extern(&self) { }\n }\n@@ -286,7 +286,7 @@ impl Foo {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,fn_sig,typeck_tables_of\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,fn_sig,typeck_tables_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub extern \"system\" fn change_method_calling_convention(&self) { }\n }\n@@ -312,7 +312,7 @@ impl Foo {\n     // if we lower generics before the body, then the `HirId` for\n     // things in the body will be affected. So if you start to see\n     // `typeck_tables_of` appear dirty, that might be the cause. -nmatsakis\n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn add_lifetime_parameter_to_method<'a>(&self) { }\n }\n@@ -340,7 +340,7 @@ impl Foo {\n     // appear dirty, that might be the cause. -nmatsakis\n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"Hir,HirBody,generics_of,predicates_of,type_of\",\n+        except=\"Hir,hir_owner_items,generics_of,predicates_of,type_of\",\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn add_type_parameter_to_method<T>(&self) { }\n@@ -360,7 +360,7 @@ impl Foo {\n impl Foo {\n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"Hir,HirBody,generics_of,predicates_of,type_of,typeck_tables_of\"\n+        except=\"Hir,hir_owner_items,generics_of,predicates_of,type_of,typeck_tables_of\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn add_lifetime_bound_to_lifetime_param_of_method<'a, 'b: 'a>(&self) { }\n@@ -387,7 +387,7 @@ impl Foo {\n     // generics before the body, then the `HirId` for things in the\n     // body will be affected. So if you start to see `typeck_tables_of`\n     // appear dirty, that might be the cause. -nmatsakis\n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,generics_of,predicates_of,\\\n+    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,generics_of,predicates_of,\\\n                                         type_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn add_lifetime_bound_to_type_param_of_method<'a, T: 'a>(&self) { }\n@@ -414,7 +414,7 @@ impl Foo {\n     // generics before the body, then the `HirId` for things in the\n     // body will be affected. So if you start to see `typeck_tables_of`\n     // appear dirty, that might be the cause. -nmatsakis\n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,predicates_of\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,predicates_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn add_trait_bound_to_type_param_of_method<T: Clone>(&self) { }\n }\n@@ -431,7 +431,7 @@ impl Foo {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     #[no_mangle]\n     pub fn add_no_mangle_to_method(&self) { }\n@@ -448,7 +448,7 @@ impl Bar<u32> {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,generics_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,generics_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl<T> Bar<T> {\n     #[rustc_clean(\n@@ -468,7 +468,7 @@ impl Bar<u32> {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Bar<u64> {\n     #[rustc_clean(cfg=\"cfail2\", except=\"fn_sig,optimized_mir,mir_built,typeck_tables_of\")]\n@@ -485,7 +485,7 @@ impl<T> Bar<T> {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl<T: 'static> Bar<T> {\n     #[rustc_clean(cfg=\"cfail2\")]\n@@ -502,7 +502,7 @@ impl<T> Bar<T> {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl<T: Clone> Bar<T> {\n     #[rustc_clean(cfg=\"cfail2\")]"}, {"sha": "a77123110aeda8517daeb2d87d8bd7e9304c952f", "filename": "src/test/incremental/hashes/inline_asm.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Finline_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Finline_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Finline_asm.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -33,7 +33,7 @@ pub fn change_template(a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n pub fn change_template(a: i32) -> i32 {\n@@ -69,7 +69,7 @@ pub fn change_output(a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n pub fn change_output(a: i32) -> i32 {\n@@ -105,7 +105,7 @@ pub fn change_input(_a: i32, _b: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n pub fn change_input(_a: i32, _b: i32) -> i32 {\n@@ -140,7 +140,7 @@ pub fn change_input_constraint(_a: i32, _b: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n pub fn change_input_constraint(_a: i32, _b: i32) -> i32 {\n@@ -175,7 +175,7 @@ pub fn change_clobber(_a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n pub fn change_clobber(_a: i32) -> i32 {\n@@ -210,7 +210,7 @@ pub fn change_options(_a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n pub fn change_options(_a: i32) -> i32 {"}, {"sha": "2d9cf4203dcd378f0cd75d7b45d8e58d1a776cb5", "filename": "src/test/incremental/hashes/let_expressions.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Flet_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Flet_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Flet_expressions.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -22,7 +22,7 @@ pub fn change_name() {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,mir_built,optimized_mir\")]\n+    except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_name() {\n     let _y = 2u64;\n@@ -38,7 +38,7 @@ pub fn add_type() {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,typeck_tables_of,mir_built,optimized_mir\")]\n+    except=\"hir_owner_items,typeck_tables_of,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_type() {\n     let _x: u32 = 2u32;\n@@ -54,7 +54,7 @@ pub fn change_type() {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,typeck_tables_of,mir_built,optimized_mir\")]\n+    except=\"hir_owner_items,typeck_tables_of,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_type() {\n     let _x: u8 = 2;\n@@ -70,7 +70,7 @@ pub fn change_mutability_of_reference_type() {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,typeck_tables_of,mir_built,optimized_mir\")]\n+    except=\"hir_owner_items,typeck_tables_of,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_mutability_of_reference_type() {\n     let _x: &mut u64;\n@@ -86,7 +86,7 @@ pub fn change_mutability_of_slot() {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,typeck_tables_of,mir_built,optimized_mir\")]\n+    except=\"hir_owner_items,typeck_tables_of,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_mutability_of_slot() {\n     let _x: u64 = 0;\n@@ -102,7 +102,7 @@ pub fn change_simple_binding_to_pattern() {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,typeck_tables_of,mir_built,optimized_mir\")]\n+    except=\"hir_owner_items,typeck_tables_of,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_simple_binding_to_pattern() {\n     let (_a, _b) = (0u8, 'x');\n@@ -118,7 +118,7 @@ pub fn change_name_in_pattern() {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,mir_built,optimized_mir\")]\n+    except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_name_in_pattern() {\n     let (_a, _c) = (1u8, 'y');\n@@ -134,7 +134,7 @@ pub fn add_ref_in_pattern() {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,typeck_tables_of,mir_built,optimized_mir\")]\n+    except=\"hir_owner_items,typeck_tables_of,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_ref_in_pattern() {\n     let (ref _a, _b) = (1u8, 'y');\n@@ -150,7 +150,7 @@ pub fn add_amp_in_pattern() {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,typeck_tables_of,mir_built,optimized_mir\")]\n+    except=\"hir_owner_items,typeck_tables_of,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_amp_in_pattern() {\n     let (&_a, _b) = (&1u8, 'y');\n@@ -166,7 +166,7 @@ pub fn change_mutability_of_binding_in_pattern() {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,typeck_tables_of,mir_built,optimized_mir\")]\n+    except=\"hir_owner_items,typeck_tables_of,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_mutability_of_binding_in_pattern() {\n     let (mut _a, _b) = (99u8, 'q');\n@@ -182,7 +182,7 @@ pub fn add_initializer() {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,typeck_tables_of,mir_built,optimized_mir\")]\n+    except=\"hir_owner_items,typeck_tables_of,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_initializer() {\n     let _x: i16 = 3i16;\n@@ -198,7 +198,7 @@ pub fn change_initializer() {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,mir_built,optimized_mir\")]\n+    except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_initializer() {\n     let _x = 5u16;"}, {"sha": "7ce43559cfff320ca6f8110fb6310df9711b41ea", "filename": "src/test/incremental/hashes/loop_expressions.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Floop_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Floop_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Floop_expressions.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -25,7 +25,7 @@ pub fn change_loop_body() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_loop_body() {\n     let mut _x = 0;\n@@ -47,7 +47,7 @@ pub fn add_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, optimized_mir, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_break() {\n     let mut _x = 0;\n@@ -70,7 +70,7 @@ pub fn add_loop_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_loop_label() {\n     let mut _x = 0;\n@@ -93,7 +93,7 @@ pub fn add_loop_label_to_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_loop_label_to_break() {\n     let mut _x = 0;\n@@ -118,7 +118,7 @@ pub fn change_break_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, optimized_mir, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_break_label() {\n     let mut _x = 0;\n@@ -143,7 +143,7 @@ pub fn add_loop_label_to_continue() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_loop_label_to_continue() {\n     let mut _x = 0;\n@@ -168,7 +168,7 @@ pub fn change_continue_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_continue_label() {\n     let mut _x = 0;\n@@ -193,7 +193,7 @@ pub fn change_continue_to_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, optimized_mir, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_continue_to_break() {\n     let mut _x = 0;"}, {"sha": "30934c7c1d16a77ae6f6177f994b242e2029e366", "filename": "src/test/incremental/hashes/match_expressions.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fmatch_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fmatch_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fmatch_expressions.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -26,7 +26,7 @@ pub fn add_arm(x: u32) -> u32 {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n+    except=\"hir_owner_items,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_arm(x: u32) -> u32 {\n     match x {\n@@ -51,7 +51,7 @@ pub fn change_order_of_arms(x: u32) -> u32 {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,mir_built,optimized_mir\")]\n+    except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_order_of_arms(x: u32) -> u32 {\n     match x {\n@@ -75,7 +75,7 @@ pub fn add_guard_clause(x: u32, y: bool) -> u32 {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n+    except=\"hir_owner_items,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_guard_clause(x: u32, y: bool) -> u32 {\n     match x {\n@@ -99,7 +99,7 @@ pub fn change_guard_clause(x: u32, y: bool) -> u32 {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n+    except=\"hir_owner_items,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_guard_clause(x: u32, y: bool) -> u32 {\n     match x {\n@@ -123,7 +123,7 @@ pub fn add_at_binding(x: u32) -> u32 {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n+    except=\"hir_owner_items,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_at_binding(x: u32) -> u32 {\n     match x {\n@@ -147,7 +147,7 @@ pub fn change_name_of_at_binding(x: u32) -> u32 {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,mir_built,optimized_mir\")]\n+    except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_name_of_at_binding(x: u32) -> u32 {\n     match x {\n@@ -170,7 +170,7 @@ pub fn change_simple_name_to_pattern(x: u32) -> u32 {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n+    except=\"hir_owner_items,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_simple_name_to_pattern(x: u32) -> u32 {\n     match (x, x & 1) {\n@@ -193,7 +193,7 @@ pub fn change_name_in_pattern(x: u32) -> u32 {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,mir_built,optimized_mir\")]\n+    except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_name_in_pattern(x: u32) -> u32 {\n     match (x, x & 1) {\n@@ -216,7 +216,7 @@ pub fn change_mutability_of_binding_in_pattern(x: u32) -> u32 {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n+    except=\"hir_owner_items,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_mutability_of_binding_in_pattern(x: u32) -> u32 {\n     match (x, x & 1) {\n@@ -238,7 +238,7 @@ pub fn add_ref_to_binding_in_pattern(x: u32) -> u32 {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n+    except=\"hir_owner_items,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_ref_to_binding_in_pattern(x: u32) -> u32 {\n     match (x, x & 1) {\n@@ -260,7 +260,7 @@ pub fn add_amp_to_binding_in_pattern(x: u32) -> u32 {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n+except=\"hir_owner_items,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_amp_to_binding_in_pattern(x: u32) -> u32 {\n     match (&x, x & 1) {\n@@ -283,7 +283,7 @@ pub fn change_rhs_of_arm(x: u32) -> u32 {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,mir_built,optimized_mir\")]\n+    except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_rhs_of_arm(x: u32) -> u32 {\n     match x {\n@@ -307,7 +307,7 @@ pub fn add_alternative_to_arm(x: u32) -> u32 {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n+    except=\"hir_owner_items,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_alternative_to_arm(x: u32) -> u32 {\n     match x {"}, {"sha": "b46d1fac12475034fcc03b40302039e23692d6db", "filename": "src/test/incremental/hashes/panic_exprs.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fpanic_exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fpanic_exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fpanic_exprs.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -18,7 +18,7 @@\n \n \n // Indexing expression\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn indexing(slice: &[u8]) -> u8 {\n     #[cfg(cfail1)]\n@@ -33,7 +33,7 @@ pub fn indexing(slice: &[u8]) -> u8 {\n \n \n // Arithmetic overflow plus\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn arithmetic_overflow_plus(val: i32) -> i32 {\n     #[cfg(cfail1)]\n@@ -48,7 +48,7 @@ pub fn arithmetic_overflow_plus(val: i32) -> i32 {\n \n \n // Arithmetic overflow minus\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn arithmetic_overflow_minus(val: i32) -> i32 {\n     #[cfg(cfail1)]\n@@ -63,7 +63,7 @@ pub fn arithmetic_overflow_minus(val: i32) -> i32 {\n \n \n // Arithmetic overflow mult\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn arithmetic_overflow_mult(val: i32) -> i32 {\n     #[cfg(cfail1)]\n@@ -78,7 +78,7 @@ pub fn arithmetic_overflow_mult(val: i32) -> i32 {\n \n \n // Arithmetic overflow negation\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn arithmetic_overflow_negation(val: i32) -> i32 {\n     #[cfg(cfail1)]\n@@ -93,7 +93,7 @@ pub fn arithmetic_overflow_negation(val: i32) -> i32 {\n \n \n // Division by zero\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn division_by_zero(val: i32) -> i32 {\n     #[cfg(cfail1)]\n@@ -107,7 +107,7 @@ pub fn division_by_zero(val: i32) -> i32 {\n }\n \n // Division by zero\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn mod_by_zero(val: i32) -> i32 {\n     #[cfg(cfail1)]\n@@ -122,7 +122,7 @@ pub fn mod_by_zero(val: i32) -> i32 {\n \n \n // shift left\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn shift_left(val: i32, shift: usize) -> i32 {\n     #[cfg(cfail1)]\n@@ -137,7 +137,7 @@ pub fn shift_left(val: i32, shift: usize) -> i32 {\n \n \n // shift right\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn shift_right(val: i32, shift: usize) -> i32 {\n     #[cfg(cfail1)]"}, {"sha": "1238259921d0c35a6bebb6550827a1d19ec9bb81", "filename": "src/test/incremental/hashes/statics.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fstatics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fstatics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fstatics.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -21,7 +21,7 @@\n static STATIC_VISIBILITY: u8 = 0;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub static STATIC_VISIBILITY: u8 = 0;\n \n@@ -31,7 +31,7 @@ pub static STATIC_VISIBILITY: u8 = 0;\n static STATIC_MUTABILITY: u8 = 0;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n static mut STATIC_MUTABILITY: u8 = 0;\n \n@@ -41,7 +41,7 @@ static mut STATIC_MUTABILITY: u8 = 0;\n static STATIC_LINKAGE: u8 = 0;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[linkage=\"weak_odr\"]\n static STATIC_LINKAGE: u8 = 0;\n@@ -52,7 +52,7 @@ static STATIC_LINKAGE: u8 = 0;\n static STATIC_NO_MANGLE: u8 = 0;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[no_mangle]\n static STATIC_NO_MANGLE: u8 = 0;\n@@ -63,7 +63,7 @@ static STATIC_NO_MANGLE: u8 = 0;\n static STATIC_THREAD_LOCAL: u8 = 0;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[thread_local]\n static STATIC_THREAD_LOCAL: u8 = 0;\n@@ -74,7 +74,7 @@ static STATIC_THREAD_LOCAL: u8 = 0;\n static STATIC_CHANGE_TYPE_1: i16 = 0;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n static STATIC_CHANGE_TYPE_1: u64 = 0;\n \n@@ -84,13 +84,13 @@ static STATIC_CHANGE_TYPE_1: u64 = 0;\n static STATIC_CHANGE_TYPE_2: Option<i8> = None;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n static STATIC_CHANGE_TYPE_2: Option<u16> = None;\n \n \n // Change value between simple literals\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n static STATIC_CHANGE_VALUE_1: i16 = {\n     #[cfg(cfail1)]\n@@ -102,7 +102,7 @@ static STATIC_CHANGE_VALUE_1: i16 = {\n \n \n // Change value between expressions\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n static STATIC_CHANGE_VALUE_2: i16 = {\n     #[cfg(cfail1)]\n@@ -112,7 +112,7 @@ static STATIC_CHANGE_VALUE_2: i16 = {\n     { 1 + 2 }\n };\n \n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n static STATIC_CHANGE_VALUE_3: i16 = {\n     #[cfg(cfail1)]\n@@ -122,7 +122,7 @@ static STATIC_CHANGE_VALUE_3: i16 = {\n     { 2 * 3 }\n };\n \n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n static STATIC_CHANGE_VALUE_4: i16 = {\n     #[cfg(cfail1)]\n@@ -144,11 +144,11 @@ mod static_change_type_indirectly {\n     #[cfg(not(cfail1))]\n     use super::ReferencedType2 as Type;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,type_of\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     static STATIC_CHANGE_TYPE_INDIRECTLY_1: Type = Type;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,type_of\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     static STATIC_CHANGE_TYPE_INDIRECTLY_2: Option<Type> = None;\n }"}, {"sha": "0a4b8ae68c202fa58018533ba24843a927a14381", "filename": "src/test/incremental/hashes/struct_constructors.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_constructors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_constructors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_constructors.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -31,7 +31,7 @@ pub fn change_field_value_regular_struct() -> RegularStruct {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,optimized_mir,mir_built\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_field_value_regular_struct() -> RegularStruct {\n     RegularStruct {\n@@ -54,7 +54,7 @@ pub fn change_field_order_regular_struct() -> RegularStruct {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_field_order_regular_struct() -> RegularStruct {\n     RegularStruct {\n@@ -82,7 +82,7 @@ pub fn add_field_regular_struct() -> RegularStruct {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built,typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,optimized_mir,mir_built,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_field_regular_struct() -> RegularStruct {\n     let struct1 = RegularStruct {\n@@ -117,7 +117,7 @@ pub fn change_field_label_regular_struct() -> RegularStruct {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built,typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,optimized_mir,mir_built,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_field_label_regular_struct() -> RegularStruct {\n     let struct1 = RegularStruct {\n@@ -152,7 +152,7 @@ pub fn change_constructor_path_regular_struct() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_constructor_path_regular_struct() {\n     let _ = RegularStruct2 {\n@@ -173,7 +173,7 @@ pub mod change_constructor_path_indirectly_regular_struct {\n \n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"fn_sig,Hir,HirBody,optimized_mir,mir_built,typeck_tables_of\"\n+        except=\"fn_sig,Hir,hir_owner_items,optimized_mir,mir_built,typeck_tables_of\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn function() -> Struct {\n@@ -196,7 +196,7 @@ pub fn change_field_value_tuple_struct() -> TupleStruct {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,optimized_mir,mir_built\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_field_value_tuple_struct() -> TupleStruct {\n     TupleStruct(0, 1, 3)\n@@ -213,7 +213,7 @@ pub fn change_constructor_path_tuple_struct() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_constructor_path_tuple_struct() {\n     let _ = TupleStruct2(0, 1, 2);\n@@ -230,7 +230,7 @@ pub mod change_constructor_path_indirectly_tuple_struct {\n \n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"fn_sig,Hir,HirBody,optimized_mir,mir_built,typeck_tables_of\"\n+        except=\"fn_sig,Hir,hir_owner_items,optimized_mir,mir_built,typeck_tables_of\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn function() -> Struct {"}, {"sha": "8bdc7f806d685889ef562fb31bfaed38e2b19e9d", "filename": "src/test/incremental/hashes/struct_defs.rs", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_defs.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -25,12 +25,12 @@ pub struct LayoutPacked;\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail3\")]\n@@ -42,12 +42,12 @@ struct LayoutC;\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail3\")]\n@@ -62,12 +62,12 @@ struct TupleStructFieldType(i32);\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail3\")]\n@@ -85,12 +85,12 @@ struct TupleStructAddField(i32);\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail3\")]\n@@ -107,12 +107,12 @@ struct TupleStructFieldVisibility(char);\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail3\")]\n@@ -126,12 +126,12 @@ struct RecordStructFieldType { x: f32 }\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail3\")]\n@@ -149,12 +149,12 @@ struct RecordStructFieldName { x: f32 }\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail3\")]\n@@ -168,12 +168,12 @@ struct RecordStructAddField { x: f32 }\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail3\")]\n@@ -189,12 +189,12 @@ struct RecordStructFieldVisibility { x: f32 }\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail3\")]\n@@ -210,12 +210,12 @@ struct AddLifetimeParameter<'a>(&'a f32, &'a f64);\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail3\")]\n@@ -229,12 +229,12 @@ struct AddLifetimeParameterBound<'a, 'b>(&'a f32, &'b f64);\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail3\")]\n@@ -248,12 +248,12 @@ struct AddLifetimeParameterBoundWhereClause<'a, 'b>(&'a f32, &'b f64);\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail3\")]\n@@ -270,12 +270,12 @@ struct AddTypeParameter<T1>(T1, T1);\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail3\")]\n@@ -294,12 +294,12 @@ struct AddTypeParameterBound<T>(T);\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail3\")]\n@@ -313,12 +313,12 @@ struct AddTypeParameterBoundWhereClause<T>(T);\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail3\")]\n@@ -333,12 +333,12 @@ struct AddTypeParameterBoundWhereClause<T>(\n // addresses taken into account by the hashing algorithm).\n // Note: there is no #[cfg(...)], so this is ALWAYS compiled\n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail3\")]\n@@ -352,12 +352,12 @@ struct Visibility;\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail3\")]\n@@ -374,12 +374,12 @@ mod tuple_struct_change_field_type_indirectly {\n     use super::ReferencedType2 as FieldType;\n \n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+    #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"type_of\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+    #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"predicates_of\", cfg=\"cfail3\")]\n@@ -397,12 +397,12 @@ mod record_struct_change_field_type_indirectly {\n     use super::ReferencedType2 as FieldType;\n \n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+    #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"type_of\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+    #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"predicates_of\", cfg=\"cfail3\")]\n@@ -425,12 +425,12 @@ mod change_trait_bound_indirectly {\n     use super::ReferencedTrait2 as Trait;\n \n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+    #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"type_of\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n     #[rustc_dirty(label=\"predicates_of\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+    #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"predicates_of\", cfg=\"cfail3\")]\n@@ -445,12 +445,12 @@ mod change_trait_bound_indirectly_in_where_clause {\n     use super::ReferencedTrait2 as Trait;\n \n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+    #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"type_of\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n     #[rustc_dirty(label=\"predicates_of\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+    #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"predicates_of\", cfg=\"cfail3\")]"}, {"sha": "d3e94640268177e27a45b251a554c53c1c3fd474", "filename": "src/test/incremental/hashes/trait_defs.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -140,8 +140,8 @@ trait TraitChangeMethodParameterName {\n \n     #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n     fn with_default(y: i32) {}\n }\n \n@@ -260,8 +260,8 @@ trait TraitChangeModeSelfOwnToMut: Sized {\n trait TraitChangeModeSelfOwnToMut: Sized {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n     fn method(mut self) {}\n }\n "}, {"sha": "3e8d884be1f02a5ccfd11ed692363d8b44460cc7", "filename": "src/test/incremental/hashes/trait_impls.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -64,8 +64,8 @@ impl ChangeMethodBodyTrait for Foo {\n impl ChangeMethodBodyTrait for Foo {\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n     fn method_name() {\n         ()\n     }\n@@ -91,8 +91,8 @@ impl ChangeMethodBodyTraitInlined for Foo {\n impl ChangeMethodBodyTraitInlined for Foo {\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n     #[inline]\n     fn method_name() {\n         panic!()"}, {"sha": "b50eeb46f9600421e7672db9136f282683aed11f", "filename": "src/test/incremental/hashes/type_defs.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Ftype_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Ftype_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftype_defs.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -24,7 +24,7 @@\n type ChangePrimitiveType = i32;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type ChangePrimitiveType = i64;\n \n@@ -35,7 +35,7 @@ type ChangePrimitiveType = i64;\n type ChangeMutability = &'static i32;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type ChangeMutability = &'static mut i32;\n \n@@ -46,7 +46,7 @@ type ChangeMutability = &'static mut i32;\n type ChangeLifetime<'a> = (&'static i32, &'a i32);\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type ChangeLifetime<'a> = (&'a i32, &'a i32);\n \n@@ -60,7 +60,7 @@ struct Struct2;\n type ChangeTypeStruct = Struct1;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type ChangeTypeStruct = Struct2;\n \n@@ -71,7 +71,7 @@ type ChangeTypeStruct = Struct2;\n type ChangeTypeTuple = (u32, u64);\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type ChangeTypeTuple = (u32, i64);\n \n@@ -91,7 +91,7 @@ enum Enum2 {\n type ChangeTypeEnum = Enum1;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type ChangeTypeEnum = Enum2;\n \n@@ -102,7 +102,7 @@ type ChangeTypeEnum = Enum2;\n type AddTupleField = (i32, i64);\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type AddTupleField = (i32, i64, i16);\n \n@@ -113,7 +113,7 @@ type AddTupleField = (i32, i64, i16);\n type ChangeNestedTupleField = (i32, (i64, i16));\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type ChangeNestedTupleField = (i32, (i64, i8));\n \n@@ -124,7 +124,7 @@ type ChangeNestedTupleField = (i32, (i64, i8));\n type AddTypeParam<T1> = (T1, T1);\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type AddTypeParam<T1, T2> = (T1, T2);\n \n@@ -135,7 +135,7 @@ type AddTypeParam<T1, T2> = (T1, T2);\n type AddTypeParamBound<T1> = (T1, u32);\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type AddTypeParamBound<T1: Clone> = (T1, u32);\n \n@@ -146,7 +146,7 @@ type AddTypeParamBound<T1: Clone> = (T1, u32);\n type AddTypeParamBoundWhereClause<T1> where T1: Clone = (T1, u32);\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type AddTypeParamBoundWhereClause<T1> where T1: Clone+Copy = (T1, u32);\n \n@@ -157,7 +157,7 @@ type AddTypeParamBoundWhereClause<T1> where T1: Clone+Copy = (T1, u32);\n type AddLifetimeParam<'a> = (&'a u32, &'a u32);\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type AddLifetimeParam<'a, 'b> = (&'a u32, &'b u32);\n \n@@ -168,7 +168,7 @@ type AddLifetimeParam<'a, 'b> = (&'a u32, &'b u32);\n type AddLifetimeParamBound<'a, 'b> = (&'a u32, &'b u32);\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type AddLifetimeParamBound<'a, 'b: 'a> = (&'a u32, &'b u32);\n \n@@ -181,7 +181,7 @@ where 'b: 'a\n     = (&'a u32, &'b u32, &'c u32);\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type AddLifetimeParamBoundWhereClause<'a, 'b, 'c>\n where 'b: 'a,\n@@ -200,7 +200,7 @@ mod change_trait_bound_indirectly {\n     #[cfg(not(cfail1))]\n     use super::ReferencedTrait2 as Trait;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     type ChangeTraitBoundIndirectly<T: Trait> = (T, u32);\n }\n@@ -214,7 +214,7 @@ mod change_trait_bound_indirectly_in_where_clause {\n     #[cfg(not(cfail1))]\n     use super::ReferencedTrait2 as Trait;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     type ChangeTraitBoundIndirectly<T> where T : Trait = (T, u32);\n }"}, {"sha": "9b63003482fe50549ecf5cf3fd24e9f15e9f78e8", "filename": "src/test/incremental/hashes/unary_and_binary_exprs.rs", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Funary_and_binary_exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Funary_and_binary_exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Funary_and_binary_exprs.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -21,7 +21,7 @@ pub fn const_negation() -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn const_negation() -> i32 {\n     -1\n@@ -36,7 +36,7 @@ pub fn const_bitwise_not() -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn const_bitwise_not() -> i32 {\n     !99\n@@ -51,7 +51,7 @@ pub fn var_negation(x: i32, y: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn var_negation(x: i32, y: i32) -> i32 {\n     -y\n@@ -66,7 +66,7 @@ pub fn var_bitwise_not(x: i32, y: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn var_bitwise_not(x: i32, y: i32) -> i32 {\n     !y\n@@ -81,7 +81,7 @@ pub fn var_deref(x: &i32, y: &i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built,typeck_tables_of\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built,typeck_tables_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn var_deref(x: &i32, y: &i32) -> i32 {\n     *y\n@@ -96,7 +96,7 @@ pub fn first_const_add() -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn first_const_add() -> i32 {\n     2 + 3\n@@ -111,7 +111,7 @@ pub fn second_const_add() -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn second_const_add() -> i32 {\n     1 + 3\n@@ -126,7 +126,7 @@ pub fn first_var_add(a: i32, b: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn first_var_add(a: i32, b: i32) -> i32 {\n     b + 2\n@@ -141,7 +141,7 @@ pub fn second_var_add(a: i32, b: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn second_var_add(a: i32, b: i32) -> i32 {\n     1 + b\n@@ -156,7 +156,7 @@ pub fn plus_to_minus(a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn plus_to_minus(a: i32) -> i32 {\n     1 - a\n@@ -171,7 +171,7 @@ pub fn plus_to_mult(a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn plus_to_mult(a: i32) -> i32 {\n     1 * a\n@@ -186,7 +186,7 @@ pub fn plus_to_div(a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn plus_to_div(a: i32) -> i32 {\n     1 / a\n@@ -201,7 +201,7 @@ pub fn plus_to_mod(a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn plus_to_mod(a: i32) -> i32 {\n     1 % a\n@@ -216,7 +216,7 @@ pub fn and_to_or(a: bool, b: bool) -> bool {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn and_to_or(a: bool, b: bool) -> bool {\n     a || b\n@@ -231,7 +231,7 @@ pub fn bitwise_and_to_bitwise_or(a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn bitwise_and_to_bitwise_or(a: i32) -> i32 {\n     1 | a\n@@ -246,7 +246,7 @@ pub fn bitwise_and_to_bitwise_xor(a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn bitwise_and_to_bitwise_xor(a: i32) -> i32 {\n     1 ^ a\n@@ -261,7 +261,7 @@ pub fn bitwise_and_to_lshift(a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn bitwise_and_to_lshift(a: i32) -> i32 {\n     a << 1\n@@ -276,7 +276,7 @@ pub fn bitwise_and_to_rshift(a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn bitwise_and_to_rshift(a: i32) -> i32 {\n     a >> 1\n@@ -291,7 +291,7 @@ pub fn eq_to_uneq(a: i32) -> bool {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn eq_to_uneq(a: i32) -> bool {\n     a != 1\n@@ -306,7 +306,7 @@ pub fn eq_to_lt(a: i32) -> bool {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn eq_to_lt(a: i32) -> bool {\n     a < 1\n@@ -321,7 +321,7 @@ pub fn eq_to_gt(a: i32) -> bool {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn eq_to_gt(a: i32) -> bool {\n     a > 1\n@@ -336,7 +336,7 @@ pub fn eq_to_le(a: i32) -> bool {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn eq_to_le(a: i32) -> bool {\n     a <= 1\n@@ -351,7 +351,7 @@ pub fn eq_to_ge(a: i32) -> bool {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn eq_to_ge(a: i32) -> bool {\n     a >= 1\n@@ -368,7 +368,7 @@ pub fn type_cast(a: u8) -> u64 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built,typeck_tables_of\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built,typeck_tables_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn type_cast(a: u8) -> u64 {\n     let b = a as u32;\n@@ -385,7 +385,7 @@ pub fn value_cast(a: u32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn value_cast(a: u32) -> i32 {\n     2 as i32\n@@ -403,7 +403,7 @@ pub fn place() -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn place() -> i32 {\n     let mut x = 10;\n@@ -423,7 +423,7 @@ pub fn rvalue() -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn rvalue() -> i32 {\n     let mut x = 10;\n@@ -440,7 +440,7 @@ pub fn index_to_slice(s: &[u8], i: usize, j: usize) -> u8 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner_items,optimized_mir,mir_built\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn index_to_slice(s: &[u8], i: usize, j: usize) -> u8 {\n     s[j]"}, {"sha": "908f60440fa5b802b63bc00840735c0d90b1c87d", "filename": "src/test/incremental/hashes/while_let_loops.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_let_loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_let_loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_let_loops.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -25,7 +25,7 @@ pub fn change_loop_body() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_loop_body() {\n     let mut _x = 0;\n@@ -48,7 +48,7 @@ pub fn change_loop_condition() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_loop_condition() {\n     let mut _x = 0;\n@@ -70,7 +70,7 @@ pub fn add_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_break() {\n     let mut _x = 0;\n@@ -93,7 +93,7 @@ pub fn add_loop_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_loop_label() {\n     let mut _x = 0;\n@@ -116,7 +116,7 @@ pub fn add_loop_label_to_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_loop_label_to_break() {\n     let mut _x = 0;\n@@ -141,7 +141,7 @@ pub fn change_break_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_break_label() {\n     let mut _x = 0;\n@@ -166,7 +166,7 @@ pub fn add_loop_label_to_continue() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_loop_label_to_continue() {\n     let mut _x = 0;\n@@ -191,7 +191,7 @@ pub fn change_continue_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_continue_label() {\n     let mut _x = 0;\n@@ -216,7 +216,7 @@ pub fn change_continue_to_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_continue_to_break() {\n     let mut _x = 0;"}, {"sha": "365ec5fa567d9e8eb4aad6082281af79b715bffc", "filename": "src/test/incremental/hashes/while_loops.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_loops.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -25,7 +25,7 @@ pub fn change_loop_body() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_loop_body() {\n     let mut _x = 0;\n@@ -48,7 +48,7 @@ pub fn change_loop_condition() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_loop_condition() {\n     let mut _x = 0;\n@@ -70,7 +70,7 @@ pub fn add_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, typeck_tables_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, optimized_mir, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_break() {\n     let mut _x = 0;\n@@ -93,7 +93,7 @@ pub fn add_loop_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_loop_label() {\n     let mut _x = 0;\n@@ -116,7 +116,7 @@ pub fn add_loop_label_to_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_loop_label_to_break() {\n     let mut _x = 0;\n@@ -141,7 +141,7 @@ pub fn change_break_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_break_label() {\n     let mut _x = 0;\n@@ -166,7 +166,7 @@ pub fn add_loop_label_to_continue() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_loop_label_to_continue() {\n     let mut _x = 0;\n@@ -191,7 +191,7 @@ pub fn change_continue_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_continue_label() {\n     let mut _x = 0;\n@@ -216,7 +216,7 @@ pub fn change_continue_to_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items, mir_built, optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_continue_to_break() {\n     let mut _x = 0;"}, {"sha": "9d731636142aa33d8da292ff11a5127409c79090", "filename": "src/test/incremental/ich_method_call_trait_scope.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fich_method_call_trait_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fich_method_call_trait_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fich_method_call_trait_scope.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -27,14 +27,14 @@ mod mod3 {\n     use Trait2;\n \n     #[rustc_clean(label=\"Hir\", cfg=\"rpass2\")]\n-    #[rustc_clean(label=\"HirBody\", cfg=\"rpass2\")]\n+    #[rustc_clean(label=\"hir_owner_items\", cfg=\"rpass2\")]\n     #[rustc_dirty(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n     fn bar() {\n         ().method();\n     }\n \n     #[rustc_clean(label=\"Hir\", cfg=\"rpass2\")]\n-    #[rustc_clean(label=\"HirBody\", cfg=\"rpass2\")]\n+    #[rustc_clean(label=\"hir_owner_items\", cfg=\"rpass2\")]\n     #[rustc_clean(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n     fn baz() {\n         22; // no method call, traits in scope don't matter"}, {"sha": "54db7a2116deb18caeb686fbb99944e290ac4e81", "filename": "src/test/incremental/ich_nested_items.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fich_nested_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fich_nested_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fich_nested_items.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -8,13 +8,13 @@\n #![feature(rustc_attrs)]\n \n #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n pub fn foo() {\n     #[cfg(cfail1)]\n     pub fn baz() { } // order is different...\n \n     #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"HirBody\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail2\")]\n     pub fn bar() { } // but that doesn't matter.\n \n     #[cfg(cfail2)]"}, {"sha": "723c367af9e26d542825e9d2d5ea54b8a626fdfb", "filename": "src/test/incremental/ich_resolve_results.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fich_resolve_results.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fich_resolve_results.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fich_resolve_results.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -29,17 +29,17 @@ mod mod3 {\n     use mod2::Foo;\n \n     #[rustc_clean(label=\"Hir\", cfg=\"rpass2\")]\n-    #[rustc_clean(label=\"HirBody\", cfg=\"rpass2\")]\n+    #[rustc_clean(label=\"hir_owner_items\", cfg=\"rpass2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"rpass3\")]\n-    #[rustc_dirty(label=\"HirBody\", cfg=\"rpass3\")]\n+    #[rustc_dirty(label=\"hir_owner_items\", cfg=\"rpass3\")]\n     fn in_expr() {\n         Foo(0);\n     }\n \n     #[rustc_clean(label=\"Hir\", cfg=\"rpass2\")]\n-    #[rustc_clean(label=\"HirBody\", cfg=\"rpass2\")]\n+    #[rustc_clean(label=\"hir_owner_items\", cfg=\"rpass2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"rpass3\")]\n-    #[rustc_dirty(label=\"HirBody\", cfg=\"rpass3\")]\n+    #[rustc_dirty(label=\"hir_owner_items\", cfg=\"rpass3\")]\n     fn in_type() {\n         test::<Foo>();\n     }"}, {"sha": "ea81d3e5862ba2c194f47b57ad20bd94ac0aef52", "filename": "src/test/incremental/source_loc_macros.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fsource_loc_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fsource_loc_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fsource_loc_macros.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -8,25 +8,25 @@\n #![feature(rustc_attrs)]\n \n #[rustc_clean(label=\"Hir\", cfg=\"rpass2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"rpass2\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"rpass2\")]\n fn line_same() {\n     let _ = line!();\n }\n \n #[rustc_clean(label=\"Hir\", cfg=\"rpass2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"rpass2\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"rpass2\")]\n fn col_same() {\n     let _ = column!();\n }\n \n #[rustc_clean(label=\"Hir\", cfg=\"rpass2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"rpass2\")]\n+#[rustc_clean(label=\"hir_owner_items\", cfg=\"rpass2\")]\n fn file_same() {\n     let _ = file!();\n }\n \n #[rustc_clean(label=\"Hir\", cfg=\"rpass2\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"rpass2\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"rpass2\")]\n fn line_different() {\n     #[cfg(rpass1)]\n     {\n@@ -39,7 +39,7 @@ fn line_different() {\n }\n \n #[rustc_clean(label=\"Hir\", cfg=\"rpass2\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"rpass2\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"rpass2\")]\n fn col_different() {\n     #[cfg(rpass1)]\n     {"}, {"sha": "1a1ab95598d125c535e292b253a69b0732b5e3bb", "filename": "src/test/incremental/spans_significant_w_debuginfo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fspans_significant_w_debuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fspans_significant_w_debuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fspans_significant_w_debuginfo.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -13,5 +13,5 @@ pub fn main() {}\n \n #[cfg(rpass2)]\n #[rustc_dirty(label=\"Hir\", cfg=\"rpass2\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"rpass2\")]\n+#[rustc_dirty(label=\"hir_owner_items\", cfg=\"rpass2\")]\n pub fn main() {}"}, {"sha": "11a42262c16d2012c49e5810df7fd288c7285f87", "filename": "src/test/incremental/string_constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fstring_constant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0b60c428a051773dea79426cb4a6a03737ca902/src%2Ftest%2Fincremental%2Fstring_constant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fstring_constant.rs?ref=c0b60c428a051773dea79426cb4a6a03737ca902", "patch": "@@ -18,7 +18,7 @@ pub mod x {\n     }\n \n     #[cfg(cfail2)]\n-    #[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n+    #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n     #[rustc_dirty(label=\"optimized_mir\", cfg=\"cfail2\")]\n     pub fn x() {\n         println!(\"{}\", \"2\");"}]}