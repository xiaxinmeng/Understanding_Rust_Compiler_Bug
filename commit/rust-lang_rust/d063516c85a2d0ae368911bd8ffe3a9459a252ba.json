{"sha": "d063516c85a2d0ae368911bd8ffe3a9459a252ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwNjM1MTZjODVhMmQwYWUzNjg5MTFiZDhmZmUzYTk0NTlhMjUyYmE=", "commit": {"author": {"name": "airt", "email": "airtial@gmail.com", "date": "2019-04-30T20:41:00Z"}, "committer": {"name": "airt", "email": "airtial@gmail.com", "date": "2019-04-30T20:41:00Z"}, "message": "check closure arguments before use it", "tree": {"sha": "830c3851c3853ac6a6f5cd43dced79cbb67201d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/830c3851c3853ac6a6f5cd43dced79cbb67201d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d063516c85a2d0ae368911bd8ffe3a9459a252ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d063516c85a2d0ae368911bd8ffe3a9459a252ba", "html_url": "https://github.com/rust-lang/rust/commit/d063516c85a2d0ae368911bd8ffe3a9459a252ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d063516c85a2d0ae368911bd8ffe3a9459a252ba/comments", "author": {"login": "airt", "id": 5058439, "node_id": "MDQ6VXNlcjUwNTg0Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/5058439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/airt", "html_url": "https://github.com/airt", "followers_url": "https://api.github.com/users/airt/followers", "following_url": "https://api.github.com/users/airt/following{/other_user}", "gists_url": "https://api.github.com/users/airt/gists{/gist_id}", "starred_url": "https://api.github.com/users/airt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/airt/subscriptions", "organizations_url": "https://api.github.com/users/airt/orgs", "repos_url": "https://api.github.com/users/airt/repos", "events_url": "https://api.github.com/users/airt/events{/privacy}", "received_events_url": "https://api.github.com/users/airt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "airt", "id": 5058439, "node_id": "MDQ6VXNlcjUwNTg0Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/5058439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/airt", "html_url": "https://github.com/airt", "followers_url": "https://api.github.com/users/airt/followers", "following_url": "https://api.github.com/users/airt/following{/other_user}", "gists_url": "https://api.github.com/users/airt/gists{/gist_id}", "starred_url": "https://api.github.com/users/airt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/airt/subscriptions", "organizations_url": "https://api.github.com/users/airt/orgs", "repos_url": "https://api.github.com/users/airt/repos", "events_url": "https://api.github.com/users/airt/events{/privacy}", "received_events_url": "https://api.github.com/users/airt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d6a100f8112f1cc0dadbb34220f1b8a849cdfbe", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d6a100f8112f1cc0dadbb34220f1b8a849cdfbe", "html_url": "https://github.com/rust-lang/rust/commit/5d6a100f8112f1cc0dadbb34220f1b8a849cdfbe"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "3ea18f1d14d4b70d0f182139be19da374b7057f0", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d063516c85a2d0ae368911bd8ffe3a9459a252ba/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d063516c85a2d0ae368911bd8ffe3a9459a252ba/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=d063516c85a2d0ae368911bd8ffe3a9459a252ba", "patch": "@@ -1980,7 +1980,8 @@ fn lint_search_is_some<'a, 'tcx>(\n                 if search_method == \"find\";\n                 if let hir::ExprKind::Closure(_, _, body_id, ..) = search_args[1].node;\n                 let closure_body = cx.tcx.hir().body(body_id);\n-                if let hir::PatKind::Ref(..) = closure_body.arguments[0].pat.node;\n+                if let Some(closure_arg) = closure_body.arguments.get(0);\n+                if let hir::PatKind::Ref(..) = closure_arg.pat.node;\n                 then {\n                     Some(search_snippet.replacen('&', \"\", 1))\n                 } else {"}]}