{"sha": "09233ce3c0fbcf83abedd7525faa324a2fa2c21c", "node_id": "C_kwDOAAsO6NoAKDA5MjMzY2UzYzBmYmNmODNhYmVkZDc1MjVmYWEzMjRhMmZhMmMyMWM", "commit": {"author": {"name": "Tomoaki Kawada", "email": "kawada@kmckk.co.jp", "date": "2022-01-28T08:41:13Z"}, "committer": {"name": "Tomoaki Kawada", "email": "kawada@kmckk.co.jp", "date": "2022-01-31T02:31:55Z"}, "message": "kmc-solid: Inherit the calling task's base priority in `Thread::new`\n\nFixes a spawned task getting an unexpectedly higher priority if it's\nspawned by a task whose priority is temporarily boosted by a priority-\nprotection mutex.", "tree": {"sha": "4ecaa5641be52164505b7a4e7f0828a07f188108", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ecaa5641be52164505b7a4e7f0828a07f188108"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09233ce3c0fbcf83abedd7525faa324a2fa2c21c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09233ce3c0fbcf83abedd7525faa324a2fa2c21c", "html_url": "https://github.com/rust-lang/rust/commit/09233ce3c0fbcf83abedd7525faa324a2fa2c21c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09233ce3c0fbcf83abedd7525faa324a2fa2c21c/comments", "author": {"login": "kawadakk", "id": 81723441, "node_id": "MDQ6VXNlcjgxNzIzNDQx", "avatar_url": "https://avatars.githubusercontent.com/u/81723441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kawadakk", "html_url": "https://github.com/kawadakk", "followers_url": "https://api.github.com/users/kawadakk/followers", "following_url": "https://api.github.com/users/kawadakk/following{/other_user}", "gists_url": "https://api.github.com/users/kawadakk/gists{/gist_id}", "starred_url": "https://api.github.com/users/kawadakk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kawadakk/subscriptions", "organizations_url": "https://api.github.com/users/kawadakk/orgs", "repos_url": "https://api.github.com/users/kawadakk/repos", "events_url": "https://api.github.com/users/kawadakk/events{/privacy}", "received_events_url": "https://api.github.com/users/kawadakk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kawadakk", "id": 81723441, "node_id": "MDQ6VXNlcjgxNzIzNDQx", "avatar_url": "https://avatars.githubusercontent.com/u/81723441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kawadakk", "html_url": "https://github.com/kawadakk", "followers_url": "https://api.github.com/users/kawadakk/followers", "following_url": "https://api.github.com/users/kawadakk/following{/other_user}", "gists_url": "https://api.github.com/users/kawadakk/gists{/gist_id}", "starred_url": "https://api.github.com/users/kawadakk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kawadakk/subscriptions", "organizations_url": "https://api.github.com/users/kawadakk/orgs", "repos_url": "https://api.github.com/users/kawadakk/repos", "events_url": "https://api.github.com/users/kawadakk/events{/privacy}", "received_events_url": "https://api.github.com/users/kawadakk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ab502c6d308b0ccac8127c0464e432334755a60", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ab502c6d308b0ccac8127c0464e432334755a60", "html_url": "https://github.com/rust-lang/rust/commit/5ab502c6d308b0ccac8127c0464e432334755a60"}], "stats": {"total": 7, "additions": 2, "deletions": 5}, "files": [{"sha": "a8ecc1ada4ad4736e7927765fdce225116a02f3b", "filename": "library/std/src/sys/itron/thread.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/09233ce3c0fbcf83abedd7525faa324a2fa2c21c/library%2Fstd%2Fsrc%2Fsys%2Fitron%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09233ce3c0fbcf83abedd7525faa324a2fa2c21c/library%2Fstd%2Fsrc%2Fsys%2Fitron%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fitron%2Fthread.rs?ref=09233ce3c0fbcf83abedd7525faa324a2fa2c21c", "patch": "@@ -84,10 +84,6 @@ impl Thread {\n     ///\n     /// See `thread::Builder::spawn_unchecked` for safety requirements.\n     pub unsafe fn new(stack: usize, p: Box<dyn FnOnce()>) -> io::Result<Thread> {\n-        // Inherit the current task's priority\n-        let current_task = task::try_current_task_id().map_err(|e| e.as_io_error())?;\n-        let priority = task::try_task_priority(current_task).map_err(|e| e.as_io_error())?;\n-\n         let inner = Box::new(ThreadInner {\n             start: UnsafeCell::new(ManuallyDrop::new(p)),\n             lifecycle: AtomicUsize::new(LIFECYCLE_INIT),\n@@ -175,7 +171,8 @@ impl Thread {\n                 exinf: inner_ptr as abi::EXINF,\n                 // The entry point\n                 task: Some(trampoline),\n-                itskpri: priority,\n+                // Inherit the calling task's base priority\n+                itskpri: abi::TPRI_SELF,\n                 stksz: stack,\n                 // Let the kernel allocate the stack,\n                 stk: crate::ptr::null_mut(),"}]}