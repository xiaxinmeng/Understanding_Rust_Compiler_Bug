{"sha": "b8714c60409c8c498852d54e6f43f087b3935c8f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4NzE0YzYwNDA5YzhjNDk4ODUyZDU0ZTZmNDNmMDg3YjM5MzVjOGY=", "commit": {"author": {"name": "Jeff Crocker", "email": "crockagile@gmail.com", "date": "2017-12-05T22:57:35Z"}, "committer": {"name": "Jeff Crocker", "email": "crockagile@gmail.com", "date": "2017-12-05T22:57:35Z"}, "message": "Update 'while let loop' fingerprint hash tests", "tree": {"sha": "b2f4202f857b8f44d60ade09780859e9c1ffe0b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2f4202f857b8f44d60ade09780859e9c1ffe0b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8714c60409c8c498852d54e6f43f087b3935c8f", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJaJyRfAAoJEAWZfbCdMLzW7LAP/1FW6yvTcz/PXJCQGOh0UYKS\nyEqFl9G1H51MRfuGlYw4F/6W1Ehreq3I1s5FDvGr2VlUWbuch/IBEMaBZ8M8g+Jd\nN2+x83R3wb5ycmzlqYwUbaSAm/w5AGYwP4EXPleZZizPI+/aWubfW36IcvEcHqcN\nmZV8d71AUF8A5o8EuOzLv2RWnfZjJ6l/0HbkKbNoaI4U/jZHHGuRpLO9IF8l2lZp\nX8DhCGIHmfyi4Ohw1m8scu3ihwccZTRJGp/kd7m1ZIyfE683j0Mz4IAx2XsUPR7k\nHt/XHcC+VZe3IHPdUiBSjWvHUtfK+EfJ/k8Or5X0JdOzQw3I0k+NMfYRlvnmZz0d\n2b1cIiTE7CX8MX8xur0NmWNpus/zz00R8QmCB/R4fOuy+E+9q9sTFnnEm0zugAQU\neGYzmE7L4STzEimbfJNINUfggIGasJIY8K6G1ZEiwkRRLsCJ66Z1Fzo6qRnWG7My\nf3X+KxSROtCOG6hCu8EkCdwUHDGC9XB/7/zPhPgLOedBYtj/8BDRwUiaMz1fWrmH\nWt20jGJKio2mtjpcbRO/mZ62yQMvzfpLXj7hSLr3tfo4pKNLbST96qmTsiPRUoKc\n5jD58a7k0kqFTxZhSCCponzRzkf+u9hwdhsoJ+QlIn7bbv4E7FK87JRMsSxHTHje\ntHLkEvsHHLcPHBeYrZIQ\n=yVbq\n-----END PGP SIGNATURE-----", "payload": "tree b2f4202f857b8f44d60ade09780859e9c1ffe0b9\nparent 3f48cbb4557d525556bf31c9b3227a9aef299385\nauthor Jeff Crocker <crockagile@gmail.com> 1512514655 -0800\ncommitter Jeff Crocker <crockagile@gmail.com> 1512514655 -0800\n\nUpdate 'while let loop' fingerprint hash tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8714c60409c8c498852d54e6f43f087b3935c8f", "html_url": "https://github.com/rust-lang/rust/commit/b8714c60409c8c498852d54e6f43f087b3935c8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8714c60409c8c498852d54e6f43f087b3935c8f/comments", "author": {"login": "CrockAgile", "id": 5395183, "node_id": "MDQ6VXNlcjUzOTUxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/5395183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CrockAgile", "html_url": "https://github.com/CrockAgile", "followers_url": "https://api.github.com/users/CrockAgile/followers", "following_url": "https://api.github.com/users/CrockAgile/following{/other_user}", "gists_url": "https://api.github.com/users/CrockAgile/gists{/gist_id}", "starred_url": "https://api.github.com/users/CrockAgile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CrockAgile/subscriptions", "organizations_url": "https://api.github.com/users/CrockAgile/orgs", "repos_url": "https://api.github.com/users/CrockAgile/repos", "events_url": "https://api.github.com/users/CrockAgile/events{/privacy}", "received_events_url": "https://api.github.com/users/CrockAgile/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CrockAgile", "id": 5395183, "node_id": "MDQ6VXNlcjUzOTUxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/5395183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CrockAgile", "html_url": "https://github.com/CrockAgile", "followers_url": "https://api.github.com/users/CrockAgile/followers", "following_url": "https://api.github.com/users/CrockAgile/following{/other_user}", "gists_url": "https://api.github.com/users/CrockAgile/gists{/gist_id}", "starred_url": "https://api.github.com/users/CrockAgile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CrockAgile/subscriptions", "organizations_url": "https://api.github.com/users/CrockAgile/orgs", "repos_url": "https://api.github.com/users/CrockAgile/repos", "events_url": "https://api.github.com/users/CrockAgile/events{/privacy}", "received_events_url": "https://api.github.com/users/CrockAgile/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f48cbb4557d525556bf31c9b3227a9aef299385", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f48cbb4557d525556bf31c9b3227a9aef299385", "html_url": "https://github.com/rust-lang/rust/commit/3f48cbb4557d525556bf31c9b3227a9aef299385"}], "stats": {"total": 90, "additions": 36, "deletions": 54}, "files": [{"sha": "cab38d0adc265c347cc4d0648496a5fc4bd80c41", "filename": "src/test/incremental/hashes/while_let_loops.rs", "status": "modified", "additions": 36, "deletions": 54, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/b8714c60409c8c498852d54e6f43f087b3935c8f/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_let_loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8714c60409c8c498852d54e6f43f087b3935c8f/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_let_loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_let_loops.rs?ref=b8714c60409c8c498852d54e6f43f087b3935c8f", "patch": "@@ -27,7 +27,7 @@\n \n // Change loop body ------------------------------------------------------------\n #[cfg(cfail1)]\n-fn change_loop_body() {\n+pub fn change_loop_body() {\n     let mut _x = 0;\n     while let Some(0u32) = None {\n         _x = 1;\n@@ -36,11 +36,9 @@ fn change_loop_body() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_loop_body() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_loop_body() {\n     let mut _x = 0;\n     while let Some(0u32) = None {\n         _x = 2;\n@@ -52,7 +50,7 @@ fn change_loop_body() {\n \n // Change loop body ------------------------------------------------------------\n #[cfg(cfail1)]\n-fn change_loop_condition() {\n+pub fn change_loop_condition() {\n     let mut _x = 0;\n     while let Some(0u32) = None {\n         _x = 1;\n@@ -61,11 +59,9 @@ fn change_loop_condition() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_loop_condition() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_loop_condition() {\n     let mut _x = 0;\n     while let Some(1u32) = None {\n         _x = 1;\n@@ -77,19 +73,17 @@ fn change_loop_condition() {\n \n // Add break -------------------------------------------------------------------\n #[cfg(cfail1)]\n-fn add_break() {\n+pub fn add_break() {\n     let mut _x = 0;\n     while let Some(0u32) = None {\n         _x = 1;\n     }\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn add_break() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn add_break() {\n     let mut _x = 0;\n     while let Some(0u32) = None {\n         _x = 1;\n@@ -101,7 +95,7 @@ fn add_break() {\n \n // Add loop label --------------------------------------------------------------\n #[cfg(cfail1)]\n-fn add_loop_label() {\n+pub fn add_loop_label() {\n     let mut _x = 0;\n     while let Some(0u32) = None {\n         _x = 1;\n@@ -110,11 +104,9 @@ fn add_loop_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn add_loop_label() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn add_loop_label() {\n     let mut _x = 0;\n     'label: while let Some(0u32) = None {\n         _x = 1;\n@@ -126,7 +118,7 @@ fn add_loop_label() {\n \n // Add loop label to break -----------------------------------------------------\n #[cfg(cfail1)]\n-fn add_loop_label_to_break() {\n+pub fn add_loop_label_to_break() {\n     let mut _x = 0;\n     'label: while let Some(0u32) = None {\n         _x = 1;\n@@ -135,11 +127,9 @@ fn add_loop_label_to_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn add_loop_label_to_break() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn add_loop_label_to_break() {\n     let mut _x = 0;\n     'label: while let Some(0u32) = None {\n         _x = 1;\n@@ -151,7 +141,7 @@ fn add_loop_label_to_break() {\n \n // Change break label ----------------------------------------------------------\n #[cfg(cfail1)]\n-fn change_break_label() {\n+pub fn change_break_label() {\n     let mut _x = 0;\n     'outer: while let Some(0u32) = None {\n         'inner: while let Some(0u32) = None {\n@@ -162,11 +152,9 @@ fn change_break_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_break_label() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_break_label() {\n     let mut _x = 0;\n     'outer: while let Some(0u32) = None {\n         'inner: while let Some(0u32) = None {\n@@ -180,7 +168,7 @@ fn change_break_label() {\n \n // Add loop label to continue --------------------------------------------------\n #[cfg(cfail1)]\n-fn add_loop_label_to_continue() {\n+pub fn add_loop_label_to_continue() {\n     let mut _x = 0;\n     'label: while let Some(0u32) = None {\n         _x = 1;\n@@ -189,11 +177,9 @@ fn add_loop_label_to_continue() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn add_loop_label_to_continue() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn add_loop_label_to_continue() {\n     let mut _x = 0;\n     'label: while let Some(0u32) = None {\n         _x = 1;\n@@ -205,7 +191,7 @@ fn add_loop_label_to_continue() {\n \n // Change continue label ----------------------------------------------------------\n #[cfg(cfail1)]\n-fn change_continue_label() {\n+pub fn change_continue_label() {\n     let mut _x = 0;\n     'outer: while let Some(0u32) = None {\n         'inner: while let Some(0u32) = None {\n@@ -216,11 +202,9 @@ fn change_continue_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_continue_label() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_continue_label() {\n     let mut _x = 0;\n     'outer: while let Some(0u32) = None {\n         'inner: while let Some(0u32) = None {\n@@ -234,7 +218,7 @@ fn change_continue_label() {\n \n // Change continue to break ----------------------------------------------------\n #[cfg(cfail1)]\n-fn change_continue_to_break() {\n+pub fn change_continue_to_break() {\n     let mut _x = 0;\n     while let Some(0u32) = None {\n         _x = 1;\n@@ -243,11 +227,9 @@ fn change_continue_to_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_continue_to_break() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_continue_to_break() {\n     let mut _x = 0;\n     while let Some(0u32) = None {\n         _x = 1;"}]}