{"sha": "f717a77ecc50cc121a65fe14ab34d8a6953b7d7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3MTdhNzdlY2M1MGNjMTIxYTY1ZmUxNGFiMzRkOGE2OTUzYjdkN2Y=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-08-23T08:46:23Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-08-23T09:16:50Z"}, "message": "Re-add false positive check", "tree": {"sha": "fe9c631e57912bbb5b69132455dc71c2a2717a67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe9c631e57912bbb5b69132455dc71c2a2717a67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f717a77ecc50cc121a65fe14ab34d8a6953b7d7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f717a77ecc50cc121a65fe14ab34d8a6953b7d7f", "html_url": "https://github.com/rust-lang/rust/commit/f717a77ecc50cc121a65fe14ab34d8a6953b7d7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f717a77ecc50cc121a65fe14ab34d8a6953b7d7f/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce2d2920efc7d1ac2f54c852a63732cb0a2792ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce2d2920efc7d1ac2f54c852a63732cb0a2792ad", "html_url": "https://github.com/rust-lang/rust/commit/ce2d2920efc7d1ac2f54c852a63732cb0a2792ad"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "1df6b9294d7b304f169f1445bc3624cd15c66223", "filename": "clippy_lints/src/format.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f717a77ecc50cc121a65fe14ab34d8a6953b7d7f/clippy_lints%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f717a77ecc50cc121a65fe14ab34d8a6953b7d7f/clippy_lints%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat.rs?ref=f717a77ecc50cc121a65fe14ab34d8a6953b7d7f", "patch": "@@ -1,5 +1,7 @@\n use crate::utils::paths;\n-use crate::utils::{is_expn_of, last_path_segment, match_def_path, resolve_node, snippet, span_lint_and_then};\n+use crate::utils::{\n+    is_expn_of, last_path_segment, match_def_path, match_type, resolve_node, snippet, span_lint_and_then, walk_ptrs_ty,\n+};\n use if_chain::if_chain;\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintContext, LintPass};\n@@ -87,6 +89,10 @@ fn on_argumentv1_new<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr, arm\n         if let PatKind::Tuple(ref pats, None) = arms[0].pats[0].node;\n         if pats.len() == 1;\n         then {\n+            let ty = walk_ptrs_ty(cx.tables.pat_ty(&pats[0]));\n+            if ty.sty != rustc::ty::Str && !match_type(cx, ty, &paths::STRING) {\n+                return None;\n+            }\n             if let ExprKind::Lit(ref lit) = format_args.node {\n                 if let LitKind::Str(ref s, _) = lit.node {\n                     return Some(format!(\"{:?}.to_string()\", s.as_str()));\n@@ -97,6 +103,8 @@ fn on_argumentv1_new<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr, arm\n                     if path.ident.name == sym!(to_string) {\n                         return Some(format!(\"{}\", snip));\n                     }\n+                } else if let ExprKind::Binary(..) = format_args.node {\n+                    return Some(format!(\"{}\", snip));\n                 }\n                 return Some(format!(\"{}.to_string()\", snip));\n             }"}, {"sha": "6e100230a3ad338626ef7d2ab2b35e0a881a520f", "filename": "tests/ui/format.fixed", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f717a77ecc50cc121a65fe14ab34d8a6953b7d7f/tests%2Fui%2Fformat.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f717a77ecc50cc121a65fe14ab34d8a6953b7d7f/tests%2Fui%2Fformat.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.fixed?ref=f717a77ecc50cc121a65fe14ab34d8a6953b7d7f", "patch": "@@ -60,4 +60,8 @@ fn main() {\n     42.to_string();\n     let x = std::path::PathBuf::from(\"/bar/foo/qux\");\n     x.display().to_string();\n+\n+    // False positive\n+    let a = \"foo\".to_string();\n+    let _ = Some(a + \"bar\");\n }"}, {"sha": "1fae6603ac099debbc7b1509f635da5fa7997f5a", "filename": "tests/ui/format.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f717a77ecc50cc121a65fe14ab34d8a6953b7d7f/tests%2Fui%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f717a77ecc50cc121a65fe14ab34d8a6953b7d7f/tests%2Fui%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.rs?ref=f717a77ecc50cc121a65fe14ab34d8a6953b7d7f", "patch": "@@ -63,4 +63,8 @@ fn main() {\n     format!(\"{}\", 42.to_string());\n     let x = std::path::PathBuf::from(\"/bar/foo/qux\");\n     format!(\"{}\", x.display().to_string());\n+\n+    // False positive\n+    let a = \"foo\".to_string();\n+    let _ = Some(format!(\"{}\", a + \"bar\"));\n }"}, {"sha": "9736f34b03b4a86d6c78c58a05dc9559a902e0b4", "filename": "tests/ui/format.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f717a77ecc50cc121a65fe14ab34d8a6953b7d7f/tests%2Fui%2Fformat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f717a77ecc50cc121a65fe14ab34d8a6953b7d7f/tests%2Fui%2Fformat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.stderr?ref=f717a77ecc50cc121a65fe14ab34d8a6953b7d7f", "patch": "@@ -75,5 +75,11 @@ error: useless use of `format!`\n LL |     format!(\"{}\", x.display().to_string());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using .to_string(): `x.display().to_string();`\n \n-error: aborting due to 12 previous errors\n+error: useless use of `format!`\n+  --> $DIR/format.rs:69:18\n+   |\n+LL |     let _ = Some(format!(\"{}\", a + \"bar\"));\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using .to_string(): `a + \"bar\"`\n+\n+error: aborting due to 13 previous errors\n "}]}