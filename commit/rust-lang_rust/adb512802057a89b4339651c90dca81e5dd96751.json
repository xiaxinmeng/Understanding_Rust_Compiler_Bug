{"sha": "adb512802057a89b4339651c90dca81e5dd96751", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkYjUxMjgwMjA1N2E4OWI0MzM5NjUxYzkwZGNhODFlNWRkOTY3NTE=", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2014-01-23T04:54:36Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2014-01-24T21:44:16Z"}, "message": "libnative: Avoid gai_strerror on windows.", "tree": {"sha": "0fea53f069d67f4261d1987df2579710bf56d0f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0fea53f069d67f4261d1987df2579710bf56d0f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adb512802057a89b4339651c90dca81e5dd96751", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adb512802057a89b4339651c90dca81e5dd96751", "html_url": "https://github.com/rust-lang/rust/commit/adb512802057a89b4339651c90dca81e5dd96751", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adb512802057a89b4339651c90dca81e5dd96751/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a04cc4db2c077fd2fcf6e5bcca92eecb3cfa8380", "url": "https://api.github.com/repos/rust-lang/rust/commits/a04cc4db2c077fd2fcf6e5bcca92eecb3cfa8380", "html_url": "https://github.com/rust-lang/rust/commit/a04cc4db2c077fd2fcf6e5bcca92eecb3cfa8380"}], "stats": {"total": 39, "additions": 28, "deletions": 11}, "files": [{"sha": "5bdeaa17e745fedef4714019894fe9a627b44dcf", "filename": "src/libnative/io/addrinfo.rs", "status": "modified", "additions": 28, "deletions": 11, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/adb512802057a89b4339651c90dca81e5dd96751/src%2Flibnative%2Fio%2Faddrinfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adb512802057a89b4339651c90dca81e5dd96751/src%2Flibnative%2Fio%2Faddrinfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Faddrinfo.rs?ref=adb512802057a89b4339651c90dca81e5dd96751", "patch": "@@ -11,12 +11,10 @@\n use ai = std::io::net::addrinfo;\n use std::c_str::CString;\n use std::cast;\n-use std::io;\n use std::io::IoError;\n use std::libc;\n use std::libc::{c_char, c_int};\n use std::ptr::null;\n-use std::str::raw::from_c_str;\n \n use super::net::sockaddr_to_addr;\n \n@@ -55,13 +53,7 @@ impl GetAddrInfoRequest {\n \n         // Error?\n         if s != 0 {\n-            let err_str = unsafe { from_c_str(gai_strerror(s)) };\n-\n-            return Err(IoError {\n-                kind: io::OtherIoError,\n-                desc: \"unable to resolve host\",\n-                detail: Some(err_str),\n-            });\n+            return Err(get_error(s));\n         }\n \n         // Collect all the results we found\n@@ -92,9 +84,34 @@ impl GetAddrInfoRequest {\n     }\n }\n \n-extern {\n+extern \"system\" {\n     fn getaddrinfo(node: *c_char, service: *c_char,\n                    hints: *libc::addrinfo, res: **libc::addrinfo) -> c_int;\n-    fn gai_strerror(errcode: c_int) -> *c_char;\n     fn freeaddrinfo(res: *libc::addrinfo);\n+    #[cfg(not(windows))]\n+    fn gai_strerror(errcode: c_int) -> *c_char;\n+    #[cfg(windows)]\n+    fn WSAGetLastError() -> c_int;\n+}\n+\n+#[cfg(windows)]\n+fn get_error(_: c_int) -> IoError {\n+    use super::translate_error;\n+\n+    unsafe {\n+        translate_error(WSAGetLastError() as i32, true)\n+    }\n+}\n+\n+#[cfg(not(windows))]\n+fn get_error(s: c_int) -> IoError {\n+    use std::io;\n+    use std::str::raw::from_c_str;\n+\n+    let err_str = unsafe { from_c_str(gai_strerror(s)) };\n+    IoError {\n+        kind: io::OtherIoError,\n+        desc: \"unable to resolve host\",\n+        detail: Some(err_str),\n+    }\n }"}]}