{"sha": "f14902f67bbc5f68cb700b6b929b269d3d51a4a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNDkwMmY2N2JiYzVmNjhjYjcwMGI2YjkyOWIyNjlkM2Q1MWE0YTk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-27T20:03:08Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-27T20:03:08Z"}, "message": "move hir db", "tree": {"sha": "79db5df67fc5fbc34fb61c5bfc2ce038e4198fc9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79db5df67fc5fbc34fb61c5bfc2ce038e4198fc9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f14902f67bbc5f68cb700b6b929b269d3d51a4a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f14902f67bbc5f68cb700b6b929b269d3d51a4a9", "html_url": "https://github.com/rust-lang/rust/commit/f14902f67bbc5f68cb700b6b929b269d3d51a4a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f14902f67bbc5f68cb700b6b929b269d3d51a4a9/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "109a7f3717612c58c73c5c153b632385b922fc9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/109a7f3717612c58c73c5c153b632385b922fc9d", "html_url": "https://github.com/rust-lang/rust/commit/109a7f3717612c58c73c5c153b632385b922fc9d"}], "stats": {"total": 144, "additions": 78, "deletions": 66}, "files": [{"sha": "08aa9053b731b70d62997115d7a37213e31239bf", "filename": "crates/ra_analysis/src/db.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f14902f67bbc5f68cb700b6b929b269d3d51a4a9/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f14902f67bbc5f68cb700b6b929b269d3d51a4a9/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdb.rs?ref=f14902f67bbc5f68cb700b6b929b269d3d51a4a9", "patch": "@@ -122,15 +122,15 @@ salsa::database_storage! {\n             fn file_symbols() for FileSymbolsQuery;\n             fn resolve_syntax_ptr() for ResolveSyntaxPtrQuery;\n         }\n-        impl hir::HirDatabase {\n-            fn module_tree() for hir::ModuleTreeQuery;\n-            fn fn_scopes() for hir::FnScopesQuery;\n-            fn _file_items() for hir::FileItemsQuery;\n-            fn _file_item() for hir::FileItemQuery;\n-            fn _input_module_items() for hir::InputModuleItemsQuery;\n-            fn _item_map() for hir::ItemMapQuery;\n-            fn _fn_syntax() for hir::FnSyntaxQuery;\n-            fn _submodules() for hir::SubmodulesQuery;\n+        impl hir::db::HirDatabase {\n+            fn module_tree() for hir::db::ModuleTreeQuery;\n+            fn fn_scopes() for hir::db::FnScopesQuery;\n+            fn _file_items() for hir::db::FileItemsQuery;\n+            fn _file_item() for hir::db::FileItemQuery;\n+            fn _input_module_items() for hir::db::InputModuleItemsQuery;\n+            fn _item_map() for hir::db::ItemMapQuery;\n+            fn _fn_syntax() for hir::db::FnSyntaxQuery;\n+            fn _submodules() for hir::db::SubmodulesQuery;\n         }\n     }\n }"}, {"sha": "3cdf8e6d6a14a975b37a200d7454834923b9ac39", "filename": "crates/ra_analysis/src/hir/db.rs", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/f14902f67bbc5f68cb700b6b929b269d3d51a4a9/crates%2Fra_analysis%2Fsrc%2Fhir%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f14902f67bbc5f68cb700b6b929b269d3d51a4a9/crates%2Fra_analysis%2Fsrc%2Fhir%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fhir%2Fdb.rs?ref=f14902f67bbc5f68cb700b6b929b269d3d51a4a9", "patch": "@@ -0,0 +1,63 @@\n+use std::sync::Arc;\n+\n+use ra_syntax::{\n+    SyntaxNode,\n+    ast::FnDefNode,\n+};\n+\n+use crate::{\n+    FileId,\n+    db::SyntaxDatabase,\n+    hir::function::{FnId, FnScopes},\n+    hir::module::{\n+        ModuleId, ModuleTree, ModuleSource,\n+        nameres::{ItemMap, InputModuleItems, FileItems, FileItemId}\n+    },\n+    input::SourceRootId,\n+    loc2id::{IdDatabase},\n+    Cancelable,\n+};\n+\n+salsa::query_group! {\n+pub(crate) trait HirDatabase: SyntaxDatabase + IdDatabase {\n+        fn fn_scopes(fn_id: FnId) -> Arc<FnScopes> {\n+            type FnScopesQuery;\n+            use fn crate::hir::function::imp::fn_scopes;\n+        }\n+\n+        fn _file_items(file_id: FileId) -> Arc<FileItems> {\n+            type FileItemsQuery;\n+            storage dependencies;\n+            use fn crate::hir::module::nameres::file_items;\n+        }\n+\n+        fn _file_item(file_id: FileId, file_item_id: FileItemId) -> SyntaxNode {\n+            type FileItemQuery;\n+            storage dependencies;\n+            use fn crate::hir::module::nameres::file_item;\n+        }\n+\n+        fn _input_module_items(source_root_id: SourceRootId, module_id: ModuleId) -> Cancelable<Arc<InputModuleItems>> {\n+            type InputModuleItemsQuery;\n+            use fn crate::hir::module::nameres::input_module_items;\n+        }\n+        fn _item_map(source_root_id: SourceRootId) -> Cancelable<Arc<ItemMap>> {\n+            type ItemMapQuery;\n+            use fn crate::hir::module::nameres::item_map;\n+        }\n+        fn _module_tree(source_root_id: SourceRootId) -> Cancelable<Arc<ModuleTree>> {\n+            type ModuleTreeQuery;\n+            use fn crate::hir::module::imp::module_tree;\n+        }\n+        fn _fn_syntax(fn_id: FnId) -> FnDefNode {\n+            type FnSyntaxQuery;\n+            // Don't retain syntax trees in memory\n+            storage dependencies;\n+            use fn crate::hir::function::imp::fn_syntax;\n+        }\n+        fn _submodules(source: ModuleSource) -> Cancelable<Arc<Vec<crate::hir::module::imp::Submodule>>> {\n+            type SubmodulesQuery;\n+            use fn crate::hir::module::imp::submodules;\n+        }\n+    }\n+}"}, {"sha": "27ac71a26e0f6deee8583e9e0aea293fc445386a", "filename": "crates/ra_analysis/src/hir/mod.rs", "status": "modified", "additions": 6, "deletions": 57, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/f14902f67bbc5f68cb700b6b929b269d3d51a4a9/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f14902f67bbc5f68cb700b6b929b269d3d51a4a9/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmod.rs?ref=f14902f67bbc5f68cb700b6b929b269d3d51a4a9", "patch": "@@ -7,25 +7,18 @@\n \n pub(crate) mod function;\n pub(crate) mod module;\n+pub(crate) mod db;\n mod path;\n \n-use std::sync::Arc;\n-\n use ra_syntax::{\n-    ast::{self, FnDefNode, AstNode},\n-    TextRange, SyntaxNode,\n+    ast::{self, AstNode},\n+    TextRange,\n };\n \n use crate::{\n-    FileId,\n-    db::SyntaxDatabase,\n-    hir::function::{resolve_local_name, FnId, FnScopes},\n-    hir::module::{\n-        ModuleId, ModuleTree, ModuleSource,\n-        nameres::{ItemMap, InputModuleItems, FileItems}\n-    },\n-    input::SourceRootId,\n-    loc2id::{IdDatabase, DefId, DefLoc},\n+    hir::db::HirDatabase,\n+    hir::function::{resolve_local_name, FnScopes},\n+    loc2id::{DefId, DefLoc},\n     syntax_ptr::LocalSyntaxPtr,\n     Cancelable,\n };\n@@ -36,50 +29,6 @@ pub(crate) use self::{\n     function::FunctionDescriptor,\n };\n \n-salsa::query_group! {\n-pub(crate) trait HirDatabase: SyntaxDatabase + IdDatabase {\n-        fn fn_scopes(fn_id: FnId) -> Arc<FnScopes> {\n-            type FnScopesQuery;\n-            use fn function::imp::fn_scopes;\n-        }\n-\n-        fn _file_items(file_id: FileId) -> Arc<FileItems> {\n-            type FileItemsQuery;\n-            storage dependencies;\n-            use fn module::nameres::file_items;\n-        }\n-\n-        fn _file_item(file_id: FileId, file_item_id: FileItemId) -> SyntaxNode {\n-            type FileItemQuery;\n-            storage dependencies;\n-            use fn module::nameres::file_item;\n-        }\n-\n-        fn _input_module_items(source_root_id: SourceRootId, module_id: ModuleId) -> Cancelable<Arc<InputModuleItems>> {\n-            type InputModuleItemsQuery;\n-            use fn module::nameres::input_module_items;\n-        }\n-        fn _item_map(source_root_id: SourceRootId) -> Cancelable<Arc<ItemMap>> {\n-            type ItemMapQuery;\n-            use fn module::nameres::item_map;\n-        }\n-        fn _module_tree(source_root_id: SourceRootId) -> Cancelable<Arc<ModuleTree>> {\n-            type ModuleTreeQuery;\n-            use fn module::imp::module_tree;\n-        }\n-        fn _fn_syntax(fn_id: FnId) -> FnDefNode {\n-            type FnSyntaxQuery;\n-            // Don't retain syntax trees in memory\n-            storage dependencies;\n-            use fn function::imp::fn_syntax;\n-        }\n-        fn _submodules(source: ModuleSource) -> Cancelable<Arc<Vec<module::imp::Submodule>>> {\n-            type SubmodulesQuery;\n-            use fn module::imp::submodules;\n-        }\n-    }\n-}\n-\n pub(crate) enum Def {\n     Module(ModuleDescriptor),\n     Item,"}]}