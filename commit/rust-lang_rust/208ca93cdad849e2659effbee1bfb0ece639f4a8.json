{"sha": "208ca93cdad849e2659effbee1bfb0ece639f4a8", "node_id": "C_kwDOAAsO6NoAKDIwOGNhOTNjZGFkODQ5ZTI2NTllZmZiZWUxYmZiMGVjZTYzOWY0YTg", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-09-09T06:23:39Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-09-09T06:25:31Z"}, "message": "Change return type of `Attribute::tokens`.\n\nThe `AttrTokenStream` is always immediately turned into a `TokenStream`.", "tree": {"sha": "7f12ad2cc5899efa61b3ee3e86fd32df894dd28b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f12ad2cc5899efa61b3ee3e86fd32df894dd28b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/208ca93cdad849e2659effbee1bfb0ece639f4a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/208ca93cdad849e2659effbee1bfb0ece639f4a8", "html_url": "https://github.com/rust-lang/rust/commit/208ca93cdad849e2659effbee1bfb0ece639f4a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/208ca93cdad849e2659effbee1bfb0ece639f4a8/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a56d345490ed68ab57cf1854dd8978fefc9862d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/a56d345490ed68ab57cf1854dd8978fefc9862d0", "html_url": "https://github.com/rust-lang/rust/commit/a56d345490ed68ab57cf1854dd8978fefc9862d0"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "8f1d7a71f15b621693510d663f2f594a7d15f92f", "filename": "compiler/rustc_ast/src/attr/mod.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/208ca93cdad849e2659effbee1bfb0ece639f4a8/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/208ca93cdad849e2659effbee1bfb0ece639f4a8/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs?ref=208ca93cdad849e2659effbee1bfb0ece639f4a8", "patch": "@@ -7,7 +7,6 @@ use crate::ast::{MacArgs, MacArgsEq, MacDelimiter, MetaItem, MetaItemKind, Neste\n use crate::ast::{Path, PathSegment};\n use crate::ptr::P;\n use crate::token::{self, CommentKind, Delimiter, Token};\n-use crate::tokenstream::{AttrTokenStream, AttrTokenTree};\n use crate::tokenstream::{DelimSpan, Spacing, TokenTree};\n use crate::tokenstream::{LazyTokenStream, TokenStream};\n use crate::util::comments;\n@@ -296,19 +295,18 @@ impl Attribute {\n         }\n     }\n \n-    pub fn tokens(&self) -> AttrTokenStream {\n+    pub fn tokens(&self) -> TokenStream {\n         match self.kind {\n             AttrKind::Normal(ref normal) => normal\n                 .tokens\n                 .as_ref()\n                 .unwrap_or_else(|| panic!(\"attribute is missing tokens: {:?}\", self))\n-                .create_token_stream(),\n-            AttrKind::DocComment(comment_kind, data) => {\n-                AttrTokenStream::new(vec![AttrTokenTree::Token(\n-                    Token::new(token::DocComment(comment_kind, self.style, data), self.span),\n-                    Spacing::Alone,\n-                )])\n-            }\n+                .create_token_stream()\n+                .to_tokenstream(),\n+            AttrKind::DocComment(comment_kind, data) => TokenStream::new(vec![TokenTree::Token(\n+                Token::new(token::DocComment(comment_kind, self.style, data), self.span),\n+                Spacing::Alone,\n+            )]),\n         }\n     }\n }"}, {"sha": "231bd000db0d7de0d9c8b1d019bdce56d85a2696", "filename": "compiler/rustc_ast/src/tokenstream.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/208ca93cdad849e2659effbee1bfb0ece639f4a8/compiler%2Frustc_ast%2Fsrc%2Ftokenstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/208ca93cdad849e2659effbee1bfb0ece639f4a8/compiler%2Frustc_ast%2Fsrc%2Ftokenstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Ftokenstream.rs?ref=208ca93cdad849e2659effbee1bfb0ece639f4a8", "patch": "@@ -255,7 +255,7 @@ impl AttrTokenStream {\n \n                                 let mut builder = TokenStreamBuilder::new();\n                                 for inner_attr in inner_attrs {\n-                                    builder.push(inner_attr.tokens().to_tokenstream());\n+                                    builder.push(inner_attr.tokens());\n                                 }\n                                 builder.push(delim_tokens.clone());\n                                 *tree = TokenTree::Delimited(*span, *delim, builder.build());\n@@ -273,7 +273,7 @@ impl AttrTokenStream {\n                     let mut flat: SmallVec<[_; 1]> = SmallVec::new();\n                     for attr in outer_attrs {\n                         // FIXME: Make this more efficient\n-                        flat.extend(attr.tokens().to_tokenstream().0.clone().iter().cloned());\n+                        flat.extend(attr.tokens().0.clone().iter().cloned());\n                     }\n                     flat.extend(target_tokens);\n                     flat.into_iter()"}, {"sha": "43a1a7caa2fde72ed4914dc7b4505cd2f319791a", "filename": "compiler/rustc_expand/src/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/208ca93cdad849e2659effbee1bfb0ece639f4a8/compiler%2Frustc_expand%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/208ca93cdad849e2659effbee1bfb0ece639f4a8/compiler%2Frustc_expand%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fconfig.rs?ref=208ca93cdad849e2659effbee1bfb0ece639f4a8", "patch": "@@ -388,7 +388,7 @@ impl<'a> StripUnconfigured<'a> {\n         attr: &Attribute,\n         (item, item_span): (ast::AttrItem, Span),\n     ) -> Attribute {\n-        let orig_tokens = attr.tokens().to_tokenstream();\n+        let orig_tokens = attr.tokens();\n \n         // We are taking an attribute of the form `#[cfg_attr(pred, attr)]`\n         // and producing an attribute of the form `#[attr]`. We"}]}