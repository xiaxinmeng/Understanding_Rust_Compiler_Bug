{"sha": "cce0b52e7bc7ca2b95fe9f95c8528cd87e787e33", "node_id": "C_kwDOAAsO6NoAKGNjZTBiNTJlN2JjN2NhMmI5NWZlOWY5NWM4NTI4Y2Q4N2U3ODdlMzM", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2023-05-26T08:23:55Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2023-06-04T07:50:55Z"}, "message": "Add a codegen test for manually swapping a small `Copy` type\n\nTo confirm we're not just helping `mem::swap`", "tree": {"sha": "fee9157b8c5dd713999b52d17458a9e32e60e0c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fee9157b8c5dd713999b52d17458a9e32e60e0c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cce0b52e7bc7ca2b95fe9f95c8528cd87e787e33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cce0b52e7bc7ca2b95fe9f95c8528cd87e787e33", "html_url": "https://github.com/rust-lang/rust/commit/cce0b52e7bc7ca2b95fe9f95c8528cd87e787e33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cce0b52e7bc7ca2b95fe9f95c8528cd87e787e33/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9eee230cd0a56bfba3ce65121798d9f9f4341cdd", "url": "https://api.github.com/repos/rust-lang/rust/commits/9eee230cd0a56bfba3ce65121798d9f9f4341cdd", "html_url": "https://github.com/rust-lang/rust/commit/9eee230cd0a56bfba3ce65121798d9f9f4341cdd"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "6289d7af3a08cc0f2919c1ce426b8ce2cc11b411", "filename": "tests/codegen/swap-small-types.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/cce0b52e7bc7ca2b95fe9f95c8528cd87e787e33/tests%2Fcodegen%2Fswap-small-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cce0b52e7bc7ca2b95fe9f95c8528cd87e787e33/tests%2Fcodegen%2Fswap-small-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fswap-small-types.rs?ref=cce0b52e7bc7ca2b95fe9f95c8528cd87e787e33", "patch": "@@ -8,10 +8,30 @@ use std::mem::swap;\n \n type RGB48 = [u16; 3];\n \n+// CHECK-LABEL: @swap_rgb48_manually(\n+#[no_mangle]\n+pub fn swap_rgb48_manually(x: &mut RGB48, y: &mut RGB48) {\n+    // CHECK-NOT: alloca\n+    // CHECK: %temp = alloca [3 x i16]\n+    // CHECK-NOT: alloca\n+    // CHECK-NOT: call void @llvm.memcpy\n+    // CHECK: call void @llvm.memcpy.{{.+}}({{.+}} %temp, {{.+}} %x, {{.+}} 6, {{.+}})\n+    // CHECK: call void @llvm.memcpy.{{.+}}({{.+}} %x, {{.+}} %y, {{.+}} 6, {{.+}})\n+    // CHECK: call void @llvm.memcpy.{{.+}}({{.+}} %y, {{.+}} %temp, {{.+}} 6, {{.+}})\n+    // CHECK-NOT: call void @llvm.memcpy\n+\n+    let temp = *x;\n+    *x = *y;\n+    *y = temp;\n+}\n+\n // CHECK-LABEL: @swap_rgb48\n #[no_mangle]\n pub fn swap_rgb48(x: &mut RGB48, y: &mut RGB48) {\n     // FIXME MIR inlining messes up LLVM optimizations.\n+    // If these checks start failing, please update this test.\n+    // CHECK: alloca [3 x i16]\n+    // CHECK: call void @llvm.memcpy\n // WOULD-CHECK-NOT: alloca\n // WOULD-CHECK: load i48\n // WOULD-CHECK: store i48"}]}