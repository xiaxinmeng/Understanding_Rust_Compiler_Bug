{"sha": "63fadee21f4d3d7a07381dafc6cd2dfd644b5b02", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzZmFkZWUyMWY0ZDNkN2EwNzM4MWRhZmM2Y2QyZGZkNjQ0YjViMDI=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-08-04T17:18:27Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-08-04T19:09:31Z"}, "message": "mir: add debug assertion to check polymorphization\n\nThis commit adds some debug assertions to `ensure_monomorphic_enough`\nwhich checks that unused generic parameters have been replaced with a\nparameter.\n\nSigned-off-by: David Wood <david@davidtw.co>", "tree": {"sha": "bfc9d9df16b2803404edb29e439d2fc6ea8c6061", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfc9d9df16b2803404edb29e439d2fc6ea8c6061"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63fadee21f4d3d7a07381dafc6cd2dfd644b5b02", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEfgm2/wUjk9OnjxlyJZLnbIc4H9kFAl8psmsACgkQJZLnbIc4\nH9m1rw/7B66TdL6hcN8HycdAHsMo/JNRi7qFbuVhJ2Kyhv8yUXkn/I84ZJuy68b2\nRTrL3IZIXbb0aDq4ZK3nPlb30DomrusRk8yrV/Yw9k865xHSBzlKHwyp2ujYtXN2\np7Jy7eiOtdAyjnzen6vTwyTNE2gUR+O1V0/Nl/TdA/jpcdOXvWLfwauVC4PWZ/oc\nypKEvIGCSpQ93RP1N4CFb9y4IkVHvpvjA99UXmGyR2tEkSSzvUBsjgKHufxUVr6Q\nKuCpHcoZQMeN9UzQSn+AqBd12vaj8s5ZKt6tDJ3jcd+JY+dWvqE+tyC/RLs+M9YX\nXA+foqo089/+LyWBTZj3+E0T9KEus8dD7OmFx91cCxCHUfplSixMoilDMXAxeS24\nSj1hPc37Mb81Jsj8u1ph2FMChjs8Sy2qXk5z5kk/xF/hvZOkxPyq8aIbWIagmb4L\nd+wRvvQhLstc+BqL6iEX9lO7X9/+rRi1JmN+F54IjCiXzCN24yxls2IQgv/IoML0\nrT2a1Op3sW+asnug9qvwnYG+RDQRA65ndOEjcXpUuZvGDozvuzV3h9pSF/lrp2bA\n/nkVBRu1Iq3VxZgGfAv0BCUlEm/YcEfvDl/nKltzp4dvevzdPC9N6N1yu/Nz0GD+\nlkC1cmlhnIbpCqcAGwAq69JganEMfBNn/CSbAaSYLGJby997tYU=\n=R/uF\n-----END PGP SIGNATURE-----", "payload": "tree bfc9d9df16b2803404edb29e439d2fc6ea8c6061\nparent 70b49c7bddec33e6972610e024fcbb3576aa9be3\nauthor David Wood <david@davidtw.co> 1596561507 +0100\ncommitter David Wood <david@davidtw.co> 1596568171 +0100\n\nmir: add debug assertion to check polymorphization\n\nThis commit adds some debug assertions to `ensure_monomorphic_enough`\nwhich checks that unused generic parameters have been replaced with a\nparameter.\n\nSigned-off-by: David Wood <david@davidtw.co>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63fadee21f4d3d7a07381dafc6cd2dfd644b5b02", "html_url": "https://github.com/rust-lang/rust/commit/63fadee21f4d3d7a07381dafc6cd2dfd644b5b02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63fadee21f4d3d7a07381dafc6cd2dfd644b5b02/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70b49c7bddec33e6972610e024fcbb3576aa9be3", "url": "https://api.github.com/repos/rust-lang/rust/commits/70b49c7bddec33e6972610e024fcbb3576aa9be3", "html_url": "https://github.com/rust-lang/rust/commit/70b49c7bddec33e6972610e024fcbb3576aa9be3"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "57c5fc59cc0b84aeecf88703d5e751ec6e062e59", "filename": "src/librustc_mir/interpret/util.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/63fadee21f4d3d7a07381dafc6cd2dfd644b5b02/src%2Flibrustc_mir%2Finterpret%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63fadee21f4d3d7a07381dafc6cd2dfd644b5b02/src%2Flibrustc_mir%2Finterpret%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Futil.rs?ref=63fadee21f4d3d7a07381dafc6cd2dfd644b5b02", "patch": "@@ -47,14 +47,26 @@ where\n                             unused_params.contains(index).map(|unused| !unused).unwrap_or(true);\n                         // Only recurse when generic parameters in fns, closures and generators\n                         // are used and require substitution.\n-                        if is_used && subst.needs_subst() {\n+                        match (is_used, subst.needs_subst()) {\n                             // Just in case there are closures or generators within this subst,\n                             // recurse.\n-                            if subst.super_visit_with(self) {\n+                            (true, true) if subst.super_visit_with(self) => {\n                                 // Only return when we find a parameter so the remaining substs\n                                 // are not skipped.\n                                 return true;\n                             }\n+                            // Confirm that polymorphization replaced the parameter with\n+                            // `ty::Param`/`ty::ConstKind::Param`.\n+                            (false, true) if cfg!(debug_assertions) => match subst.unpack() {\n+                                ty::subst::GenericArgKind::Type(ty) => {\n+                                    assert!(matches!(ty.kind, ty::Param(_)))\n+                                }\n+                                ty::subst::GenericArgKind::Const(ct) => {\n+                                    assert!(matches!(ct.val, ty::ConstKind::Param(_)))\n+                                }\n+                                ty::subst::GenericArgKind::Lifetime(..) => (),\n+                            },\n+                            _ => {}\n                         }\n                     }\n                     false"}]}