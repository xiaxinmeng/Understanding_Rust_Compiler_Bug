{"sha": "29ccf5cfc15fe924191e942b3611636dabf2516a", "node_id": "C_kwDOAAsO6NoAKDI5Y2NmNWNmYzE1ZmU5MjQxOTFlOTQyYjM2MTE2MzZkYWJmMjUxNmE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-02T10:40:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-02T10:40:19Z"}, "message": "Auto merge of #12134 - Veykril:hirdisp, r=Veykril\n\nfix: Fix uncorrect use of double braces in HirDisplay implementations", "tree": {"sha": "a033e934864e1189e841d4facb2a866ca545cdf0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a033e934864e1189e841d4facb2a866ca545cdf0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29ccf5cfc15fe924191e942b3611636dabf2516a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29ccf5cfc15fe924191e942b3611636dabf2516a", "html_url": "https://github.com/rust-lang/rust/commit/29ccf5cfc15fe924191e942b3611636dabf2516a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29ccf5cfc15fe924191e942b3611636dabf2516a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5dce1ff0212e467271c9e895478670c74d847ee9", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dce1ff0212e467271c9e895478670c74d847ee9", "html_url": "https://github.com/rust-lang/rust/commit/5dce1ff0212e467271c9e895478670c74d847ee9"}, {"sha": "4f9795059582745b8cdb9d71b288ba6f7cd53c8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f9795059582745b8cdb9d71b288ba6f7cd53c8d", "html_url": "https://github.com/rust-lang/rust/commit/4f9795059582745b8cdb9d71b288ba6f7cd53c8d"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "e26c8440d9e65ec9672f2b540e3eab1c6ab78d5d", "filename": "crates/hir/src/display.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/29ccf5cfc15fe924191e942b3611636dabf2516a/crates%2Fhir%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29ccf5cfc15fe924191e942b3611636dabf2516a/crates%2Fhir%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fdisplay.rs?ref=29ccf5cfc15fe924191e942b3611636dabf2516a", "patch": "@@ -203,7 +203,7 @@ impl HirDisplay for Variant {\n                 f.write_char(')')?;\n             }\n             VariantData::Record(fields) => {\n-                f.write_str(\" {{\")?;\n+                f.write_str(\" {\")?;\n                 let mut first = true;\n                 for (_, field) in fields.iter() {\n                     if first {\n@@ -216,7 +216,7 @@ impl HirDisplay for Variant {\n                     write!(f, \"{}: \", field.name)?;\n                     field.type_ref.hir_fmt(f)?;\n                 }\n-                f.write_str(\" }}\")?;\n+                f.write_str(\" }\")?;\n             }\n         }\n         Ok(())\n@@ -370,7 +370,7 @@ fn write_where_clause(def: GenericDefId, f: &mut HirFormatter) -> Result<(), Hir\n         WherePredicateTypeTarget::TypeOrConstParam(id) => {\n             match &params.type_or_consts[*id].name() {\n                 Some(name) => write!(f, \"{}\", name),\n-                None => f.write_str(\"{{unnamed}}\"),\n+                None => f.write_str(\"{unnamed}\"),\n             }\n         }\n     };\n@@ -507,9 +507,9 @@ impl HirDisplay for Module {\n             Some(name) => write!(f, \"mod {}\", name),\n             None if self.is_crate_root(f.db) => match self.krate().display_name(f.db) {\n                 Some(name) => write!(f, \"extern crate {}\", name),\n-                None => f.write_str(\"extern crate {{unknown}}\"),\n+                None => f.write_str(\"extern crate {unknown}\"),\n             },\n-            None => f.write_str(\"mod {{unnamed}}\"),\n+            None => f.write_str(\"mod {unnamed}\"),\n         }\n     }\n }"}]}