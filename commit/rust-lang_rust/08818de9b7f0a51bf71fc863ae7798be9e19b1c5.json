{"sha": "08818de9b7f0a51bf71fc863ae7798be9e19b1c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4ODE4ZGU5YjdmMGE1MWJmNzFmYzg2M2FlNzc5OGJlOWUxOWIxYzU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-04-25T20:31:49Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-04-25T20:40:48Z"}, "message": "Rustup to rustc 1.10.0-nightly (645dd013a 2016-04-24); release 0.0.64", "tree": {"sha": "0a77c9762532aad6a7b71739fb5532f0ab83ba8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a77c9762532aad6a7b71739fb5532f0ab83ba8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08818de9b7f0a51bf71fc863ae7798be9e19b1c5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXHoDQAAoJEDu/TT4u95+Y7EEQAKXoleHIUvXaGc0pYzL/BBaL\nqb+dTIKblDP96PrTPAIdx8hCu+3iKjOGGtelVZELpwOnM+v4RTAQ1XtoIfhX+hqu\nQofNGB078lCvAG9RiYFqrwyo/BubOORYrLdJEmpKyQFLzb96IwJqy87exnOFpv2m\nx0AfPjBPim0Yqe7wn2bycPYdEjgQrzFs//D97YPeEuJjGCTz8gCpbwRDdEBCwYre\n/bfI5IaZvu2cH7D23zjhwyaCOjWUHUFIQxSjcGn1KMrNgxDyK08FDVeOCO3nN18D\nYBtK83m6GaVbZr16NlXhNTBkcY7MXNFAIlF1k3kMCAY2NDvh74cNAI6cc6a3GGaR\nJYM3qwU4r/lBWX3P1tM3DJ+sxrME5WJaPbB3f0xwQVziLbZeKUFhNSdbwO6ppfa3\n6AHpbAjXXya74DGIENLiMin+Qt/+aE565qksURdh/4g3xa9VPmM3zKejicGs6fne\n4RqB6d9J1LH4ZuVpaQPuH/v+Kq1Zoyee4OKz2RKiu0WRiUqRd8X54aB6anN3VtBD\ne2moHFE/TYdnHhFErM6hH07ofZtUF58yB6ar2Sd/At8baWajA9L1gliitBewlB0s\nNP1lDA71Gkv+HtlqK0CBtl2RXfApisew13R7KNs9vXERf1TL02VR8iY46p6cBH7B\nnGLBwQ6SOimUnk3MvhCU\n=hJ0B\n-----END PGP SIGNATURE-----", "payload": "tree 0a77c9762532aad6a7b71739fb5532f0ab83ba8a\nparent c66e90303fe7cd0df6f3191d157e65f4d58b5de5\nauthor Manish Goregaokar <manishsmail@gmail.com> 1461616309 +0530\ncommitter Manish Goregaokar <manishsmail@gmail.com> 1461616848 +0530\n\nRustup to rustc 1.10.0-nightly (645dd013a 2016-04-24); release 0.0.64\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08818de9b7f0a51bf71fc863ae7798be9e19b1c5", "html_url": "https://github.com/rust-lang/rust/commit/08818de9b7f0a51bf71fc863ae7798be9e19b1c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08818de9b7f0a51bf71fc863ae7798be9e19b1c5/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c66e90303fe7cd0df6f3191d157e65f4d58b5de5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c66e90303fe7cd0df6f3191d157e65f4d58b5de5", "html_url": "https://github.com/rust-lang/rust/commit/c66e90303fe7cd0df6f3191d157e65f4d58b5de5"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "5a8968ac2f58ece383ae2d8b52d54b774a311647", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08818de9b7f0a51bf71fc863ae7798be9e19b1c5/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/08818de9b7f0a51bf71fc863ae7798be9e19b1c5/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=08818de9b7f0a51bf71fc863ae7798be9e19b1c5", "patch": "@@ -1,6 +1,6 @@\n [package]\n name = \"clippy\"\n-version = \"0.0.63\"\n+version = \"0.0.64\"\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\",\n \t\"Andre Bogus <bogusandre@gmail.com>\","}, {"sha": "cdaf53684c539c161585a460652ebae6c46c5698", "filename": "src/block_in_if_condition.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08818de9b7f0a51bf71fc863ae7798be9e19b1c5/src%2Fblock_in_if_condition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08818de9b7f0a51bf71fc863ae7798be9e19b1c5/src%2Fblock_in_if_condition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fblock_in_if_condition.rs?ref=08818de9b7f0a51bf71fc863ae7798be9e19b1c5", "patch": "@@ -43,7 +43,7 @@ struct ExVisitor<'v> {\n \n impl<'v> Visitor<'v> for ExVisitor<'v> {\n     fn visit_expr(&mut self, expr: &'v Expr) {\n-        if let ExprClosure(_, _, ref block) = expr.node {\n+        if let ExprClosure(_, _, ref block, _) = expr.node {\n             let complex = {\n                 if block.stmts.is_empty() {\n                     if let Some(ref ex) = block.expr {"}, {"sha": "c9a9ef85ede9c8d1ecf850e68e2c6e62770750d6", "filename": "src/eta_reduction.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08818de9b7f0a51bf71fc863ae7798be9e19b1c5/src%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08818de9b7f0a51bf71fc863ae7798be9e19b1c5/src%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feta_reduction.rs?ref=08818de9b7f0a51bf71fc863ae7798be9e19b1c5", "patch": "@@ -40,7 +40,7 @@ impl LateLintPass for EtaPass {\n }\n \n fn check_closure(cx: &LateContext, expr: &Expr) {\n-    if let ExprClosure(_, ref decl, ref blk) = expr.node {\n+    if let ExprClosure(_, ref decl, ref blk, _) = expr.node {\n         if !blk.stmts.is_empty() {\n             // || {foo(); bar()}; can't be reduced here\n             return;"}, {"sha": "1cfa339d4a0642edead9bae0f5bff89c4fe7d22c", "filename": "src/map_clone.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08818de9b7f0a51bf71fc863ae7798be9e19b1c5/src%2Fmap_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08818de9b7f0a51bf71fc863ae7798be9e19b1c5/src%2Fmap_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmap_clone.rs?ref=08818de9b7f0a51bf71fc863ae7798be9e19b1c5", "patch": "@@ -25,7 +25,7 @@ impl LateLintPass for MapClonePass {\n         if let ExprMethodCall(name, _, ref args) = expr.node {\n             if name.node.as_str() == \"map\" && args.len() == 2 {\n                 match args[1].node {\n-                    ExprClosure(_, ref decl, ref blk) => {\n+                    ExprClosure(_, ref decl, ref blk, _) => {\n                         if_let_chain! {\n                             [\n                             // just one expression in the closure"}, {"sha": "a7ab59497ac6bbcdfca5349332318c80201dcaea", "filename": "src/misc_early.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/08818de9b7f0a51bf71fc863ae7798be9e19b1c5/src%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08818de9b7f0a51bf71fc863ae7798be9e19b1c5/src%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmisc_early.rs?ref=08818de9b7f0a51bf71fc863ae7798be9e19b1c5", "patch": "@@ -128,7 +128,7 @@ impl EarlyLintPass for MiscEarly {\n     fn check_expr(&mut self, cx: &EarlyContext, expr: &Expr) {\n         if let ExprKind::Call(ref paren, _) = expr.node {\n             if let ExprKind::Paren(ref closure) = paren.node {\n-                if let ExprKind::Closure(_, ref decl, ref block) = closure.node {\n+                if let ExprKind::Closure(_, ref decl, ref block, _) = closure.node {\n                     span_lint_and_then(cx,\n                                        REDUNDANT_CLOSURE_CALL,\n                                        expr.span,\n@@ -150,7 +150,7 @@ impl EarlyLintPass for MiscEarly {\n                 let StmtKind::Decl(ref first, _) = w[0].node,\n                 let DeclKind::Local(ref local) = first.node,\n                 let Option::Some(ref t) = local.init,\n-                let ExprKind::Closure(_,_,_) = t.node,\n+                let ExprKind::Closure(_,_,_,_) = t.node,\n                 let PatKind::Ident(_,sp_ident,_) = local.pat.node,\n                 let StmtKind::Semi(ref second,_) = w[1].node,\n                 let ExprKind::Assign(_,ref call) = second.node,"}, {"sha": "fe4c6d309520fc90536966a30f20c1cb3cce0f99", "filename": "src/utils/hir.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/08818de9b7f0a51bf71fc863ae7798be9e19b1c5/src%2Futils%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08818de9b7f0a51bf71fc863ae7798be9e19b1c5/src%2Futils%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils%2Fhir.rs?ref=08818de9b7f0a51bf71fc863ae7798be9e19b1c5", "patch": "@@ -333,8 +333,8 @@ impl<'a, 'tcx: 'a> SpanlessHash<'a, 'tcx> {\n                 self.hash_expr(e);\n                 // TODO: _ty\n             }\n-            ExprClosure(cap, _, ref b) => {\n-                let c: fn(_, _, _) -> _ = ExprClosure;\n+            ExprClosure(cap, _, ref b, _) => {\n+                let c: fn(_, _, _, _) -> _ = ExprClosure;\n                 c.hash(&mut self.s);\n                 cap.hash(&mut self.s);\n                 self.hash_block(b);"}]}