{"sha": "6117195bac2051dbdf26904759d23e2807791f37", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxMTcxOTViYWMyMDUxZGJkZjI2OTA0NzU5ZDIzZTI4MDc3OTFmMzc=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-11-09T01:15:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-09T01:15:14Z"}, "message": "Rollup merge of #55761 - ljedrz:fix_promote_candidate_hack, r=estebank\n\nmir: remove a hacky recursive helper function\n\nIt can be replaced with a `while let` loop.", "tree": {"sha": "dedb9990766a29d71950c6d168e235f831c3d8b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dedb9990766a29d71950c6d168e235f831c3d8b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6117195bac2051dbdf26904759d23e2807791f37", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb5N+iCRBK7hj4Ov3rIwAAdHIIACczTHvXBu83R4coHeVoFWl8\nwvG3XRQG2ACWBjWhaTbayX+6SaYIfD8MrcnRUoLHsVv/sk8Xr0jQvbrRciWx2xgm\n/kR6gDYEcUE7pMWv0WpiNxAqu84Tjl4Vmrf/BkUfRQ4HOy3FpvGtvV5R3yr9oypK\nVjii0EoucAq0nd+HLyKAOW08IOnlMdMeKZfSr+op2Usb+i6TW5GTH6NCWQ3F5BVY\nScmYGRGkx5BxBJnb+kkGZfeOTAbV598gchxezxTHGrescE8pANYYLLq0VtF5c34r\nBIlFw98pCrP0bu1ajGLdmon5h4qEBlchh992m/4SwIbnyq6iwLFI6gqfcqttYkQ=\n=BYWh\n-----END PGP SIGNATURE-----\n", "payload": "tree dedb9990766a29d71950c6d168e235f831c3d8b6\nparent 2d0a697852a26bb13d2d438b73b88e44c7d5137f\nparent 5159b32997c92323ac7dd746b6898c1e96e7078c\nauthor Mark Rousskov <mark.simulacrum@gmail.com> 1541726114 -0700\ncommitter GitHub <noreply@github.com> 1541726114 -0700\n\nRollup merge of #55761 - ljedrz:fix_promote_candidate_hack, r=estebank\n\nmir: remove a hacky recursive helper function\n\nIt can be replaced with a `while let` loop.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6117195bac2051dbdf26904759d23e2807791f37", "html_url": "https://github.com/rust-lang/rust/commit/6117195bac2051dbdf26904759d23e2807791f37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6117195bac2051dbdf26904759d23e2807791f37/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d0a697852a26bb13d2d438b73b88e44c7d5137f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d0a697852a26bb13d2d438b73b88e44c7d5137f", "html_url": "https://github.com/rust-lang/rust/commit/2d0a697852a26bb13d2d438b73b88e44c7d5137f"}, {"sha": "5159b32997c92323ac7dd746b6898c1e96e7078c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5159b32997c92323ac7dd746b6898c1e96e7078c", "html_url": "https://github.com/rust-lang/rust/commit/5159b32997c92323ac7dd746b6898c1e96e7078c"}], "stats": {"total": 15, "additions": 5, "deletions": 10}, "files": [{"sha": "c5add6260789a34e485f5852b45695cc3d093374", "filename": "src/librustc_mir/transform/promote_consts.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6117195bac2051dbdf26904759d23e2807791f37/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6117195bac2051dbdf26904759d23e2807791f37/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs?ref=6117195bac2051dbdf26904759d23e2807791f37", "patch": "@@ -310,16 +310,11 @@ impl<'a, 'tcx> Promoter<'a, 'tcx> {\n                     match statement.kind {\n                         StatementKind::Assign(_, box Rvalue::Ref(_, _, ref mut place)) => {\n                             // Find the underlying local for this (necessarily interior) borrow.\n-                            // HACK(eddyb) using a recursive function because of mutable borrows.\n-                            fn interior_base<'a, 'tcx>(place: &'a mut Place<'tcx>)\n-                                                       -> &'a mut Place<'tcx> {\n-                                if let Place::Projection(ref mut proj) = *place {\n-                                    assert_ne!(proj.elem, ProjectionElem::Deref);\n-                                    return interior_base(&mut proj.base);\n-                                }\n-                                place\n-                            }\n-                            let place = interior_base(place);\n+                            let mut place = place;\n+                            while let Place::Projection(ref mut proj) = *place {\n+                                assert_ne!(proj.elem, ProjectionElem::Deref);\n+                                place = &mut proj.base;\n+                            };\n \n                             let ty = place.ty(local_decls, self.tcx).to_ty(self.tcx);\n                             let span = statement.source_info.span;"}]}