{"sha": "5a6a133f7e92962c614789b284c01f2f03f644b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhNmExMzNmN2U5Mjk2MmM2MTQ3ODliMjg0YzAxZjJmMDNmNjQ0Yjk=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-12-12T17:43:13Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-12-17T07:53:02Z"}, "message": "Remove *_inlined variants", "tree": {"sha": "067ccb1a6feaa82039194ef8cb8922c48d62380f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/067ccb1a6feaa82039194ef8cb8922c48d62380f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a6a133f7e92962c614789b284c01f2f03f644b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a6a133f7e92962c614789b284c01f2f03f644b9", "html_url": "https://github.com/rust-lang/rust/commit/5a6a133f7e92962c614789b284c01f2f03f644b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a6a133f7e92962c614789b284c01f2f03f644b9/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "517725c571c2023428ce73793ca7e481fb4c1d10", "url": "https://api.github.com/repos/rust-lang/rust/commits/517725c571c2023428ce73793ca7e481fb4c1d10", "html_url": "https://github.com/rust-lang/rust/commit/517725c571c2023428ce73793ca7e481fb4c1d10"}], "stats": {"total": 18, "additions": 5, "deletions": 13}, "files": [{"sha": "56f475314ae6f51d13d163270ad7140b44117b20", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5a6a133f7e92962c614789b284c01f2f03f644b9/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a6a133f7e92962c614789b284c01f2f03f644b9/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=5a6a133f7e92962c614789b284c01f2f03f644b9", "patch": "@@ -174,18 +174,14 @@ macro_rules! define_dep_nodes {\n             }\n \n             #[inline(always)]\n-            pub fn is_input_inlined(&self) -> bool {\n+            pub fn is_input(&self) -> bool {\n                 match *self {\n                     $(\n                         DepKind :: $variant => { contains_input_attr!($($attr),*) }\n                     )*\n                 }\n             }\n \n-            pub fn is_input(&self) -> bool {\n-                self.is_input_inlined()\n-            }\n-\n             #[inline(always)]\n             pub fn is_eval_always(&self) -> bool {\n                 match *self {\n@@ -197,7 +193,7 @@ macro_rules! define_dep_nodes {\n \n             #[allow(unreachable_code)]\n             #[inline(always)]\n-            pub fn has_params_inlined(&self) -> bool {\n+            pub fn has_params(&self) -> bool {\n                 match *self {\n                     $(\n                         DepKind :: $variant => {\n@@ -218,10 +214,6 @@ macro_rules! define_dep_nodes {\n                     )*\n                 }\n             }\n-\n-            pub fn has_params(&self) -> bool {\n-                self.has_params_inlined()\n-            }\n         }\n \n         pub enum DepConstructor<$tcx> {\n@@ -326,7 +318,7 @@ macro_rules! define_dep_nodes {\n             /// does not require any parameters.\n             #[inline(always)]\n             pub fn new_no_params(kind: DepKind) -> DepNode {\n-                debug_assert!(!kind.has_params_inlined());\n+                debug_assert!(!kind.has_params());\n                 DepNode {\n                     kind,\n                     hash: Fingerprint::ZERO,"}, {"sha": "b0286b094c31de30b76fac9b9ed53ae5c41811c5", "filename": "src/librustc/ty/query/plumbing.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a6a133f7e92962c614789b284c01f2f03f644b9/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a6a133f7e92962c614789b284c01f2f03f644b9/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs?ref=5a6a133f7e92962c614789b284c01f2f03f644b9", "patch": "@@ -424,7 +424,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n             return Ok(result);\n         }\n \n-        if !dep_node.kind.is_input_inlined() {\n+        if !dep_node.kind.is_input() {\n             if let Some(dep_node_index) = self.try_mark_green_and_read(&dep_node) {\n                 profq_msg!(self, ProfileQueriesMsg::CacheHit);\n                 self.sess.profiler(|p| p.record_query_hit(Q::CATEGORY));\n@@ -600,7 +600,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n \n         // Ensuring an \"input\" or anonymous query makes no sense\n         assert!(!dep_node.kind.is_anon());\n-        assert!(!dep_node.kind.is_input_inlined());\n+        assert!(!dep_node.kind.is_input());\n         if self.try_mark_green_and_read(&dep_node).is_none() {\n             // A None return from `try_mark_green_and_read` means that this is either\n             // a new dep node or that the dep node has already been marked red."}]}