{"sha": "d28c5bafff12f5b9f6ba96c427e975f860599303", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyOGM1YmFmZmYxMmY1YjlmNmJhOTZjNDI3ZTk3NWY4NjA1OTkzMDM=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-09-14T10:18:02Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-09-21T14:21:37Z"}, "message": "Provide way for ui tests to opt out of having their output checked.\n\nNamely, this adds support for:\n\n * `// dont-check-compiler-stdout`, and\n * `// dont-check-compiler-stderr`.\n\nObviously almost all ui tests wont want to opt into these, since the whole point\nof a ui test is to check the compiler ui. However, since this PR is converting\nrun-pass into (another set of) ui tests, these header options make sense in that\ncontext.\n\n(Also this puts us into a better position for eventually turning\n*every* test suite into a ui test suite, by making ui-ness the default\nand forcing tests to opt out explicitly.)", "tree": {"sha": "431ccc17dba2e546a04f57ef00330805b274b6d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/431ccc17dba2e546a04f57ef00330805b274b6d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d28c5bafff12f5b9f6ba96c427e975f860599303", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d28c5bafff12f5b9f6ba96c427e975f860599303", "html_url": "https://github.com/rust-lang/rust/commit/d28c5bafff12f5b9f6ba96c427e975f860599303", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d28c5bafff12f5b9f6ba96c427e975f860599303/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae0a53a39b29ed0fb138b05ef8015702b91d8b00", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae0a53a39b29ed0fb138b05ef8015702b91d8b00", "html_url": "https://github.com/rust-lang/rust/commit/ae0a53a39b29ed0fb138b05ef8015702b91d8b00"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "8829d8808366b87f027b2c6df347e800966773f0", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d28c5bafff12f5b9f6ba96c427e975f860599303/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d28c5bafff12f5b9f6ba96c427e975f860599303/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=d28c5bafff12f5b9f6ba96c427e975f860599303", "patch": "@@ -199,6 +199,10 @@ pub struct TestProps {\n     pub force_host: bool,\n     // Check stdout for error-pattern output as well as stderr\n     pub check_stdout: bool,\n+    // For UI tests, allows compiler to generate arbitrary output to stdout\n+    pub dont_check_compiler_stdout: bool,\n+    // For UI tests, allows compiler to generate arbitrary output to stderr\n+    pub dont_check_compiler_stderr: bool,\n     // Don't force a --crate-type=dylib flag on the command line\n     pub no_prefer_dynamic: bool,\n     // Run --pretty expanded when running pretty printing tests\n@@ -249,6 +253,8 @@ impl TestProps {\n             build_aux_docs: false,\n             force_host: false,\n             check_stdout: false,\n+            dont_check_compiler_stdout: false,\n+            dont_check_compiler_stderr: false,\n             no_prefer_dynamic: false,\n             pretty_expanded: false,\n             pretty_mode: \"normal\".to_string(),\n@@ -327,6 +333,14 @@ impl TestProps {\n                 self.check_stdout = config.parse_check_stdout(ln);\n             }\n \n+            if !self.dont_check_compiler_stdout {\n+                self.dont_check_compiler_stdout = config.parse_dont_check_compiler_stdout(ln);\n+            }\n+\n+            if !self.dont_check_compiler_stderr {\n+                self.dont_check_compiler_stderr = config.parse_dont_check_compiler_stderr(ln);\n+            }\n+\n             if !self.no_prefer_dynamic {\n                 self.no_prefer_dynamic = config.parse_no_prefer_dynamic(ln);\n             }\n@@ -510,6 +524,14 @@ impl Config {\n         self.parse_name_directive(line, \"check-stdout\")\n     }\n \n+    fn parse_dont_check_compiler_stdout(&self, line: &str) -> bool {\n+        self.parse_name_directive(line, \"dont-check-compiler-stdout\")\n+    }\n+\n+    fn parse_dont_check_compiler_stderr(&self, line: &str) -> bool {\n+        self.parse_name_directive(line, \"dont-check-compiler-stderr\")\n+    }\n+\n     fn parse_no_prefer_dynamic(&self, line: &str) -> bool {\n         self.parse_name_directive(line, \"no-prefer-dynamic\")\n     }"}, {"sha": "3f0e4cd4cc48a1c0c71ca72a3831bb5340fbb69b", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d28c5bafff12f5b9f6ba96c427e975f860599303/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d28c5bafff12f5b9f6ba96c427e975f860599303/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=d28c5bafff12f5b9f6ba96c427e975f860599303", "patch": "@@ -2654,8 +2654,12 @@ impl<'test> TestCx<'test> {\n         let normalized_stderr = self.normalize_output(&stderr, &self.props.normalize_stderr);\n \n         let mut errors = 0;\n-        errors += self.compare_output(\"stdout\", &normalized_stdout, &expected_stdout);\n-        errors += self.compare_output(\"stderr\", &normalized_stderr, &expected_stderr);\n+        if !self.props.dont_check_compiler_stdout {\n+            errors += self.compare_output(\"stdout\", &normalized_stdout, &expected_stdout);\n+        }\n+        if !self.props.dont_check_compiler_stderr {\n+            errors += self.compare_output(\"stderr\", &normalized_stderr, &expected_stderr);\n+        }\n \n         let modes_to_prune = vec![CompareMode::Nll];\n         self.prune_duplicate_outputs(&modes_to_prune);"}]}