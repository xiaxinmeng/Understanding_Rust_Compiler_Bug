{"sha": "716ea5f19cf28c4d2ce6b87ee17ab855ff837385", "node_id": "C_kwDOAAsO6NoAKDcxNmVhNWYxOWNmMjhjNGQyY2U2Yjg3ZWUxN2FiODU1ZmY4MzczODU", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-17T02:35:47Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-17T03:06:38Z"}, "message": "Fix use suggestion span", "tree": {"sha": "6df0303fe915d817df626a4118b92eb49f6581e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6df0303fe915d817df626a4118b92eb49f6581e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/716ea5f19cf28c4d2ce6b87ee17ab855ff837385", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/716ea5f19cf28c4d2ce6b87ee17ab855ff837385", "html_url": "https://github.com/rust-lang/rust/commit/716ea5f19cf28c4d2ce6b87ee17ab855ff837385", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/716ea5f19cf28c4d2ce6b87ee17ab855ff837385/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "481725984b4cd94ef5c00917b01c1771b6e5299c", "url": "https://api.github.com/repos/rust-lang/rust/commits/481725984b4cd94ef5c00917b01c1771b6e5299c", "html_url": "https://github.com/rust-lang/rust/commit/481725984b4cd94ef5c00917b01c1771b6e5299c"}], "stats": {"total": 42, "additions": 22, "deletions": 20}, "files": [{"sha": "9277829f2faa381fd250c8e4814b3ef2eedfa199", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/716ea5f19cf28c4d2ce6b87ee17ab855ff837385/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/716ea5f19cf28c4d2ce6b87ee17ab855ff837385/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=716ea5f19cf28c4d2ce6b87ee17ab855ff837385", "patch": "@@ -5,10 +5,10 @@ use rustc_ast::visit::{self, Visitor};\n use rustc_ast::{self as ast, Crate, ItemKind, ModKind, NodeId, Path, CRATE_NODE_ID};\n use rustc_ast_pretty::pprust;\n use rustc_data_structures::fx::FxHashSet;\n-use rustc_errors::struct_span_err;\n use rustc_errors::{\n     pluralize, Applicability, Diagnostic, DiagnosticBuilder, ErrorGuaranteed, MultiSpan,\n };\n+use rustc_errors::{struct_span_err, SuggestionStyle};\n use rustc_feature::BUILTIN_ATTRIBUTES;\n use rustc_hir::def::Namespace::{self, *};\n use rustc_hir::def::{self, CtorKind, CtorOf, DefKind, NonMacroAttrKind, PerNS};\n@@ -2418,7 +2418,7 @@ fn show_candidates(\n         }\n \n         if let Some(span) = use_placement_span {\n-            let add_use = match mode {\n+            let (add_use, trailing) = match mode {\n                 DiagnosticMode::Pattern => {\n                     err.span_suggestions(\n                         span,\n@@ -2428,21 +2428,23 @@ fn show_candidates(\n                     );\n                     return;\n                 }\n-                DiagnosticMode::Import => \"\",\n-                DiagnosticMode::Normal => \"use \",\n+                DiagnosticMode::Import => (\"\", \"\"),\n+                DiagnosticMode::Normal => (\"use \", \";\\n\"),\n             };\n             for candidate in &mut accessible_path_strings {\n                 // produce an additional newline to separate the new use statement\n                 // from the directly following item.\n-                let additional_newline = if let FoundUse::Yes = found_use { \"\" } else { \"\\n\" };\n-                candidate.0 = format!(\"{add_use}{}{append};\\n{additional_newline}\", &candidate.0);\n+                let additional_newline = if let FoundUse::No = found_use && let DiagnosticMode::Normal = mode { \"\\n\" } else { \"\" };\n+                candidate.0 =\n+                    format!(\"{add_use}{}{append}{trailing}{additional_newline}\", &candidate.0);\n             }\n \n-            err.span_suggestions(\n+            err.span_suggestions_with_style(\n                 span,\n                 &msg,\n                 accessible_path_strings.into_iter().map(|a| a.0),\n                 Applicability::MaybeIncorrect,\n+                SuggestionStyle::ShowAlways,\n             );\n             if let [first, .., last] = &path[..] {\n                 let sp = first.ident.span.until(last.ident.span);"}, {"sha": "92e8a44b55fe570fd2fdacf0fd9f4f1aedc8c01f", "filename": "tests/ui/extenv/issue-55897.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/716ea5f19cf28c4d2ce6b87ee17ab855ff837385/tests%2Fui%2Fextenv%2Fissue-55897.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/716ea5f19cf28c4d2ce6b87ee17ab855ff837385/tests%2Fui%2Fextenv%2Fissue-55897.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fextenv%2Fissue-55897.stderr?ref=716ea5f19cf28c4d2ce6b87ee17ab855ff837385", "patch": "@@ -30,7 +30,7 @@ LL |     use env;\n help: consider importing this module instead\n    |\n LL |     use std::env;\n-   |         ~~~~~~~~~\n+   |         ~~~~~~~~\n \n error: cannot determine resolution for the macro `env`\n   --> $DIR/issue-55897.rs:6:22"}, {"sha": "f9c5cf920e1f10fc25abc0ab67d36e12ad35295e", "filename": "tests/ui/imports/bad-import-with-rename.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/716ea5f19cf28c4d2ce6b87ee17ab855ff837385/tests%2Fui%2Fimports%2Fbad-import-with-rename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/716ea5f19cf28c4d2ce6b87ee17ab855ff837385/tests%2Fui%2Fimports%2Fbad-import-with-rename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimports%2Fbad-import-with-rename.stderr?ref=716ea5f19cf28c4d2ce6b87ee17ab855ff837385", "patch": "@@ -7,7 +7,7 @@ LL |     use crate::D::B as _;\n help: consider importing this type alias instead\n    |\n LL |     use A::B as _;\n-   |         ~~~~~~~~~~\n+   |         ~~~~~~~~~\n \n error[E0432]: unresolved import `crate::D::B2`\n   --> $DIR/bad-import-with-rename.rs:10:9\n@@ -18,7 +18,7 @@ LL |     use crate::D::B2;\n help: consider importing this type alias instead\n    |\n LL |     use A::B2;\n-   |         ~~~~~~\n+   |         ~~~~~\n \n error: aborting due to 2 previous errors\n "}, {"sha": "3448f3119778a6d4b5592297f1c56d0096d2f949", "filename": "tests/ui/imports/issue-56125.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/716ea5f19cf28c4d2ce6b87ee17ab855ff837385/tests%2Fui%2Fimports%2Fissue-56125.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/716ea5f19cf28c4d2ce6b87ee17ab855ff837385/tests%2Fui%2Fimports%2Fissue-56125.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimports%2Fissue-56125.stderr?ref=716ea5f19cf28c4d2ce6b87ee17ab855ff837385", "patch": "@@ -7,13 +7,13 @@ LL |     use empty::issue_56125;\n help: consider importing one of these items instead\n    |\n LL |     use crate::m3::last_segment::issue_56125;\n-   |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n LL |     use crate::m3::non_last_segment::non_last_segment::issue_56125;\n-   |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n LL |     use issue_56125::issue_56125;\n-   |         ~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |         ~~~~~~~~~~~~~~~~~~~~~~~~\n LL |     use issue_56125::last_segment::issue_56125;\n-   |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      and 1 other candidate\n \n error[E0659]: `issue_56125` is ambiguous"}, {"sha": "5374ba3dc9e6d07783f9914523118b6ea121de6a", "filename": "tests/ui/imports/issue-57015.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/716ea5f19cf28c4d2ce6b87ee17ab855ff837385/tests%2Fui%2Fimports%2Fissue-57015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/716ea5f19cf28c4d2ce6b87ee17ab855ff837385/tests%2Fui%2Fimports%2Fissue-57015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimports%2Fissue-57015.stderr?ref=716ea5f19cf28c4d2ce6b87ee17ab855ff837385", "patch": "@@ -7,7 +7,7 @@ LL | use single_err::something;\n help: consider importing this module instead\n    |\n LL | use glob_ok::something;\n-   |     ~~~~~~~~~~~~~~~~~~~\n+   |     ~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "122e8fd350cb2f4ef15abc373500f807536b0488", "filename": "tests/ui/rfc-2126-extern-absolute-paths/not-allowed.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/716ea5f19cf28c4d2ce6b87ee17ab855ff837385/tests%2Fui%2Frfc-2126-extern-absolute-paths%2Fnot-allowed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/716ea5f19cf28c4d2ce6b87ee17ab855ff837385/tests%2Fui%2Frfc-2126-extern-absolute-paths%2Fnot-allowed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frfc-2126-extern-absolute-paths%2Fnot-allowed.stderr?ref=716ea5f19cf28c4d2ce6b87ee17ab855ff837385", "patch": "@@ -7,9 +7,9 @@ LL | use alloc;\n help: consider importing one of these items instead\n    |\n LL | use core::alloc;\n-   |     ~~~~~~~~~~~~\n-LL | use std::alloc;\n    |     ~~~~~~~~~~~\n+LL | use std::alloc;\n+   |     ~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "f8b3e6d65afb64cac3492bf2a9f27b11cd58b813", "filename": "tests/ui/simd/portable-intrinsics-arent-exposed.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/716ea5f19cf28c4d2ce6b87ee17ab855ff837385/tests%2Fui%2Fsimd%2Fportable-intrinsics-arent-exposed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/716ea5f19cf28c4d2ce6b87ee17ab855ff837385/tests%2Fui%2Fsimd%2Fportable-intrinsics-arent-exposed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsimd%2Fportable-intrinsics-arent-exposed.stderr?ref=716ea5f19cf28c4d2ce6b87ee17ab855ff837385", "patch": "@@ -15,7 +15,7 @@ LL | use std::simd::intrinsics;\n help: consider importing this module instead\n    |\n LL | use std::intrinsics;\n-   |     ~~~~~~~~~~~~~~~~\n+   |     ~~~~~~~~~~~~~~~\n \n error: aborting due to 2 previous errors\n "}, {"sha": "7635f579d66b94cd9e2ce76388f132e3517d1fee", "filename": "tests/ui/test-attrs/inaccessible-test-modules.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/716ea5f19cf28c4d2ce6b87ee17ab855ff837385/tests%2Fui%2Ftest-attrs%2Finaccessible-test-modules.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/716ea5f19cf28c4d2ce6b87ee17ab855ff837385/tests%2Fui%2Ftest-attrs%2Finaccessible-test-modules.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftest-attrs%2Finaccessible-test-modules.stderr?ref=716ea5f19cf28c4d2ce6b87ee17ab855ff837385", "patch": "@@ -13,7 +13,7 @@ LL | use test as y;\n help: consider importing this module instead\n    |\n LL | use test::test as y;\n-   |     ~~~~~~~~~~~~~~~~\n+   |     ~~~~~~~~~~~~~~~\n \n error: aborting due to 2 previous errors\n "}, {"sha": "ea737c567b96047f01e68084dd2bc7aa215ca689", "filename": "tests/ui/unresolved/unresolved-candidates.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/716ea5f19cf28c4d2ce6b87ee17ab855ff837385/tests%2Fui%2Funresolved%2Funresolved-candidates.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/716ea5f19cf28c4d2ce6b87ee17ab855ff837385/tests%2Fui%2Funresolved%2Funresolved-candidates.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funresolved%2Funresolved-candidates.stderr?ref=716ea5f19cf28c4d2ce6b87ee17ab855ff837385", "patch": "@@ -7,7 +7,7 @@ LL |     use Trait;\n help: consider importing this trait instead\n    |\n LL |     use a::Trait;\n-   |         ~~~~~~~~~\n+   |         ~~~~~~~~\n \n error[E0405]: cannot find trait `Trait` in this scope\n   --> $DIR/unresolved-candidates.rs:10:10"}]}