{"sha": "ae0e45c02808551ec27ed940fad9a05cd9bcbaed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlMGU0NWMwMjgwODU1MWVjMjdlZDk0MGZhZDlhMDVjZDliY2JhZWQ=", "commit": {"author": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2017-04-06T19:19:45Z"}, "committer": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2017-04-06T19:19:45Z"}, "message": "rustdoc: where clause adjustment to fix tests\n\n- add spaces to output so stripping lines and breaking spaces renders\n  the same\n- add commas to where clauses in rustdoc tests to match the new output", "tree": {"sha": "f82aa34749507a4b9329d2db9d6555e0e665398d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f82aa34749507a4b9329d2db9d6555e0e665398d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae0e45c02808551ec27ed940fad9a05cd9bcbaed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae0e45c02808551ec27ed940fad9a05cd9bcbaed", "html_url": "https://github.com/rust-lang/rust/commit/ae0e45c02808551ec27ed940fad9a05cd9bcbaed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae0e45c02808551ec27ed940fad9a05cd9bcbaed/comments", "author": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36bc448c00a9fb5397d84b94485dd0279eb2af45", "url": "https://api.github.com/repos/rust-lang/rust/commits/36bc448c00a9fb5397d84b94485dd0279eb2af45", "html_url": "https://github.com/rust-lang/rust/commit/36bc448c00a9fb5397d84b94485dd0279eb2af45"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "13a31c557021ddd55690ffd80ab116c668766c3f", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ae0e45c02808551ec27ed940fad9a05cd9bcbaed/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae0e45c02808551ec27ed940fad9a05cd9bcbaed/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=ae0e45c02808551ec27ed940fad9a05cd9bcbaed", "patch": "@@ -192,9 +192,9 @@ impl<'a> fmt::Display for WhereClause<'a> {\n             clause.push_str(\" where\");\n         } else {\n             if end_newline {\n-                clause.push_str(\"<span class=\\\"where fmt-newline\\\">where\");\n+                clause.push_str(\" <span class=\\\"where fmt-newline\\\">where\");\n             } else {\n-                clause.push_str(\"<span class=\\\"where\\\">where\");\n+                clause.push_str(\" <span class=\\\"where\\\">where\");\n             }\n         }\n         for (i, pred) in gens.where_predicates.iter().enumerate() {\n@@ -241,8 +241,11 @@ impl<'a> fmt::Display for WhereClause<'a> {\n             clause.push_str(\"</span>\");\n             let padding = repeat(\"&nbsp;\").take(indent + 4).collect::<String>();\n             clause = clause.replace(\"<br>\", &format!(\"<br>{}\", padding));\n-            clause.insert_str(0, &repeat(\"&nbsp;\").take(indent).collect::<String>());\n-            if !end_newline {\n+            clause.insert_str(0, &repeat(\"&nbsp;\").take(indent.saturating_sub(1))\n+                                                  .collect::<String>());\n+            if end_newline {\n+                clause.push(' ');\n+            } else {\n                 clause.insert_str(0, \"<br>\");\n             }\n         }"}, {"sha": "af2beacf58acebb803d4bf2cef5aa289232398b9", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ae0e45c02808551ec27ed940fad9a05cd9bcbaed/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae0e45c02808551ec27ed940fad9a05cd9bcbaed/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=ae0e45c02808551ec27ed940fad9a05cd9bcbaed", "patch": "@@ -2710,14 +2710,14 @@ fn render_struct(w: &mut fmt::Formatter, it: &clean::Item,\n             }\n             write!(w, \")\")?;\n             if let Some(g) = g {\n-                write!(w, \"{}\", WhereClause { gens: g, indent: 0, end_newline: true })?\n+                write!(w, \"{}\", WhereClause { gens: g, indent: 0, end_newline: false })?\n             }\n             write!(w, \";\")?;\n         }\n         doctree::Unit => {\n             // Needed for PhantomData.\n             if let Some(g) = g {\n-                write!(w, \"{}\", WhereClause { gens: g, indent: 0, end_newline: true })?\n+                write!(w, \"{}\", WhereClause { gens: g, indent: 0, end_newline: false })?\n             }\n             write!(w, \";\")?;\n         }"}, {"sha": "48ef4b6be66dea34e4d204f8ce7eba6bce392b74", "filename": "src/test/rustdoc/impl-parts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ae0e45c02808551ec27ed940fad9a05cd9bcbaed/src%2Ftest%2Frustdoc%2Fimpl-parts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae0e45c02808551ec27ed940fad9a05cd9bcbaed/src%2Ftest%2Frustdoc%2Fimpl-parts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fimpl-parts.rs?ref=ae0e45c02808551ec27ed940fad9a05cd9bcbaed", "patch": "@@ -17,7 +17,7 @@ impl AnOibit for .. {}\n pub struct Foo<T> { field: T }\n \n // @has impl_parts/struct.Foo.html '//*[@class=\"impl\"]//code' \\\n-//     \"impl<T: Clone> !AnOibit for Foo<T> where T: Sync\"\n+//     \"impl<T: Clone> !AnOibit for Foo<T> where T: Sync,\"\n // @has impl_parts/trait.AnOibit.html '//*[@class=\"item-list\"]//code' \\\n-//     \"impl<T: Clone> !AnOibit for Foo<T> where T: Sync\"\n+//     \"impl<T: Clone> !AnOibit for Foo<T> where T: Sync,\"\n impl<T: Clone> !AnOibit for Foo<T> where T: Sync {}"}, {"sha": "960e40b07098567491d48b8936a0fe4a7b757b09", "filename": "src/test/rustdoc/issue-20727-4.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ae0e45c02808551ec27ed940fad9a05cd9bcbaed/src%2Ftest%2Frustdoc%2Fissue-20727-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae0e45c02808551ec27ed940fad9a05cd9bcbaed/src%2Ftest%2Frustdoc%2Fissue-20727-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-20727-4.rs?ref=ae0e45c02808551ec27ed940fad9a05cd9bcbaed", "patch": "@@ -35,15 +35,15 @@ pub trait IndexMut<Idx: ?Sized>: Index<Idx> {\n \n pub mod reexport {\n     // @has issue_20727_4/reexport/trait.Index.html\n-    // @has - '//*[@class=\"rust trait\"]' 'trait Index<Idx> where Idx: ?Sized {'\n+    // @has - '//*[@class=\"rust trait\"]' 'trait Index<Idx> where Idx: ?Sized, {'\n     // @has - '//*[@class=\"rust trait\"]' 'type Output: ?Sized'\n     // @has - '//*[@class=\"rust trait\"]' \\\n     //        'fn index(&self, index: Idx) -> &Self::Output'\n     pub use issue_20727::Index;\n \n     // @has issue_20727_4/reexport/trait.IndexMut.html\n     // @has - '//*[@class=\"rust trait\"]' \\\n-    //        'trait IndexMut<Idx>: Index<Idx> where Idx: ?Sized {'\n+    //        'trait IndexMut<Idx>: Index<Idx> where Idx: ?Sized, {'\n     // @has - '//*[@class=\"rust trait\"]' \\\n     //        'fn index_mut(&mut self, index: Idx) -> &mut Self::Output;'\n     pub use issue_20727::IndexMut;"}, {"sha": "e691f7c5bea01ef8e054f78e1cc71c7c9bcb7492", "filename": "src/test/rustdoc/where.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0e45c02808551ec27ed940fad9a05cd9bcbaed/src%2Ftest%2Frustdoc%2Fwhere.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae0e45c02808551ec27ed940fad9a05cd9bcbaed/src%2Ftest%2Frustdoc%2Fwhere.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhere.rs?ref=ae0e45c02808551ec27ed940fad9a05cd9bcbaed", "patch": "@@ -44,5 +44,5 @@ pub enum Foxtrot<F> { Foxtrot1(F) }\n impl<F> MyTrait for Foxtrot<F> where F: MyTrait {}\n \n // @has foo/type.Golf.html '//pre[@class=\"rust typedef\"]' \\\n-//          \"type Golf<T> where T: Clone = (T, T)\"\n+//          \"type Golf<T> where T: Clone, = (T, T)\"\n pub type Golf<T> where T: Clone = (T, T);"}]}