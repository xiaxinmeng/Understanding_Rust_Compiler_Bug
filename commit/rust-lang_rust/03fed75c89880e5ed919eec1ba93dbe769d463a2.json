{"sha": "03fed75c89880e5ed919eec1ba93dbe769d463a2", "node_id": "C_kwDOAAsO6NoAKDAzZmVkNzVjODk4ODBlNWVkOTE5ZWVjMWJhOTNkYmU3NjlkNDYzYTI", "commit": {"author": {"name": "Yechan Bae", "email": "yechan@gatech.edu", "date": "2021-10-09T09:59:53Z"}, "committer": {"name": "Yechan Bae", "email": "yechan@gatech.edu", "date": "2021-10-09T09:59:53Z"}, "message": "Address internal lints", "tree": {"sha": "44ca810fc3effd1cfcb107833096ba6595b7dc55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44ca810fc3effd1cfcb107833096ba6595b7dc55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03fed75c89880e5ed919eec1ba93dbe769d463a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03fed75c89880e5ed919eec1ba93dbe769d463a2", "html_url": "https://github.com/rust-lang/rust/commit/03fed75c89880e5ed919eec1ba93dbe769d463a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03fed75c89880e5ed919eec1ba93dbe769d463a2/comments", "author": {"login": "Qwaz", "id": 5073807, "node_id": "MDQ6VXNlcjUwNzM4MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/5073807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Qwaz", "html_url": "https://github.com/Qwaz", "followers_url": "https://api.github.com/users/Qwaz/followers", "following_url": "https://api.github.com/users/Qwaz/following{/other_user}", "gists_url": "https://api.github.com/users/Qwaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Qwaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Qwaz/subscriptions", "organizations_url": "https://api.github.com/users/Qwaz/orgs", "repos_url": "https://api.github.com/users/Qwaz/repos", "events_url": "https://api.github.com/users/Qwaz/events{/privacy}", "received_events_url": "https://api.github.com/users/Qwaz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Qwaz", "id": 5073807, "node_id": "MDQ6VXNlcjUwNzM4MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/5073807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Qwaz", "html_url": "https://github.com/Qwaz", "followers_url": "https://api.github.com/users/Qwaz/followers", "following_url": "https://api.github.com/users/Qwaz/following{/other_user}", "gists_url": "https://api.github.com/users/Qwaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Qwaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Qwaz/subscriptions", "organizations_url": "https://api.github.com/users/Qwaz/orgs", "repos_url": "https://api.github.com/users/Qwaz/repos", "events_url": "https://api.github.com/users/Qwaz/events{/privacy}", "received_events_url": "https://api.github.com/users/Qwaz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2181387c3ab4d7dc4d6e2c46c8158201a1b1045e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2181387c3ab4d7dc4d6e2c46c8158201a1b1045e", "html_url": "https://github.com/rust-lang/rust/commit/2181387c3ab4d7dc4d6e2c46c8158201a1b1045e"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "2573209d1b62880a8597ccf2440e978d7662bdd4", "filename": "clippy_lints/src/uninit_vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/03fed75c89880e5ed919eec1ba93dbe769d463a2/clippy_lints%2Fsrc%2Funinit_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03fed75c89880e5ed919eec1ba93dbe769d463a2/clippy_lints%2Fsrc%2Funinit_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funinit_vec.rs?ref=03fed75c89880e5ed919eec1ba93dbe769d463a2", "patch": "@@ -113,7 +113,7 @@ fn handle_uninit_vec_pair(\n                     UNINIT_VEC,\n                     vec![call_span, maybe_init_or_reserve.span],\n                     \"calling `set_len()` on empty `Vec` creates out-of-bound values\",\n-                )\n+                );\n             }\n         }\n     }"}, {"sha": "1ff282de9509730c03e738fc4ef0f5e16b8f59ee", "filename": "clippy_utils/src/higher.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/03fed75c89880e5ed919eec1ba93dbe769d463a2/clippy_utils%2Fsrc%2Fhigher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03fed75c89880e5ed919eec1ba93dbe769d463a2/clippy_utils%2Fsrc%2Fhigher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fhigher.rs?ref=03fed75c89880e5ed919eec1ba93dbe769d463a2", "patch": "@@ -11,7 +11,7 @@ use rustc_hir::{\n     Arm, Block, BorrowKind, Expr, ExprKind, HirId, LoopSource, MatchSource, Node, Pat, QPath, StmtKind, UnOp,\n };\n use rustc_lint::LateContext;\n-use rustc_span::{sym, ExpnKind, Span, Symbol};\n+use rustc_span::{sym, symbol, ExpnKind, Span, Symbol};\n \n /// The essential nodes of a desugared for loop as well as the entire span:\n /// `for pat in arg { body }` becomes `(pat, arg, body)`. Return `(pat, arg, body, span)`.\n@@ -658,7 +658,7 @@ pub fn get_vec_init_kind<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>) -\n             {\n                 if name.ident.name == sym::new {\n                     return Some(VecInitKind::New);\n-                } else if name.ident.name.as_str() == \"default\" {\n+                } else if name.ident.name == symbol::kw::Default {\n                     return Some(VecInitKind::Default);\n                 } else if name.ident.name.as_str() == \"with_capacity\" {\n                     let arg = args.get(0)?;"}]}