{"sha": "db2f308a46fe4e66311ed7d05f2b4f7597c6a7b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiMmYzMDhhNDZmZTRlNjYzMTFlZDdkMDVmMmI0Zjc1OTdjNmE3YjM=", "commit": {"author": {"name": "Nick Hamann", "email": "nick@wabbo.org", "date": "2015-04-21T01:45:02Z"}, "committer": {"name": "Nick Hamann", "email": "nick@wabbo.org", "date": "2015-04-21T01:45:02Z"}, "message": "Add two examples for Path::new", "tree": {"sha": "be494b7e3ad03356aaf786bf4552c6934d39df74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be494b7e3ad03356aaf786bf4552c6934d39df74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db2f308a46fe4e66311ed7d05f2b4f7597c6a7b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db2f308a46fe4e66311ed7d05f2b4f7597c6a7b3", "html_url": "https://github.com/rust-lang/rust/commit/db2f308a46fe4e66311ed7d05f2b4f7597c6a7b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db2f308a46fe4e66311ed7d05f2b4f7597c6a7b3/comments", "author": null, "committer": null, "parents": [{"sha": "f46c4e158d395cf6e186bf6afdf1705c12071cbe", "url": "https://api.github.com/repos/rust-lang/rust/commits/f46c4e158d395cf6e186bf6afdf1705c12071cbe", "html_url": "https://github.com/rust-lang/rust/commit/f46c4e158d395cf6e186bf6afdf1705c12071cbe"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "c5646e014eba4529d7e927c323a020ed678a8999", "filename": "src/libstd/path.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/db2f308a46fe4e66311ed7d05f2b4f7597c6a7b3/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db2f308a46fe4e66311ed7d05f2b4f7597c6a7b3/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=db2f308a46fe4e66311ed7d05f2b4f7597c6a7b3", "patch": "@@ -1248,6 +1248,13 @@ impl Path {\n     /// use std::path::Path;\n     ///\n     /// Path::new(\"foo.txt\");\n+    ///\n+    /// // Strings work too\n+    /// let s = String::from(\"bar.txt\");\n+    /// let p = Path::new(&s);\n+    ///\n+    /// // As do other Paths\n+    /// Path::new(&p);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn new<S: AsRef<OsStr> + ?Sized>(s: &S) -> &Path {"}]}