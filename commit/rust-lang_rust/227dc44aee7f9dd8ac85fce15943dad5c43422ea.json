{"sha": "227dc44aee7f9dd8ac85fce15943dad5c43422ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyN2RjNDRhZWU3ZjlkZDhhYzg1ZmNlMTU5NDNkYWQ1YzQzNDIyZWE=", "commit": {"author": {"name": "Mikhail Babenko", "email": "misha-babenko@yandex.ru", "date": "2019-11-13T01:27:43Z"}, "committer": {"name": "Mikhail Babenko", "email": "misha-babenko@yandex.ru", "date": "2019-11-13T01:27:43Z"}, "message": "display help on empty command line arguments", "tree": {"sha": "3462402ad776b8dbff1287bd686a99a435cf2d56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3462402ad776b8dbff1287bd686a99a435cf2d56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/227dc44aee7f9dd8ac85fce15943dad5c43422ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/227dc44aee7f9dd8ac85fce15943dad5c43422ea", "html_url": "https://github.com/rust-lang/rust/commit/227dc44aee7f9dd8ac85fce15943dad5c43422ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/227dc44aee7f9dd8ac85fce15943dad5c43422ea/comments", "author": {"login": "basil-cow", "id": 25266609, "node_id": "MDQ6VXNlcjI1MjY2NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/25266609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basil-cow", "html_url": "https://github.com/basil-cow", "followers_url": "https://api.github.com/users/basil-cow/followers", "following_url": "https://api.github.com/users/basil-cow/following{/other_user}", "gists_url": "https://api.github.com/users/basil-cow/gists{/gist_id}", "starred_url": "https://api.github.com/users/basil-cow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basil-cow/subscriptions", "organizations_url": "https://api.github.com/users/basil-cow/orgs", "repos_url": "https://api.github.com/users/basil-cow/repos", "events_url": "https://api.github.com/users/basil-cow/events{/privacy}", "received_events_url": "https://api.github.com/users/basil-cow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "basil-cow", "id": 25266609, "node_id": "MDQ6VXNlcjI1MjY2NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/25266609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basil-cow", "html_url": "https://github.com/basil-cow", "followers_url": "https://api.github.com/users/basil-cow/followers", "following_url": "https://api.github.com/users/basil-cow/following{/other_user}", "gists_url": "https://api.github.com/users/basil-cow/gists{/gist_id}", "starred_url": "https://api.github.com/users/basil-cow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basil-cow/subscriptions", "organizations_url": "https://api.github.com/users/basil-cow/orgs", "repos_url": "https://api.github.com/users/basil-cow/repos", "events_url": "https://api.github.com/users/basil-cow/events{/privacy}", "received_events_url": "https://api.github.com/users/basil-cow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79d3b30cd7726335f8f3d39946449163a1dc6bd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/79d3b30cd7726335f8f3d39946449163a1dc6bd7", "html_url": "https://github.com/rust-lang/rust/commit/79d3b30cd7726335f8f3d39946449163a1dc6bd7"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "9995c3fb1cec1f75aca59dafbb589cdf6871a65f", "filename": "src/driver.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/227dc44aee7f9dd8ac85fce15943dad5c43422ea/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/227dc44aee7f9dd8ac85fce15943dad5c43422ea/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=227dc44aee7f9dd8ac85fce15943dad5c43422ea", "patch": "@@ -268,14 +268,14 @@ pub fn main() {\n \n             // Setting RUSTC_WRAPPER causes Cargo to pass 'rustc' as the first argument.\n             // We're invoking the compiler programmatically, so we ignore this/\n-            let wrapper_mode = Path::new(&orig_args[1]).file_stem() == Some(\"rustc\".as_ref());\n+            let wrapper_mode = orig_args.get(1).map(Path::new).and_then(Path::file_stem) == Some(\"rustc\".as_ref());\n \n             if wrapper_mode {\n                 // we still want to be able to invoke it normally though\n                 orig_args.remove(1);\n             }\n \n-            if !wrapper_mode && std::env::args().any(|a| a == \"--help\" || a == \"-h\") {\n+            if !wrapper_mode && (orig_args.iter().any(|a| a == \"--help\" || a == \"-h\") || orig_args.len() == 1) {\n                 display_help();\n                 exit(0);\n             }"}]}