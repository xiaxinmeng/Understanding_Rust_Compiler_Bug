{"sha": "91798a89e55ca1e10d73a45d4d619d91ca2ceead", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxNzk4YTg5ZTU1Y2ExZTEwZDczYTQ1ZDRkNjE5ZDkxY2EyY2VlYWQ=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-04-08T15:34:12Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-04-08T15:34:12Z"}, "message": "Rollup merge of #24167 - hauleth:remove-incorrect-example-from-mpsc, r=steveklabnik\n\nAs beta is now released and is \"suggested\" version of `rustc` then there should be no code (in documentation) that will not compile with it. This one does not.\n\nSo according to [this great talk](http://delete-your-code.herokuapp.com/), I am doing what should be done.", "tree": {"sha": "82bde494599090784603715e0f69e534efcfc8c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82bde494599090784603715e0f69e534efcfc8c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91798a89e55ca1e10d73a45d4d619d91ca2ceead", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91798a89e55ca1e10d73a45d4d619d91ca2ceead", "html_url": "https://github.com/rust-lang/rust/commit/91798a89e55ca1e10d73a45d4d619d91ca2ceead", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91798a89e55ca1e10d73a45d4d619d91ca2ceead/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cef7f296f1c986d7db36610a39f42c89028240f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cef7f296f1c986d7db36610a39f42c89028240f", "html_url": "https://github.com/rust-lang/rust/commit/4cef7f296f1c986d7db36610a39f42c89028240f"}, {"sha": "4695bf070585ec74c3c7fb396c11b4f728f6866a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4695bf070585ec74c3c7fb396c11b4f728f6866a", "html_url": "https://github.com/rust-lang/rust/commit/4695bf070585ec74c3c7fb396c11b4f728f6866a"}], "stats": {"total": 52, "additions": 0, "deletions": 52}, "files": [{"sha": "e5444843516008bcfd66df49d7d19dab513f86cb", "filename": "src/libstd/sync/mpsc/mod.rs", "status": "modified", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/91798a89e55ca1e10d73a45d4d619d91ca2ceead/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91798a89e55ca1e10d73a45d4d619d91ca2ceead/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs?ref=91798a89e55ca1e10d73a45d4d619d91ca2ceead", "patch": "@@ -112,58 +112,6 @@\n //! });\n //! rx.recv().unwrap();\n //! ```\n-//!\n-//! Reading from a channel with a timeout requires to use a Timer together\n-//! with the channel. You can use the `select!` macro to select either and\n-//! handle the timeout case. This first example will break out of the loop\n-//! after 10 seconds no matter what:\n-//!\n-//! ```no_run\n-//! # #![feature(std_misc, old_io)]\n-//! use std::sync::mpsc::channel;\n-//! use std::old_io::timer::Timer;\n-//! use std::time::Duration;\n-//!\n-//! let (tx, rx) = channel::<i32>();\n-//! let mut timer = Timer::new().unwrap();\n-//! let timeout = timer.oneshot(Duration::seconds(10));\n-//!\n-//! loop {\n-//!     select! {\n-//!         val = rx.recv() => println!(\"Received {}\", val.unwrap()),\n-//!         _ = timeout.recv() => {\n-//!             println!(\"timed out, total time was more than 10 seconds\");\n-//!             break;\n-//!         }\n-//!     }\n-//! }\n-//! ```\n-//!\n-//! This second example is more costly since it allocates a new timer every\n-//! time a message is received, but it allows you to timeout after the channel\n-//! has been inactive for 5 seconds:\n-//!\n-//! ```no_run\n-//! # #![feature(std_misc, old_io)]\n-//! use std::sync::mpsc::channel;\n-//! use std::old_io::timer::Timer;\n-//! use std::time::Duration;\n-//!\n-//! let (tx, rx) = channel::<i32>();\n-//! let mut timer = Timer::new().unwrap();\n-//!\n-//! loop {\n-//!     let timeout = timer.oneshot(Duration::seconds(5));\n-//!\n-//!     select! {\n-//!         val = rx.recv() => println!(\"Received {}\", val.unwrap()),\n-//!         _ = timeout.recv() => {\n-//!             println!(\"timed out, no message received in 5 seconds\");\n-//!             break;\n-//!         }\n-//!     }\n-//! }\n-//! ```\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n "}]}