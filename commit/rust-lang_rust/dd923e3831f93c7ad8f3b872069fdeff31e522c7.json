{"sha": "dd923e3831f93c7ad8f3b872069fdeff31e522c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkOTIzZTM4MzFmOTNjN2FkOGYzYjg3MjA2OWZkZWZmMzFlNTIyYzc=", "commit": {"author": {"name": "Ramkumar Ramachandra", "email": "artagnon@gmail.com", "date": "2013-06-06T13:53:38Z"}, "committer": {"name": "Ramkumar Ramachandra", "email": "artagnon@gmail.com", "date": "2013-06-06T14:13:16Z"}, "message": "tutorial: fix for-loop example\n\nAlthough in the example function `each` works as expected with\nrust-0.6 (the latest release), it fails to even compile with `incoming`\nrust (see test/compile-fail/bad-for-loop-2.rs). Change the function to\nreturn a `bool` instead of `()`: this works fine with both versions of\nrust, and does not misguide potential contributors.\n\nSigned-off-by: Ramkumar Ramachandra <artagnon@gmail.com>", "tree": {"sha": "12fbc3d09f9697f8dc4787ded7d3806d580e24b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12fbc3d09f9697f8dc4787ded7d3806d580e24b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd923e3831f93c7ad8f3b872069fdeff31e522c7", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd923e3831f93c7ad8f3b872069fdeff31e522c7", "html_url": "https://github.com/rust-lang/rust/commit/dd923e3831f93c7ad8f3b872069fdeff31e522c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd923e3831f93c7ad8f3b872069fdeff31e522c7/comments", "author": {"login": "artagnon", "id": 37226, "node_id": "MDQ6VXNlcjM3MjI2", "avatar_url": "https://avatars.githubusercontent.com/u/37226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artagnon", "html_url": "https://github.com/artagnon", "followers_url": "https://api.github.com/users/artagnon/followers", "following_url": "https://api.github.com/users/artagnon/following{/other_user}", "gists_url": "https://api.github.com/users/artagnon/gists{/gist_id}", "starred_url": "https://api.github.com/users/artagnon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artagnon/subscriptions", "organizations_url": "https://api.github.com/users/artagnon/orgs", "repos_url": "https://api.github.com/users/artagnon/repos", "events_url": "https://api.github.com/users/artagnon/events{/privacy}", "received_events_url": "https://api.github.com/users/artagnon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artagnon", "id": 37226, "node_id": "MDQ6VXNlcjM3MjI2", "avatar_url": "https://avatars.githubusercontent.com/u/37226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artagnon", "html_url": "https://github.com/artagnon", "followers_url": "https://api.github.com/users/artagnon/followers", "following_url": "https://api.github.com/users/artagnon/following{/other_user}", "gists_url": "https://api.github.com/users/artagnon/gists{/gist_id}", "starred_url": "https://api.github.com/users/artagnon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artagnon/subscriptions", "organizations_url": "https://api.github.com/users/artagnon/orgs", "repos_url": "https://api.github.com/users/artagnon/repos", "events_url": "https://api.github.com/users/artagnon/events{/privacy}", "received_events_url": "https://api.github.com/users/artagnon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2cb23807507b5c9e46f9a41fb3084993476deb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2cb23807507b5c9e46f9a41fb3084993476deb7", "html_url": "https://github.com/rust-lang/rust/commit/c2cb23807507b5c9e46f9a41fb3084993476deb7"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "8caf8704e0589e6040347f8a0a48ac7a236edf5b", "filename": "doc/tutorial.md", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dd923e3831f93c7ad8f3b872069fdeff31e522c7/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/dd923e3831f93c7ad8f3b872069fdeff31e522c7/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=dd923e3831f93c7ad8f3b872069fdeff31e522c7", "patch": "@@ -1613,18 +1613,19 @@ loop. Like `do`, `for` is a nice syntax for describing control flow\n with closures.  Additionally, within a `for` loop, `break`, `loop`,\n and `return` work just as they do with `while` and `loop`.\n \n-Consider again our `each` function, this time improved to\n-break early when the iteratee returns `false`:\n+Consider again our `each` function, this time improved to return\n+immediately when the iteratee returns `false`:\n \n ~~~~\n-fn each(v: &[int], op: &fn(v: &int) -> bool) {\n+fn each(v: &[int], op: &fn(v: &int) -> bool) -> bool {\n    let mut n = 0;\n    while n < v.len() {\n        if !op(&v[n]) {\n-           break;\n+           return false;\n        }\n        n += 1;\n    }\n+   return true;\n }\n ~~~~\n "}]}