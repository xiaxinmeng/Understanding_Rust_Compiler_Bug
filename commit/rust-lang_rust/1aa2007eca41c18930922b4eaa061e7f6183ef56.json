{"sha": "1aa2007eca41c18930922b4eaa061e7f6183ef56", "node_id": "C_kwDOAAsO6NoAKDFhYTIwMDdlY2E0MWMxODkzMDkyMmI0ZWFhMDYxZTdmNjE4M2VmNTY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-08T22:18:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-08T22:18:06Z"}, "message": "Rollup merge of #91637 - tmiasko:generator-packed-drop, r=ecstatic-morse\n\nAdd test for packed drops in generators\n\nr? ```@ecstatic-morse```", "tree": {"sha": "79b0ca5118985493cb554e9635d3f1f7eae146e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79b0ca5118985493cb554e9635d3f1f7eae146e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1aa2007eca41c18930922b4eaa061e7f6183ef56", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhsS8eCRBK7hj4Ov3rIwAAmXYIAKZZ03+ZFJ0jv85cEZUUbor2\nNpBGKOC+WyFDVtJQIsj7PgC1RlID4X5UfM9G0AA5IRQDqZ2wbAgF8gNA0TGTPVCo\n9ey3IyLqrtQ3Nh4W57XqeIqjSmUGv5YZbQAdPq30eaLXnJPeKxMajRWy9zpsOqcY\nYtRy+htUZj6XiFoTlAsLlssfDJqluRD1tWb/l6nkML/dBZv55tJ1GjW7GUJV2laY\nkUcrWM2ujWNQyenyks8hDe1egdeYDvTn3Dcc4CoDpwzt0mvI8nYgwzKSnPGcTvse\neDNy2skTG+v7dml53QDvfD3P/aCKF2oVepP1b9691kBPu8lWnRjqpxD3dBrvIdA=\n=4Eqg\n-----END PGP SIGNATURE-----\n", "payload": "tree 79b0ca5118985493cb554e9635d3f1f7eae146e3\nparent d748c1ddbbbf118240653608f4d7d01307bfaa83\nparent 3cbe0f1b48dfdb7866f45a1d683b1391ed4d0508\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639001886 +0100\ncommitter GitHub <noreply@github.com> 1639001886 +0100\n\nRollup merge of #91637 - tmiasko:generator-packed-drop, r=ecstatic-morse\n\nAdd test for packed drops in generators\n\nr? ```@ecstatic-morse```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1aa2007eca41c18930922b4eaa061e7f6183ef56", "html_url": "https://github.com/rust-lang/rust/commit/1aa2007eca41c18930922b4eaa061e7f6183ef56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1aa2007eca41c18930922b4eaa061e7f6183ef56/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d748c1ddbbbf118240653608f4d7d01307bfaa83", "url": "https://api.github.com/repos/rust-lang/rust/commits/d748c1ddbbbf118240653608f4d7d01307bfaa83", "html_url": "https://github.com/rust-lang/rust/commit/d748c1ddbbbf118240653608f4d7d01307bfaa83"}, {"sha": "3cbe0f1b48dfdb7866f45a1d683b1391ed4d0508", "url": "https://api.github.com/repos/rust-lang/rust/commits/3cbe0f1b48dfdb7866f45a1d683b1391ed4d0508", "html_url": "https://github.com/rust-lang/rust/commit/3cbe0f1b48dfdb7866f45a1d683b1391ed4d0508"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "b95cdbbbaad3b2e857774c69c96df9c64fb76950", "filename": "src/test/ui/packed/packed-struct-drop-aligned.rs", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1aa2007eca41c18930922b4eaa061e7f6183ef56/src%2Ftest%2Fui%2Fpacked%2Fpacked-struct-drop-aligned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1aa2007eca41c18930922b4eaa061e7f6183ef56/src%2Ftest%2Fui%2Fpacked%2Fpacked-struct-drop-aligned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpacked%2Fpacked-struct-drop-aligned.rs?ref=1aa2007eca41c18930922b4eaa061e7f6183ef56", "patch": "@@ -1,6 +1,10 @@\n // run-pass\n+#![feature(generators)]\n+#![feature(generator_trait)]\n use std::cell::Cell;\n use std::mem;\n+use std::ops::Generator;\n+use std::pin::Pin;\n \n struct Aligned<'a> {\n     drop_count: &'a Cell<usize>\n@@ -19,15 +23,35 @@ impl<'a> Drop for Aligned<'a> {\n     }\n }\n \n+#[repr(transparent)]\n+struct NotCopy(u8);\n+\n #[repr(packed)]\n-struct Packed<'a>(u8, Aligned<'a>);\n+struct Packed<'a>(NotCopy, Aligned<'a>);\n \n fn main() {\n     let drop_count = &Cell::new(0);\n     {\n-        let mut p = Packed(0, Aligned { drop_count });\n+        let mut p = Packed(NotCopy(0), Aligned { drop_count });\n         p.1 = Aligned { drop_count };\n         assert_eq!(drop_count.get(), 1);\n     }\n     assert_eq!(drop_count.get(), 2);\n+\n+    let drop_count = &Cell::new(0);\n+    let mut g = || {\n+        let mut p = Packed(NotCopy(0), Aligned { drop_count });\n+        let _ = &p;\n+        p.1 = Aligned { drop_count };\n+        assert_eq!(drop_count.get(), 1);\n+        // Test that a generator drop function moves a value from a packed\n+        // struct to a separate local before dropping it. We move out the\n+        // first field to generate and open drop for the second field.\n+        drop(p.0);\n+        yield;\n+    };\n+    Pin::new(&mut g).resume(());\n+    assert_eq!(drop_count.get(), 1);\n+    drop(g);\n+    assert_eq!(drop_count.get(), 2);\n }"}]}