{"sha": "9cde34e1807208493b3975c155e0c5389820a8ce", "node_id": "C_kwDOAAsO6NoAKDljZGUzNGUxODA3MjA4NDkzYjM5NzVjMTU1ZTBjNTM4OTgyMGE4Y2U", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-09-05T05:26:00Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-09-05T14:11:34Z"}, "message": "use `propagate_through_exprs` instead of `propagate_through_expr`\n\nfix `ExprKind` static_assert_size\n\nfix hir-stats", "tree": {"sha": "975d8e89065106268357d6b9f0f1fc036b6e0de3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/975d8e89065106268357d6b9f0f1fc036b6e0de3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9cde34e1807208493b3975c155e0c5389820a8ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9cde34e1807208493b3975c155e0c5389820a8ce", "html_url": "https://github.com/rust-lang/rust/commit/9cde34e1807208493b3975c155e0c5389820a8ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9cde34e1807208493b3975c155e0c5389820a8ce/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fea1c5f5c82318102d759bbc83d4cc48aa876db9", "url": "https://api.github.com/repos/rust-lang/rust/commits/fea1c5f5c82318102d759bbc83d4cc48aa876db9", "html_url": "https://github.com/rust-lang/rust/commit/fea1c5f5c82318102d759bbc83d4cc48aa876db9"}], "stats": {"total": 61, "additions": 26, "deletions": 35}, "files": [{"sha": "9615025fa5767b43e86e57b57ba9ca2c977cad46", "filename": "compiler/rustc_borrowck/src/diagnostics/region_errors.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cde34e1807208493b3975c155e0c5389820a8ce/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fregion_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cde34e1807208493b3975c155e0c5389820a8ce/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fregion_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fregion_errors.rs?ref=9cde34e1807208493b3975c155e0c5389820a8ce", "patch": "@@ -900,8 +900,6 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n         let mut closure_span = None::<rustc_span::Span>;\n         match expr.kind {\n             hir::ExprKind::MethodCall(.., args, _) => {\n-                // only the first closre parameter of the method. args[0] is MethodCall PathSegment\n-\n                 for arg in args {\n                     if let hir::ExprKind::Closure(hir::Closure {\n                         capture_clause: hir::CaptureBy::Ref,"}, {"sha": "8fa5d610ffae228eb87d16443899a336f88036d1", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cde34e1807208493b3975c155e0c5389820a8ce/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cde34e1807208493b3975c155e0c5389820a8ce/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=9cde34e1807208493b3975c155e0c5389820a8ce", "patch": "@@ -3498,7 +3498,7 @@ mod size_asserts {\n     static_assert_size!(Block<'_>, 48);\n     static_assert_size!(Body<'_>, 32);\n     static_assert_size!(Expr<'_>, 64);\n-    static_assert_size!(ExprKind<'_>, 40);\n+    static_assert_size!(ExprKind<'_>, 48);\n     static_assert_size!(FnDecl<'_>, 40);\n     static_assert_size!(ForeignItem<'_>, 72);\n     static_assert_size!(ForeignItemKind<'_>, 40);"}, {"sha": "6a4cd79cde7128080ac4ce97922e65562aff3783", "filename": "compiler/rustc_passes/src/liveness.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9cde34e1807208493b3975c155e0c5389820a8ce/compiler%2Frustc_passes%2Fsrc%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cde34e1807208493b3975c155e0c5389820a8ce/compiler%2Frustc_passes%2Fsrc%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fliveness.rs?ref=9cde34e1807208493b3975c155e0c5389820a8ce", "patch": "@@ -1041,10 +1041,7 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n \n             hir::ExprKind::MethodCall(.., receiver, ref args, _) => {\n                 let succ = self.check_is_ty_uninhabited(expr, succ);\n-                let succ = args\n-                    .iter()\n-                    .rev()\n-                    .fold(succ, |succ, expr| self.propagate_through_expr(expr, succ));\n+                let succ = self.propagate_through_exprs(args, succ);\n                 self.propagate_through_expr(receiver, succ)\n             }\n "}, {"sha": "0a736f7be834e6da66083c655a68db6dd3999ac2", "filename": "src/test/ui/stats/hir-stats.stderr", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/9cde34e1807208493b3975c155e0c5389820a8ce/src%2Ftest%2Fui%2Fstats%2Fhir-stats.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9cde34e1807208493b3975c155e0c5389820a8ce/src%2Ftest%2Fui%2Fstats%2Fhir-stats.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstats%2Fhir-stats.stderr?ref=9cde34e1807208493b3975c155e0c5389820a8ce", "patch": "@@ -121,15 +121,15 @@ hir-stats ----------------------------------------------------------------\n hir-stats ForeignItemRef            24 ( 0.2%)             1            24\n hir-stats Mod                       32 ( 0.3%)             1            32\n hir-stats ExprField                 40 ( 0.4%)             1            40\n-hir-stats TraitItemRef              56 ( 0.6%)             2            28\n+hir-stats TraitItemRef              56 ( 0.5%)             2            28\n hir-stats Param                     64 ( 0.6%)             2            32\n hir-stats Local                     64 ( 0.6%)             1            64\n hir-stats InlineAsm                 72 ( 0.7%)             1            72\n hir-stats ImplItemRef               72 ( 0.7%)             2            36\n-hir-stats FieldDef                  96 ( 1.0%)             2            48\n-hir-stats Arm                       96 ( 1.0%)             2            48\n-hir-stats Body                      96 ( 1.0%)             3            32\n-hir-stats Stmt                      96 ( 1.0%)             3            32\n+hir-stats FieldDef                  96 ( 0.9%)             2            48\n+hir-stats Arm                       96 ( 0.9%)             2            48\n+hir-stats Body                      96 ( 0.9%)             3            32\n+hir-stats Stmt                      96 ( 0.9%)             3            32\n hir-stats - Local                     32 ( 0.3%)             1\n hir-stats - Semi                      32 ( 0.3%)             1\n hir-stats - Expr                      32 ( 0.3%)             1\n@@ -144,34 +144,34 @@ hir-stats GenericBound             192 ( 1.9%)             4            48\n hir-stats - Trait                    192 ( 1.9%)             4\n hir-stats WherePredicate           216 ( 2.1%)             3            72\n hir-stats - BoundPredicate           216 ( 2.1%)             3\n-hir-stats Block                    288 ( 2.9%)             6            48\n-hir-stats GenericParam             400 ( 4.0%)             5            80\n-hir-stats Pat                      440 ( 4.4%)             5            88\n+hir-stats Block                    288 ( 2.8%)             6            48\n+hir-stats GenericParam             400 ( 3.9%)             5            80\n+hir-stats Pat                      440 ( 4.3%)             5            88\n hir-stats - Wild                      88 ( 0.9%)             1\n hir-stats - Struct                    88 ( 0.9%)             1\n hir-stats - Binding                  264 ( 2.6%)             3\n hir-stats Generics                 560 ( 5.5%)            10            56\n-hir-stats Expr                     672 ( 6.7%)            12            56\n-hir-stats - Path                      56 ( 0.6%)             1\n-hir-stats - Struct                    56 ( 0.6%)             1\n-hir-stats - Match                     56 ( 0.6%)             1\n-hir-stats - InlineAsm                 56 ( 0.6%)             1\n-hir-stats - Lit                      112 ( 1.1%)             2\n-hir-stats - Block                    336 ( 3.3%)             6\n-hir-stats Item                     960 ( 9.5%)            12            80\n+hir-stats Expr                     768 ( 7.5%)            12            64\n+hir-stats - Path                      64 ( 0.6%)             1\n+hir-stats - Struct                    64 ( 0.6%)             1\n+hir-stats - Match                     64 ( 0.6%)             1\n+hir-stats - InlineAsm                 64 ( 0.6%)             1\n+hir-stats - Lit                      128 ( 1.3%)             2\n+hir-stats - Block                    384 ( 3.8%)             6\n+hir-stats Item                     960 ( 9.4%)            12            80\n hir-stats - Trait                     80 ( 0.8%)             1\n hir-stats - Enum                      80 ( 0.8%)             1\n hir-stats - ExternCrate               80 ( 0.8%)             1\n hir-stats - ForeignMod                80 ( 0.8%)             1\n hir-stats - Impl                      80 ( 0.8%)             1\n hir-stats - Fn                       160 ( 1.6%)             2\n-hir-stats - Use                      400 ( 4.0%)             5\n-hir-stats Ty                     1_080 (10.7%)            15            72\n+hir-stats - Use                      400 ( 3.9%)             5\n+hir-stats Ty                     1_080 (10.6%)            15            72\n hir-stats - Ptr                       72 ( 0.7%)             1\n hir-stats - Rptr                      72 ( 0.7%)             1\n-hir-stats - Path                     936 ( 9.3%)            13\n-hir-stats Path                   1_536 (15.2%)            32            48\n-hir-stats PathSegment            2_240 (22.2%)            40            56\n+hir-stats - Path                     936 ( 9.2%)            13\n+hir-stats Path                   1_536 (15.1%)            32            48\n+hir-stats PathSegment            2_240 (22.0%)            40            56\n hir-stats ----------------------------------------------------------------\n-hir-stats Total                 10_104\n+hir-stats Total                 10_200\n hir-stats"}, {"sha": "1342a4697b991664122c18fe8071fda8054fa81c", "filename": "src/tools/clippy/clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9cde34e1807208493b3975c155e0c5389820a8ce/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cde34e1807208493b3975c155e0c5389820a8ce/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Feta_reduction.rs?ref=9cde34e1807208493b3975c155e0c5389820a8ce", "patch": "@@ -206,12 +206,8 @@ fn check_inputs(\n             _ => false,\n         }\n     };\n-    if let Some(receiver) = receiver {\n-        std::iter::zip(params, std::iter::once(receiver).chain(call_args.iter()))\n-            .all(|(param, arg)| check_inputs(param, arg))\n-    } else {\n-        std::iter::zip(params, call_args).all(|(param, arg)| check_inputs(param, arg))\n-    }\n+    std::iter::zip(params, receiver.into_iter().chain(call_args.iter()))\n+        .all(|(param, arg)| check_inputs(param, arg))\n }\n \n fn check_sig<'tcx>(cx: &LateContext<'tcx>, closure_ty: Ty<'tcx>, call_ty: Ty<'tcx>) -> bool {"}]}