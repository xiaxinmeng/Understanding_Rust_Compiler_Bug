{"sha": "7a9ba1657daa9fd90c639dcd937da11b4f526675", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhOWJhMTY1N2RhYTlmZDkwYzYzOWRjZDkzN2RhMTFiNGY1MjY2NzU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-04-26T20:33:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-26T20:33:38Z"}, "message": "Merge #4158\n\n4158: Clarify rust-analyzer binary  install r=matklad a=zoechi\n\n\n\nCo-authored-by: G\u00fcnter Z\u00f6chbauer <guenter@gzoechbauer.com>", "tree": {"sha": "b796c2758b7577c9d95ae581eb0d5be63d36b4b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b796c2758b7577c9d95ae581eb0d5be63d36b4b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a9ba1657daa9fd90c639dcd937da11b4f526675", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJepfAiCRBK7hj4Ov3rIwAAdHIIACLyHRPJUn6CHQ0wn46HXn0c\nco57yNwI8oO2FyVOvYrk4JqWDkNXPqqcG2t87UlDY3F19cNFa7tHgqHIXFlFvTOL\naTE96IkWwOQdbuIovjUMrrcY1v05tpycMOoFw6a+O5R5yEplwf25Bo2F2YwFjrXi\nuhC7LzflCwDQWNxyvOj1HJmeQzvNj5xXxDeqU/952setRiRLLkEwB9dYb5epF0dZ\nJ/rO+rGgIKytT2gfxhXsxZUB3oW0dgXz3A8s2+eQVmk09QpjSxcnVuv02p7r43BZ\nDr3x9yVLYSEoCobyypCn4E9/JBRgCzb7rfzkos9o6z+R3OuJ3CO0leCtznRNLwY=\n=061J\n-----END PGP SIGNATURE-----\n", "payload": "tree b796c2758b7577c9d95ae581eb0d5be63d36b4b0\nparent 99c287148e02d2e762b4a90925763f7e36302767\nparent 999e3312e08de144c1f23bccd20a9f35f1680a38\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1587933218 +0000\ncommitter GitHub <noreply@github.com> 1587933218 +0000\n\nMerge #4158\n\n4158: Clarify rust-analyzer binary  install r=matklad a=zoechi\n\n\n\nCo-authored-by: G\u00fcnter Z\u00f6chbauer <guenter@gzoechbauer.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a9ba1657daa9fd90c639dcd937da11b4f526675", "html_url": "https://github.com/rust-lang/rust/commit/7a9ba1657daa9fd90c639dcd937da11b4f526675", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a9ba1657daa9fd90c639dcd937da11b4f526675/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99c287148e02d2e762b4a90925763f7e36302767", "url": "https://api.github.com/repos/rust-lang/rust/commits/99c287148e02d2e762b4a90925763f7e36302767", "html_url": "https://github.com/rust-lang/rust/commit/99c287148e02d2e762b4a90925763f7e36302767"}, {"sha": "999e3312e08de144c1f23bccd20a9f35f1680a38", "url": "https://api.github.com/repos/rust-lang/rust/commits/999e3312e08de144c1f23bccd20a9f35f1680a38", "html_url": "https://github.com/rust-lang/rust/commit/999e3312e08de144c1f23bccd20a9f35f1680a38"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "76d065d35b154cbd1c67c13ea50530d8f159bf0b", "filename": "docs/user/readme.adoc", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/7a9ba1657daa9fd90c639dcd937da11b4f526675/docs%2Fuser%2Freadme.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/7a9ba1657daa9fd90c639dcd937da11b4f526675/docs%2Fuser%2Freadme.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Freadme.adoc?ref=7a9ba1657daa9fd90c639dcd937da11b4f526675", "patch": "@@ -23,7 +23,7 @@ https://github.com/rust-analyzer/rust-analyzer/blob/master/docs/user/readme.adoc\n \n == Installation\n \n-In theory, one should be able to just install the server binary and have it automatically work with any editor.\n+In theory, one should be able to just install the <<rust-analyzer-language-server-binary,`rust-analyzer` binary>> and have it automatically work with any editor.\n We are not there yet, so some editor specific setup is required.\n \n Additionally, rust-analyzer needs the sources of the standard library.\n@@ -108,15 +108,26 @@ Here are some useful self-diagnostic commands:\n * To log all LSP requests, add `\"rust-analyzer.trace.server\": \"verbose\"` to the settings and look for `Server Trace` in the panel.\n * To enable client-side logging, add `\"rust-analyzer.trace.extension\": true` to the settings and open the `Console` tab of VS Code developer tools.\n \n-=== Language Server Binary\n+=== rust-analyzer Language Server Binary\n \n Other editors generally require the `rust-analyzer` binary to be in `$PATH`.\n You can download the pre-built binary from the https://github.com/rust-analyzer/rust-analyzer/releases[releases] page. Typically, you then need to rename the binary for your platform, e.g. `rust-analyzer-mac` if you're on Mac OS, to `rust-analzyer` and make it executable in addition to moving it into a directory in your `$PATH`.\n \n+On Linux to install the `rust-analyzer` binary into `~/.local/bin`, this commands could be used\n+\n+[source,bash]\n+----\n+$ curl -L https://github.com/rust-analyzer/rust-analyzer/releases/latest/download/rust-analyzer-linux -o ~/.local/bin/rust-analyzer\n+$ chmod +x ~/.local/bin/rust-analyzer\n+----\n+\n+Ensure `~/.local/bin` is listed in the `$PATH` variable.\n+\n Alternatively, you can install it from source using the following command:\n \n [source,bash]\n ----\n+$ git clone https://github.com/rust-analyzer/rust-analyzer.git && cd rust-analyzer\n $ cargo xtask install --server\n ----\n \n@@ -139,15 +150,19 @@ $ yay -S rust-analyzer-bin\n \n === Emacs\n \n-Emacs support is maintained https://github.com/emacs-lsp/lsp-mode/blob/master/lsp-rust.el[upstream].\n+Prerequisites: You have installed the <<rust-analyzer-language-server-binary,`rust-analyzer` binary>>.\n \n-1. Install the most recent version of `emacs-lsp` package by following the instructions https://github.com/emacs-lsp/lsp-mode[here].\n+Emacs support is maintained as part of the https://github.com/emacs-lsp/lsp-mode[Emacs-LSP] package in https://github.com/emacs-lsp/lsp-mode/blob/master/lsp-rust.el[lsp-rust.el].\n+\n+1. Install the most recent version of `emacs-lsp` package by following the https://github.com/emacs-lsp/lsp-mode[Emacs-LSP instructions].\n 2. Set `lsp-rust-server` to `'rust-analyzer`.\n 3. Run `lsp` in a Rust buffer.\n 4. (Optionally) bind commands like `lsp-rust-analyzer-join-lines`, `lsp-extend-selection` and `lsp-rust-analyzer-expand-macro` to keys.\n \n === Vim\n \n+Prerequisites: You have installed the <<rust-analyzer-language-server-binary,`rust-analyzer` binary>>.\n+\n The are several LSP client implementations for vim:\n \n ==== coc-rust-analyzer\n@@ -205,7 +220,7 @@ Once `neovim/nvim-lsp` is installed, use `+lua require'nvim_lsp'.rust_analyzer.s\n \n === Sublime Text 3\n \n-Prerequisites: You have installed the <<language-server-binary,`rust-analyzer` binary>>.\n+Prerequisites: You have installed the <<rust-analyzer-language-server-binary,`rust-analyzer` binary>>.\n \n You also need the `LSP` package. To install it:\n \n@@ -218,7 +233,7 @@ Finally, with your Rust project open, in the command palette, run `LSP: Enable L\n \n If it worked, you should see \"rust-analzyer, Line X, Column Y\" on the left side of the bottom bar, and after waiting a bit, functionality like tooltips on hovering over variables should become available.\n \n-If you get an error saying `No such file or directory: 'rust-analyzer'`, see the <<language-server-binary,section on installing the language server binary>>.\n+If you get an error saying `No such file or directory: 'rust-analyzer'`, see the <<rust-analyzer-language-server-binary,`rust-analyzer` binary>> section on installing the language server binary.\n \n == Usage\n "}]}