{"sha": "b7ccb0a5a7ee5bf51dbb63490c0d7166cfb993e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3Y2NiMGE1YTdlZTViZjUxZGJiNjM0OTBjMGQ3MTY2Y2ZiOTkzZTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-13T11:46:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-13T11:46:55Z"}, "message": "Auto merge of #45810 - SimonSapin:ac-dc, r=aturon\n\nDisable LLVM assertions on Nightly, enable them in \"alt\" builds.\n\nPer IRC discussion https://mozilla.logbot.info/rust-infra/20171106#c13812170-c13812204\n\nBackground: https://internals.rust-lang.org/t/disabling-llvm-assertions-in-nightly-builds/5388/14", "tree": {"sha": "60993f81e5c4a7567ae16747951dd74f5915110f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60993f81e5c4a7567ae16747951dd74f5915110f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7ccb0a5a7ee5bf51dbb63490c0d7166cfb993e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7ccb0a5a7ee5bf51dbb63490c0d7166cfb993e2", "html_url": "https://github.com/rust-lang/rust/commit/b7ccb0a5a7ee5bf51dbb63490c0d7166cfb993e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7ccb0a5a7ee5bf51dbb63490c0d7166cfb993e2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e312c8a8c3ecd7fead1e8a6cc591360dc73c9e79", "url": "https://api.github.com/repos/rust-lang/rust/commits/e312c8a8c3ecd7fead1e8a6cc591360dc73c9e79", "html_url": "https://github.com/rust-lang/rust/commit/e312c8a8c3ecd7fead1e8a6cc591360dc73c9e79"}, {"sha": "7625c79f2a8947388012d0636cac914c47771eff", "url": "https://api.github.com/repos/rust-lang/rust/commits/7625c79f2a8947388012d0636cac914c47771eff", "html_url": "https://github.com/rust-lang/rust/commit/7625c79f2a8947388012d0636cac914c47771eff"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "62336a7ff2ad58d8093111e6be8d3f6b5f388119", "filename": ".travis.yml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b7ccb0a5a7ee5bf51dbb63490c0d7166cfb993e2/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/b7ccb0a5a7ee5bf51dbb63490c0d7166cfb993e2/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=b7ccb0a5a7ee5bf51dbb63490c0d7166cfb993e2", "patch": "@@ -16,14 +16,14 @@ matrix:\n       if: type = pull_request OR branch = auto\n \n     - env: IMAGE=dist-x86_64-linux DEPLOY=1\n-      if: branch = try OR branch = auto\n+      if: branch = auto\n \n     # \"alternate\" deployments, these are \"nightlies\" but don't have assertions\n     # turned on, they're deployed to a different location primarily for projects\n     # which are stuck on nightly and don't want llvm assertions in the artifacts\n     # that they use.\n     - env: IMAGE=dist-x86_64-linux DEPLOY_ALT=1\n-      if: branch = auto\n+      if: branch = try OR branch = auto\n \n     - env: >\n         RUST_CHECK_TARGET=dist\n@@ -322,7 +322,7 @@ deploy:\n       secure: \"kUGd3t7JcVWFESgIlzvsM8viZgCA9Encs3creW0xLJaLSeI1iVjlJK4h/2/nO6y224AFrh/GUfsNr4/4AlxPuYb8OU5oC5Lv+Ff2JiRDYtuNpyQSKAQp+bRYytWMtrmhja91h118Mbm90cUfcLPwkdiINgJNTXhPKg5Cqu3VYn0=\"\n     on:\n       branch: try\n-      condition: $DEPLOY = 1\n+      condition: $DEPLOY_ALT = 1\n \n   # this is the same as the above deployment provider except that it uploads to\n   # a slightly different directory and has a different trigger"}, {"sha": "35e62f17f2e07b370062a5caaaa80285a7a6cae5", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7ccb0a5a7ee5bf51dbb63490c0d7166cfb993e2/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7ccb0a5a7ee5bf51dbb63490c0d7166cfb993e2/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=b7ccb0a5a7ee5bf51dbb63490c0d7166cfb993e2", "patch": "@@ -528,7 +528,7 @@ impl Config {\n         // Now that we've reached the end of our configuration, infer the\n         // default values for all options that we haven't otherwise stored yet.\n \n-        let default = config.channel == \"nightly\";\n+        let default = false;\n         config.llvm_assertions = llvm_assertions.unwrap_or(default);\n \n         let default = match &config.channel[..] {"}, {"sha": "deea4fec4dcfbcae188c180ab041108d305a22df", "filename": "src/ci/run.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7ccb0a5a7ee5bf51dbb63490c0d7166cfb993e2/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/b7ccb0a5a7ee5bf51dbb63490c0d7166cfb993e2/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=b7ccb0a5a7ee5bf51dbb63490c0d7166cfb993e2", "patch": "@@ -49,7 +49,7 @@ if [ \"$DEPLOY$DEPLOY_ALT\" != \"\" ]; then\n   if [ \"$NO_LLVM_ASSERTIONS\" = \"1\" ]; then\n     RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --disable-llvm-assertions\"\n   elif [ \"$DEPLOY_ALT\" != \"\" ]; then\n-    RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --disable-llvm-assertions\"\n+    RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-llvm-assertions\"\n   fi\n else\n   # We almost always want debug assertions enabled, but sometimes this takes too"}, {"sha": "f3a896cd4ab9d85e825e4ae7a1861e126cfa27d5", "filename": "src/test/run-make/sanitizer-memory/Makefile", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b7ccb0a5a7ee5bf51dbb63490c0d7166cfb993e2/src%2Ftest%2Frun-make%2Fsanitizer-memory%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/b7ccb0a5a7ee5bf51dbb63490c0d7166cfb993e2/src%2Ftest%2Frun-make%2Fsanitizer-memory%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsanitizer-memory%2FMakefile?ref=b7ccb0a5a7ee5bf51dbb63490c0d7166cfb993e2", "patch": "@@ -3,8 +3,10 @@\n all:\n ifeq ($(TARGET),x86_64-unknown-linux-gnu)\n ifdef SANITIZER_SUPPORT\n-\t$(RUSTC) -g -Z sanitizer=memory -Z print-link-args uninit.rs | grep -q librustc_msan\n-\t$(TMPDIR)/uninit 2>&1 | grep -q use-of-uninitialized-value\n+\t$(RUSTC) -g -Z sanitizer=memory -Z print-link-args uninit.rs | tee $(TMPDIR)/out\n+\tgrep -q librustc_msan $(TMPDIR)/out\n+\t$(TMPDIR)/uninit 2>&1 | tee $(TMPDIR)/out\n+\tgrep -q use-of-uninitialized-value $(TMPDIR)/out\n endif\n endif\n "}]}