{"sha": "3681220877771954fa923e50f227e632aabe8bbc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2ODEyMjA4Nzc3NzE5NTRmYTkyM2U1MGYyMjdlNjMyYWFiZThiYmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-06T19:28:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-06T19:28:36Z"}, "message": "Auto merge of #43975 - RalfJung:gcc, r=alexcrichton\n\nuse gcc::Build rather than deprecated gcc::Config\n\nI did `cargo update -p gcc` to upgrade only this package. Is there further process that should be follwoed when updating a build dependency from crates.io?\n\nr? @alexcrichton\nFixes #43973", "tree": {"sha": "421c90b04c2c7f1714121d3087b7bd631d3ad649", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/421c90b04c2c7f1714121d3087b7bd631d3ad649"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3681220877771954fa923e50f227e632aabe8bbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3681220877771954fa923e50f227e632aabe8bbc", "html_url": "https://github.com/rust-lang/rust/commit/3681220877771954fa923e50f227e632aabe8bbc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3681220877771954fa923e50f227e632aabe8bbc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a20953906056f85f71896795e762ac242e1891aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/a20953906056f85f71896795e762ac242e1891aa", "html_url": "https://github.com/rust-lang/rust/commit/a20953906056f85f71896795e762ac242e1891aa"}, {"sha": "13cf2290371eba6d91670355e0b82fc3b15b920a", "url": "https://api.github.com/repos/rust-lang/rust/commits/13cf2290371eba6d91670355e0b82fc3b15b920a", "html_url": "https://github.com/rust-lang/rust/commit/13cf2290371eba6d91670355e0b82fc3b15b920a"}], "stats": {"total": 65, "additions": 34, "deletions": 31}, "files": [{"sha": "a2ea07f3652ba36c24372800276162de5ce07a07", "filename": "src/Cargo.lock", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/3681220877771954fa923e50f227e632aabe8bbc/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/3681220877771954fa923e50f227e632aabe8bbc/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=3681220877771954fa923e50f227e632aabe8bbc", "patch": "@@ -47,7 +47,7 @@ dependencies = [\n  \"alloc_system 0.0.0\",\n  \"build_helper 0.1.0\",\n  \"core 0.0.0\",\n- \"gcc 0.3.51 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.53 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.0.0\",\n ]\n \n@@ -103,7 +103,7 @@ name = \"backtrace-sys\"\n version = \"0.1.12\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"gcc 0.3.51 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.53 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -137,7 +137,7 @@ dependencies = [\n  \"build_helper 0.1.0\",\n  \"cmake 0.1.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"filetime 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"gcc 0.3.51 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.53 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"getopts 0.2.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -270,7 +270,7 @@ name = \"cmake\"\n version = \"0.1.24\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"gcc 0.3.51 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.53 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -286,7 +286,7 @@ name = \"compiler_builtins\"\n version = \"0.0.0\"\n dependencies = [\n  \"core 0.0.0\",\n- \"gcc 0.3.51 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.53 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -397,7 +397,7 @@ name = \"curl-sys\"\n version = \"0.3.14\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"gcc 0.3.51 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.53 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libz-sys 1.0.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"openssl-sys 0.9.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -577,7 +577,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"gcc\"\n-version = \"0.3.51\"\n+version = \"0.3.53\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n@@ -837,7 +837,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cmake 0.1.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"curl-sys 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"gcc 0.3.51 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.53 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libssh2-sys 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libz-sys 1.0.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -862,7 +862,7 @@ name = \"libz-sys\"\n version = \"1.0.16\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"gcc 0.3.51 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.53 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pkg-config 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"vcpkg 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -883,7 +883,7 @@ version = \"0.1.8\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"filetime 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"gcc 0.3.51 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.53 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -965,7 +965,7 @@ name = \"miniz-sys\"\n version = \"0.1.9\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"gcc 0.3.51 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.53 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -1101,7 +1101,7 @@ name = \"openssl-sys\"\n version = \"0.9.17\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"gcc 0.3.51 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.53 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pkg-config 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"vcpkg 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1206,7 +1206,7 @@ name = \"profiler_builtins\"\n version = \"0.0.0\"\n dependencies = [\n  \"core 0.0.0\",\n- \"gcc 0.3.51 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.53 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1602,7 +1602,7 @@ name = \"rustc_llvm\"\n version = \"0.0.0\"\n dependencies = [\n  \"build_helper 0.1.0\",\n- \"gcc 0.3.51 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.53 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc_bitflags 0.0.0\",\n ]\n \n@@ -1732,7 +1732,7 @@ name = \"rustc_trans\"\n version = \"0.0.0\"\n dependencies = [\n  \"flate2 0.2.19 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"gcc 0.3.51 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.53 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"jobserver 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num_cpus 1.6.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1797,7 +1797,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"build_helper 0.1.0\",\n  \"env_logger 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"gcc 0.3.51 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.53 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"html-diff 0.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pulldown-cmark 0.0.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1970,7 +1970,7 @@ dependencies = [\n  \"collections 0.0.0\",\n  \"compiler_builtins 0.0.0\",\n  \"core 0.0.0\",\n- \"gcc 0.3.51 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.53 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.0.0\",\n  \"panic_abort 0.0.0\",\n  \"panic_unwind 0.0.0\",\n@@ -2474,7 +2474,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum fs2 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9ab76cfd2aaa59b7bf6688ad9ba15bbae64bff97f04ea02144cfd3443e5c2866\"\n \"checksum futf 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"51f93f3de6ba1794dcd5810b3546d004600a59a98266487c8407bc4b24e398f3\"\n \"checksum futures 0.1.15 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a82bdc62350ca9d7974c760e9665102fc9d740992a528c2254aa930e53b783c4\"\n-\"checksum gcc 0.3.51 (registry+https://github.com/rust-lang/crates.io-index)\" = \"120d07f202dcc3f72859422563522b66fe6463a4c513df062874daad05f85f0a\"\n+\"checksum gcc 0.3.53 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e8310f7e9c890398b0e80e301c4f474e9918d2b27fca8f48486ca775fa9ffc5a\"\n \"checksum getopts 0.2.14 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d9047cfbd08a437050b363d35ef160452c5fe8ea5187ae0a624708c91581d685\"\n \"checksum git2 0.6.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0c1c0203d653f4140241da0c1375a404f0a397249ec818cd2076c6280c50f6fa\"\n \"checksum git2-curl 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"68676bc784bf0bef83278898929bf64a251e87c0340723d0b93fa096c9c5bf8e\""}, {"sha": "266dffa5c92c76790a0026848d7ad30b3d5941aa", "filename": "src/bootstrap/bin/sccache-plus-cl.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3681220877771954fa923e50f227e632aabe8bbc/src%2Fbootstrap%2Fbin%2Fsccache-plus-cl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3681220877771954fa923e50f227e632aabe8bbc/src%2Fbootstrap%2Fbin%2Fsccache-plus-cl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Fsccache-plus-cl.rs?ref=3681220877771954fa923e50f227e632aabe8bbc", "patch": "@@ -18,12 +18,13 @@ fn main() {\n     // Locate the actual compiler that we're invoking\n     env::remove_var(\"CC\");\n     env::remove_var(\"CXX\");\n-    let mut cfg = gcc::Config::new();\n+    let mut cfg = gcc::Build::new();\n     cfg.cargo_metadata(false)\n        .out_dir(\"/\")\n        .target(&target)\n        .host(&target)\n        .opt_level(0)\n+       .warnings(false)\n        .debug(false);\n     let compiler = cfg.get_compiler();\n "}, {"sha": "c77e609d70be06b8dbd36f4bd49de5e274cfcc29", "filename": "src/bootstrap/cc.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3681220877771954fa923e50f227e632aabe8bbc/src%2Fbootstrap%2Fcc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3681220877771954fa923e50f227e632aabe8bbc/src%2Fbootstrap%2Fcc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcc.rs?ref=3681220877771954fa923e50f227e632aabe8bbc", "patch": "@@ -45,8 +45,8 @@ pub fn find(build: &mut Build) {\n     // For all targets we're going to need a C compiler for building some shims\n     // and such as well as for being a linker for Rust code.\n     for target in build.targets.iter().chain(&build.hosts).cloned().chain(iter::once(build.build)) {\n-        let mut cfg = gcc::Config::new();\n-        cfg.cargo_metadata(false).opt_level(0).debug(false)\n+        let mut cfg = gcc::Build::new();\n+        cfg.cargo_metadata(false).opt_level(0).warnings(false).debug(false)\n            .target(&target).host(&build.build);\n \n         let config = build.config.target_config.get(&target);\n@@ -67,8 +67,8 @@ pub fn find(build: &mut Build) {\n \n     // For all host triples we need to find a C++ compiler as well\n     for host in build.hosts.iter().cloned().chain(iter::once(build.build)) {\n-        let mut cfg = gcc::Config::new();\n-        cfg.cargo_metadata(false).opt_level(0).debug(false).cpp(true)\n+        let mut cfg = gcc::Build::new();\n+        cfg.cargo_metadata(false).opt_level(0).warnings(false).debug(false).cpp(true)\n            .target(&host).host(&build.build);\n         let config = build.config.target_config.get(&host);\n         if let Some(cxx) = config.and_then(|c| c.cxx.as_ref()) {\n@@ -82,7 +82,7 @@ pub fn find(build: &mut Build) {\n     }\n }\n \n-fn set_compiler(cfg: &mut gcc::Config,\n+fn set_compiler(cfg: &mut gcc::Build,\n                 gnu_compiler: &str,\n                 target: Interned<String>,\n                 config: Option<&Target>,"}, {"sha": "d9dc9df823a56455cbeab6c56b3d092502164433", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3681220877771954fa923e50f227e632aabe8bbc/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3681220877771954fa923e50f227e632aabe8bbc/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=3681220877771954fa923e50f227e632aabe8bbc", "patch": "@@ -289,7 +289,7 @@ impl Step for TestHelpers {\n         let _folder = build.fold_output(|| \"build_test_helpers\");\n         println!(\"Building test helpers\");\n         t!(fs::create_dir_all(&dst));\n-        let mut cfg = gcc::Config::new();\n+        let mut cfg = gcc::Build::new();\n \n         // We may have found various cross-compilers a little differently due to our\n         // extra configuration, so inform gcc of these compilers. Note, though, that\n@@ -306,6 +306,7 @@ impl Step for TestHelpers {\n            .target(&target)\n            .host(&build.build)\n            .opt_level(0)\n+           .warnings(false)\n            .debug(false)\n            .file(build.src.join(\"src/rt/rust_test_helpers.c\"))\n            .compile(\"librust_test_helpers.a\");"}, {"sha": "1864df4477abfadd7bc2808f239440fa659a1c2a", "filename": "src/liballoc_jemalloc/build.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3681220877771954fa923e50f227e632aabe8bbc/src%2Fliballoc_jemalloc%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3681220877771954fa923e50f227e632aabe8bbc/src%2Fliballoc_jemalloc%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc_jemalloc%2Fbuild.rs?ref=3681220877771954fa923e50f227e632aabe8bbc", "patch": "@@ -63,7 +63,7 @@ fn main() {\n         _ => return,\n     };\n \n-    let compiler = gcc::Config::new().get_compiler();\n+    let compiler = gcc::Build::new().get_compiler();\n     // only msvc returns None for ar so unwrap is okay\n     let ar = build_helper::cc2ar(compiler.path(), &target).unwrap();\n     let cflags = compiler.args()\n@@ -150,7 +150,7 @@ fn main() {\n     // sure the symbols are available.\n     if target.contains(\"androideabi\") {\n         println!(\"cargo:rerun-if-changed=pthread_atfork_dummy.c\");\n-        gcc::Config::new()\n+        gcc::Build::new()\n             .flag(\"-fvisibility=hidden\")\n             .file(\"pthread_atfork_dummy.c\")\n             .compile(\"libpthread_atfork_dummy.a\");"}, {"sha": "41e92b33475dacb7d05b09eb9b7d211438a464c1", "filename": "src/libprofiler_builtins/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3681220877771954fa923e50f227e632aabe8bbc/src%2Flibprofiler_builtins%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3681220877771954fa923e50f227e632aabe8bbc/src%2Flibprofiler_builtins%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibprofiler_builtins%2Fbuild.rs?ref=3681220877771954fa923e50f227e632aabe8bbc", "patch": "@@ -19,7 +19,7 @@ use std::path::Path;\n \n fn main() {\n     let target = env::var(\"TARGET\").expect(\"TARGET was not set\");\n-    let cfg = &mut gcc::Config::new();\n+    let cfg = &mut gcc::Build::new();\n \n     let mut profile_sources = vec![\"GCDAProfiling.c\",\n                                    \"InstrProfiling.c\","}, {"sha": "393aa7fa43bab8c22504dec5f32a0385d6a0f709", "filename": "src/librustc_llvm/build.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3681220877771954fa923e50f227e632aabe8bbc/src%2Flibrustc_llvm%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3681220877771954fa923e50f227e632aabe8bbc/src%2Flibrustc_llvm%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fbuild.rs?ref=3681220877771954fa923e50f227e632aabe8bbc", "patch": "@@ -136,7 +136,8 @@ fn main() {\n     let mut cmd = Command::new(&llvm_config);\n     cmd.arg(\"--cxxflags\");\n     let cxxflags = output(&mut cmd);\n-    let mut cfg = gcc::Config::new();\n+    let mut cfg = gcc::Build::new();\n+    cfg.warnings(false);\n     for flag in cxxflags.split_whitespace() {\n         // Ignore flags like `-m64` when we're doing a cross build\n         if is_crossed && flag.starts_with(\"-m\") {"}, {"sha": "130c6fd01a8d88737711d8a73e27f3327726d3ff", "filename": "src/librustdoc/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3681220877771954fa923e50f227e632aabe8bbc/src%2Flibrustdoc%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3681220877771954fa923e50f227e632aabe8bbc/src%2Flibrustdoc%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fbuild.rs?ref=3681220877771954fa923e50f227e632aabe8bbc", "patch": "@@ -14,7 +14,7 @@ extern crate gcc;\n fn main() {\n     let src_dir = std::path::Path::new(\"../rt/hoedown/src\");\n     build_helper::rerun_if_changed_anything_in_dir(src_dir);\n-    let mut cfg = gcc::Config::new();\n+    let mut cfg = gcc::Build::new();\n     cfg.file(\"../rt/hoedown/src/autolink.c\")\n        .file(\"../rt/hoedown/src/buffer.c\")\n        .file(\"../rt/hoedown/src/document.c\")"}, {"sha": "7dec7eb77e1b901daa914b81f054f5f93dd553a0", "filename": "src/libstd/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3681220877771954fa923e50f227e632aabe8bbc/src%2Flibstd%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3681220877771954fa923e50f227e632aabe8bbc/src%2Flibstd%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbuild.rs?ref=3681220877771954fa923e50f227e632aabe8bbc", "patch": "@@ -77,7 +77,7 @@ fn main() {\n fn build_libbacktrace(host: &str, target: &str) -> Result<(), ()> {\n     let native = native_lib_boilerplate(\"libbacktrace\", \"libbacktrace\", \"backtrace\", \".libs\")?;\n \n-    let compiler = gcc::Config::new().get_compiler();\n+    let compiler = gcc::Build::new().get_compiler();\n     // only msvc returns None for ar so unwrap is okay\n     let ar = build_helper::cc2ar(compiler.path(), target).unwrap();\n     let mut cflags = compiler.args().iter().map(|s| s.to_str().unwrap())"}]}