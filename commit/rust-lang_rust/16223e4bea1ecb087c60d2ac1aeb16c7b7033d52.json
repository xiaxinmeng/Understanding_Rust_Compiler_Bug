{"sha": "16223e4bea1ecb087c60d2ac1aeb16c7b7033d52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2MjIzZTRiZWExZWNiMDg3YzYwZDJhYzFhZWIxNmM3YjcwMzNkNTI=", "commit": {"author": {"name": "wizAmit", "email": "amitforfriends_dns@yahoo.com", "date": "2019-05-14T07:58:43Z"}, "committer": {"name": "wizAmit", "email": "amitforfriends_dns@yahoo.com", "date": "2019-05-14T07:58:43Z"}, "message": "new implementation for nth_back for chunks", "tree": {"sha": "63056c070164e4bdb151690227eb1a2d70e9d980", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63056c070164e4bdb151690227eb1a2d70e9d980"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16223e4bea1ecb087c60d2ac1aeb16c7b7033d52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16223e4bea1ecb087c60d2ac1aeb16c7b7033d52", "html_url": "https://github.com/rust-lang/rust/commit/16223e4bea1ecb087c60d2ac1aeb16c7b7033d52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16223e4bea1ecb087c60d2ac1aeb16c7b7033d52/comments", "author": {"login": "wizAmit", "id": 1691580, "node_id": "MDQ6VXNlcjE2OTE1ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1691580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wizAmit", "html_url": "https://github.com/wizAmit", "followers_url": "https://api.github.com/users/wizAmit/followers", "following_url": "https://api.github.com/users/wizAmit/following{/other_user}", "gists_url": "https://api.github.com/users/wizAmit/gists{/gist_id}", "starred_url": "https://api.github.com/users/wizAmit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wizAmit/subscriptions", "organizations_url": "https://api.github.com/users/wizAmit/orgs", "repos_url": "https://api.github.com/users/wizAmit/repos", "events_url": "https://api.github.com/users/wizAmit/events{/privacy}", "received_events_url": "https://api.github.com/users/wizAmit/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wizAmit", "id": 1691580, "node_id": "MDQ6VXNlcjE2OTE1ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1691580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wizAmit", "html_url": "https://github.com/wizAmit", "followers_url": "https://api.github.com/users/wizAmit/followers", "following_url": "https://api.github.com/users/wizAmit/following{/other_user}", "gists_url": "https://api.github.com/users/wizAmit/gists{/gist_id}", "starred_url": "https://api.github.com/users/wizAmit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wizAmit/subscriptions", "organizations_url": "https://api.github.com/users/wizAmit/orgs", "repos_url": "https://api.github.com/users/wizAmit/repos", "events_url": "https://api.github.com/users/wizAmit/events{/privacy}", "received_events_url": "https://api.github.com/users/wizAmit/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aff83c80dd162b43a301e2bea73762cc4560f0f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/aff83c80dd162b43a301e2bea73762cc4560f0f3", "html_url": "https://github.com/rust-lang/rust/commit/aff83c80dd162b43a301e2bea73762cc4560f0f3"}], "stats": {"total": 33, "additions": 27, "deletions": 6}, "files": [{"sha": "72a54c5ce82d0543c8ee0b0bd44cad528545b4fd", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/16223e4bea1ecb087c60d2ac1aeb16c7b7033d52/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16223e4bea1ecb087c60d2ac1aeb16c7b7033d52/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=16223e4bea1ecb087c60d2ac1aeb16c7b7033d52", "patch": "@@ -4155,15 +4155,32 @@ impl<'a, T> DoubleEndedIterator for Chunks<'a, T> {\n \n     #[inline]\n     fn nth_back(&mut self, n: usize) -> Option<Self::Item> {\n-        let (end, overflow) = self.v.len().overflowing_sub(n * self.chunk_size);\n+        let remainder = match self.v.len().checked_rem(self.chunk_size) {\n+            Some(res) => res,\n+            None => 0,\n+        };\n+\n+        let sub_chunk_size = if remainder != 0 { remainder } else { self.chunk_size };\n+\n+        let safe_sub = match n.checked_mul(sub_chunk_size) {\n+            Some(res) => res,\n+            None => 0,\n+        };\n+\n+        let (end, overflow) = self.v.len().overflowing_sub(safe_sub);\n         if overflow {\n-            self.v = &mut [];\n+            self.v=  &[];\n             None\n         } else {\n-            let start = match end.checked_sub(self.chunk_size) {\n-                Some(res) => cmp::min(self.v.len(), res),\n-                None => 0,\n+            let start = if n == 0 {\n+                self.v.len() - sub_chunk_size\n+            } else {\n+                match end.checked_sub(self.chunk_size) {\n+                    Some(res) => res,\n+                    None => 0,\n+                }\n             };\n+\n             let nth_back = &self.v[start..end];\n             self.v = &self.v[..start];\n             Some(nth_back)"}, {"sha": "cf2602f3210f161dbd317dffa8549b8df78dc126", "filename": "src/libcore/tests/slice.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/16223e4bea1ecb087c60d2ac1aeb16c7b7033d52/src%2Flibcore%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16223e4bea1ecb087c60d2ac1aeb16c7b7033d52/src%2Flibcore%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fslice.rs?ref=16223e4bea1ecb087c60d2ac1aeb16c7b7033d52", "patch": "@@ -144,14 +144,18 @@ fn test_chunks_nth_back() {\n \n     let v2: &[i32] = &[0, 1, 2, 3, 4];\n     let mut c2 = v2.chunks(3);\n-    assert_eq!(c2.nth_back(1).unwrap(), &[0, 1]);\n+    assert_eq!(c2.nth_back(1).unwrap(), &[0, 1, 2]);\n     assert_eq!(c2.next(), None);\n     assert_eq!(c2.next_back(), None);\n \n     let v3: &[i32] = &[0, 1, 2, 3, 4];\n     let mut c3 = v3.chunks(10);\n     assert_eq!(c3.nth_back(0).unwrap(), &[0, 1, 2, 3, 4]);\n     assert_eq!(c3.next(), None);\n+\n+    let v4: &[i32] = &[0, 1, 2];\n+    let mut c4 = v4.chunks(10);\n+    assert_eq!(c4.nth_back(1_000_000_000usize), None);\n }\n \n #[test]"}]}