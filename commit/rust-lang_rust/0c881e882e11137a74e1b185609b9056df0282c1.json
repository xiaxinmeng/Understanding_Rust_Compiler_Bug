{"sha": "0c881e882e11137a74e1b185609b9056df0282c1", "node_id": "C_kwDOAAsO6NoAKDBjODgxZTg4MmUxMTEzN2E3NGUxYjE4NTYwOWI5MDU2ZGYwMjgyYzE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-12T17:03:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-12T17:03:22Z"}, "message": "Auto merge of #12231 - jonas-schievink:fix-float-macro-panic, r=jonas-schievink\n\nfix: fix \"X is not a valid punct\" panic with floats in macros\n\nShould fix https://github.com/rust-lang/rust-analyzer/issues/12211", "tree": {"sha": "80bedb45a25dee361c9131a1351b469c8c25cb93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80bedb45a25dee361c9131a1351b469c8c25cb93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c881e882e11137a74e1b185609b9056df0282c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c881e882e11137a74e1b185609b9056df0282c1", "html_url": "https://github.com/rust-lang/rust/commit/0c881e882e11137a74e1b185609b9056df0282c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c881e882e11137a74e1b185609b9056df0282c1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8c0062d4eb82311152c6414eca5ebf0621b1da8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8c0062d4eb82311152c6414eca5ebf0621b1da8", "html_url": "https://github.com/rust-lang/rust/commit/f8c0062d4eb82311152c6414eca5ebf0621b1da8"}, {"sha": "cb5e8da88a06be415bd804884284c11c0a709bcf", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb5e8da88a06be415bd804884284c11c0a709bcf", "html_url": "https://github.com/rust-lang/rust/commit/cb5e8da88a06be415bd804884284c11c0a709bcf"}], "stats": {"total": 49, "additions": 45, "deletions": 4}, "files": [{"sha": "e4b065d0203c2bd212636b888b54804b75c10ef7", "filename": "crates/hir-def/src/macro_expansion_tests/proc_macros.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/0c881e882e11137a74e1b185609b9056df0282c1/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fproc_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c881e882e11137a74e1b185609b9056df0282c1/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fproc_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fproc_macros.rs?ref=0c881e882e11137a74e1b185609b9056df0282c1", "patch": "@@ -92,3 +92,40 @@ fn foo() {\n }\"##]],\n     );\n }\n+\n+#[test]\n+fn float_parsing_panic() {\n+    // Regression test for https://github.com/rust-lang/rust-analyzer/issues/12211\n+    check(\n+        r#\"\n+//- proc_macros: identity\n+macro_rules! id {\n+    ($($t:tt)*) => {\n+        $($t)*\n+    };\n+}\n+\n+id! {\n+    #[proc_macros::identity]\n+    impl Foo for WrapBj {\n+        async fn foo(&self) {\n+            self.0. id().await;\n+        }\n+    }\n+}\n+\"#,\n+        expect![[r##\"\n+macro_rules! id {\n+    ($($t:tt)*) => {\n+        $($t)*\n+    };\n+}\n+\n+#[proc_macros::identity] impl Foo for WrapBj {\n+    async fn foo(&self ) {\n+        self .0.id().await ;\n+    }\n+}\n+\"##]],\n+    );\n+}"}, {"sha": "361633e39d21d072abf531eb0f438ffd366e8961", "filename": "crates/mbe/src/syntax_bridge.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0c881e882e11137a74e1b185609b9056df0282c1/crates%2Fmbe%2Fsrc%2Fsyntax_bridge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c881e882e11137a74e1b185609b9056df0282c1/crates%2Fmbe%2Fsrc%2Fsyntax_bridge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Fsyntax_bridge.rs?ref=0c881e882e11137a74e1b185609b9056df0282c1", "patch": "@@ -243,6 +243,8 @@ fn convert_tokens<C: TokenConvertor>(conv: &mut C) -> tt::Subtree {\n             let char = match token.to_char(conv) {\n                 Some(c) => c,\n                 None => {\n+                    // FIXME: this isn't really correct, `to_char` yields the *first* char of the token,\n+                    // and this is relevant when eg. creating 2 `tt::Punct` from a single `::` token\n                     panic!(\"Token from lexer must be single char: token = {:#?}\", token);\n                 }\n             };"}, {"sha": "4ebf2157c66852aa3342c63f44035d7de306e374", "filename": "crates/parser/src/grammar.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0c881e882e11137a74e1b185609b9056df0282c1/crates%2Fparser%2Fsrc%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c881e882e11137a74e1b185609b9056df0282c1/crates%2Fparser%2Fsrc%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar.rs?ref=0c881e882e11137a74e1b185609b9056df0282c1", "patch": "@@ -324,7 +324,9 @@ fn name_ref_or_index(p: &mut Parser) {\n     );\n     let m = p.start();\n     if p.at(FLOAT_NUMBER_PART) || p.at_ts(FLOAT_LITERAL_FIRST) {\n-        p.bump_remap(INT_NUMBER);\n+        // Ideally we'd remap this to `INT_NUMBER` instead, but that causes the MBE conversion to\n+        // lose track of what's a float and what isn't, causing panics.\n+        p.bump_remap(FLOAT_NUMBER_PART);\n     } else {\n         p.bump_any();\n     }"}, {"sha": "a1efb3a9fb29dae92eb080049ce29f4747cd936b", "filename": "crates/parser/test_data/parser/inline/ok/0011_field_expr.rast", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0c881e882e11137a74e1b185609b9056df0282c1/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0011_field_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0c881e882e11137a74e1b185609b9056df0282c1/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0011_field_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0011_field_expr.rast?ref=0c881e882e11137a74e1b185609b9056df0282c1", "patch": "@@ -50,7 +50,7 @@ SOURCE_FILE\n                       IDENT \"x\"\n               DOT \".\"\n               NAME_REF\n-                INT_NUMBER \"0\"\n+                FLOAT_NUMBER_PART \"0\"\n             DOT \".\"\n             WHITESPACE \" \"\n             NAME_REF\n@@ -67,10 +67,10 @@ SOURCE_FILE\n                       IDENT \"x\"\n               DOT \".\"\n               NAME_REF\n-                INT_NUMBER \"0\"\n+                FLOAT_NUMBER_PART \"0\"\n             DOT \".\"\n             NAME_REF\n-              INT_NUMBER \"1\"\n+              FLOAT_NUMBER_PART \"1\"\n           SEMICOLON \";\"\n         WHITESPACE \"\\n    \"\n         EXPR_STMT"}]}