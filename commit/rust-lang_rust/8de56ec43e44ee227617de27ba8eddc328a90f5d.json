{"sha": "8de56ec43e44ee227617de27ba8eddc328a90f5d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkZTU2ZWM0M2U0NGVlMjI3NjE3ZGUyN2JhOGVkZGMzMjhhOTBmNWQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-07-15T06:50:36Z"}, "committer": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-07-15T06:50:36Z"}, "message": "Merge #1532\n\n1532: Some refactorings & update Chalk r=flodiebold a=flodiebold\n\nThis does some of the renamings proposed in #1515, refactors `InferenceContext` a bit, and does a Cargo update, including fixing the build since I broke it by already pushing an updated branch to my Chalk fork :disappointed: \r\nWe could also consider switching back to Chalk master; I couldn't reproduce any hangs with the floundering even on the rustc repo...\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>", "tree": {"sha": "81f3523f2d78ac65697489a3ca43c03a768d05bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81f3523f2d78ac65697489a3ca43c03a768d05bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8de56ec43e44ee227617de27ba8eddc328a90f5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8de56ec43e44ee227617de27ba8eddc328a90f5d", "html_url": "https://github.com/rust-lang/rust/commit/8de56ec43e44ee227617de27ba8eddc328a90f5d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8de56ec43e44ee227617de27ba8eddc328a90f5d/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "c4e2e36e4c3cdaf5243a4d481221804e2d71bc8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4e2e36e4c3cdaf5243a4d481221804e2d71bc8e", "html_url": "https://github.com/rust-lang/rust/commit/c4e2e36e4c3cdaf5243a4d481221804e2d71bc8e"}, {"sha": "c8284d8424691dc348af8708abfc2172b7dd5dc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8284d8424691dc348af8708abfc2172b7dd5dc5", "html_url": "https://github.com/rust-lang/rust/commit/c8284d8424691dc348af8708abfc2172b7dd5dc5"}], "stats": {"total": 424, "additions": 198, "deletions": 226}, "files": [{"sha": "dd6dade6c36400e3ee98f732cedb605ddd85525c", "filename": "Cargo.lock", "status": "modified", "additions": 143, "deletions": 145, "changes": 288, "blob_url": "https://github.com/rust-lang/rust/blob/8de56ec43e44ee227617de27ba8eddc328a90f5d/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/8de56ec43e44ee227617de27ba8eddc328a90f5d/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=8de56ec43e44ee227617de27ba8eddc328a90f5d", "patch": "@@ -18,19 +18,18 @@ dependencies = [\n \n [[package]]\n name = \"arrayvec\"\n-version = \"0.4.10\"\n+version = \"0.4.11\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"nodrop 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"atty\"\n-version = \"0.2.11\"\n+version = \"0.2.12\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"termion 1.5.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -48,7 +47,7 @@ dependencies = [\n  \"cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"dbghelp-sys 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-demangle 0.1.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -60,7 +59,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"backtrace-sys 0.1.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-demangle 0.1.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -70,7 +69,7 @@ version = \"0.1.30\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cc 1.0.37 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -162,54 +161,54 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n [[package]]\n name = \"chalk-engine\"\n version = \"0.9.0\"\n-source = \"git+https://github.com/flodiebold/chalk.git?branch=fuel#fba97af88ff2e0266db12490e2baf47d17e557e3\"\n+source = \"git+https://github.com/rust-lang/chalk.git#201775c47e4cefeb71d7f415c605e09c02e33b22\"\n dependencies = [\n- \"chalk-macros 0.1.1 (git+https://github.com/flodiebold/chalk.git?branch=fuel)\",\n+ \"chalk-macros 0.1.1 (git+https://github.com/rust-lang/chalk.git)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"stacker 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"chalk-ir\"\n version = \"0.1.0\"\n-source = \"git+https://github.com/flodiebold/chalk.git?branch=fuel#fba97af88ff2e0266db12490e2baf47d17e557e3\"\n+source = \"git+https://github.com/rust-lang/chalk.git#201775c47e4cefeb71d7f415c605e09c02e33b22\"\n dependencies = [\n- \"chalk-engine 0.9.0 (git+https://github.com/flodiebold/chalk.git?branch=fuel)\",\n- \"chalk-macros 0.1.1 (git+https://github.com/flodiebold/chalk.git?branch=fuel)\",\n+ \"chalk-engine 0.9.0 (git+https://github.com/rust-lang/chalk.git)\",\n+ \"chalk-macros 0.1.1 (git+https://github.com/rust-lang/chalk.git)\",\n  \"lalrpop-intern 0.15.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"chalk-macros\"\n version = \"0.1.1\"\n-source = \"git+https://github.com/flodiebold/chalk.git?branch=fuel#fba97af88ff2e0266db12490e2baf47d17e557e3\"\n+source = \"git+https://github.com/rust-lang/chalk.git#201775c47e4cefeb71d7f415c605e09c02e33b22\"\n dependencies = [\n  \"lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"chalk-rust-ir\"\n version = \"0.1.0\"\n-source = \"git+https://github.com/flodiebold/chalk.git?branch=fuel#fba97af88ff2e0266db12490e2baf47d17e557e3\"\n+source = \"git+https://github.com/rust-lang/chalk.git#201775c47e4cefeb71d7f415c605e09c02e33b22\"\n dependencies = [\n- \"chalk-engine 0.9.0 (git+https://github.com/flodiebold/chalk.git?branch=fuel)\",\n- \"chalk-ir 0.1.0 (git+https://github.com/flodiebold/chalk.git?branch=fuel)\",\n- \"chalk-macros 0.1.1 (git+https://github.com/flodiebold/chalk.git?branch=fuel)\",\n+ \"chalk-engine 0.9.0 (git+https://github.com/rust-lang/chalk.git)\",\n+ \"chalk-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git)\",\n+ \"chalk-macros 0.1.1 (git+https://github.com/rust-lang/chalk.git)\",\n ]\n \n [[package]]\n name = \"chalk-solve\"\n version = \"0.1.0\"\n-source = \"git+https://github.com/flodiebold/chalk.git?branch=fuel#fba97af88ff2e0266db12490e2baf47d17e557e3\"\n+source = \"git+https://github.com/rust-lang/chalk.git#201775c47e4cefeb71d7f415c605e09c02e33b22\"\n dependencies = [\n- \"chalk-engine 0.9.0 (git+https://github.com/flodiebold/chalk.git?branch=fuel)\",\n- \"chalk-ir 0.1.0 (git+https://github.com/flodiebold/chalk.git?branch=fuel)\",\n- \"chalk-macros 0.1.1 (git+https://github.com/flodiebold/chalk.git?branch=fuel)\",\n- \"chalk-rust-ir 0.1.0 (git+https://github.com/flodiebold/chalk.git?branch=fuel)\",\n- \"derive-new 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"chalk-engine 0.9.0 (git+https://github.com/rust-lang/chalk.git)\",\n+ \"chalk-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git)\",\n+ \"chalk-macros 0.1.1 (git+https://github.com/rust-lang/chalk.git)\",\n+ \"chalk-rust-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git)\",\n+ \"derive-new 0.5.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ena 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"itertools 0.7.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"petgraph 0.4.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -219,7 +218,7 @@ name = \"chrono\"\n version = \"0.4.7\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num-integer 0.1.41 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde 1.0.94 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -237,7 +236,7 @@ version = \"2.33.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"atty 0.2.12 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"bitflags 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"strsim 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"textwrap 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -250,9 +249,9 @@ name = \"clicolors-control\"\n version = \"1.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"atty 0.2.12 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -274,12 +273,12 @@ name = \"console\"\n version = \"0.7.7\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"atty 0.2.12 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"clicolors-control 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"encode_unicode 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"parking_lot 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"parking_lot 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 1.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"termios 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -318,7 +317,7 @@ name = \"crossbeam-epoch\"\n version = \"0.7.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"arrayvec 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"arrayvec 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"crossbeam-utils 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -354,11 +353,11 @@ dependencies = [\n \n [[package]]\n name = \"derive-new\"\n-version = \"0.5.6\"\n+version = \"0.5.7\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"syn 0.15.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -400,15 +399,15 @@ name = \"ena\"\n version = \"0.10.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"ena\"\n version = \"0.13.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -448,7 +447,7 @@ version = \"0.1.5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"syn 0.15.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"synstructure 0.10.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -464,7 +463,7 @@ version = \"0.2.5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -475,12 +474,12 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"flexi_logger\"\n-version = \"0.13.2\"\n+version = \"0.13.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"chrono 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"glob 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 1.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"yansi 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -504,7 +503,7 @@ name = \"fsevent-sys\"\n version = \"2.0.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -539,8 +538,8 @@ name = \"gen_lsp_server\"\n version = \"0.2.0\"\n dependencies = [\n  \"crossbeam-channel 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"flexi_logger 0.13.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"flexi_logger 0.13.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lsp-types 0.59.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde 1.0.94 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -560,7 +559,7 @@ version = \"0.1.6\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -609,7 +608,7 @@ dependencies = [\n  \"console 0.7.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"number_prefix 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"parking_lot 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"parking_lot 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 1.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -620,15 +619,15 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"bitflags 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"inotify-sys 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"inotify-sys\"\n version = \"0.1.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -656,18 +655,10 @@ name = \"iovec\"\n version = \"0.1.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n-[[package]]\n-name = \"itertools\"\n-version = \"0.7.11\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"either 1.5.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"itertools\"\n version = \"0.8.0\"\n@@ -687,7 +678,7 @@ version = \"0.2.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"jemalloc-sys 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -697,7 +688,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cc 1.0.37 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"fs_extra 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -706,7 +697,7 @@ version = \"0.1.9\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"jemalloc-sys 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -748,7 +739,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"libc\"\n-version = \"0.2.58\"\n+version = \"0.2.59\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n@@ -764,9 +755,17 @@ dependencies = [\n  \"scopeguard 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"lock_api\"\n+version = \"0.3.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"scopeguard 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"log\"\n-version = \"0.4.6\"\n+version = \"0.4.7\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -816,8 +815,8 @@ dependencies = [\n  \"fuchsia-zircon-sys 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"iovec 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"miow 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"net2 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"slab 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -830,7 +829,7 @@ version = \"2.0.5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"lazycell 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"mio 0.6.19 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"slab 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -852,7 +851,7 @@ version = \"0.2.33\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -872,7 +871,7 @@ dependencies = [\n  \"fsevent-sys 2.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"inotify 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"mio 0.6.19 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"mio-extras 2.0.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"walkdir 2.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -885,7 +884,7 @@ version = \"0.2.5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"syn 0.15.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -911,7 +910,7 @@ name = \"num_cpus\"\n version = \"1.10.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -922,14 +921,9 @@ dependencies = [\n  \"num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n-[[package]]\n-name = \"numtoa\"\n-version = \"0.1.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n [[package]]\n name = \"once_cell\"\n-version = \"0.2.1\"\n+version = \"0.2.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"lock_api 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -956,21 +950,45 @@ dependencies = [\n  \"rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"parking_lot\"\n+version = \"0.9.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"lock_api 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"parking_lot_core 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"parking_lot_core\"\n version = \"0.5.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"smallvec 0.6.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"parking_lot_core\"\n+version = \"0.6.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"smallvec 0.6.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"percent-encoding\"\n version = \"1.0.1\"\n@@ -1001,7 +1019,7 @@ dependencies = [\n  \"pest 2.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pest_meta 2.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"syn 0.15.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -1061,7 +1079,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"quote\"\n-version = \"0.6.12\"\n+version = \"0.6.13\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1075,10 +1093,10 @@ version = \"0.1.0\"\n name = \"ra_assists\"\n version = \"0.1.0\"\n dependencies = [\n- \"arrayvec 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"arrayvec 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"join_to_string 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"once_cell 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"once_cell 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ra_db 0.1.0\",\n  \"ra_fmt 0.1.0\",\n  \"ra_hir 0.1.0\",\n@@ -1091,7 +1109,7 @@ dependencies = [\n name = \"ra_batch\"\n version = \"0.1.0\"\n dependencies = [\n- \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ra_db 0.1.0\",\n  \"ra_hir 0.1.0\",\n  \"ra_ide_api 0.1.0\",\n@@ -1105,7 +1123,7 @@ name = \"ra_cli\"\n version = \"0.1.0\"\n dependencies = [\n  \"clap 2.33.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"flexi_logger 0.13.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"flexi_logger 0.13.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"indicatif 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ra_batch 0.1.0\",\n  \"ra_db 0.1.0\",\n@@ -1138,15 +1156,15 @@ dependencies = [\n name = \"ra_hir\"\n version = \"0.1.0\"\n dependencies = [\n- \"arrayvec 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"chalk-ir 0.1.0 (git+https://github.com/flodiebold/chalk.git?branch=fuel)\",\n- \"chalk-rust-ir 0.1.0 (git+https://github.com/flodiebold/chalk.git?branch=fuel)\",\n- \"chalk-solve 0.1.0 (git+https://github.com/flodiebold/chalk.git?branch=fuel)\",\n+ \"arrayvec 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"chalk-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git)\",\n+ \"chalk-rust-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git)\",\n+ \"chalk-solve 0.1.0 (git+https://github.com/rust-lang/chalk.git)\",\n  \"ena 0.13.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"insta 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lalrpop-intern 0.15.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"once_cell 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"once_cell 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ra_arena 0.1.0\",\n  \"ra_db 0.1.0\",\n@@ -1167,7 +1185,7 @@ dependencies = [\n  \"insta 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"join_to_string 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"proptest 0.9.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ra_assists 0.1.0\",\n  \"ra_db 0.1.0\",\n@@ -1190,9 +1208,9 @@ name = \"ra_lsp_server\"\n version = \"0.1.0\"\n dependencies = [\n  \"crossbeam-channel 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"flexi_logger 0.13.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"flexi_logger 0.13.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"gen_lsp_server 0.2.0\",\n- \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lsp-types 0.59.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ra_ide_api 0.1.0\",\n@@ -1217,7 +1235,7 @@ name = \"ra_mbe\"\n version = \"0.1.0\"\n dependencies = [\n  \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ra_parser 0.1.0\",\n  \"ra_syntax 0.1.0\",\n  \"ra_tt 0.1.0\",\n@@ -1241,15 +1259,15 @@ dependencies = [\n  \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"jemalloc-ctl 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"jemallocator 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"once_cell 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"once_cell 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"ra_project_model\"\n version = \"0.1.0\"\n dependencies = [\n  \"cargo_metadata 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ra_arena 0.1.0\",\n  \"ra_db 0.1.0\",\n  \"relative-path 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1304,7 +1322,7 @@ version = \"0.2.5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"crossbeam-channel 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"notify 4.0.12 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"relative-path 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1318,7 +1336,7 @@ version = \"0.6.5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"autocfg 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_chacha 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_hc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1336,7 +1354,7 @@ version = \"0.7.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"getrandom 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_chacha 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_core 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_hc 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1412,7 +1430,7 @@ name = \"rand_jitter\"\n version = \"0.1.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -1424,7 +1442,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1491,14 +1509,6 @@ name = \"redox_syscall\"\n version = \"0.1.56\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n-[[package]]\n-name = \"redox_termios\"\n-version = \"0.1.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"regex\"\n version = \"1.1.9\"\n@@ -1585,11 +1595,11 @@ name = \"salsa\"\n version = \"0.12.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"derive-new 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"derive-new 0.5.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"indexmap 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"linked-hash-map 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lock_api 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"salsa-macros 0.12.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1603,7 +1613,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"syn 0.15.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -1653,7 +1663,7 @@ version = \"1.0.94\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"syn 0.15.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -1727,7 +1737,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cc 1.0.37 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -1747,7 +1757,7 @@ version = \"0.15.39\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -1757,7 +1767,7 @@ version = \"0.10.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"syn 0.15.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -1768,7 +1778,7 @@ version = \"3.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"remove_dir_all 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1805,23 +1815,12 @@ dependencies = [\n  \"tera 0.11.20 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n-[[package]]\n-name = \"termion\"\n-version = \"1.5.3\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"numtoa 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"termios\"\n version = \"0.3.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1859,7 +1858,7 @@ name = \"thread_worker\"\n version = \"0.1.0\"\n dependencies = [\n  \"crossbeam-channel 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1875,7 +1874,7 @@ name = \"time\"\n version = \"0.1.42\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -2093,8 +2092,8 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n [metadata]\n \"checksum aho-corasick 0.7.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"36b7aa1ccb7d7ea3f437cf025a2ab1c47cc6c1bc9fc84918ff449def12f5e282\"\n \"checksum ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ee49baf6cb617b853aa8d93bf420db2383fab46d314482ca2803b40d5fde979b\"\n-\"checksum arrayvec 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"92c7fb76bc8826a8b33b4ee5bb07a247a81e76764ab4d55e8f73e3a4d8808c71\"\n-\"checksum atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9a7d5b8723950951411ee34d271d99dddcc2035a16ab25310ea2c8cfd4369652\"\n+\"checksum arrayvec 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b8d73f9beda665eaa98ab9e4f7442bd4e7de6652587de55b2525e52e29c1b0ba\"\n+\"checksum atty 0.2.12 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ecaaea69f52b3b18633611ec0007d188517d0366f47ff703d400fa6879d6f8d5\"\n \"checksum autocfg 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0e49efa51329a5fd37e7c79db4621af617cd4e3e5bc224939808d076077077bf\"\n \"checksum backtrace 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"346d7644f0b5f9bc73082d3b2236b69a05fd35cce0cfa3724e184e6a5c9e2a2f\"\n \"checksum backtrace 0.3.32 (registry+https://github.com/rust-lang/crates.io-index)\" = \"18b50f5258d1a9ad8396d2d345827875de4261b158124d4c819d9b351454fae5\"\n@@ -2111,11 +2110,11 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum cargo_metadata 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"929766d993a2fde7a0ae962ee82429069cd7b68839cd9375b98efd719df65d3a\"\n \"checksum cc 1.0.37 (registry+https://github.com/rust-lang/crates.io-index)\" = \"39f75544d7bbaf57560d2168f28fd649ff9c76153874db88bdbdfd839b1a7e7d\"\n \"checksum cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b486ce3ccf7ffd79fdeb678eac06a9e6c09fc88d33836340becb8fffe87c5e33\"\n-\"checksum chalk-engine 0.9.0 (git+https://github.com/flodiebold/chalk.git?branch=fuel)\" = \"<none>\"\n-\"checksum chalk-ir 0.1.0 (git+https://github.com/flodiebold/chalk.git?branch=fuel)\" = \"<none>\"\n-\"checksum chalk-macros 0.1.1 (git+https://github.com/flodiebold/chalk.git?branch=fuel)\" = \"<none>\"\n-\"checksum chalk-rust-ir 0.1.0 (git+https://github.com/flodiebold/chalk.git?branch=fuel)\" = \"<none>\"\n-\"checksum chalk-solve 0.1.0 (git+https://github.com/flodiebold/chalk.git?branch=fuel)\" = \"<none>\"\n+\"checksum chalk-engine 0.9.0 (git+https://github.com/rust-lang/chalk.git)\" = \"<none>\"\n+\"checksum chalk-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git)\" = \"<none>\"\n+\"checksum chalk-macros 0.1.1 (git+https://github.com/rust-lang/chalk.git)\" = \"<none>\"\n+\"checksum chalk-rust-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git)\" = \"<none>\"\n+\"checksum chalk-solve 0.1.0 (git+https://github.com/rust-lang/chalk.git)\" = \"<none>\"\n \"checksum chrono 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"77d81f58b7301084de3b958691458a53c3f7e0b1d702f77e550b6a88e3a88abe\"\n \"checksum ci_info 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e5e881307a989a3a5e20d52a32cc05950e3c2178cccfcc9428271a6cde09f902\"\n \"checksum clap 2.33.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5067f5bb2d80ef5d68b4c87db81601f0b75bca627bc2ef76b141d7b846a3c6d9\"\n@@ -2130,7 +2129,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum crossbeam-queue 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7c979cd6cfe72335896575c6b5688da489e420d36a27a0b9eb0c73db574b4a4b\"\n \"checksum crossbeam-utils 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f8306fcef4a7b563b76b7dd949ca48f52bc1141aa067d2ea09565f3e2652aa5c\"\n \"checksum dbghelp-sys 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"97590ba53bcb8ac28279161ca943a924d1fd4a8fb3fa63302591647c4fc5b850\"\n-\"checksum derive-new 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6ca414e896ae072546f4d789f452daaecf60ddee4c9df5dc6d5936d769e3d87c\"\n+\"checksum derive-new 0.5.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c3fd04571b29c91cfbe1e7c9a228e069ac8635f180ffb4ccd6a6907617ee8bb0\"\n \"checksum deunicode 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"850878694b7933ca4c9569d30a34b55031b9b139ee1fc7b94a527c4ef960d690\"\n \"checksum difference 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"524cbf6897b527295dff137cec09ecf3a05f4fddffd7dfcd1585403449e74198\"\n \"checksum digest 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f3d0c8c8752312f9713efd397ff63acb9f85585afbf179282e720e7704954dd5\"\n@@ -2147,7 +2146,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum fake-simd 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e88a8acf291dafb59c2d96e8f59828f3838bb1a70398823ade51a84de6a6deed\"\n \"checksum filetime 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2f8c63033fcba1f51ef744505b3cad42510432b904c062afa67ad7ece008429d\"\n \"checksum fixedbitset 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"86d4de0081402f5e88cdac65c8dcdcc73118c1a7a465e2a05f0da05843a8ea33\"\n-\"checksum flexi_logger 0.13.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e651f7ca90e082144feeb1b158603457d6704ba96b87530ba135bb55306064b1\"\n+\"checksum flexi_logger 0.13.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e9d3c4470d1ff8446baa0c13202646722886dde8dc4c5d33cb8242d70ece79d5\"\n \"checksum fs_extra 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5f2a4a2034423744d2cc7ca2068453168dcdb82c438419e639a26bd87839c674\"\n \"checksum fsevent 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5ab7d1bd1bd33cc98b0889831b72da23c0aa4df9cec7e0702f46ecea04b35db6\"\n \"checksum fsevent-sys 2.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f41b048a94555da0f42f1d632e2e19510084fb8e303b0daa2816e733fb3644a0\"\n@@ -2168,7 +2167,6 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum inotify-sys 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e74a1aa87c59aeff6ef2cc2fa62d41bc43f54952f55652656b18a02fd5e356c0\"\n \"checksum insta 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8bbbb69ec4557c37b2bf4d525d106d828e0c2fbd6c44bc98cd3798da13c73b9f\"\n \"checksum iovec 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dbe6e417e7d0975db6512b90796e8ce223145ac4e33c377e4a42882a0e88bb08\"\n-\"checksum itertools 0.7.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0d47946d458e94a1b7bcabbf6521ea7c037062c81f534615abcad76e84d4970d\"\n \"checksum itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5b8467d9c1cebe26feb08c640139247fac215782d35371ade9a2136ed6085358\"\n \"checksum itoa 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"501266b7edd0174f8530248f87f99c88fbe60ca4ef3dd486835b8d8d53136f7f\"\n \"checksum jemalloc-ctl 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4e93b0f37e7d735c6b610176d5b1bde8e1621ff3f6f7ac23cdfa4e7f7d0111b5\"\n@@ -2180,10 +2178,11 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum lazy_static 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"76f033c7ad61445c5b347c7382dd1237847eb1bce590fe50365dcb33d546be73\"\n \"checksum lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bc5729f27f159ddd61f4df6228e827e86643d4d3e7c32183cb30a1c08f604a14\"\n \"checksum lazycell 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b294d6fa9ee409a054354afc4352b0b9ef7ca222c69b8812cbea9e7d2bf3783f\"\n-\"checksum libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6281b86796ba5e4366000be6e9e18bf35580adf9e63fbe2294aadb587613a319\"\n+\"checksum libc 0.2.59 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3262021842bf00fe07dbd6cf34ff25c99d7a7ebef8deea84db72be3ea3bb0aff\"\n \"checksum linked-hash-map 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ae91b68aebc4ddb91978b11a1b02ddd8602a05ec19002801c5666000e05e0f83\"\n \"checksum lock_api 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ed946d4529956a20f2d63ebe1b69996d5a2137c91913fe3ebbeff957f5bca7ff\"\n-\"checksum log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c84ec4b527950aa83a329754b01dbe3f58361d1c5efacd1f6d68c494d08a17c6\"\n+\"checksum lock_api 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f8912e782533a93a167888781b836336a6ca5da6175c05944c86cf28c31104dc\"\n+\"checksum log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c275b6ad54070ac2d665eef9197db647b32239c9d244bfb6f041a766d00da5b3\"\n \"checksum lsp-types 0.59.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8961cde7f6f856771910edf37ff0729e59e02d2a8592a94c27495b746320e6ed\"\n \"checksum maplit 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"08cbb6b4fef96b6d77bfc40ec491b1690c779e77b05cd9f07f787ed376fd4c43\"\n \"checksum matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7ffc5c5338469d4d3ea17d269fa8ea3512ad247247c30bd2df69e68309ed0a08\"\n@@ -2200,12 +2199,13 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6ba9a427cfca2be13aa6f6403b0b7e7368fe982bfa16fccc450ce74c46cd9b32\"\n \"checksum num_cpus 1.10.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bcef43580c035376c0705c42792c294b66974abbfd2789b511784023f71f3273\"\n \"checksum number_prefix 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dbf9993e59c894e3c08aa1c2712914e9e6bf1fcbfc6bef283e2183df345a4fee\"\n-\"checksum numtoa 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b8f8bdf33df195859076e54ab11ee78a1b208382d3a26ec40d142ffc1ecc49ef\"\n-\"checksum once_cell 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4c7118943e044e53fb4f0400ba153201e7b3e1ee61f137d47aa45367223caa19\"\n+\"checksum once_cell 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6959fb95e7164b7707aa016c65652f9f5a29a9210aa1800e64f51c6ac9988d51\"\n \"checksum opaque-debug 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"93f5bb2e8e8dec81642920ccff6b61f1eb94fa3020c5a325c9851ff604152409\"\n \"checksum ordermap 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a86ed3f5f244b372d6b1a00b72ef7f8876d0bc6a78a4c9985c53614041512063\"\n \"checksum parking_lot 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fa7767817701cce701d5585b9c4db3cdd02086398322c1d7e8bf5094a96a2ce7\"\n+\"checksum parking_lot 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f842b1982eb6c2fe34036a4fbfb06dd185a3f5c8edfaacdf7d1ea10b07de6252\"\n \"checksum parking_lot_core 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cb88cb1cb3790baa6776844f968fea3be44956cf184fa1be5a03341f5491278c\"\n+\"checksum parking_lot_core 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"67812d70a819b886655846594086c00ac1f3e8b77c36ef494aa730c620b19d57\"\n \"checksum percent-encoding 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"31010dd2e1ac33d5b46a5b413495239882813e0369f8ed8a5e266f173602f831\"\n \"checksum pest 2.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"933085deae3f32071f135d799d75667b63c8dc1f4537159756e3d4ceab41868c\"\n \"checksum pest_derive 2.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"833d1ae558dc601e9a60366421196a8d94bc0ac980476d0b67e1d0988d72b2d0\"\n@@ -2216,7 +2216,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cf3d2011ab5c909338f7887f4fc896d35932e29146c12c8d01da6b22a80ba759\"\n \"checksum proptest 0.9.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cf147e022eacf0c8a054ab864914a7602618adba841d800a9a9868a5237a529f\"\n \"checksum quick-error 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9274b940887ce9addde99c4eee6b5c44cc494b182b97e73dc8ffdcb3397fd3f0\"\n-\"checksum quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)\" = \"faf4799c5d274f3868a4aae320a0a182cbd2baee377b378f080e16a23e9d80db\"\n+\"checksum quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6ce23b6b870e8f94f81fb0a363d65d86675884b34a09043c81e5562f11c1f8e1\"\n \"checksum ra_vfs 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fb7cd4e302032c5ab514f1c01c89727cd96fd950dd36f9ebee9252df45d9fb1a\"\n \"checksum rand 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6d71dacdc3c88c1fde3885a3be3fbab9f35724e6ce99467f7d9c5026132184ca\"\n \"checksum rand 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d47eab0e83d9693d40f825f86948aa16eff6750ead4bdffc4ab95b8b3a7f052c\"\n@@ -2237,7 +2237,6 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum rayon-core 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ebbe0df8435ac0c397d467b6cad6d25543d06e8a019ef3f6af3c384597515bd2\"\n \"checksum rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"678054eb77286b51581ba43620cc911abf02758c91f93f479767aed0f90458b2\"\n \"checksum redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2439c63f3f6139d1b57529d16bc3b8bb855230c8efcc5d3a896c8bea7c3b1e84\"\n-\"checksum redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7e891cfe48e9100a70a3b6eb652fef28920c117d366339687bd5576160db0f76\"\n \"checksum regex 1.1.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d9d8297cc20bbb6184f8b45ff61c8ee6a9ac56c156cec8e38c3e5084773c44ad\"\n \"checksum regex-syntax 0.6.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9b01330cce219c1c6b2e209e5ed64ccd587ae5c67bed91c0b49eecf02ae40e21\"\n \"checksum relative-path 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0e7790c7f1cc73d831d28dc5a7deb316a006e7848e6a7f467cdb10a0a9e0fb1c\"\n@@ -2273,7 +2272,6 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum tempfile 3.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7a6e24d9338a0a5be79593e2fa15a648add6138caa803e2d5bc782c371732ca9\"\n \"checksum tera 0.11.20 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4b505279e19d8f7d24b1a9dc58327c9c36174b1a2c7ebdeac70792d017cb64f3\"\n \"checksum teraron 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9a447d012fef5c222f4b11a98fcef2a7e347a57f28be9957c5c390ac9a0e41e0\"\n-\"checksum termion 1.5.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6a8fb22f7cde82c8220e5aeacb3258ed7ce996142c77cba193f203515e26c330\"\n \"checksum termios 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"72b620c5ea021d75a735c943269bb07d30c9b77d6ac6b236bc8b5c496ef05625\"\n \"checksum text_unit 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e08bbcb7a3adbda0eb23431206b653bdad3d8dea311e72d36bf2215e27a42579\"\n \"checksum textwrap 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d326610f408c7a4eb6f51c37c330e496b08506c9457c9d34287ecc38809fb060\""}, {"sha": "833956ce8678a38ca17f34cbe62fac8f6327fd4a", "filename": "crates/ra_hir/Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8de56ec43e44ee227617de27ba8eddc328a90f5d/crates%2Fra_hir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8de56ec43e44ee227617de27ba8eddc328a90f5d/crates%2Fra_hir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2FCargo.toml?ref=8de56ec43e44ee227617de27ba8eddc328a90f5d", "patch": "@@ -21,9 +21,9 @@ tt = { path = \"../ra_tt\", package = \"ra_tt\" }\n test_utils = { path = \"../test_utils\" }\n ra_prof = { path = \"../ra_prof\" }\n \n-chalk-solve = { git = \"https://github.com/flodiebold/chalk.git\", branch = \"fuel\" }\n-chalk-rust-ir = { git = \"https://github.com/flodiebold/chalk.git\", branch = \"fuel\" }\n-chalk-ir = { git = \"https://github.com/flodiebold/chalk.git\", branch = \"fuel\" }\n+chalk-solve = { git = \"https://github.com/rust-lang/chalk.git\" }\n+chalk-rust-ir = { git = \"https://github.com/rust-lang/chalk.git\" }\n+chalk-ir = { git = \"https://github.com/rust-lang/chalk.git\" }\n lalrpop-intern = \"0.15.1\"\n \n [dev-dependencies]"}, {"sha": "040c782e6963e3d43a22e39a3685c06f908652d4", "filename": "crates/ra_hir/src/db.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8de56ec43e44ee227617de27ba8eddc328a90f5d/crates%2Fra_hir%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8de56ec43e44ee227617de27ba8eddc328a90f5d/crates%2Fra_hir%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdb.rs?ref=8de56ec43e44ee227617de27ba8eddc328a90f5d", "patch": "@@ -189,9 +189,9 @@ pub trait HirDatabase: DefDatabase + AstDatabase {\n     /// because Chalk does its own internal caching, the solver is wrapped in a\n     /// Mutex and the query is marked volatile, to make sure the cached state is\n     /// thrown away when input facts change.\n-    #[salsa::invoke(crate::ty::traits::solver_query)]\n+    #[salsa::invoke(crate::ty::traits::trait_solver_query)]\n     #[salsa::volatile]\n-    fn solver(&self, krate: Crate) -> Arc<Mutex<crate::ty::traits::Solver>>;\n+    fn trait_solver(&self, krate: Crate) -> Arc<Mutex<crate::ty::traits::Solver>>;\n \n     #[salsa::invoke(crate::ty::traits::chalk::associated_ty_data_query)]\n     fn associated_ty_data(&self, id: chalk_ir::TypeId) -> Arc<chalk_rust_ir::AssociatedTyDatum>;\n@@ -213,8 +213,8 @@ pub trait HirDatabase: DefDatabase + AstDatabase {\n     #[salsa::invoke(crate::ty::traits::chalk::impl_datum_query)]\n     fn impl_datum(&self, krate: Crate, impl_id: chalk_ir::ImplId) -> Arc<chalk_rust_ir::ImplDatum>;\n \n-    #[salsa::invoke(crate::ty::traits::solve_query)]\n-    fn solve(\n+    #[salsa::invoke(crate::ty::traits::trait_solve_query)]\n+    fn trait_solve(\n         &self,\n         krate: Crate,\n         goal: crate::ty::Canonical<crate::ty::InEnvironment<crate::ty::Obligation>>,"}, {"sha": "4cf714f5dcdb988891c4f4731eac30f3cb76d960", "filename": "crates/ra_hir/src/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8de56ec43e44ee227617de27ba8eddc328a90f5d/crates%2Fra_hir%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8de56ec43e44ee227617de27ba8eddc328a90f5d/crates%2Fra_hir%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty.rs?ref=8de56ec43e44ee227617de27ba8eddc328a90f5d", "patch": "@@ -26,7 +26,7 @@ pub(crate) use lower::{\n     callable_item_sig, generic_defaults_query, generic_predicates_query, type_for_def,\n     type_for_field, TypableDef,\n };\n-pub(crate) use traits::{Environment, InEnvironment, Obligation, ProjectionPredicate};\n+pub(crate) use traits::{InEnvironment, Obligation, ProjectionPredicate, TraitEnvironment};\n \n /// A type constructor or type name: this might be something like the primitive\n /// type `bool`, a struct like `Vec`, or things like function pointers or"}, {"sha": "2535d4ae79e394d62a56c48bbcffb64bcdb05b26", "filename": "crates/ra_hir/src/ty/autoderef.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8de56ec43e44ee227617de27ba8eddc328a90f5d/crates%2Fra_hir%2Fsrc%2Fty%2Fautoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8de56ec43e44ee227617de27ba8eddc328a90f5d/crates%2Fra_hir%2Fsrc%2Fty%2Fautoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Fautoderef.rs?ref=8de56ec43e44ee227617de27ba8eddc328a90f5d", "patch": "@@ -68,7 +68,7 @@ fn deref_by_trait(\n \n     let canonical = super::Canonical { num_vars: 1 + ty.num_vars, value: in_env };\n \n-    let solution = db.solve(krate, canonical)?;\n+    let solution = db.trait_solve(krate, canonical)?;\n \n     match &solution {\n         Solution::Unique(vars) => {"}, {"sha": "0e030576d8706b9002bca958ef45f6445c4c8a3a", "filename": "crates/ra_hir/src/ty/infer.rs", "status": "modified", "additions": 23, "deletions": 40, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/8de56ec43e44ee227617de27ba8eddc328a90f5d/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8de56ec43e44ee227617de27ba8eddc328a90f5d/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs?ref=8de56ec43e44ee227617de27ba8eddc328a90f5d", "patch": "@@ -29,8 +29,8 @@ use test_utils::tested_by;\n use super::{\n     autoderef, lower, method_resolution, op, primitive,\n     traits::{Guidance, Obligation, ProjectionPredicate, Solution},\n-    ApplicationTy, CallableDef, Environment, InEnvironment, ProjectionTy, Substs, TraitRef, Ty,\n-    TypableDef, TypeCtor,\n+    ApplicationTy, CallableDef, InEnvironment, ProjectionTy, Substs, TraitEnvironment, TraitRef,\n+    Ty, TypableDef, TypeCtor,\n };\n use crate::{\n     adt::VariantDef,\n@@ -107,7 +107,7 @@ impl Default for BindingMode {\n }\n \n /// The result of type inference: A mapping from expressions and patterns to types.\n-#[derive(Clone, PartialEq, Eq, Debug)]\n+#[derive(Clone, PartialEq, Eq, Debug, Default)]\n pub struct InferenceResult {\n     /// For each method call expr, records the function it resolves to.\n     method_resolutions: FxHashMap<ExprId, Function>,\n@@ -170,29 +170,17 @@ struct InferenceContext<'a, D: HirDatabase> {\n     body: Arc<Body>,\n     resolver: Resolver,\n     var_unification_table: InPlaceUnificationTable<TypeVarId>,\n-    trait_env: Arc<Environment>,\n+    trait_env: Arc<TraitEnvironment>,\n     obligations: Vec<Obligation>,\n-    method_resolutions: FxHashMap<ExprId, Function>,\n-    field_resolutions: FxHashMap<ExprId, StructField>,\n-    variant_resolutions: FxHashMap<ExprId, VariantDef>,\n-    assoc_resolutions: FxHashMap<ExprOrPatId, ImplItem>,\n-    type_of_expr: ArenaMap<ExprId, Ty>,\n-    type_of_pat: ArenaMap<PatId, Ty>,\n-    diagnostics: Vec<InferenceDiagnostic>,\n+    result: InferenceResult,\n     /// The return type of the function being inferred.\n     return_ty: Ty,\n }\n \n impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n     fn new(db: &'a D, body: Arc<Body>, resolver: Resolver) -> Self {\n         InferenceContext {\n-            method_resolutions: FxHashMap::default(),\n-            field_resolutions: FxHashMap::default(),\n-            variant_resolutions: FxHashMap::default(),\n-            assoc_resolutions: FxHashMap::default(),\n-            type_of_expr: ArenaMap::default(),\n-            type_of_pat: ArenaMap::default(),\n-            diagnostics: Vec::default(),\n+            result: InferenceResult::default(),\n             var_unification_table: InPlaceUnificationTable::new(),\n             obligations: Vec::default(),\n             return_ty: Ty::Unknown, // set in collect_fn_signature\n@@ -205,50 +193,45 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n \n     fn resolve_all(mut self) -> InferenceResult {\n         // FIXME resolve obligations as well (use Guidance if necessary)\n+        let mut result = mem::replace(&mut self.result, InferenceResult::default());\n         let mut tv_stack = Vec::new();\n-        let mut expr_types = mem::replace(&mut self.type_of_expr, ArenaMap::default());\n-        for ty in expr_types.values_mut() {\n+        for ty in result.type_of_expr.values_mut() {\n             let resolved = self.resolve_ty_completely(&mut tv_stack, mem::replace(ty, Ty::Unknown));\n             *ty = resolved;\n         }\n-        let mut pat_types = mem::replace(&mut self.type_of_pat, ArenaMap::default());\n-        for ty in pat_types.values_mut() {\n+        for ty in result.type_of_pat.values_mut() {\n             let resolved = self.resolve_ty_completely(&mut tv_stack, mem::replace(ty, Ty::Unknown));\n             *ty = resolved;\n         }\n-        InferenceResult {\n-            method_resolutions: self.method_resolutions,\n-            field_resolutions: self.field_resolutions,\n-            variant_resolutions: self.variant_resolutions,\n-            assoc_resolutions: self.assoc_resolutions,\n-            type_of_expr: expr_types,\n-            type_of_pat: pat_types,\n-            diagnostics: self.diagnostics,\n-        }\n+        result\n     }\n \n     fn write_expr_ty(&mut self, expr: ExprId, ty: Ty) {\n-        self.type_of_expr.insert(expr, ty);\n+        self.result.type_of_expr.insert(expr, ty);\n     }\n \n     fn write_method_resolution(&mut self, expr: ExprId, func: Function) {\n-        self.method_resolutions.insert(expr, func);\n+        self.result.method_resolutions.insert(expr, func);\n     }\n \n     fn write_field_resolution(&mut self, expr: ExprId, field: StructField) {\n-        self.field_resolutions.insert(expr, field);\n+        self.result.field_resolutions.insert(expr, field);\n     }\n \n     fn write_variant_resolution(&mut self, expr: ExprId, variant: VariantDef) {\n-        self.variant_resolutions.insert(expr, variant);\n+        self.result.variant_resolutions.insert(expr, variant);\n     }\n \n     fn write_assoc_resolution(&mut self, id: ExprOrPatId, item: ImplItem) {\n-        self.assoc_resolutions.insert(id, item);\n+        self.result.assoc_resolutions.insert(id, item);\n     }\n \n     fn write_pat_ty(&mut self, pat: PatId, ty: Ty) {\n-        self.type_of_pat.insert(pat, ty);\n+        self.result.type_of_pat.insert(pat, ty);\n+    }\n+\n+    fn push_diagnostic(&mut self, diagnostic: InferenceDiagnostic) {\n+        self.result.diagnostics.push(diagnostic);\n     }\n \n     fn make_ty(&mut self, type_ref: &TypeRef) -> Ty {\n@@ -345,7 +328,7 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n             let in_env = InEnvironment::new(self.trait_env.clone(), obligation.clone());\n             let canonicalized = self.canonicalizer().canonicalize_obligation(in_env);\n             let solution =\n-                self.db.solve(self.resolver.krate().unwrap(), canonicalized.value.clone());\n+                self.db.trait_solve(self.resolver.krate().unwrap(), canonicalized.value.clone());\n \n             match solution {\n                 Some(Solution::Unique(substs)) => {\n@@ -565,7 +548,7 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n                 Some(ty)\n             }\n             Resolution::LocalBinding(pat) => {\n-                let ty = self.type_of_pat.get(pat)?.clone();\n+                let ty = self.result.type_of_pat.get(pat)?.clone();\n                 let ty = self.resolve_ty_as_possible(&mut vec![], ty);\n                 Some(ty)\n             }\n@@ -1090,7 +1073,7 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n                         .and_then(|it| match it.field(self.db, &field.name) {\n                             Some(field) => Some(field),\n                             None => {\n-                                self.diagnostics.push(InferenceDiagnostic::NoSuchField {\n+                                self.push_diagnostic(InferenceDiagnostic::NoSuchField {\n                                     expr: tgt_expr,\n                                     field: field_idx,\n                                 });"}, {"sha": "894ba06955a0ea9b8299a82793a084e53d88e8ba", "filename": "crates/ra_hir/src/ty/lower.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8de56ec43e44ee227617de27ba8eddc328a90f5d/crates%2Fra_hir%2Fsrc%2Fty%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8de56ec43e44ee227617de27ba8eddc328a90f5d/crates%2Fra_hir%2Fsrc%2Fty%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Flower.rs?ref=8de56ec43e44ee227617de27ba8eddc328a90f5d", "patch": "@@ -317,7 +317,10 @@ pub(crate) fn type_for_field(db: &impl HirDatabase, field: StructField) -> Ty {\n     Ty::from_hir(db, &resolver, type_ref)\n }\n \n-pub(crate) fn trait_env(db: &impl HirDatabase, resolver: &Resolver) -> Arc<super::Environment> {\n+pub(crate) fn trait_env(\n+    db: &impl HirDatabase,\n+    resolver: &Resolver,\n+) -> Arc<super::TraitEnvironment> {\n     let predicates = resolver\n         .where_predicates_in_scope()\n         .map(|pred| {\n@@ -326,7 +329,7 @@ pub(crate) fn trait_env(db: &impl HirDatabase, resolver: &Resolver) -> Arc<super\n         })\n         .collect::<Vec<_>>();\n \n-    Arc::new(super::Environment { predicates })\n+    Arc::new(super::TraitEnvironment { predicates })\n }\n \n /// Resolve the where clause(s) of an item with generics."}, {"sha": "d421bf9efeeb6a74ab7d029ecefb9d55c0627866", "filename": "crates/ra_hir/src/ty/method_resolution.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8de56ec43e44ee227617de27ba8eddc328a90f5d/crates%2Fra_hir%2Fsrc%2Fty%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8de56ec43e44ee227617de27ba8eddc328a90f5d/crates%2Fra_hir%2Fsrc%2Fty%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Fmethod_resolution.rs?ref=8de56ec43e44ee227617de27ba8eddc328a90f5d", "patch": "@@ -7,7 +7,7 @@ use std::sync::Arc;\n use arrayvec::ArrayVec;\n use rustc_hash::FxHashMap;\n \n-use super::{autoderef, lower, Canonical, Environment, InEnvironment, TraitRef};\n+use super::{autoderef, lower, Canonical, InEnvironment, TraitEnvironment, TraitRef};\n use crate::{\n     generics::HasGenericParams,\n     impl_block::{ImplBlock, ImplId, ImplItem},\n@@ -214,7 +214,7 @@ fn iterate_trait_method_candidates<T>(\n                 if name.map_or(true, |name| data.name() == name) && data.has_self_param() {\n                     if !known_implemented {\n                         let goal = generic_implements_goal(db, env.clone(), t, ty.clone());\n-                        if db.solve(krate, goal).is_none() {\n+                        if db.trait_solve(krate, goal).is_none() {\n                             continue 'traits;\n                         }\n                     }\n@@ -283,7 +283,7 @@ impl Ty {\n /// for all other parameters, to query Chalk with it.\n fn generic_implements_goal(\n     db: &impl HirDatabase,\n-    env: Arc<Environment>,\n+    env: Arc<TraitEnvironment>,\n     trait_: Trait,\n     self_ty: Canonical<Ty>,\n ) -> Canonical<InEnvironment<super::Obligation>> {"}, {"sha": "0769e6e179c35d0b0563fb7b31698bc1aa7aaefc", "filename": "crates/ra_hir/src/ty/traits.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8de56ec43e44ee227617de27ba8eddc328a90f5d/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8de56ec43e44ee227617de27ba8eddc328a90f5d/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs?ref=8de56ec43e44ee227617de27ba8eddc328a90f5d", "patch": "@@ -27,7 +27,7 @@ struct ChalkContext<'a, DB> {\n     krate: Crate,\n }\n \n-pub(crate) fn solver_query(_db: &impl HirDatabase, _krate: Crate) -> Arc<Mutex<Solver>> {\n+pub(crate) fn trait_solver_query(_db: &impl HirDatabase, _krate: Crate) -> Arc<Mutex<Solver>> {\n     // krate parameter is just so we cache a unique solver per crate\n     let solver_choice = chalk_solve::SolverChoice::SLG { max_size: CHALK_SOLVER_MAX_SIZE };\n     debug!(\"Creating new solver for crate {:?}\", _krate);\n@@ -60,9 +60,9 @@ fn solve(\n     goal: &chalk_ir::UCanonical<chalk_ir::InEnvironment<chalk_ir::Goal>>,\n ) -> Option<chalk_solve::Solution> {\n     let context = ChalkContext { db, krate };\n-    let solver = db.solver(krate);\n+    let solver = db.trait_solver(krate);\n     debug!(\"solve goal: {:?}\", goal);\n-    let solution = solver.lock().solve_with_fuel(&context, goal, Some(1000));\n+    let solution = solver.lock().solve(&context, goal);\n     debug!(\"solve({:?}) => {:?}\", goal, solution);\n     solution\n }\n@@ -73,19 +73,19 @@ fn solve(\n /// ```\n /// we assume that `T: Default`.\n #[derive(Clone, Debug, PartialEq, Eq, Hash)]\n-pub struct Environment {\n+pub struct TraitEnvironment {\n     pub predicates: Vec<GenericPredicate>,\n }\n \n /// Something (usually a goal), along with an environment.\n #[derive(Clone, Debug, PartialEq, Eq, Hash)]\n pub struct InEnvironment<T> {\n-    pub environment: Arc<Environment>,\n+    pub environment: Arc<TraitEnvironment>,\n     pub value: T,\n }\n \n impl<T> InEnvironment<T> {\n-    pub fn new(environment: Arc<Environment>, value: T) -> InEnvironment<T> {\n+    pub fn new(environment: Arc<TraitEnvironment>, value: T) -> InEnvironment<T> {\n         InEnvironment { environment, value }\n     }\n }\n@@ -117,12 +117,12 @@ pub struct ProjectionPredicate {\n }\n \n /// Solve a trait goal using Chalk.\n-pub(crate) fn solve_query(\n+pub(crate) fn trait_solve_query(\n     db: &impl HirDatabase,\n     krate: Crate,\n     trait_ref: Canonical<InEnvironment<Obligation>>,\n ) -> Option<Solution> {\n-    let _p = profile(\"solve_query\");\n+    let _p = profile(\"trait_solve_query\");\n     let canonical = trait_ref.to_chalk(db).cast();\n     // We currently don't deal with universes (I think / hope they're not yet\n     // relevant for our use cases?)"}, {"sha": "9e7ae07247aedbe08f269103eebbf72650a95564", "filename": "crates/ra_hir/src/ty/traits/chalk.rs", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8de56ec43e44ee227617de27ba8eddc328a90f5d/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits%2Fchalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8de56ec43e44ee227617de27ba8eddc328a90f5d/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits%2Fchalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits%2Fchalk.rs?ref=8de56ec43e44ee227617de27ba8eddc328a90f5d", "patch": "@@ -266,7 +266,7 @@ where\n     }\n }\n \n-impl ToChalk for Arc<super::Environment> {\n+impl ToChalk for Arc<super::TraitEnvironment> {\n     type Chalk = Arc<chalk_ir::Environment>;\n \n     fn to_chalk(self, db: &impl HirDatabase) -> Arc<chalk_ir::Environment> {\n@@ -276,11 +276,6 @@ impl ToChalk for Arc<super::Environment> {\n                 // for env, we just ignore errors\n                 continue;\n             }\n-            if let GenericPredicate::Implemented(trait_ref) = pred {\n-                if blacklisted_trait(db, trait_ref.trait_) {\n-                    continue;\n-                }\n-            }\n             clauses.push(pred.clone().to_chalk(db).cast());\n         }\n         chalk_ir::Environment::new().add_clauses(clauses)\n@@ -289,7 +284,7 @@ impl ToChalk for Arc<super::Environment> {\n     fn from_chalk(\n         _db: &impl HirDatabase,\n         _env: Arc<chalk_ir::Environment>,\n-    ) -> Arc<super::Environment> {\n+    ) -> Arc<super::TraitEnvironment> {\n         unimplemented!()\n     }\n }\n@@ -322,10 +317,10 @@ fn make_binders<T>(value: T, num_vars: usize) -> chalk_ir::Binders<T> {\n     }\n }\n \n-fn blacklisted_trait(db: &impl HirDatabase, trait_: Trait) -> bool {\n+fn is_non_enumerable_trait(db: &impl HirDatabase, trait_: Trait) -> bool {\n     let name = trait_.name(db).unwrap_or_else(crate::Name::missing).to_string();\n     match &*name {\n-        \"Send\" | \"Sync\" | \"Sized\" | \"Fn\" | \"FnMut\" | \"FnOnce\" => true,\n+        \"Sized\" => true,\n         _ => false,\n     }\n }\n@@ -343,11 +338,6 @@ fn convert_where_clauses(\n             // anyway), otherwise Chalk can easily get into slow situations\n             return vec![pred.clone().subst(substs).to_chalk(db)];\n         }\n-        if let GenericPredicate::Implemented(trait_ref) = pred {\n-            if blacklisted_trait(db, trait_ref.trait_) {\n-                continue;\n-            }\n-        }\n         result.push(pred.clone().subst(substs).to_chalk(db));\n     }\n     result\n@@ -375,10 +365,6 @@ where\n             return Vec::new();\n         }\n         let trait_: Trait = from_chalk(self.db, trait_id);\n-        let blacklisted = blacklisted_trait(self.db, trait_);\n-        if blacklisted {\n-            return Vec::new();\n-        }\n         let result: Vec<_> = self\n             .db\n             .impls_for_trait(self.krate, trait_)\n@@ -460,6 +446,7 @@ pub(crate) fn trait_datum_query(\n             associated_ty_ids: Vec::new(),\n             where_clauses: Vec::new(),\n             flags: chalk_rust_ir::TraitFlags {\n+                non_enumerable: false,\n                 auto: false,\n                 marker: false,\n                 upstream: true,\n@@ -476,6 +463,7 @@ pub(crate) fn trait_datum_query(\n     let flags = chalk_rust_ir::TraitFlags {\n         auto: trait_.is_auto(db),\n         upstream: trait_.module(db).krate(db) != Some(krate),\n+        non_enumerable: is_non_enumerable_trait(db, trait_),\n         // FIXME set these flags correctly\n         marker: false,\n         fundamental: false,"}, {"sha": "147d2b21d3985e9369ff57b2c167d466867650fc", "filename": "crates/ra_ide_api/src/change.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8de56ec43e44ee227617de27ba8eddc328a90f5d/crates%2Fra_ide_api%2Fsrc%2Fchange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8de56ec43e44ee227617de27ba8eddc328a90f5d/crates%2Fra_ide_api%2Fsrc%2Fchange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fchange.rs?ref=8de56ec43e44ee227617de27ba8eddc328a90f5d", "patch": "@@ -302,7 +302,7 @@ impl RootDatabase {\n             hir::db::TraitDatumQuery\n             hir::db::StructDatumQuery\n             hir::db::ImplDatumQuery\n-            hir::db::SolveQuery\n+            hir::db::TraitSolveQuery\n         ];\n         acc.sort_by_key(|it| std::cmp::Reverse(it.1));\n         acc"}]}