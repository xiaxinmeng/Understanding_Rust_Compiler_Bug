{"sha": "4555737152c0f68df5596b16d6e996d19caf2a6a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1NTU3MzcxNTJjMGY2OGRmNTU5NmIxNmQ2ZTk5NmQxOWNhZjJhNmE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-01-26T14:11:03Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-01-26T14:11:03Z"}, "message": "Split symbol name and signature calculation", "tree": {"sha": "a08328f4fa22a3e0885023b4223c2b06a0382cd5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a08328f4fa22a3e0885023b4223c2b06a0382cd5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4555737152c0f68df5596b16d6e996d19caf2a6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4555737152c0f68df5596b16d6e996d19caf2a6a", "html_url": "https://github.com/rust-lang/rust/commit/4555737152c0f68df5596b16d6e996d19caf2a6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4555737152c0f68df5596b16d6e996d19caf2a6a/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b58d8c187936567d92ab45be8a34be087071e05", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b58d8c187936567d92ab45be8a34be087071e05", "html_url": "https://github.com/rust-lang/rust/commit/2b58d8c187936567d92ab45be8a34be087071e05"}], "stats": {"total": 34, "additions": 16, "deletions": 18}, "files": [{"sha": "bc2111726d25448fa9430c43d7572c91f7577d99", "filename": "src/abi/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4555737152c0f68df5596b16d6e996d19caf2a6a/src%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4555737152c0f68df5596b16d6e996d19caf2a6a/src%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fmod.rs?ref=4555737152c0f68df5596b16d6e996d19caf2a6a", "patch": "@@ -179,12 +179,12 @@ fn clif_sig_from_fn_sig<'tcx>(\n     }\n }\n \n-pub(crate) fn get_function_name_and_sig<'tcx>(\n+pub(crate) fn get_function_sig<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     triple: &target_lexicon::Triple,\n     inst: Instance<'tcx>,\n     support_vararg: bool,\n-) -> (String, Signature) {\n+) -> Signature {\n     assert!(!inst.substs.needs_infer());\n     let fn_sig = tcx\n         .normalize_erasing_late_bound_regions(ParamEnv::reveal_all(), fn_sig_for_fn_abi(tcx, inst));\n@@ -194,14 +194,13 @@ pub(crate) fn get_function_name_and_sig<'tcx>(\n             \"Variadic function definitions are not yet supported\",\n         );\n     }\n-    let sig = clif_sig_from_fn_sig(\n+    clif_sig_from_fn_sig(\n         tcx,\n         triple,\n         fn_sig,\n         false,\n         inst.def.requires_caller_location(tcx),\n-    );\n-    (tcx.symbol_name(inst).name.to_string(), sig)\n+    )\n }\n \n /// Instance must be monomorphized\n@@ -210,7 +209,8 @@ pub(crate) fn import_function<'tcx>(\n     module: &mut impl Module,\n     inst: Instance<'tcx>,\n ) -> FuncId {\n-    let (name, sig) = get_function_name_and_sig(tcx, module.isa().triple(), inst, true);\n+    let name = tcx.symbol_name(inst).name.to_string();\n+    let sig = get_function_sig(tcx, module.isa().triple(), inst, true);\n     module\n         .declare_function(&name, Linkage::Import, &sig)\n         .unwrap()"}, {"sha": "1fafc1215975ef28cc998695b9d38f5376ff0e96", "filename": "src/base.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4555737152c0f68df5596b16d6e996d19caf2a6a/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4555737152c0f68df5596b16d6e996d19caf2a6a/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=4555737152c0f68df5596b16d6e996d19caf2a6a", "patch": "@@ -19,7 +19,8 @@ pub(crate) fn codegen_fn<'tcx>(\n     let mir = tcx.instance_mir(instance.def);\n \n     // Declare function\n-    let (name, sig) = get_function_name_and_sig(tcx, cx.module.isa().triple(), instance, false);\n+    let name = tcx.symbol_name(instance).name.to_string();\n+    let sig = get_function_sig(tcx, cx.module.isa().triple(), instance, false);\n     let func_id = cx.module.declare_function(&name, linkage, &sig).unwrap();\n \n     cx.cached_context.clear();"}, {"sha": "6a8792592770724aea7b1c1b94da0c71b85274ec", "filename": "src/driver/jit.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4555737152c0f68df5596b16d6e996d19caf2a6a/src%2Fdriver%2Fjit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4555737152c0f68df5596b16d6e996d19caf2a6a/src%2Fdriver%2Fjit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fjit.rs?ref=4555737152c0f68df5596b16d6e996d19caf2a6a", "patch": "@@ -156,12 +156,8 @@ extern \"C\" fn __clif_jit_fn(instance_ptr: *const Instance<'static>) -> *const u8\n             let jit_module = jit_module.as_mut().unwrap();\n             let mut cx = crate::CodegenCx::new(tcx, jit_module, false, false);\n \n-            let (name, sig) = crate::abi::get_function_name_and_sig(\n-                tcx,\n-                cx.module.isa().triple(),\n-                instance,\n-                true,\n-            );\n+            let name = tcx.symbol_name(instance).name.to_string();\n+            let sig = crate::abi::get_function_sig(tcx, cx.module.isa().triple(), instance, true);\n             let func_id = cx\n                 .module\n                 .declare_function(&name, Linkage::Export, &sig)\n@@ -246,8 +242,8 @@ pub(super) fn codegen_shim<'tcx>(cx: &mut CodegenCx<'tcx, impl Module>, inst: In\n \n     let pointer_type = cx.module.target_config().pointer_type();\n \n-    let (name, sig) =\n-        crate::abi::get_function_name_and_sig(tcx, cx.module.isa().triple(), inst, true);\n+    let name = tcx.symbol_name(inst).name.to_string();\n+    let sig = crate::abi::get_function_sig(tcx, cx.module.isa().triple(), inst, true);\n     let func_id = cx\n         .module\n         .declare_function(&name, Linkage::Export, &sig)"}, {"sha": "e462f34a04f99cf77aa4915e9d973628fdfc6f7e", "filename": "src/driver/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4555737152c0f68df5596b16d6e996d19caf2a6a/src%2Fdriver%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4555737152c0f68df5596b16d6e996d19caf2a6a/src%2Fdriver%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fmod.rs?ref=4555737152c0f68df5596b16d6e996d19caf2a6a", "patch": "@@ -50,7 +50,8 @@ fn predefine_mono_items<'tcx>(\n         for &(mono_item, (linkage, visibility)) in mono_items {\n             match mono_item {\n                 MonoItem::Fn(instance) => {\n-                    let (name, sig) = get_function_name_and_sig(\n+                    let name = cx.tcx.symbol_name(instance).name.to_string();\n+                    let sig= get_function_sig(\n                         cx.tcx,\n                         cx.module.isa().triple(),\n                         instance,"}, {"sha": "7900abb32a3fcfa6064a9b9673857faf3cd263b9", "filename": "src/main_shim.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4555737152c0f68df5596b16d6e996d19caf2a6a/src%2Fmain_shim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4555737152c0f68df5596b16d6e996d19caf2a6a/src%2Fmain_shim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain_shim.rs?ref=4555737152c0f68df5596b16d6e996d19caf2a6a", "patch": "@@ -69,8 +69,8 @@ pub(crate) fn maybe_create_entry_wrapper(\n \n         let instance = Instance::mono(tcx, rust_main_def_id).polymorphize(tcx);\n \n-        let (main_name, main_sig) =\n-            get_function_name_and_sig(tcx, m.isa().triple(), instance, false);\n+        let main_name = tcx.symbol_name(instance).name.to_string();\n+        let main_sig = get_function_sig(tcx, m.isa().triple(), instance, false);\n         let main_func_id = m\n             .declare_function(&main_name, Linkage::Import, &main_sig)\n             .unwrap();"}]}