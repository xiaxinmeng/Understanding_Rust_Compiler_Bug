{"sha": "f835b13812e505830370f5dde863d4ff9cabe2a6", "node_id": "C_kwDOAAsO6NoAKGY4MzViMTM4MTJlNTA1ODMwMzcwZjVkZGU4NjNkNGZmOWNhYmUyYTY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-01T15:10:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-01T15:10:24Z"}, "message": "Rollup merge of #111038 - tmiasko:untainted-promoteds, r=compiler-errors\n\nLeave promoteds untainted by errors when borrowck fails\n\nPreviously, when borrowck failed it would taint all promoteds within the MIR body. An attempt to evaluated the promoteds would subsequently fail with spurious \"note: erroneous constant used\". For example:\n\n```console\n...\nnote: erroneous constant used\n --> tests/ui/borrowck/tainted-promoteds.rs:7:9\n  |\n7 |     a = &0 * &1 * &2 * &3;\n  |         ^^\n\nnote: erroneous constant used\n --> tests/ui/borrowck/tainted-promoteds.rs:7:14\n  |\n7 |     a = &0 * &1 * &2 * &3;\n  |              ^^\n\nnote: erroneous constant used\n --> tests/ui/borrowck/tainted-promoteds.rs:7:19\n  |\n7 |     a = &0 * &1 * &2 * &3;\n  |                   ^^\n\nnote: erroneous constant used\n --> tests/ui/borrowck/tainted-promoteds.rs:7:24\n  |\n7 |     a = &0 * &1 * &2 * &3;\n  |                        ^^\n```\n\nBorrowck failure doesn't indicate that there is anything wrong with promoteds. Leave them untainted.\n\nFixes #110856.", "tree": {"sha": "6684287fa82beb666a153d7a9e78dd5cb69a133a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6684287fa82beb666a153d7a9e78dd5cb69a133a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f835b13812e505830370f5dde863d4ff9cabe2a6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkT9ZgCRBK7hj4Ov3rIwAAC7MIAJ8wpy51FU7qBSKf7no3RAuF\nMd9K6lmBnd2itz2u51nh9OjDJlw/RLS2A3FyA9ldeebHI4Uo7KE/I/nBTdwHjJ17\nALWi+6o3ULmxH9IL/XDAFYFmUIIHOMg891K0A899sFf9jOqkTRYUF6QbTs+80vVg\njjGzKAYH8t19sjppd/peHnDOfmtBMnUMqISZRDrvYvTvglaKtwgTKucMfCd/w6nj\nj2fAErAHa1NYOsoKuCE6Wn6i/D/E3nQjKl6T46NF5zzp4v5/gf80tsesReF8FYjO\nc17jkfZzieSN7aqKjkSC3ll4orcz3JGhedRQpAukSgA2+6aBQmcfH7QW1q2ug2k=\n=D6eg\n-----END PGP SIGNATURE-----\n", "payload": "tree 6684287fa82beb666a153d7a9e78dd5cb69a133a\nparent 8a9e696f43aee4b184be2e1e01fa1f6048d7aba1\nparent c678acd3a275c9acd34c2ecfa9b7b06e2ca7874f\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1682953824 +0200\ncommitter GitHub <noreply@github.com> 1682953824 +0200\n\nRollup merge of #111038 - tmiasko:untainted-promoteds, r=compiler-errors\n\nLeave promoteds untainted by errors when borrowck fails\n\nPreviously, when borrowck failed it would taint all promoteds within the MIR body. An attempt to evaluated the promoteds would subsequently fail with spurious \"note: erroneous constant used\". For example:\n\n```console\n...\nnote: erroneous constant used\n --> tests/ui/borrowck/tainted-promoteds.rs:7:9\n  |\n7 |     a = &0 * &1 * &2 * &3;\n  |         ^^\n\nnote: erroneous constant used\n --> tests/ui/borrowck/tainted-promoteds.rs:7:14\n  |\n7 |     a = &0 * &1 * &2 * &3;\n  |              ^^\n\nnote: erroneous constant used\n --> tests/ui/borrowck/tainted-promoteds.rs:7:19\n  |\n7 |     a = &0 * &1 * &2 * &3;\n  |                   ^^\n\nnote: erroneous constant used\n --> tests/ui/borrowck/tainted-promoteds.rs:7:24\n  |\n7 |     a = &0 * &1 * &2 * &3;\n  |                        ^^\n```\n\nBorrowck failure doesn't indicate that there is anything wrong with promoteds. Leave them untainted.\n\nFixes #110856.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f835b13812e505830370f5dde863d4ff9cabe2a6", "html_url": "https://github.com/rust-lang/rust/commit/f835b13812e505830370f5dde863d4ff9cabe2a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f835b13812e505830370f5dde863d4ff9cabe2a6/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a9e696f43aee4b184be2e1e01fa1f6048d7aba1", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a9e696f43aee4b184be2e1e01fa1f6048d7aba1", "html_url": "https://github.com/rust-lang/rust/commit/8a9e696f43aee4b184be2e1e01fa1f6048d7aba1"}, {"sha": "c678acd3a275c9acd34c2ecfa9b7b06e2ca7874f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c678acd3a275c9acd34c2ecfa9b7b06e2ca7874f", "html_url": "https://github.com/rust-lang/rust/commit/c678acd3a275c9acd34c2ecfa9b7b06e2ca7874f"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "8d9a22ea30ddfdcfe7f72a96f542fc2ad139f27c", "filename": "compiler/rustc_mir_transform/src/lib.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f835b13812e505830370f5dde863d4ff9cabe2a6/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f835b13812e505830370f5dde863d4ff9cabe2a6/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs?ref=f835b13812e505830370f5dde863d4ff9cabe2a6", "patch": "@@ -616,13 +616,10 @@ fn promoted_mir(tcx: TyCtxt<'_>, def: LocalDefId) -> &IndexVec<Promoted, Body<'_\n         return tcx.arena.alloc(IndexVec::new());\n     }\n \n-    let tainted_by_errors = tcx.mir_borrowck(def).tainted_by_errors;\n+    tcx.ensure_with_value().mir_borrowck(def);\n     let mut promoted = tcx.mir_promoted(def).1.steal();\n \n     for body in &mut promoted {\n-        if let Some(error_reported) = tainted_by_errors {\n-            body.tainted_by_errors = Some(error_reported);\n-        }\n         run_analysis_to_runtime_passes(tcx, body);\n     }\n "}, {"sha": "2b6f0ddbd6c7fc793fddd28bb4d34410313d8ed6", "filename": "tests/ui/borrowck/tainted-promoteds.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f835b13812e505830370f5dde863d4ff9cabe2a6/tests%2Fui%2Fborrowck%2Ftainted-promoteds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f835b13812e505830370f5dde863d4ff9cabe2a6/tests%2Fui%2Fborrowck%2Ftainted-promoteds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Ftainted-promoteds.rs?ref=f835b13812e505830370f5dde863d4ff9cabe2a6", "patch": "@@ -0,0 +1,12 @@\n+// Regression test for issue #110856, where a borrowck error for a MIR tainted\n+// all promoteds within. This in turn generated a spurious \"erroneous constant\n+// used\" note when trying to evaluate a promoted.\n+\n+pub fn f() -> u32 {\n+    let a = 0;\n+    a = &0 * &1 * &2 * &3;\n+    //~^ ERROR: cannot assign twice to immutable variable\n+    a\n+}\n+\n+fn main() {}"}, {"sha": "b276ea9acebe909dc6dd1651d3241fe290f3e0b9", "filename": "tests/ui/borrowck/tainted-promoteds.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f835b13812e505830370f5dde863d4ff9cabe2a6/tests%2Fui%2Fborrowck%2Ftainted-promoteds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f835b13812e505830370f5dde863d4ff9cabe2a6/tests%2Fui%2Fborrowck%2Ftainted-promoteds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Ftainted-promoteds.stderr?ref=f835b13812e505830370f5dde863d4ff9cabe2a6", "patch": "@@ -0,0 +1,14 @@\n+error[E0384]: cannot assign twice to immutable variable `a`\n+  --> $DIR/tainted-promoteds.rs:7:5\n+   |\n+LL |     let a = 0;\n+   |         -\n+   |         |\n+   |         first assignment to `a`\n+   |         help: consider making this binding mutable: `mut a`\n+LL |     a = &0 * &1 * &2 * &3;\n+   |     ^^^^^^^^^^^^^^^^^^^^^ cannot assign twice to immutable variable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0384`."}]}