{"sha": "726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c", "node_id": "C_kwDOAAsO6NoAKDcyNmJiZmM4ZjBkNmViNDMxZGZhNjIwYzFjOGZjMzg0ODAyMGNkM2M", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-31T11:32:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-31T11:32:15Z"}, "message": "Auto merge of #106302 - compiler-errors:terr-coerce-w-infer, r=estebank\n\nSuppress errors due to TypeError not coercing with inference variables\n\nFixes #75331\nFixes #68507\nFixes #82323\n\ncc `@estebank`", "tree": {"sha": "88ff46e773fd681ef081a5bc7b673883c5816f69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88ff46e773fd681ef081a5bc7b673883c5816f69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c", "html_url": "https://github.com/rust-lang/rust/commit/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96c1f338bb5ba7bae2285fc48f249aa5015e542a", "url": "https://api.github.com/repos/rust-lang/rust/commits/96c1f338bb5ba7bae2285fc48f249aa5015e542a", "html_url": "https://github.com/rust-lang/rust/commit/96c1f338bb5ba7bae2285fc48f249aa5015e542a"}, {"sha": "f6b45e399e5c75429e66b11760e97d56fc010091", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6b45e399e5c75429e66b11760e97d56fc010091", "html_url": "https://github.com/rust-lang/rust/commit/f6b45e399e5c75429e66b11760e97d56fc010091"}], "stats": {"total": 107, "additions": 35, "deletions": 72}, "files": [{"sha": "3fb14e31ea116582a19da7981a7acc039e50abd6", "filename": "compiler/rustc_hir_typeck/src/coercion.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c/compiler%2Frustc_hir_typeck%2Fsrc%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c/compiler%2Frustc_hir_typeck%2Fsrc%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fcoercion.rs?ref=726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c", "patch": "@@ -171,6 +171,10 @@ impl<'f, 'tcx> Coerce<'f, 'tcx> {\n \n         // Just ignore error types.\n         if a.references_error() || b.references_error() {\n+            // Best-effort try to unify these types -- we're already on the error path,\n+            // so this will have the side-effect of making sure we have no ambiguities\n+            // due to `[type error]` and `_` not coercing together.\n+            let _ = self.commit_if_ok(|_| self.at(&self.cause, self.param_env).eq(a, b));\n             return success(vec![], self.fcx.tcx.ty_error(), vec![]);\n         }\n "}, {"sha": "fdec072b8a864cb5ed72195e4e429ca9449bf6b6", "filename": "src/test/ui/expr/malformed_closure/ruby_style_closure.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c/src%2Ftest%2Fui%2Fexpr%2Fmalformed_closure%2Fruby_style_closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c/src%2Ftest%2Fui%2Fexpr%2Fmalformed_closure%2Fruby_style_closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexpr%2Fmalformed_closure%2Fruby_style_closure.rs?ref=726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c", "patch": "@@ -8,7 +8,6 @@\n \n fn main() {\n     let p = Some(45).and_then({\n-        //~^ expected a `FnOnce<({integer},)>` closure, found `Option<_>`\n         |x| println!(\"doubling {}\", x);\n         Some(x * 2)\n         //~^ ERROR: cannot find value `x` in this scope"}, {"sha": "e8b34121b5f8d1f80fb731b5fa441b95828523b0", "filename": "src/test/ui/expr/malformed_closure/ruby_style_closure.stderr", "status": "modified", "additions": 3, "deletions": 23, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c/src%2Ftest%2Fui%2Fexpr%2Fmalformed_closure%2Fruby_style_closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c/src%2Ftest%2Fui%2Fexpr%2Fmalformed_closure%2Fruby_style_closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexpr%2Fmalformed_closure%2Fruby_style_closure.stderr?ref=726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c", "patch": "@@ -1,29 +1,9 @@\n error[E0425]: cannot find value `x` in this scope\n-  --> $DIR/ruby_style_closure.rs:13:14\n+  --> $DIR/ruby_style_closure.rs:12:14\n    |\n LL |         Some(x * 2)\n    |              ^ not found in this scope\n \n-error[E0277]: expected a `FnOnce<({integer},)>` closure, found `Option<_>`\n-  --> $DIR/ruby_style_closure.rs:10:31\n-   |\n-LL |       let p = Some(45).and_then({\n-   |  ______________________--------_^\n-   | |                      |\n-   | |                      required by a bound introduced by this call\n-LL | |\n-LL | |         |x| println!(\"doubling {}\", x);\n-LL | |         Some(x * 2)\n-   | |         ----------- this tail expression is of type `Option<_>`\n-LL | |\n-LL | |     });\n-   | |_____^ expected an `FnOnce<({integer},)>` closure, found `Option<_>`\n-   |\n-   = help: the trait `FnOnce<({integer},)>` is not implemented for `Option<_>`\n-note: required by a bound in `Option::<T>::and_then`\n-  --> $SRC_DIR/core/src/option.rs:LL:COL\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-Some errors have detailed explanations: E0277, E0425.\n-For more information about an error, try `rustc --explain E0277`.\n+For more information about this error, try `rustc --explain E0425`."}, {"sha": "612fe1b841918f81a5fd92b3bc512f4cecf877c2", "filename": "src/test/ui/functions-closures/fn-help-with-err.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c/src%2Ftest%2Fui%2Ffunctions-closures%2Ffn-help-with-err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c/src%2Ftest%2Fui%2Ffunctions-closures%2Ffn-help-with-err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffunctions-closures%2Ffn-help-with-err.rs?ref=726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c", "patch": "@@ -4,7 +4,6 @@ struct Foo;\n \n trait Bar {\n     //~^ NOTE `Bar` defines an item `bar`, perhaps you need to implement it\n-    //~| NOTE `Bar` defines an item `bar`, perhaps you need to implement it\n     fn bar(&self) {}\n }\n \n@@ -15,9 +14,6 @@ fn main() {\n     //~^ ERROR cannot find value `oops` in this scope\n     //~| NOTE not found\n     arc.bar();\n-    //~^ ERROR no method named `bar`\n-    //~| NOTE method not found\n-    //~| HELP items from traits can only be used if the trait is implemented and in scope\n \n     let arc2 = std::sync::Arc::new(|| Foo);\n     arc2.bar();"}, {"sha": "83a2b1f58f9c58ddc1305d48a213f8ca43439b98", "filename": "src/test/ui/functions-closures/fn-help-with-err.stderr", "status": "modified", "additions": 5, "deletions": 18, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c/src%2Ftest%2Fui%2Ffunctions-closures%2Ffn-help-with-err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c/src%2Ftest%2Fui%2Ffunctions-closures%2Ffn-help-with-err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffunctions-closures%2Ffn-help-with-err.stderr?ref=726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c", "patch": "@@ -1,27 +1,14 @@\n error[E0425]: cannot find value `oops` in this scope\n-  --> $DIR/fn-help-with-err.rs:14:35\n+  --> $DIR/fn-help-with-err.rs:13:35\n    |\n LL |     let arc = std::sync::Arc::new(oops);\n    |                                   ^^^^ not found in this scope\n \n-error[E0599]: no method named `bar` found for struct `Arc<_>` in the current scope\n-  --> $DIR/fn-help-with-err.rs:17:9\n-   |\n-LL |     arc.bar();\n-   |         ^^^ method not found in `Arc<_>`\n-   |\n-   = help: items from traits can only be used if the trait is implemented and in scope\n-note: `Bar` defines an item `bar`, perhaps you need to implement it\n-  --> $DIR/fn-help-with-err.rs:5:1\n-   |\n-LL | trait Bar {\n-   | ^^^^^^^^^\n-\n-error[E0599]: no method named `bar` found for struct `Arc<[closure@fn-help-with-err.rs:22:36]>` in the current scope\n-  --> $DIR/fn-help-with-err.rs:23:10\n+error[E0599]: no method named `bar` found for struct `Arc<[closure@fn-help-with-err.rs:18:36]>` in the current scope\n+  --> $DIR/fn-help-with-err.rs:19:10\n    |\n LL |     arc2.bar();\n-   |          ^^^ method not found in `Arc<[closure@fn-help-with-err.rs:22:36]>`\n+   |          ^^^ method not found in `Arc<[closure@fn-help-with-err.rs:18:36]>`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n note: `Bar` defines an item `bar`, perhaps you need to implement it\n@@ -34,7 +21,7 @@ help: use parentheses to call this closure\n LL |     arc2().bar();\n    |         ++\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n Some errors have detailed explanations: E0425, E0599.\n For more information about an error, try `rustc --explain E0425`."}, {"sha": "63f4898f4306b354aa3dfa0dc849311c4dda9b3d", "filename": "src/test/ui/impl-trait/issue-72911.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-72911.rs", "raw_url": "https://github.com/rust-lang/rust/raw/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-72911.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-72911.rs?ref=726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c", "patch": "@@ -5,7 +5,6 @@ pub struct Lint {}\n impl Lint {}\n \n pub fn gather_all() -> impl Iterator<Item = Lint> {\n-    //~^ ERROR type annotations needed\n     lint_files().flat_map(|f| gather_from_file(&f))\n }\n "}, {"sha": "0e86561aa27798f341d2be350e965f2f849fed04", "filename": "src/test/ui/impl-trait/issue-72911.stderr", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-72911.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-72911.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-72911.stderr?ref=726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c", "patch": "@@ -1,22 +1,15 @@\n error[E0433]: failed to resolve: use of undeclared crate or module `foo`\n-  --> $DIR/issue-72911.rs:12:33\n+  --> $DIR/issue-72911.rs:11:33\n    |\n LL | fn gather_from_file(dir_entry: &foo::MissingItem) -> impl Iterator<Item = Lint> {\n    |                                 ^^^ use of undeclared crate or module `foo`\n \n error[E0433]: failed to resolve: use of undeclared crate or module `foo`\n-  --> $DIR/issue-72911.rs:17:41\n+  --> $DIR/issue-72911.rs:16:41\n    |\n LL | fn lint_files() -> impl Iterator<Item = foo::MissingItem> {\n    |                                         ^^^ use of undeclared crate or module `foo`\n \n-error[E0282]: type annotations needed\n-  --> $DIR/issue-72911.rs:7:24\n-   |\n-LL | pub fn gather_all() -> impl Iterator<Item = Lint> {\n-   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type\n-\n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n-Some errors have detailed explanations: E0282, E0433.\n-For more information about an error, try `rustc --explain E0282`.\n+For more information about this error, try `rustc --explain E0433`."}, {"sha": "fbecaf9b971ffd0f5d18e0018da70943daabde85", "filename": "src/test/ui/methods/issues/issue-90315.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c/src%2Ftest%2Fui%2Fmethods%2Fissues%2Fissue-90315.rs", "raw_url": "https://github.com/rust-lang/rust/raw/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c/src%2Ftest%2Fui%2Fmethods%2Fissues%2Fissue-90315.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fissues%2Fissue-90315.rs?ref=726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c", "patch": "@@ -69,8 +69,7 @@ fn main() {\n     //~^ ERROR `usize` is not an iterator\n \n     let _res: i32 = ..6.take(2).sum();\n-    //~^ can't call method `take` on ambiguous numeric type\n-    //~| ERROR mismatched types [E0308]\n+    //~^ ERROR can't call method `take` on ambiguous numeric type\n     //~| HELP you must specify a concrete type for this numeric value\n     // Won't suggest because `RangeTo` dest not implemented `take`\n }"}, {"sha": "4d3c086ff6e8c48747b7a52b115c01c0241b6f02", "filename": "src/test/ui/methods/issues/issue-90315.stderr", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c/src%2Ftest%2Fui%2Fmethods%2Fissues%2Fissue-90315.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c/src%2Ftest%2Fui%2Fmethods%2Fissues%2Fissue-90315.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fissues%2Fissue-90315.stderr?ref=726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c", "patch": "@@ -184,18 +184,7 @@ help: you must specify a concrete type for this numeric value, like `i32`\n LL |     let _res: i32 = ..6_i32.take(2).sum();\n    |                       ~~~~~\n \n-error[E0308]: mismatched types\n-  --> $DIR/issue-90315.rs:71:21\n-   |\n-LL |     let _res: i32 = ..6.take(2).sum();\n-   |               ---   ^^^^^^^^^^^^^^^^^ expected `i32`, found struct `RangeTo`\n-   |               |\n-   |               expected due to this\n-   |\n-   = note: expected type `i32`\n-            found struct `RangeTo<_>`\n-\n-error: aborting due to 19 previous errors\n+error: aborting due to 18 previous errors\n \n Some errors have detailed explanations: E0308, E0599, E0689.\n For more information about an error, try `rustc --explain E0308`."}, {"sha": "1cd192b783cdb3b794d56f7ca52bf81e02ac5068", "filename": "src/test/ui/typeck/nonexistent-field-not-ambiguous.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c/src%2Ftest%2Fui%2Ftypeck%2Fnonexistent-field-not-ambiguous.rs", "raw_url": "https://github.com/rust-lang/rust/raw/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c/src%2Ftest%2Fui%2Ftypeck%2Fnonexistent-field-not-ambiguous.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fnonexistent-field-not-ambiguous.rs?ref=726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c", "patch": "@@ -0,0 +1,8 @@\n+struct Foo {\n+    val: MissingType,\n+    //~^ ERROR cannot find type `MissingType` in this scope\n+}\n+\n+fn main() {\n+    Foo { val: Default::default() };\n+}"}, {"sha": "76a2a5f99f2b6622b38e44be2ae5d0b3b2bdf267", "filename": "src/test/ui/typeck/nonexistent-field-not-ambiguous.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c/src%2Ftest%2Fui%2Ftypeck%2Fnonexistent-field-not-ambiguous.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c/src%2Ftest%2Fui%2Ftypeck%2Fnonexistent-field-not-ambiguous.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fnonexistent-field-not-ambiguous.stderr?ref=726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c", "patch": "@@ -0,0 +1,9 @@\n+error[E0412]: cannot find type `MissingType` in this scope\n+  --> $DIR/nonexistent-field-not-ambiguous.rs:2:10\n+   |\n+LL |     val: MissingType,\n+   |          ^^^^^^^^^^^ not found in this scope\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0412`."}]}