{"sha": "8cad20de55bdff675314a691f469790c307a2efe", "node_id": "C_kwDOAAsO6NoAKDhjYWQyMGRlNTViZGZmNjc1MzE0YTY5MWY0Njk3OTBjMzA3YTJlZmU", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2022-09-18T14:05:27Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2022-09-18T14:12:01Z"}, "message": "remove items that are already mentioned in the compatibility notes", "tree": {"sha": "62a6ae7e205cfb88272c366ac321a10efaace6e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62a6ae7e205cfb88272c366ac321a10efaace6e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cad20de55bdff675314a691f469790c307a2efe", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAmMnJzEACgkQPgar6Auq\n8Zxtrg//SVSN6MwTuFhOBBeOxIdSXtS0cK4Gva0ePbN40fAmPpme0h3SDHAyiLkB\nqli0HCRXFw2PH340nVxg6x5CbxH3tQkgB/tdexVxIcn4esH3Eo3N/u5cD/a2cvoP\nQp/kW49rM0iCj/kQ9F+atvu08sgHLUuP08M7cHvFD4oYPPvsCny4iMDDo+1Pq9AM\nodD+PfXZFTSkU0NoS9Dog2/vN/KVxaboL6kTaxa2Cg1KHNKIY8HFBTC5fIR6OG8b\nkWj7S76sbYmLJMfp9dQE7Gz6NRLaccsfjBCnlqW6El60+iKh4s/GjG2H3XEyOIUp\nEOXMdOYDAOceXV5Oy4aSDnXTU6OXrFzviaXxCyrdYkiBhqukb4whBC96NRhhYXlT\n1aXExakxmTjYWU5YxmIjkoLBhUURoFqpfUkXt0hkTNrMO/vCaHplU1vejLdDXNwD\nLsjD+F8NzZmp6HTlWcTnBY0IZwuaZzMSSg9xF5ia4vLiTkeJmsSSFuSsnimzYp8t\ni+/ZIb1qcCLe/4JS24qW2bCw7ymWhEeNsE5HP7dgbWzmxg4WjC2RUrBeiIwwUtcN\nyRD5F5dNeizVSa8CCkNw4zSjr336lpc3NifI2xpjh05D3ZOPxx2mQPvcvvqKZenW\nWcuSURqaZyEYAduCPPtLFrZ+mYGkm9Vp9vx0y8wUO2YU+AxOpPw=\n=4sRK\n-----END PGP SIGNATURE-----", "payload": "tree 62a6ae7e205cfb88272c366ac321a10efaace6e7\nparent 68f6c4f4eb6077fb70022a912075af8b76429603\nauthor Pietro Albini <pietro@pietroalbini.org> 1663509927 +0200\ncommitter Pietro Albini <pietro@pietroalbini.org> 1663510321 +0200\n\nremove items that are already mentioned in the compatibility notes\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cad20de55bdff675314a691f469790c307a2efe", "html_url": "https://github.com/rust-lang/rust/commit/8cad20de55bdff675314a691f469790c307a2efe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cad20de55bdff675314a691f469790c307a2efe/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68f6c4f4eb6077fb70022a912075af8b76429603", "url": "https://api.github.com/repos/rust-lang/rust/commits/68f6c4f4eb6077fb70022a912075af8b76429603", "html_url": "https://github.com/rust-lang/rust/commit/68f6c4f4eb6077fb70022a912075af8b76429603"}], "stats": {"total": 6, "additions": 0, "deletions": 6}, "files": [{"sha": "91a427b5e93ec2191954209bb65b40a1e7715bce", "filename": "RELEASES.md", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8cad20de55bdff675314a691f469790c307a2efe/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/8cad20de55bdff675314a691f469790c307a2efe/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=8cad20de55bdff675314a691f469790c307a2efe", "patch": "@@ -3,15 +3,12 @@ Version 1.64.0 (2022-09-22)\n \n Language\n --------\n-- [make `const_err` show up in future breakage reports](https://github.com/rust-lang/rust/pull/97743/)\n - [Unions with mutable references or tuples of allowed types are now allowed](https://github.com/rust-lang/rust/pull/97995/)\n - It is now considered valid to deallocate memory pointed to by a shared reference `&T` [if every byte in `T` is inside an `UnsafeCell`](https://github.com/rust-lang/rust/pull/98017/)\n - Unused tuple struct fields are now warned against in an allow-by-default lint, [`unused_tuple_struct_fields`](https://github.com/rust-lang/rust/pull/95977/), similar to the existing warning for unused struct fields. This lint will become warn-by-default in the future.\n \n Compiler\n --------\n-- The minimum required versions for all `-linux-gnu` targets are now at least kernel 3.2 and glibc 2.17, for targets that previously supported older versions: [Increase the minimum linux-gnu versions](https://github.com/rust-lang/rust/pull/95026/)\n-- [Keep unstable target features for asm feature checking](https://github.com/rust-lang/rust/pull/99155/)\n - [Add Nintendo Switch as tier 3 target](https://github.com/rust-lang/rust/pull/88991/)\n   - Refer to Rust's [platform support page][platform-support-doc] for more\n     information on Rust's tiered platform support.\n@@ -25,16 +22,13 @@ Compiler\n \n Libraries\n ---------\n-- [Implement network primitives with ideal Rust layout, not C system layout](https://github.com/rust-lang/rust/pull/78802/)\n - [Remove restrictions on compare-exchange memory ordering.](https://github.com/rust-lang/rust/pull/98383/)\n - You can now `write!` or `writeln!` into an `OsString`: [Implement `fmt::Write` for `OsString`](https://github.com/rust-lang/rust/pull/97915/)\n - [Enforce that layout size fits in isize in Layout](https://github.com/rust-lang/rust/pull/95295/)\n - [Make RwLockReadGuard covariant](https://github.com/rust-lang/rust/pull/96820/)\n - [Implement `FusedIterator` for `std::net::[Into]Incoming`](https://github.com/rust-lang/rust/pull/97300/)\n - [`impl<T: AsRawFd> AsRawFd for {Arc,Box}<T>`](https://github.com/rust-lang/rust/pull/97437/)\n - [`ptr::copy` and `ptr::swap` are doing untyped copies](https://github.com/rust-lang/rust/pull/97712/)\n-- [Add assertion that `transmute_copy`'s U is not larger than `T`](https://github.com/rust-lang/rust/pull/98839/)\n-- [A soundness bug in `BTreeMap` was fixed](https://github.com/rust-lang/rust/pull/99413/) that allowed data it was borrowing to be dropped before the container.\n - [Add cgroupv1 support to `available_parallelism`](https://github.com/rust-lang/rust/pull/97925/)\n - [Mitigate many incorrect uses of `mem::uninitialized`](https://github.com/rust-lang/rust/pull/99182/)\n "}]}