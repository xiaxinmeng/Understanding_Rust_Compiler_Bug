{"sha": "ff00edb7e1fd669b7a333e0b3842f3751ee6d573", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmMDBlZGI3ZTFmZDY2OWI3YTMzM2UwYjM4NDJmMzc1MWVlNmQ1NzM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-08-03T00:15:11Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-08-03T01:06:33Z"}, "message": "Add target_word_size cfg variable", "tree": {"sha": "651e688c606bc97331c02acdd6799f1e81cce1a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/651e688c606bc97331c02acdd6799f1e81cce1a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff00edb7e1fd669b7a333e0b3842f3751ee6d573", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff00edb7e1fd669b7a333e0b3842f3751ee6d573", "html_url": "https://github.com/rust-lang/rust/commit/ff00edb7e1fd669b7a333e0b3842f3751ee6d573", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff00edb7e1fd669b7a333e0b3842f3751ee6d573/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b14a6aca9f5f62df2ac12ee92d0ca37514908305", "url": "https://api.github.com/repos/rust-lang/rust/commits/b14a6aca9f5f62df2ac12ee92d0ca37514908305", "html_url": "https://github.com/rust-lang/rust/commit/b14a6aca9f5f62df2ac12ee92d0ca37514908305"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "901435d97c5d32a9868e204e47670cea9c7a492c", "filename": "src/rustc/driver/driver.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ff00edb7e1fd669b7a333e0b3842f3751ee6d573/src%2Frustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff00edb7e1fd669b7a333e0b3842f3751ee6d573/src%2Frustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fdriver%2Fdriver.rs?ref=ff00edb7e1fd669b7a333e0b3842f3751ee6d573", "patch": "@@ -44,17 +44,18 @@ fn default_configuration(sess: session, argv0: ~str, input: input) ->\n \n     let mk = attr::mk_name_value_item_str;\n \n-    let arch = alt sess.targ_cfg.arch {\n-      session::arch_x86 { ~\"x86\" }\n-      session::arch_x86_64 { ~\"x86_64\" }\n-      session::arch_arm { ~\"arm\" }\n+    let (arch,wordsz) = alt sess.targ_cfg.arch {\n+      session::arch_x86 { (~\"x86\",~\"32\") }\n+      session::arch_x86_64 { (~\"x86_64\",~\"64\") }\n+      session::arch_arm { (~\"arm\",~\"32\") }\n     };\n \n     return ~[ // Target bindings.\n          attr::mk_word_item(@os::family()),\n          mk(@~\"target_os\", os::sysname()),\n          mk(@~\"target_family\", os::family()),\n          mk(@~\"target_arch\", arch),\n+         mk(@~\"target_word_size\", wordsz),\n          mk(@~\"target_libc\", libc),\n          // Build bindings.\n          mk(@~\"build_compiler\", argv0),"}]}