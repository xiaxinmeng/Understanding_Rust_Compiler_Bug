{"sha": "7216012878f32a343b82fc243c7b692b41104691", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyMTYwMTI4NzhmMzJhMzQzYjgyZmMyNDNjN2I2OTJiNDExMDQ2OTE=", "commit": {"author": {"name": "Remy Rakic", "email": "remy.rakic@gmail.com", "date": "2018-09-12T13:09:28Z"}, "committer": {"name": "Remy Rakic", "email": "remy.rakic@gmail.com", "date": "2018-09-18T12:34:51Z"}, "message": "Inject fake read in binding pattern", "tree": {"sha": "ed8d3e346d555ef1dc16096ff0bbee5016c7c69a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed8d3e346d555ef1dc16096ff0bbee5016c7c69a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7216012878f32a343b82fc243c7b692b41104691", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7216012878f32a343b82fc243c7b692b41104691", "html_url": "https://github.com/rust-lang/rust/commit/7216012878f32a343b82fc243c7b692b41104691", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7216012878f32a343b82fc243c7b692b41104691/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f004cae5360c4a3f365c7f7525b4293559201ce2", "url": "https://api.github.com/repos/rust-lang/rust/commits/f004cae5360c4a3f365c7f7525b4293559201ce2", "html_url": "https://github.com/rust-lang/rust/commit/f004cae5360c4a3f365c7f7525b4293559201ce2"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "6a84658a7a9872d837b80e0382a9e5f51bf95c4b", "filename": "src/librustc_mir/build/matches/mod.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7216012878f32a343b82fc243c7b692b41104691/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7216012878f32a343b82fc243c7b692b41104691/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs?ref=7216012878f32a343b82fc243c7b692b41104691", "patch": "@@ -264,6 +264,19 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n                 let place =\n                     self.storage_live_binding(block, var, irrefutable_pat.span, OutsideGuard);\n                 unpack!(block = self.into(&place, block, initializer));\n+\n+                // Inject a fake read of the newly created binding\n+                // to test the fallout of fixing issue #53695 where NLL\n+                // allows to create variables that are immediately unusable.\n+                let source_info = self.source_info(irrefutable_pat.span);\n+                self.cfg.push(\n+                    block,\n+                    Statement {\n+                        source_info,\n+                        kind: StatementKind::ReadForMatch(place.clone()),\n+                    },\n+                );\n+\n                 self.schedule_drop_for_binding(var, irrefutable_pat.span, OutsideGuard);\n                 block.unit()\n             }"}]}