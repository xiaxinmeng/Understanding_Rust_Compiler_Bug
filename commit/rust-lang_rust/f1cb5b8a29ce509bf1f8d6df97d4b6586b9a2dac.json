{"sha": "f1cb5b8a29ce509bf1f8d6df97d4b6586b9a2dac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxY2I1YjhhMjljZTUwOWJmMWY4ZDZkZjk3ZDRiNjU4NmI5YTJkYWM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-05-09T14:22:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-09T14:22:06Z"}, "message": "Merge #4392\n\n4392: Add From should not move the cursor r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "f17660ae89a8c767d4175cd206c2fd3e86a685c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f17660ae89a8c767d4175cd206c2fd3e86a685c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1cb5b8a29ce509bf1f8d6df97d4b6586b9a2dac", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJetryOCRBK7hj4Ov3rIwAAdHIIAC0J0ELI3ETdJJpXlMFzyP7G\nXYJLtWwDTrVsAmU0AkHE55AQGmPnKkg+OKjt9jlh1tCR5ttucXbC3kMsnYVhTcLx\nqdbJ/wz/16wqtDODZtwbGHf7biMEZS/9pOskaODF+fkD5EvFGTkJp9hce0fbi/p5\nkaJ9eufasV6d1zSTTsNPRCdPoYVJTraq7JBjZMz4SC5uX7kWStTyU1jQJJ/hGQtx\nyiFGwJdsVMG4CkjA5ncyNw6wS6pQlDxVW7+/7yDkNm8/lIZPxB97J1NHZMmhoY4z\nZY6ZtEhMYObdgjtPUo/CC8VvujTMeTIsbcwAXSfmJtNGLdCmEVOWUD01Hq3o+84=\n=mz4r\n-----END PGP SIGNATURE-----\n", "payload": "tree f17660ae89a8c767d4175cd206c2fd3e86a685c5\nparent 77d2eaba1679832f4c00241645712460351eddb4\nparent d9828a57fcbff6c1bcaa9d2b6a54a08d8428a95f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1589034126 +0000\ncommitter GitHub <noreply@github.com> 1589034126 +0000\n\nMerge #4392\n\n4392: Add From should not move the cursor r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1cb5b8a29ce509bf1f8d6df97d4b6586b9a2dac", "html_url": "https://github.com/rust-lang/rust/commit/f1cb5b8a29ce509bf1f8d6df97d4b6586b9a2dac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1cb5b8a29ce509bf1f8d6df97d4b6586b9a2dac/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77d2eaba1679832f4c00241645712460351eddb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/77d2eaba1679832f4c00241645712460351eddb4", "html_url": "https://github.com/rust-lang/rust/commit/77d2eaba1679832f4c00241645712460351eddb4"}, {"sha": "d9828a57fcbff6c1bcaa9d2b6a54a08d8428a95f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9828a57fcbff6c1bcaa9d2b6a54a08d8428a95f", "html_url": "https://github.com/rust-lang/rust/commit/d9828a57fcbff6c1bcaa9d2b6a54a08d8428a95f"}], "stats": {"total": 25, "additions": 11, "deletions": 14}, "files": [{"sha": "6a49b7dbd189e6d98e94c5737a7138d9d504e5a8", "filename": "crates/ra_assists/src/handlers/add_from_impl_for_enum.rs", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/f1cb5b8a29ce509bf1f8d6df97d4b6586b9a2dac/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_from_impl_for_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1cb5b8a29ce509bf1f8d6df97d4b6586b9a2dac/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_from_impl_for_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_from_impl_for_enum.rs?ref=f1cb5b8a29ce509bf1f8d6df97d4b6586b9a2dac", "patch": "@@ -1,8 +1,5 @@\n use ra_ide_db::RootDatabase;\n-use ra_syntax::{\n-    ast::{self, AstNode, NameOwner},\n-    TextSize,\n-};\n+use ra_syntax::ast::{self, AstNode, NameOwner};\n use stdx::format_to;\n use test_utils::tested_by;\n \n@@ -69,7 +66,6 @@ impl From<{0}> for {1} {{\n                 variant_name\n             );\n             edit.insert(start_offset, buf);\n-            edit.set_cursor(start_offset + TextSize::of(\"\\n\\n\"));\n         },\n     )\n }\n@@ -97,19 +93,20 @@ fn existing_from_impl(\n \n #[cfg(test)]\n mod tests {\n-    use super::*;\n+    use test_utils::covers;\n \n     use crate::tests::{check_assist, check_assist_not_applicable};\n-    use test_utils::covers;\n+\n+    use super::*;\n \n     #[test]\n     fn test_add_from_impl_for_enum() {\n         check_assist(\n             add_from_impl_for_enum,\n             \"enum A { <|>One(u32) }\",\n-            r#\"enum A { One(u32) }\n+            r#\"enum A { <|>One(u32) }\n \n-<|>impl From<u32> for A {\n+impl From<u32> for A {\n     fn from(v: u32) -> Self {\n         A::One(v)\n     }\n@@ -121,10 +118,10 @@ mod tests {\n     fn test_add_from_impl_for_enum_complicated_path() {\n         check_assist(\n             add_from_impl_for_enum,\n-            \"enum A { <|>One(foo::bar::baz::Boo) }\",\n-            r#\"enum A { One(foo::bar::baz::Boo) }\n+            r#\"enum A { <|>One(foo::bar::baz::Boo) }\"#,\n+            r#\"enum A { <|>One(foo::bar::baz::Boo) }\n \n-<|>impl From<foo::bar::baz::Boo> for A {\n+impl From<foo::bar::baz::Boo> for A {\n     fn from(v: foo::bar::baz::Boo) -> Self {\n         A::One(v)\n     }\n@@ -184,9 +181,9 @@ impl From<String> for A {\n pub trait From<T> {\n     fn from(T) -> Self;\n }\"#,\n-            r#\"enum A { One(u32), Two(String), }\n+            r#\"enum A { <|>One(u32), Two(String), }\n \n-<|>impl From<u32> for A {\n+impl From<u32> for A {\n     fn from(v: u32) -> Self {\n         A::One(v)\n     }"}]}