{"sha": "735b542146eb729bbef90bdb50841ccc99ab46c5", "node_id": "C_kwDOAAsO6NoAKDczNWI1NDIxNDZlYjcyOWJiZWY5MGJkYjUwODQxY2NjOTlhYjQ2YzU", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-01-05T20:45:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-05T20:45:27Z"}, "message": "Merge #11201\n\n11201: fix: Fix completions not considering ancestor items for attribute search r=Veykril a=Veykril\n\nTurns out we never filled the `CompletionContext` with the attribute expansion of attributed impls and traits when typing in the assoc items, as we were only considering the assoc item to have an attribute to expand.\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "f416f54f471854bb4eb9d8742d6663a8af6a4e10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f416f54f471854bb4eb9d8742d6663a8af6a4e10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/735b542146eb729bbef90bdb50841ccc99ab46c5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh1gNnCRBK7hj4Ov3rIwAAqWkIACsXywVFiZ23fOihJFd+D0F4\nwEonyxB/lN6Ewi4oU0sHGxUFhqAwhX09nk/1NKBOm37U3E5K2OVx5OBXUydhd1Pr\nc+A8UkJzwNF+AZy0JwsE65wP/L/fKzsYNvDdbfdReG8OZLC2XxMpFdhCC5xMKgAV\nHVH4WHBOsCPYpQeLlyqZAbIzAMelXRPRNeJ/ctPRwW/kNS1Je/G8GIjmueXs4eRO\nWIgLnhsKcNiRriz6ft/jPRINFMu4WwMsOQurEKAoSSRdKxMyhV2OkMjTPQ5j2mfM\nvU8Jev2n8XvW0kJM8Bz2guS3B2y9uQDK27GZCDYi0lxLIrISbDpJRuH8/+Gr0fA=\n=wQaf\n-----END PGP SIGNATURE-----\n", "payload": "tree f416f54f471854bb4eb9d8742d6663a8af6a4e10\nparent 149981fbfca9ef2eb3f7636ae99ca97a6b96cb02\nparent bd913270794798eacd162596fc63473d710f2b65\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1641415527 +0000\ncommitter GitHub <noreply@github.com> 1641415527 +0000\n\nMerge #11201\n\n11201: fix: Fix completions not considering ancestor items for attribute search r=Veykril a=Veykril\n\nTurns out we never filled the `CompletionContext` with the attribute expansion of attributed impls and traits when typing in the assoc items, as we were only considering the assoc item to have an attribute to expand.\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/735b542146eb729bbef90bdb50841ccc99ab46c5", "html_url": "https://github.com/rust-lang/rust/commit/735b542146eb729bbef90bdb50841ccc99ab46c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/735b542146eb729bbef90bdb50841ccc99ab46c5/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "149981fbfca9ef2eb3f7636ae99ca97a6b96cb02", "url": "https://api.github.com/repos/rust-lang/rust/commits/149981fbfca9ef2eb3f7636ae99ca97a6b96cb02", "html_url": "https://github.com/rust-lang/rust/commit/149981fbfca9ef2eb3f7636ae99ca97a6b96cb02"}, {"sha": "bd913270794798eacd162596fc63473d710f2b65", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd913270794798eacd162596fc63473d710f2b65", "html_url": "https://github.com/rust-lang/rust/commit/bd913270794798eacd162596fc63473d710f2b65"}], "stats": {"total": 67, "additions": 40, "deletions": 27}, "files": [{"sha": "2374d689cbb5582077a2e4c9cdd192ed605ef26a", "filename": "crates/ide_completion/src/context.rs", "status": "modified", "additions": 40, "deletions": 27, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/735b542146eb729bbef90bdb50841ccc99ab46c5/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/735b542146eb729bbef90bdb50841ccc99ab46c5/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcontext.rs?ref=735b542146eb729bbef90bdb50841ccc99ab46c5", "patch": "@@ -1,5 +1,7 @@\n //! See `CompletionContext` structure.\n \n+use std::iter;\n+\n use base_db::SourceDatabaseExt;\n use hir::{Local, Name, ScopeDef, Semantics, SemanticsScope, Type, TypeInfo};\n use ide_db::{\n@@ -431,12 +433,17 @@ impl<'a> CompletionContext<'a> {\n         mut fake_ident_token: SyntaxToken,\n     ) {\n         let _p = profile::span(\"CompletionContext::expand_and_fill\");\n-        loop {\n-            // Expand attributes\n-            if let (Some(actual_item), Some(item_with_fake_ident)) = (\n-                find_node_at_offset::<ast::Item>(&original_file, offset),\n-                find_node_at_offset::<ast::Item>(&speculative_file, offset),\n-            ) {\n+        'expansion: loop {\n+            let parent_item =\n+                |item: &ast::Item| item.syntax().ancestors().skip(1).find_map(ast::Item::cast);\n+            let ancestor_items = iter::successors(\n+                Option::zip(\n+                    find_node_at_offset::<ast::Item>(&original_file, offset),\n+                    find_node_at_offset::<ast::Item>(&speculative_file, offset),\n+                ),\n+                |(a, b)| parent_item(a).zip(parent_item(b)),\n+            );\n+            for (actual_item, item_with_fake_ident) in ancestor_items {\n                 match (\n                     self.sema.expand_attr_macro(&actual_item),\n                     self.sema.speculative_expand_attr_macro(\n@@ -445,19 +452,22 @@ impl<'a> CompletionContext<'a> {\n                         fake_ident_token.clone(),\n                     ),\n                 ) {\n-                    (Some(actual_expansion), Some(speculative_expansion)) => {\n-                        let new_offset = speculative_expansion.1.text_range().start();\n+                    // maybe parent items have attributes\n+                    (None, None) => (),\n+                    // successful expansions\n+                    (Some(actual_expansion), Some((fake_expansion, fake_mapped_token))) => {\n+                        let new_offset = fake_mapped_token.text_range().start();\n                         if new_offset > actual_expansion.text_range().end() {\n-                            break;\n+                            break 'expansion;\n                         }\n                         original_file = actual_expansion;\n-                        speculative_file = speculative_expansion.0;\n-                        fake_ident_token = speculative_expansion.1;\n+                        speculative_file = fake_expansion;\n+                        fake_ident_token = fake_mapped_token;\n                         offset = new_offset;\n-                        continue;\n+                        continue 'expansion;\n                     }\n-                    (None, None) => (),\n-                    _ => break,\n+                    // exactly one expansion failed, inconsistent state so stop expanding completely\n+                    _ => break 'expansion,\n                 }\n             }\n \n@@ -477,28 +487,31 @@ impl<'a> CompletionContext<'a> {\n                     None => break,\n                 };\n \n-                if let (Some(actual_expansion), Some(speculative_expansion)) = (\n+                match (\n                     self.sema.expand(&actual_macro_call),\n                     self.sema.speculative_expand(\n                         &actual_macro_call,\n                         &speculative_args,\n-                        fake_ident_token,\n+                        fake_ident_token.clone(),\n                     ),\n                 ) {\n-                    let new_offset = speculative_expansion.1.text_range().start();\n-                    if new_offset > actual_expansion.text_range().end() {\n-                        break;\n+                    // successful expansions\n+                    (Some(actual_expansion), Some((fake_expansion, fake_mapped_token))) => {\n+                        let new_offset = fake_mapped_token.text_range().start();\n+                        if new_offset > actual_expansion.text_range().end() {\n+                            break;\n+                        }\n+                        original_file = actual_expansion;\n+                        speculative_file = fake_expansion;\n+                        fake_ident_token = fake_mapped_token;\n+                        offset = new_offset;\n+                        continue;\n                     }\n-                    original_file = actual_expansion;\n-                    speculative_file = speculative_expansion.0;\n-                    fake_ident_token = speculative_expansion.1;\n-                    offset = new_offset;\n-                } else {\n-                    break;\n+                    _ => break,\n                 }\n-            } else {\n-                break;\n             }\n+\n+            break;\n         }\n \n         self.fill(&original_file, speculative_file, offset);"}]}