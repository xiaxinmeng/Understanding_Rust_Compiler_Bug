{"sha": "759c04a00b46d4a86d71ab69b072b956dfacabf9", "node_id": "C_kwDOAAsO6NoAKDc1OWMwNGEwMGI0NmQ0YTg2ZDcxYWI2OWIwNzJiOTU2ZGZhY2FiZjk", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-18T14:58:47Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-09-21T11:31:55Z"}, "message": "Some tracing instrumentation cleanups", "tree": {"sha": "870fccb4ecfda51c3342f69172f86e3660b50631", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/870fccb4ecfda51c3342f69172f86e3660b50631"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/759c04a00b46d4a86d71ab69b072b956dfacabf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/759c04a00b46d4a86d71ab69b072b956dfacabf9", "html_url": "https://github.com/rust-lang/rust/commit/759c04a00b46d4a86d71ab69b072b956dfacabf9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/759c04a00b46d4a86d71ab69b072b956dfacabf9/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d69d23a25d6375ff8083bb94cc5b5fbc1f25415", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d69d23a25d6375ff8083bb94cc5b5fbc1f25415", "html_url": "https://github.com/rust-lang/rust/commit/3d69d23a25d6375ff8083bb94cc5b5fbc1f25415"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "bd7b8a3004f53c2365839138748a03c5920863c4", "filename": "compiler/rustc_infer/src/infer/outlives/verify.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/759c04a00b46d4a86d71ab69b072b956dfacabf9/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Fverify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/759c04a00b46d4a86d71ab69b072b956dfacabf9/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Fverify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Fverify.rs?ref=759c04a00b46d4a86d71ab69b072b956dfacabf9", "patch": "@@ -124,13 +124,12 @@ impl<'cx, 'tcx> VerifyBoundCx<'cx, 'tcx> {\n         self.declared_projection_bounds_from_trait(projection_ty)\n     }\n \n-    pub fn projection_bound(\n+    #[instrument(level = \"debug\", skip(self, visited))]\n+    fn projection_bound(\n         &self,\n         projection_ty: ty::ProjectionTy<'tcx>,\n         visited: &mut SsoHashSet<GenericArg<'tcx>>,\n     ) -> VerifyBound<'tcx> {\n-        debug!(\"projection_bound(projection_ty={:?})\", projection_ty);\n-\n         let projection_ty_as_ty =\n             self.tcx.mk_projection(projection_ty.item_def_id, projection_ty.substs);\n "}]}