{"sha": "3f0222565d8a4f8e60c5f175305d29dc9af0b3a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmMDIyMjU2NWQ4YTRmOGU2MGM1ZjE3NTMwNWQyOWRjOWFmMGIzYTU=", "commit": {"author": {"name": "hi-rustin", "email": "rustin.liu@gmail.com", "date": "2021-05-15T03:29:33Z"}, "committer": {"name": "hi-rustin", "email": "rustin.liu@gmail.com", "date": "2021-05-15T03:29:33Z"}, "message": "Generate the impl block via generate_trait_impl_text", "tree": {"sha": "fa0d24a7dc1b28bdd869c724b9bc4dda84d08b19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa0d24a7dc1b28bdd869c724b9bc4dda84d08b19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f0222565d8a4f8e60c5f175305d29dc9af0b3a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f0222565d8a4f8e60c5f175305d29dc9af0b3a5", "html_url": "https://github.com/rust-lang/rust/commit/3f0222565d8a4f8e60c5f175305d29dc9af0b3a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f0222565d8a4f8e60c5f175305d29dc9af0b3a5/comments", "author": {"login": "hi-rustin", "id": 29879298, "node_id": "MDQ6VXNlcjI5ODc5Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/29879298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hi-rustin", "html_url": "https://github.com/hi-rustin", "followers_url": "https://api.github.com/users/hi-rustin/followers", "following_url": "https://api.github.com/users/hi-rustin/following{/other_user}", "gists_url": "https://api.github.com/users/hi-rustin/gists{/gist_id}", "starred_url": "https://api.github.com/users/hi-rustin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hi-rustin/subscriptions", "organizations_url": "https://api.github.com/users/hi-rustin/orgs", "repos_url": "https://api.github.com/users/hi-rustin/repos", "events_url": "https://api.github.com/users/hi-rustin/events{/privacy}", "received_events_url": "https://api.github.com/users/hi-rustin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hi-rustin", "id": 29879298, "node_id": "MDQ6VXNlcjI5ODc5Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/29879298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hi-rustin", "html_url": "https://github.com/hi-rustin", "followers_url": "https://api.github.com/users/hi-rustin/followers", "following_url": "https://api.github.com/users/hi-rustin/following{/other_user}", "gists_url": "https://api.github.com/users/hi-rustin/gists{/gist_id}", "starred_url": "https://api.github.com/users/hi-rustin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hi-rustin/subscriptions", "organizations_url": "https://api.github.com/users/hi-rustin/orgs", "repos_url": "https://api.github.com/users/hi-rustin/repos", "events_url": "https://api.github.com/users/hi-rustin/events{/privacy}", "received_events_url": "https://api.github.com/users/hi-rustin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87ef340c19ae5ac73fc9b1cd37909d9d8ad53d09", "url": "https://api.github.com/repos/rust-lang/rust/commits/87ef340c19ae5ac73fc9b1cd37909d9d8ad53d09", "html_url": "https://github.com/rust-lang/rust/commit/87ef340c19ae5ac73fc9b1cd37909d9d8ad53d09"}], "stats": {"total": 47, "additions": 45, "deletions": 2}, "files": [{"sha": "374611fbf2465d6da949c61b363c5ebba010334c", "filename": "crates/ide_assists/src/handlers/generate_default_from_new.rs", "status": "modified", "additions": 45, "deletions": 2, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/3f0222565d8a4f8e60c5f175305d29dc9af0b3a5/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_default_from_new.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f0222565d8a4f8e60c5f175305d29dc9af0b3a5/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_default_from_new.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_default_from_new.rs?ref=3f0222565d8a4f8e60c5f175305d29dc9af0b3a5", "patch": "@@ -7,6 +7,7 @@ use syntax::{\n     ast::{self, Impl, NameOwner},\n     AstNode,\n };\n+use crate::utils::generate_trait_impl_text;\n \n // Assist: generate_default_from_new\n //\n@@ -59,13 +60,21 @@ pub(crate) fn generate_default_from_new(acc: &mut Assists, ctx: &AssistContext)\n     }\n \n     let insert_location = impl_.syntax().text_range();\n-\n+    let code = match ast::Struct::cast(impl_.self_ty().unwrap().syntax().clone()){\n+        None => {\n+            default_fn_node_for_new(impl_)\n+        }\n+        Some(strukt) => {\n+            generate_trait_impl_text(&ast::Adt::Struct(strukt),\"core:default:Default\",\"    fn default() -> Self {{\n+        Self::new()\n+    }}\")\n+        }\n+    };\n     acc.add(\n         AssistId(\"generate_default_from_new\", crate::AssistKind::Generate),\n         \"Generate a Default impl from a new fn\",\n         insert_location,\n         move |builder| {\n-            let code = default_fn_node_for_new(impl_);\n             builder.insert(insert_location.end(), code);\n         },\n     )\n@@ -175,6 +184,40 @@ impl Default for Test {\n         );\n     }\n \n+    #[test]\n+    fn generate_default3() {\n+        check_pass(\n+            r#\"\n+pub struct Foo<T> {\n+    _bar: *mut T,\n+}\n+\n+impl<T> Foo<T> {\n+    pub fn ne$0w() -> Self {\n+        todo!()\n+    }\n+}\n+\"#,\n+            r#\"\n+pub struct Foo<T> {\n+    _bar: *mut T,\n+}\n+\n+impl<T> Foo<T> {\n+    pub fn new() -> Self {\n+        todo!()\n+    }\n+}\n+\n+impl<T> Default for Foo<T> {\n+    fn default() -> Self {\n+        Self::new()\n+    }\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn new_function_with_parameters() {\n         cov_mark::check!(new_function_with_parameters);"}]}