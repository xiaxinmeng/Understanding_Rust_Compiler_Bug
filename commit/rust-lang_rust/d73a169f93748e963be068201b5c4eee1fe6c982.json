{"sha": "d73a169f93748e963be068201b5c4eee1fe6c982", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3M2ExNjlmOTM3NDhlOTYzYmUwNjgyMDFiNWM0ZWVlMWZlNmM5ODI=", "commit": {"author": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2021-08-26T18:39:13Z"}, "committer": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2021-08-26T18:39:13Z"}, "message": "Fix sparse intersect bug, add more sparse / dense tests", "tree": {"sha": "58df22292b932928ea7b41a1d15b48dc157b460c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58df22292b932928ea7b41a1d15b48dc157b460c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d73a169f93748e963be068201b5c4eee1fe6c982", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d73a169f93748e963be068201b5c4eee1fe6c982", "html_url": "https://github.com/rust-lang/rust/commit/d73a169f93748e963be068201b5c4eee1fe6c982", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d73a169f93748e963be068201b5c4eee1fe6c982/comments", "author": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c1603e0b50245e4aedca47d9a46904ac7dd5255", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c1603e0b50245e4aedca47d9a46904ac7dd5255", "html_url": "https://github.com/rust-lang/rust/commit/1c1603e0b50245e4aedca47d9a46904ac7dd5255"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "989d56b0528e0e61fd7d87dabdc49f77b320c7bc", "filename": "compiler/rustc_index/src/bit_set.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d73a169f93748e963be068201b5c4eee1fe6c982/compiler%2Frustc_index%2Fsrc%2Fbit_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d73a169f93748e963be068201b5c4eee1fe6c982/compiler%2Frustc_index%2Fsrc%2Fbit_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_index%2Fsrc%2Fbit_set.rs?ref=d73a169f93748e963be068201b5c4eee1fe6c982", "patch": "@@ -272,7 +272,7 @@ fn dense_sparse_intersect<T: Idx>(\n     sparse: &SparseBitSet<T>,\n ) -> (SparseBitSet<T>, bool) {\n     let mut sparse_copy = sparse.clone();\n-    sparse_intersect(&mut sparse_copy, |el| !dense.contains(*el));\n+    sparse_intersect(&mut sparse_copy, |el| dense.contains(*el));\n     let n = sparse_copy.len();\n     (sparse_copy, n != dense.count())\n }"}, {"sha": "6f633f3b9cbbe52fe8297f5add5ed8733d9a76d2", "filename": "compiler/rustc_index/src/bit_set/tests.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d73a169f93748e963be068201b5c4eee1fe6c982/compiler%2Frustc_index%2Fsrc%2Fbit_set%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d73a169f93748e963be068201b5c4eee1fe6c982/compiler%2Frustc_index%2Fsrc%2Fbit_set%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_index%2Fsrc%2Fbit_set%2Ftests.rs?ref=d73a169f93748e963be068201b5c4eee1fe6c982", "patch": "@@ -108,14 +108,25 @@ fn hybrid_bitset() {\n     assert!(!sparse01358.union(&hybrid)); // no change\n     assert!(hybrid.union(&sparse01358));\n     assert!(hybrid.superset(&sparse01358) && sparse01358.superset(&hybrid));\n-    assert!(!dense10.union(&sparse01358));\n     assert!(!dense256.union(&dense10));\n \n+    // dense / sparse where dense superset sparse\n+    assert!(!dense10.clone().union(&sparse01358));\n+    assert!(sparse01358.clone().union(&dense10));\n     assert!(dense10.clone().intersect(&sparse01358));\n     assert!(!sparse01358.clone().intersect(&dense10));\n     assert!(dense10.clone().subtract(&sparse01358));\n     assert!(sparse01358.clone().subtract(&dense10));\n \n+    // dense / sparse where sparse superset dense\n+    let dense038 = sparse038.to_dense();\n+    assert!(!sparse0381.clone().union(&dense038));\n+    assert!(dense038.clone().union(&sparse0381));\n+    assert!(sparse0381.clone().intersect(&dense038));\n+    assert!(!dense038.clone().intersect(&sparse0381));\n+    assert!(sparse0381.clone().subtract(&dense038));\n+    assert!(dense038.clone().subtract(&sparse0381));\n+\n     let mut dense = dense10.clone();\n     assert!(dense.union(&dense256));\n     assert!(dense.superset(&dense256) && dense256.superset(&dense));"}]}