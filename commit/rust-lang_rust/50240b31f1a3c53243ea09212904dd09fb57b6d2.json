{"sha": "50240b31f1a3c53243ea09212904dd09fb57b6d2", "node_id": "C_kwDOAAsO6NoAKDUwMjQwYjMxZjFhM2M1MzI0M2VhMDkyMTI5MDRkZDA5ZmI1N2I2ZDI", "commit": {"author": {"name": "Josh Soref", "email": "2119212+jsoref@users.noreply.github.com", "date": "2023-04-09T23:18:49Z"}, "committer": {"name": "Josh Soref", "email": "2119212+jsoref@users.noreply.github.com", "date": "2023-04-20T19:38:41Z"}, "message": "Spelling tools/compiletest\n\nspelling: exactly\nspelling: synthetic\n\nSigned-off-by: Josh Soref <2119212+jsoref@users.noreply.github.com>", "tree": {"sha": "3e30e5dcd66a6c65b3b13f62614ab5b3a93c8b46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e30e5dcd66a6c65b3b13f62614ab5b3a93c8b46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50240b31f1a3c53243ea09212904dd09fb57b6d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50240b31f1a3c53243ea09212904dd09fb57b6d2", "html_url": "https://github.com/rust-lang/rust/commit/50240b31f1a3c53243ea09212904dd09fb57b6d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50240b31f1a3c53243ea09212904dd09fb57b6d2/comments", "author": {"login": "jsoref", "id": 2119212, "node_id": "MDQ6VXNlcjIxMTkyMTI=", "avatar_url": "https://avatars.githubusercontent.com/u/2119212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsoref", "html_url": "https://github.com/jsoref", "followers_url": "https://api.github.com/users/jsoref/followers", "following_url": "https://api.github.com/users/jsoref/following{/other_user}", "gists_url": "https://api.github.com/users/jsoref/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsoref/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsoref/subscriptions", "organizations_url": "https://api.github.com/users/jsoref/orgs", "repos_url": "https://api.github.com/users/jsoref/repos", "events_url": "https://api.github.com/users/jsoref/events{/privacy}", "received_events_url": "https://api.github.com/users/jsoref/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsoref", "id": 2119212, "node_id": "MDQ6VXNlcjIxMTkyMTI=", "avatar_url": "https://avatars.githubusercontent.com/u/2119212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsoref", "html_url": "https://github.com/jsoref", "followers_url": "https://api.github.com/users/jsoref/followers", "following_url": "https://api.github.com/users/jsoref/following{/other_user}", "gists_url": "https://api.github.com/users/jsoref/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsoref/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsoref/subscriptions", "organizations_url": "https://api.github.com/users/jsoref/orgs", "repos_url": "https://api.github.com/users/jsoref/repos", "events_url": "https://api.github.com/users/jsoref/events{/privacy}", "received_events_url": "https://api.github.com/users/jsoref/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6fb7b9815aea87fb5ced1c683212871699c907c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6fb7b9815aea87fb5ced1c683212871699c907c", "html_url": "https://github.com/rust-lang/rust/commit/c6fb7b9815aea87fb5ced1c683212871699c907c"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "395814e7488bf7a761f7d0d1a8af79a13a4cae67", "filename": "src/etc/installer/pkg/Distribution.xml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50240b31f1a3c53243ea09212904dd09fb57b6d2/src%2Fetc%2Finstaller%2Fpkg%2FDistribution.xml", "raw_url": "https://github.com/rust-lang/rust/raw/50240b31f1a3c53243ea09212904dd09fb57b6d2/src%2Fetc%2Finstaller%2Fpkg%2FDistribution.xml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fpkg%2FDistribution.xml?ref=50240b31f1a3c53243ea09212904dd09fb57b6d2", "patch": "@@ -23,7 +23,7 @@\n     </choices-outline>\n     <!--\n     These 'selected' scripts ensure that install and uninstall can never be selected at\n-    the same time. Exectly how they work is pretty mysterious, tied to the unspecified algorithm\n+    the same time. Exactly how they work is pretty mysterious, tied to the unspecified algorithm\n     the installer uses to traverse the options after one is toggled.\n       -->\n     <choice id=\"install\" visible=\"true\""}, {"sha": "36c7d82b34ac72f188d5d19d13c11c7b3e712c44", "filename": "src/etc/lldb_lookup.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50240b31f1a3c53243ea09212904dd09fb57b6d2/src%2Fetc%2Flldb_lookup.py", "raw_url": "https://github.com/rust-lang/rust/raw/50240b31f1a3c53243ea09212904dd09fb57b6d2/src%2Fetc%2Flldb_lookup.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flldb_lookup.py?ref=50240b31f1a3c53243ea09212904dd09fb57b6d2", "patch": "@@ -115,4 +115,4 @@ def synthetic_lookup(valobj, dict):\n     if rust_type == RustType.STD_REF_CELL:\n         return StdRefSyntheticProvider(valobj, dict, is_cell=True)\n \n-    return DefaultSynthteticProvider(valobj, dict)\n+    return DefaultSyntheticProvider(valobj, dict)"}, {"sha": "4f73746f81707a1b8576b7aa10a0b59811bceb25", "filename": "src/etc/lldb_providers.py", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/50240b31f1a3c53243ea09212904dd09fb57b6d2/src%2Fetc%2Flldb_providers.py", "raw_url": "https://github.com/rust-lang/rust/raw/50240b31f1a3c53243ea09212904dd09fb57b6d2/src%2Fetc%2Flldb_providers.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flldb_providers.py?ref=50240b31f1a3c53243ea09212904dd09fb57b6d2", "patch": "@@ -69,9 +69,9 @@ def unwrap_unique_or_non_null(unique_or_nonnull):\n     return ptr if ptr.TypeIsPointerType() else ptr.GetChildAtIndex(0)\n \n \n-class DefaultSynthteticProvider:\n+class DefaultSyntheticProvider:\n     def __init__(self, valobj, dict):\n-        # type: (SBValue, dict) -> DefaultSynthteticProvider\n+        # type: (SBValue, dict) -> DefaultSyntheticProvider\n         # logger = Logger.Logger()\n         # logger >> \"Default synthetic provider for \" + str(valobj.GetName())\n         self.valobj = valobj"}]}