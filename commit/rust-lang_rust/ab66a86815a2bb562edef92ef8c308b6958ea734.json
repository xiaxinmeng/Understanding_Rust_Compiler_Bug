{"sha": "ab66a86815a2bb562edef92ef8c308b6958ea734", "node_id": "C_kwDOAAsO6NoAKGFiNjZhODY4MTVhMmJiNTYyZWRlZjkyZWY4YzMwOGI2OTU4ZWE3MzQ", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2023-05-09T09:51:36Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2023-05-19T14:16:37Z"}, "message": "Add new `UNIQUE_CFG_CONDITION` lint", "tree": {"sha": "52886d893a0cb62b2c2548bd0ee4cb7f7d1a8caf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52886d893a0cb62b2c2548bd0ee4cb7f7d1a8caf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab66a86815a2bb562edef92ef8c308b6958ea734", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab66a86815a2bb562edef92ef8c308b6958ea734", "html_url": "https://github.com/rust-lang/rust/commit/ab66a86815a2bb562edef92ef8c308b6958ea734", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab66a86815a2bb562edef92ef8c308b6958ea734/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a1dbbaec57440790eb6a457f628a0d295a6b80d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a1dbbaec57440790eb6a457f628a0d295a6b80d", "html_url": "https://github.com/rust-lang/rust/commit/2a1dbbaec57440790eb6a457f628a0d295a6b80d"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "6678002820acef72f14e3ff4280236417aa1f4e3", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/ab66a86815a2bb562edef92ef8c308b6958ea734/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab66a86815a2bb562edef92ef8c308b6958ea734/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=ab66a86815a2bb562edef92ef8c308b6958ea734", "patch": "@@ -338,6 +338,30 @@ declare_clippy_lint! {\n     \"ensures that all `allow` and `expect` attributes have a reason\"\n }\n \n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Checks for `any` and `all` combinators in `cfg` with only one condition.\n+    ///\n+    /// ### Why is this bad?\n+    /// If there is only one condition, no need to wrap it into `any` or `all` combinators.\n+    ///\n+    /// ### Example\n+    /// ```rust\n+    /// #[cfg(any(unix))]\n+    /// pub struct Bar;\n+    /// ```\n+    ///\n+    /// Use instead:\n+    /// ```rust\n+    /// #[cfg(unix)]\n+    /// pub struct Bar;\n+    /// ```\n+    #[clippy::version = \"1.71.0\"]\n+    pub NON_MINIMAL_CFG,\n+    style,\n+    \"ensure that all `cfg(any())` and `cfg(all())` have more than one condition\"\n+}\n+\n declare_lint_pass!(Attributes => [\n     ALLOW_ATTRIBUTES_WITHOUT_REASON,\n     INLINE_ALWAYS,\n@@ -651,6 +675,7 @@ impl_lint_pass!(EarlyAttributes => [\n     MISMATCHED_TARGET_OS,\n     EMPTY_LINE_AFTER_OUTER_ATTR,\n     EMPTY_LINE_AFTER_DOC_COMMENTS,\n+    NON_MINIMAL_CFG,\n ]);\n \n impl EarlyLintPass for EarlyAttributes {\n@@ -661,6 +686,7 @@ impl EarlyLintPass for EarlyAttributes {\n     fn check_attribute(&mut self, cx: &EarlyContext<'_>, attr: &Attribute) {\n         check_deprecated_cfg_attr(cx, attr, &self.msrv);\n         check_mismatched_target_os(cx, attr);\n+        check_minimal_cfg_condition(cx, attr);\n     }\n \n     extract_msrv_attr!(EarlyContext);\n@@ -750,6 +776,40 @@ fn check_deprecated_cfg_attr(cx: &EarlyContext<'_>, attr: &Attribute, msrv: &Msr\n     }\n }\n \n+fn check_nested_cfg(cx: &EarlyContext<'_>, items: &[NestedMetaItem]) {\n+    for item in items.iter() {\n+        if let NestedMetaItem::MetaItem(meta) = item {\n+            if !meta.has_name(sym::any) && !meta.has_name(sym::all) {\n+                continue;\n+            }\n+            if let MetaItemKind::List(list) = &meta.kind {\n+                check_nested_cfg(cx, list);\n+                if list.len() == 1 {\n+                    span_lint_and_then(\n+                        cx,\n+                        NON_MINIMAL_CFG,\n+                        meta.span,\n+                        \"unneeded sub `cfg` when there is only one condition\",\n+                        |diag| {\n+                            if let Some(snippet) = snippet_opt(cx, list[0].span()) {\n+                                diag.span_suggestion(meta.span, \"try\", snippet, Applicability::MaybeIncorrect);\n+                            }\n+                        },\n+                    );\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+fn check_minimal_cfg_condition(cx: &EarlyContext<'_>, attr: &Attribute) {\n+    if attr.has_name(sym::cfg) &&\n+        let Some(items) = attr.meta_item_list()\n+    {\n+        check_nested_cfg(cx, &items);\n+    }\n+}\n+\n fn check_mismatched_target_os(cx: &EarlyContext<'_>, attr: &Attribute) {\n     fn find_os(name: &str) -> Option<&'static str> {\n         UNIX_SYSTEMS"}, {"sha": "aee43edc4780d63265237c4dc8e90d02c66983d3", "filename": "clippy_lints/src/declared_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ab66a86815a2bb562edef92ef8c308b6958ea734/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab66a86815a2bb562edef92ef8c308b6958ea734/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdeclared_lints.rs?ref=ab66a86815a2bb562edef92ef8c308b6958ea734", "patch": "@@ -52,6 +52,7 @@ pub(crate) static LINTS: &[&crate::LintInfo] = &[\n     crate::attrs::EMPTY_LINE_AFTER_OUTER_ATTR_INFO,\n     crate::attrs::INLINE_ALWAYS_INFO,\n     crate::attrs::MISMATCHED_TARGET_OS_INFO,\n+    crate::attrs::NON_MINIMAL_CFG_INFO,\n     crate::attrs::USELESS_ATTRIBUTE_INFO,\n     crate::await_holding_invalid::AWAIT_HOLDING_INVALID_TYPE_INFO,\n     crate::await_holding_invalid::AWAIT_HOLDING_LOCK_INFO,"}]}