{"sha": "197a1f9cfe7839bcff0020c54af3e90c4985174d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5N2ExZjljZmU3ODM5YmNmZjAwMjBjNTRhZjNlOTBjNDk4NTE3NGQ=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-12-23T21:49:32Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-12-23T21:49:32Z"}, "message": "Merge pull request #4243 from erickt/incoming\n\nFix a bug in Result::unwrap_err (and minor cleanup)", "tree": {"sha": "f5be8f8b027d5761a99788de3bc31a6f7bb0393c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5be8f8b027d5761a99788de3bc31a6f7bb0393c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/197a1f9cfe7839bcff0020c54af3e90c4985174d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/197a1f9cfe7839bcff0020c54af3e90c4985174d", "html_url": "https://github.com/rust-lang/rust/commit/197a1f9cfe7839bcff0020c54af3e90c4985174d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/197a1f9cfe7839bcff0020c54af3e90c4985174d/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ec13a90aa026a8b6a4c5fc987816ec7a805b898", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ec13a90aa026a8b6a4c5fc987816ec7a805b898", "html_url": "https://github.com/rust-lang/rust/commit/8ec13a90aa026a8b6a4c5fc987816ec7a805b898"}, {"sha": "beec5193168e7fc71e0e6acded48c4bc3864eb5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/beec5193168e7fc71e0e6acded48c4bc3864eb5a", "html_url": "https://github.com/rust-lang/rust/commit/beec5193168e7fc71e0e6acded48c4bc3864eb5a"}], "stats": {"total": 119, "additions": 40, "deletions": 79}, "files": [{"sha": "e93d186049ecc90e9a9b9cadd58930bc038b5436", "filename": "src/libcore/result.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/197a1f9cfe7839bcff0020c54af3e90c4985174d/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/197a1f9cfe7839bcff0020c54af3e90c4985174d/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=197a1f9cfe7839bcff0020c54af3e90c4985174d", "patch": "@@ -234,7 +234,7 @@ impl<T, E> Result<T, E> {\n     pure fn unwrap(self) -> T { unwrap(self) }\n \n     #[inline(always)]\n-    pure fn unwrap_err(self) -> T { unwrap(self) }\n+    pure fn unwrap_err(self) -> E { unwrap_err(self) }\n \n     #[inline(always)]\n     pure fn chain<U>(self, op: fn(T) -> Result<U,E>) -> Result<U,E> {"}, {"sha": "1058910c35a6485294f2c401f6f933b3b0436058", "filename": "src/libstd/time.rs", "status": "modified", "additions": 39, "deletions": 78, "changes": 117, "blob_url": "https://github.com/rust-lang/rust/blob/197a1f9cfe7839bcff0020c54af3e90c4985174d/src%2Flibstd%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/197a1f9cfe7839bcff0020c54af3e90c4985174d/src%2Flibstd%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftime.rs?ref=197a1f9cfe7839bcff0020c54af3e90c4985174d", "patch": "@@ -385,36 +385,22 @@ priv fn do_strptime(s: &str, format: &str) -> Result<Tm, ~str> {\n             None => Err(~\"Invalid year\")\n           },\n           'c' => {\n-                // FIXME(#3724): cleanup\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                    move parse_type(s, pos, 'a', tm),\n-                    |pos| parse_char(s, pos, ' ')),\n-                    |pos| parse_type(s, pos, 'b', tm)),\n-                    |pos| parse_char(s, pos, ' ')),\n-                    |pos| parse_type(s, pos, 'e', tm)),\n-                    |pos| parse_char(s, pos, ' ')),\n-                    |pos| parse_type(s, pos, 'T', tm)),\n-                    |pos| parse_char(s, pos, ' ')),\n-                    |pos| parse_type(s, pos, 'Y', tm))\n+            parse_type(s, pos, 'a', tm)\n+                .chain(|pos| parse_char(s, pos, ' '))\n+                .chain(|pos| parse_type(s, pos, 'b', tm))\n+                .chain(|pos| parse_char(s, pos, ' '))\n+                .chain(|pos| parse_type(s, pos, 'e', tm))\n+                .chain(|pos| parse_char(s, pos, ' '))\n+                .chain(|pos| parse_type(s, pos, 'T', tm))\n+                .chain(|pos| parse_char(s, pos, ' '))\n+                .chain(|pos| parse_type(s, pos, 'Y', tm))\n           }\n           'D' | 'x' => {\n-                // FIXME(#3724): cleanup\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                    move parse_type(s, pos, 'm', tm),\n-                    |pos| parse_char(s, pos, '/')),\n-                    |pos| parse_type(s, pos, 'd', tm)),\n-                    |pos| parse_char(s, pos, '/')),\n-                    |pos| parse_type(s, pos, 'y', tm))\n+            parse_type(s, pos, 'm', tm)\n+                .chain(|pos| parse_char(s, pos, '/'))\n+                .chain(|pos| parse_type(s, pos, 'd', tm))\n+                .chain(|pos| parse_char(s, pos, '/'))\n+                .chain(|pos| parse_type(s, pos, 'y', tm))\n           }\n           'd' => match match_digits(s, pos, 2u, false) {\n             Some(item) => { let (v, pos) = item; tm.tm_mday = v; Ok(pos) }\n@@ -425,16 +411,11 @@ priv fn do_strptime(s: &str, format: &str) -> Result<Tm, ~str> {\n             None => Err(~\"Invalid day of the month\")\n           },\n           'F' => {\n-                // FIXME(#3724): cleanup\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                    move parse_type(s, pos, 'Y', tm),\n-                    |pos| parse_char(s, pos, '-')),\n-                    |pos| parse_type(s, pos, 'm', tm)),\n-                    |pos| parse_char(s, pos, '-')),\n-                    |pos| parse_type(s, pos, 'd', tm))\n+            parse_type(s, pos, 'Y', tm)\n+                .chain(|pos| parse_char(s, pos, '-'))\n+                .chain(|pos| parse_type(s, pos, 'm', tm))\n+                .chain(|pos| parse_char(s, pos, '-'))\n+                .chain(|pos| parse_type(s, pos, 'd', tm))\n           }\n           'H' => {\n             // FIXME (#2350): range check.\n@@ -515,28 +496,18 @@ priv fn do_strptime(s: &str, format: &str) -> Result<Tm, ~str> {\n             None => Err(~\"Invalid hour\")\n           },\n           'R' => {\n-                // FIXME(#3724): cleanup\n-                result::chain(\n-                result::chain(\n-                    move parse_type(s, pos, 'H', tm),\n-                    |pos| parse_char(s, pos, ':')),\n-                    |pos| parse_type(s, pos, 'M', tm))\n+            parse_type(s, pos, 'H', tm)\n+                .chain(|pos| parse_char(s, pos, ':'))\n+                .chain(|pos| parse_type(s, pos, 'M', tm))\n           }\n           'r' => {\n-                // FIXME(#3724): cleanup\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                    move parse_type(s, pos, 'I', tm),\n-                    |pos| parse_char(s, pos, ':')),\n-                    |pos| parse_type(s, pos, 'M', tm)),\n-                    |pos| parse_char(s, pos, ':')),\n-                    |pos| parse_type(s, pos, 'S', tm)),\n-                    |pos| parse_char(s, pos, ' ')),\n-                    |pos| parse_type(s, pos, 'p', tm))\n+            parse_type(s, pos, 'I', tm)\n+                .chain(|pos| parse_char(s, pos, ':'))\n+                .chain(|pos| parse_type(s, pos, 'M', tm))\n+                .chain(|pos| parse_char(s, pos, ':'))\n+                .chain(|pos| parse_type(s, pos, 'S', tm))\n+                .chain(|pos| parse_char(s, pos, ' '))\n+                .chain(|pos| parse_type(s, pos, 'p', tm))\n           }\n           'S' => {\n             // FIXME (#2350): range check.\n@@ -551,16 +522,11 @@ priv fn do_strptime(s: &str, format: &str) -> Result<Tm, ~str> {\n           }\n           //'s' {}\n           'T' | 'X' => {\n-                // FIXME(#3724): cleanup\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                    move parse_type(s, pos, 'H', tm),\n-                    |pos| parse_char(s, pos, ':')),\n-                    |pos| parse_type(s, pos, 'M', tm)),\n-                    |pos| parse_char(s, pos, ':')),\n-                    |pos| parse_type(s, pos, 'S', tm))\n+            parse_type(s, pos, 'H', tm)\n+                .chain(|pos| parse_char(s, pos, ':'))\n+                .chain(|pos| parse_type(s, pos, 'M', tm))\n+                .chain(|pos| parse_char(s, pos, ':'))\n+                .chain(|pos| parse_type(s, pos, 'S', tm))\n           }\n           't' => parse_char(s, pos, '\\t'),\n           'u' => {\n@@ -575,16 +541,11 @@ priv fn do_strptime(s: &str, format: &str) -> Result<Tm, ~str> {\n             }\n           }\n           'v' => {\n-                // FIXME(#3724): cleanup\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                    move parse_type(s, pos, 'e', tm),\n-                    |pos| parse_char(s, pos, '-')),\n-                    |pos| parse_type(s, pos, 'b', tm)),\n-                    |pos| parse_char(s, pos, '-')),\n-                    |pos| parse_type(s, pos, 'Y', tm))\n+            parse_type(s, pos, 'e', tm)\n+                .chain(|pos|  parse_char(s, pos, '-'))\n+                .chain(|pos| parse_type(s, pos, 'b', tm))\n+                .chain(|pos| parse_char(s, pos, '-'))\n+                .chain(|pos| parse_type(s, pos, 'Y', tm))\n           }\n           //'W' {}\n           'w' => {"}]}