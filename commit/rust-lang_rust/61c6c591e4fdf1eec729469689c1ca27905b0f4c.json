{"sha": "61c6c591e4fdf1eec729469689c1ca27905b0f4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxYzZjNTkxZTRmZGYxZWVjNzI5NDY5Njg5YzFjYTI3OTA1YjBmNGM=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-02-18T09:18:07Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-02-19T03:52:40Z"}, "message": "Avoid using pretty printer if possible\n\nSetting a pretty printer adds noticeable overhead.\n\nWe can replace the usage in `ast:Lifetime::rewrite` by simply converting `Ident`\nto string.\nWe can do the same thing for a macro path as long as it is not nested, which\nshould hold for most cases.", "tree": {"sha": "58b1a5852c4a382a76f3a14a94eb835c9e33eed1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58b1a5852c4a382a76f3a14a94eb835c9e33eed1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61c6c591e4fdf1eec729469689c1ca27905b0f4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61c6c591e4fdf1eec729469689c1ca27905b0f4c", "html_url": "https://github.com/rust-lang/rust/commit/61c6c591e4fdf1eec729469689c1ca27905b0f4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61c6c591e4fdf1eec729469689c1ca27905b0f4c/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7d9850c42ed7e49d0eebcedb3d9cc37d0309aa2", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7d9850c42ed7e49d0eebcedb3d9cc37d0309aa2", "html_url": "https://github.com/rust-lang/rust/commit/d7d9850c42ed7e49d0eebcedb3d9cc37d0309aa2"}], "stats": {"total": 28, "additions": 16, "deletions": 12}, "files": [{"sha": "2ddac12bce0f1eca382c676f0755c12fea67eb7a", "filename": "rustfmt-core/src/macros.rs", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/61c6c591e4fdf1eec729469689c1ca27905b0f4c/rustfmt-core%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61c6c591e4fdf1eec729469689c1ca27905b0f4c/rustfmt-core%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt-core%2Fsrc%2Fmacros.rs?ref=61c6c591e4fdf1eec729469689c1ca27905b0f4c", "patch": "@@ -114,6 +114,20 @@ fn parse_macro_arg(parser: &mut Parser) -> Option<MacroArg> {\n     None\n }\n \n+/// Rewrite macro name without using pretty-printer if possible.\n+fn rewrite_macro_name(path: &ast::Path, extra_ident: Option<ast::Ident>) -> String {\n+    let name = if path.segments.len() == 1 {\n+        // Avoid using pretty-printer in the common case.\n+        format!(\"{}!\", path.segments[0].identifier)\n+    } else {\n+        format!(\"{}!\", path)\n+    };\n+    match extra_ident {\n+        Some(ident) if ident != symbol::keywords::Invalid.ident() => format!(\"{} {}\", name, ident),\n+        _ => name,\n+    }\n+}\n+\n pub fn rewrite_macro(\n     mac: &ast::Mac,\n     extra_ident: Option<ast::Ident>,\n@@ -132,16 +146,7 @@ pub fn rewrite_macro(\n \n     let original_style = macro_style(mac, context);\n \n-    let macro_name = match extra_ident {\n-        None => format!(\"{}!\", mac.node.path),\n-        Some(ident) => {\n-            if ident == symbol::keywords::Invalid.ident() {\n-                format!(\"{}!\", mac.node.path)\n-            } else {\n-                format!(\"{}! {}\", mac.node.path, ident)\n-            }\n-        }\n-    };\n+    let macro_name = rewrite_macro_name(&mac.node.path, extra_ident);\n \n     let style = if FORCED_BRACKET_MACROS.contains(&&macro_name[..]) {\n         MacroStyle::Brackets"}, {"sha": "971717ac253cf60fe6e84bdbe3c03938006a554f", "filename": "rustfmt-core/src/types.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/61c6c591e4fdf1eec729469689c1ca27905b0f4c/rustfmt-core%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61c6c591e4fdf1eec729469689c1ca27905b0f4c/rustfmt-core%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt-core%2Fsrc%2Ftypes.rs?ref=61c6c591e4fdf1eec729469689c1ca27905b0f4c", "patch": "@@ -14,7 +14,6 @@ use std::ops::Deref;\n use config::lists::*;\n use syntax::ast::{self, FunctionRetTy, Mutability};\n use syntax::codemap::{self, BytePos, Span};\n-use syntax::print::pprust;\n use syntax::symbol::keywords;\n \n use codemap::SpanUtils;\n@@ -539,7 +538,7 @@ impl Rewrite for ast::TyParamBound {\n \n impl Rewrite for ast::Lifetime {\n     fn rewrite(&self, _: &RewriteContext, _: Shape) -> Option<String> {\n-        Some(pprust::lifetime_to_string(self))\n+        Some(self.ident.to_string())\n     }\n }\n "}]}