{"sha": "b8ffc8a3d8c181e958d2ddf4f108f0cd3a108013", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4ZmZjOGEzZDhjMTgxZTk1OGQyZGRmNGYxMDhmMGNkM2ExMDgwMTM=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-01-21T08:56:33Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-01-22T08:22:21Z"}, "message": "Add an unstable `cast<U>() -> NonNull<U>` method to `NonNull<T>`.\n\nThis is less verbose than going through raw pointers to cast with `as`.", "tree": {"sha": "18776e03f199e7f63e8c38f2e6c3d6fe1aef7fe6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18776e03f199e7f63e8c38f2e6c3d6fe1aef7fe6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8ffc8a3d8c181e958d2ddf4f108f0cd3a108013", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8ffc8a3d8c181e958d2ddf4f108f0cd3a108013", "html_url": "https://github.com/rust-lang/rust/commit/b8ffc8a3d8c181e958d2ddf4f108f0cd3a108013", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8ffc8a3d8c181e958d2ddf4f108f0cd3a108013/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6461c9bdd35d6273b88f22fd5e8708eaf8949283", "url": "https://api.github.com/repos/rust-lang/rust/commits/6461c9bdd35d6273b88f22fd5e8708eaf8949283", "html_url": "https://github.com/rust-lang/rust/commit/6461c9bdd35d6273b88f22fd5e8708eaf8949283"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "3d84e910fe662d0de5873d267b8fbda362584038", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b8ffc8a3d8c181e958d2ddf4f108f0cd3a108013/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8ffc8a3d8c181e958d2ddf4f108f0cd3a108013/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=b8ffc8a3d8c181e958d2ddf4f108f0cd3a108013", "patch": "@@ -2553,6 +2553,14 @@ impl<T: ?Sized> NonNull<T> {\n     pub unsafe fn as_mut(&mut self) -> &mut T {\n         &mut *self.as_ptr()\n     }\n+\n+    /// Cast to a pointer of another type\n+    #[unstable(feature = \"nonnull_cast\", issue = \"47653\")]\n+    pub fn cast<U>(self) -> NonNull<U> {\n+        unsafe {\n+            NonNull::new_unchecked(self.as_ptr() as *mut U)\n+        }\n+    }\n }\n \n #[stable(feature = \"nonnull\", since = \"1.25.0\")]"}]}