{"sha": "40c6606b789122f1584a4e06556b858d543bef6b", "node_id": "C_kwDOAAsO6NoAKDQwYzY2MDZiNzg5MTIyZjE1ODRhNGUwNjU1NmI4NThkNTQzYmVmNmI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-08T22:18:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-08T22:18:07Z"}, "message": "Rollup merge of #91667 - GuillaumeGomez:fix-index-itemtypes, r=notriddle\n\nFix indent of itemTypes in search.js\n\nIt has been bugging me for quite some time now. Finally took the time to clean it up a bit.\n\nr? ```@notriddle```", "tree": {"sha": "5db0b310af238377cfbde5bdd3ac75aad19dbb06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5db0b310af238377cfbde5bdd3ac75aad19dbb06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40c6606b789122f1584a4e06556b858d543bef6b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhsS8fCRBK7hj4Ov3rIwAARfYIAFiG3alUmIqK8FSHyObkfmXA\nPBgoS8Fr4xX2Mpa77kR8oRBFNLp7cqEkPaFA//lExtCQlrKbDmzAS7e257/GJAPG\nie2hgiuomRg7f4j+lomvYxvnphgnFZN801pdpEWMtqkkuaTm8rqL1e/vaktd7jmk\nKSI1GEfGD4i49DKEpraVKE8qrXA1ZwjUdaTGrwhckTIejy7/abYE/4P/InYmS36s\nz+LcchWBfj/ZRw7cH6wjuZbbCnsPmvHSFJcYPq7cEuN/N6m0kfgauAY9FlRLA2zT\n+OsPZSsfrOtnrnTs1iKkLSnbX0d+0f0az7QIADx/5By+Ap9qeBpdfjeZ0yfINno=\n=ggX8\n-----END PGP SIGNATURE-----\n", "payload": "tree 5db0b310af238377cfbde5bdd3ac75aad19dbb06\nparent 1aa2007eca41c18930922b4eaa061e7f6183ef56\nparent edd881474b7e517f7239549babc8acaf7ddfd61e\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639001887 +0100\ncommitter GitHub <noreply@github.com> 1639001887 +0100\n\nRollup merge of #91667 - GuillaumeGomez:fix-index-itemtypes, r=notriddle\n\nFix indent of itemTypes in search.js\n\nIt has been bugging me for quite some time now. Finally took the time to clean it up a bit.\n\nr? ```@notriddle```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40c6606b789122f1584a4e06556b858d543bef6b", "html_url": "https://github.com/rust-lang/rust/commit/40c6606b789122f1584a4e06556b858d543bef6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40c6606b789122f1584a4e06556b858d543bef6b/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1aa2007eca41c18930922b4eaa061e7f6183ef56", "url": "https://api.github.com/repos/rust-lang/rust/commits/1aa2007eca41c18930922b4eaa061e7f6183ef56", "html_url": "https://github.com/rust-lang/rust/commit/1aa2007eca41c18930922b4eaa061e7f6183ef56"}, {"sha": "edd881474b7e517f7239549babc8acaf7ddfd61e", "url": "https://api.github.com/repos/rust-lang/rust/commits/edd881474b7e517f7239549babc8acaf7ddfd61e", "html_url": "https://github.com/rust-lang/rust/commit/edd881474b7e517f7239549babc8acaf7ddfd61e"}], "stats": {"total": 54, "additions": 28, "deletions": 26}, "files": [{"sha": "7c55d10836c45f50e6c800c75701935a3ed2594c", "filename": "src/librustdoc/html/static/js/search.js", "status": "modified", "additions": 28, "deletions": 26, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/40c6606b789122f1584a4e06556b858d543bef6b/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "raw_url": "https://github.com/rust-lang/rust/raw/40c6606b789122f1584a4e06556b858d543bef6b/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js?ref=40c6606b789122f1584a4e06556b858d543bef6b", "patch": "@@ -4,32 +4,34 @@\n (function() {\n // This mapping table should match the discriminants of\n // `rustdoc::html::item_type::ItemType` type in Rust.\n-var itemTypes = [\"mod\",\n-                    \"externcrate\",\n-                    \"import\",\n-                    \"struct\",\n-                    \"enum\",\n-                    \"fn\",\n-                    \"type\",\n-                    \"static\",\n-                    \"trait\",\n-                    \"impl\",\n-                    \"tymethod\",\n-                    \"method\",\n-                    \"structfield\",\n-                    \"variant\",\n-                    \"macro\",\n-                    \"primitive\",\n-                    \"associatedtype\",\n-                    \"constant\",\n-                    \"associatedconstant\",\n-                    \"union\",\n-                    \"foreigntype\",\n-                    \"keyword\",\n-                    \"existential\",\n-                    \"attr\",\n-                    \"derive\",\n-                    \"traitalias\"];\n+var itemTypes = [\n+    \"mod\",\n+    \"externcrate\",\n+    \"import\",\n+    \"struct\",\n+    \"enum\",\n+    \"fn\",\n+    \"type\",\n+    \"static\",\n+    \"trait\",\n+    \"impl\",\n+    \"tymethod\",\n+    \"method\",\n+    \"structfield\",\n+    \"variant\",\n+    \"macro\",\n+    \"primitive\",\n+    \"associatedtype\",\n+    \"constant\",\n+    \"associatedconstant\",\n+    \"union\",\n+    \"foreigntype\",\n+    \"keyword\",\n+    \"existential\",\n+    \"attr\",\n+    \"derive\",\n+    \"traitalias\",\n+];\n \n // used for special search precedence\n var TY_PRIMITIVE = itemTypes.indexOf(\"primitive\");"}]}