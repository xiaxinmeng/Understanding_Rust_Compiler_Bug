{"sha": "afcb6342fa8cf206a80e8555454bff74d9144973", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmY2I2MzQyZmE4Y2YyMDZhODBlODU1NTQ1NGJmZjc0ZDkxNDQ5NzM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-24T09:07:46Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-25T14:53:52Z"}, "message": "use Size addition instead of checked int addition", "tree": {"sha": "69517b1e6fe886e5b76a47e532f23b0d2bb9ca4d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69517b1e6fe886e5b76a47e532f23b0d2bb9ca4d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afcb6342fa8cf206a80e8555454bff74d9144973", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afcb6342fa8cf206a80e8555454bff74d9144973", "html_url": "https://github.com/rust-lang/rust/commit/afcb6342fa8cf206a80e8555454bff74d9144973", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afcb6342fa8cf206a80e8555454bff74d9144973/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bc108a13be32d498e6aa3066a15748e2ce1febf", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bc108a13be32d498e6aa3066a15748e2ce1febf", "html_url": "https://github.com/rust-lang/rust/commit/0bc108a13be32d498e6aa3066a15748e2ce1febf"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "cd4c7c71ccd90c5063dea6a4fe54e6d794f4c0cd", "filename": "src/librustc/mir/interpret/allocation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/afcb6342fa8cf206a80e8555454bff74d9144973/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afcb6342fa8cf206a80e8555454bff74d9144973/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs?ref=afcb6342fa8cf206a80e8555454bff74d9144973", "patch": "@@ -293,7 +293,7 @@ impl<'tcx, Tag: Copy, Extra: AllocationExtra<Tag>> Allocation<Tag, Extra> {\n         let offset = usize::try_from(ptr.offset.bytes()).unwrap();\n         Ok(match self.bytes[offset..].iter().position(|&c| c == 0) {\n             Some(size) => {\n-                let size_with_null = Size::from_bytes(size.checked_add(1).unwrap());\n+                let size_with_null = Size::add(Size::from_bytes(size), Size::from_bytes(1));\n                 // Go through `get_bytes` for checks and AllocationExtra hooks.\n                 // We read the null, so we include it in the request, but we want it removed\n                 // from the result, so we do subslicing."}]}