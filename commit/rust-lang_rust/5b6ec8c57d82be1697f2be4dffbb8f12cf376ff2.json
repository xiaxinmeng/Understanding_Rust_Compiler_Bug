{"sha": "5b6ec8c57d82be1697f2be4dffbb8f12cf376ff2", "node_id": "C_kwDOAAsO6NoAKDViNmVjOGM1N2Q4MmJlMTY5N2YyYmU0ZGZmYmI4ZjEyY2YzNzZmZjI", "commit": {"author": {"name": "Marek Downar", "email": "marek.downar@evomedia.pl", "date": "2022-01-16T19:27:00Z"}, "committer": {"name": "Marek Downar", "email": "marek.downar@evomedia.pl", "date": "2022-01-16T19:27:00Z"}, "message": "#8214 cmp_owned suggestion flips the comparison", "tree": {"sha": "a920c2b961b96eeeaff9d0100d9f2ca174bd7d6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a920c2b961b96eeeaff9d0100d9f2ca174bd7d6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b6ec8c57d82be1697f2be4dffbb8f12cf376ff2", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQSzz0WgAyQDeHzM2Qxi1+PvccqFsgUCYeRxhAAKCRBi1+PvccqF\nshokAQDAKsV99/7WFWSjKwzpGv27m8g58r5c9RjnVLnzy2a91wD/YtF7JfwUtppF\nBLIOtcqFDwk3/bDVWCOL3ODAt7keiQQ=\n=e/5/\n-----END PGP SIGNATURE-----", "payload": "tree a920c2b961b96eeeaff9d0100d9f2ca174bd7d6f\nparent 27845a92058b076c34d9ecbc7a4e476db999b04c\nauthor Marek Downar <marek.downar@evomedia.pl> 1642361220 +0100\ncommitter Marek Downar <marek.downar@evomedia.pl> 1642361220 +0100\n\n#8214 cmp_owned suggestion flips the comparison\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b6ec8c57d82be1697f2be4dffbb8f12cf376ff2", "html_url": "https://github.com/rust-lang/rust/commit/5b6ec8c57d82be1697f2be4dffbb8f12cf376ff2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b6ec8c57d82be1697f2be4dffbb8f12cf376ff2/comments", "author": {"login": "marekdownar", "id": 1872953, "node_id": "MDQ6VXNlcjE4NzI5NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1872953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marekdownar", "html_url": "https://github.com/marekdownar", "followers_url": "https://api.github.com/users/marekdownar/followers", "following_url": "https://api.github.com/users/marekdownar/following{/other_user}", "gists_url": "https://api.github.com/users/marekdownar/gists{/gist_id}", "starred_url": "https://api.github.com/users/marekdownar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marekdownar/subscriptions", "organizations_url": "https://api.github.com/users/marekdownar/orgs", "repos_url": "https://api.github.com/users/marekdownar/repos", "events_url": "https://api.github.com/users/marekdownar/events{/privacy}", "received_events_url": "https://api.github.com/users/marekdownar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marekdownar", "id": 1872953, "node_id": "MDQ6VXNlcjE4NzI5NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1872953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marekdownar", "html_url": "https://github.com/marekdownar", "followers_url": "https://api.github.com/users/marekdownar/followers", "following_url": "https://api.github.com/users/marekdownar/following{/other_user}", "gists_url": "https://api.github.com/users/marekdownar/gists{/gist_id}", "starred_url": "https://api.github.com/users/marekdownar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marekdownar/subscriptions", "organizations_url": "https://api.github.com/users/marekdownar/orgs", "repos_url": "https://api.github.com/users/marekdownar/repos", "events_url": "https://api.github.com/users/marekdownar/events{/privacy}", "received_events_url": "https://api.github.com/users/marekdownar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27845a92058b076c34d9ecbc7a4e476db999b04c", "url": "https://api.github.com/repos/rust-lang/rust/commits/27845a92058b076c34d9ecbc7a4e476db999b04c", "html_url": "https://github.com/rust-lang/rust/commit/27845a92058b076c34d9ecbc7a4e476db999b04c"}], "stats": {"total": 97, "additions": 95, "deletions": 2}, "files": [{"sha": "8db71d1e967620ca73267880368df8dafc609090", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5b6ec8c57d82be1697f2be4dffbb8f12cf376ff2/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b6ec8c57d82be1697f2be4dffbb8f12cf376ff2/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=5b6ec8c57d82be1697f2be4dffbb8f12cf376ff2", "patch": "@@ -548,6 +548,7 @@ fn is_array(cx: &LateContext<'_>, expr: &Expr<'_>) -> bool {\n     matches!(&cx.typeck_results().expr_ty(expr).peel_refs().kind(), ty::Array(_, _))\n }\n \n+#[allow(clippy::too_many_lines)]\n fn check_to_owned(cx: &LateContext<'_>, expr: &Expr<'_>, other: &Expr<'_>, left: bool) {\n     #[derive(Default)]\n     struct EqImpl {\n@@ -644,10 +645,26 @@ fn check_to_owned(cx: &LateContext<'_>, expr: &Expr<'_>, other: &Expr<'_>, left:\n                 hint = expr_snip;\n             } else {\n                 span = expr.span.to(other.span);\n+\n+                let cmp_span = if other.span < expr.span {\n+                    other.span.between(expr.span)\n+                } else {\n+                    expr.span.between(other.span)\n+                };\n                 if eq_impl.ty_eq_other {\n-                    hint = format!(\"{} == {}\", expr_snip, snippet(cx, other.span, \"..\"));\n+                    hint = format!(\n+                        \"{}{}{}\",\n+                        expr_snip,\n+                        snippet(cx, cmp_span, \"..\"),\n+                        snippet(cx, other.span, \"..\")\n+                    );\n                 } else {\n-                    hint = format!(\"{} == {}\", snippet(cx, other.span, \"..\"), expr_snip);\n+                    hint = format!(\n+                        \"{}{}{}\",\n+                        snippet(cx, other.span, \"..\"),\n+                        snippet(cx, cmp_span, \"..\"),\n+                        expr_snip\n+                    );\n                 }\n             }\n "}, {"sha": "44e41bdd1148711497a4d8a7928b3650a919e557", "filename": "tests/ui/cmp_owned/comparison_flip.fixed", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/5b6ec8c57d82be1697f2be4dffbb8f12cf376ff2/tests%2Fui%2Fcmp_owned%2Fcomparison_flip.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/5b6ec8c57d82be1697f2be4dffbb8f12cf376ff2/tests%2Fui%2Fcmp_owned%2Fcomparison_flip.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_owned%2Fcomparison_flip.fixed?ref=5b6ec8c57d82be1697f2be4dffbb8f12cf376ff2", "patch": "@@ -0,0 +1,29 @@\n+// run-rustfix\n+\n+use std::fmt::{self, Display};\n+\n+fn main() {\n+    let a = Foo;\n+\n+    if a != \"bar\" {\n+        println!(\"foo\");\n+    }\n+\n+    if a != \"bar\" {\n+        println!(\"foo\");\n+    }\n+}\n+\n+struct Foo;\n+\n+impl Display for Foo {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        write!(f, \"foo\")\n+    }\n+}\n+\n+impl PartialEq<&str> for Foo {\n+    fn eq(&self, other: &&str) -> bool {\n+        \"foo\" == *other\n+    }\n+}"}, {"sha": "662673abb62d9aee94b58b0e36746021a7c24d77", "filename": "tests/ui/cmp_owned/comparison_flip.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/5b6ec8c57d82be1697f2be4dffbb8f12cf376ff2/tests%2Fui%2Fcmp_owned%2Fcomparison_flip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b6ec8c57d82be1697f2be4dffbb8f12cf376ff2/tests%2Fui%2Fcmp_owned%2Fcomparison_flip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_owned%2Fcomparison_flip.rs?ref=5b6ec8c57d82be1697f2be4dffbb8f12cf376ff2", "patch": "@@ -0,0 +1,29 @@\n+// run-rustfix\n+\n+use std::fmt::{self, Display};\n+\n+fn main() {\n+    let a = Foo;\n+\n+    if a.to_string() != \"bar\" {\n+        println!(\"foo\");\n+    }\n+\n+    if \"bar\" != a.to_string() {\n+        println!(\"foo\");\n+    }\n+}\n+\n+struct Foo;\n+\n+impl Display for Foo {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        write!(f, \"foo\")\n+    }\n+}\n+\n+impl PartialEq<&str> for Foo {\n+    fn eq(&self, other: &&str) -> bool {\n+        \"foo\" == *other\n+    }\n+}"}, {"sha": "e4d0d822bb1e341aa8dc0fc9bfbee2e923558b9b", "filename": "tests/ui/cmp_owned/comparison_flip.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5b6ec8c57d82be1697f2be4dffbb8f12cf376ff2/tests%2Fui%2Fcmp_owned%2Fcomparison_flip.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5b6ec8c57d82be1697f2be4dffbb8f12cf376ff2/tests%2Fui%2Fcmp_owned%2Fcomparison_flip.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_owned%2Fcomparison_flip.stderr?ref=5b6ec8c57d82be1697f2be4dffbb8f12cf376ff2", "patch": "@@ -0,0 +1,18 @@\n+error: this creates an owned instance just for comparison\n+  --> $DIR/comparison_flip.rs:8:8\n+   |\n+LL |     if a.to_string() != \"bar\" {\n+   |        ^^^^^^^^^^^^^ help: try: `a`\n+   |\n+   = note: `-D clippy::cmp-owned` implied by `-D warnings`\n+\n+error: this creates an owned instance just for comparison\n+  --> $DIR/comparison_flip.rs:12:17\n+   |\n+LL |     if \"bar\" != a.to_string() {\n+   |        ---------^^^^^^^^^^^^^\n+   |        |\n+   |        help: try: `a != \"bar\"`\n+\n+error: aborting due to 2 previous errors\n+"}]}