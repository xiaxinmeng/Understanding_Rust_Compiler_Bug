{"sha": "8c9f5ffc773233c94ac6b712d2d10f991ad2b0bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjOWY1ZmZjNzczMjMzYzk0YWM2YjcxMmQyZDEwZjk5MWFkMmIwYmY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-24T18:43:51Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-24T18:43:51Z"}, "message": "Add a Linux .def file. Might put out burning tinderbox.", "tree": {"sha": "c49f340adc3e734920e4f016a36170cf862d5a05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c49f340adc3e734920e4f016a36170cf862d5a05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c9f5ffc773233c94ac6b712d2d10f991ad2b0bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c9f5ffc773233c94ac6b712d2d10f991ad2b0bf", "html_url": "https://github.com/rust-lang/rust/commit/8c9f5ffc773233c94ac6b712d2d10f991ad2b0bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c9f5ffc773233c94ac6b712d2d10f991ad2b0bf/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2b9a7ce8f1246e9d8b0d65ba3d989a2b2d25451", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2b9a7ce8f1246e9d8b0d65ba3d989a2b2d25451", "html_url": "https://github.com/rust-lang/rust/commit/a2b9a7ce8f1246e9d8b0d65ba3d989a2b2d25451"}], "stats": {"total": 666, "additions": 663, "deletions": 3}, "files": [{"sha": "950c67fe7511bb1e043157ca3ad4c84a9a0c906d", "filename": "Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8c9f5ffc773233c94ac6b712d2d10f991ad2b0bf/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/8c9f5ffc773233c94ac6b712d2d10f991ad2b0bf/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=8c9f5ffc773233c94ac6b712d2d10f991ad2b0bf", "patch": "@@ -38,7 +38,7 @@ ifeq ($(CFG_OSTYPE), Linux)\n   CFG_LIB_NAME=lib$(1).so\n   CFG_GCC_CFLAGS += -fPIC -march=i686\n   CFG_GCC_LINK_FLAGS += -shared -fPIC -ldl -lpthread -lrt\n-  CFG_GCC_DEF_FLAG :=\n+  CFG_GCC_DEF_FLAG := -Wl,--export-dynamic,--dynamic-list=\n   ifeq ($(CFG_CPUTYPE), x86_64)\n     CFG_GCC_CFLAGS += -m32\n     CFG_GCC_LINK_FLAGS += -m32\n@@ -53,7 +53,7 @@ ifeq ($(CFG_OSTYPE), Darwin)\n   CFG_UNIXY := 1\n   CFG_LDENV := DYLD_LIBRARY_PATH\n   CFG_GCC_LINK_FLAGS += -dynamiclib -lpthread\n-  CFG_GCC_DEF_FLAG := -exported_symbols_list\n+  CFG_GCC_DEF_FLAG := -Wl,-exported_symbols_list,\n   # Darwin has a very blurry notion of \"64 bit\", and claims it's running\n   # \"on an i386\" when the whole userspace is 64-bit and the compiler\n   # emits 64-bit binaries by default. So we just force -m32 here. Smarter\n@@ -148,7 +148,7 @@ ifdef CFG_GCC\n   CFG_COMPILE_C = $(CFG_GCC_CROSS)g++ $(CFG_GCC_CFLAGS) -c -o $(1) $(2)\n   CFG_DEPEND_C = $(CFG_GCC_CROSS)g++ $(CFG_GCC_CFLAGS) -MT \"$(1)\" -MM $(2)\n   CFG_LINK_C = $(CFG_GCC_CROSS)g++ $(CFG_GCC_LINK_FLAGS) -o $(1) \\\n-               $(CFG_GCC_DEF_FLAG) $(3) $(2)\n+               $(CFG_GCC_DEF_FLAG)$(3) $(2)\n else\n   CFG_ERR := $(error please try on a system with gcc)\n endif"}, {"sha": "f7127b40f48a8e98ce324ef681d98eac84bc38c2", "filename": "src/rt/rustrt.linux.def", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/8c9f5ffc773233c94ac6b712d2d10f991ad2b0bf/src%2Frt%2Frustrt.linux.def", "raw_url": "https://github.com/rust-lang/rust/raw/8c9f5ffc773233c94ac6b712d2d10f991ad2b0bf/src%2Frt%2Frustrt.linux.def", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.linux.def?ref=8c9f5ffc773233c94ac6b712d2d10f991ad2b0bf", "patch": "@@ -0,0 +1,70 @@\n+{\t\n+    align_of;\n+\tdebug_box;\n+\tdebug_fn;\n+\tdebug_obj;\n+\tdebug_opaque;\n+\tdebug_ptrcast;\n+\tdebug_tag;\n+\tdebug_trap;\n+\tdebug_tydesc;\n+\tdo_gc;\n+\tlast_os_error;\n+\trand_free;\n+\trand_new;\n+\trand_next;\n+\trefcount;\n+\trust_file_is_dir;\n+\trust_get_stdin;\n+\trust_get_stdout;\n+\trust_run_program;\n+\trust_start;\n+\tsize_of;\n+\tstr_alloc;\n+\tstr_buf;\n+\tstr_byte_len;\n+\tstr_from_buf;\n+\tstr_from_cstr;\n+\tstr_from_vec;\n+\ttask_sleep;\n+\tunsupervise;\n+\tupcall_clone_chan;\n+\tupcall_del_chan;\n+\tupcall_del_port;\n+\tupcall_exit;\n+\tupcall_fail;\n+\tupcall_flush_chan;\n+\tupcall_free;\n+\tupcall_get_type_desc;\n+\tupcall_grow_task;\n+\tupcall_join;\n+\tupcall_kill;\n+\tupcall_log_int;\n+\tupcall_log_str;\n+\tupcall_malloc;\n+\tupcall_mark;\n+\tupcall_new_chan;\n+\tupcall_new_port;\n+\tupcall_new_str;\n+\tupcall_new_task;\n+\tupcall_new_thread;\n+\tupcall_new_vec;\n+\tupcall_recv;\n+\tupcall_require_c_sym;\n+\tupcall_require_rust_sym;\n+\tupcall_send;\n+\tupcall_sleep;\n+\tupcall_start_task;\n+\tupcall_start_thread;\n+\tupcall_trace_str;\n+\tupcall_trace_word;\n+\tupcall_vec_grow;\n+\tupcall_yield;\n+\tvec_alloc;\n+\tvec_alloc_mut;\n+\tvec_buf;\n+\tvec_len;\n+\tvec_len_set;\n+\tvec_print_debug_info;\n+}\n+"}, {"sha": "795db5d73c748a4552b6083fe07f1e094df448f4", "filename": "src/rustllvm/rustllvm.linux.def", "status": "added", "additions": 590, "deletions": 0, "changes": 590, "blob_url": "https://github.com/rust-lang/rust/blob/8c9f5ffc773233c94ac6b712d2d10f991ad2b0bf/src%2Frustllvm%2Frustllvm.linux.def", "raw_url": "https://github.com/rust-lang/rust/raw/8c9f5ffc773233c94ac6b712d2d10f991ad2b0bf/src%2Frustllvm%2Frustllvm.linux.def", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2Frustllvm.linux.def?ref=8c9f5ffc773233c94ac6b712d2d10f991ad2b0bf", "patch": "@@ -0,0 +1,590 @@\n+{\n+\tLLVMRustCreateMemoryBufferWithContentsOfFile;\n+\tLLVMRustGetLastError;\n+\tLLVMCreateObjectFile;\n+\tLLVMDisposeObjectFile;\n+\tLLVMGetSections;\n+\tLLVMDisposeSectionIterator;\n+\tLLVMIsSectionIteratorAtEnd;\n+\tLLVMMoveToNextSection;\n+\tLLVMGetSectionName;\n+\tLLVMGetSectionSize;\n+\tLLVMGetSectionContents;\n+    LLVMABIAlignmentOfType;\n+    LLVMABISizeOfType;\n+    LLVMAddAggressiveDCEPass;\n+    LLVMAddAlias;\n+    LLVMAddArgumentPromotionPass;\n+    LLVMAddAttribute;\n+    LLVMAddCFGSimplificationPass;\n+    LLVMAddCase;\n+    LLVMAddConstantMergePass;\n+    LLVMAddConstantPropagationPass;\n+    LLVMAddDeadArgEliminationPass;\n+    LLVMAddDeadStoreEliminationPass;\n+    LLVMAddDeadTypeEliminationPass;\n+    LLVMAddDemoteMemoryToRegisterPass;\n+    LLVMAddDestination;\n+    LLVMAddFunction;\n+    LLVMAddFunctionAttr;\n+    LLVMAddFunctionAttrsPass;\n+    LLVMAddFunctionInliningPass;\n+    LLVMAddGVNPass;\n+    LLVMAddGlobal;\n+    LLVMAddGlobalDCEPass;\n+    LLVMAddGlobalInAddressSpace;\n+    LLVMAddGlobalMapping;\n+    LLVMAddGlobalOptimizerPass;\n+    LLVMAddIPConstantPropagationPass;\n+    LLVMAddIPSCCPPass;\n+    LLVMAddIncoming;\n+    LLVMAddIndVarSimplifyPass;\n+    LLVMAddInstrAttribute;\n+    LLVMAddInstructionCombiningPass;\n+    LLVMAddInternalizePass;\n+    LLVMAddJumpThreadingPass;\n+    LLVMAddLICMPass;\n+    LLVMAddLoopDeletionPass;\n+    LLVMAddLoopRotatePass;\n+    LLVMAddLoopUnrollPass;\n+    LLVMAddLoopUnswitchPass;\n+    LLVMAddLowerSetJmpPass;\n+    LLVMAddMemCpyOptPass;\n+    LLVMAddModule;\n+    LLVMAddModuleProvider;\n+    LLVMAddPromoteMemoryToRegisterPass;\n+    LLVMAddPruneEHPass;\n+    LLVMAddRaiseAllocationsPass;\n+    LLVMAddReassociatePass;\n+    LLVMAddSCCPPass;\n+    LLVMAddScalarReplAggregatesPass;\n+    LLVMAddScalarReplAggregatesPassWithThreshold;\n+    LLVMAddSimplifyLibCallsPass;\n+    LLVMAddStripDeadPrototypesPass;\n+    LLVMAddStripSymbolsPass;\n+    LLVMAddTailCallEliminationPass;\n+    LLVMAddTargetData;\n+    LLVMAddTypeName;\n+    LLVMAddVerifierPass;\n+    LLVMAlignOf;\n+    LLVMAppendBasicBlock;\n+    LLVMAppendBasicBlockInContext;\n+    LLVMArrayType;\n+    LLVMBasicBlockAsValue;\n+    LLVMBlockAddress;\n+    LLVMBuildAShr;\n+    LLVMBuildAdd;\n+    LLVMBuildAggregateRet;\n+    LLVMBuildAlloca;\n+    LLVMBuildAnd;\n+    LLVMBuildArrayAlloca;\n+    LLVMBuildArrayMalloc;\n+    LLVMBuildBinOp;\n+    LLVMBuildBitCast;\n+    LLVMBuildBr;\n+    LLVMBuildCall;\n+    LLVMBuildCast;\n+    LLVMBuildCondBr;\n+    LLVMBuildExactSDiv;\n+    LLVMBuildExtractElement;\n+    LLVMBuildExtractValue;\n+    LLVMBuildFAdd;\n+    LLVMBuildFCmp;\n+    LLVMBuildFDiv;\n+    LLVMBuildFMul;\n+    LLVMBuildFNeg;\n+    LLVMBuildFPCast;\n+    LLVMBuildFPExt;\n+    LLVMBuildFPToSI;\n+    LLVMBuildFPToUI;\n+    LLVMBuildFPTrunc;\n+    LLVMBuildFRem;\n+    LLVMBuildFSub;\n+    LLVMBuildFree;\n+    LLVMBuildGEP;\n+    LLVMBuildGlobalString;\n+    LLVMBuildGlobalStringPtr;\n+    LLVMBuildICmp;\n+    LLVMBuildInBoundsGEP;\n+    LLVMBuildIndirectBr;\n+    LLVMBuildInsertElement;\n+    LLVMBuildInsertValue;\n+    LLVMBuildIntCast;\n+    LLVMBuildIntToPtr;\n+    LLVMBuildInvoke;\n+    LLVMBuildIsNotNull;\n+    LLVMBuildIsNull;\n+    LLVMBuildLShr;\n+    LLVMBuildLoad;\n+    LLVMBuildMalloc;\n+    LLVMBuildMul;\n+    LLVMBuildNSWAdd;\n+    LLVMBuildNSWMul;\n+    LLVMBuildNSWNeg;\n+    LLVMBuildNSWSub;\n+    LLVMBuildNUWAdd;\n+    LLVMBuildNUWMul;\n+    LLVMBuildNUWNeg;\n+    LLVMBuildNUWSub;\n+    LLVMBuildNeg;\n+    LLVMBuildNot;\n+    LLVMBuildOr;\n+    LLVMBuildPhi;\n+    LLVMBuildPointerCast;\n+    LLVMBuildPtrDiff;\n+    LLVMBuildPtrToInt;\n+    LLVMBuildRet;\n+    LLVMBuildRetVoid;\n+    LLVMBuildSDiv;\n+    LLVMBuildSExt;\n+    LLVMBuildSExtOrBitCast;\n+    LLVMBuildSIToFP;\n+    LLVMBuildSRem;\n+    LLVMBuildSelect;\n+    LLVMBuildShl;\n+    LLVMBuildShuffleVector;\n+    LLVMBuildStore;\n+    LLVMBuildStructGEP;\n+    LLVMBuildSub;\n+    LLVMBuildSwitch;\n+    LLVMBuildTrunc;\n+    LLVMBuildTruncOrBitCast;\n+    LLVMBuildUDiv;\n+    LLVMBuildUIToFP;\n+    LLVMBuildURem;\n+    LLVMBuildUnreachable;\n+    LLVMBuildUnwind;\n+    LLVMBuildVAArg;\n+    LLVMBuildXor;\n+    LLVMBuildZExt;\n+    LLVMBuildZExtOrBitCast;\n+    LLVMByteOrder;\n+    LLVMCallFrameAlignmentOfType;\n+    LLVMClearInsertionPosition;\n+    LLVMConstAShr;\n+    LLVMConstAdd;\n+    LLVMConstAllOnes;\n+    LLVMConstAnd;\n+    LLVMConstArray;\n+    LLVMConstBitCast;\n+    LLVMConstExactSDiv;\n+    LLVMConstExtractElement;\n+    LLVMConstExtractValue;\n+    LLVMConstFAdd;\n+    LLVMConstFCmp;\n+    LLVMConstFDiv;\n+    LLVMConstFMul;\n+    LLVMConstFNeg;\n+    LLVMConstFPCast;\n+    LLVMConstFPExt;\n+    LLVMConstFPToSI;\n+    LLVMConstFPToUI;\n+    LLVMConstFPTrunc;\n+    LLVMConstFRem;\n+    LLVMConstFSub;\n+    LLVMConstGEP;\n+    LLVMConstICmp;\n+    LLVMConstInBoundsGEP;\n+    LLVMConstInlineAsm;\n+    LLVMConstInsertElement;\n+    LLVMConstInsertValue;\n+    LLVMConstInt;\n+    LLVMConstIntCast;\n+    LLVMConstIntGetSExtValue;\n+    LLVMConstIntGetZExtValue;\n+    LLVMConstIntOfArbitraryPrecision;\n+    LLVMConstIntOfString;\n+    LLVMConstIntOfStringAndSize;\n+    LLVMConstIntToPtr;\n+    LLVMConstLShr;\n+    LLVMConstMul;\n+    LLVMConstNSWAdd;\n+    LLVMConstNSWMul;\n+    LLVMConstNSWNeg;\n+    LLVMConstNSWSub;\n+    LLVMConstNUWAdd;\n+    LLVMConstNUWMul;\n+    LLVMConstNUWNeg;\n+    LLVMConstNUWSub;\n+    LLVMConstNeg;\n+    LLVMConstNot;\n+    LLVMConstNull;\n+    LLVMConstOr;\n+    LLVMConstPointerCast;\n+    LLVMConstPointerNull;\n+    LLVMConstPtrToInt;\n+    LLVMConstReal;\n+    LLVMConstRealOfString;\n+    LLVMConstRealOfStringAndSize;\n+    LLVMConstSDiv;\n+    LLVMConstSExt;\n+    LLVMConstSExtOrBitCast;\n+    LLVMConstSIToFP;\n+    LLVMConstSRem;\n+    LLVMConstSelect;\n+    LLVMConstShl;\n+    LLVMConstShuffleVector;\n+    LLVMConstString;\n+    LLVMConstStringInContext;\n+    LLVMConstStruct;\n+    LLVMConstStructInContext;\n+    LLVMConstSub;\n+    LLVMConstTrunc;\n+    LLVMConstTruncOrBitCast;\n+    LLVMConstUDiv;\n+    LLVMConstUIToFP;\n+    LLVMConstURem;\n+    LLVMConstVector;\n+    LLVMConstXor;\n+    LLVMConstZExt;\n+    LLVMConstZExtOrBitCast;\n+    LLVMContextCreate;\n+    LLVMContextDispose;\n+    LLVMCopyStringRepOfTargetData;\n+    LLVMCountBasicBlocks;\n+    LLVMCountIncoming;\n+    LLVMCountParamTypes;\n+    LLVMCountParams;\n+    LLVMCountStructElementTypes;\n+    LLVMCreateBuilder;\n+    LLVMCreateBuilderInContext;\n+    LLVMCreateExecutionEngine;\n+    LLVMCreateExecutionEngineForModule;\n+    LLVMCreateFunctionPassManager;\n+    LLVMCreateFunctionPassManagerForModule;\n+    LLVMCreateGenericValueOfFloat;\n+    LLVMCreateGenericValueOfInt;\n+    LLVMCreateGenericValueOfPointer;\n+    LLVMCreateInterpreter;\n+    LLVMCreateInterpreterForModule;\n+    LLVMCreateJITCompiler;\n+    LLVMCreateJITCompilerForModule;\n+    LLVMCreateMemoryBufferWithContentsOfFile;\n+    LLVMCreateMemoryBufferWithSTDIN;\n+    LLVMCreateModuleProviderForExistingModule;\n+    LLVMCreateObjectFile;\n+    LLVMCreatePassManager;\n+    LLVMCreateTargetData;\n+    LLVMCreateTypeHandle;\n+    LLVMDeleteBasicBlock;\n+    LLVMDeleteFunction;\n+    LLVMDeleteGlobal;\n+    LLVMDeleteTypeName;\n+    LLVMDisposeBuilder;\n+    LLVMDisposeExecutionEngine;\n+    LLVMDisposeGenericValue;\n+    LLVMDisposeMemoryBuffer;\n+    LLVMDisposeMessage;\n+    LLVMDisposeModule;\n+    LLVMDisposeModuleProvider;\n+    LLVMDisposeObjectFile;\n+    LLVMDisposePassManager;\n+    LLVMDisposeSectionIterator;\n+    LLVMDisposeTargetData;\n+    LLVMDisposeTypeHandle;\n+    LLVMDoubleType;\n+    LLVMDoubleTypeInContext;\n+    LLVMDumpModule;\n+    LLVMDumpValue;\n+    LLVMElementAtOffset;\n+    LLVMFP128Type;\n+    LLVMFP128TypeInContext;\n+    LLVMFinalizeFunctionPassManager;\n+    LLVMFindFunction;\n+    LLVMFloatType;\n+    LLVMFloatTypeInContext;\n+    LLVMFreeMachineCodeForFunction;\n+    LLVMFunctionType;\n+    LLVMGenericValueIntWidth;\n+    LLVMGenericValueToFloat;\n+    LLVMGenericValueToInt;\n+    LLVMGenericValueToPointer;\n+    LLVMGetAlignment;\n+    LLVMGetArrayLength;\n+    LLVMGetAttribute;\n+    LLVMGetBasicBlockParent;\n+    LLVMGetBasicBlocks;\n+    LLVMGetBitcodeModule;\n+    LLVMGetBitcodeModuleInContext;\n+    LLVMGetBitcodeModuleProvider;\n+    LLVMGetBitcodeModuleProviderInContext;\n+    LLVMGetConstOpcode;\n+    LLVMGetCurrentDebugLocation;\n+    LLVMGetDataLayout;\n+    LLVMGetElementType;\n+    LLVMGetEntryBasicBlock;\n+    LLVMGetExecutionEngineTargetData;\n+    LLVMGetFirstBasicBlock;\n+    LLVMGetFirstFunction;\n+    LLVMGetFirstGlobal;\n+    LLVMGetFirstInstruction;\n+    LLVMGetFirstParam;\n+    LLVMGetFirstUse;\n+    LLVMGetFunctionAttr;\n+    LLVMGetFunctionCallConv;\n+    LLVMGetGC;\n+    LLVMGetGlobalContext;\n+    LLVMGetGlobalContext;\n+    LLVMGetGlobalParent;\n+    LLVMGetGlobalPassRegistry;\n+    LLVMGetIncomingBlock;\n+    LLVMGetIncomingValue;\n+    LLVMGetInitializer;\n+    LLVMGetInsertBlock;\n+    LLVMGetInstructionCallConv;\n+    LLVMGetInstructionParent;\n+    LLVMGetIntTypeWidth;\n+    LLVMGetIntrinsicID;\n+    LLVMGetLastBasicBlock;\n+    LLVMGetLastFunction;\n+    LLVMGetLastGlobal;\n+    LLVMGetLastInstruction;\n+    LLVMGetLastParam;\n+    LLVMGetLinkage;\n+    LLVMGetMDKindID;\n+    LLVMGetMDKindIDInContext;\n+    LLVMGetMetadata;\n+    LLVMGetModuleContext;\n+    LLVMGetNamedFunction;\n+    LLVMGetNamedGlobal;\n+    LLVMGetNextBasicBlock;\n+    LLVMGetNextFunction;\n+    LLVMGetNextGlobal;\n+    LLVMGetNextInstruction;\n+    LLVMGetNextParam;\n+    LLVMGetNextUse;\n+    LLVMGetNumOperands;\n+    LLVMGetOperand;\n+    LLVMGetParam;\n+    LLVMGetParamParent;\n+    LLVMGetParamTypes;\n+    LLVMGetParams;\n+    LLVMGetPointerAddressSpace;\n+    LLVMGetPointerToGlobal;\n+    LLVMGetPreviousBasicBlock;\n+    LLVMGetPreviousFunction;\n+    LLVMGetPreviousGlobal;\n+    LLVMGetPreviousInstruction;\n+    LLVMGetPreviousParam;\n+    LLVMGetReturnType;\n+    LLVMGetSection;\n+    LLVMGetSectionContents;\n+    LLVMGetSectionName;\n+    LLVMGetSectionSize;\n+    LLVMGetSections;\n+    LLVMGetStructElementTypes;\n+    LLVMGetTarget;\n+    LLVMGetTypeByName;\n+    LLVMGetTypeContext;\n+    LLVMGetTypeKind;\n+    LLVMGetTypeName;\n+    LLVMGetUndef;\n+    LLVMGetUsedValue;\n+    LLVMGetUser;\n+    LLVMGetValueName;\n+    LLVMGetVectorSize;\n+    LLVMGetVisibility;\n+    LLVMHasMetadata;\n+    LLVMInitializeCBackendTarget;\n+    LLVMInitializeCBackendTargetInfo;\n+    LLVMInitializeCodeGen;\n+    LLVMInitializeFunctionPassManager;\n+    LLVMInitializeIPA;\n+    LLVMInitializeInstCombine;\n+    LLVMInitializeInstrumentation;\n+    LLVMInitializeScalarOpts;\n+    LLVMInitializeTarget;\n+    LLVMInitializeTransformUtils;\n+    LLVMInitializeX86AsmLexer;\n+    LLVMInitializeX86AsmLexer;\n+    LLVMInitializeX86AsmParser;\n+    LLVMInitializeX86AsmParser;\n+    LLVMInitializeX86AsmPrinter;\n+    LLVMInitializeX86AsmPrinter;\n+    LLVMInitializeX86Disassembler;\n+    LLVMInitializeX86Disassembler;\n+    LLVMInitializeX86Target;\n+    LLVMInitializeX86Target;\n+    LLVMInitializeX86TargetInfo;\n+    LLVMInitializeX86TargetInfo;\n+    LLVMInsertBasicBlock;\n+    LLVMInsertBasicBlockInContext;\n+    LLVMInsertIntoBuilder;\n+    LLVMInsertIntoBuilderWithName;\n+    LLVMInt16Type;\n+    LLVMInt16TypeInContext;\n+    LLVMInt1Type;\n+    LLVMInt1TypeInContext;\n+    LLVMInt32Type;\n+    LLVMInt32TypeInContext;\n+    LLVMInt64Type;\n+    LLVMInt64TypeInContext;\n+    LLVMInt8Type;\n+    LLVMInt8TypeInContext;\n+    LLVMIntPtrType;\n+    LLVMIntType;\n+    LLVMIntTypeInContext;\n+    LLVMInvalidateStructLayout;\n+    LLVMIsAAllocaInst;\n+    LLVMIsAArgument;\n+    LLVMIsABasicBlock;\n+    LLVMIsABinaryOperator;\n+    LLVMIsABitCastInst;\n+    LLVMIsABranchInst;\n+    LLVMIsACallInst;\n+    LLVMIsACastInst;\n+    LLVMIsACmpInst;\n+    LLVMIsAConstant;\n+    LLVMIsAConstantAggregateZero;\n+    LLVMIsAConstantArray;\n+    LLVMIsAConstantExpr;\n+    LLVMIsAConstantFP;\n+    LLVMIsAConstantInt;\n+    LLVMIsAConstantPointerNull;\n+    LLVMIsAConstantStruct;\n+    LLVMIsAConstantVector;\n+    LLVMIsADbgDeclareInst;\n+    LLVMIsADbgInfoIntrinsic;\n+    LLVMIsAEHSelectorInst;\n+    LLVMIsAExtractElementInst;\n+    LLVMIsAExtractValueInst;\n+    LLVMIsAFCmpInst;\n+    LLVMIsAFPExtInst;\n+    LLVMIsAFPToSIInst;\n+    LLVMIsAFPToUIInst;\n+    LLVMIsAFPTruncInst;\n+    LLVMIsAFunction;\n+    LLVMIsAGetElementPtrInst;\n+    LLVMIsAGlobalAlias;\n+    LLVMIsAGlobalValue;\n+    LLVMIsAGlobalVariable;\n+    LLVMIsAICmpInst;\n+    LLVMIsAInlineAsm;\n+    LLVMIsAInsertElementInst;\n+    LLVMIsAInsertValueInst;\n+    LLVMIsAInstruction;\n+    LLVMIsAIntToPtrInst;\n+    LLVMIsAIntrinsicInst;\n+    LLVMIsAInvokeInst;\n+    LLVMIsALoadInst;\n+    LLVMIsAMemCpyInst;\n+    LLVMIsAMemIntrinsic;\n+    LLVMIsAMemMoveInst;\n+    LLVMIsAMemSetInst;\n+    LLVMIsAPHINode;\n+    LLVMIsAPtrToIntInst;\n+    LLVMIsAReturnInst;\n+    LLVMIsASExtInst;\n+    LLVMIsASIToFPInst;\n+    LLVMIsASelectInst;\n+    LLVMIsAShuffleVectorInst;\n+    LLVMIsAStoreInst;\n+    LLVMIsASwitchInst;\n+    LLVMIsATerminatorInst;\n+    LLVMIsATruncInst;\n+    LLVMIsAUIToFPInst;\n+    LLVMIsAUnaryInstruction;\n+    LLVMIsAUndefValue;\n+    LLVMIsAUnreachableInst;\n+    LLVMIsAUnwindInst;\n+    LLVMIsAUser;\n+    LLVMIsAVAArgInst;\n+    LLVMIsAZExtInst;\n+    LLVMIsConstant;\n+    LLVMIsDeclaration;\n+    LLVMIsFunctionVarArg;\n+    LLVMIsGlobalConstant;\n+    LLVMIsNull;\n+    LLVMIsPackedStruct;\n+    LLVMIsSectionIteratorAtEnd;\n+    LLVMIsTailCall;\n+    LLVMIsThreadLocal;\n+    LLVMIsUndef;\n+    LLVMLabelType;\n+    LLVMLabelTypeInContext;\n+    LLVMLinkInInterpreter;\n+    LLVMLinkInJIT;\n+    LLVMLinkInMCJIT;\n+    LLVMMDNode;\n+    LLVMMDNodeInContext;\n+    LLVMMDString;\n+    LLVMMDStringInContext;\n+    LLVMModuleCreateWithName;\n+    LLVMModuleCreateWithNameInContext;\n+    LLVMMoveBasicBlockAfter;\n+    LLVMMoveBasicBlockBefore;\n+    LLVMMoveToNextSection;\n+    LLVMOffsetOfElement;\n+    LLVMOpaqueType;\n+    LLVMOpaqueTypeInContext;\n+    LLVMPPCFP128Type;\n+    LLVMPPCFP128TypeInContext;\n+    LLVMParseBitcode;\n+    LLVMParseBitcodeInContext;\n+    LLVMPointerSize;\n+    LLVMPointerType;\n+    LLVMPositionBuilder;\n+    LLVMPositionBuilderAtEnd;\n+    LLVMPositionBuilderBefore;\n+    LLVMPreferredAlignmentOfGlobal;\n+    LLVMPreferredAlignmentOfType;\n+    LLVMRecompileAndRelinkFunction;\n+    LLVMRefineType;\n+    LLVMRemoveAttribute;\n+    LLVMRemoveFunctionAttr;\n+    LLVMRemoveInstrAttribute;\n+    LLVMRemoveModule;\n+    LLVMRemoveModuleProvider;\n+    LLVMReplaceAllUsesWith;\n+    LLVMResolveTypeHandle;\n+    LLVMRunFunction;\n+    LLVMRunFunctionAsMain;\n+    LLVMRunFunctionPassManager;\n+    LLVMRunPassManager;\n+    LLVMRunStaticConstructors;\n+    LLVMRunStaticDestructors;\n+    LLVMSetAlignment;\n+    LLVMSetCurrentDebugLocation;\n+    LLVMSetDataLayout;\n+    LLVMSetFunctionCallConv;\n+    LLVMSetGC;\n+    LLVMSetGlobalConstant;\n+    LLVMSetInitializer;\n+    LLVMSetInstDebugLocation;\n+    LLVMSetInstrParamAlignment;\n+    LLVMSetInstructionCallConv;\n+    LLVMSetLinkage;\n+    LLVMSetMetadata;\n+    LLVMSetModuleInlineAsm;\n+    LLVMSetOperand;\n+    LLVMSetParamAlignment;\n+    LLVMSetSection;\n+    LLVMSetTailCall;\n+    LLVMSetTarget;\n+    LLVMSetThreadLocal;\n+    LLVMSetValueName;\n+    LLVMSetVisibility;\n+    LLVMSizeOf;\n+    LLVMSizeOfTypeInBits;\n+    LLVMStoreSizeOfType;\n+    LLVMStructType;\n+    LLVMStructTypeInContext;\n+    LLVMTypeOf;\n+    LLVMValueAsBasicBlock;\n+    LLVMValueIsBasicBlock;\n+    LLVMVectorType;\n+    LLVMVerifyFunction;\n+    LLVMVerifyModule;\n+    LLVMViewFunctionCFG;\n+    LLVMViewFunctionCFGOnly;\n+    LLVMVoidType;\n+    LLVMVoidTypeInContext;\n+    LLVMWriteBitcodeToFD;\n+    LLVMWriteBitcodeToFile;\n+    LLVMWriteBitcodeToFileHandle;\n+    LLVMX86FP80Type;\n+    LLVMX86FP80TypeInContext;\n+    LLVMX86MMXType;\n+    LLVMX86MMXTypeInContext;\n+}\n+"}]}