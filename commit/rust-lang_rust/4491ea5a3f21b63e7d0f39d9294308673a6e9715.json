{"sha": "4491ea5a3f21b63e7d0f39d9294308673a6e9715", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0OTFlYTVhM2YyMWI2M2U3ZDBmMzlkOTI5NDMwODY3M2E2ZTk3MTU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-30T06:56:49Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-30T06:56:49Z"}, "message": "Auto merge of #44893 - spastorino:remove_new_and_index, r=nikomatsakis\n\nRemove new and index methods already implement for Idx\n\nThese are the rest of the repeated implementations for new and index methods. Follow up of https://github.com/rust-lang/rust/pull/44889", "tree": {"sha": "0ff04221845794e4443bf55da7979254e5ff463f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ff04221845794e4443bf55da7979254e5ff463f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4491ea5a3f21b63e7d0f39d9294308673a6e9715", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4491ea5a3f21b63e7d0f39d9294308673a6e9715", "html_url": "https://github.com/rust-lang/rust/commit/4491ea5a3f21b63e7d0f39d9294308673a6e9715", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4491ea5a3f21b63e7d0f39d9294308673a6e9715/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7041bfab3a83702a8026fb7a18d8ea7d54cc648", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7041bfab3a83702a8026fb7a18d8ea7d54cc648", "html_url": "https://github.com/rust-lang/rust/commit/b7041bfab3a83702a8026fb7a18d8ea7d54cc648"}, {"sha": "e0e14c9a5b141cb86c1b2cde85c35388ba63ad23", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0e14c9a5b141cb86c1b2cde85c35388ba63ad23", "html_url": "https://github.com/rust-lang/rust/commit/e0e14c9a5b141cb86c1b2cde85c35388ba63ad23"}], "stats": {"total": 26, "additions": 5, "deletions": 21}, "files": [{"sha": "d9770db9d69a2826b886fdce8d525c366fd677b6", "filename": "src/librustc/dep_graph/graph.rs", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4491ea5a3f21b63e7d0f39d9294308673a6e9715/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4491ea5a3f21b63e7d0f39d9294308673a6e9715/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fgraph.rs?ref=4491ea5a3f21b63e7d0f39d9294308673a6e9715", "patch": "@@ -569,28 +569,20 @@ pub(super) struct DepNodeIndexNew {\n }\n \n impl Idx for DepNodeIndexNew {\n-    fn new(idx: usize) -> Self {\n-        DepNodeIndexNew::new(idx)\n+    fn new(v: usize) -> DepNodeIndexNew {\n+        assert!((v & 0xFFFF_FFFF) == v);\n+        DepNodeIndexNew { index: v as u32 }\n     }\n+\n     fn index(self) -> usize {\n-        self.index()\n+        self.index as usize\n     }\n }\n \n impl DepNodeIndexNew {\n-\n     const INVALID: DepNodeIndexNew = DepNodeIndexNew {\n         index: ::std::u32::MAX,\n     };\n-\n-    fn new(v: usize) -> DepNodeIndexNew {\n-        assert!((v & 0xFFFF_FFFF) == v);\n-        DepNodeIndexNew { index: v as u32 }\n-    }\n-\n-    fn index(self) -> usize {\n-        self.index as usize\n-    }\n }\n \n #[derive(Clone, Debug, PartialEq)]"}, {"sha": "6110c270086fe0b1d11ee75a1cecf64325b570c6", "filename": "src/librustc/dep_graph/serialized.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4491ea5a3f21b63e7d0f39d9294308673a6e9715/src%2Flibrustc%2Fdep_graph%2Fserialized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4491ea5a3f21b63e7d0f39d9294308673a6e9715/src%2Flibrustc%2Fdep_graph%2Fserialized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fserialized.rs?ref=4491ea5a3f21b63e7d0f39d9294308673a6e9715", "patch": "@@ -19,14 +19,6 @@ use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n          RustcEncodable, RustcDecodable)]\n pub struct SerializedDepNodeIndex(pub u32);\n \n-impl SerializedDepNodeIndex {\n-    #[inline]\n-    pub fn new(idx: usize) -> SerializedDepNodeIndex {\n-        assert!(idx <= ::std::u32::MAX as usize);\n-        SerializedDepNodeIndex(idx as u32)\n-    }\n-}\n-\n impl Idx for SerializedDepNodeIndex {\n     #[inline]\n     fn new(idx: usize) -> Self {"}]}