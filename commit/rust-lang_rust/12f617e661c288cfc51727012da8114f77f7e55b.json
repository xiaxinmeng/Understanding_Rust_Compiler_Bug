{"sha": "12f617e661c288cfc51727012da8114f77f7e55b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyZjYxN2U2NjFjMjg4Y2ZjNTE3MjcwMTJkYTgxMTRmNzdmN2U1NWI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-09-28T15:51:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-28T15:51:02Z"}, "message": "Merge #1932\n\n1932: correctly reset chalk state after a panic r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "872d7fcd8cfc5ec7e1a1ec15aacfbc3e9c6a9ff0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/872d7fcd8cfc5ec7e1a1ec15aacfbc3e9c6a9ff0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12f617e661c288cfc51727012da8114f77f7e55b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdj4FmCRBK7hj4Ov3rIwAAdHIIAAr/HLri3A1bdWpiUSHX9h3N\nKFbMiJVl9wrtLGVipYtThu2Xi8Mhq6C7NfhKkVBlz5vCj0JYSa4dRVj68P2UWKq4\natUb2SB0Z1Zsj9w5u9oCRlMeA+79deiCtxqf4QEwfsqz9tMCTBalJKRhm/KE9YkM\ndJ4FFBN1qpSo76n7h+E/g11nf9b6QxxYRu7AL5PZdN6yi09xa4/b7An1VY6PEx3l\nvocHLnzhTuO/F4KOUa3ykPw95g6htOuEPfa5/VIrBg73iioHaIlaaAZoAjrsi6mx\ntB1/pgVPjTxVjimkfA86yL8oYHT70usaEd0kwf71h+nwhsv06zwB7+kSp27J7q0=\n=tvsK\n-----END PGP SIGNATURE-----\n", "payload": "tree 872d7fcd8cfc5ec7e1a1ec15aacfbc3e9c6a9ff0\nparent 21fa889cf3f70c507e3b9f2f6362e65cbb8ed955\nparent e60677178ed27254211958b1f54ff73b4588ab5b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1569685862 +0000\ncommitter GitHub <noreply@github.com> 1569685862 +0000\n\nMerge #1932\n\n1932: correctly reset chalk state after a panic r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12f617e661c288cfc51727012da8114f77f7e55b", "html_url": "https://github.com/rust-lang/rust/commit/12f617e661c288cfc51727012da8114f77f7e55b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12f617e661c288cfc51727012da8114f77f7e55b/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21fa889cf3f70c507e3b9f2f6362e65cbb8ed955", "url": "https://api.github.com/repos/rust-lang/rust/commits/21fa889cf3f70c507e3b9f2f6362e65cbb8ed955", "html_url": "https://github.com/rust-lang/rust/commit/21fa889cf3f70c507e3b9f2f6362e65cbb8ed955"}, {"sha": "e60677178ed27254211958b1f54ff73b4588ab5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e60677178ed27254211958b1f54ff73b4588ab5b", "html_url": "https://github.com/rust-lang/rust/commit/e60677178ed27254211958b1f54ff73b4588ab5b"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "b0f67ae501d88a1f6df7332ffff69d4205c48c24", "filename": "crates/ra_hir/src/ty/traits.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/12f617e661c288cfc51727012da8114f77f7e55b/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12f617e661c288cfc51727012da8114f77f7e55b/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs?ref=12f617e661c288cfc51727012da8114f77f7e55b", "patch": "@@ -1,9 +1,8 @@\n //! Trait solving using Chalk.\n-use std::sync::Arc;\n+use std::sync::{Arc, Mutex};\n \n use chalk_ir::cast::Cast;\n use log::debug;\n-use parking_lot::Mutex;\n use ra_db::salsa;\n use ra_prof::profile;\n use rustc_hash::FxHashSet;\n@@ -30,9 +29,6 @@ impl PartialEq for TraitSolver {\n \n impl Eq for TraitSolver {}\n \n-// FIXME: this impl is WRONG, chalk is not RefUnwindSafe, and this causes #1927\n-impl std::panic::RefUnwindSafe for TraitSolver {}\n-\n impl TraitSolver {\n     fn solve(\n         &self,\n@@ -41,7 +37,14 @@ impl TraitSolver {\n     ) -> Option<chalk_solve::Solution> {\n         let context = ChalkContext { db, krate: self.krate };\n         debug!(\"solve goal: {:?}\", goal);\n-        let solution = self.inner.lock().solve(&context, goal);\n+        let mut solver = match self.inner.lock() {\n+            Ok(it) => it,\n+            // Our cancellation works via unwinding, but, as chalk is not\n+            // panic-safe, we need to make sure to propagate the cancellation.\n+            // Ideally, we should also make chalk panic-safe.\n+            Err(_) => ra_db::Canceled::throw(),\n+        };\n+        let solution = solver.solve(&context, goal);\n         debug!(\"solve({:?}) => {:?}\", goal, solution);\n         solution\n     }"}]}