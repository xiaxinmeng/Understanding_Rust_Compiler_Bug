{"sha": "577f70cc9ccd7442d3a33da50ab152ef566d5cbc", "node_id": "C_kwDOAAsO6NoAKDU3N2Y3MGNjOWNjZDc0NDJkM2EzM2RhNTBhYjE1MmVmNTY2ZDVjYmM", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2022-02-09T16:43:37Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2022-02-09T16:43:37Z"}, "message": "Reduce visibility", "tree": {"sha": "b6b27c72cbfdd1d3c244d71a12d3d2ec01d1fa9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6b27c72cbfdd1d3c244d71a12d3d2ec01d1fa9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/577f70cc9ccd7442d3a33da50ab152ef566d5cbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/577f70cc9ccd7442d3a33da50ab152ef566d5cbc", "html_url": "https://github.com/rust-lang/rust/commit/577f70cc9ccd7442d3a33da50ab152ef566d5cbc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/577f70cc9ccd7442d3a33da50ab152ef566d5cbc/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfd2cef0d0a8d3fa8b76eb1a5553658e40c33667", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfd2cef0d0a8d3fa8b76eb1a5553658e40c33667", "html_url": "https://github.com/rust-lang/rust/commit/dfd2cef0d0a8d3fa8b76eb1a5553658e40c33667"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "24b942f8fa53fe3f5b368405ce58ec4fd5424f0d", "filename": "crates/hir_expand/src/fixup.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/577f70cc9ccd7442d3a33da50ab152ef566d5cbc/crates%2Fhir_expand%2Fsrc%2Ffixup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/577f70cc9ccd7442d3a33da50ab152ef566d5cbc/crates%2Fhir_expand%2Fsrc%2Ffixup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Ffixup.rs?ref=577f70cc9ccd7442d3a33da50ab152ef566d5cbc", "patch": "@@ -14,12 +14,12 @@ use tt::Subtree;\n /// (appending to and replacing nodes), the information that is needed to\n /// reverse those changes afterwards, and a token map.\n #[derive(Debug)]\n-pub struct SyntaxFixups {\n-    pub append: FxHashMap<SyntaxNode, Vec<SyntheticToken>>,\n-    pub replace: FxHashMap<SyntaxNode, Vec<SyntheticToken>>,\n-    pub undo_info: SyntaxFixupUndoInfo,\n-    pub token_map: TokenMap,\n-    pub next_id: u32,\n+pub(crate) struct SyntaxFixups {\n+    pub(crate) append: FxHashMap<SyntaxNode, Vec<SyntheticToken>>,\n+    pub(crate) replace: FxHashMap<SyntaxNode, Vec<SyntheticToken>>,\n+    pub(crate) undo_info: SyntaxFixupUndoInfo,\n+    pub(crate) token_map: TokenMap,\n+    pub(crate) next_id: u32,\n }\n \n /// This is the information needed to reverse the fixups.\n@@ -30,7 +30,7 @@ pub struct SyntaxFixupUndoInfo {\n \n const EMPTY_ID: SyntheticTokenId = SyntheticTokenId(!0);\n \n-pub fn fixup_syntax(node: &SyntaxNode) -> SyntaxFixups {\n+pub(crate) fn fixup_syntax(node: &SyntaxNode) -> SyntaxFixups {\n     let mut append = FxHashMap::default();\n     let mut replace = FxHashMap::default();\n     let mut preorder = node.preorder();\n@@ -122,7 +122,7 @@ fn has_error_to_handle(node: &SyntaxNode) -> bool {\n     has_error(node) || node.children().any(|c| !can_handle_error(&c) && has_error_to_handle(&c))\n }\n \n-pub fn reverse_fixups(tt: &mut Subtree, token_map: &TokenMap, undo_info: &SyntaxFixupUndoInfo) {\n+pub(crate) fn reverse_fixups(tt: &mut Subtree, token_map: &TokenMap, undo_info: &SyntaxFixupUndoInfo) {\n     tt.token_trees.retain(|tt| match tt {\n         tt::TokenTree::Leaf(leaf) => {\n             token_map.synthetic_token_id(leaf.id()).is_none()"}]}