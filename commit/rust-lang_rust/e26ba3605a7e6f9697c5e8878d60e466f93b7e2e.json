{"sha": "e26ba3605a7e6f9697c5e8878d60e466f93b7e2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyNmJhMzYwNWE3ZTZmOTY5N2M1ZTg4NzhkNjBlNDY2ZjkzYjdlMmU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-22T00:32:49Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-22T00:35:05Z"}, "message": "mk: Get \"make check\" passing with --disable-rpath\n\nThis involves passing through LD_LIBRARY_PATH through more places, specifically\nin the compiletest, run-make, and doctest runners.", "tree": {"sha": "d68f98cfbd2c3610b323dfbedbb9c5b38a0f6d26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d68f98cfbd2c3610b323dfbedbb9c5b38a0f6d26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e26ba3605a7e6f9697c5e8878d60e466f93b7e2e", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e26ba3605a7e6f9697c5e8878d60e466f93b7e2e", "html_url": "https://github.com/rust-lang/rust/commit/e26ba3605a7e6f9697c5e8878d60e466f93b7e2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e26ba3605a7e6f9697c5e8878d60e466f93b7e2e/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78d4bf851cd2997ea6193ed686d8586e81b94a93", "url": "https://api.github.com/repos/rust-lang/rust/commits/78d4bf851cd2997ea6193ed686d8586e81b94a93", "html_url": "https://github.com/rust-lang/rust/commit/78d4bf851cd2997ea6193ed686d8586e81b94a93"}], "stats": {"total": 49, "additions": 35, "deletions": 14}, "files": [{"sha": "e52704c0fd3a978891363c8eedd31d71ddac59ad", "filename": "mk/main.mk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e26ba3605a7e6f9697c5e8878d60e466f93b7e2e/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/e26ba3605a7e6f9697c5e8878d60e466f93b7e2e/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=e26ba3605a7e6f9697c5e8878d60e466f93b7e2e", "patch": "@@ -341,10 +341,10 @@ endif\n ifdef CFG_DISABLE_RPATH\n ifeq ($$(OSTYPE_$(3)),apple-darwin)\n   RPATH_VAR$(1)_T_$(2)_H_$(3) := \\\n-      DYLD_LIBRARY_PATH=\"$$$$DYLD_LIBRARY_PATH:$$(HLIB$(1)_H_$(3))\"\n+      DYLD_LIBRARY_PATH=\"$$$$DYLD_LIBRARY_PATH:$$(CURDIR)/$$(HLIB$(1)_H_$(3))\"\n else\n   RPATH_VAR$(1)_T_$(2)_H_$(3) := \\\n-      LD_LIBRARY_PATH=\"$$$$LD_LIBRARY_PATH:$$(HLIB$(1)_H_$(3))\"\n+      LD_LIBRARY_PATH=\"$$$$LD_LIBRARY_PATH:$$(CURDIR)/$$(HLIB$(1)_H_$(3))\"\n endif\n else\n     RPATH_VAR$(1)_T_$(2)_H_$(3) :="}, {"sha": "4d152b3c3884b7c06bd8f96652dcba179fc366e0", "filename": "mk/tests.mk", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e26ba3605a7e6f9697c5e8878d60e466f93b7e2e/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/e26ba3605a7e6f9697c5e8878d60e466f93b7e2e/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=e26ba3605a7e6f9697c5e8878d60e466f93b7e2e", "patch": "@@ -706,8 +706,9 @@ check-stage$(1)-T-$(2)-H-$(3)-doc-$(4)-exec: $$(call TEST_OK_FILE,$(1),$(2),$(3)\n ifeq ($(2),$$(CFG_BUILD))\n $$(call TEST_OK_FILE,$(1),$(2),$(3),doc-$(4)): $$(DOCTESTDEP_$(1)_$(2)_$(3)_$(4))\n \t@$$(call E, run doc-$(4) [$(2)])\n-\t$$(Q)$$(HBIN$(1)_H_$(3))/rustdoc$$(X_$(3)) --test \\\n-\t    $$(CRATEFILE_$(4)) --test-args \"$$(TESTARGS)\" && touch $$@\n+\t$$(Q)$$(RPATH_VAR$(1)_T_$(2)_H_$(3)) \\\n+\t\t$$(HBIN$(1)_H_$(3))/rustdoc$$(X_$(3)) --test \\\n+\t    \t$$(CRATEFILE_$(4)) --test-args \"$$(TESTARGS)\" && touch $$@\n else\n $$(call TEST_OK_FILE,$(1),$(2),$(3),doc-$(4)):\n \ttouch $$@\n@@ -934,7 +935,8 @@ $(3)/test/run-make/%-$(1)-T-$(2)-H-$(3).ok: \\\n \t    $(3)/test/run-make/$$* \\\n \t    \"$$(CC_$(3)) $$(CFG_GCCISH_CFLAGS_$(3))\" \\\n \t    $$(HBIN$(1)_H_$(3))/rustdoc$$(X_$(3)) \\\n-\t    \"$$(TESTNAME)\"\n+\t    \"$$(TESTNAME)\" \\\n+\t    \"$$(RPATH_VAR$(1)_T_$(2)_H_$(3))\"\n \t@touch $$@\n else\n # FIXME #11094 - The above rule doesn't work right for multiple targets"}, {"sha": "f3b53ce1c2a46d16be916d8b1551404462288259", "filename": "src/compiletest/procsrv.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e26ba3605a7e6f9697c5e8878d60e466f93b7e2e/src%2Fcompiletest%2Fprocsrv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e26ba3605a7e6f9697c5e8878d60e466f93b7e2e/src%2Fcompiletest%2Fprocsrv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fprocsrv.rs?ref=e26ba3605a7e6f9697c5e8878d60e466f93b7e2e", "patch": "@@ -36,8 +36,26 @@ fn target_env(lib_path: &str, prog: &str) -> ~[(~str,~str)] {\n #[cfg(target_os = \"linux\")]\n #[cfg(target_os = \"macos\")]\n #[cfg(target_os = \"freebsd\")]\n-fn target_env(_lib_path: &str, _prog: &str) -> ~[(~str,~str)] {\n-    os::env()\n+fn target_env(lib_path: &str, prog: &str) -> ~[(~str,~str)] {\n+    // Make sure we include the aux directory in the path\n+    let aux_path = prog + \".libaux\";\n+\n+    let mut env = os::env();\n+    let var = if cfg!(target_os = \"macos\") {\n+        \"DYLD_LIBRARY_PATH\"\n+    } else {\n+        \"LD_LIBRARY_PATH\"\n+    };\n+    let prev = match env.iter().position(|&(ref k, _)| k.as_slice() == var) {\n+        Some(i) => env.remove(i).unwrap().val1(),\n+        None => ~\"\",\n+    };\n+    env.push((var.to_owned(), if prev.is_empty() {\n+        lib_path + \":\" + aux_path\n+    } else {\n+        lib_path + \":\" + aux_path + \":\" + prev\n+    }));\n+    return env;\n }\n \n pub struct Result {status: ProcessExit, out: ~str, err: ~str}"}, {"sha": "8afe6cf987a1cad52d70013c42875d344720d7dc", "filename": "src/etc/maketest.py", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e26ba3605a7e6f9697c5e8878d60e466f93b7e2e/src%2Fetc%2Fmaketest.py", "raw_url": "https://github.com/rust-lang/rust/raw/e26ba3605a7e6f9697c5e8878d60e466f93b7e2e/src%2Fetc%2Fmaketest.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmaketest.py?ref=e26ba3605a7e6f9697c5e8878d60e466f93b7e2e", "patch": "@@ -17,6 +17,9 @@\n os.putenv('CC', sys.argv[4])\n os.putenv('RUSTDOC', os.path.abspath(sys.argv[5]))\n filt = sys.argv[6]\n+ldpath = sys.argv[7]\n+if ldpath != '':\n+    os.putenv(ldpath.split('=')[0], ldpath.split('=')[1])\n \n if not filt in sys.argv[1]:\n     sys.exit(0)"}, {"sha": "2144a2ca57481abd7e8f038346f16e16d789f643", "filename": "src/test/run-make/bootstrap-from-c-with-green/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e26ba3605a7e6f9697c5e8878d60e466f93b7e2e/src%2Ftest%2Frun-make%2Fbootstrap-from-c-with-green%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/e26ba3605a7e6f9697c5e8878d60e466f93b7e2e/src%2Ftest%2Frun-make%2Fbootstrap-from-c-with-green%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fbootstrap-from-c-with-green%2FMakefile?ref=e26ba3605a7e6f9697c5e8878d60e466f93b7e2e", "patch": "@@ -3,7 +3,7 @@\n all:\n \t$(RUSTC) lib.rs -C gen-crate-map\n \tln -nsf $(call DYLIB,boot-*) $(call DYLIB,boot)\n-\t$(CC) main.c -o $(call RUN,main) -lboot -Wl,-rpath,$(TMPDIR)\n+\t$(CC) main.c -o $(call RUN,main) -lboot\n \t$(call RUN,main)\n \trm $(call DYLIB,boot)\n \t$(call FAIL,main)"}, {"sha": "2144a2ca57481abd7e8f038346f16e16d789f643", "filename": "src/test/run-make/bootstrap-from-c-with-native/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e26ba3605a7e6f9697c5e8878d60e466f93b7e2e/src%2Ftest%2Frun-make%2Fbootstrap-from-c-with-native%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/e26ba3605a7e6f9697c5e8878d60e466f93b7e2e/src%2Ftest%2Frun-make%2Fbootstrap-from-c-with-native%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fbootstrap-from-c-with-native%2FMakefile?ref=e26ba3605a7e6f9697c5e8878d60e466f93b7e2e", "patch": "@@ -3,7 +3,7 @@\n all:\n \t$(RUSTC) lib.rs -C gen-crate-map\n \tln -nsf $(call DYLIB,boot-*) $(call DYLIB,boot)\n-\t$(CC) main.c -o $(call RUN,main) -lboot -Wl,-rpath,$(TMPDIR)\n+\t$(CC) main.c -o $(call RUN,main) -lboot\n \t$(call RUN,main)\n \trm $(call DYLIB,boot)\n \t$(call FAIL,main)"}, {"sha": "2b2e5d56e92da29cf4b51e0821c714c8c75cfc93", "filename": "src/test/run-make/c-dynamic-dylib/Makefile", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e26ba3605a7e6f9697c5e8878d60e466f93b7e2e/src%2Ftest%2Frun-make%2Fc-dynamic-dylib%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/e26ba3605a7e6f9697c5e8878d60e466f93b7e2e/src%2Ftest%2Frun-make%2Fc-dynamic-dylib%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fc-dynamic-dylib%2FMakefile?ref=e26ba3605a7e6f9697c5e8878d60e466f93b7e2e", "patch": "@@ -1,10 +1,5 @@\n -include ../tools.mk\n \n-# needed so that libfoo can find libcfoo\n-ifeq ($(shell uname),Linux)\n-export LD_LIBRARY_PATH := $(TMPDIR)\n-endif\n-\n # This hits an assertion in the linker on older versions of osx apparently\n ifeq ($(shell uname),Darwin)\n all:"}, {"sha": "26e6e06c2ed8a007ddb58382a902af74846cdb4b", "filename": "src/test/run-make/tools.mk", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e26ba3605a7e6f9697c5e8878d60e466f93b7e2e/src%2Ftest%2Frun-make%2Ftools.mk", "raw_url": "https://github.com/rust-lang/rust/raw/e26ba3605a7e6f9697c5e8878d60e466f93b7e2e/src%2Ftest%2Frun-make%2Ftools.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Ftools.mk?ref=e26ba3605a7e6f9697c5e8878d60e466f93b7e2e", "patch": "@@ -1,3 +1,6 @@\n+export LD_LIBRARY_PATH:=$(TMPDIR):$(LD_LIBRARY_PATH)\n+export DYLD_LIBRARY_PATH:=$(TMPDIR):$(DYLD_LIBRARY_PATH)\n+\n RUSTC := $(RUSTC) --out-dir $(TMPDIR) -L $(TMPDIR)\n CC := $(CC) -L $(TMPDIR)\n "}]}