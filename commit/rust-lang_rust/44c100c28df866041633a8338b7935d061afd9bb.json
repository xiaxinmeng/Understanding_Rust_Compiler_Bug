{"sha": "44c100c28df866041633a8338b7935d061afd9bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0YzEwMGMyOGRmODY2MDQxNjMzYTgzMzhiNzkzNWQwNjFhZmQ5YmI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-05-11T21:15:57Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-05-19T03:00:50Z"}, "message": "try to improve handling of methods", "tree": {"sha": "d35159ad68a3a70baf5db53b762d7baccab740eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d35159ad68a3a70baf5db53b762d7baccab740eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44c100c28df866041633a8338b7935d061afd9bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44c100c28df866041633a8338b7935d061afd9bb", "html_url": "https://github.com/rust-lang/rust/commit/44c100c28df866041633a8338b7935d061afd9bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44c100c28df866041633a8338b7935d061afd9bb/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da204e1d733ad1dbe794b7d9f5ce2badab7f8993", "url": "https://api.github.com/repos/rust-lang/rust/commits/da204e1d733ad1dbe794b7d9f5ce2badab7f8993", "html_url": "https://github.com/rust-lang/rust/commit/da204e1d733ad1dbe794b7d9f5ce2badab7f8993"}], "stats": {"total": 42, "additions": 29, "deletions": 13}, "files": [{"sha": "43ad0c89367b594fa7fdd3678b8512d6ff7486de", "filename": "src/rustc/middle/borrowck.rs", "status": "modified", "additions": 29, "deletions": 13, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/44c100c28df866041633a8338b7935d061afd9bb/src%2Frustc%2Fmiddle%2Fborrowck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44c100c28df866041633a8338b7935d061afd9bb/src%2Frustc%2Fmiddle%2Fborrowck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fborrowck.rs?ref=44c100c28df866041633a8338b7935d061afd9bb", "patch": "@@ -11,6 +11,7 @@ import std::list::{list, cons, nil};\n import result::{result, ok, err, extensions};\n import syntax::print::pprust;\n import util::common::indenter;\n+import ast_util::op_expr_callee_id;\n \n export check_crate, root_map, mutbl_map;\n \n@@ -301,7 +302,7 @@ impl methods for gather_loan_ctxt {\n               _ {\n                 self.bccx.span_err(\n                     cmt.span,\n-                    #fmt[\"Cannot guarantee the stability \\\n+                    #fmt[\"cannot guarantee the stability \\\n                           of this expression for the entirety of \\\n                           its lifetime, %s\",\n                          region_to_str(self.tcx(), scope_r)]);\n@@ -989,21 +990,30 @@ impl categorize_methods for borrowck_ctxt {\n         }\n     }\n \n-    fn cat_expr(expr: @ast::expr) -> cmt {\n-        let tcx = self.tcx;\n-        let expr_ty = tcx.ty(expr);\n+    fn cat_method_ref(expr: @ast::expr, expr_ty: ty::t) -> cmt {\n+        @{id:expr.id, span:expr.span,\n+          cat:cat_special(sk_method), lp:none,\n+          mutbl:m_imm, ty:expr_ty}\n+    }\n \n+    fn cat_rvalue(expr: @ast::expr, expr_ty: ty::t) -> cmt {\n+        @{id:expr.id, span:expr.span,\n+          cat:cat_rvalue, lp:none,\n+          mutbl:m_imm, ty:expr_ty}\n+    }\n+\n+    fn cat_expr(expr: @ast::expr) -> cmt {\n         #debug[\"cat_expr: id=%d expr=%s\",\n                expr.id, pprust::expr_to_str(expr)];\n \n-        if self.method_map.contains_key(expr.id) {\n-            ret @{id:expr.id, span:expr.span,\n-                  cat:cat_special(sk_method), lp:none,\n-                  mutbl:m_imm, ty:expr_ty};\n-        }\n-\n+        let tcx = self.tcx;\n+        let expr_ty = tcx.ty(expr);\n         alt expr.node {\n           ast::expr_unary(ast::deref, e_base) {\n+            if self.method_map.contains_key(expr.id) {\n+                ret self.cat_rvalue(expr, expr_ty);\n+            }\n+\n             let base_cmt = self.cat_expr(e_base);\n             alt self.cat_deref(expr, base_cmt, 0u, true) {\n               some(cmt) { ret cmt; }\n@@ -1017,11 +1027,19 @@ impl categorize_methods for borrowck_ctxt {\n           }\n \n           ast::expr_field(base, f_name, _) {\n+            if self.method_map.contains_key(expr.id) {\n+                ret self.cat_method_ref(expr, expr_ty);\n+            }\n+\n             let base_cmt = self.cat_autoderef(base);\n             self.cat_field(expr, base_cmt, f_name)\n           }\n \n           ast::expr_index(base, _) {\n+            if self.method_map.contains_key(expr.id) {\n+                ret self.cat_rvalue(expr, expr_ty);\n+            }\n+\n             self.cat_index(expr, base)\n           }\n \n@@ -1042,9 +1060,7 @@ impl categorize_methods for borrowck_ctxt {\n           ast::expr_block(*) | ast::expr_loop(*) | ast::expr_alt(*) |\n           ast::expr_lit(*) | ast::expr_break | ast::expr_mac(*) |\n           ast::expr_cont | ast::expr_rec(*) {\n-            @{id:expr.id, span:expr.span,\n-              cat:cat_rvalue, lp:none,\n-              mutbl:m_imm, ty:expr_ty}\n+            ret self.cat_rvalue(expr, expr_ty);\n           }\n         }\n     }"}]}