{"sha": "061d345c1657a86a9d94e90f916a0be8c966d062", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2MWQzNDVjMTY1N2E4NmE5ZDk0ZTkwZjkxNmEwYmU4Yzk2NmQwNjI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2018-10-23T00:04:31Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2018-11-10T00:07:32Z"}, "message": "constify parts of liballoc.", "tree": {"sha": "dfc9d4aca8f75be75af84c9adb5bddfb6ecf8fbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfc9d4aca8f75be75af84c9adb5bddfb6ecf8fbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/061d345c1657a86a9d94e90f916a0be8c966d062", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/061d345c1657a86a9d94e90f916a0be8c966d062", "html_url": "https://github.com/rust-lang/rust/commit/061d345c1657a86a9d94e90f916a0be8c966d062", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/061d345c1657a86a9d94e90f916a0be8c966d062/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b89877dda5b8267f1ec35dfc9bb6ddc4472f006", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b89877dda5b8267f1ec35dfc9bb6ddc4472f006", "html_url": "https://github.com/rust-lang/rust/commit/5b89877dda5b8267f1ec35dfc9bb6ddc4472f006"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "e7e741dea4ce33830343e35d052d41f534c738e6", "filename": "src/liballoc/collections/binary_heap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/061d345c1657a86a9d94e90f916a0be8c966d062/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/061d345c1657a86a9d94e90f916a0be8c966d062/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs?ref=061d345c1657a86a9d94e90f916a0be8c966d062", "patch": "@@ -884,7 +884,7 @@ impl<'a, T> Hole<'a, T> {\n     }\n \n     #[inline]\n-    fn pos(&self) -> usize {\n+    const fn pos(&self) -> usize {\n         self.pos\n     }\n "}, {"sha": "8a721a50b4689cf5ac9456f731b1e252290693a6", "filename": "src/liballoc/collections/btree/map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/061d345c1657a86a9d94e90f916a0be8c966d062/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/061d345c1657a86a9d94e90f916a0be8c966d062/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs?ref=061d345c1657a86a9d94e90f916a0be8c966d062", "patch": "@@ -2074,7 +2074,7 @@ impl<K, V> BTreeMap<K, V> {\n     /// assert_eq!(a.len(), 1);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn len(&self) -> usize {\n+    pub const fn len(&self) -> usize {\n         self.length\n     }\n \n@@ -2093,7 +2093,7 @@ impl<K, V> BTreeMap<K, V> {\n     /// assert!(!a.is_empty());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn is_empty(&self) -> bool {\n+    pub const fn is_empty(&self) -> bool {\n         self.len() == 0\n     }\n }"}, {"sha": "10665b8e46334f1a9962cb781aefece86fb0e73f", "filename": "src/liballoc/collections/btree/node.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/061d345c1657a86a9d94e90f916a0be8c966d062/src%2Fliballoc%2Fcollections%2Fbtree%2Fnode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/061d345c1657a86a9d94e90f916a0be8c966d062/src%2Fliballoc%2Fcollections%2Fbtree%2Fnode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbtree%2Fnode.rs?ref=061d345c1657a86a9d94e90f916a0be8c966d062", "patch": "@@ -357,7 +357,7 @@ impl<BorrowType, K, V, Type> NodeRef<BorrowType, K, V, Type> {\n \n     /// Returns the height of this node in the whole tree. Zero height denotes the\n     /// leaf level.\n-    pub fn height(&self) -> usize {\n+    pub const fn height(&self) -> usize {\n         self.height\n     }\n "}, {"sha": "6a0ecfd3f58154052facef4694020287cc9f2feb", "filename": "src/liballoc/collections/btree/set.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/061d345c1657a86a9d94e90f916a0be8c966d062/src%2Fliballoc%2Fcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/061d345c1657a86a9d94e90f916a0be8c966d062/src%2Fliballoc%2Fcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbtree%2Fset.rs?ref=061d345c1657a86a9d94e90f916a0be8c966d062", "patch": "@@ -730,7 +730,7 @@ impl<T> BTreeSet<T> {\n     /// assert_eq!(v.len(), 1);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn len(&self) -> usize {\n+    pub const fn len(&self) -> usize {\n         self.map.len()\n     }\n \n@@ -747,7 +747,7 @@ impl<T> BTreeSet<T> {\n     /// assert!(!v.is_empty());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn is_empty(&self) -> bool {\n+    pub const fn is_empty(&self) -> bool {\n         self.len() == 0\n     }\n }"}, {"sha": "9b2975b81a3c738001d877b34ed6db3a2d773707", "filename": "src/liballoc/collections/linked_list.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/061d345c1657a86a9d94e90f916a0be8c966d062/src%2Fliballoc%2Fcollections%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/061d345c1657a86a9d94e90f916a0be8c966d062/src%2Fliballoc%2Fcollections%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Flinked_list.rs?ref=061d345c1657a86a9d94e90f916a0be8c966d062", "patch": "@@ -135,7 +135,7 @@ impl<T: fmt::Debug> fmt::Debug for IntoIter<T> {\n }\n \n impl<T> Node<T> {\n-    fn new(element: T) -> Self {\n+    const fn new(element: T) -> Self {\n         Node {\n             next: None,\n             prev: None,\n@@ -264,7 +264,7 @@ impl<T> LinkedList<T> {\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn new() -> Self {\n+    pub const fn new() -> Self {\n         LinkedList {\n             head: None,\n             tail: None,\n@@ -341,7 +341,7 @@ impl<T> LinkedList<T> {\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn iter(&self) -> Iter<T> {\n+    pub const fn iter(&self) -> Iter<T> {\n         Iter {\n             head: self.head,\n             tail: self.tail,\n@@ -401,8 +401,8 @@ impl<T> LinkedList<T> {\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn is_empty(&self) -> bool {\n-        self.head.is_none()\n+    pub const fn is_empty(&self) -> bool {\n+        self.len() == 0\n     }\n \n     /// Returns the length of the `LinkedList`.\n@@ -427,7 +427,7 @@ impl<T> LinkedList<T> {\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn len(&self) -> usize {\n+    pub const fn len(&self) -> usize {\n         self.len\n     }\n "}, {"sha": "b139b440fe16004c59ab4d74df9a4d224514bec3", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/061d345c1657a86a9d94e90f916a0be8c966d062/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/061d345c1657a86a9d94e90f916a0be8c966d062/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=061d345c1657a86a9d94e90f916a0be8c966d062", "patch": "@@ -933,7 +933,7 @@ impl<T> VecDeque<T> {\n     /// assert!(!v.is_empty());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn is_empty(&self) -> bool {\n+    pub const fn is_empty(&self) -> bool {\n         self.tail == self.head\n     }\n \n@@ -1275,7 +1275,7 @@ impl<T> VecDeque<T> {\n     }\n \n     #[inline]\n-    fn is_contiguous(&self) -> bool {\n+    const fn is_contiguous(&self) -> bool {\n         self.tail <= self.head\n     }\n "}, {"sha": "0b6f400a403038667a22f9c4b87f73a735ca5075", "filename": "src/liballoc/raw_vec.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/061d345c1657a86a9d94e90f916a0be8c966d062/src%2Fliballoc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/061d345c1657a86a9d94e90f916a0be8c966d062/src%2Fliballoc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fraw_vec.rs?ref=061d345c1657a86a9d94e90f916a0be8c966d062", "patch": "@@ -204,7 +204,7 @@ impl<T, A: Alloc> RawVec<T, A> {\n     /// Gets a raw pointer to the start of the allocation. Note that this is\n     /// Unique::empty() if `cap = 0` or T is zero-sized. In the former case, you must\n     /// be careful.\n-    pub fn ptr(&self) -> *mut T {\n+    pub const fn ptr(&self) -> *mut T {\n         self.ptr.as_ptr()\n     }\n \n@@ -221,7 +221,7 @@ impl<T, A: Alloc> RawVec<T, A> {\n     }\n \n     /// Returns a shared reference to the allocator backing this RawVec.\n-    pub fn alloc(&self) -> &A {\n+    pub const fn alloc(&self) -> &A {\n         &self.a\n     }\n "}, {"sha": "8f379c4cfb4593051adffd01ee2751412c6bb004", "filename": "src/liballoc/string.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/061d345c1657a86a9d94e90f916a0be8c966d062/src%2Fliballoc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/061d345c1657a86a9d94e90f916a0be8c966d062/src%2Fliballoc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstring.rs?ref=061d345c1657a86a9d94e90f916a0be8c966d062", "patch": "@@ -1374,7 +1374,7 @@ impl String {\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn len(&self) -> usize {\n+    pub const fn len(&self) -> usize {\n         self.vec.len()\n     }\n \n@@ -1395,7 +1395,7 @@ impl String {\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn is_empty(&self) -> bool {\n+    pub const fn is_empty(&self) -> bool {\n         self.len() == 0\n     }\n \n@@ -1662,7 +1662,7 @@ impl FromUtf8Error {\n     /// assert_eq!(1, error.valid_up_to());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn utf8_error(&self) -> Utf8Error {\n+    pub const fn utf8_error(&self) -> Utf8Error {\n         self.error\n     }\n }"}, {"sha": "78e9da2084dbec60a9af3af38c1ed1e0b24e23ce", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/061d345c1657a86a9d94e90f916a0be8c966d062/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/061d345c1657a86a9d94e90f916a0be8c966d062/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=061d345c1657a86a9d94e90f916a0be8c966d062", "patch": "@@ -1165,7 +1165,7 @@ impl<T> Vec<T> {\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn len(&self) -> usize {\n+    pub const fn len(&self) -> usize {\n         self.len\n     }\n \n@@ -1181,7 +1181,7 @@ impl<T> Vec<T> {\n     /// assert!(!v.is_empty());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn is_empty(&self) -> bool {\n+    pub const fn is_empty(&self) -> bool {\n         self.len() == 0\n     }\n "}]}