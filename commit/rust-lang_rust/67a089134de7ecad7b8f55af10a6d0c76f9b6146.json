{"sha": "67a089134de7ecad7b8f55af10a6d0c76f9b6146", "node_id": "C_kwDOAAsO6NoAKDY3YTA4OTEzNGRlN2VjYWQ3YjhmNTVhZjEwYTZkMGM3NmY5YjYxNDY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-24T21:20:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-24T21:20:57Z"}, "message": "Auto merge of #8880 - hellow554:rustfix_update, r=Manishearth\n\nAdd some testcases for recent rustfix update\n\nchangelog: none\n\nThis adds a testcase for a bugfix that has been fixed by https://github.com/rust-lang/rustfix/tree/v0.6.1\n\n`rustfix` is pulled in by `compiletest_rs`. So to test that the correct rustfix version is used, I added one (and a half) testcase.\n\nI tried to add a testcase for #8734 as well, but interesting enough the rustfix is wrong:\n\n```diff\n fn issue8734() {\n     let _ = [0u8, 1, 2, 3]\n         .into_iter()\n-        .and_then(|n| match n {\n+        .flat_map(|n| match n {\n+            1 => [n\n+                .saturating_add(1)\n             1 => [n\n                 .saturating_add(1)\n                 .saturating_add(1)\n                 .saturating_add(1)\n                 .saturating_add(1)\n                 .saturating_add(1)\n                 .saturating_add(1)\n                 .saturating_add(1)\n                 .saturating_add(1)],\n             n => [n],\n         });\n }\n```\n\nthis needs some investigation and then this testcase needs to be enabled by commenting it out\n\ncloses #8878\nrelated to #8734", "tree": {"sha": "ba817493bc8cc424c18f0561adc96d5e365fcf25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba817493bc8cc424c18f0561adc96d5e365fcf25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67a089134de7ecad7b8f55af10a6d0c76f9b6146", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67a089134de7ecad7b8f55af10a6d0c76f9b6146", "html_url": "https://github.com/rust-lang/rust/commit/67a089134de7ecad7b8f55af10a6d0c76f9b6146", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67a089134de7ecad7b8f55af10a6d0c76f9b6146/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c41c410a90cd97d3e82b67375f76c161f8c280dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/c41c410a90cd97d3e82b67375f76c161f8c280dd", "html_url": "https://github.com/rust-lang/rust/commit/c41c410a90cd97d3e82b67375f76c161f8c280dd"}, {"sha": "04297de2ed5f9e822fc4bf79e24556a68df56dce", "url": "https://api.github.com/repos/rust-lang/rust/commits/04297de2ed5f9e822fc4bf79e24556a68df56dce", "html_url": "https://github.com/rust-lang/rust/commit/04297de2ed5f9e822fc4bf79e24556a68df56dce"}], "stats": {"total": 101, "additions": 100, "deletions": 1}, "files": [{"sha": "928e5bd509c3fbf6c358883647b747beba2abdc1", "filename": "tests/ui/map_flatten_fixable.fixed", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/67a089134de7ecad7b8f55af10a6d0c76f9b6146/tests%2Fui%2Fmap_flatten_fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/67a089134de7ecad7b8f55af10a6d0c76f9b6146/tests%2Fui%2Fmap_flatten_fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_flatten_fixable.fixed?ref=67a089134de7ecad7b8f55af10a6d0c76f9b6146", "patch": "@@ -28,4 +28,41 @@ fn main() {\n \n     // mapping to Result on Result\n     let _: Result<_, &str> = (Ok(Ok(1))).and_then(|x| x);\n+\n+    issue8734();\n+    issue8878();\n+}\n+\n+fn issue8734() {\n+    //     let _ = [0u8, 1, 2, 3]\n+    //         .into_iter()\n+    //         .map(|n| match n {\n+    //             1 => [n\n+    //                 .saturating_add(1)\n+    //                 .saturating_add(1)\n+    //                 .saturating_add(1)\n+    //                 .saturating_add(1)\n+    //                 .saturating_add(1)\n+    //                 .saturating_add(1)\n+    //                 .saturating_add(1)\n+    //                 .saturating_add(1)],\n+    //             n => [n],\n+    //         })\n+    //         .flatten();\n+}\n+\n+#[allow(clippy::bind_instead_of_map)] // map + flatten will be suggested to `and_then`, but afterwards `map` is suggested again\n+#[rustfmt::skip] // whitespace is important for this one\n+fn issue8878() {\n+    std::collections::HashMap::<u32, u32>::new()\n+        .get(&0)\n+        .and_then(|_| {\n+// we need some newlines\n+// so that the span is big enough\n+// we need some newlines\n+// so that the span is big enough\n+// for a splitted output of the diagnostic\n+            Some(\"\")\n+ // whitespace beforehand is important as well\n+        });\n }"}, {"sha": "4345c6eee746120afc03cb46fc3e6f79a2d94f40", "filename": "tests/ui/map_flatten_fixable.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/67a089134de7ecad7b8f55af10a6d0c76f9b6146/tests%2Fui%2Fmap_flatten_fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67a089134de7ecad7b8f55af10a6d0c76f9b6146/tests%2Fui%2Fmap_flatten_fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_flatten_fixable.rs?ref=67a089134de7ecad7b8f55af10a6d0c76f9b6146", "patch": "@@ -28,4 +28,40 @@ fn main() {\n \n     // mapping to Result on Result\n     let _: Result<_, &str> = (Ok(Ok(1))).map(|x| x).flatten();\n+\n+    issue8734();\n+    issue8878();\n+}\n+\n+fn issue8734() {\n+    //     let _ = [0u8, 1, 2, 3]\n+    //         .into_iter()\n+    //         .map(|n| match n {\n+    //             1 => [n\n+    //                 .saturating_add(1)\n+    //                 .saturating_add(1)\n+    //                 .saturating_add(1)\n+    //                 .saturating_add(1)\n+    //                 .saturating_add(1)\n+    //                 .saturating_add(1)\n+    //                 .saturating_add(1)\n+    //                 .saturating_add(1)],\n+    //             n => [n],\n+    //         })\n+    //         .flatten();\n+}\n+\n+#[allow(clippy::bind_instead_of_map)] // map + flatten will be suggested to `and_then`, but afterwards `map` is suggested again\n+#[rustfmt::skip] // whitespace is important for this one\n+fn issue8878() {\n+    std::collections::HashMap::<u32, u32>::new()\n+        .get(&0)\n+        .map(|_| {\n+// we need some newlines\n+// so that the span is big enough\n+// for a splitted output of the diagnostic\n+            Some(\"\")\n+ // whitespace beforehand is important as well\n+        })\n+        .flatten();\n }"}, {"sha": "828e24acaad6c71ce4de550f0f3bb2c02418d8ff", "filename": "tests/ui/map_flatten_fixable.stderr", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/67a089134de7ecad7b8f55af10a6d0c76f9b6146/tests%2Fui%2Fmap_flatten_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/67a089134de7ecad7b8f55af10a6d0c76f9b6146/tests%2Fui%2Fmap_flatten_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_flatten_fixable.stderr?ref=67a089134de7ecad7b8f55af10a6d0c76f9b6146", "patch": "@@ -76,5 +76,31 @@ help: try replacing `map` with `and_then`, and remove the `.flatten()`\n LL |     let _: Result<_, &str> = (Ok(Ok(1))).and_then(|x| x);\n    |                                          ~~~~~~~~~~~~~~~\n \n-error: aborting due to 7 previous errors\n+error: called `map(..).flatten()` on `Option`\n+  --> $DIR/map_flatten_fixable.rs:59:10\n+   |\n+LL |           .map(|_| {\n+   |  __________^\n+LL | | // we need some newlines\n+LL | | // so that the span is big enough\n+LL | | // for a splitted output of the diagnostic\n+...  |\n+LL | |         })\n+LL | |         .flatten();\n+   | |__________________^\n+   |\n+help: try replacing `map` with `and_then`\n+   |\n+LL ~         .and_then(|_| {\n+LL + // we need some newlines\n+LL + // so that the span is big enough\n+   |\n+help: and remove the `.flatten()`\n+   |\n+LL +             Some(\"\")\n+LL +  // whitespace beforehand is important as well\n+LL ~         });\n+   |\n+\n+error: aborting due to 8 previous errors\n "}]}