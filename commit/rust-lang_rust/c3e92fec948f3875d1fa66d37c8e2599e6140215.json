{"sha": "c3e92fec948f3875d1fa66d37c8e2599e6140215", "node_id": "C_kwDOAAsO6NoAKGMzZTkyZmVjOTQ4ZjM4NzVkMWZhNjZkMzdjOGUyNTk5ZTYxNDAyMTU", "commit": {"author": {"name": "Tavian Barnes", "email": "tavianator@tavianator.com", "date": "2022-01-20T21:54:45Z"}, "committer": {"name": "Tavian Barnes", "email": "tavianator@tavianator.com", "date": "2022-01-21T12:59:14Z"}, "message": "fs: Implement more ReadDir methods in terms of name_cstr()", "tree": {"sha": "ea99a971c82a180aebecbdf932d4f81df1cfa213", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea99a971c82a180aebecbdf932d4f81df1cfa213"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3e92fec948f3875d1fa66d37c8e2599e6140215", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3e92fec948f3875d1fa66d37c8e2599e6140215", "html_url": "https://github.com/rust-lang/rust/commit/c3e92fec948f3875d1fa66d37c8e2599e6140215", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3e92fec948f3875d1fa66d37c8e2599e6140215/comments", "author": {"login": "tavianator", "id": 1692591, "node_id": "MDQ6VXNlcjE2OTI1OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1692591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tavianator", "html_url": "https://github.com/tavianator", "followers_url": "https://api.github.com/users/tavianator/followers", "following_url": "https://api.github.com/users/tavianator/following{/other_user}", "gists_url": "https://api.github.com/users/tavianator/gists{/gist_id}", "starred_url": "https://api.github.com/users/tavianator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tavianator/subscriptions", "organizations_url": "https://api.github.com/users/tavianator/orgs", "repos_url": "https://api.github.com/users/tavianator/repos", "events_url": "https://api.github.com/users/tavianator/events{/privacy}", "received_events_url": "https://api.github.com/users/tavianator/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tavianator", "id": 1692591, "node_id": "MDQ6VXNlcjE2OTI1OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1692591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tavianator", "html_url": "https://github.com/tavianator", "followers_url": "https://api.github.com/users/tavianator/followers", "following_url": "https://api.github.com/users/tavianator/following{/other_user}", "gists_url": "https://api.github.com/users/tavianator/gists{/gist_id}", "starred_url": "https://api.github.com/users/tavianator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tavianator/subscriptions", "organizations_url": "https://api.github.com/users/tavianator/orgs", "repos_url": "https://api.github.com/users/tavianator/repos", "events_url": "https://api.github.com/users/tavianator/events{/privacy}", "received_events_url": "https://api.github.com/users/tavianator/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "777bb86bcdbc568be7cff6eeeaaf81a89b4aa50b", "url": "https://api.github.com/repos/rust-lang/rust/commits/777bb86bcdbc568be7cff6eeeaaf81a89b4aa50b", "html_url": "https://github.com/rust-lang/rust/commit/777bb86bcdbc568be7cff6eeeaaf81a89b4aa50b"}], "stats": {"total": 41, "additions": 18, "deletions": 23}, "files": [{"sha": "14e8f06b3036e3417c25cdbc51846907f6a2074a", "filename": "library/std/src/sys/unix/fs.rs", "status": "modified", "additions": 18, "deletions": 23, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/c3e92fec948f3875d1fa66d37c8e2599e6140215/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3e92fec948f3875d1fa66d37c8e2599e6140215/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs?ref=c3e92fec948f3875d1fa66d37c8e2599e6140215", "patch": "@@ -531,17 +531,17 @@ impl Drop for Dir {\n \n impl DirEntry {\n     pub fn path(&self) -> PathBuf {\n-        self.dir.root.join(OsStr::from_bytes(self.name_bytes()))\n+        self.dir.root.join(self.file_name_os_str())\n     }\n \n     pub fn file_name(&self) -> OsString {\n-        OsStr::from_bytes(self.name_bytes()).to_os_string()\n+        self.file_name_os_str().to_os_string()\n     }\n \n     #[cfg(any(target_os = \"linux\", target_os = \"emscripten\", target_os = \"android\"))]\n     pub fn metadata(&self) -> io::Result<FileAttr> {\n         let fd = cvt(unsafe { dirfd(self.dir.dirp.0) })?;\n-        let name = self.entry.d_name.as_ptr();\n+        let name = self.name_cstr().as_ptr();\n \n         cfg_has_statx! {\n             if let Some(ret) = unsafe { try_statx(\n@@ -639,26 +639,16 @@ impl DirEntry {\n             )\n         }\n     }\n-    #[cfg(any(\n-        target_os = \"android\",\n-        target_os = \"linux\",\n-        target_os = \"emscripten\",\n-        target_os = \"l4re\",\n-        target_os = \"haiku\",\n-        target_os = \"vxworks\",\n-        target_os = \"espidf\"\n-    ))]\n-    fn name_bytes(&self) -> &[u8] {\n-        unsafe { CStr::from_ptr(self.entry.d_name.as_ptr()).to_bytes() }\n-    }\n-    #[cfg(any(\n-        target_os = \"solaris\",\n-        target_os = \"illumos\",\n-        target_os = \"fuchsia\",\n-        target_os = \"redox\"\n-    ))]\n+    #[cfg(not(any(\n+        target_os = \"macos\",\n+        target_os = \"ios\",\n+        target_os = \"netbsd\",\n+        target_os = \"openbsd\",\n+        target_os = \"freebsd\",\n+        target_os = \"dragonfly\"\n+    )))]\n     fn name_bytes(&self) -> &[u8] {\n-        self.name.as_bytes()\n+        self.name_cstr().to_bytes()\n     }\n \n     #[cfg(not(any(\n@@ -670,7 +660,12 @@ impl DirEntry {\n     fn name_cstr(&self) -> &CStr {\n         unsafe { CStr::from_ptr(self.entry.d_name.as_ptr()) }\n     }\n-    #[cfg(any(target_os = \"solaris\", target_os = \"illumos\", target_os = \"fuchsia\"))]\n+    #[cfg(any(\n+        target_os = \"solaris\",\n+        target_os = \"illumos\",\n+        target_os = \"fuchsia\",\n+        target_os = \"redox\"\n+    ))]\n     fn name_cstr(&self) -> &CStr {\n         &self.name\n     }"}]}