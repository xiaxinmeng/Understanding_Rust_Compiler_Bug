{"sha": "09b15e9856c3ef77992cc30e772d29a896597041", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5YjE1ZTk4NTZjM2VmNzc5OTJjYzMwZTc3MmQyOWE4OTY1OTcwNDE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-15T20:39:39Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-22T07:06:28Z"}, "message": "fix dropping with vtables", "tree": {"sha": "7ef6946875e4c43a7b483f5708563ba46e9f5a05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ef6946875e4c43a7b483f5708563ba46e9f5a05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09b15e9856c3ef77992cc30e772d29a896597041", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09b15e9856c3ef77992cc30e772d29a896597041", "html_url": "https://github.com/rust-lang/rust/commit/09b15e9856c3ef77992cc30e772d29a896597041", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09b15e9856c3ef77992cc30e772d29a896597041/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e860ab2dabc281b8d882387fd62e78a6c072e6dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/e860ab2dabc281b8d882387fd62e78a6c072e6dc", "html_url": "https://github.com/rust-lang/rust/commit/e860ab2dabc281b8d882387fd62e78a6c072e6dc"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "11fd7373284d1f210c9514ec3bacc4ef93c450de", "filename": "src/librustc_mir/interpret/terminator/drop.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/09b15e9856c3ef77992cc30e772d29a896597041/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fdrop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b15e9856c3ef77992cc30e772d29a896597041/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fdrop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fdrop.rs?ref=09b15e9856c3ef77992cc30e772d29a896597041", "patch": "@@ -30,24 +30,29 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n     ) -> EvalResult<'tcx> {\n         trace!(\"drop: {:?},\\n  {:?}, {:?}\", arg, ty.sty, instance.def);\n \n-        let instance = match ty.sty {\n+        let (instance, arg) = match ty.sty {\n             ty::TyDynamic(..) => {\n-                if let Value::ScalarPair(_, vtable) = arg {\n-                    self.read_drop_type_from_vtable(vtable.to_ptr()?)?\n+                if let Value::ScalarPair(ptr, vtable) = arg {\n+                    // Figure out the specific drop function to call, and just pass along\n+                    // the thin part of the pointer.\n+                    let instance = self.read_drop_type_from_vtable(vtable.to_ptr()?)?;\n+                    trace!(\"Dropping via vtable: {:?}\", instance.def);\n+                    (instance, Value::Scalar(ptr))\n                 } else {\n                     bug!(\"expected fat ptr, got {:?}\", arg);\n                 }\n             }\n-            _ => instance,\n+            _ => (instance, arg),\n         };\n \n         // the drop function expects a reference to the value\n+        let fn_sig = self.tcx.fn_sig(instance.def_id()).skip_binder().clone();\n         let arg = OpTy {\n             op: Operand::Immediate(arg),\n-            layout: self.layout_of(self.tcx.mk_mut_ptr(ty))?,\n+            layout: self.layout_of(fn_sig.output())?,\n         };\n+        trace!(\"Dropped type: {:?}\", fn_sig.output());\n \n-        let fn_sig = self.tcx.fn_sig(instance.def_id()).skip_binder().clone();\n         // This should always be (), but getting it from the sig seems\n         // easier than creating a layout of ().\n         let dest = PlaceTy::null(&self, self.layout_of(fn_sig.output())?);"}, {"sha": "e0980a4657e6475e0aeb4a3717ca16377dc285b0", "filename": "src/librustc_mir/interpret/terminator/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/09b15e9856c3ef77992cc30e772d29a896597041/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b15e9856c3ef77992cc30e772d29a896597041/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs?ref=09b15e9856c3ef77992cc30e772d29a896597041", "patch": "@@ -257,6 +257,9 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n         sig: ty::FnSig<'tcx>,\n     ) -> EvalResult<'tcx> {\n         trace!(\"eval_fn_call: {:#?}\", instance);\n+        if let Some((place, _)) = destination {\n+            assert_eq!(place.layout.ty, sig.output());\n+        }\n         match instance.def {\n             ty::InstanceDef::Intrinsic(..) => {\n                 let (ret, target) = match destination {"}]}