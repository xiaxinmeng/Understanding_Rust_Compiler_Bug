{"sha": "62cc86924520f23091976655dab93b54a4c5ba21", "node_id": "C_kwDOAAsO6NoAKDYyY2M4NjkyNDUyMGYyMzA5MTk3NjY1NWRhYjkzYjU0YTRjNWJhMjE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-23T13:37:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-23T13:37:11Z"}, "message": "Auto merge of #106053 - compiler-errors:incr-test-revision, r=Mark-Simulacrum\n\nTake revision into account in non-incremental-mode `// incremental` tests\n\nA UI test I added in #105983 confusingly [failed](https://github.com/rust-lang/rust/pull/106031#issuecomment-1362558067) in a merge because two different revisions raced with each other for the same incremental directory for a (non-incremental-mode, i.e. `src/test/ui`) UI test.\n\nLet's take the revision name into account when generating an incremental directory so that other UI tests that combine `// incremental` and `// revisions` won't race and cause possible flakiness in CI.", "tree": {"sha": "2360e92cce2d656b6c3c98e7a31b18e566bcb558", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2360e92cce2d656b6c3c98e7a31b18e566bcb558"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62cc86924520f23091976655dab93b54a4c5ba21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62cc86924520f23091976655dab93b54a4c5ba21", "html_url": "https://github.com/rust-lang/rust/commit/62cc86924520f23091976655dab93b54a4c5ba21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62cc86924520f23091976655dab93b54a4c5ba21/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14e2fe4039f0b42c1ac519671e27943560530458", "url": "https://api.github.com/repos/rust-lang/rust/commits/14e2fe4039f0b42c1ac519671e27943560530458", "html_url": "https://github.com/rust-lang/rust/commit/14e2fe4039f0b42c1ac519671e27943560530458"}, {"sha": "f38bf5399d329497046f51fc06c0f27213de3044", "url": "https://api.github.com/repos/rust-lang/rust/commits/f38bf5399d329497046f51fc06c0f27213de3044", "html_url": "https://github.com/rust-lang/rust/commit/f38bf5399d329497046f51fc06c0f27213de3044"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "a4f1167bf9d1568dabb1fc850b2656e0f4a21075", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/62cc86924520f23091976655dab93b54a4c5ba21/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62cc86924520f23091976655dab93b54a4c5ba21/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=62cc86924520f23091976655dab93b54a4c5ba21", "patch": "@@ -617,6 +617,6 @@ pub fn output_base_name(config: &Config, testpaths: &TestPaths, revision: Option\n \n /// Absolute path to the directory to use for incremental compilation. Example:\n ///   /path/to/build/host-triple/test/ui/relative/testname.mode/testname.inc\n-pub fn incremental_dir(config: &Config, testpaths: &TestPaths) -> PathBuf {\n-    output_base_name(config, testpaths, None).with_extension(\"inc\")\n+pub fn incremental_dir(config: &Config, testpaths: &TestPaths, revision: Option<&str>) -> PathBuf {\n+    output_base_name(config, testpaths, revision).with_extension(\"inc\")\n }"}, {"sha": "95f6e047bf9e6dffbd488daffbe3b6cda744ecba", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/62cc86924520f23091976655dab93b54a4c5ba21/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62cc86924520f23091976655dab93b54a4c5ba21/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=62cc86924520f23091976655dab93b54a4c5ba21", "patch": "@@ -117,8 +117,12 @@ pub fn run(config: Config, testpaths: &TestPaths, revision: Option<&str>) {\n     }\n     debug!(\"running {:?}\", testpaths.file.display());\n     let mut props = TestProps::from_file(&testpaths.file, revision, &config);\n+\n+    // For non-incremental (i.e. regular UI) tests, the incremental directory\n+    // takes into account the revision name, since the revisions are independent\n+    // of each other and can race.\n     if props.incremental {\n-        props.incremental_dir = Some(incremental_dir(&config, testpaths));\n+        props.incremental_dir = Some(incremental_dir(&config, testpaths, revision));\n     }\n \n     let cx = TestCx { config: &config, props: &props, testpaths, revision };"}]}