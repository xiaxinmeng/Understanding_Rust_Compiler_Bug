{"sha": "1f4a6bb3ad8774c0b852bb4ffca83dd40a188570", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmNGE2YmIzYWQ4Nzc0YzBiODUyYmI0ZmZjYTgzZGQ0MGExODg1NzA=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-02-21T23:36:15Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-02-24T02:39:12Z"}, "message": "Treat export-globs as import-globs for sake of linking.", "tree": {"sha": "11aa2f78ed47fc0f3e97d701ca47a296b3c2af5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11aa2f78ed47fc0f3e97d701ca47a296b3c2af5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f4a6bb3ad8774c0b852bb4ffca83dd40a188570", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f4a6bb3ad8774c0b852bb4ffca83dd40a188570", "html_url": "https://github.com/rust-lang/rust/commit/1f4a6bb3ad8774c0b852bb4ffca83dd40a188570", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f4a6bb3ad8774c0b852bb4ffca83dd40a188570/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "893bbea5765a3e9a6a1581c7f8cc1fc02a2cc7ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/893bbea5765a3e9a6a1581c7f8cc1fc02a2cc7ae", "html_url": "https://github.com/rust-lang/rust/commit/893bbea5765a3e9a6a1581c7f8cc1fc02a2cc7ae"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "d325e8fcf2ed9521a5824ba9aa1b61e277d677ca", "filename": "src/comp/middle/resolve.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1f4a6bb3ad8774c0b852bb4ffca83dd40a188570/src%2Fcomp%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f4a6bb3ad8774c0b852bb4ffca83dd40a188570/src%2Fcomp%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fresolve.rs?ref=1f4a6bb3ad8774c0b852bb4ffca83dd40a188570", "patch": "@@ -225,6 +225,12 @@ fn iter_export_paths(vi: ast::view_item, f: fn(vp: @ast::view_path)) {\n     }\n }\n \n+fn iter_all_view_paths(vi: ast::view_item,\n+                       f: fn(vp: @ast::view_path)) {\n+    iter_import_paths(vi, f);\n+    iter_export_paths(vi, f);\n+}\n+\n // Locate all modules and imports and index them, so that the next passes can\n // resolve through them.\n fn map_crate(e: @env, c: @ast::crate) {\n@@ -284,9 +290,12 @@ fn map_crate(e: @env, c: @ast::crate) {\n         }\n     }\n \n+    // Note: a glob export works as an implict import, along with a\n+    // re-export of anything that was exported at the glob-target location.\n+    // So we wind up reusing the glob-import machinery when looking at\n+    // glob exports. They just do re-exporting in a later step.\n     fn link_glob(e: @env, vi: @ast::view_item, sc: scopes, _v: vt<scopes>) {\n-        iter_import_paths(*vi) { |vp|\n-            //if it really is a glob import, that is\n+        iter_all_view_paths(*vi) { |vp|\n             alt vp.node {\n               ast::view_path_glob(path, _) {\n                 alt follow_import(*e, sc, *path, vp.span) {\n@@ -335,7 +344,7 @@ fn map_crate(e: @env, c: @ast::crate) {\n                        glob_imported_names: new_str_hash(),\n                        path: \"\"});\n \n-    // Next, assemble the links for globbed imports.\n+    // Next, assemble the links for globbed imports and exports.\n     let v_link_glob =\n         @{visit_view_item: bind link_glob(e, _, _, _),\n           visit_block: visit_block_with_scope,"}]}