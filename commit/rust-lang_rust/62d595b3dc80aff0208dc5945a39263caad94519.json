{"sha": "62d595b3dc80aff0208dc5945a39263caad94519", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyZDU5NWIzZGM4MGFmZjAyMDhkYzU5NDVhMzkyNjNjYWFkOTQ1MTk=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2018-04-05T07:59:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-04-05T07:59:12Z"}, "message": "Merge pull request #2632 from phansch/fix_useless_format_false_positive\n\nFix useless_format false positive with macros", "tree": {"sha": "eb9698dd4bbe985cd5589eb0c6439b58b0169777", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb9698dd4bbe985cd5589eb0c6439b58b0169777"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62d595b3dc80aff0208dc5945a39263caad94519", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaxddQCRBK7hj4Ov3rIwAAdHIIAASNFbcl6mIbPuJo8g+LJT6k\nRDYm3B1Hg0SmgKKloyF9/ILn0OLDRWTro7j7QMAfXWkHeXRV4XcM3CS6wsDCNAe+\nSt/q7RMbupyQh3E1UlPXhQqLYyA9CRFVJZyuyy3VDbncIRngvHM58KJsZKohQr5L\nbXXI6snTSXgCeIKKX+z72oP39Swar48TXbiuXqBJQjBVxxelqoxkFesH03GgqNpc\nbJYkAzAh1ECRW1oJ+KX7RPDe+o4rsss41SFD3zyvK/YxPSg/YxBKyRI/YmYguvAY\nX6pvgWpjxtx3MoI0IifJMjlg85HET7/NKTsKfGPeSHawz9Bug9pu+JDh52AEU2s=\n=A0ls\n-----END PGP SIGNATURE-----\n", "payload": "tree eb9698dd4bbe985cd5589eb0c6439b58b0169777\nparent 399488079b1930c7cb9a779230d6e87e07f686da\nparent ff98e3f9f50ca14e2fe96da0b36f6ac05476970a\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1522915152 +0200\ncommitter GitHub <noreply@github.com> 1522915152 +0200\n\nMerge pull request #2632 from phansch/fix_useless_format_false_positive\n\nFix useless_format false positive with macros"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62d595b3dc80aff0208dc5945a39263caad94519", "html_url": "https://github.com/rust-lang/rust/commit/62d595b3dc80aff0208dc5945a39263caad94519", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62d595b3dc80aff0208dc5945a39263caad94519/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "399488079b1930c7cb9a779230d6e87e07f686da", "url": "https://api.github.com/repos/rust-lang/rust/commits/399488079b1930c7cb9a779230d6e87e07f686da", "html_url": "https://github.com/rust-lang/rust/commit/399488079b1930c7cb9a779230d6e87e07f686da"}, {"sha": "ff98e3f9f50ca14e2fe96da0b36f6ac05476970a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff98e3f9f50ca14e2fe96da0b36f6ac05476970a", "html_url": "https://github.com/rust-lang/rust/commit/ff98e3f9f50ca14e2fe96da0b36f6ac05476970a"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "2b5b79db9805a0199ef0a65734ee3c241ff0a054", "filename": "clippy_lints/src/format.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/62d595b3dc80aff0208dc5945a39263caad94519/clippy_lints%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d595b3dc80aff0208dc5945a39263caad94519/clippy_lints%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat.rs?ref=62d595b3dc80aff0208dc5945a39263caad94519", "patch": "@@ -3,7 +3,7 @@ use rustc::lint::*;\n use rustc::ty;\n use syntax::ast::LitKind;\n use utils::paths;\n-use utils::{is_expn_of, match_def_path, match_type, opt_def_id, resolve_node, snippet, span_lint_and_then, walk_ptrs_ty};\n+use utils::{in_macro, is_expn_of, match_def_path, match_type, opt_def_id, resolve_node, snippet, span_lint_and_then, walk_ptrs_ty};\n \n /// **What it does:** Checks for the use of `format!(\"string literal with no\n /// argument\")` and `format!(\"{}\", foo)` where `foo` is a string.\n@@ -39,6 +39,9 @@ impl LintPass for Pass {\n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr) {\n         if let Some(span) = is_expn_of(expr.span, \"format\") {\n+            if in_macro(span) {\n+                return;\n+            }\n             match expr.node {\n                 // `format!(\"{}\", foo)` expansion\n                 ExprCall(ref fun, ref args) => {"}, {"sha": "cf5d1d29482dc6ccc1dae0610a2bfa14393e257f", "filename": "tests/ui/format.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/62d595b3dc80aff0208dc5945a39263caad94519/tests%2Fui%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d595b3dc80aff0208dc5945a39263caad94519/tests%2Fui%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.rs?ref=62d595b3dc80aff0208dc5945a39263caad94519", "patch": "@@ -2,6 +2,12 @@\n #![allow(print_literal)]\n #![warn(useless_format)]\n \n+struct Foo(pub String);\n+\n+macro_rules! foo {\n+  ($($t:tt)*) => (Foo(format!($($t)*)))\n+}\n+\n fn main() {\n     format!(\"foo\");\n \n@@ -31,4 +37,7 @@ fn main() {\n     println!(\"foo {}\", \"foo\");\n     println!(\"{}\", 42);\n     println!(\"foo {}\", 42);\n+\n+    // A format! inside a macro should not trigger a warning\n+    foo!(\"should not warn\");\n }"}, {"sha": "8c36d9a830c46cb578321dd65216c017933eab79", "filename": "tests/ui/format.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/62d595b3dc80aff0208dc5945a39263caad94519/tests%2Fui%2Fformat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/62d595b3dc80aff0208dc5945a39263caad94519/tests%2Fui%2Fformat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.stderr?ref=62d595b3dc80aff0208dc5945a39263caad94519", "patch": "@@ -1,10 +1,10 @@\n error: useless use of `format!`\n- --> $DIR/format.rs:6:5\n-  |\n-6 |     format!(\"foo\");\n-  |     ^^^^^^^^^^^^^^^ help: consider using .to_string(): `\"foo\".to_string()`\n-  |\n-  = note: `-D useless-format` implied by `-D warnings`\n+  --> $DIR/format.rs:12:5\n+   |\n+12 |     format!(\"foo\");\n+   |     ^^^^^^^^^^^^^^^ help: consider using .to_string(): `\"foo\".to_string()`\n+   |\n+   = note: `-D useless-format` implied by `-D warnings`\n \n error: aborting due to previous error\n "}]}