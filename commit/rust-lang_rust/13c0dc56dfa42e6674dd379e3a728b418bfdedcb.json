{"sha": "13c0dc56dfa42e6674dd379e3a728b418bfdedcb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzYzBkYzU2ZGZhNDJlNjY3NGRkMzc5ZTNhNzI4YjQxOGJmZGVkY2I=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2018-01-29T18:06:44Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-03-08T07:34:14Z"}, "message": "Only report bitshift lints on bitshift ops", "tree": {"sha": "659d6b5992d8e17aac036f163a57f125ccfadef6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/659d6b5992d8e17aac036f163a57f125ccfadef6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13c0dc56dfa42e6674dd379e3a728b418bfdedcb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlqg53YACgkQpp+NIls6\n19mcixAAmdMX0DaZ3YaK38H4VNom27ZUIVmZTsiVhUmDI9qU6l5SYksGqOuZ/mFB\n51Fd5XrkePVwzJiScmWDwakfhq/n/XO5ky4fTpLAU5QOqiANm86E/1pvmb37mrua\niqwTelksGr2CCH8mo09ljU7j6au3FUILGt93YV0W2SWbs1TesZ14whhKAajnCEnz\nh5QXjf7z65z3cokdFRd9J+euvlpKmoy+sxix8T1nvny1HsiOFcXffYat6BpbTL7G\nqn+KSJHanYw7IBoGHrarFxABbAZX2aJfFTT6MJhE7RZP8/SZuWGsGtkdxUXd81c7\ne/3SI4EubXIu2fii9nO0wJQkWSTZRaYkyBpVBh5nrUsTZ3VBTUWAgv6/WadFaMLe\nHTBHdZPuIXtk1vKG4FfKtB3u+ZT9ma+N0bHCC0O3b+3z+6n7kZBrOG3rOu9SFTTJ\nfcAKoj7nuHMwoRTb4z5c/UdreYsiRZedN/DqT1/5s/i+lgqxlIZfAuo4WRX+6ZPk\ngt/fgM0uPJmWOmQDDKjtmAJ8I9qKzWm40lxUGfkrBCr89sKgOtbGrwoKdGDZL/Uu\nSxb43UNc/L3zd+kjYS6pLdBernvnBTwgg5LubbmDCTi7mZYpYeAcudJtXLEcMzIH\n+X5loxaAgw5+h9vrDwSP7DKVl5Z59r1S9/o/gK+7keKw13CeuWQ=\n=psG1\n-----END PGP SIGNATURE-----", "payload": "tree 659d6b5992d8e17aac036f163a57f125ccfadef6\nparent 438139f635302231f80ef627880f4ebd3fbb886e\nauthor Oliver Schneider <git-no-reply-9879165716479413131@oli-obk.de> 1517249204 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1520494454 +0100\n\nOnly report bitshift lints on bitshift ops\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13c0dc56dfa42e6674dd379e3a728b418bfdedcb", "html_url": "https://github.com/rust-lang/rust/commit/13c0dc56dfa42e6674dd379e3a728b418bfdedcb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13c0dc56dfa42e6674dd379e3a728b418bfdedcb/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "438139f635302231f80ef627880f4ebd3fbb886e", "url": "https://api.github.com/repos/rust-lang/rust/commits/438139f635302231f80ef627880f4ebd3fbb886e", "html_url": "https://github.com/rust-lang/rust/commit/438139f635302231f80ef627880f4ebd3fbb886e"}], "stats": {"total": 30, "additions": 16, "deletions": 14}, "files": [{"sha": "e0d8744f7c400d924daab08dc310ac58748224d6", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/13c0dc56dfa42e6674dd379e3a728b418bfdedcb/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13c0dc56dfa42e6674dd379e3a728b418bfdedcb/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=13c0dc56dfa42e6674dd379e3a728b418bfdedcb", "patch": "@@ -15,7 +15,7 @@\n \n use rustc::mir::{Constant, Literal, Location, Place, Mir, Operand, Rvalue, Local};\n use rustc::mir::{NullOp, StatementKind, Statement, BasicBlock, LocalKind};\n-use rustc::mir::{TerminatorKind, ClearCrossCrate, SourceInfo};\n+use rustc::mir::{TerminatorKind, ClearCrossCrate, SourceInfo, BinOp};\n use rustc::mir::visit::Visitor;\n use rustc::ty::layout::LayoutOf;\n use rustc::middle::const_val::ConstVal;\n@@ -216,19 +216,21 @@ impl<'b, 'a, 'tcx:'b> OptimizationFinder<'b, 'a, 'tcx> {\n                 let ecx = mk_borrowck_eval_cx(self.tcx, instance, self.mir, span).unwrap();\n \n                 let r = ecx.value_to_primval(ValTy { value: right.0, ty: right.1 }).ok()?;\n-                let param_env = self.tcx.param_env(self.source.def_id);\n-                let bits = (self.tcx, param_env).layout_of(left.1).unwrap().size.bits();\n-                if r.to_bytes().ok()? >= bits as u128 {\n-                    let scope_info = match self.mir.visibility_scope_info {\n-                        ClearCrossCrate::Set(ref data) => data,\n-                        ClearCrossCrate::Clear => return None,\n-                    };\n-                    let node_id = scope_info[source_info.scope].lint_root;\n-                    self.tcx.lint_node(\n-                        ::rustc::lint::builtin::EXCEEDING_BITSHIFTS,\n-                        node_id,\n-                        span,\n-                        \"bitshift exceeds the type's number of bits\");\n+                if op == BinOp::Shr || op == BinOp::Shl {\n+                    let param_env = self.tcx.param_env(self.source.def_id);\n+                    let bits = (self.tcx, param_env).layout_of(left.1).unwrap().size.bits();\n+                    if r.to_bytes().ok()? >= bits as u128 {\n+                        let scope_info = match self.mir.visibility_scope_info {\n+                            ClearCrossCrate::Set(ref data) => data,\n+                            ClearCrossCrate::Clear => return None,\n+                        };\n+                        let node_id = scope_info[source_info.scope].lint_root;\n+                        self.tcx.lint_node(\n+                            ::rustc::lint::builtin::EXCEEDING_BITSHIFTS,\n+                            node_id,\n+                            span,\n+                            \"bitshift exceeds the type's number of bits\");\n+                    }\n                 }\n                 let l = ecx.value_to_primval(ValTy { value: left.0, ty: left.1 }).ok()?;\n                 trace!(\"const evaluating {:?} for {:?} and {:?}\", op, left, right);"}]}