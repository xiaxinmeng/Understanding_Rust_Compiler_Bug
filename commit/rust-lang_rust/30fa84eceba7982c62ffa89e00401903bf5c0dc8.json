{"sha": "30fa84eceba7982c62ffa89e00401903bf5c0dc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwZmE4NGVjZWJhNzk4MmM2MmZmYTg5ZTAwNDAxOTAzYmY1YzBkYzg=", "commit": {"author": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-08-04T13:06:34Z"}, "committer": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-08-04T13:10:19Z"}, "message": "Add `TyCtxtAt::{ty_error, ty_error_with_message}`", "tree": {"sha": "5b164efc0e27713ce35e0057f64f754f651484af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b164efc0e27713ce35e0057f64f754f651484af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30fa84eceba7982c62ffa89e00401903bf5c0dc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30fa84eceba7982c62ffa89e00401903bf5c0dc8", "html_url": "https://github.com/rust-lang/rust/commit/30fa84eceba7982c62ffa89e00401903bf5c0dc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30fa84eceba7982c62ffa89e00401903bf5c0dc8/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a99ae95c722d4dc8d1eef09aaa4e72d50d496e75", "url": "https://api.github.com/repos/rust-lang/rust/commits/a99ae95c722d4dc8d1eef09aaa4e72d50d496e75", "html_url": "https://github.com/rust-lang/rust/commit/a99ae95c722d4dc8d1eef09aaa4e72d50d496e75"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "ed52981efc949fdc4381ee5cdc7f099d6712b513", "filename": "src/librustc_middle/ty/context.rs", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/30fa84eceba7982c62ffa89e00401903bf5c0dc8/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30fa84eceba7982c62ffa89e00401903bf5c0dc8/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fcontext.rs?ref=30fa84eceba7982c62ffa89e00401903bf5c0dc8", "patch": "@@ -13,13 +13,14 @@ use crate::middle::stability;\n use crate::mir::interpret::{self, Allocation, ConstValue, Scalar};\n use crate::mir::{Body, Field, Local, Place, PlaceElem, ProjectionKind, Promoted};\n use crate::traits;\n+use crate::ty::query::{self, TyCtxtAt};\n use crate::ty::steal::Steal;\n use crate::ty::subst::{GenericArg, GenericArgKind, InternalSubsts, Subst, SubstsRef, UserSubsts};\n use crate::ty::TyKind::*;\n use crate::ty::{\n-    self, query, AdtDef, AdtKind, BindingMode, BoundVar, CanonicalPolyFnSig, Const, ConstVid,\n-    DefIdTree, ExistentialPredicate, FloatVar, FloatVid, GenericParamDefKind, InferConst, InferTy,\n-    IntVar, IntVid, List, ParamConst, ParamTy, PolyFnSig, Predicate, PredicateInner, PredicateKind,\n+    self, AdtDef, AdtKind, BindingMode, BoundVar, CanonicalPolyFnSig, Const, ConstVid, DefIdTree,\n+    ExistentialPredicate, FloatVar, FloatVid, GenericParamDefKind, InferConst, InferTy, IntVar,\n+    IntVid, List, ParamConst, ParamTy, PolyFnSig, Predicate, PredicateInner, PredicateKind,\n     ProjectionTy, Region, RegionKind, ReprOptions, TraitObjectVisitor, Ty, TyKind, TyS, TyVar,\n     TyVid, TypeAndMut,\n };\n@@ -2652,6 +2653,21 @@ impl<'tcx> TyCtxt<'tcx> {\n     }\n }\n \n+impl TyCtxtAt<'tcx> {\n+    /// Constructs a `TyKind::Error` type and registers a `delay_span_bug` to ensure it gets used.\n+    #[track_caller]\n+    pub fn ty_error(self) -> Ty<'tcx> {\n+        self.tcx.ty_error_with_message(self.span, \"TyKind::Error constructed but no error reported\")\n+    }\n+\n+    /// Constructs a `TyKind::Error` type and registers a `delay_span_bug` with the given `msg to\n+    /// ensure it gets used.\n+    #[track_caller]\n+    pub fn ty_error_with_message(self, msg: &str) -> Ty<'tcx> {\n+        self.tcx.ty_error_with_message(self.span, msg)\n+    }\n+}\n+\n pub trait InternAs<T: ?Sized, R> {\n     type Output;\n     fn intern_with<F>(self, f: F) -> Self::Output"}]}