{"sha": "ebc70e2e9ecdd0920c5e78f53ed694f1c050c5ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViYzcwZTJlOWVjZGQwOTIwYzVlNzhmNTNlZDY5NGYxYzA1MGM1ZWQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-01-21T01:21:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-21T01:21:53Z"}, "message": "Rollup merge of #56796 - KrishnaSannasi:try_from_impl_change, r=shepmaster\n\nChange bounds on `TryFrom` blanket impl to use `Into` instead of `From`\n\nThis is from this [comment](https://github.com/rust-lang/rust/issues/33417#issuecomment-447111156) I made.\n\nThis will expand the impls available for `TryFrom` and `TryInto`, without losing anything in the process.", "tree": {"sha": "7b5c2dc6e750f5f8e0e9ca86920761b95cc8e534", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b5c2dc6e750f5f8e0e9ca86920761b95cc8e534"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebc70e2e9ecdd0920c5e78f53ed694f1c050c5ed", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcRR6xCRBK7hj4Ov3rIwAAdHIIAFTCUAx/NreCffW95g1/wllt\n5+4eT0A/ZpXHrzZ5jcR/I6eWF73YkmUxbbwb9W7dZlcpUbP3CZ4zvcWXdbp0LK6z\nGkjEhU8GKQVD0RnD7hW1izf+GKAeXIM9Kczk9Bev+odv6ZsnIf5sMfuieYop7sBI\nBqSBXSlnhjobQseNIuMH+l4Iv6DWgMpJoamcmbzOjKQ4VXqam/OqwssGXS5NKQJM\nneBrgKu6qtwv/z9RUnbGT8k/Pupb3yMJJbYipj9t9xo4Uk/KufUB04SHN1JbXybZ\nD9ZpghmxbnUuZJOSxjL9Eot35Kxgz6MDgBjXJIlQUO3LJc/2l2viKciMaxjtjAI=\n=jbgZ\n-----END PGP SIGNATURE-----\n", "payload": "tree 7b5c2dc6e750f5f8e0e9ca86920761b95cc8e534\nparent e73069767f11d992f0dca7e31d53d7e1a77fd237\nparent ea68b3ff3dd5a49c5984c476570fb5404c342079\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1548033713 +0100\ncommitter GitHub <noreply@github.com> 1548033713 +0100\n\nRollup merge of #56796 - KrishnaSannasi:try_from_impl_change, r=shepmaster\n\nChange bounds on `TryFrom` blanket impl to use `Into` instead of `From`\n\nThis is from this [comment](https://github.com/rust-lang/rust/issues/33417#issuecomment-447111156) I made.\n\nThis will expand the impls available for `TryFrom` and `TryInto`, without losing anything in the process.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebc70e2e9ecdd0920c5e78f53ed694f1c050c5ed", "html_url": "https://github.com/rust-lang/rust/commit/ebc70e2e9ecdd0920c5e78f53ed694f1c050c5ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebc70e2e9ecdd0920c5e78f53ed694f1c050c5ed/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e73069767f11d992f0dca7e31d53d7e1a77fd237", "url": "https://api.github.com/repos/rust-lang/rust/commits/e73069767f11d992f0dca7e31d53d7e1a77fd237", "html_url": "https://github.com/rust-lang/rust/commit/e73069767f11d992f0dca7e31d53d7e1a77fd237"}, {"sha": "ea68b3ff3dd5a49c5984c476570fb5404c342079", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea68b3ff3dd5a49c5984c476570fb5404c342079", "html_url": "https://github.com/rust-lang/rust/commit/ea68b3ff3dd5a49c5984c476570fb5404c342079"}], "stats": {"total": 43, "additions": 40, "deletions": 3}, "files": [{"sha": "203be541e492f1c3d381a94e4ef445b3c45568d3", "filename": "src/libcore/convert.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ebc70e2e9ecdd0920c5e78f53ed694f1c050c5ed/src%2Flibcore%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebc70e2e9ecdd0920c5e78f53ed694f1c050c5ed/src%2Flibcore%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fconvert.rs?ref=ebc70e2e9ecdd0920c5e78f53ed694f1c050c5ed", "patch": "@@ -463,11 +463,11 @@ impl<T, U> TryInto<U> for T where U: TryFrom<T>\n // Infallible conversions are semantically equivalent to fallible conversions\n // with an uninhabited error type.\n #[unstable(feature = \"try_from\", issue = \"33417\")]\n-impl<T, U> TryFrom<U> for T where T: From<U> {\n+impl<T, U> TryFrom<U> for T where U: Into<T> {\n     type Error = !;\n \n     fn try_from(value: U) -> Result<Self, Self::Error> {\n-        Ok(T::from(value))\n+        Ok(U::into(value))\n     }\n }\n "}, {"sha": "4522ce3a8d6173921dadd7a0ae67edf22ca3af56", "filename": "src/test/run-pass/try_from.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/ebc70e2e9ecdd0920c5e78f53ed694f1c050c5ed/src%2Ftest%2Frun-pass%2Ftry_from.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebc70e2e9ecdd0920c5e78f53ed694f1c050c5ed/src%2Ftest%2Frun-pass%2Ftry_from.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftry_from.rs?ref=ebc70e2e9ecdd0920c5e78f53ed694f1c050c5ed", "patch": "@@ -0,0 +1,37 @@\n+// This test relies on `TryFrom` being blanket impl for all `T: Into`\n+// and `TryInto` being blanket impl for all `U: TryFrom`\n+\n+// This test was added to show the motivation for doing this\n+// over `TryFrom` being blanket impl for all `T: From`\n+\n+#![feature(try_from, never_type)]\n+\n+use std::convert::TryInto;\n+\n+struct Foo<T> {\n+    t: T,\n+}\n+\n+// This fails to compile due to coherence restrictions\n+// as of Rust version 1.32.x, therefore it could not be used\n+// instead of the `Into` version of the impl, and serves as\n+// motivation for a blanket impl for all `T: Into`, instead\n+// of a blanket impl for all `T: From`\n+/*\n+impl<T> From<Foo<T>> for Box<T> {\n+    fn from(foo: Foo<T>) -> Box<T> {\n+        Box::new(foo.t)\n+    }\n+}\n+*/\n+\n+impl<T> Into<Vec<T>> for Foo<T> {\n+    fn into(self) -> Vec<T> {\n+        vec![self.t]\n+    }\n+}\n+\n+pub fn main() {\n+    let _: Result<Vec<i32>, !> = Foo { t: 10 }.try_into();\n+}\n+"}, {"sha": "c2ae321aa5e504f09980313c3ac3a1f02646030f", "filename": "src/test/ui/e0119/conflict-with-std.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ebc70e2e9ecdd0920c5e78f53ed694f1c050c5ed/src%2Ftest%2Fui%2Fe0119%2Fconflict-with-std.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ebc70e2e9ecdd0920c5e78f53ed694f1c050c5ed/src%2Ftest%2Fui%2Fe0119%2Fconflict-with-std.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fe0119%2Fconflict-with-std.stderr?ref=ebc70e2e9ecdd0920c5e78f53ed694f1c050c5ed", "patch": "@@ -25,7 +25,7 @@ LL | impl TryFrom<X> for X { //~ ERROR conflicting implementations\n    |\n    = note: conflicting implementation in crate `core`:\n            - impl<T, U> std::convert::TryFrom<U> for T\n-             where T: std::convert::From<U>;\n+             where U: std::convert::Into<T>;\n \n error: aborting due to 3 previous errors\n "}]}