{"sha": "5b049e107bec04210b1ff0d48e3c66e25de1a598", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViMDQ5ZTEwN2JlYzA0MjEwYjFmZjBkNDhlM2M2NmUyNWRlMWE1OTg=", "commit": {"author": {"name": "Vishnunarayan K I", "email": "appukuttancr@gmail.com", "date": "2020-10-26T17:33:23Z"}, "committer": {"name": "Vishnunarayan K I", "email": "appukuttancr@gmail.com", "date": "2020-11-09T17:09:12Z"}, "message": "write to a String instead to reduce churn", "tree": {"sha": "42d7abf5a4d40b175eeae95c520b113426ea9e32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42d7abf5a4d40b175eeae95c520b113426ea9e32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b049e107bec04210b1ff0d48e3c66e25de1a598", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b049e107bec04210b1ff0d48e3c66e25de1a598", "html_url": "https://github.com/rust-lang/rust/commit/5b049e107bec04210b1ff0d48e3c66e25de1a598", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b049e107bec04210b1ff0d48e3c66e25de1a598/comments", "author": {"login": "vn-ki", "id": 31964688, "node_id": "MDQ6VXNlcjMxOTY0Njg4", "avatar_url": "https://avatars.githubusercontent.com/u/31964688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vn-ki", "html_url": "https://github.com/vn-ki", "followers_url": "https://api.github.com/users/vn-ki/followers", "following_url": "https://api.github.com/users/vn-ki/following{/other_user}", "gists_url": "https://api.github.com/users/vn-ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/vn-ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vn-ki/subscriptions", "organizations_url": "https://api.github.com/users/vn-ki/orgs", "repos_url": "https://api.github.com/users/vn-ki/repos", "events_url": "https://api.github.com/users/vn-ki/events{/privacy}", "received_events_url": "https://api.github.com/users/vn-ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vn-ki", "id": 31964688, "node_id": "MDQ6VXNlcjMxOTY0Njg4", "avatar_url": "https://avatars.githubusercontent.com/u/31964688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vn-ki", "html_url": "https://github.com/vn-ki", "followers_url": "https://api.github.com/users/vn-ki/followers", "following_url": "https://api.github.com/users/vn-ki/following{/other_user}", "gists_url": "https://api.github.com/users/vn-ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/vn-ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vn-ki/subscriptions", "organizations_url": "https://api.github.com/users/vn-ki/orgs", "repos_url": "https://api.github.com/users/vn-ki/repos", "events_url": "https://api.github.com/users/vn-ki/events{/privacy}", "received_events_url": "https://api.github.com/users/vn-ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea1460773f1be2d0d717f6ab7609727e52ffa226", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea1460773f1be2d0d717f6ab7609727e52ffa226", "html_url": "https://github.com/rust-lang/rust/commit/ea1460773f1be2d0d717f6ab7609727e52ffa226"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "8060eaab874a639d39b2df129803cb58b3332e83", "filename": "compiler/rustc_mir/src/util/graphviz.rs", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/5b049e107bec04210b1ff0d48e3c66e25de1a598/compiler%2Frustc_mir%2Fsrc%2Futil%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b049e107bec04210b1ff0d48e3c66e25de1a598/compiler%2Frustc_mir%2Fsrc%2Futil%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Futil%2Fgraphviz.rs?ref=5b049e107bec04210b1ff0d48e3c66e25de1a598", "patch": "@@ -57,7 +57,9 @@ where\n     }\n \n     // Graph label\n-    let label = get_graph_label(tcx, body);\n+    let mut label = String::from(\"\");\n+    // FIXME: remove this unwrap\n+    write_graph_label(tcx, body, &mut label).unwrap();\n     let g = mir_fn_to_generic_graph(tcx, body, subgraph);\n     let settings = GraphvizSettings {\n         graph_attrs: Some(graph_attrs.join(\" \")),\n@@ -71,42 +73,47 @@ where\n /// Write the graphviz DOT label for the overall graph. This is essentially a block of text that\n /// will appear below the graph, showing the type of the `fn` this MIR represents and the types of\n /// all the variables and temporaries.\n-fn get_graph_label<'tcx>(tcx: TyCtxt<'tcx>, body: &Body<'_>) -> String {\n+fn write_graph_label<'tcx, W: std::fmt::Write>(\n+    tcx: TyCtxt<'tcx>,\n+    body: &Body<'_>,\n+    w: &mut W,\n+) -> std::fmt::Result {\n     let def_id = body.source.def_id();\n-    let mut label: Vec<String> = Vec::new();\n \n-    label.push(format!(\"fn {}(\", dot::escape_html(&tcx.def_path_str(def_id))));\n+    write!(w, \"fn {}(\", dot::escape_html(&tcx.def_path_str(def_id)))?;\n \n     // fn argument types.\n     for (i, arg) in body.args_iter().enumerate() {\n         if i > 0 {\n-            label.push(\", \".to_owned());\n+            write!(w, \", \")?;\n         }\n-        label.push(format!(\"{:?}: {}\", Place::from(arg), escape(&body.local_decls[arg].ty)));\n+        write!(w, \"{:?}: {}\", Place::from(arg), escape(&body.local_decls[arg].ty))?;\n     }\n \n-    label.push(format!(\") -&gt; {}\", escape(&body.return_ty())));\n-    label.push(r#\"<br align=\"left\"/>\"#.to_owned());\n+    write!(w, \") -&gt; {}\", escape(&body.return_ty()))?;\n+    write!(w, r#\"<br align=\"left\"/>\"#)?;\n \n     for local in body.vars_and_temps_iter() {\n         let decl = &body.local_decls[local];\n \n-        label.push(\"let \".to_owned());\n+        write!(w, \"let \")?;\n         if decl.mutability == Mutability::Mut {\n-            label.push(\"mut \".to_owned());\n+            write!(w, \"mut \")?;\n         }\n \n-        label.push(format!(r#\"{:?}: {};<br align=\"left\"/>\"#, Place::from(local), escape(&decl.ty)));\n+        write!(w, r#\"{:?}: {};<br align=\"left\"/>\"#, Place::from(local), escape(&decl.ty))?;\n     }\n \n     for var_debug_info in &body.var_debug_info {\n-        label.push(format!(\n+        write!(\n+            w,\n             r#\"debug {} =&gt; {};<br align=\"left\"/>\"#,\n             var_debug_info.name,\n             escape(&var_debug_info.place)\n-        ));\n+        )?;\n     }\n-    label.join(\"\")\n+\n+    Ok(())\n }\n \n fn escape<T: Debug>(t: &T) -> String {"}]}