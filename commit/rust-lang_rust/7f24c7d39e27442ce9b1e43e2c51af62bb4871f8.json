{"sha": "7f24c7d39e27442ce9b1e43e2c51af62bb4871f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmMjRjN2QzOWUyNzQ0MmNlOWIxZTQzZTJjNTFhZjYyYmI0ODcxZjg=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-24T17:01:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-24T17:01:39Z"}, "message": "Rollup merge of #74698 - ayrtonm:handle-traitref-mismatch, r=estebank\n\nfixed error reporting for mismatched traits\n\nmismatched traits were previously referred to as types\n\ncloses #72217", "tree": {"sha": "ab32d744552ab09242fdea904c962f859cf38909", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab32d744552ab09242fdea904c962f859cf38909"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f24c7d39e27442ce9b1e43e2c51af62bb4871f8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfGxP0CRBK7hj4Ov3rIwAAdHIIABbvcfZdz2DzAbJMuNozESA9\nOmUxQu0FB2mizE+cxPYrGyA/tPuMHVUYlxrevWkhLTqHzRMISGJ6L3HparHcRLld\nCI0OfI6O0IBUItY6x8aGTp9NGKjYPLt5V5/ktzT/fODpujyi04h+7Vunzp1Wd/g5\nZU/86u6fK2gSX3sDQJBgkfbLeh1YllQIARkquUNvYLNZSg9wXaPecEuzqFgYU1l1\nKfYAJvOYXfRVY6IBanD4JZZgYWY9l/N14FQ+i5Do4Y8eB+K+QaLnMCkLSuZ+jY6A\nyo08w1IeKWBVG5xgd92XiEuAzYiTHwRgRQGRlx8Bz8HeUYKVEpQ5Jc3J/BwAp3Q=\n=/lvl\n-----END PGP SIGNATURE-----\n", "payload": "tree ab32d744552ab09242fdea904c962f859cf38909\nparent db83a21de1c5b5a3b2e5fbbecd03d70daa4ce331\nparent b75ed4f61cb867388eb17280f3acd933fe933f26\nauthor Manish Goregaokar <manishsmail@gmail.com> 1595610099 -0700\ncommitter GitHub <noreply@github.com> 1595610099 -0700\n\nRollup merge of #74698 - ayrtonm:handle-traitref-mismatch, r=estebank\n\nfixed error reporting for mismatched traits\n\nmismatched traits were previously referred to as types\n\ncloses #72217\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f24c7d39e27442ce9b1e43e2c51af62bb4871f8", "html_url": "https://github.com/rust-lang/rust/commit/7f24c7d39e27442ce9b1e43e2c51af62bb4871f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f24c7d39e27442ce9b1e43e2c51af62bb4871f8/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db83a21de1c5b5a3b2e5fbbecd03d70daa4ce331", "url": "https://api.github.com/repos/rust-lang/rust/commits/db83a21de1c5b5a3b2e5fbbecd03d70daa4ce331", "html_url": "https://github.com/rust-lang/rust/commit/db83a21de1c5b5a3b2e5fbbecd03d70daa4ce331"}, {"sha": "b75ed4f61cb867388eb17280f3acd933fe933f26", "url": "https://api.github.com/repos/rust-lang/rust/commits/b75ed4f61cb867388eb17280f3acd933fe933f26", "html_url": "https://github.com/rust-lang/rust/commit/b75ed4f61cb867388eb17280f3acd933fe933f26"}], "stats": {"total": 59, "additions": 54, "deletions": 5}, "files": [{"sha": "063246f79fe362ff41c69a637fcca09d3e32260d", "filename": "src/librustc_infer/infer/error_reporting/mod.rs", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/7f24c7d39e27442ce9b1e43e2c51af62bb4871f8/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f24c7d39e27442ce9b1e43e2c51af62bb4871f8/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fmod.rs?ref=7f24c7d39e27442ce9b1e43e2c51af62bb4871f8", "patch": "@@ -1402,8 +1402,12 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         }\n \n         debug!(\"note_type_err(diag={:?})\", diag);\n+        enum Mismatch<'a> {\n+            Variable(ty::error::ExpectedFound<Ty<'a>>),\n+            Fixed(&'static str),\n+        }\n         let (expected_found, exp_found, is_simple_error) = match values {\n-            None => (None, None, false),\n+            None => (None, Mismatch::Fixed(\"type\"), false),\n             Some(values) => {\n                 let (is_simple_error, exp_found) = match values {\n                     ValuePairs::Types(exp_found) => {\n@@ -1417,9 +1421,10 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                         )\n                         .report(diag);\n \n-                        (is_simple_err, Some(exp_found))\n+                        (is_simple_err, Mismatch::Variable(exp_found))\n                     }\n-                    _ => (false, None),\n+                    ValuePairs::TraitRefs(_) => (false, Mismatch::Fixed(\"trait\")),\n+                    _ => (false, Mismatch::Fixed(\"type\")),\n                 };\n                 let vals = match self.values_str(&values) {\n                     Some((expected, found)) => Some((expected, found)),\n@@ -1445,8 +1450,18 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n             }\n         };\n         if let Some((expected, found)) = expected_found {\n-            let expected_label = exp_found.map_or(\"type\".into(), |ef| ef.expected.prefix_string());\n-            let found_label = exp_found.map_or(\"type\".into(), |ef| ef.found.prefix_string());\n+            let expected_label = match exp_found {\n+                Mismatch::Variable(ef) => ef.expected.prefix_string(),\n+                Mismatch::Fixed(s) => s.into(),\n+            };\n+            let found_label = match exp_found {\n+                Mismatch::Variable(ef) => ef.found.prefix_string(),\n+                Mismatch::Fixed(s) => s.into(),\n+            };\n+            let exp_found = match exp_found {\n+                Mismatch::Variable(exp_found) => Some(exp_found),\n+                Mismatch::Fixed(_) => None,\n+            };\n             match (&terr, expected == found) {\n                 (TypeError::Sorts(values), extra) => {\n                     let sort_string = |ty: Ty<'tcx>| match (extra, &ty.kind) {\n@@ -1499,6 +1514,10 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                 }\n             }\n         }\n+        let exp_found = match exp_found {\n+            Mismatch::Variable(exp_found) => Some(exp_found),\n+            Mismatch::Fixed(_) => None,\n+        };\n         if let Some(exp_found) = exp_found {\n             self.suggest_as_ref_where_appropriate(span, &exp_found, diag);\n         }"}, {"sha": "157f992da994033d36abf51c84e6c589d643588b", "filename": "src/test/ui/error-codes/E0308-2.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7f24c7d39e27442ce9b1e43e2c51af62bb4871f8/src%2Ftest%2Fui%2Ferror-codes%2FE0308-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f24c7d39e27442ce9b1e43e2c51af62bb4871f8/src%2Ftest%2Fui%2Ferror-codes%2FE0308-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0308-2.rs?ref=7f24c7d39e27442ce9b1e43e2c51af62bb4871f8", "patch": "@@ -0,0 +1,12 @@\n+trait DynEq {}\n+\n+impl<'a> PartialEq for &'a (dyn DynEq + 'static) {\n+    fn eq(&self, _other: &Self) -> bool {\n+        true\n+    }\n+}\n+\n+impl Eq for &dyn DynEq {} //~ ERROR E0308\n+\n+fn main() {\n+}"}, {"sha": "e7c5e4b42405f9765056e1d76d36cf15c440f968", "filename": "src/test/ui/error-codes/E0308-2.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7f24c7d39e27442ce9b1e43e2c51af62bb4871f8/src%2Ftest%2Fui%2Ferror-codes%2FE0308-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7f24c7d39e27442ce9b1e43e2c51af62bb4871f8/src%2Ftest%2Fui%2Ferror-codes%2FE0308-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0308-2.stderr?ref=7f24c7d39e27442ce9b1e43e2c51af62bb4871f8", "patch": "@@ -0,0 +1,18 @@\n+error[E0308]: mismatched types\n+  --> $DIR/E0308-2.rs:9:6\n+   |\n+LL | impl Eq for &dyn DynEq {}\n+   |      ^^ lifetime mismatch\n+   |\n+   = note: expected trait `std::cmp::PartialEq`\n+              found trait `std::cmp::PartialEq`\n+note: the lifetime `'_` as defined on the impl at 9:13...\n+  --> $DIR/E0308-2.rs:9:13\n+   |\n+LL | impl Eq for &dyn DynEq {}\n+   |             ^\n+   = note: ...does not necessarily outlive the static lifetime\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}