{"sha": "ce3b2e779e56b99a682086d7d9575260158f1ad1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlM2IyZTc3OWU1NmI5OWE2ODIwODZkN2Q5NTc1MjYwMTU4ZjFhZDE=", "commit": {"author": {"name": "Basile Desloges", "email": "basile.desloges@gmail.com", "date": "2017-10-06T15:25:41Z"}, "committer": {"name": "Basile Desloges", "email": "basile.desloges@gmail.com", "date": "2017-10-06T15:44:50Z"}, "message": "mir-borrowck: Implement end-user output for field of field projection", "tree": {"sha": "4de390536ee606ff808557279de56a40139899a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4de390536ee606ff808557279de56a40139899a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce3b2e779e56b99a682086d7d9575260158f1ad1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce3b2e779e56b99a682086d7d9575260158f1ad1", "html_url": "https://github.com/rust-lang/rust/commit/ce3b2e779e56b99a682086d7d9575260158f1ad1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce3b2e779e56b99a682086d7d9575260158f1ad1/comments", "author": {"login": "zilbuz", "id": 434964, "node_id": "MDQ6VXNlcjQzNDk2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/434964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zilbuz", "html_url": "https://github.com/zilbuz", "followers_url": "https://api.github.com/users/zilbuz/followers", "following_url": "https://api.github.com/users/zilbuz/following{/other_user}", "gists_url": "https://api.github.com/users/zilbuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zilbuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zilbuz/subscriptions", "organizations_url": "https://api.github.com/users/zilbuz/orgs", "repos_url": "https://api.github.com/users/zilbuz/repos", "events_url": "https://api.github.com/users/zilbuz/events{/privacy}", "received_events_url": "https://api.github.com/users/zilbuz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zilbuz", "id": 434964, "node_id": "MDQ6VXNlcjQzNDk2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/434964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zilbuz", "html_url": "https://github.com/zilbuz", "followers_url": "https://api.github.com/users/zilbuz/followers", "following_url": "https://api.github.com/users/zilbuz/following{/other_user}", "gists_url": "https://api.github.com/users/zilbuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zilbuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zilbuz/subscriptions", "organizations_url": "https://api.github.com/users/zilbuz/orgs", "repos_url": "https://api.github.com/users/zilbuz/repos", "events_url": "https://api.github.com/users/zilbuz/events{/privacy}", "received_events_url": "https://api.github.com/users/zilbuz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f35c4e3aa168e1d5d78753ae1d12e8f25cbec699", "url": "https://api.github.com/repos/rust-lang/rust/commits/f35c4e3aa168e1d5d78753ae1d12e8f25cbec699", "html_url": "https://github.com/rust-lang/rust/commit/f35c4e3aa168e1d5d78753ae1d12e8f25cbec699"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "384b1fb418cfd1bccd2d1bbb3cbae043897c7c74", "filename": "src/librustc_mir/borrow_check.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ce3b2e779e56b99a682086d7d9575260158f1ad1/src%2Flibrustc_mir%2Fborrow_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce3b2e779e56b99a682086d7d9575260158f1ad1/src%2Flibrustc_mir%2Fborrow_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check.rs?ref=ce3b2e779e56b99a682086d7d9575260158f1ad1", "patch": "@@ -1125,11 +1125,6 @@ impl<'c, 'b, 'a: 'b+'c, 'gcx, 'tcx: 'a> MirBorrowckCtxt<'c, 'b, 'a, 'gcx, 'tcx>\n                 match proj.elem {\n                     ProjectionElem::Deref =>\n                         self.describe_field(&proj.base, field_index),\n-                    ProjectionElem::Field(..) => {\n-                        debug!(\"End-user description not implemented for field of projection {:?}\",\n-                               proj);\n-                        format!(\"<field>{}\", field_index)\n-                    },\n                     ProjectionElem::Index(..) => {\n                         debug!(\"End-user description not implemented for field of projection {:?}\",\n                                proj);\n@@ -1142,6 +1137,8 @@ impl<'c, 'b, 'a: 'b+'c, 'gcx, 'tcx: 'a> MirBorrowckCtxt<'c, 'b, 'a, 'gcx, 'tcx>\n                     },\n                     ProjectionElem::Downcast(def, variant_index) =>\n                         format!(\"{}\", def.variants[variant_index].fields[field_index].name),\n+                    ProjectionElem::Field(_, field_type) =>\n+                        self.describe_field_from_ty(&field_type, field_index),\n                     ProjectionElem::Subslice { .. } => {\n                         debug!(\"End-user description not implemented for field of projection {:?}\",\n                                proj);"}, {"sha": "103aad693f78279a01f37635dbd7bdacfa99ddb9", "filename": "src/test/compile-fail/borrowck/borrowck-describe-lvalue.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ce3b2e779e56b99a682086d7d9575260158f1ad1/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-describe-lvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce3b2e779e56b99a682086d7d9575260158f1ad1/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-describe-lvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-describe-lvalue.rs?ref=ce3b2e779e56b99a682086d7d9575260158f1ad1", "patch": "@@ -253,4 +253,27 @@ fn main() {\n                 println!(\"e.bx: {:?}\", bx),\n         }\n     }\n+    // Field in field\n+    {\n+        struct F { x: u32, y: u32 };\n+        struct S { x: F, y: (u32, u32), };\n+        let mut s = S { x: F { x: 1, y: 2}, y: (999, 998) };\n+        let _s = &mut s;\n+        match s {\n+            S  { y: (ref y0, _), .. } =>\n+                //[ast]~^ ERROR cannot borrow `s.y.0` as immutable because `s` is also borrowed as mutable\n+                //[mir]~^^ ERROR cannot borrow `s.y.0` as immutable because `s` is also borrowed as mutable (Ast)\n+                //[mir]~| ERROR cannot borrow `s.y.0` as immutable because it is also borrowed as mutable (Mir)\n+                println!(\"y0: {:?}\", y0),\n+            _ => panic!(\"other case\"),\n+        }\n+        match s {\n+            S  { x: F { y: ref x0, .. }, .. } =>\n+                //[ast]~^ ERROR cannot borrow `s.x.y` as immutable because `s` is also borrowed as mutable\n+                //[mir]~^^ ERROR cannot borrow `s.x.y` as immutable because `s` is also borrowed as mutable (Ast)\n+                //[mir]~| ERROR cannot borrow `s.x.y` as immutable because it is also borrowed as mutable (Mir)\n+                println!(\"x0: {:?}\", x0),\n+            _ => panic!(\"other case\"),\n+        }\n+    }\n }"}]}