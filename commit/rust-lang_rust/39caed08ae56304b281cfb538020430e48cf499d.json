{"sha": "39caed08ae56304b281cfb538020430e48cf499d", "node_id": "C_kwDOAAsO6NoAKDM5Y2FlZDA4YWU1NjMwNGIyODFjZmI1MzgwMjA0MzBlNDhjZjQ5OWQ", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-05-23T10:58:20Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-05-23T10:58:20Z"}, "message": "add typo suggestions for all `AssocSuggestion` variants", "tree": {"sha": "129636dbf1fecc60beae9ec62db8899c4f1defad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/129636dbf1fecc60beae9ec62db8899c4f1defad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39caed08ae56304b281cfb538020430e48cf499d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39caed08ae56304b281cfb538020430e48cf499d", "html_url": "https://github.com/rust-lang/rust/commit/39caed08ae56304b281cfb538020430e48cf499d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39caed08ae56304b281cfb538020430e48cf499d/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42e9f2daf3d5ea55080c40c48f2695dfee491f78", "url": "https://api.github.com/repos/rust-lang/rust/commits/42e9f2daf3d5ea55080c40c48f2695dfee491f78", "html_url": "https://github.com/rust-lang/rust/commit/42e9f2daf3d5ea55080c40c48f2695dfee491f78"}], "stats": {"total": 110, "additions": 105, "deletions": 5}, "files": [{"sha": "9b5a69e4bb220676d0531aef58f7558dc359b83c", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/39caed08ae56304b281cfb538020430e48cf499d/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39caed08ae56304b281cfb538020430e48cf499d/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=39caed08ae56304b281cfb538020430e48cf499d", "patch": "@@ -460,7 +460,6 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n                         } else {\n                             err.span_label(span, \"a field by this name exists in `Self`\");\n                         }\n-                        self.r.add_typo_suggestion(&mut err, typo_sugg, ident_span);\n                     }\n                     AssocSuggestion::MethodWithSelf if self_is_available => {\n                         err.span_suggestion(\n@@ -482,6 +481,7 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n                         );\n                     }\n                 }\n+                self.r.add_typo_suggestion(&mut err, typo_sugg, ident_span);\n                 return (err, candidates);\n             }\n "}, {"sha": "ecd3f5881190420a0c0404b815c1a06a14e3de3d", "filename": "src/test/ui/resolve/typo-suggestion-for-variable-with-name-similar-to-struct-field.rs", "status": "modified", "additions": 29, "deletions": 2, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/39caed08ae56304b281cfb538020430e48cf499d/src%2Ftest%2Fui%2Fresolve%2Ftypo-suggestion-for-variable-with-name-similar-to-struct-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39caed08ae56304b281cfb538020430e48cf499d/src%2Ftest%2Fui%2Fresolve%2Ftypo-suggestion-for-variable-with-name-similar-to-struct-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftypo-suggestion-for-variable-with-name-similar-to-struct-field.rs?ref=39caed08ae56304b281cfb538020430e48cf499d", "patch": "@@ -1,8 +1,8 @@\n-struct Foo {\n+struct A {\n     config: String,\n }\n \n-impl Foo {\n+impl A {\n     fn new(cofig: String) -> Self {\n         Self { config } //~ Error cannot find value `config` in this scope\n     }\n@@ -16,4 +16,31 @@ impl Foo {\n     }\n }\n \n+trait B {\n+    const BAR: u32 = 3;\n+    type Baz;\n+    fn bar(&self);\n+    fn baz(&self) {}\n+    fn bah() {}\n+}\n+\n+impl B for Box<isize> {\n+    type Baz = String;\n+    fn bar(&self) {\n+        // let baz = 3;\n+        baz();\n+        //~^ ERROR cannot find function `baz`\n+        bah;\n+        //~^ ERROR cannot find value `bah`\n+        BAR;\n+        //~^ ERROR cannot find value `BAR` in this scope\n+        let foo: Baz = \"\".to_string();\n+        //~^ ERROR cannot find type `Baz` in this scope\n+    }\n+}\n+\n+fn ba() {}\n+const BARR: u32 = 3;\n+type Bar = String;\n+\n fn main() {}"}, {"sha": "0b0a37f246c9323fe434a56ffa8c239f9b130801", "filename": "src/test/ui/resolve/typo-suggestion-for-variable-with-name-similar-to-struct-field.stderr", "status": "modified", "additions": 75, "deletions": 2, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/39caed08ae56304b281cfb538020430e48cf499d/src%2Ftest%2Fui%2Fresolve%2Ftypo-suggestion-for-variable-with-name-similar-to-struct-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39caed08ae56304b281cfb538020430e48cf499d/src%2Ftest%2Fui%2Fresolve%2Ftypo-suggestion-for-variable-with-name-similar-to-struct-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftypo-suggestion-for-variable-with-name-similar-to-struct-field.stderr?ref=39caed08ae56304b281cfb538020430e48cf499d", "patch": "@@ -31,6 +31,79 @@ help: a local variable with a similar name exists\n LL |         println!(\"{cofig}\");\n    |                    ~~~~~\n \n-error: aborting due to 3 previous errors\n+error[E0425]: cannot find function `baz` in this scope\n+  --> $DIR/typo-suggestion-for-variable-with-name-similar-to-struct-field.rs:31:9\n+   |\n+LL |         baz();\n+   |         ^^^\n+...\n+LL | fn ba() {}\n+   | ------- similarly named function `ba` defined here\n+   |\n+help: you might have meant to call the method\n+   |\n+LL |         self.baz();\n+   |         ~~~~~~~~\n+help: a function with a similar name exists\n+   |\n+LL |         ba();\n+   |         ~~\n+\n+error[E0425]: cannot find value `bah` in this scope\n+  --> $DIR/typo-suggestion-for-variable-with-name-similar-to-struct-field.rs:33:9\n+   |\n+LL |         bah;\n+   |         ^^^\n+...\n+LL | fn ba() {}\n+   | ------- similarly named function `ba` defined here\n+   |\n+help: you might have meant to call the associated function\n+   |\n+LL |         Self::bah;\n+   |         ~~~~~~~~~\n+help: a function with a similar name exists\n+   |\n+LL |         ba;\n+   |         ~~\n+\n+error[E0425]: cannot find value `BAR` in this scope\n+  --> $DIR/typo-suggestion-for-variable-with-name-similar-to-struct-field.rs:35:9\n+   |\n+LL |         BAR;\n+   |         ^^^\n+...\n+LL | const BARR: u32 = 3;\n+   | -------------------- similarly named constant `BARR` defined here\n+   |\n+help: you might have meant to use the associated `const`\n+   |\n+LL |         Self::BAR;\n+   |         ~~~~~~~~~\n+help: a constant with a similar name exists\n+   |\n+LL |         BARR;\n+   |         ~~~~\n+\n+error[E0412]: cannot find type `Baz` in this scope\n+  --> $DIR/typo-suggestion-for-variable-with-name-similar-to-struct-field.rs:37:18\n+   |\n+LL |         let foo: Baz = \"\".to_string();\n+   |                  ^^^\n+...\n+LL | type Bar = String;\n+   | ------------------ similarly named type alias `Bar` defined here\n+   |\n+help: you might have meant to use the associated type\n+   |\n+LL |         let foo: Self::Baz = \"\".to_string();\n+   |                  ~~~~~~~~~\n+help: a type alias with a similar name exists\n+   |\n+LL |         let foo: Bar = \"\".to_string();\n+   |                  ~~~\n+\n+error: aborting due to 7 previous errors\n \n-For more information about this error, try `rustc --explain E0425`.\n+Some errors have detailed explanations: E0412, E0425.\n+For more information about an error, try `rustc --explain E0412`."}]}