{"sha": "875fa72f9e8ff3c6fd955bc5ed0de0c9b72da400", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3NWZhNzJmOWU4ZmYzYzZmZDk1NWJjNWVkMGRlMGM5YjcyZGE0MDA=", "commit": {"author": {"name": "ben", "email": "benlewisj@gmail.com", "date": "2019-09-28T01:30:26Z"}, "committer": {"name": "ben", "email": "benlewisj@gmail.com", "date": "2019-09-28T01:30:26Z"}, "message": "Add inline function `get_slice_bytes` to remove code duplication.", "tree": {"sha": "a82c2c64931b19f0c7073589c467719384db4efb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a82c2c64931b19f0c7073589c467719384db4efb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/875fa72f9e8ff3c6fd955bc5ed0de0c9b72da400", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/875fa72f9e8ff3c6fd955bc5ed0de0c9b72da400", "html_url": "https://github.com/rust-lang/rust/commit/875fa72f9e8ff3c6fd955bc5ed0de0c9b72da400", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/875fa72f9e8ff3c6fd955bc5ed0de0c9b72da400/comments", "author": {"login": "BenLewis-Seequent", "id": 7391596, "node_id": "MDQ6VXNlcjczOTE1OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/7391596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BenLewis-Seequent", "html_url": "https://github.com/BenLewis-Seequent", "followers_url": "https://api.github.com/users/BenLewis-Seequent/followers", "following_url": "https://api.github.com/users/BenLewis-Seequent/following{/other_user}", "gists_url": "https://api.github.com/users/BenLewis-Seequent/gists{/gist_id}", "starred_url": "https://api.github.com/users/BenLewis-Seequent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BenLewis-Seequent/subscriptions", "organizations_url": "https://api.github.com/users/BenLewis-Seequent/orgs", "repos_url": "https://api.github.com/users/BenLewis-Seequent/repos", "events_url": "https://api.github.com/users/BenLewis-Seequent/events{/privacy}", "received_events_url": "https://api.github.com/users/BenLewis-Seequent/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BenLewis-Seequent", "id": 7391596, "node_id": "MDQ6VXNlcjczOTE1OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/7391596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BenLewis-Seequent", "html_url": "https://github.com/BenLewis-Seequent", "followers_url": "https://api.github.com/users/BenLewis-Seequent/followers", "following_url": "https://api.github.com/users/BenLewis-Seequent/following{/other_user}", "gists_url": "https://api.github.com/users/BenLewis-Seequent/gists{/gist_id}", "starred_url": "https://api.github.com/users/BenLewis-Seequent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BenLewis-Seequent/subscriptions", "organizations_url": "https://api.github.com/users/BenLewis-Seequent/orgs", "repos_url": "https://api.github.com/users/BenLewis-Seequent/repos", "events_url": "https://api.github.com/users/BenLewis-Seequent/events{/privacy}", "received_events_url": "https://api.github.com/users/BenLewis-Seequent/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22b87a5515b73bfc60a0d1da533d7aeae4a61c21", "url": "https://api.github.com/repos/rust-lang/rust/commits/22b87a5515b73bfc60a0d1da533d7aeae4a61c21", "html_url": "https://github.com/rust-lang/rust/commit/22b87a5515b73bfc60a0d1da533d7aeae4a61c21"}], "stats": {"total": 42, "additions": 18, "deletions": 24}, "files": [{"sha": "6d81e36e92862ad02db4b411dcec8b2c720a0ac3", "filename": "src/librustc/ty/relate.rs", "status": "modified", "additions": 18, "deletions": 24, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/875fa72f9e8ff3c6fd955bc5ed0de0c9b72da400/src%2Flibrustc%2Fty%2Frelate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/875fa72f9e8ff3c6fd955bc5ed0de0c9b72da400/src%2Flibrustc%2Fty%2Frelate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Frelate.rs?ref=875fa72f9e8ff3c6fd955bc5ed0de0c9b72da400", "patch": "@@ -584,32 +584,26 @@ pub fn super_relate_consts<R: TypeRelation<'tcx>>(\n         // FIXME(const_generics): we should either handle `Scalar::Ptr` or add a comment\n         // saying that we're not handling it intentionally.\n \n-        (\n-            ConstValue::Slice { data: alloc_a, start: offset_a, end: end_a },\n-            ConstValue::Slice { data: alloc_b, start: offset_b, end: end_b },\n-        ) => {\n-            let len_a = end_a - offset_a;\n-            let len_b = end_b - offset_b;\n-            let a_bytes = alloc_a\n-                .get_bytes(\n-                    &tcx,\n-                    // invent a pointer, only the offset is relevant anyway\n-                    Pointer::new(AllocId(0), Size::from_bytes(offset_a as u64)),\n-                    Size::from_bytes(len_a as u64),\n-                )\n-                .unwrap_or_else(|err| bug!(\"const slice is invalid: {:?}\", err));\n-\n-            let b_bytes = alloc_b\n-                .get_bytes(\n-                    &tcx,\n-                    // invent a pointer, only the offset is relevant anyway\n-                    Pointer::new(AllocId(0), Size::from_bytes(offset_b as u64)),\n-                    Size::from_bytes(len_b as u64),\n-                )\n-                .unwrap_or_else(|err| bug!(\"const slice is invalid: {:?}\", err));\n+        (a_val @ ConstValue::Slice { .. }, b_val @ ConstValue::Slice { .. }) => {\n+            fn get_slice_bytes<'tcx>(tcx: TyCtxt<'tcx>, val: ConstValue<'tcx>) -> &'tcx [u8] {\n+                if let ConstValue::Slice { data, start, end } = val {\n+                    let len = end - start;\n+                    data.get_bytes(\n+                        &tcx,\n+                        // invent a pointer, only the offset is relevant anyway\n+                        Pointer::new(AllocId(0), Size::from_bytes(start as u64)),\n+                        Size::from_bytes(len as u64),\n+                    ).unwrap_or_else(|err| bug!(\"const slice is invalid: {:?}\", err))\n+                } else {\n+                    unreachable!();\n+                }\n+            }\n+\n+            let a_bytes = get_slice_bytes(tcx, a_val);\n+            let b_bytes = get_slice_bytes(tcx, b_val);\n             if a_bytes == b_bytes {\n                 Ok(tcx.mk_const(ty::Const {\n-                    val: ConstValue::Slice { data: alloc_a, start: offset_a, end: end_a },\n+                    val: a_val,\n                     ty: a.ty,\n                 }))\n             } else {"}]}