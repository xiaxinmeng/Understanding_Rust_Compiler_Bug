{"sha": "9fd4be9c2e4ef563aaa00f0d8a631e315547daf0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmZDRiZTljMmU0ZWY1NjNhYWEwMGYwZDhhNjMxZTMxNTU0N2RhZjA=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-10-30T17:18:00Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-11-07T07:54:38Z"}, "message": "Update codegen tests.", "tree": {"sha": "a027326e748b0c03f2011704fa5b384e93b3cbe5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a027326e748b0c03f2011704fa5b384e93b3cbe5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fd4be9c2e4ef563aaa00f0d8a631e315547daf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fd4be9c2e4ef563aaa00f0d8a631e315547daf0", "html_url": "https://github.com/rust-lang/rust/commit/9fd4be9c2e4ef563aaa00f0d8a631e315547daf0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fd4be9c2e4ef563aaa00f0d8a631e315547daf0/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cedae73c8c1f474d979dbc368fc6848bff335f84", "url": "https://api.github.com/repos/rust-lang/rust/commits/cedae73c8c1f474d979dbc368fc6848bff335f84", "html_url": "https://github.com/rust-lang/rust/commit/cedae73c8c1f474d979dbc368fc6848bff335f84"}], "stats": {"total": 40, "additions": 20, "deletions": 20}, "files": [{"sha": "342a4f0d085c40c7bec87df2ce769ba709d050de", "filename": "src/test/codegen/adjustments.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9fd4be9c2e4ef563aaa00f0d8a631e315547daf0/src%2Ftest%2Fcodegen%2Fadjustments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fd4be9c2e4ef563aaa00f0d8a631e315547daf0/src%2Ftest%2Fcodegen%2Fadjustments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fadjustments.rs?ref=9fd4be9c2e4ef563aaa00f0d8a631e315547daf0", "patch": "@@ -15,7 +15,7 @@\n // Hack to get the correct size for the length part in slices\n // CHECK: @helper([[USIZE:i[0-9]+]] %arg0)\n #[no_mangle]\n-fn helper(_: usize) {\n+pub fn helper(_: usize) {\n }\n \n // CHECK-LABEL: @no_op_slice_adjustment"}, {"sha": "29e2840c8817e9011f8ccad2e832f0ab6a9737c4", "filename": "src/test/codegen/function-arguments.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9fd4be9c2e4ef563aaa00f0d8a631e315547daf0/src%2Ftest%2Fcodegen%2Ffunction-arguments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fd4be9c2e4ef563aaa00f0d8a631e315547daf0/src%2Ftest%2Fcodegen%2Ffunction-arguments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Ffunction-arguments.rs?ref=9fd4be9c2e4ef563aaa00f0d8a631e315547daf0", "patch": "@@ -93,20 +93,20 @@ pub fn struct_return() -> S {\n // Hack to get the correct size for the length part in slices\n // CHECK: @helper([[USIZE:i[0-9]+]] %arg0)\n #[no_mangle]\n-fn helper(_: usize) {\n+pub fn helper(_: usize) {\n }\n \n // CHECK: @slice(i8* noalias nonnull readonly %arg0.ptr, [[USIZE]] %arg0.meta)\n // FIXME #25759 This should also have `nocapture`\n #[no_mangle]\n-fn slice(_: &[u8]) {\n+pub fn slice(_: &[u8]) {\n }\n \n // CHECK: @mutable_slice(i8* nonnull %arg0.ptr, [[USIZE]] %arg0.meta)\n // FIXME #25759 This should also have `nocapture`\n // ... there's this LLVM bug that forces us to not use noalias, see #29485\n #[no_mangle]\n-fn mutable_slice(_: &mut [u8]) {\n+pub fn mutable_slice(_: &mut [u8]) {\n }\n \n // CHECK: @unsafe_slice(%UnsafeInner* nonnull %arg0.ptr, [[USIZE]] %arg0.meta)\n@@ -118,23 +118,23 @@ pub fn unsafe_slice(_: &[UnsafeInner]) {\n // CHECK: @str(i8* noalias nonnull readonly %arg0.ptr, [[USIZE]] %arg0.meta)\n // FIXME #25759 This should also have `nocapture`\n #[no_mangle]\n-fn str(_: &[u8]) {\n+pub fn str(_: &[u8]) {\n }\n \n // CHECK: @trait_borrow({}* nonnull, {}* noalias nonnull readonly)\n // FIXME #25759 This should also have `nocapture`\n #[no_mangle]\n-fn trait_borrow(_: &Drop) {\n+pub fn trait_borrow(_: &Drop) {\n }\n \n // CHECK: @trait_box({}* noalias nonnull, {}* noalias nonnull readonly)\n #[no_mangle]\n-fn trait_box(_: Box<Drop>) {\n+pub fn trait_box(_: Box<Drop>) {\n }\n \n // CHECK: { i16*, [[USIZE]] } @return_slice(i16* noalias nonnull readonly %x.ptr, [[USIZE]] %x.meta)\n #[no_mangle]\n-fn return_slice(x: &[u16]) -> &[u16] {\n+pub fn return_slice(x: &[u16]) -> &[u16] {\n   x\n }\n "}, {"sha": "884cf59c1c192b02a1a5bce2efd6219daddc033c", "filename": "src/test/codegen/mir_zst_stores.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9fd4be9c2e4ef563aaa00f0d8a631e315547daf0/src%2Ftest%2Fcodegen%2Fmir_zst_stores.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fd4be9c2e4ef563aaa00f0d8a631e315547daf0/src%2Ftest%2Fcodegen%2Fmir_zst_stores.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fmir_zst_stores.rs?ref=9fd4be9c2e4ef563aaa00f0d8a631e315547daf0", "patch": "@@ -19,7 +19,7 @@ struct Zst { phantom: PhantomData<Zst> }\n // CHECK-LABEL: @mir\n // CHECK-NOT: store{{.*}}undef\n #[no_mangle]\n-fn mir() {\n+pub fn mir() {\n     let x = Zst { phantom: PhantomData };\n     let y = (x, 0);\n     drop(y);"}, {"sha": "aab5f1bfb4f863825d67206ef1efd378688bbe0b", "filename": "src/test/codegen/naked-functions.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9fd4be9c2e4ef563aaa00f0d8a631e315547daf0/src%2Ftest%2Fcodegen%2Fnaked-functions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fd4be9c2e4ef563aaa00f0d8a631e315547daf0/src%2Ftest%2Fcodegen%2Fnaked-functions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fnaked-functions.rs?ref=9fd4be9c2e4ef563aaa00f0d8a631e315547daf0", "patch": "@@ -16,40 +16,40 @@\n #![feature(naked_functions)]\n \n // CHECK: Function Attrs: naked uwtable\n-// CHECK-NEXT: define internal void @naked_empty()\n+// CHECK-NEXT: define void @naked_empty()\n #[no_mangle]\n #[naked]\n-fn naked_empty() {\n+pub fn naked_empty() {\n     // CHECK-NEXT: {{.+}}:\n     // CHECK-NEXT: ret void\n }\n \n // CHECK: Function Attrs: naked uwtable\n #[no_mangle]\n #[naked]\n-// CHECK-NEXT: define internal void @naked_with_args(i{{[0-9]+}})\n-fn naked_with_args(a: isize) {\n+// CHECK-NEXT: define void @naked_with_args(i{{[0-9]+}})\n+pub fn naked_with_args(a: isize) {\n     // CHECK-NEXT: {{.+}}:\n     // CHECK-NEXT: %a = alloca i{{[0-9]+}}\n     &a; // keep variable in an alloca\n     // CHECK: ret void\n }\n \n // CHECK: Function Attrs: naked uwtable\n-// CHECK-NEXT: define internal i{{[0-9]+}} @naked_with_return()\n+// CHECK-NEXT: define i{{[0-9]+}} @naked_with_return()\n #[no_mangle]\n #[naked]\n-fn naked_with_return() -> isize {\n+pub fn naked_with_return() -> isize {\n     // CHECK-NEXT: {{.+}}:\n     // CHECK-NEXT: ret i{{[0-9]+}} 0\n     0\n }\n \n // CHECK: Function Attrs: naked uwtable\n-// CHECK-NEXT: define internal i{{[0-9]+}} @naked_with_args_and_return(i{{[0-9]+}})\n+// CHECK-NEXT: define i{{[0-9]+}} @naked_with_args_and_return(i{{[0-9]+}})\n #[no_mangle]\n #[naked]\n-fn naked_with_args_and_return(a: isize) -> isize {\n+pub fn naked_with_args_and_return(a: isize) -> isize {\n     // CHECK-NEXT: {{.+}}:\n     // CHECK-NEXT: %a = alloca i{{[0-9]+}}\n     &a; // keep variable in an alloca\n@@ -58,10 +58,10 @@ fn naked_with_args_and_return(a: isize) -> isize {\n }\n \n // CHECK: Function Attrs: naked uwtable\n-// CHECK-NEXT: define internal void @naked_recursive()\n+// CHECK-NEXT: define void @naked_recursive()\n #[no_mangle]\n #[naked]\n-fn naked_recursive() {\n+pub fn naked_recursive() {\n     // CHECK-NEXT: {{.+}}:\n     // CHECK-NEXT: call void @naked_empty()\n "}, {"sha": "4b713e28b05253d2cc3527756ff3154761135c20", "filename": "src/test/codegen/refs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9fd4be9c2e4ef563aaa00f0d8a631e315547daf0/src%2Ftest%2Fcodegen%2Frefs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fd4be9c2e4ef563aaa00f0d8a631e315547daf0/src%2Ftest%2Fcodegen%2Frefs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Frefs.rs?ref=9fd4be9c2e4ef563aaa00f0d8a631e315547daf0", "patch": "@@ -15,7 +15,7 @@\n // Hack to get the correct size for the length part in slices\n // CHECK: @helper([[USIZE:i[0-9]+]] %arg0)\n #[no_mangle]\n-fn helper(_: usize) {\n+pub fn helper(_: usize) {\n }\n \n // CHECK-LABEL: @ref_dst"}]}