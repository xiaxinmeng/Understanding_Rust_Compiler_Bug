{"sha": "73a033e77c830ef793a1c302a4794bf73a8c61c4", "node_id": "C_kwDOAAsO6NoAKDczYTAzM2U3N2M4MzBlZjc5M2ExYzMwMmE0Nzk0YmY3M2E4YzYxYzQ", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-04-11T03:13:50Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-04-13T13:45:51Z"}, "message": "feat: allow customizing the command for running build scripts", "tree": {"sha": "9b42778bb96e3172b9aef2f2357cc4468ca3f558", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b42778bb96e3172b9aef2f2357cc4468ca3f558"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73a033e77c830ef793a1c302a4794bf73a8c61c4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE3RQPHNISvvEnSKtjbQF6ltjmwvkFAmJW1CEACgkQbQF6ltjm\nwvnmLRAAgPwAYUd/4e9Xc45zOpDCXb9PpH4ipF4MLhh4MUZmXhXSaaHn+mlWM2Zh\nkc9xBQNnvoJK7a1UQD9tCdCriUXkxN42DsdHWCtrHGX7vatL4hRGq/f5/JWyj62O\nUJfTmK/Y79PmLuxkGCtJ5gjzVK4x4G+U0ec6Bxg8XwMxnkTKDRr/I6QfkAACYgSo\nV5WXoNw8fRe7LkZcnOQcV9DL3lLkD/kkZqLOo4xqjFB7fwhWDQ/p7iBdEqs4RbkQ\niL57bhwFOMktrdUxJEylZAvy/xAifj9mW+xEJjUyg96efT5m1Wt/511KxCG8pxZa\ng3+UY3EJU3pmq4gKdQ+FT4SrGT0XfPDztXm/MW81IrA2nexVJagcJaaqjbl1SoNw\nxZhNWOAWm3S8hg0XBY+NSRih5tOhVOUqVV3CgLIcrwJ9rctj+y5ibbSPh0urQ05c\n8h21geH0RFnmnbeHjXAsR1bStCXyc+a3A1Txd8TwIu8pAoh6u/gpUwZlhEugBPff\nQXABJvvaYqwEhqCotpr6Tlq52ci5GkR+DICpAyZkTf5Ud5bT3swPDGmqn1ZivEaB\nxtcIRyvVkCD59D4VQyp2XbANd8myncEI10+mNVv9mVCrSaR2vcsqyplTjNpK0hZk\nz5X3M8y/4Lqklfxqh2vCuvIvmEv3iQfkokQljxQkVsgGw9rD5nU=\n=m7y/\n-----END PGP SIGNATURE-----", "payload": "tree 9b42778bb96e3172b9aef2f2357cc4468ca3f558\nparent 24cf957627d5ede1b395f92ff871fd7a281d49a4\nauthor Deadbeef <ent3rm4n@gmail.com> 1649646830 +1000\ncommitter Deadbeef <ent3rm4n@gmail.com> 1649857551 +1000\n\nfeat: allow customizing the command for running build scripts\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73a033e77c830ef793a1c302a4794bf73a8c61c4", "html_url": "https://github.com/rust-lang/rust/commit/73a033e77c830ef793a1c302a4794bf73a8c61c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73a033e77c830ef793a1c302a4794bf73a8c61c4/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24cf957627d5ede1b395f92ff871fd7a281d49a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/24cf957627d5ede1b395f92ff871fd7a281d49a4", "html_url": "https://github.com/rust-lang/rust/commit/24cf957627d5ede1b395f92ff871fd7a281d49a4"}], "stats": {"total": 68, "additions": 53, "deletions": 15}, "files": [{"sha": "d96c135ba5e359439b9a75771d1a54d934a4d994", "filename": "crates/project_model/src/build_scripts.rs", "status": "modified", "additions": 28, "deletions": 15, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/73a033e77c830ef793a1c302a4794bf73a8c61c4/crates%2Fproject_model%2Fsrc%2Fbuild_scripts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73a033e77c830ef793a1c302a4794bf73a8c61c4/crates%2Fproject_model%2Fsrc%2Fbuild_scripts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fbuild_scripts.rs?ref=73a033e77c830ef793a1c302a4794bf73a8c61c4", "patch": "@@ -42,22 +42,15 @@ pub(crate) struct BuildScriptOutput {\n }\n \n impl WorkspaceBuildScripts {\n-    pub(crate) fn run(\n-        config: &CargoConfig,\n-        workspace: &CargoWorkspace,\n-        progress: &dyn Fn(String),\n-    ) -> Result<WorkspaceBuildScripts> {\n+    fn build_command(config: &CargoConfig) -> Command {\n+        if let Some([program, args @ ..]) = config.run_build_script_command.as_deref() {\n+            let mut cmd = Command::new(program);\n+            cmd.args(args);\n+            return cmd;\n+        }\n+\n         let mut cmd = Command::new(toolchain::cargo());\n \n-        if config.wrap_rustc_in_build_scripts {\n-            // Setup RUSTC_WRAPPER to point to `rust-analyzer` binary itself. We use\n-            // that to compile only proc macros and build scripts during the initial\n-            // `cargo check`.\n-            let myself = std::env::current_exe()?;\n-            cmd.env(\"RUSTC_WRAPPER\", myself);\n-            cmd.env(\"RA_RUSTC_WRAPPER\", \"1\");\n-        }\n-        cmd.current_dir(workspace.workspace_root());\n         cmd.args(&[\"check\", \"--quiet\", \"--workspace\", \"--message-format=json\"]);\n \n         // --all-targets includes tests, benches and examples in addition to the\n@@ -81,6 +74,26 @@ impl WorkspaceBuildScripts {\n             }\n         }\n \n+        cmd\n+    }\n+    pub(crate) fn run(\n+        config: &CargoConfig,\n+        workspace: &CargoWorkspace,\n+        progress: &dyn Fn(String),\n+    ) -> Result<WorkspaceBuildScripts> {\n+        let mut cmd = Self::build_command(config);\n+\n+        if config.wrap_rustc_in_build_scripts {\n+            // Setup RUSTC_WRAPPER to point to `rust-analyzer` binary itself. We use\n+            // that to compile only proc macros and build scripts during the initial\n+            // `cargo check`.\n+            let myself = std::env::current_exe()?;\n+            cmd.env(\"RUSTC_WRAPPER\", myself);\n+            cmd.env(\"RA_RUSTC_WRAPPER\", \"1\");\n+        }\n+\n+        cmd.current_dir(workspace.workspace_root());\n+\n         cmd.stdout(Stdio::piped()).stderr(Stdio::piped()).stdin(Stdio::null());\n \n         let mut res = WorkspaceBuildScripts::default();\n@@ -104,7 +117,7 @@ impl WorkspaceBuildScripts {\n                 }\n \n                 // Copy-pasted from existing cargo_metadata. It seems like we\n-                // should be using sered_stacker here?\n+                // should be using serde_stacker here?\n                 let mut deserializer = serde_json::Deserializer::from_str(line);\n                 deserializer.disable_recursion_limit();\n                 let message = Message::deserialize(&mut deserializer)"}, {"sha": "76ef44e1471ee35c357f89512524544649e49913", "filename": "crates/project_model/src/cargo_workspace.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73a033e77c830ef793a1c302a4794bf73a8c61c4/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73a033e77c830ef793a1c302a4794bf73a8c61c4/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs?ref=73a033e77c830ef793a1c302a4794bf73a8c61c4", "patch": "@@ -96,6 +96,8 @@ pub struct CargoConfig {\n     pub unset_test_crates: UnsetTestCrates,\n \n     pub wrap_rustc_in_build_scripts: bool,\n+\n+    pub run_build_script_command: Option<Vec<String>>,\n }\n \n impl CargoConfig {"}, {"sha": "c9d07a54bb434171b0fb0e5bddf2399d53764308", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/73a033e77c830ef793a1c302a4794bf73a8c61c4/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73a033e77c830ef793a1c302a4794bf73a8c61c4/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=73a033e77c830ef793a1c302a4794bf73a8c61c4", "patch": "@@ -79,6 +79,10 @@ config_data! {\n         /// Run build scripts (`build.rs`) for more precise code analysis.\n         cargo_runBuildScripts |\n         cargo_loadOutDirsFromCheck: bool = \"true\",\n+        /// Advanced option, fully override the command rust-analyzer uses to\n+        /// run build scripts and build procedural macros. The command should\n+        /// include `--message-format=json` or a similar option.\n+        cargo_runBuildScriptsCommand: Option<Vec<String>> = \"null\",\n         /// Use `RUSTC_WRAPPER=rust-analyzer` when running build scripts to\n         /// avoid compiling unnecessary things.\n         cargo_useRustcWrapperForBuildScripts: bool = \"true\",\n@@ -803,6 +807,7 @@ impl Config {\n             rustc_source,\n             unset_test_crates: UnsetTestCrates::Only(self.data.cargo_unsetTest.clone()),\n             wrap_rustc_in_build_scripts: self.data.cargo_useRustcWrapperForBuildScripts,\n+            run_build_script_command: self.data.cargo_runBuildScriptsCommand.clone(),\n         }\n     }\n "}, {"sha": "ace74f8e08af58d3ee32b6f4e7474cabbbae663d", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/73a033e77c830ef793a1c302a4794bf73a8c61c4/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/73a033e77c830ef793a1c302a4794bf73a8c61c4/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=73a033e77c830ef793a1c302a4794bf73a8c61c4", "patch": "@@ -64,6 +64,13 @@ List of features to activate.\n --\n Run build scripts (`build.rs`) for more precise code analysis.\n --\n+[[rust-analyzer.cargo.runBuildScriptsCommand]]rust-analyzer.cargo.runBuildScriptsCommand (default: `null`)::\n++\n+--\n+Advanced option, fully override the command rust-analyzer uses to\n+run build scripts and build procedural macros. The command should\n+include `--message-format=json` or a similar option.\n+--\n [[rust-analyzer.cargo.useRustcWrapperForBuildScripts]]rust-analyzer.cargo.useRustcWrapperForBuildScripts (default: `true`)::\n +\n --"}, {"sha": "9dfae1a8a09717c9b909f865646dff2d8185ca7e", "filename": "editors/code/package.json", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/73a033e77c830ef793a1c302a4794bf73a8c61c4/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/73a033e77c830ef793a1c302a4794bf73a8c61c4/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=73a033e77c830ef793a1c302a4794bf73a8c61c4", "patch": "@@ -476,6 +476,17 @@\n                     \"default\": true,\n                     \"type\": \"boolean\"\n                 },\n+                \"rust-analyzer.cargo.runBuildScriptsCommand\": {\n+                    \"markdownDescription\": \"Advanced option, fully override the command rust-analyzer uses to\\nrun build scripts and build procedural macros. The command should\\ninclude `--message-format=json` or a similar option.\",\n+                    \"default\": null,\n+                    \"type\": [\n+                        \"null\",\n+                        \"array\"\n+                    ],\n+                    \"items\": {\n+                        \"type\": \"string\"\n+                    }\n+                },\n                 \"rust-analyzer.cargo.useRustcWrapperForBuildScripts\": {\n                     \"markdownDescription\": \"Use `RUSTC_WRAPPER=rust-analyzer` when running build scripts to\\navoid compiling unnecessary things.\",\n                     \"default\": true,"}]}