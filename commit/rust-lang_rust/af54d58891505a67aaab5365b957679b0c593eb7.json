{"sha": "af54d58891505a67aaab5365b957679b0c593eb7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmNTRkNTg4OTE1MDVhNjdhYWFiNTM2NWI5NTc2NzliMGM1OTNlYjc=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-05-17T02:57:49Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-05-17T02:57:49Z"}, "message": "Update to new for-loop protocol", "tree": {"sha": "ee9652e80a155ae3744dc23207846ea803ec6cc9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee9652e80a155ae3744dc23207846ea803ec6cc9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af54d58891505a67aaab5365b957679b0c593eb7", "comment_count": 8, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af54d58891505a67aaab5365b957679b0c593eb7", "html_url": "https://github.com/rust-lang/rust/commit/af54d58891505a67aaab5365b957679b0c593eb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af54d58891505a67aaab5365b957679b0c593eb7/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c67a85ada1c949005d030e5cf916aa01c8984f5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c67a85ada1c949005d030e5cf916aa01c8984f5f", "html_url": "https://github.com/rust-lang/rust/commit/c67a85ada1c949005d030e5cf916aa01c8984f5f"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "4c6e0791ba2ca531713b1ca6f66f58bfeffe0851", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/af54d58891505a67aaab5365b957679b0c593eb7/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af54d58891505a67aaab5365b957679b0c593eb7/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=af54d58891505a67aaab5365b957679b0c593eb7", "patch": "@@ -1790,23 +1790,23 @@ pub fn each2_mut<U, T>(v1: &mut [U], v2: &mut [T], f: &fn(u: &mut U, t: &mut T)\n  *\n  *  * `fun` - The function to iterate over the combinations\n  */\n-pub fn each_permutation<T:Copy>(values: &[T], fun: &fn(perm : &[T]) -> bool) {\n+pub fn each_permutation<T:Copy>(values: &[T], fun: &fn(perm : &[T]) -> bool) -> bool {\n     let length = values.len();\n     let mut permutation = vec::from_fn(length, |i| values[i]);\n     if length <= 1 {\n         fun(permutation);\n-        return;\n+        return true;\n     }\n     let mut indices = vec::from_fn(length, |i| i);\n     loop {\n-        if !fun(permutation) { return; }\n+        if !fun(permutation) { return true; }\n         // find largest k such that indices[k] < indices[k+1]\n         // if no such k exists, all permutations have been generated\n         let mut k = length - 2;\n         while k > 0 && indices[k] >= indices[k+1] {\n             k -= 1;\n         }\n-        if k == 0 && indices[0] > indices[1] { return; }\n+        if k == 0 && indices[0] > indices[1] { return true; }\n         // find largest l such that indices[k] < indices[l]\n         // k+1 is guaranteed to be such\n         let mut l = length - 1;"}]}