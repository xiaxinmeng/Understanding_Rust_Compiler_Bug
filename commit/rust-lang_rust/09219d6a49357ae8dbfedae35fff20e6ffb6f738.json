{"sha": "09219d6a49357ae8dbfedae35fff20e6ffb6f738", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5MjE5ZDZhNDkzNTdhZThkYmZlZGFlMzVmZmYyMGU2ZmZiNmY3Mzg=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-06-18T15:57:39Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-06-18T15:57:39Z"}, "message": "collector: apply param substs to closures cast to fn items\n\nFixes #42718.", "tree": {"sha": "baeb6e38491ea26e9ecfce8d8102c3c66ebd5e89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/baeb6e38491ea26e9ecfce8d8102c3c66ebd5e89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09219d6a49357ae8dbfedae35fff20e6ffb6f738", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09219d6a49357ae8dbfedae35fff20e6ffb6f738", "html_url": "https://github.com/rust-lang/rust/commit/09219d6a49357ae8dbfedae35fff20e6ffb6f738", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09219d6a49357ae8dbfedae35fff20e6ffb6f738/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff9f2d2ae94fd951229c33ae55076fce4f68fab0", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff9f2d2ae94fd951229c33ae55076fce4f68fab0", "html_url": "https://github.com/rust-lang/rust/commit/ff9f2d2ae94fd951229c33ae55076fce4f68fab0"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "d723cf325718ea86de681f451e32c53091ffad08", "filename": "src/librustc_trans/collector.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/09219d6a49357ae8dbfedae35fff20e6ffb6f738/src%2Flibrustc_trans%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09219d6a49357ae8dbfedae35fff20e6ffb6f738/src%2Flibrustc_trans%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcollector.rs?ref=09219d6a49357ae8dbfedae35fff20e6ffb6f738", "patch": "@@ -493,6 +493,8 @@ impl<'a, 'tcx> MirVisitor<'tcx> for MirNeighborCollector<'a, 'tcx> {\n             }\n             mir::Rvalue::Cast(mir::CastKind::ClosureFnPointer, ref operand, _) => {\n                 let source_ty = operand.ty(self.mir, self.scx.tcx());\n+                let source_ty = self.scx.tcx().trans_apply_param_substs(self.param_substs,\n+                                                                        &source_ty);\n                 match source_ty.sty {\n                     ty::TyClosure(def_id, substs) => {\n                         let instance = monomorphize::resolve_closure(\n@@ -543,6 +545,8 @@ impl<'a, 'tcx> MirVisitor<'tcx> for MirNeighborCollector<'a, 'tcx> {\n                              block: mir::BasicBlock,\n                              kind: &mir::TerminatorKind<'tcx>,\n                              location: Location) {\n+        debug!(\"visiting terminator {:?} @ {:?}\", kind, location);\n+\n         let tcx = self.scx.tcx();\n         match *kind {\n             mir::TerminatorKind::Call { ref func, .. } => {"}, {"sha": "343209143cc2f82a68c02ac1c029001478004b96", "filename": "src/test/run-pass/closure-to-fn-coercion.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/09219d6a49357ae8dbfedae35fff20e6ffb6f738/src%2Ftest%2Frun-pass%2Fclosure-to-fn-coercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09219d6a49357ae8dbfedae35fff20e6ffb6f738/src%2Ftest%2Frun-pass%2Fclosure-to-fn-coercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclosure-to-fn-coercion.rs?ref=09219d6a49357ae8dbfedae35fff20e6ffb6f738", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use std::mem;\n+\n const FOO: fn(u8) -> u8 = |v: u8| { v };\n \n const BAR: [fn(&mut u32); 5] = [\n@@ -21,6 +23,10 @@ fn func_specific() -> (fn() -> u32) {\n     || return 42\n }\n \n+fn generic<T>(_: T) -> fn() -> usize {\n+    || mem::size_of::<T>()\n+}\n+\n fn main() {\n     // Items\n     assert_eq!(func_specific()(), 42);\n@@ -34,4 +40,5 @@ fn main() {\n     assert_eq!({ BAR[2](&mut a); a }, 3);\n     assert_eq!({ BAR[3](&mut a); a }, 6);\n     assert_eq!({ BAR[4](&mut a); a }, 10);\n+    assert_eq!(generic(0i8)(), 1);\n }"}]}