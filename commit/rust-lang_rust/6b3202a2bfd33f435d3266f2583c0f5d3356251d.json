{"sha": "6b3202a2bfd33f435d3266f2583c0f5d3356251d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiMzIwMmEyYmZkMzNmNDM1ZDMyNjZmMjU4M2MwZjVkMzM1NjI1MWQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2018-03-27T06:31:05Z"}, "committer": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2018-03-27T07:18:08Z"}, "message": "Trim discriminants to their final type size", "tree": {"sha": "368268409c99904b176146ca27e17d4bc43b7c79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/368268409c99904b176146ca27e17d4bc43b7c79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b3202a2bfd33f435d3266f2583c0f5d3356251d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJgBAABCgBKFiEEvpMjxK4/cnPNfesJHVy0/Fl8MAQFAlq58DEsHGdpdC1uby1y\nZXBseS05ODc5MTY1NzE2NDc5NDEzMTMxQG9saS1vYmsuZGUACgkQHVy0/Fl8MAQo\nWhAAupYNKCZeWEfJRK4w91zLXE0kurXhk8/rSLy2trXFvgcBznS7XUYqOXp5tdw1\nt7I6U3PP2CCKmpL7/A+vKdvK6CPXaddAKoXfaK04g68xnEtHVP9+cHu6130oc7EZ\nVKlJz8WdjRcBWJyXAwxkjD0nSl9N0t5cBpWmcHUCUczmu2yg5n2SeMdkwYyZweSK\naruAccrEUrucciM65XEsqxQorSOW0NcxY4sqVddqtfFc7CQYmc0dOa0eRAZjtzVO\nDOc3+7VXfyZL5GrN7hr3scVSkR9Xjq35jrOingS342QQxM7HUgCYwu9iRUkSYSjG\nS3aQXOmqww+QE5wTHZWsUEfXrt2Ic/42kgo2cdrO8Zd0g4WdsW9JNcVldffpYGfg\nV9Vc9j/S6Emta78s/ioxpxHBpTHMKBuei8BnrgD783Dng370oY4MZZ0yMk2lpIbn\nJrZmoPkIvFvX9fBlE/QIR+89VEqbrDasT9fjG/NSLr87l3jWPBETN0b1xH6IAqXY\nVrTEgM46ydOJqhOUhnFVyeUVc829Dt4mBd/jl96Ua0J7a6dykRxnofnxwvA2Hn4J\nSPjexXgFuN0ccy+0VRZe6LLaeIy/UIkGG3BuuMi4OQ/szXmBMbunUkkG/khOa3lo\nmiEYz8e4sjb6lJFun7CYb8VufKDu0AVj4Kpuz8e3nIpFnns=\n=mWE8\n-----END PGP SIGNATURE-----", "payload": "tree 368268409c99904b176146ca27e17d4bc43b7c79\nparent a0b0f5fba5d7bf18b24d1fa0e454a4fe871fecee\nauthor Oliver Schneider <git-no-reply-9879165716479413131@oli-obk.de> 1522132265 +0200\ncommitter Oliver Schneider <git-no-reply-9879165716479413131@oli-obk.de> 1522135088 +0200\n\nTrim discriminants to their final type size\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b3202a2bfd33f435d3266f2583c0f5d3356251d", "html_url": "https://github.com/rust-lang/rust/commit/6b3202a2bfd33f435d3266f2583c0f5d3356251d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b3202a2bfd33f435d3266f2583c0f5d3356251d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0b0f5fba5d7bf18b24d1fa0e454a4fe871fecee", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0b0f5fba5d7bf18b24d1fa0e454a4fe871fecee", "html_url": "https://github.com/rust-lang/rust/commit/a0b0f5fba5d7bf18b24d1fa0e454a4fe871fecee"}], "stats": {"total": 35, "additions": 29, "deletions": 6}, "files": [{"sha": "7359b1ed1021cc890bb525ba7b6dbcb3219dbf8e", "filename": "src/librustc_mir/hair/pattern/mod.rs", "status": "modified", "additions": 29, "deletions": 6, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/6b3202a2bfd33f435d3266f2583c0f5d3356251d/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b3202a2bfd33f435d3266f2583c0f5d3356251d/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs?ref=6b3202a2bfd33f435d3266f2583c0f5d3356251d", "patch": "@@ -851,13 +851,36 @@ impl<'a, 'tcx> PatternContext<'a, 'tcx> {\n             ty::TyAdt(adt_def, substs) if adt_def.is_enum() => {\n                 match cv.val {\n                     ConstVal::Value(val) => {\n-                        let discr = const_discr(\n+                        let discr_val = const_discr(\n                             self.tcx, self.param_env, instance, val, cv.ty\n-                        ).unwrap();\n-                        let variant_index = adt_def\n-                            .discriminants(self.tcx)\n-                            .position(|var| var.val == discr)\n-                            .unwrap();\n+                        ).expect(\"const_discr failed\");\n+                        let layout = self\n+                            .tcx\n+                            .layout_of(self.param_env.and(cv.ty))\n+                            .expect(\"layout of enum not available\");\n+                        let variant_index = match layout.variants {\n+                            ty::layout::Variants::Single { index } => index,\n+                            ty::layout::Variants::Tagged { ref discr, .. } => {\n+                                // raw discriminants for enums are isize or bigger during\n+                                // their computation, but later shrunk to the smallest possible\n+                                // representation\n+                                let size = discr.value.size(self.tcx).bits();\n+                                let amt = 128 - size;\n+                                adt_def\n+                                    .discriminants(self.tcx)\n+                                    .position(|var| ((var.val << amt) >> amt) == discr_val)\n+                                    .unwrap_or_else(|| {\n+                                        bug!(\"discriminant {} not found in {:#?}\",\n+                                            discr_val,\n+                                            adt_def\n+                                                .discriminants(self.tcx)\n+                                                .collect::<Vec<_>>(),\n+                                            );\n+                                    })\n+                            }\n+                            ty::layout::Variants::NicheFilling { dataful_variant, .. } =>\n+                                dataful_variant,\n+                        };\n                         let subpatterns = adt_subpatterns(\n                             adt_def.variants[variant_index].fields.len(),\n                             Some(variant_index),"}]}