{"sha": "c23e4ea8dcee4ac95b9fb386a804fa52fcba72b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyM2U0ZWE4ZGNlZTRhYzk1YjlmYjM4NmE4MDRmYTUyZmNiYTcyYjI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-11-29T12:10:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-29T12:10:35Z"}, "message": "Rollup merge of #56127 - rust-lang:oli-obk-patch-1, r=nikomatsakis\n\nUpdate an outdated comment in mir building\n\nr? @eddyb", "tree": {"sha": "23ca12226ba51c601ea452bf7e0f2868a51b7726", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23ca12226ba51c601ea452bf7e0f2868a51b7726"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c23e4ea8dcee4ac95b9fb386a804fa52fcba72b2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb/9c7CRBK7hj4Ov3rIwAAdHIIABzpm6gG0uKu4CDi7K+d68Sc\nKKzi0CgAzfLq27AvBY4GJisXBhkVVdbpwgLdFyRP/ZvE/pPk6tRTMsPJRw1i3g1u\nTE/nir03MZIXgVHbFg5kG7A1DND9oO2d8Pap5Cpkdz9EoF2O7I1UI1I21WdjHAqz\no4kZvu4RvSgMnJgICJ678lXM4/IC81DFoyq7zK+d8IKSFzu9ZmjfD+5iimC/R3rT\nCACytq180S6zCoCH17h5/JMHjR8NwGnR5wxhenPE7hR6O4iIcAv5YfDLXv0hAxb3\nfoTzh0I7iDMNLPQZE1Cjx+M6wvnWhrgYysOcDKE31XR78VyxS6uXTEc2Ai8WbTY=\n=hj1N\n-----END PGP SIGNATURE-----\n", "payload": "tree 23ca12226ba51c601ea452bf7e0f2868a51b7726\nparent 3ed113cecee0e73552e9142b5bb3c65bef7835cf\nparent 925274ab70c15ac5dcb3537e3473c29771ab7df5\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1543493435 +0100\ncommitter GitHub <noreply@github.com> 1543493435 +0100\n\nRollup merge of #56127 - rust-lang:oli-obk-patch-1, r=nikomatsakis\n\nUpdate an outdated comment in mir building\n\nr? @eddyb\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c23e4ea8dcee4ac95b9fb386a804fa52fcba72b2", "html_url": "https://github.com/rust-lang/rust/commit/c23e4ea8dcee4ac95b9fb386a804fa52fcba72b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c23e4ea8dcee4ac95b9fb386a804fa52fcba72b2/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ed113cecee0e73552e9142b5bb3c65bef7835cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ed113cecee0e73552e9142b5bb3c65bef7835cf", "html_url": "https://github.com/rust-lang/rust/commit/3ed113cecee0e73552e9142b5bb3c65bef7835cf"}, {"sha": "925274ab70c15ac5dcb3537e3473c29771ab7df5", "url": "https://api.github.com/repos/rust-lang/rust/commits/925274ab70c15ac5dcb3537e3473c29771ab7df5", "html_url": "https://github.com/rust-lang/rust/commit/925274ab70c15ac5dcb3537e3473c29771ab7df5"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "2db9fb9cb99f41bcf9d41e2e0262a9aaf82fa362", "filename": "src/librustc_mir/build/expr/as_temp.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c23e4ea8dcee4ac95b9fb386a804fa52fcba72b2/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_temp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c23e4ea8dcee4ac95b9fb386a804fa52fcba72b2/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_temp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_temp.rs?ref=c23e4ea8dcee4ac95b9fb386a804fa52fcba72b2", "patch": "@@ -85,9 +85,15 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n \n         unpack!(block = this.into(&Place::Local(temp), block, expr));\n \n-        // In constants, temp_lifetime is None. We should not need to drop\n-        // anything because no values with a destructor can be created in\n-        // a constant at this time, even if the type may need dropping.\n+        // In constants, temp_lifetime is None for temporaries that live for the\n+        // 'static lifetime. Thus we do not drop these temporaries and simply leak them.\n+        // This is equivalent to what `let x = &foo();` does in functions. The temporary\n+        // is lifted to their surrounding scope. In a function that means the temporary lives\n+        // until just before the function returns. In constants that means it outlives the\n+        // constant's initialization value computation. Anything outliving a constant\n+        // must have the `'static` lifetime and live forever.\n+        // Anything with a shorter lifetime (e.g the `&foo()` in `bar(&foo())` or anything\n+        // within a block will keep the regular drops just like runtime code.\n         if let Some(temp_lifetime) = temp_lifetime {\n             this.schedule_drop_storage_and_value(\n                 expr_span,"}]}