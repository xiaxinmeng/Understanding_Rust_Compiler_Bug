{"sha": "3bf076e76b2afde77f1c0d2c763cef32407f0465", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiZjA3NmU3NmIyYWZkZTc3ZjFjMGQyYzc2M2NlZjMyNDA3ZjA0NjU=", "commit": {"author": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2021-03-23T20:27:38Z"}, "committer": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2021-03-23T20:41:50Z"}, "message": "Add test for Result::into_err", "tree": {"sha": "0b0e1a7589664287f6b12f1ea08bec7746970a54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b0e1a7589664287f6b12f1ea08bec7746970a54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bf076e76b2afde77f1c0d2c763cef32407f0465", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bf076e76b2afde77f1c0d2c763cef32407f0465", "html_url": "https://github.com/rust-lang/rust/commit/3bf076e76b2afde77f1c0d2c763cef32407f0465", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bf076e76b2afde77f1c0d2c763cef32407f0465/comments", "author": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "committer": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "593f9293b9a9e3c7ddd2a230578a2284a9163ec4", "url": "https://api.github.com/repos/rust-lang/rust/commits/593f9293b9a9e3c7ddd2a230578a2284a9163ec4", "html_url": "https://github.com/rust-lang/rust/commit/593f9293b9a9e3c7ddd2a230578a2284a9163ec4"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "c461ab380ad3d2641b9bdc24ef3e36dfe5444d5a", "filename": "library/core/tests/result.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/3bf076e76b2afde77f1c0d2c763cef32407f0465/library%2Fcore%2Ftests%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf076e76b2afde77f1c0d2c763cef32407f0465/library%2Fcore%2Ftests%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fresult.rs?ref=3bf076e76b2afde77f1c0d2c763cef32407f0465", "patch": "@@ -225,6 +225,28 @@ pub fn test_into_ok() {\n     assert_eq!(infallible_op2().into_ok(), 667);\n }\n \n+#[test]\n+pub fn test_into_err() {\n+    fn until_error_op() -> Result<!, isize> {\n+        Err(666)\n+    }\n+\n+    assert_eq!(until_error_op().into_err(), 666);\n+\n+    enum MyNeverToken {}\n+    impl From<MyNeverToken> for ! {\n+        fn from(never: MyNeverToken) -> ! {\n+            match never {}\n+        }\n+    }\n+\n+    fn until_error_op2() -> Result<MyNeverToken, isize> {\n+        Err(667)\n+    }\n+\n+    assert_eq!(until_error_op2().into_err(), 667);\n+}\n+\n #[test]\n fn test_try() {\n     fn try_result_some() -> Option<u8> {"}]}