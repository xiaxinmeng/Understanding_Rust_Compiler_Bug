{"sha": "554aed6c7d449b75ea0a460e811c4f3069f60dd4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1NGFlZDZjN2Q0NDliNzVlYTBhNDYwZTgxMWM0ZjMwNjlmNjBkZDQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-02-25T10:42:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-25T10:42:18Z"}, "message": "Rollup merge of #55632 - ollie27:deny_overflowing_literals, r=Centril\n\nDeny the `overflowing_literals` lint for all editions\n\nThe `overflowing_literals` was made deny by default for the 2018 edition by #54507, however I'm not aware of any reason it can't be made deny by default for the 2015 edition as well.", "tree": {"sha": "cb00efd932d4d784d1536e4213b8fda63ab7e142", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb00efd932d4d784d1536e4213b8fda63ab7e142"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/554aed6c7d449b75ea0a460e811c4f3069f60dd4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcc8aKCRBK7hj4Ov3rIwAAdHIIABzPXZyPDR6k36ApY7UXgv2Z\nZgfzLg1zc1/E8A3Q767RtKtfkvwDLfolmJVmYHSrohycU6WIt9isOjMsaMjQdvzZ\nxKPT1ssVPS0zvM/Ip4sB/W0/O3kNf2zhxJBFrHiMPYCDCH2SdKSDF2JUYPbl56S2\n2zSpoS0eHnyO86Xf1HpXeeDQbdWyraniY7Z2ET1h0i2BWTQ13+pcBHtIqQ9hlsXi\nrKY0wRLSLIHpU+0RBOgsRkDloeHKwyMv2Q74htv0P9tS4n4a7db2ZFlpefMqjtlV\nd1SdV9BresTFCrdhXBdqSLJz8LVIvOa3RKHMopfmoEVmDW7wgR/gEr37PQyda0w=\n=xVdV\n-----END PGP SIGNATURE-----\n", "payload": "tree cb00efd932d4d784d1536e4213b8fda63ab7e142\nparent 31eb0e2d3c0bfd2e0f5b662d82971c1a203708be\nparent e7296fd1c486e6837ebf0e318a1bd44aa6a31fcf\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1551091338 +0100\ncommitter GitHub <noreply@github.com> 1551091338 +0100\n\nRollup merge of #55632 - ollie27:deny_overflowing_literals, r=Centril\n\nDeny the `overflowing_literals` lint for all editions\n\nThe `overflowing_literals` was made deny by default for the 2018 edition by #54507, however I'm not aware of any reason it can't be made deny by default for the 2015 edition as well.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/554aed6c7d449b75ea0a460e811c4f3069f60dd4", "html_url": "https://github.com/rust-lang/rust/commit/554aed6c7d449b75ea0a460e811c4f3069f60dd4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/554aed6c7d449b75ea0a460e811c4f3069f60dd4/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31eb0e2d3c0bfd2e0f5b662d82971c1a203708be", "url": "https://api.github.com/repos/rust-lang/rust/commits/31eb0e2d3c0bfd2e0f5b662d82971c1a203708be", "html_url": "https://github.com/rust-lang/rust/commit/31eb0e2d3c0bfd2e0f5b662d82971c1a203708be"}, {"sha": "e7296fd1c486e6837ebf0e318a1bd44aa6a31fcf", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7296fd1c486e6837ebf0e318a1bd44aa6a31fcf", "html_url": "https://github.com/rust-lang/rust/commit/e7296fd1c486e6837ebf0e318a1bd44aa6a31fcf"}], "stats": {"total": 99, "additions": 56, "deletions": 43}, "files": [{"sha": "fa62d1a03f53b5d2f761bde3dae9bee3bf8e234e", "filename": "src/doc/rustc/src/lints/listing/deny-by-default.md", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/554aed6c7d449b75ea0a460e811c4f3069f60dd4/src%2Fdoc%2Frustc%2Fsrc%2Flints%2Flisting%2Fdeny-by-default.md", "raw_url": "https://github.com/rust-lang/rust/raw/554aed6c7d449b75ea0a460e811c4f3069f60dd4/src%2Fdoc%2Frustc%2Fsrc%2Flints%2Flisting%2Fdeny-by-default.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Flints%2Flisting%2Fdeny-by-default.md?ref=554aed6c7d449b75ea0a460e811c4f3069f60dd4", "patch": "@@ -149,6 +149,26 @@ error: const items should never be #[no_mangle]\n   |\n ```\n \n+## overflowing-literals\n+\n+This lint detects literal out of range for its type. Some\n+example code that triggers this lint:\n+\n+```rust,compile_fail\n+let x: u8 = 1000;\n+```\n+\n+This will produce:\n+\n+```text\n+error: literal out of range for u8\n+ --> src/main.rs:2:17\n+  |\n+2 |     let x: u8 = 1000;\n+  |                 ^^^^\n+  |\n+```\n+\n ## parenthesized-params-in-types-and-modules\n \n This lint detects incorrect parentheses. Some example code that triggers this"}, {"sha": "ba927b1ef3b5761dcc08ba64c1d8d76f65e9cf42", "filename": "src/doc/rustc/src/lints/listing/warn-by-default.md", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/554aed6c7d449b75ea0a460e811c4f3069f60dd4/src%2Fdoc%2Frustc%2Fsrc%2Flints%2Flisting%2Fwarn-by-default.md", "raw_url": "https://github.com/rust-lang/rust/raw/554aed6c7d449b75ea0a460e811c4f3069f60dd4/src%2Fdoc%2Frustc%2Fsrc%2Flints%2Flisting%2Fwarn-by-default.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Flints%2Flisting%2Fwarn-by-default.md?ref=554aed6c7d449b75ea0a460e811c4f3069f60dd4", "patch": "@@ -285,26 +285,6 @@ warning: functions generic over types must be mangled\n   |\n ```\n \n-## overflowing-literals\n-\n-This lint detects literal out of range for its type. Some\n-example code that triggers this lint:\n-\n-```rust\n-let x: u8 = 1000;\n-```\n-\n-This will produce:\n-\n-```text\n-warning: literal out of range for u8\n- --> src/main.rs:2:17\n-  |\n-2 |     let x: u8 = 1000;\n-  |                 ^^^^\n-  |\n-```\n-\n ## path-statements\n \n This lint detects path statements with no effect. Some example code that"}, {"sha": "f03f84ba519d6ab803555da60f0aea6c0e7f4bce", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/554aed6c7d449b75ea0a460e811c4f3069f60dd4/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/554aed6c7d449b75ea0a460e811c4f3069f60dd4/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=554aed6c7d449b75ea0a460e811c4f3069f60dd4", "patch": "@@ -16,7 +16,6 @@ use std::{i8, i16, i32, i64, u8, u16, u32, u64, f32, f64};\n use syntax::{ast, attr};\n use syntax::errors::Applicability;\n use rustc_target::spec::abi::Abi;\n-use syntax::edition::Edition;\n use syntax_pos::Span;\n use syntax::source_map;\n \n@@ -34,9 +33,8 @@ declare_lint! {\n \n declare_lint! {\n     OVERFLOWING_LITERALS,\n-    Warn,\n-    \"literal out of range for its type\",\n-    Edition::Edition2018 => Deny\n+    Deny,\n+    \"literal out of range for its type\"\n }\n \n declare_lint! {"}, {"sha": "feff79dc3f5089308cc37564db91c3e83100d62c", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/554aed6c7d449b75ea0a460e811c4f3069f60dd4/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/554aed6c7d449b75ea0a460e811c4f3069f60dd4/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=554aed6c7d449b75ea0a460e811c4f3069f60dd4", "patch": "@@ -2873,8 +2873,8 @@ E0370: r##\"\n The maximum value of an enum was reached, so it cannot be automatically\n set in the next enum value. Erroneous code example:\n \n-```compile_fail\n-#[deny(overflowing_literals)]\n+```compile_fail,E0370\n+#[repr(i64)]\n enum Foo {\n     X = 0x7fffffffffffffff,\n     Y, // error: enum discriminant overflowed on value after\n@@ -2887,6 +2887,7 @@ To fix this, please set manually the next enum value or put the enum variant\n with the maximum value at the end of the enum. Examples:\n \n ```\n+#[repr(i64)]\n enum Foo {\n     X = 0x7fffffffffffffff,\n     Y = 0, // ok!\n@@ -2896,6 +2897,7 @@ enum Foo {\n Or:\n \n ```\n+#[repr(i64)]\n enum Foo {\n     Y = 0, // ok!\n     X = 0x7fffffffffffffff,"}, {"sha": "ebd6654d39b1f7aae97380983600c1c0b38aa93b", "filename": "src/test/ui/lint/deny-overflowing-literals.rs", "status": "renamed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/554aed6c7d449b75ea0a460e811c4f3069f60dd4/src%2Ftest%2Fui%2Flint%2Fdeny-overflowing-literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/554aed6c7d449b75ea0a460e811c4f3069f60dd4/src%2Ftest%2Fui%2Flint%2Fdeny-overflowing-literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdeny-overflowing-literals.rs?ref=554aed6c7d449b75ea0a460e811c4f3069f60dd4", "patch": "@@ -1,5 +1,3 @@\n-// edition:2018\n-\n fn main() {\n     let x: u8 = 256;\n     //~^ error: literal out of range for u8", "previous_filename": "src/test/ui/editions/edition-deny-overflowing-literals-2018.rs"}, {"sha": "7313dd0bfb5a7caa035cb4d36aed48da688b24bc", "filename": "src/test/ui/lint/deny-overflowing-literals.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/554aed6c7d449b75ea0a460e811c4f3069f60dd4/src%2Ftest%2Fui%2Flint%2Fdeny-overflowing-literals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/554aed6c7d449b75ea0a460e811c4f3069f60dd4/src%2Ftest%2Fui%2Flint%2Fdeny-overflowing-literals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdeny-overflowing-literals.stderr?ref=554aed6c7d449b75ea0a460e811c4f3069f60dd4", "patch": "@@ -1,5 +1,5 @@\n error: literal out of range for u8\n-  --> $DIR/edition-deny-overflowing-literals-2018.rs:4:17\n+  --> $DIR/deny-overflowing-literals.rs:2:17\n    |\n LL |     let x: u8 = 256;\n    |                 ^^^", "previous_filename": "src/test/ui/editions/edition-deny-overflowing-literals-2018.stderr"}, {"sha": "c4486e06768873a7f3c89fcab58a2ebd0b062ffb", "filename": "src/test/ui/lint/lint-type-limits2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/554aed6c7d449b75ea0a460e811c4f3069f60dd4/src%2Ftest%2Fui%2Flint%2Flint-type-limits2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/554aed6c7d449b75ea0a460e811c4f3069f60dd4/src%2Ftest%2Fui%2Flint%2Flint-type-limits2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-type-limits2.rs?ref=554aed6c7d449b75ea0a460e811c4f3069f60dd4", "patch": "@@ -1,4 +1,5 @@\n #![allow(dead_code)]\n+#![warn(overflowing_literals)]\n \n // compile-flags: -D unused-comparisons\n fn main() { }"}, {"sha": "f88fff62e21fc1e65b6cbd9060f89467d8d62cbd", "filename": "src/test/ui/lint/lint-type-limits2.stderr", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/554aed6c7d449b75ea0a460e811c4f3069f60dd4/src%2Ftest%2Fui%2Flint%2Flint-type-limits2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/554aed6c7d449b75ea0a460e811c4f3069f60dd4/src%2Ftest%2Fui%2Flint%2Flint-type-limits2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-type-limits2.stderr?ref=554aed6c7d449b75ea0a460e811c4f3069f60dd4", "patch": "@@ -1,18 +1,22 @@\n error: comparison is useless due to type limits\n-  --> $DIR/lint-type-limits2.rs:12:5\n+  --> $DIR/lint-type-limits2.rs:13:5\n    |\n LL |     128 > bar() //~ ERROR comparison is useless due to type limits\n    |     ^^^^^^^^^^^\n    |\n    = note: requested on the command line with `-D unused-comparisons`\n \n warning: literal out of range for i8\n-  --> $DIR/lint-type-limits2.rs:12:5\n+  --> $DIR/lint-type-limits2.rs:13:5\n    |\n LL |     128 > bar() //~ ERROR comparison is useless due to type limits\n    |     ^^^\n    |\n-   = note: #[warn(overflowing_literals)] on by default\n+note: lint level defined here\n+  --> $DIR/lint-type-limits2.rs:2:9\n+   |\n+LL | #![warn(overflowing_literals)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "a715c69f7849ef244ed38505ee987b0b2441023a", "filename": "src/test/ui/lint/lint-type-limits3.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/554aed6c7d449b75ea0a460e811c4f3069f60dd4/src%2Ftest%2Fui%2Flint%2Flint-type-limits3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/554aed6c7d449b75ea0a460e811c4f3069f60dd4/src%2Ftest%2Fui%2Flint%2Flint-type-limits3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-type-limits3.rs?ref=554aed6c7d449b75ea0a460e811c4f3069f60dd4", "patch": "@@ -1,4 +1,5 @@\n #![allow(dead_code)]\n+#![warn(overflowing_literals)]\n \n // compile-flags: -D unused-comparisons\n fn main() { }"}, {"sha": "4f47a7ce31665bc00289f8d0aeb3128e85fb6f2d", "filename": "src/test/ui/lint/lint-type-limits3.stderr", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/554aed6c7d449b75ea0a460e811c4f3069f60dd4/src%2Ftest%2Fui%2Flint%2Flint-type-limits3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/554aed6c7d449b75ea0a460e811c4f3069f60dd4/src%2Ftest%2Fui%2Flint%2Flint-type-limits3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-type-limits3.stderr?ref=554aed6c7d449b75ea0a460e811c4f3069f60dd4", "patch": "@@ -1,18 +1,22 @@\n error: comparison is useless due to type limits\n-  --> $DIR/lint-type-limits3.rs:8:11\n+  --> $DIR/lint-type-limits3.rs:9:11\n    |\n LL |     while 200 != i { //~ ERROR comparison is useless due to type limits\n    |           ^^^^^^^^\n    |\n    = note: requested on the command line with `-D unused-comparisons`\n \n warning: literal out of range for i8\n-  --> $DIR/lint-type-limits3.rs:8:11\n+  --> $DIR/lint-type-limits3.rs:9:11\n    |\n LL |     while 200 != i { //~ ERROR comparison is useless due to type limits\n    |           ^^^\n    |\n-   = note: #[warn(overflowing_literals)] on by default\n+note: lint level defined here\n+  --> $DIR/lint-type-limits3.rs:2:9\n+   |\n+LL | #![warn(overflowing_literals)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "64e595120737990734d65f444832b3f9ede825ca", "filename": "src/test/ui/lint/type-overflow.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/554aed6c7d449b75ea0a460e811c4f3069f60dd4/src%2Ftest%2Fui%2Flint%2Ftype-overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/554aed6c7d449b75ea0a460e811c4f3069f60dd4/src%2Ftest%2Fui%2Flint%2Ftype-overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Ftype-overflow.rs?ref=554aed6c7d449b75ea0a460e811c4f3069f60dd4", "patch": "@@ -1,4 +1,5 @@\n // compile-pass\n+#![warn(overflowing_literals)]\n \n fn main() {\n     let error = 255i8; //~WARNING literal out of range for i8"}, {"sha": "349d0be0164974386c1d6642717d329529b6c82d", "filename": "src/test/ui/lint/type-overflow.stderr", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/554aed6c7d449b75ea0a460e811c4f3069f60dd4/src%2Ftest%2Fui%2Flint%2Ftype-overflow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/554aed6c7d449b75ea0a460e811c4f3069f60dd4/src%2Ftest%2Fui%2Flint%2Ftype-overflow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Ftype-overflow.stderr?ref=554aed6c7d449b75ea0a460e811c4f3069f60dd4", "patch": "@@ -1,37 +1,41 @@\n warning: literal out of range for i8\n-  --> $DIR/type-overflow.rs:4:17\n+  --> $DIR/type-overflow.rs:5:17\n    |\n LL |     let error = 255i8; //~WARNING literal out of range for i8\n    |                 ^^^^^\n    |\n-   = note: #[warn(overflowing_literals)] on by default\n+note: lint level defined here\n+  --> $DIR/type-overflow.rs:2:9\n+   |\n+LL | #![warn(overflowing_literals)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n \n warning: literal out of range for i8\n-  --> $DIR/type-overflow.rs:9:16\n+  --> $DIR/type-overflow.rs:10:16\n    |\n LL |     let fail = 0b1000_0001i8; //~WARNING literal out of range for i8\n    |                ^^^^^^^^^^^^^ help: consider using `u8` instead: `0b1000_0001u8`\n    |\n    = note: the literal `0b1000_0001i8` (decimal `129`) does not fit into an `i8` and will become `-127i8`\n \n warning: literal out of range for i64\n-  --> $DIR/type-overflow.rs:11:16\n+  --> $DIR/type-overflow.rs:12:16\n    |\n LL |     let fail = 0x8000_0000_0000_0000i64; //~WARNING literal out of range for i64\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `u64` instead: `0x8000_0000_0000_0000u64`\n    |\n    = note: the literal `0x8000_0000_0000_0000i64` (decimal `9223372036854775808`) does not fit into an `i64` and will become `-9223372036854775808i64`\n \n warning: literal out of range for u32\n-  --> $DIR/type-overflow.rs:13:16\n+  --> $DIR/type-overflow.rs:14:16\n    |\n LL |     let fail = 0x1_FFFF_FFFFu32; //~WARNING literal out of range for u32\n    |                ^^^^^^^^^^^^^^^^ help: consider using `u64` instead: `0x1_FFFF_FFFFu64`\n    |\n    = note: the literal `0x1_FFFF_FFFFu32` (decimal `8589934591`) does not fit into an `u32` and will become `4294967295u32`\n \n warning: literal out of range for i128\n-  --> $DIR/type-overflow.rs:15:22\n+  --> $DIR/type-overflow.rs:16:22\n    |\n LL |     let fail: i128 = 0x8000_0000_0000_0000_0000_0000_0000_0000;\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -40,7 +44,7 @@ LL |     let fail: i128 = 0x8000_0000_0000_0000_0000_0000_0000_0000;\n    = help: consider using `u128` instead\n \n warning: literal out of range for i32\n-  --> $DIR/type-overflow.rs:18:16\n+  --> $DIR/type-overflow.rs:19:16\n    |\n LL |     let fail = 0x8FFF_FFFF_FFFF_FFFE; //~WARNING literal out of range for i32\n    |                ^^^^^^^^^^^^^^^^^^^^^\n@@ -49,7 +53,7 @@ LL |     let fail = 0x8FFF_FFFF_FFFF_FFFE; //~WARNING literal out of range for i\n    = help: consider using `i128` instead\n \n warning: literal out of range for i8\n-  --> $DIR/type-overflow.rs:20:17\n+  --> $DIR/type-overflow.rs:21:17\n    |\n LL |     let fail = -0b1111_1111i8; //~WARNING literal out of range for i8\n    |                 ^^^^^^^^^^^^^ help: consider using `i16` instead: `0b1111_1111i16`"}]}