{"sha": "97d6e36dbe56a08d9767760d0935e9d7bb78e621", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3ZDZlMzZkYmU1NmEwOGQ5NzY3NzYwZDA5MzVlOWQ3YmI3OGU2MjE=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-11T09:42:54Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-11T10:07:58Z"}, "message": "Remove assertion in impl collection\n\nThis condition should always be true for *valid* code, but of course\nthere might be invalid code or things that we can't currently resolve.\n\nFixes #8464.", "tree": {"sha": "fdbbf290cbd610e20e5fa565e2d423a0135c8d24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fdbbf290cbd610e20e5fa565e2d423a0135c8d24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97d6e36dbe56a08d9767760d0935e9d7bb78e621", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97d6e36dbe56a08d9767760d0935e9d7bb78e621", "html_url": "https://github.com/rust-lang/rust/commit/97d6e36dbe56a08d9767760d0935e9d7bb78e621", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97d6e36dbe56a08d9767760d0935e9d7bb78e621/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b40342d2d5bc19445e6abccef6931bdd3a03c3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b40342d2d5bc19445e6abccef6931bdd3a03c3b", "html_url": "https://github.com/rust-lang/rust/commit/5b40342d2d5bc19445e6abccef6931bdd3a03c3b"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "3693e3284511bf0715a0a2bc460e66909b728796", "filename": "crates/hir_ty/src/method_resolution.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/97d6e36dbe56a08d9767760d0935e9d7bb78e621/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97d6e36dbe56a08d9767760d0935e9d7bb78e621/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs?ref=97d6e36dbe56a08d9767760d0935e9d7bb78e621", "patch": "@@ -13,7 +13,6 @@ use hir_def::{\n };\n use hir_expand::name::Name;\n use rustc_hash::{FxHashMap, FxHashSet};\n-use stdx::always;\n \n use crate::{\n     autoderef,\n@@ -22,8 +21,8 @@ use crate::{\n     primitive::{self, FloatTy, IntTy, UintTy},\n     static_lifetime,\n     utils::all_super_traits,\n-    AdtId, Canonical, CanonicalVarKinds, DebruijnIndex, ForeignDefId, HirDisplay, InEnvironment,\n-    Interner, Scalar, Substitution, TraitEnvironment, TraitRefExt, Ty, TyBuilder, TyExt, TyKind,\n+    AdtId, Canonical, CanonicalVarKinds, DebruijnIndex, ForeignDefId, InEnvironment, Interner,\n+    Scalar, Substitution, TraitEnvironment, TraitRefExt, Ty, TyBuilder, TyExt, TyKind,\n };\n \n /// This is used as a key for indexing impls.\n@@ -259,10 +258,10 @@ impl InherentImpls {\n \n                 let self_ty = db.impl_self_ty(impl_id);\n                 let fp = TyFingerprint::for_inherent_impl(self_ty.skip_binders());\n-                always!(fp.is_some(), \"no fingerprint for {}\", self_ty.skip_binders().display(db));\n                 if let Some(fp) = fp {\n                     map.entry(fp).or_default().push(impl_id);\n                 }\n+                // `fp` should only be `None` in error cases (either erroneous code or incomplete name resolution)\n             }\n         }\n "}]}