{"sha": "43193dcb882466163436057e50c96bb74d9bf50f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzMTkzZGNiODgyNDY2MTYzNDM2MDU3ZTUwYzk2YmI3NGQ5YmY1MGY=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2020-09-20T08:27:14Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2020-09-20T08:27:14Z"}, "message": "Use as_secs_f64 in profiling.rs", "tree": {"sha": "f4d1135a59118c947806a0ce6d5dc12cd19129fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4d1135a59118c947806a0ce6d5dc12cd19129fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43193dcb882466163436057e50c96bb74d9bf50f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43193dcb882466163436057e50c96bb74d9bf50f", "html_url": "https://github.com/rust-lang/rust/commit/43193dcb882466163436057e50c96bb74d9bf50f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43193dcb882466163436057e50c96bb74d9bf50f/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cebbd9fcd35a63569b8fb5c836b5a26089861c41", "url": "https://api.github.com/repos/rust-lang/rust/commits/cebbd9fcd35a63569b8fb5c836b5a26089861c41", "html_url": "https://github.com/rust-lang/rust/commit/cebbd9fcd35a63569b8fb5c836b5a26089861c41"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "363879cbb1d197329ba35419a3917f398b3d6b32", "filename": "compiler/rustc_data_structures/src/profiling.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/43193dcb882466163436057e50c96bb74d9bf50f/compiler%2Frustc_data_structures%2Fsrc%2Fprofiling.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43193dcb882466163436057e50c96bb74d9bf50f/compiler%2Frustc_data_structures%2Fsrc%2Fprofiling.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fprofiling.rs?ref=43193dcb882466163436057e50c96bb74d9bf50f", "patch": "@@ -600,10 +600,7 @@ pub fn print_time_passes_entry(do_it: bool, what: &str, dur: Duration) {\n // Hack up our own formatting for the duration to make it easier for scripts\n // to parse (always use the same number of decimal places and the same unit).\n pub fn duration_to_secs_str(dur: std::time::Duration) -> String {\n-    const NANOS_PER_SEC: f64 = 1_000_000_000.0;\n-    let secs = dur.as_secs() as f64 + dur.subsec_nanos() as f64 / NANOS_PER_SEC;\n-\n-    format!(\"{:.3}\", secs)\n+    format!(\"{:.3}\", dur.as_secs_f64())\n }\n \n // Memory reporting"}]}