{"sha": "c6ffffccbdfdcf084d5e280d4f47ed6d970bee56", "node_id": "C_kwDOAAsO6NoAKGM2ZmZmZmNjYmRmZGNmMDg0ZDVlMjgwZDRmNDdlZDZkOTcwYmVlNTY", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2022-04-19T16:37:18Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2022-04-19T16:45:48Z"}, "message": "Allows triggering commands after an assist edit", "tree": {"sha": "3ef6394b82f3f856346c39c1d4bdcdaaa35ec95d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ef6394b82f3f856346c39c1d4bdcdaaa35ec95d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56", "html_url": "https://github.com/rust-lang/rust/commit/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3ec87730aaabccff4200b218528bd5f7fa57ff9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3ec87730aaabccff4200b218528bd5f7fa57ff9", "html_url": "https://github.com/rust-lang/rust/commit/e3ec87730aaabccff4200b218528bd5f7fa57ff9"}], "stats": {"total": 74, "additions": 58, "deletions": 16}, "files": [{"sha": "ba9a7f62e65c648051681631a4878829a1b25dee", "filename": "crates/ide/src/ssr.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Fide%2Fsrc%2Fssr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Fide%2Fsrc%2Fssr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fssr.rs?ref=c6ffffccbdfdcf084d5e280d4f47ed6d970bee56", "patch": "@@ -45,6 +45,7 @@ pub(crate) fn ssr_assists(\n             group: Some(GroupLabel(\"Apply SSR\".into())),\n             target: comment_range,\n             source_change,\n+            trigger_signature_help: false,\n         };\n \n         ssr_assists.push(assist);\n@@ -140,6 +141,7 @@ mod tests {\n                         is_snippet: false,\n                     },\n                 ),\n+                trigger_signature_help: false,\n             }\n         \"#]]\n         .assert_debug_eq(&apply_in_file_assist);\n@@ -186,6 +188,7 @@ mod tests {\n                         is_snippet: false,\n                     },\n                 ),\n+                trigger_signature_help: false,\n             }\n         \"#]]\n         .assert_debug_eq(&apply_in_workspace_assist);\n@@ -225,6 +228,7 @@ mod tests {\n                 ),\n                 target: 10..21,\n                 source_change: None,\n+                trigger_signature_help: false,\n             }\n         \"#]]\n         .assert_debug_eq(&apply_in_file_assist);\n@@ -244,6 +248,7 @@ mod tests {\n                 ),\n                 target: 10..21,\n                 source_change: None,\n+                trigger_signature_help: false,\n             }\n         \"#]]\n         .assert_debug_eq(&apply_in_workspace_assist);"}, {"sha": "ec85faaf46da18aaa68ab5069a2f1dda02bd4bf4", "filename": "crates/ide_assists/src/assist_context.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Fide_assists%2Fsrc%2Fassist_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Fide_assists%2Fsrc%2Fassist_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fassist_context.rs?ref=c6ffffccbdfdcf084d5e280d4f47ed6d970bee56", "patch": "@@ -193,17 +193,19 @@ impl Assists {\n             return None;\n         }\n \n+        let mut trigger_signature_help = false;\n         let source_change = if self.resolve.should_resolve(&id) {\n             let mut builder = AssistBuilder::new(self.file);\n             f(&mut builder);\n+            trigger_signature_help = builder.trigger_signature_help;\n             Some(builder.finish())\n         } else {\n             None\n         };\n \n         let label = Label::new(label);\n         let group = group.cloned();\n-        self.buf.push(Assist { id, label, group, target, source_change });\n+        self.buf.push(Assist { id, label, group, target, source_change, trigger_signature_help });\n         Some(())\n     }\n \n@@ -219,6 +221,7 @@ pub(crate) struct AssistBuilder {\n     edit: TextEditBuilder,\n     file_id: FileId,\n     source_change: SourceChange,\n+    trigger_signature_help: bool,\n \n     /// Maps the original, immutable `SyntaxNode` to a `clone_for_update` twin.\n     mutated_tree: Option<TreeMutator>,\n@@ -252,6 +255,7 @@ impl AssistBuilder {\n             edit: TextEdit::builder(),\n             file_id,\n             source_change: SourceChange::default(),\n+            trigger_signature_help: false,\n             mutated_tree: None,\n         }\n     }\n@@ -332,6 +336,9 @@ impl AssistBuilder {\n         let file_system_edit = FileSystemEdit::MoveFile { src, dst };\n         self.source_change.push_file_system_edit(file_system_edit);\n     }\n+    pub(crate) fn trigger_signature_help(&mut self) {\n+        self.trigger_signature_help = true;\n+    }\n \n     fn finish(mut self) -> SourceChange {\n         self.commit();"}, {"sha": "a82dca9db0782114477f7798a2ef801fd73e8578", "filename": "crates/ide_assists/src/handlers/add_turbo_fish.rs", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_turbo_fish.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_turbo_fish.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_turbo_fish.rs?ref=c6ffffccbdfdcf084d5e280d4f47ed6d970bee56", "patch": "@@ -89,15 +89,18 @@ pub(crate) fn add_turbo_fish(acc: &mut Assists, ctx: &AssistContext) -> Option<(\n         AssistId(\"add_turbo_fish\", AssistKind::RefactorRewrite),\n         \"Add `::<>`\",\n         ident.text_range(),\n-        |builder| match ctx.config.snippet_cap {\n-            Some(cap) => {\n-                let snip = format!(\"::<{}>\", get_snippet_fish_head(number_of_arguments));\n-                builder.insert_snippet(cap, ident.text_range().end(), snip)\n-            }\n-            None => {\n-                let fish_head = std::iter::repeat(\"_\").take(number_of_arguments).format(\", \");\n-                let snip = format!(\"::<{}>\", fish_head);\n-                builder.insert(ident.text_range().end(), snip);\n+        |builder| {\n+            builder.trigger_signature_help();\n+            match ctx.config.snippet_cap {\n+                Some(cap) => {\n+                    let snip = format!(\"::<{}>\", get_snippet_fish_head(number_of_arguments));\n+                    builder.insert_snippet(cap, ident.text_range().end(), snip)\n+                }\n+                None => {\n+                    let fish_head = std::iter::repeat(\"_\").take(number_of_arguments).format(\", \");\n+                    let snip = format!(\"::<{}>\", fish_head);\n+                    builder.insert(ident.text_range().end(), snip);\n+                }\n             }\n         },\n     )"}, {"sha": "6b57f9962c6cefa12d1e044d8e96934c5aa18c82", "filename": "crates/ide_assists/src/tests.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Fide_assists%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Fide_assists%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Ftests.rs?ref=c6ffffccbdfdcf084d5e280d4f47ed6d970bee56", "patch": "@@ -341,6 +341,7 @@ pub fn test_some_range(a: int) -> bool {\n                 group: None,\n                 target: 59..60,\n                 source_change: None,\n+                trigger_signature_help: false,\n             }\n         \"#]]\n         .assert_debug_eq(&extract_into_variable_assist);\n@@ -356,6 +357,7 @@ pub fn test_some_range(a: int) -> bool {\n                 group: None,\n                 target: 59..60,\n                 source_change: None,\n+                trigger_signature_help: false,\n             }\n         \"#]]\n         .assert_debug_eq(&extract_into_function_assist);\n@@ -385,6 +387,7 @@ pub fn test_some_range(a: int) -> bool {\n                 group: None,\n                 target: 59..60,\n                 source_change: None,\n+                trigger_signature_help: false,\n             }\n         \"#]]\n         .assert_debug_eq(&extract_into_variable_assist);\n@@ -400,6 +403,7 @@ pub fn test_some_range(a: int) -> bool {\n                 group: None,\n                 target: 59..60,\n                 source_change: None,\n+                trigger_signature_help: false,\n             }\n         \"#]]\n         .assert_debug_eq(&extract_into_function_assist);\n@@ -450,6 +454,7 @@ pub fn test_some_range(a: int) -> bool {\n                         is_snippet: true,\n                     },\n                 ),\n+                trigger_signature_help: false,\n             }\n         \"#]]\n         .assert_debug_eq(&extract_into_variable_assist);\n@@ -465,6 +470,7 @@ pub fn test_some_range(a: int) -> bool {\n                 group: None,\n                 target: 59..60,\n                 source_change: None,\n+                trigger_signature_help: false,\n             }\n         \"#]]\n         .assert_debug_eq(&extract_into_function_assist);\n@@ -507,6 +513,7 @@ pub fn test_some_range(a: int) -> bool {\n                         is_snippet: true,\n                     },\n                 ),\n+                trigger_signature_help: false,\n             }\n         \"#]]\n         .assert_debug_eq(&extract_into_variable_assist);\n@@ -543,6 +550,7 @@ pub fn test_some_range(a: int) -> bool {\n                         is_snippet: true,\n                     },\n                 ),\n+                trigger_signature_help: false,\n             }\n         \"#]]\n         .assert_debug_eq(&extract_into_function_assist);"}, {"sha": "da23763dc2924712dc56691dfb3b4e2718ab849f", "filename": "crates/ide_db/src/assists.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Fide_db%2Fsrc%2Fassists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Fide_db%2Fsrc%2Fassists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fassists.rs?ref=c6ffffccbdfdcf084d5e280d4f47ed6d970bee56", "patch": "@@ -29,6 +29,7 @@ pub struct Assist {\n     /// cumbersome, especially if you want to embed an assist into another data\n     /// structure, such as a diagnostic.\n     pub source_change: Option<SourceChange>,\n+    pub trigger_signature_help: bool,\n }\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq)]"}, {"sha": "b8f2a9e94a40eed3565e4b8a8fe1430fefd3e254", "filename": "crates/ide_diagnostics/src/handlers/unresolved_module.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Funresolved_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Funresolved_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Funresolved_module.rs?ref=c6ffffccbdfdcf084d5e280d4f47ed6d970bee56", "patch": "@@ -117,6 +117,7 @@ mod baz {}\n                                             is_snippet: false,\n                                         },\n                                     ),\n+                                    trigger_signature_help: false,\n                                 },\n                                 Assist {\n                                     id: AssistId(\n@@ -143,6 +144,7 @@ mod baz {}\n                                             is_snippet: false,\n                                         },\n                                     ),\n+                                    trigger_signature_help: false,\n                                 },\n                             ],\n                         ),"}, {"sha": "b04da2e0920752de4219a4638fc2ef0bb0a0098e", "filename": "crates/ide_diagnostics/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Fide_diagnostics%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Fide_diagnostics%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_diagnostics%2Fsrc%2Flib.rs?ref=c6ffffccbdfdcf084d5e280d4f47ed6d970bee56", "patch": "@@ -238,5 +238,6 @@ fn unresolved_fix(id: &'static str, label: &str, target: TextRange) -> Assist {\n         group: None,\n         target,\n         source_change: None,\n+        trigger_signature_help: false,\n     }\n }"}, {"sha": "41c509452a9e7a60e922cc982e7f9bf8e3ad5eb1", "filename": "crates/rust-analyzer/src/diagnostics/test_data/clippy_pass_by_ref.txt", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fclippy_pass_by_ref.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fclippy_pass_by_ref.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fclippy_pass_by_ref.txt?ref=c6ffffccbdfdcf084d5e280d4f47ed6d970bee56", "patch": "@@ -318,6 +318,7 @@\n                             \"quickfix\",\n                         ),\n                     ),\n+                    command: None,\n                     edit: Some(\n                         SnippetWorkspaceEdit {\n                             changes: Some("}, {"sha": "1c5c33622349bcba68b84ebc4b2378edcb7f33d9", "filename": "crates/rust-analyzer/src/diagnostics/test_data/rustc_unused_variable.txt", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable.txt?ref=c6ffffccbdfdcf084d5e280d4f47ed6d970bee56", "patch": "@@ -165,6 +165,7 @@\n                             \"quickfix\",\n                         ),\n                     ),\n+                    command: None,\n                     edit: Some(\n                         SnippetWorkspaceEdit {\n                             changes: Some("}, {"sha": "3ab3412d971b922715bdfc0d9b1ee3cf949eb7ba", "filename": "crates/rust-analyzer/src/diagnostics/test_data/rustc_unused_variable_as_hint.txt", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_hint.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_hint.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_hint.txt?ref=c6ffffccbdfdcf084d5e280d4f47ed6d970bee56", "patch": "@@ -165,6 +165,7 @@\n                             \"quickfix\",\n                         ),\n                     ),\n+                    command: None,\n                     edit: Some(\n                         SnippetWorkspaceEdit {\n                             changes: Some("}, {"sha": "0702420aa5f9632e2fdae59883b6afa560d3effb", "filename": "crates/rust-analyzer/src/diagnostics/test_data/rustc_unused_variable_as_info.txt", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_info.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_info.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_info.txt?ref=c6ffffccbdfdcf084d5e280d4f47ed6d970bee56", "patch": "@@ -165,6 +165,7 @@\n                             \"quickfix\",\n                         ),\n                     ),\n+                    command: None,\n                     edit: Some(\n                         SnippetWorkspaceEdit {\n                             changes: Some("}, {"sha": "4365e450df1f568d8a23ec63bb155b865467bd58", "filename": "crates/rust-analyzer/src/diagnostics/test_data/snap_multi_line_fix.txt", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fsnap_multi_line_fix.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fsnap_multi_line_fix.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fsnap_multi_line_fix.txt?ref=c6ffffccbdfdcf084d5e280d4f47ed6d970bee56", "patch": "@@ -328,6 +328,7 @@\n                             \"quickfix\",\n                         ),\n                     ),\n+                    command: None,\n                     edit: Some(\n                         SnippetWorkspaceEdit {\n                             changes: Some("}, {"sha": "e9a192cdfb00f48558ac1927ae8cac739dab2f3c", "filename": "crates/rust-analyzer/src/diagnostics/to_proto.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs?ref=c6ffffccbdfdcf084d5e280d4f47ed6d970bee56", "patch": "@@ -204,6 +204,7 @@ fn map_rust_child_diagnostic(\n                     }),\n                     is_preferred: Some(true),\n                     data: None,\n+                    command: None,\n                 },\n             }),\n         })"}, {"sha": "a1b71ab1437b2c40afb9c61136db7e6b0f67409b", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=c6ffffccbdfdcf084d5e280d4f47ed6d970bee56", "patch": "@@ -1160,8 +1160,9 @@ pub(crate) fn handle_code_action_resolve(\n         ))\n         .into());\n     }\n-    let edit = to_proto::code_action(&snap, assist.clone(), None)?.edit;\n-    code_action.edit = edit;\n+    let ca = to_proto::code_action(&snap, assist.clone(), None)?;\n+    code_action.edit = ca.edit;\n+    code_action.command = ca.command;\n     Ok(code_action)\n }\n "}, {"sha": "1cfaa1332742ddd84e44328bd29c390af9ff398b", "filename": "crates/rust-analyzer/src/lsp_ext.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs?ref=c6ffffccbdfdcf084d5e280d4f47ed6d970bee56", "patch": "@@ -311,9 +311,8 @@ pub struct CodeAction {\n     pub group: Option<String>,\n     #[serde(skip_serializing_if = \"Option::is_none\")]\n     pub kind: Option<CodeActionKind>,\n-    // We don't handle commands on the client-side\n-    // #[serde(skip_serializing_if = \"Option::is_none\")]\n-    // pub command: Option<lsp_types::Command>,\n+    #[serde(skip_serializing_if = \"Option::is_none\")]\n+    pub command: Option<lsp_types::Command>,\n     #[serde(skip_serializing_if = \"Option::is_none\")]\n     pub edit: Option<SnippetWorkspaceEdit>,\n     #[serde(skip_serializing_if = \"Option::is_none\")]"}, {"sha": "57b0e93765e875f4513b2003785b71d3135c00ce", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=c6ffffccbdfdcf084d5e280d4f47ed6d970bee56", "patch": "@@ -1018,7 +1018,13 @@ pub(crate) fn code_action(\n         edit: None,\n         is_preferred: None,\n         data: None,\n+        command: None,\n     };\n+\n+    if assist.trigger_signature_help && snap.config.client_commands().trigger_parameter_hints {\n+        res.command = Some(command::trigger_parameter_hints());\n+    }\n+\n     match (assist.source_change, resolve_data) {\n         (Some(it), _) => res.edit = Some(snippet_workspace_edit(snap, it)?),\n         (None, Some((index, code_action_params))) => {"}, {"sha": "2e1cee8955d1d1b6948e1e4f17c129fa84168168", "filename": "docs/dev/lsp-extensions.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/docs%2Fdev%2Flsp-extensions.md", "raw_url": "https://github.com/rust-lang/rust/raw/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/docs%2Fdev%2Flsp-extensions.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Flsp-extensions.md?ref=c6ffffccbdfdcf084d5e280d4f47ed6d970bee56", "patch": "@@ -1,5 +1,5 @@\n <!---\n-lsp_ext.rs hash: 326ad62235135223\n+lsp_ext.rs hash: 7a34bc3f38e2a7d8\n \n If you need to change the above hash to make the test pass, please check if you\n need to adjust this doc as well and ping this issue:"}, {"sha": "a808d5ec6d8a4a9158ec480e676930e068967259", "filename": "editors/code/src/commands.ts", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/editors%2Fcode%2Fsrc%2Fcommands.ts", "raw_url": "https://github.com/rust-lang/rust/raw/c6ffffccbdfdcf084d5e280d4f47ed6d970bee56/editors%2Fcode%2Fsrc%2Fcommands.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands.ts?ref=c6ffffccbdfdcf084d5e280d4f47ed6d970bee56", "patch": "@@ -735,6 +735,9 @@ export function resolveCodeAction(ctx: Ctx): Cmd {\n         const fileSystemEdit = await client.protocol2CodeConverter.asWorkspaceEdit(lcFileSystemEdit);\n         await vscode.workspace.applyEdit(fileSystemEdit);\n         await applySnippetWorkspaceEdit(edit);\n+        if (item.command != null) {\n+            await vscode.commands.executeCommand(item.command.command, item.command.arguments);\n+        }\n     };\n }\n "}]}