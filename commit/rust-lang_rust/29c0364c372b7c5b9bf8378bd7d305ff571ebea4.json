{"sha": "29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "node_id": "C_kwDOAAsO6NoAKDI5YzAzNjRjMzcyYjdjNWI5YmY4Mzc4YmQ3ZDMwNWZmNTcxZWJlYTQ", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-07-28T09:06:16Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-09-13T15:48:05Z"}, "message": "rebase", "tree": {"sha": "0189735220680a1913d1404e10ca6aa6e587c4df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0189735220680a1913d1404e10ca6aa6e587c4df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "html_url": "https://github.com/rust-lang/rust/commit/29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db9a2d2fbe06cc1cc076505e24721a7b91405c05", "url": "https://api.github.com/repos/rust-lang/rust/commits/db9a2d2fbe06cc1cc076505e24721a7b91405c05", "html_url": "https://github.com/rust-lang/rust/commit/db9a2d2fbe06cc1cc076505e24721a7b91405c05"}], "stats": {"total": 81, "additions": 25, "deletions": 56}, "files": [{"sha": "1d1c0548d176c0290b014a77bb044912c9f7847b", "filename": "compiler/rustc_const_eval/src/interpret/operand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperand.rs?ref=29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "patch": "@@ -583,7 +583,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n     pub fn uneval_to_op(\n         &self,\n         uneval: &ty::Unevaluated<'tcx>,\n-    ) -> InterpResult<'tcx, OpTy<'tcx, M::PointerTag>> {\n+    ) -> InterpResult<'tcx, OpTy<'tcx, M::Provenance>> {\n         let instance = self.resolve(uneval.def, uneval.substs)?;\n         Ok(self.eval_to_allocation(GlobalId { instance, promoted: uneval.promoted })?.into())\n     }"}, {"sha": "088fb0a85ab187f539a8b0d4bc631ddfd1b24b19", "filename": "compiler/rustc_infer/src/infer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs?ref=29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "patch": "@@ -1717,7 +1717,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         // Postpone the evaluation of constants whose substs depend on inference\n         // variables\n         if substs.has_infer_types_or_consts() {\n-            let ac = AbstractConst::new(self.tcx, unevaluated.shrink());\n+            let ac = AbstractConst::new(self.tcx, unevaluated);\n             match ac {\n                 Ok(None) => {\n                     substs = InternalSubsts::identity_for_item(self.tcx, unevaluated.def.did);"}, {"sha": "44c4fc48d3f0f6428aceba9cb640e3570138fd4e", "filename": "compiler/rustc_ty_utils/src/consts.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/compiler%2Frustc_ty_utils%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/compiler%2Frustc_ty_utils%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Fconsts.rs?ref=29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "patch": "@@ -222,17 +222,6 @@ impl<'a, 'tcx> AbstractConstBuilder<'a, 'tcx> {\n         debug!(\"AbstractConstBuilder::build: body={:?}\", &*self.body);\n         self.recurse_build(self.body_id)?;\n \n-        for n in self.nodes.iter() {\n-            if let Node::Leaf(ct) = n {\n-                if let ty::ConstKind::Unevaluated(ct) = ct.kind() {\n-                    // `AbstractConst`s should not contain any promoteds as they require references which\n-                    // are not allowed.\n-                    assert_eq!(ct.promoted, None);\n-                    assert_eq!(ct, self.tcx.erase_regions(ct));\n-                }\n-            }\n-        }\n-\n         Ok(self.tcx.arena.alloc_from_iter(self.nodes.into_iter()))\n     }\n "}, {"sha": "e87c09b69da394799335a380180d9665c80a15ce", "filename": "src/librustdoc/clean/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Flibrustdoc%2Fclean%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Flibrustdoc%2Fclean%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Futils.rs?ref=29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "patch": "@@ -236,7 +236,7 @@ pub(crate) fn print_const(cx: &DocContext<'_>, n: ty::Const<'_>) -> String {\n     match n.kind() {\n         ty::ConstKind::Unevaluated(ty::Unevaluated { def, substs: _, promoted }) => {\n             assert_eq!(promoted, ());\n-            let mut s = if let Some(def) = def.as_local() {\n+            let s = if let Some(def) = def.as_local() {\n                 print_const_expr(cx.tcx, cx.tcx.hir().body_owned_by(def.did))\n             } else {\n                 inline::print_inlined_const(cx.tcx, def.did)"}, {"sha": "cf968f6fbb9c9740ddabd7ae9bf7bac237f601ec", "filename": "src/test/mir-opt/const_promotion_extern_static.BAR.PromoteTemps.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fconst_promotion_extern_static.BAR.PromoteTemps.diff", "raw_url": "https://github.com/rust-lang/rust/raw/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fconst_promotion_extern_static.BAR.PromoteTemps.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_promotion_extern_static.BAR.PromoteTemps.diff?ref=29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "patch": "@@ -17,7 +17,7 @@\n -         StorageLive(_4);                 // scope 0 at $DIR/const-promotion-extern-static.rs:+0:32: +0:34\n -         StorageLive(_5);                 // scope 0 at $DIR/const-promotion-extern-static.rs:+0:33: +0:34\n -         _5 = const {alloc1: &i32};       // scope 0 at $DIR/const-promotion-extern-static.rs:+0:33: +0:34\n-+         _6 = const BAR::promoted[0];     // scope 0 at $DIR/const-promotion-extern-static.rs:+0:31: +0:44\n++         _6 = const _;                    // scope 0 at $DIR/const-promotion-extern-static.rs:+0:31: +0:44\n                                            // mir::Constant\n -                                          // + span: $DIR/const-promotion-extern-static.rs:9:33: 9:34\n -                                          // + literal: Const { ty: &i32, val: Value(Scalar(alloc1)) }"}, {"sha": "31f1a5597b34c55b5cc8b89743cd0196f648f7ab", "filename": "src/test/mir-opt/const_promotion_extern_static.FOO.PromoteTemps.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fconst_promotion_extern_static.FOO.PromoteTemps.diff", "raw_url": "https://github.com/rust-lang/rust/raw/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fconst_promotion_extern_static.FOO.PromoteTemps.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_promotion_extern_static.FOO.PromoteTemps.diff?ref=29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "patch": "@@ -19,7 +19,7 @@\n -         StorageLive(_4);                 // scope 0 at $DIR/const-promotion-extern-static.rs:+0:32: +0:45\n -         StorageLive(_5);                 // scope 1 at $DIR/const-promotion-extern-static.rs:+0:42: +0:43\n -         _5 = const {alloc3: *const i32}; // scope 1 at $DIR/const-promotion-extern-static.rs:+0:42: +0:43\n-+         _6 = const FOO::promoted[0];     // scope 0 at $DIR/const-promotion-extern-static.rs:+0:31: +0:55\n++         _6 = const _;                    // scope 0 at $DIR/const-promotion-extern-static.rs:+0:31: +0:55\n                                            // mir::Constant\n -                                          // + span: $DIR/const-promotion-extern-static.rs:13:42: 13:43\n -                                          // + literal: Const { ty: *const i32, val: Value(Scalar(alloc3)) }"}, {"sha": "c27b19679a8396cdda5345064801d6b28b0d20e1", "filename": "src/test/mir-opt/const_prop/bad_op_unsafe_oob_for_slices.main.ConstProp.32bit.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fbad_op_unsafe_oob_for_slices.main.ConstProp.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fbad_op_unsafe_oob_for_slices.main.ConstProp.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fbad_op_unsafe_oob_for_slices.main.ConstProp.32bit.diff?ref=29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "patch": "@@ -25,7 +25,7 @@\n           StorageLive(_1);                 // scope 0 at $DIR/bad_op_unsafe_oob_for_slices.rs:+1:9: +1:10\n           StorageLive(_2);                 // scope 0 at $DIR/bad_op_unsafe_oob_for_slices.rs:+1:25: +1:35\n           StorageLive(_3);                 // scope 0 at $DIR/bad_op_unsafe_oob_for_slices.rs:+1:25: +1:35\n-          _9 = const main::promoted[0];    // scope 0 at $DIR/bad_op_unsafe_oob_for_slices.rs:+1:25: +1:35\n+          _9 = const _;                    // scope 0 at $DIR/bad_op_unsafe_oob_for_slices.rs:+1:25: +1:35\n                                            // mir::Constant\n                                            // + span: $DIR/bad_op_unsafe_oob_for_slices.rs:5:25: 5:35\n                                            // + literal: Const { ty: &[i32; 3], val: Unevaluated(main, [], Some(promoted[0])) }"}, {"sha": "c27b19679a8396cdda5345064801d6b28b0d20e1", "filename": "src/test/mir-opt/const_prop/bad_op_unsafe_oob_for_slices.main.ConstProp.64bit.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fbad_op_unsafe_oob_for_slices.main.ConstProp.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fbad_op_unsafe_oob_for_slices.main.ConstProp.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fbad_op_unsafe_oob_for_slices.main.ConstProp.64bit.diff?ref=29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "patch": "@@ -25,7 +25,7 @@\n           StorageLive(_1);                 // scope 0 at $DIR/bad_op_unsafe_oob_for_slices.rs:+1:9: +1:10\n           StorageLive(_2);                 // scope 0 at $DIR/bad_op_unsafe_oob_for_slices.rs:+1:25: +1:35\n           StorageLive(_3);                 // scope 0 at $DIR/bad_op_unsafe_oob_for_slices.rs:+1:25: +1:35\n-          _9 = const main::promoted[0];    // scope 0 at $DIR/bad_op_unsafe_oob_for_slices.rs:+1:25: +1:35\n+          _9 = const _;                    // scope 0 at $DIR/bad_op_unsafe_oob_for_slices.rs:+1:25: +1:35\n                                            // mir::Constant\n                                            // + span: $DIR/bad_op_unsafe_oob_for_slices.rs:5:25: 5:35\n                                            // + literal: Const { ty: &[i32; 3], val: Unevaluated(main, [], Some(promoted[0])) }"}, {"sha": "7e03f6bb95aceefd4019ee0c7041c5ccd7565b40", "filename": "src/test/mir-opt/const_prop/const_prop_fails_gracefully.main.ConstProp.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fconst_prop_fails_gracefully.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fconst_prop_fails_gracefully.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fconst_prop_fails_gracefully.main.ConstProp.diff?ref=29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "patch": "@@ -18,8 +18,8 @@\n           StorageLive(_3);                 // scope 0 at $DIR/const_prop_fails_gracefully.rs:+2:13: +2:16\n           _3 = const FOO;                  // scope 0 at $DIR/const_prop_fails_gracefully.rs:+2:13: +2:16\n                                            // mir::Constant\n-                                           // + span: $DIR/const_prop_fails_gracefully.rs:8:13: 8:16\n-                                           // + literal: Const { ty: &i32, val: Unevaluated(FOO, [], None) }\n+                                           // + span: $DIR/const_prop_fails_gracefully.rs:7:13: 7:16\n+                                           // + literal: Const { ty: &i32, val: Unevaluated(FOO, [], ()) }\n           _2 = &raw const (*_3);           // scope 0 at $DIR/const_prop_fails_gracefully.rs:+2:13: +2:16\n           _1 = move _2 as usize (PointerExposeAddress); // scope 0 at $DIR/const_prop_fails_gracefully.rs:+2:13: +2:39\n           StorageDead(_2);                 // scope 0 at $DIR/const_prop_fails_gracefully.rs:+2:38: +2:39"}, {"sha": "09ce67ff15dd5af6ca5f40924f411d15234b9f11", "filename": "src/test/mir-opt/const_prop/ref_deref.main.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref.main.ConstProp.diff?ref=29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "patch": "@@ -11,7 +11,7 @@\n       bb0: {\n           StorageLive(_1);                 // scope 0 at $DIR/ref_deref.rs:+1:5: +1:10\n           StorageLive(_2);                 // scope 0 at $DIR/ref_deref.rs:+1:6: +1:10\n-          _4 = const main::promoted[0];    // scope 0 at $DIR/ref_deref.rs:+1:6: +1:10\n+          _4 = const _;                    // scope 0 at $DIR/ref_deref.rs:+1:6: +1:10\n                                            // mir::Constant\n                                            // + span: $DIR/ref_deref.rs:5:6: 5:10\n                                            // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[0])) }"}, {"sha": "902cd7850311450f8c57f68af4cb93e305241e17", "filename": "src/test/mir-opt/const_prop/ref_deref.main.PromoteTemps.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref.main.PromoteTemps.diff", "raw_url": "https://github.com/rust-lang/rust/raw/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref.main.PromoteTemps.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref.main.PromoteTemps.diff?ref=29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "patch": "@@ -14,7 +14,7 @@\n -         StorageLive(_3);                 // scope 0 at $DIR/ref_deref.rs:+1:8: +1:9\n -         _3 = const 4_i32;                // scope 0 at $DIR/ref_deref.rs:+1:8: +1:9\n -         _2 = &_3;                        // scope 0 at $DIR/ref_deref.rs:+1:6: +1:10\n-+         _4 = const main::promoted[0];    // scope 0 at $DIR/ref_deref.rs:+1:6: +1:10\n++         _4 = const _;                    // scope 0 at $DIR/ref_deref.rs:+1:6: +1:10\n +                                          // mir::Constant\n +                                          // + span: $DIR/ref_deref.rs:5:6: 5:10\n +                                          // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[0])) }"}, {"sha": "ec3d90433159db1b596990220f44be4458e051cb", "filename": "src/test/mir-opt/const_prop/ref_deref_project.main.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project.main.ConstProp.diff?ref=29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "patch": "@@ -11,7 +11,7 @@\n       bb0: {\n           StorageLive(_1);                 // scope 0 at $DIR/ref_deref_project.rs:+1:5: +1:17\n           StorageLive(_2);                 // scope 0 at $DIR/ref_deref_project.rs:+1:6: +1:17\n-          _4 = const main::promoted[0];    // scope 0 at $DIR/ref_deref_project.rs:+1:6: +1:17\n+          _4 = const _;                    // scope 0 at $DIR/ref_deref_project.rs:+1:6: +1:17\n                                            // mir::Constant\n                                            // + span: $DIR/ref_deref_project.rs:6:6: 6:17\n                                            // + literal: Const { ty: &(i32, i32), val: Unevaluated(main, [], Some(promoted[0])) }"}, {"sha": "cd0616e65baf847974e037b19474cf8f47439f98", "filename": "src/test/mir-opt/const_prop/ref_deref_project.main.PromoteTemps.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project.main.PromoteTemps.diff", "raw_url": "https://github.com/rust-lang/rust/raw/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project.main.PromoteTemps.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project.main.PromoteTemps.diff?ref=29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "patch": "@@ -14,7 +14,7 @@\n -         StorageLive(_3);                 // scope 0 at $DIR/ref_deref_project.rs:+1:8: +1:14\n -         _3 = (const 4_i32, const 5_i32); // scope 0 at $DIR/ref_deref_project.rs:+1:8: +1:14\n -         _2 = &(_3.1: i32);               // scope 0 at $DIR/ref_deref_project.rs:+1:6: +1:17\n-+         _4 = const main::promoted[0];    // scope 0 at $DIR/ref_deref_project.rs:+1:6: +1:17\n++         _4 = const _;                    // scope 0 at $DIR/ref_deref_project.rs:+1:6: +1:17\n +                                          // mir::Constant\n +                                          // + span: $DIR/ref_deref_project.rs:6:6: 6:17\n +                                          // + literal: Const { ty: &(i32, i32), val: Unevaluated(main, [], Some(promoted[0])) }"}, {"sha": "624376769b70f07143a889a388522b2967141357", "filename": "src/test/mir-opt/const_prop/slice_len.main.ConstProp.32bit.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fslice_len.main.ConstProp.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fslice_len.main.ConstProp.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fslice_len.main.ConstProp.32bit.diff?ref=29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "patch": "@@ -19,7 +19,7 @@\n           StorageLive(_2);                 // scope 0 at $DIR/slice_len.rs:+1:5: +1:30\n           StorageLive(_3);                 // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n           StorageLive(_4);                 // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n-          _9 = const main::promoted[0];    // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n+          _9 = const _;                    // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n                                            // mir::Constant\n                                            // + span: $DIR/slice_len.rs:5:6: 5:19\n                                            // + literal: Const { ty: &[u32; 3], val: Unevaluated(main, [], Some(promoted[0])) }"}, {"sha": "624376769b70f07143a889a388522b2967141357", "filename": "src/test/mir-opt/const_prop/slice_len.main.ConstProp.64bit.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fslice_len.main.ConstProp.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fslice_len.main.ConstProp.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fslice_len.main.ConstProp.64bit.diff?ref=29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "patch": "@@ -19,7 +19,7 @@\n           StorageLive(_2);                 // scope 0 at $DIR/slice_len.rs:+1:5: +1:30\n           StorageLive(_3);                 // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n           StorageLive(_4);                 // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n-          _9 = const main::promoted[0];    // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n+          _9 = const _;                    // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n                                            // mir::Constant\n                                            // + span: $DIR/slice_len.rs:5:6: 5:19\n                                            // + literal: Const { ty: &[u32; 3], val: Unevaluated(main, [], Some(promoted[0])) }"}, {"sha": "c353c375aa963378b784df57f999431538b6741a", "filename": "src/test/mir-opt/derefer_complex_case.main.Derefer.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fderefer_complex_case.main.Derefer.diff", "raw_url": "https://github.com/rust-lang/rust/raw/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fderefer_complex_case.main.Derefer.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fderefer_complex_case.main.Derefer.diff?ref=29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "patch": "@@ -28,7 +28,7 @@\n       bb0: {\n           StorageLive(_1);                 // scope 0 at $DIR/derefer_complex_case.rs:+1:17: +1:26\n           StorageLive(_2);                 // scope 0 at $DIR/derefer_complex_case.rs:+1:17: +1:26\n-          _14 = const main::promoted[0];   // scope 0 at $DIR/derefer_complex_case.rs:+1:17: +1:26\n+          _14 = const _;                   // scope 0 at $DIR/derefer_complex_case.rs:+1:17: +1:26\n                                            // mir::Constant\n                                            // + span: $DIR/derefer_complex_case.rs:6:17: 6:26\n                                            // + literal: Const { ty: &[i32; 2], val: Unevaluated(main, [], Some(promoted[0])) }"}, {"sha": "cabc1a92024fc51e14ed10fcf231b7fe14c0f6ae", "filename": "src/test/mir-opt/inline/inline_retag.bar.Inline.after.mir", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Finline%2Finline_retag.bar.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Finline%2Finline_retag.bar.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_retag.bar.Inline.after.mir?ref=29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "patch": "@@ -32,7 +32,7 @@ fn bar() -> bool {\n         _2 = _1;                         // scope 1 at $DIR/inline-retag.rs:+2:5: +2:6\n         StorageLive(_3);                 // scope 1 at $DIR/inline-retag.rs:+2:7: +2:9\n         StorageLive(_4);                 // scope 1 at $DIR/inline-retag.rs:+2:7: +2:9\n-        _10 = const bar::promoted[1];    // scope 1 at $DIR/inline-retag.rs:+2:7: +2:9\n+        _10 = const _;                   // scope 1 at $DIR/inline-retag.rs:+2:7: +2:9\n                                          // mir::Constant\n                                          // + span: $DIR/inline-retag.rs:12:7: 12:9\n                                          // + literal: Const { ty: &i32, val: Unevaluated(bar, [], Some(promoted[1])) }\n@@ -43,7 +43,7 @@ fn bar() -> bool {\n         Retag(_3);                       // scope 1 at $DIR/inline-retag.rs:+2:7: +2:9\n         StorageLive(_6);                 // scope 1 at $DIR/inline-retag.rs:+2:11: +2:14\n         StorageLive(_7);                 // scope 1 at $DIR/inline-retag.rs:+2:11: +2:14\n-        _9 = const bar::promoted[0];     // scope 1 at $DIR/inline-retag.rs:+2:11: +2:14\n+        _9 = const _;                    // scope 1 at $DIR/inline-retag.rs:+2:11: +2:14\n                                          // mir::Constant\n                                          // + span: $DIR/inline-retag.rs:12:11: 12:14\n                                          // + literal: Const { ty: &i32, val: Unevaluated(bar, [], Some(promoted[0])) }"}, {"sha": "09d3479d8911f053e6908b760f715d4501229c53", "filename": "src/test/mir-opt/issue_73223.main.SimplifyArmIdentity.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.diff", "raw_url": "https://github.com/rust-lang/rust/raw/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.diff?ref=29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "patch": "@@ -87,7 +87,7 @@\n           StorageLive(_10);                // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           _10 = &_1;                       // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageLive(_11);                // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _28 = _;                         // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+\t        _28 = const _;                   // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[0])) }"}, {"sha": "8659ddfdb00cc208224ed0ac1241dc76ea5e4cd7", "filename": "src/test/mir-opt/issue_99325.main.mir_map.0.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fissue_99325.main.mir_map.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fissue_99325.main.mir_map.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_99325.main.mir_map.0.mir?ref=29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "patch": "@@ -2,7 +2,7 @@\n \n | User Type Annotations\n | 0: user_ty: Canonical { max_universe: U0, variables: [], value: TypeOf(DefId(0:3 ~ issue_99325[8f58]::function_with_bytes), UserSubsts { substs: [Const { ty: &'static [u8; 4], kind: Value(Branch([Leaf(0x41), Leaf(0x41), Leaf(0x41), Leaf(0x41)])) }], user_self_ty: None }) }, span: $DIR/issue-99325.rs:10:16: 10:46, inferred_ty: fn() -> &'static [u8] {function_with_bytes::<&*b\"AAAA\">}\n-| 1: user_ty: Canonical { max_universe: U0, variables: [], value: TypeOf(DefId(0:3 ~ issue_99325[8f58]::function_with_bytes), UserSubsts { substs: [Const { ty: &'static [u8; 4], kind: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:8 ~ issue_99325[8f58]::main::{constant#1}), const_param_did: Some(DefId(0:4 ~ issue_99325[8f58]::function_with_bytes::BYTES)) }, substs: [], promoted: None }) }], user_self_ty: None }) }, span: $DIR/issue-99325.rs:11:16: 11:68, inferred_ty: fn() -> &'static [u8] {function_with_bytes::<&*b\"AAAA\">}\n+| 1: user_ty: Canonical { max_universe: U0, variables: [], value: TypeOf(DefId(0:3 ~ issue_99325[8f58]::function_with_bytes), UserSubsts { substs: [Const { ty: &'static [u8; 4], kind: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:8 ~ issue_99325[8f58]::main::{constant#1}), const_param_did: Some(DefId(0:4 ~ issue_99325[8f58]::function_with_bytes::BYTES)) }, substs: [], promoted: () }) }], user_self_ty: None }) }, span: $DIR/issue-99325.rs:11:16: 11:68, inferred_ty: fn() -> &'static [u8] {function_with_bytes::<&*b\"AAAA\">}\n |\n fn main() -> () {\n     let mut _0: ();                      // return place in scope 0 at $DIR/issue-99325.rs:+0:15: +0:15"}, {"sha": "a648e5d672dc85283c03f99aa46e3590f229c5bf", "filename": "src/test/mir-opt/lower_intrinsics.discriminant.LowerIntrinsics.diff", "status": "modified", "additions": 3, "deletions": 23, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Flower_intrinsics.discriminant.LowerIntrinsics.diff", "raw_url": "https://github.com/rust-lang/rust/raw/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Flower_intrinsics.discriminant.LowerIntrinsics.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Flower_intrinsics.discriminant.LowerIntrinsics.diff?ref=29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "patch": "@@ -44,7 +44,7 @@\n           StorageLive(_5);                 // scope 0 at $DIR/lower_intrinsics.rs:+2:5: +2:45\n           StorageLive(_6);                 // scope 0 at $DIR/lower_intrinsics.rs:+2:42: +2:44\n           StorageLive(_7);                 // scope 0 at $DIR/lower_intrinsics.rs:+2:42: +2:44\n-          _19 = const discriminant::<T>::promoted[2]; // scope 0 at $DIR/lower_intrinsics.rs:+2:42: +2:44\n+          _19 = const _;                   // scope 0 at $DIR/lower_intrinsics.rs:+2:42: +2:44\n                                            // mir::Constant\n                                            // + span: $DIR/lower_intrinsics.rs:50:42: 50:44\n                                            // + literal: Const { ty: &i32, val: Unevaluated(discriminant, [T], Some(promoted[2])) }\n@@ -59,23 +59,13 @@\n       }\n   \n       bb2: {\n-<<<<<<< HEAD\n           StorageDead(_6);                 // scope 0 at $DIR/lower_intrinsics.rs:+2:44: +2:45\n           StorageDead(_7);                 // scope 0 at $DIR/lower_intrinsics.rs:+2:45: +2:46\n           StorageDead(_5);                 // scope 0 at $DIR/lower_intrinsics.rs:+2:45: +2:46\n           StorageLive(_9);                 // scope 0 at $DIR/lower_intrinsics.rs:+3:5: +3:46\n           StorageLive(_10);                // scope 0 at $DIR/lower_intrinsics.rs:+3:42: +3:45\n           StorageLive(_11);                // scope 0 at $DIR/lower_intrinsics.rs:+3:42: +3:45\n-          _18 = const discriminant::<T>::promoted[1]; // scope 0 at $DIR/lower_intrinsics.rs:+3:42: +3:45\n-=======\n-          StorageDead(_6);                 // scope 0 at $DIR/lower_intrinsics.rs:75:44: 75:45\n-          StorageDead(_7);                 // scope 0 at $DIR/lower_intrinsics.rs:75:45: 75:46\n-          StorageDead(_5);                 // scope 0 at $DIR/lower_intrinsics.rs:75:45: 75:46\n-          StorageLive(_9);                 // scope 0 at $DIR/lower_intrinsics.rs:76:5: 76:46\n-          StorageLive(_10);                // scope 0 at $DIR/lower_intrinsics.rs:76:42: 76:45\n-          StorageLive(_11);                // scope 0 at $DIR/lower_intrinsics.rs:76:42: 76:45\n-          _18 = const _;                   // scope 0 at $DIR/lower_intrinsics.rs:76:42: 76:45\n->>>>>>> 631a70cb406 (bless tests)\n+          _18 = const _;                   // scope 0 at $DIR/lower_intrinsics.rs:+3:42: +3:45\n                                            // mir::Constant\n                                            // + span: $DIR/lower_intrinsics.rs:51:42: 51:45\n                                            // + literal: Const { ty: &(), val: Unevaluated(discriminant, [T], Some(promoted[1])) }\n@@ -90,23 +80,13 @@\n       }\n   \n       bb3: {\n-<<<<<<< HEAD\n           StorageDead(_10);                // scope 0 at $DIR/lower_intrinsics.rs:+3:45: +3:46\n           StorageDead(_11);                // scope 0 at $DIR/lower_intrinsics.rs:+3:46: +3:47\n           StorageDead(_9);                 // scope 0 at $DIR/lower_intrinsics.rs:+3:46: +3:47\n           StorageLive(_13);                // scope 0 at $DIR/lower_intrinsics.rs:+4:5: +4:48\n           StorageLive(_14);                // scope 0 at $DIR/lower_intrinsics.rs:+4:42: +4:47\n           StorageLive(_15);                // scope 0 at $DIR/lower_intrinsics.rs:+4:42: +4:47\n-          _17 = const discriminant::<T>::promoted[0]; // scope 0 at $DIR/lower_intrinsics.rs:+4:42: +4:47\n-=======\n-          StorageDead(_10);                // scope 0 at $DIR/lower_intrinsics.rs:76:45: 76:46\n-          StorageDead(_11);                // scope 0 at $DIR/lower_intrinsics.rs:76:46: 76:47\n-          StorageDead(_9);                 // scope 0 at $DIR/lower_intrinsics.rs:76:46: 76:47\n-          StorageLive(_13);                // scope 0 at $DIR/lower_intrinsics.rs:77:5: 77:48\n-          StorageLive(_14);                // scope 0 at $DIR/lower_intrinsics.rs:77:42: 77:47\n-          StorageLive(_15);                // scope 0 at $DIR/lower_intrinsics.rs:77:42: 77:47\n-          _17 = const _;                   // scope 0 at $DIR/lower_intrinsics.rs:77:42: 77:47\n->>>>>>> 631a70cb406 (bless tests)\n+          _17 = const _;                   // scope 0 at $DIR/lower_intrinsics.rs:+4:42: +4:47\n                                            // mir::Constant\n                                            // + span: $DIR/lower_intrinsics.rs:52:42: 52:47\n                                            // + literal: Const { ty: &E, val: Unevaluated(discriminant, [T], Some(promoted[0])) }"}, {"sha": "b193a8d76fcba0ad10bebe883398c774781c7864", "filename": "src/test/mir-opt/match_false_edges.full_tested_match.PromoteTemps.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.full_tested_match.PromoteTemps.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.full_tested_match.PromoteTemps.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.full_tested_match.PromoteTemps.after.mir?ref=29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "patch": "@@ -51,7 +51,7 @@ fn full_tested_match() -> () {\n \n     bb5: {\n         StorageLive(_6);                 // scope 0 at $DIR/match_false_edges.rs:+2:14: +2:15\n-        _11 = const full_tested_match::promoted[0]; // scope 0 at $DIR/match_false_edges.rs:+2:14: +2:15\n+        _11 = const _;                   // scope 0 at $DIR/match_false_edges.rs:+2:14: +2:15\n                                          // mir::Constant\n                                          // + span: $DIR/match_false_edges.rs:14:14: 14:15\n                                          // + literal: Const { ty: &Option<i32>, val: Unevaluated(full_tested_match, [], Some(promoted[0])) }"}, {"sha": "7212de52fc378b1f7d403d2d57cf7230e952d1c6", "filename": "src/test/mir-opt/retag.main.SimplifyCfg-elaborate-drops.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fretag.main.SimplifyCfg-elaborate-drops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/29c0364c372b7c5b9bf8378bd7d305ff571ebea4/src%2Ftest%2Fmir-opt%2Fretag.main.SimplifyCfg-elaborate-drops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fretag.main.SimplifyCfg-elaborate-drops.after.mir?ref=29c0364c372b7c5b9bf8378bd7d305ff571ebea4", "patch": "@@ -142,7 +142,7 @@ fn main() -> () {\n         Retag(_20);                      // scope 7 at $DIR/retag.rs:+18:5: +18:24\n         StorageLive(_22);                // scope 7 at $DIR/retag.rs:+18:21: +18:23\n         StorageLive(_23);                // scope 7 at $DIR/retag.rs:+18:21: +18:23\n-        _28 = const main::promoted[0];   // scope 7 at $DIR/retag.rs:+18:21: +18:23\n+        _28 = const _;                   // scope 7 at $DIR/retag.rs:+18:21: +18:23\n                                          // mir::Constant\n                                          // + span: $DIR/retag.rs:48:21: 48:23\n                                          // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[0])) }"}]}