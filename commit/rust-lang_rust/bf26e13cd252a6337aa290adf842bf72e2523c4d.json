{"sha": "bf26e13cd252a6337aa290adf842bf72e2523c4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMjZlMTNjZDI1MmE2MzM3YWEyOTBhZGY4NDJiZjcyZTI1MjNjNGQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-05-10T12:25:56Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-05-10T12:25:56Z"}, "message": "simplify", "tree": {"sha": "9970300ac753fa7856defc709a73fc886d55880c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9970300ac753fa7856defc709a73fc886d55880c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf26e13cd252a6337aa290adf842bf72e2523c4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf26e13cd252a6337aa290adf842bf72e2523c4d", "html_url": "https://github.com/rust-lang/rust/commit/bf26e13cd252a6337aa290adf842bf72e2523c4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf26e13cd252a6337aa290adf842bf72e2523c4d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd109fb587904cfecc1149e068814bfd38feb83c", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd109fb587904cfecc1149e068814bfd38feb83c", "html_url": "https://github.com/rust-lang/rust/commit/fd109fb587904cfecc1149e068814bfd38feb83c"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "1ad0fa816ca5b96beca7fc344ccbb3a98b47b09b", "filename": "crates/ide_assists/src/handlers/replace_let_with_if_let.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/bf26e13cd252a6337aa290adf842bf72e2523c4d/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_let_with_if_let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf26e13cd252a6337aa290adf842bf72e2523c4d/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_let_with_if_let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_let_with_if_let.rs?ref=bf26e13cd252a6337aa290adf842bf72e2523c4d", "patch": "@@ -50,22 +50,19 @@ pub(crate) fn replace_let_with_if_let(acc: &mut Assists, ctx: &AssistContext) ->\n         \"Replace with if-let\",\n         target,\n         |edit| {\n-            let with_placeholder: ast::Pat = match happy_variant {\n-                None => make::wildcard_pat().into(),\n-                Some(var_name) => make::tuple_struct_pat(\n-                    make::ext::ident_path(var_name),\n-                    once(make::wildcard_pat().into()),\n-                )\n-                .into(),\n+            let pat = match happy_variant {\n+                None => original_pat,\n+                Some(var_name) => {\n+                    make::tuple_struct_pat(make::ext::ident_path(var_name), once(original_pat))\n+                        .into()\n+                }\n             };\n+\n             let block =\n-                make::block_expr(None, None).indent(IndentLevel::from_node(let_stmt.syntax()));\n-            let if_ = make::expr_if(make::condition(init, Some(with_placeholder)), block, None);\n+                make::ext::empty_block_expr().indent(IndentLevel::from_node(let_stmt.syntax()));\n+            let if_ = make::expr_if(make::condition(init, Some(pat)), block, None);\n             let stmt = make::expr_stmt(if_);\n \n-            let placeholder = stmt.syntax().descendants().find_map(ast::WildcardPat::cast).unwrap();\n-            let stmt = stmt.replace_descendant(placeholder.into(), original_pat);\n-\n             edit.replace_ast(ast::Stmt::from(let_stmt), ast::Stmt::from(stmt));\n         },\n     )"}, {"sha": "1998ad1f6501306ccd608dbddb63dcc6b277fc31", "filename": "crates/syntax/src/ast/make.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf26e13cd252a6337aa290adf842bf72e2523c4d/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf26e13cd252a6337aa290adf842bf72e2523c4d/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs?ref=bf26e13cd252a6337aa290adf842bf72e2523c4d", "patch": "@@ -31,6 +31,9 @@ pub mod ext {\n     pub fn expr_todo() -> ast::Expr {\n         expr_from_text(\"todo!()\")\n     }\n+    pub fn empty_block_expr() -> ast::BlockExpr {\n+        block_expr(None, None)\n+    }\n \n     pub fn ty_bool() -> ast::Type {\n         ty_path(ident_path(\"bool\"))"}]}