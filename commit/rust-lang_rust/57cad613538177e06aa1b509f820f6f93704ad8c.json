{"sha": "57cad613538177e06aa1b509f820f6f93704ad8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3Y2FkNjEzNTM4MTc3ZTA2YWExYjUwOWY4MjBmNmY5MzcwNGFkOGM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-02T23:56:30Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-03T02:10:24Z"}, "message": "rt: Remove task pinning. Does nothing", "tree": {"sha": "9e18a0261a76b91e65d73878c28a458df1e6d12e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e18a0261a76b91e65d73878c28a458df1e6d12e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57cad613538177e06aa1b509f820f6f93704ad8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57cad613538177e06aa1b509f820f6f93704ad8c", "html_url": "https://github.com/rust-lang/rust/commit/57cad613538177e06aa1b509f820f6f93704ad8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57cad613538177e06aa1b509f820f6f93704ad8c/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18de0f2aeb16439cfb220e344c15d88b0f41c82d", "url": "https://api.github.com/repos/rust-lang/rust/commits/18de0f2aeb16439cfb220e344c15d88b0f41c82d", "html_url": "https://github.com/rust-lang/rust/commit/18de0f2aeb16439cfb220e344c15d88b0f41c82d"}], "stats": {"total": 91, "additions": 9, "deletions": 82}, "files": [{"sha": "0b8abdc36a7db78dae90c9737e635b140400b54e", "filename": "src/libcore/task.rs", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/57cad613538177e06aa1b509f820f6f93704ad8c/src%2Flibcore%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57cad613538177e06aa1b509f820f6f93704ad8c/src%2Flibcore%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftask.rs?ref=57cad613538177e06aa1b509f820f6f93704ad8c", "patch": "@@ -37,8 +37,6 @@ export yield;\n export task_notification;\n export join;\n export unsupervise;\n-export pin;\n-export unpin;\n export task_result;\n export tr_success;\n export tr_failure;\n@@ -64,9 +62,6 @@ type rust_closure = {\n #[link_name = \"rustrt\"]\n #[abi = \"cdecl\"]\n native mod rustrt {\n-    // these can run on the C stack:\n-    fn pin_task();\n-    fn unpin_task();\n     fn get_task_id() -> task_id;\n     fn rust_get_task() -> *rust_task;\n \n@@ -310,20 +305,6 @@ An unsupervised task will not propagate its failure up the task tree\n */\n fn unsupervise() { ret sys::unsupervise(); }\n \n-/*\n-Function: pin\n-\n-Pins the current task and future child tasks to a single scheduler thread\n-*/\n-fn pin() { rustrt::pin_task(); }\n-\n-/*\n-Function: unpin\n-\n-Unpin the current task and future child tasks\n-*/\n-fn unpin() { rustrt::unpin_task(); }\n-\n /*\n Function: currently_unwinding()\n "}, {"sha": "88f7aec880019ccb2264352a27ce821c1a2a0670", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/57cad613538177e06aa1b509f820f6f93704ad8c/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/57cad613538177e06aa1b509f820f6f93704ad8c/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=57cad613538177e06aa1b509f820f6f93704ad8c", "patch": "@@ -380,18 +380,6 @@ nano_time(uint64_t *ns) {\n     *ns = t.time_ns();\n }\n \n-extern \"C\" CDECL void\n-pin_task() {\n-    rust_task *task = rust_scheduler::get_task();\n-    task->pin();\n-}\n-\n-extern \"C\" CDECL void\n-unpin_task() {\n-    rust_task *task = rust_scheduler::get_task();\n-    task->unpin();\n-}\n-\n extern \"C\" CDECL rust_task_id\n get_task_id() {\n     rust_task *task = rust_scheduler::get_task();"}, {"sha": "9719ec377156d7b96405829dc60be5f897e54680", "filename": "src/rt/rust_scheduler.cpp", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/57cad613538177e06aa1b509f820f6f93704ad8c/src%2Frt%2Frust_scheduler.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/57cad613538177e06aa1b509f820f6f93704ad8c/src%2Frt%2Frust_scheduler.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_scheduler.cpp?ref=57cad613538177e06aa1b509f820f6f93704ad8c", "patch": "@@ -331,9 +331,6 @@ rust_scheduler::create_task(rust_task *spawner, const char *name,\n         rust_task (this, &newborn_tasks, spawner, name, init_stack_sz);\n     DLOG(this, task, \"created task: \" PTR \", spawner: %s, name: %s\",\n                         task, spawner ? spawner->name : \"null\", name);\n-    if(spawner) {\n-        task->pin(spawner->pinned_on);\n-    }\n \n     {\n         scoped_lock with(lock);"}, {"sha": "6bd03e5f0ccff299ca2346267d861ddb1394e891", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/57cad613538177e06aa1b509f820f6f93704ad8c/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/57cad613538177e06aa1b509f820f6f93704ad8c/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=57cad613538177e06aa1b509f820f6f93704ad8c", "patch": "@@ -245,7 +245,6 @@ rust_task::rust_task(rust_scheduler *sched, rust_task_list *state,\n     next_port_id(0),\n     rendezvous_ptr(0),\n     running_on(-1),\n-    pinned_on(-1),\n     local_region(&sched->srv->local_region),\n     boxed(&local_region),\n     unwinding(false),\n@@ -628,29 +627,14 @@ rust_task::backtrace() {\n bool rust_task::can_schedule(int id)\n {\n     return\n-        running_on == -1 &&\n-        (pinned_on == -1 || pinned_on == id);\n+        running_on == -1;\n }\n \n void *\n rust_task::calloc(size_t size, const char *tag) {\n     return local_region.calloc(size, tag);\n }\n \n-void rust_task::pin() {\n-    I(this->sched, running_on != -1);\n-    pinned_on = running_on;\n-}\n-\n-void rust_task::pin(int id) {\n-    I(this->sched, running_on == -1);\n-    pinned_on = id;\n-}\n-\n-void rust_task::unpin() {\n-    pinned_on = -1;\n-}\n-\n rust_port_id rust_task::register_port(rust_port *port) {\n     I(sched, !lock.lock_held_by_current_thread());\n     scoped_lock with(lock);"}, {"sha": "c9bd9e9d3a94827a97355194fdff50c0804e6968", "filename": "src/rt/rust_task.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/57cad613538177e06aa1b509f820f6f93704ad8c/src%2Frt%2Frust_task.h", "raw_url": "https://github.com/rust-lang/rust/raw/57cad613538177e06aa1b509f820f6f93704ad8c/src%2Frt%2Frust_task.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.h?ref=57cad613538177e06aa1b509f820f6f93704ad8c", "patch": "@@ -101,7 +101,6 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n     // This flag indicates that a worker is either currently running the task\n     // or is about to run this task.\n     int running_on;\n-    int pinned_on;\n \n     memory_region local_region;\n     boxed_region boxed;\n@@ -180,10 +179,6 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n \n     void *calloc(size_t size, const char *tag);\n \n-    void pin();\n-    void pin(int id);\n-    void unpin();\n-\n     rust_port_id register_port(rust_port *port);\n     void release_port(rust_port_id id);\n     rust_port *get_port_by_id(rust_port_id id);"}, {"sha": "fea1a4e30efc09c1adcd650bf3ed085354a7e1f7", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57cad613538177e06aa1b509f820f6f93704ad8c/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/57cad613538177e06aa1b509f820f6f93704ad8c/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=57cad613538177e06aa1b509f820f6f93704ad8c", "patch": "@@ -20,9 +20,7 @@ leak\n nano_time\n new_port\n new_task\n-pin_task\n port_recv\n-unpin_task\n rand_free\n rand_new\n rand_next"}, {"sha": "21686b4f3d65d642c357df390bec28f3cc266672", "filename": "src/test/run-fail/morestack2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/57cad613538177e06aa1b509f820f6f93704ad8c/src%2Ftest%2Frun-fail%2Fmorestack2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57cad613538177e06aa1b509f820f6f93704ad8c/src%2Ftest%2Frun-fail%2Fmorestack2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack2.rs?ref=57cad613538177e06aa1b509f820f6f93704ad8c", "patch": "@@ -8,14 +8,14 @@\n use std;\n \n native mod rustrt {\n-    fn pin_task();\n+    fn do_gc();\n }\n \n fn getbig_call_c_and_fail(i: int) {\n     if i != 0 {\n         getbig_call_c_and_fail(i - 1);\n     } else {\n-        rustrt::pin_task();\n+        rustrt::do_gc();\n         fail;\n     }\n }"}, {"sha": "1476ebb367f7be8b7211aa585e3d64f80329e63b", "filename": "src/test/run-pass/bind-native.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/57cad613538177e06aa1b509f820f6f93704ad8c/src%2Ftest%2Frun-pass%2Fbind-native.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57cad613538177e06aa1b509f820f6f93704ad8c/src%2Ftest%2Frun-pass%2Fbind-native.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbind-native.rs?ref=57cad613538177e06aa1b509f820f6f93704ad8c", "patch": "@@ -4,7 +4,7 @@ Can we bind native things?\n \n #[abi = \"cdecl\"]\n native mod rustrt {\n-    fn pin_task();\n+    fn do_gc();\n }\n \n-fn main() { bind rustrt::pin_task(); }\n+fn main() { bind rustrt::do_gc(); }"}, {"sha": "b2f159acbeeb550ad2c05ef0fd97633e817735ff", "filename": "src/test/run-pass/morestack6.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/57cad613538177e06aa1b509f820f6f93704ad8c/src%2Ftest%2Frun-pass%2Fmorestack6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57cad613538177e06aa1b509f820f6f93704ad8c/src%2Ftest%2Frun-pass%2Fmorestack6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmorestack6.rs?ref=57cad613538177e06aa1b509f820f6f93704ad8c", "patch": "@@ -13,8 +13,6 @@ native mod rustrt {\n     fn rust_getcwd() -> str;\n     fn refcount(box: @int);\n     fn do_gc();\n-    fn pin_task();\n-    fn unpin_task();\n     fn get_task_id();\n     fn sched_threads();\n     fn rust_get_task();\n@@ -25,8 +23,6 @@ fn calllink02() { rustrt::last_os_error(); }\n fn calllink03() { rustrt::rust_getcwd(); }\n fn calllink04() { rustrt::refcount(@0); }\n fn calllink05() { rustrt::do_gc(); }\n-fn calllink06() { rustrt::pin_task(); }\n-fn calllink07() { rustrt::unpin_task(); }\n fn calllink08() { rustrt::get_task_id(); }\n fn calllink09() { rustrt::sched_threads(); }\n fn calllink10() { rustrt::rust_get_task(); }\n@@ -60,8 +56,6 @@ fn main() {\n         calllink03,\n         calllink04,\n         calllink05,\n-        calllink06,\n-        calllink07,\n         calllink08,\n         calllink09,\n         calllink10"}, {"sha": "e33b9bb7af7609c76e73cc1d2b5c7e0b359c6367", "filename": "src/test/run-pass/native-dupe.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/57cad613538177e06aa1b509f820f6f93704ad8c/src%2Ftest%2Frun-pass%2Fnative-dupe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57cad613538177e06aa1b509f820f6f93704ad8c/src%2Ftest%2Frun-pass%2Fnative-dupe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnative-dupe.rs?ref=57cad613538177e06aa1b509f820f6f93704ad8c", "patch": "@@ -4,16 +4,16 @@\n #[abi = \"cdecl\"]\n #[link_name = \"rustrt\"]\n native mod rustrt1 {\n-    fn pin_task();\n+    fn do_gc();\n }\n \n #[abi = \"cdecl\"]\n #[link_name = \"rustrt\"]\n native mod rustrt2 {\n-    fn pin_task();\n+    fn do_gc();\n }\n \n fn main() {\n-    rustrt1::pin_task();\n-    rustrt2::pin_task();\n+    rustrt1::do_gc();\n+    rustrt2::do_gc();\n }"}, {"sha": "f989c12fc3c7ee2dcc3d8215e00e28551a3926a4", "filename": "src/test/run-pass/task-pin.rs", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/18de0f2aeb16439cfb220e344c15d88b0f41c82d/src%2Ftest%2Frun-pass%2Ftask-pin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18de0f2aeb16439cfb220e344c15d88b0f41c82d/src%2Ftest%2Frun-pass%2Ftask-pin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-pin.rs?ref=18de0f2aeb16439cfb220e344c15d88b0f41c82d", "patch": "@@ -1,10 +0,0 @@\n-/**\n-   Exercises task pinning and unpinning. Doesn't really ensure it\n-   works, just makes sure it runs.\n-*/\n-\n-use std;\n-\n-import task;\n-\n-fn main() { task::pin(); task::unpin(); }"}]}