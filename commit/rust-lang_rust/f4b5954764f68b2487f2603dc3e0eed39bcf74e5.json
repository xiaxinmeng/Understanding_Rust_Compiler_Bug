{"sha": "f4b5954764f68b2487f2603dc3e0eed39bcf74e5", "node_id": "C_kwDOAAsO6NoAKGY0YjU5NTQ3NjRmNjhiMjQ4N2YyNjAzZGMzZTBlZWQzOWJjZjc0ZTU", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-08-14T16:13:15Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-08-27T12:30:05Z"}, "message": "rustc_target: Use `Cow` and link args helpers in `apple_base`", "tree": {"sha": "fb6b787a09c3bf7692b1d7da57271c2a45c61cd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb6b787a09c3bf7692b1d7da57271c2a45c61cd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4b5954764f68b2487f2603dc3e0eed39bcf74e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4b5954764f68b2487f2603dc3e0eed39bcf74e5", "html_url": "https://github.com/rust-lang/rust/commit/f4b5954764f68b2487f2603dc3e0eed39bcf74e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4b5954764f68b2487f2603dc3e0eed39bcf74e5/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0d0573db1a791958938789b35309aab7323c284", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0d0573db1a791958938789b35309aab7323c284", "html_url": "https://github.com/rust-lang/rust/commit/f0d0573db1a791958938789b35309aab7323c284"}], "stats": {"total": 43, "additions": 20, "deletions": 23}, "files": [{"sha": "2c72bf88a41e8b03b881d8d97e822a7658b2c00e", "filename": "compiler/rustc_target/src/spec/apple_base.rs", "status": "modified", "additions": 19, "deletions": 22, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/f4b5954764f68b2487f2603dc3e0eed39bcf74e5/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4b5954764f68b2487f2603dc3e0eed39bcf74e5/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_base.rs?ref=f4b5954764f68b2487f2603dc3e0eed39bcf74e5", "patch": "@@ -1,40 +1,37 @@\n use std::{borrow::Cow, env};\n \n-use crate::spec::{cvs, DebuginfoKind, FramePointer, SplitDebuginfo, TargetOptions};\n+use crate::spec::{cvs, DebuginfoKind, FramePointer, SplitDebuginfo, StaticCow, TargetOptions};\n use crate::spec::{LinkArgs, LinkerFlavor, LldFlavor};\n \n fn pre_link_args(os: &'static str, arch: &'static str, abi: &'static str) -> LinkArgs {\n-    let mut args = LinkArgs::new();\n-\n-    let platform_name = match abi {\n-        \"sim\" => format!(\"{}-simulator\", os),\n-        \"macabi\" => \"mac-catalyst\".to_string(),\n-        _ => os.to_string(),\n+    let platform_name: StaticCow<str> = match abi {\n+        \"sim\" => format!(\"{}-simulator\", os).into(),\n+        \"macabi\" => \"mac-catalyst\".into(),\n+        _ => os.into(),\n     };\n \n-    let platform_version = match os.as_ref() {\n+    let platform_version: StaticCow<str> = match os.as_ref() {\n         \"ios\" => ios_lld_platform_version(),\n         \"tvos\" => tvos_lld_platform_version(),\n         \"watchos\" => watchos_lld_platform_version(),\n         \"macos\" => macos_lld_platform_version(arch),\n         _ => unreachable!(),\n-    };\n-\n-    if abi != \"macabi\" {\n-        args.insert(LinkerFlavor::Gcc, vec![\"-arch\".into(), arch.into()]);\n     }\n+    .into();\n \n-    args.insert(\n+    let mut args = TargetOptions::link_args(\n         LinkerFlavor::Lld(LldFlavor::Ld64),\n-        vec![\n-            \"-arch\".into(),\n-            arch.into(),\n-            \"-platform_version\".into(),\n-            platform_name.into(),\n-            platform_version.clone().into(),\n-            platform_version.into(),\n-        ],\n+        &[\"-arch\", arch, \"-platform_version\"],\n     );\n+    // Manually add owned args unsupported by link arg building helpers.\n+    args.entry(LinkerFlavor::Lld(LldFlavor::Ld64)).or_default().extend([\n+        platform_name,\n+        platform_version.clone(),\n+        platform_version,\n+    ]);\n+    if abi != \"macabi\" {\n+        super::add_link_args(&mut args, LinkerFlavor::Gcc, &[\"-arch\", arch]);\n+    }\n \n     args\n }\n@@ -127,7 +124,7 @@ pub fn macos_llvm_target(arch: &str) -> String {\n     format!(\"{}-apple-macosx{}.{}.0\", arch, major, minor)\n }\n \n-pub fn macos_link_env_remove() -> Vec<Cow<'static, str>> {\n+pub fn macos_link_env_remove() -> Vec<StaticCow<str>> {\n     let mut env_remove = Vec::with_capacity(2);\n     // Remove the `SDKROOT` environment variable if it's clearly set for the wrong platform, which\n     // may occur when we're linking a custom build script while targeting iOS for example."}, {"sha": "b4ca1ddcf63c0aa3037d7c5eb74b897dd8f15519", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4b5954764f68b2487f2603dc3e0eed39bcf74e5/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4b5954764f68b2487f2603dc3e0eed39bcf74e5/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=f4b5954764f68b2487f2603dc3e0eed39bcf74e5", "patch": "@@ -1526,7 +1526,7 @@ fn add_link_args(link_args: &mut LinkArgs, flavor: LinkerFlavor, args: &[&'stati\n     match flavor {\n         LinkerFlavor::Ld => insert(LinkerFlavor::Lld(LldFlavor::Ld)),\n         LinkerFlavor::Msvc => insert(LinkerFlavor::Lld(LldFlavor::Link)),\n-        LinkerFlavor::Lld(LldFlavor::Wasm) => {}\n+        LinkerFlavor::Lld(LldFlavor::Ld64) | LinkerFlavor::Lld(LldFlavor::Wasm) => {}\n         LinkerFlavor::Lld(lld_flavor) => {\n             panic!(\"add_link_args: use non-LLD flavor for {:?}\", lld_flavor)\n         }"}]}