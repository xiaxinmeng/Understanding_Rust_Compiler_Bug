{"sha": "ee09dc5510a775963183d4bde9c36dce2a6863ce", "node_id": "C_kwDOAAsO6NoAKGVlMDlkYzU1MTBhNzc1OTYzMTgzZDRiZGU5YzM2ZGNlMmE2ODYzY2U", "commit": {"author": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-07-23T20:37:46Z"}, "committer": {"name": "Amos Wenger", "email": "amoswenger@gmail.com", "date": "2022-07-24T08:38:42Z"}, "message": "Small fixups\n\n- use `path` instead of `paths`\n- don't mark rust-analyzer as an optional tool\n- print the cargo command that's run in the proc-macro-test build script\n\n  this originally was part of a change to fix `test --stage 0 rust-analyzer`,\n  but I'm going to leave that for a separate PR so it's easier to review.", "tree": {"sha": "3bb7e2d575a7a189b5741899d1625a905503c8f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bb7e2d575a7a189b5741899d1625a905503c8f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee09dc5510a775963183d4bde9c36dce2a6863ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee09dc5510a775963183d4bde9c36dce2a6863ce", "html_url": "https://github.com/rust-lang/rust/commit/ee09dc5510a775963183d4bde9c36dce2a6863ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee09dc5510a775963183d4bde9c36dce2a6863ce/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fasterthanlime", "id": 7998310, "node_id": "MDQ6VXNlcjc5OTgzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7998310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fasterthanlime", "html_url": "https://github.com/fasterthanlime", "followers_url": "https://api.github.com/users/fasterthanlime/followers", "following_url": "https://api.github.com/users/fasterthanlime/following{/other_user}", "gists_url": "https://api.github.com/users/fasterthanlime/gists{/gist_id}", "starred_url": "https://api.github.com/users/fasterthanlime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fasterthanlime/subscriptions", "organizations_url": "https://api.github.com/users/fasterthanlime/orgs", "repos_url": "https://api.github.com/users/fasterthanlime/repos", "events_url": "https://api.github.com/users/fasterthanlime/events{/privacy}", "received_events_url": "https://api.github.com/users/fasterthanlime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0add21c2bdd89a507771fc344927ef85a816c50", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0add21c2bdd89a507771fc344927ef85a816c50", "html_url": "https://github.com/rust-lang/rust/commit/e0add21c2bdd89a507771fc344927ef85a816c50"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "394bd8b4e282564b8dcfac19b99e50884d1aa3d3", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee09dc5510a775963183d4bde9c36dce2a6863ce/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee09dc5510a775963183d4bde9c36dce2a6863ce/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=ee09dc5510a775963183d4bde9c36dce2a6863ce", "patch": "@@ -312,7 +312,7 @@ impl Step for RustAnalyzer {\n     const DEFAULT: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        run.paths(&[\"src/tools/rust-analyzer\"])\n+        run.path(\"src/tools/rust-analyzer\")\n     }\n \n     fn make_run(run: RunConfig<'_>) {"}, {"sha": "7c37621d417c988dfe8e0d89a9625f63810533d6", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee09dc5510a775963183d4bde9c36dce2a6863ce/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee09dc5510a775963183d4bde9c36dce2a6863ce/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=ee09dc5510a775963183d4bde9c36dce2a6863ce", "patch": "@@ -721,7 +721,7 @@ impl Step for RustAnalyzer {\n             mode: Mode::ToolStd,\n             path: \"src/tools/rust-analyzer\",\n             extra_features: vec![\"rust-analyzer/in-rust-tree\".to_owned()],\n-            is_optional_tool: true,\n+            is_optional_tool: false,\n             source_type: SourceType::InTree,\n         })\n     }"}, {"sha": "c90144509dec5c1c88681a02eae495e8b87b645b", "filename": "src/tools/rust-analyzer/crates/proc-macro-test/build.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ee09dc5510a775963183d4bde9c36dce2a6863ce/src%2Ftools%2Frust-analyzer%2Fcrates%2Fproc-macro-test%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee09dc5510a775963183d4bde9c36dce2a6863ce/src%2Ftools%2Frust-analyzer%2Fcrates%2Fproc-macro-test%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-analyzer%2Fcrates%2Fproc-macro-test%2Fbuild.rs?ref=ee09dc5510a775963183d4bde9c36dce2a6863ce", "patch": "@@ -62,17 +62,19 @@ fn main() {\n         Command::new(toolchain::cargo())\n     };\n \n-    let output = cmd\n+    cmd\n         .current_dir(&staging_dir)\n         .args(&[\"build\", \"-p\", \"proc-macro-test-impl\", \"--message-format\", \"json\"])\n         // Explicit override the target directory to avoid using the same one which the parent\n         // cargo is using, or we'll deadlock.\n         // This can happen when `CARGO_TARGET_DIR` is set or global config forces all cargo\n         // instance to use the same target directory.\n         .arg(\"--target-dir\")\n-        .arg(&target_dir)\n-        .output()\n-        .unwrap();\n+        .arg(&target_dir);\n+\n+    println!(\"Running {:?}\", cmd);\n+\n+    let output = cmd.output().unwrap();\n     if !output.status.success() {\n         println!(\"proc-macro-test-impl failed to build\");\n         println!(\"============ stdout ============\");"}]}