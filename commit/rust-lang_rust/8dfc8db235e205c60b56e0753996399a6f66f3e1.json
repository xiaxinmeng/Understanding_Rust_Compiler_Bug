{"sha": "8dfc8db235e205c60b56e0753996399a6f66f3e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkZmM4ZGIyMzVlMjA1YzYwYjU2ZTA3NTM5OTYzOTlhNmY2NmYzZTE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-09T11:53:44Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-09T11:53:44Z"}, "message": "forgot about multivariant enum casts", "tree": {"sha": "d8c5ed57b40a65c5963fd0159c8c9e24f57a2da3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8c5ed57b40a65c5963fd0159c8c9e24f57a2da3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8dfc8db235e205c60b56e0753996399a6f66f3e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8dfc8db235e205c60b56e0753996399a6f66f3e1", "html_url": "https://github.com/rust-lang/rust/commit/8dfc8db235e205c60b56e0753996399a6f66f3e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8dfc8db235e205c60b56e0753996399a6f66f3e1/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ad303eb07e51ce0c4f9dd6a253ab4e938ab65f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ad303eb07e51ce0c4f9dd6a253ab4e938ab65f0", "html_url": "https://github.com/rust-lang/rust/commit/2ad303eb07e51ce0c4f9dd6a253ab4e938ab65f0"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "6392e0996aec233eaec48a8a645df8fe2de22cb8", "filename": "src/librustc_mir/interpret/cast.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8dfc8db235e205c60b56e0753996399a6f66f3e1/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dfc8db235e205c60b56e0753996399a6f66f3e1/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fcast.rs?ref=8dfc8db235e205c60b56e0753996399a6f66f3e1", "patch": "@@ -139,12 +139,15 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> InterpretCx<'a, 'mir, 'tcx, M>\n             // Floating point\n             Float(FloatTy::F32) => self.cast_from_float(val.to_f32()?, dest_layout.ty),\n             Float(FloatTy::F64) => self.cast_from_float(val.to_f64()?, dest_layout.ty),\n-            // Integer(-like), including fn ptr casts\n+            // Integer(-like), including fn ptr casts and casts from enums that\n+            // are represented as integers (this excludes univariant enums, which\n+            // are handled in `cast` directly).\n             _ => {\n                 assert!(\n-                    src_layout.ty.is_bool() || src_layout.ty.is_char() ||\n-                    src_layout.ty.is_integral()   || src_layout.ty.is_region_ptr() ||\n-                    src_layout.ty.is_unsafe_ptr() || src_layout.ty.is_fn_ptr(),\n+                    src_layout.ty.is_bool()       || src_layout.ty.is_char()     ||\n+                    src_layout.ty.is_enum()       || src_layout.ty.is_integral() ||\n+                    src_layout.ty.is_unsafe_ptr() || src_layout.ty.is_fn_ptr()   ||\n+                    src_layout.ty.is_region_ptr(),\n                     \"Unexpected cast from type {:?}\", src_layout.ty\n                 );\n                 match val.to_bits_or_ptr(src_layout.size, self) {"}]}