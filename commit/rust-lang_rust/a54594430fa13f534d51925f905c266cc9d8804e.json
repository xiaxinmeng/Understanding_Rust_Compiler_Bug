{"sha": "a54594430fa13f534d51925f905c266cc9d8804e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1NDU5NDQzMGZhMTNmNTM0ZDUxOTI1ZjkwNWMyNjZjYzlkODgwNGU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-08-15T22:46:38Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-08-25T13:30:47Z"}, "message": "Don't show associated const value anymore", "tree": {"sha": "8fac89cb2863d7519bf34d577532c20ccf3946e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fac89cb2863d7519bf34d577532c20ccf3946e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a54594430fa13f534d51925f905c266cc9d8804e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a54594430fa13f534d51925f905c266cc9d8804e", "html_url": "https://github.com/rust-lang/rust/commit/a54594430fa13f534d51925f905c266cc9d8804e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a54594430fa13f534d51925f905c266cc9d8804e/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "727eabd68143e968d8826ee29b8ea7792d29fa96", "url": "https://api.github.com/repos/rust-lang/rust/commits/727eabd68143e968d8826ee29b8ea7792d29fa96", "html_url": "https://github.com/rust-lang/rust/commit/727eabd68143e968d8826ee29b8ea7792d29fa96"}], "stats": {"total": 43, "additions": 20, "deletions": 23}, "files": [{"sha": "8d672ffd7bb27c10ca470e1b04b2c8e56cc38d3e", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 12, "deletions": 23, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/a54594430fa13f534d51925f905c266cc9d8804e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a54594430fa13f534d51925f905c266cc9d8804e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=a54594430fa13f534d51925f905c266cc9d8804e", "patch": "@@ -2198,8 +2198,7 @@ fn document(w: &mut fmt::Formatter, cx: &Context, item: &clean::Item) -> fmt::Re\n         info!(\"Documenting {}\", name);\n     }\n     document_stability(w, cx, item)?;\n-    let prefix = render_assoc_const_value(item);\n-    document_full(w, item, cx, &prefix)?;\n+    document_full(w, item, cx, \"\")?;\n     Ok(())\n }\n \n@@ -2231,20 +2230,6 @@ fn document_short(w: &mut fmt::Formatter, cx: &Context, item: &clean::Item, link\n     Ok(())\n }\n \n-fn render_assoc_const_value(item: &clean::Item) -> String {\n-    match item.inner {\n-        clean::AssociatedConstItem(ref ty, Some(ref default)) => {\n-            highlight::render_with_highlighting(\n-                &format!(\"{}: {:#} = {}\", item.name.as_ref().unwrap(), ty, default),\n-                None,\n-                None,\n-                None,\n-            )\n-        }\n-        _ => String::new(),\n-    }\n-}\n-\n fn document_full(w: &mut fmt::Formatter, item: &clean::Item,\n                  cx: &Context, prefix: &str) -> fmt::Result {\n     if let Some(s) = cx.shared.maybe_collapsed_doc_value(item) {\n@@ -3860,7 +3845,13 @@ fn render_impl(w: &mut fmt::Formatter, cx: &Context, i: &Impl, link: AssocItemLi\n                 write!(w, \"<h4 id='{}' class=\\\"{}\\\">\", id, item_type)?;\n                 write!(w, \"<span id='{}' class='invisible'><code>\", ns_id)?;\n                 assoc_const(w, item, ty, default.as_ref(), link.anchor(&id))?;\n-                write!(w, \"</code></span></h4>\\n\")?;\n+                let src = if let Some(l) = (Item { cx, item }).src_href() {\n+                    format!(\"<a class='srclink' href='{}' title='{}'>[src]</a>\",\n+                            l, \"goto source code\")\n+                } else {\n+                    String::new()\n+                };\n+                write!(w, \"</code>{}</span></h4>\\n\", src)?;\n             }\n             clean::AssociatedTypeItem(ref bounds, ref default) => {\n                 let id = cx.derive_id(format!(\"{}.{}\", item_type, name));\n@@ -3875,8 +3866,6 @@ fn render_impl(w: &mut fmt::Formatter, cx: &Context, i: &Impl, link: AssocItemLi\n         }\n \n         if render_method_item || render_mode == RenderMode::Normal {\n-            let prefix = render_assoc_const_value(item);\n-\n             if !is_default_item {\n                 if let Some(t) = trait_ {\n                     // The trait item may have been stripped so we might not\n@@ -3886,23 +3875,23 @@ fn render_impl(w: &mut fmt::Formatter, cx: &Context, i: &Impl, link: AssocItemLi\n                         // because impls can't have a stability.\n                         document_stability(w, cx, it)?;\n                         if item.doc_value().is_some() {\n-                            document_full(w, item, cx, &prefix)?;\n+                            document_full(w, item, cx, \"\")?;\n                         } else if show_def_docs {\n                             // In case the item isn't documented,\n                             // provide short documentation from the trait.\n-                            document_short(w, cx, it, link, &prefix)?;\n+                            document_short(w, cx, it, link, \"\")?;\n                         }\n                     }\n                 } else {\n                     document_stability(w, cx, item)?;\n                     if show_def_docs {\n-                        document_full(w, item, cx, &prefix)?;\n+                        document_full(w, item, cx, \"\")?;\n                     }\n                 }\n             } else {\n                 document_stability(w, cx, item)?;\n                 if show_def_docs {\n-                    document_short(w, cx, item, link, &prefix)?;\n+                    document_short(w, cx, item, link, \"\")?;\n                 }\n             }\n         }"}, {"sha": "5ed91e63cdce952708a58dd186eb68b1022dcc6d", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a54594430fa13f534d51925f905c266cc9d8804e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/a54594430fa13f534d51925f905c266cc9d8804e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=a54594430fa13f534d51925f905c266cc9d8804e", "patch": "@@ -559,6 +559,14 @@ a {\n \ttext-decoration: underline;\n }\n \n+.invisible > .srclink {\n+\tposition: absolute;\n+\ttop: 0;\n+\tright: 0;\n+\tfont-size: 17px;\n+\tfont-weight: normal;\n+}\n+\n .block a.current.crate { font-weight: 500; }\n \n .search-container {"}]}